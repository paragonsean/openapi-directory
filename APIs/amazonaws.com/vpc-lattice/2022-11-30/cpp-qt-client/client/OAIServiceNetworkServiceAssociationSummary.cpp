/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceNetworkServiceAssociationSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceNetworkServiceAssociationSummary::OAIServiceNetworkServiceAssociationSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceNetworkServiceAssociationSummary::OAIServiceNetworkServiceAssociationSummary() {
    this->initializeModel();
}

OAIServiceNetworkServiceAssociationSummary::~OAIServiceNetworkServiceAssociationSummary() {}

void OAIServiceNetworkServiceAssociationSummary::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_custom_domain_name_isSet = false;
    m_custom_domain_name_isValid = false;

    m_dns_entry_isSet = false;
    m_dns_entry_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_service_arn_isSet = false;
    m_service_arn_isValid = false;

    m_service_id_isSet = false;
    m_service_id_isValid = false;

    m_service_name_isSet = false;
    m_service_name_isValid = false;

    m_service_network_arn_isSet = false;
    m_service_network_arn_isValid = false;

    m_service_network_id_isSet = false;
    m_service_network_id_isValid = false;

    m_service_network_name_isSet = false;
    m_service_network_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIServiceNetworkServiceAssociationSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceNetworkServiceAssociationSummary::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_custom_domain_name_isValid = ::OpenAPI::fromJsonValue(m_custom_domain_name, json[QString("customDomainName")]);
    m_custom_domain_name_isSet = !json[QString("customDomainName")].isNull() && m_custom_domain_name_isValid;

    m_dns_entry_isValid = ::OpenAPI::fromJsonValue(m_dns_entry, json[QString("dnsEntry")]);
    m_dns_entry_isSet = !json[QString("dnsEntry")].isNull() && m_dns_entry_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_service_arn_isValid = ::OpenAPI::fromJsonValue(m_service_arn, json[QString("serviceArn")]);
    m_service_arn_isSet = !json[QString("serviceArn")].isNull() && m_service_arn_isValid;

    m_service_id_isValid = ::OpenAPI::fromJsonValue(m_service_id, json[QString("serviceId")]);
    m_service_id_isSet = !json[QString("serviceId")].isNull() && m_service_id_isValid;

    m_service_name_isValid = ::OpenAPI::fromJsonValue(m_service_name, json[QString("serviceName")]);
    m_service_name_isSet = !json[QString("serviceName")].isNull() && m_service_name_isValid;

    m_service_network_arn_isValid = ::OpenAPI::fromJsonValue(m_service_network_arn, json[QString("serviceNetworkArn")]);
    m_service_network_arn_isSet = !json[QString("serviceNetworkArn")].isNull() && m_service_network_arn_isValid;

    m_service_network_id_isValid = ::OpenAPI::fromJsonValue(m_service_network_id, json[QString("serviceNetworkId")]);
    m_service_network_id_isSet = !json[QString("serviceNetworkId")].isNull() && m_service_network_id_isValid;

    m_service_network_name_isValid = ::OpenAPI::fromJsonValue(m_service_network_name, json[QString("serviceNetworkName")]);
    m_service_network_name_isSet = !json[QString("serviceNetworkName")].isNull() && m_service_network_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceNetworkServiceAssociationSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_custom_domain_name_isSet) {
        obj.insert(QString("customDomainName"), ::OpenAPI::toJsonValue(m_custom_domain_name));
    }
    if (m_dns_entry.isSet()) {
        obj.insert(QString("dnsEntry"), ::OpenAPI::toJsonValue(m_dns_entry));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_service_arn_isSet) {
        obj.insert(QString("serviceArn"), ::OpenAPI::toJsonValue(m_service_arn));
    }
    if (m_service_id_isSet) {
        obj.insert(QString("serviceId"), ::OpenAPI::toJsonValue(m_service_id));
    }
    if (m_service_name_isSet) {
        obj.insert(QString("serviceName"), ::OpenAPI::toJsonValue(m_service_name));
    }
    if (m_service_network_arn_isSet) {
        obj.insert(QString("serviceNetworkArn"), ::OpenAPI::toJsonValue(m_service_network_arn));
    }
    if (m_service_network_id_isSet) {
        obj.insert(QString("serviceNetworkId"), ::OpenAPI::toJsonValue(m_service_network_id));
    }
    if (m_service_network_name_isSet) {
        obj.insert(QString("serviceNetworkName"), ::OpenAPI::toJsonValue(m_service_network_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIServiceNetworkServiceAssociationSummary::getArn() const {
    return m_arn;
}
void OAIServiceNetworkServiceAssociationSummary::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_arn_Valid() const{
    return m_arn_isValid;
}

QDateTime OAIServiceNetworkServiceAssociationSummary::getCreatedAt() const {
    return m_created_at;
}
void OAIServiceNetworkServiceAssociationSummary::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::getCreatedBy() const {
    return m_created_by;
}
void OAIServiceNetworkServiceAssociationSummary::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::getCustomDomainName() const {
    return m_custom_domain_name;
}
void OAIServiceNetworkServiceAssociationSummary::setCustomDomainName(const QString &custom_domain_name) {
    m_custom_domain_name = custom_domain_name;
    m_custom_domain_name_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_custom_domain_name_Set() const{
    return m_custom_domain_name_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_custom_domain_name_Valid() const{
    return m_custom_domain_name_isValid;
}

OAIServiceSummary_dnsEntry OAIServiceNetworkServiceAssociationSummary::getDnsEntry() const {
    return m_dns_entry;
}
void OAIServiceNetworkServiceAssociationSummary::setDnsEntry(const OAIServiceSummary_dnsEntry &dns_entry) {
    m_dns_entry = dns_entry;
    m_dns_entry_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_dns_entry_Set() const{
    return m_dns_entry_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_dns_entry_Valid() const{
    return m_dns_entry_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::getId() const {
    return m_id;
}
void OAIServiceNetworkServiceAssociationSummary::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_id_Set() const{
    return m_id_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::getServiceArn() const {
    return m_service_arn;
}
void OAIServiceNetworkServiceAssociationSummary::setServiceArn(const QString &service_arn) {
    m_service_arn = service_arn;
    m_service_arn_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_arn_Set() const{
    return m_service_arn_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_arn_Valid() const{
    return m_service_arn_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::getServiceId() const {
    return m_service_id;
}
void OAIServiceNetworkServiceAssociationSummary::setServiceId(const QString &service_id) {
    m_service_id = service_id;
    m_service_id_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_id_Set() const{
    return m_service_id_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_id_Valid() const{
    return m_service_id_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::getServiceName() const {
    return m_service_name;
}
void OAIServiceNetworkServiceAssociationSummary::setServiceName(const QString &service_name) {
    m_service_name = service_name;
    m_service_name_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_name_Set() const{
    return m_service_name_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_name_Valid() const{
    return m_service_name_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::getServiceNetworkArn() const {
    return m_service_network_arn;
}
void OAIServiceNetworkServiceAssociationSummary::setServiceNetworkArn(const QString &service_network_arn) {
    m_service_network_arn = service_network_arn;
    m_service_network_arn_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_network_arn_Set() const{
    return m_service_network_arn_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_network_arn_Valid() const{
    return m_service_network_arn_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::getServiceNetworkId() const {
    return m_service_network_id;
}
void OAIServiceNetworkServiceAssociationSummary::setServiceNetworkId(const QString &service_network_id) {
    m_service_network_id = service_network_id;
    m_service_network_id_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_network_id_Set() const{
    return m_service_network_id_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_network_id_Valid() const{
    return m_service_network_id_isValid;
}

QString OAIServiceNetworkServiceAssociationSummary::getServiceNetworkName() const {
    return m_service_network_name;
}
void OAIServiceNetworkServiceAssociationSummary::setServiceNetworkName(const QString &service_network_name) {
    m_service_network_name = service_network_name;
    m_service_network_name_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_network_name_Set() const{
    return m_service_network_name_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_service_network_name_Valid() const{
    return m_service_network_name_isValid;
}

OAIServiceNetworkServiceAssociationStatus OAIServiceNetworkServiceAssociationSummary::getStatus() const {
    return m_status;
}
void OAIServiceNetworkServiceAssociationSummary::setStatus(const OAIServiceNetworkServiceAssociationStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIServiceNetworkServiceAssociationSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAIServiceNetworkServiceAssociationSummary::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIServiceNetworkServiceAssociationSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dns_entry.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_network_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_network_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_network_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceNetworkServiceAssociationSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
