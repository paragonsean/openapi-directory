/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateServiceNetworkVpcAssociationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateServiceNetworkVpcAssociationRequest::OAIUpdateServiceNetworkVpcAssociationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateServiceNetworkVpcAssociationRequest::OAIUpdateServiceNetworkVpcAssociationRequest() {
    this->initializeModel();
}

OAIUpdateServiceNetworkVpcAssociationRequest::~OAIUpdateServiceNetworkVpcAssociationRequest() {}

void OAIUpdateServiceNetworkVpcAssociationRequest::initializeModel() {

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;
}

void OAIUpdateServiceNetworkVpcAssociationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateServiceNetworkVpcAssociationRequest::fromJsonObject(QJsonObject json) {

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("securityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("securityGroupIds")].isNull() && m_security_group_ids_isValid;
}

QString OAIUpdateServiceNetworkVpcAssociationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateServiceNetworkVpcAssociationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("securityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    return obj;
}

QList OAIUpdateServiceNetworkVpcAssociationRequest::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAIUpdateServiceNetworkVpcAssociationRequest::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAIUpdateServiceNetworkVpcAssociationRequest::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAIUpdateServiceNetworkVpcAssociationRequest::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

bool OAIUpdateServiceNetworkVpcAssociationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateServiceNetworkVpcAssociationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_security_group_ids_isValid && true;
}

} // namespace OpenAPI
