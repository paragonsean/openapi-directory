/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTargetGroup_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTargetGroup_request::OAIUpdateTargetGroup_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTargetGroup_request::OAIUpdateTargetGroup_request() {
    this->initializeModel();
}

OAIUpdateTargetGroup_request::~OAIUpdateTargetGroup_request() {}

void OAIUpdateTargetGroup_request::initializeModel() {

    m_health_check_isSet = false;
    m_health_check_isValid = false;
}

void OAIUpdateTargetGroup_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTargetGroup_request::fromJsonObject(QJsonObject json) {

    m_health_check_isValid = ::OpenAPI::fromJsonValue(m_health_check, json[QString("healthCheck")]);
    m_health_check_isSet = !json[QString("healthCheck")].isNull() && m_health_check_isValid;
}

QString OAIUpdateTargetGroup_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTargetGroup_request::asJsonObject() const {
    QJsonObject obj;
    if (m_health_check.isSet()) {
        obj.insert(QString("healthCheck"), ::OpenAPI::toJsonValue(m_health_check));
    }
    return obj;
}

OAIUpdateTargetGroup_request_healthCheck OAIUpdateTargetGroup_request::getHealthCheck() const {
    return m_health_check;
}
void OAIUpdateTargetGroup_request::setHealthCheck(const OAIUpdateTargetGroup_request_healthCheck &health_check) {
    m_health_check = health_check;
    m_health_check_isSet = true;
}

bool OAIUpdateTargetGroup_request::is_health_check_Set() const{
    return m_health_check_isSet;
}

bool OAIUpdateTargetGroup_request::is_health_check_Valid() const{
    return m_health_check_isValid;
}

bool OAIUpdateTargetGroup_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_health_check.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTargetGroup_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_health_check_isValid && true;
}

} // namespace OpenAPI
