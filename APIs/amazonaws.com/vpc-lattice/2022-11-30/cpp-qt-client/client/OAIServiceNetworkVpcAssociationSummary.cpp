/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceNetworkVpcAssociationSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceNetworkVpcAssociationSummary::OAIServiceNetworkVpcAssociationSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceNetworkVpcAssociationSummary::OAIServiceNetworkVpcAssociationSummary() {
    this->initializeModel();
}

OAIServiceNetworkVpcAssociationSummary::~OAIServiceNetworkVpcAssociationSummary() {}

void OAIServiceNetworkVpcAssociationSummary::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_updated_at_isSet = false;
    m_last_updated_at_isValid = false;

    m_service_network_arn_isSet = false;
    m_service_network_arn_isValid = false;

    m_service_network_id_isSet = false;
    m_service_network_id_isValid = false;

    m_service_network_name_isSet = false;
    m_service_network_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_vpc_id_isSet = false;
    m_vpc_id_isValid = false;
}

void OAIServiceNetworkVpcAssociationSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceNetworkVpcAssociationSummary::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_updated_at_isValid = ::OpenAPI::fromJsonValue(m_last_updated_at, json[QString("lastUpdatedAt")]);
    m_last_updated_at_isSet = !json[QString("lastUpdatedAt")].isNull() && m_last_updated_at_isValid;

    m_service_network_arn_isValid = ::OpenAPI::fromJsonValue(m_service_network_arn, json[QString("serviceNetworkArn")]);
    m_service_network_arn_isSet = !json[QString("serviceNetworkArn")].isNull() && m_service_network_arn_isValid;

    m_service_network_id_isValid = ::OpenAPI::fromJsonValue(m_service_network_id, json[QString("serviceNetworkId")]);
    m_service_network_id_isSet = !json[QString("serviceNetworkId")].isNull() && m_service_network_id_isValid;

    m_service_network_name_isValid = ::OpenAPI::fromJsonValue(m_service_network_name, json[QString("serviceNetworkName")]);
    m_service_network_name_isSet = !json[QString("serviceNetworkName")].isNull() && m_service_network_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_vpc_id_isValid = ::OpenAPI::fromJsonValue(m_vpc_id, json[QString("vpcId")]);
    m_vpc_id_isSet = !json[QString("vpcId")].isNull() && m_vpc_id_isValid;
}

QString OAIServiceNetworkVpcAssociationSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceNetworkVpcAssociationSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_updated_at_isSet) {
        obj.insert(QString("lastUpdatedAt"), ::OpenAPI::toJsonValue(m_last_updated_at));
    }
    if (m_service_network_arn_isSet) {
        obj.insert(QString("serviceNetworkArn"), ::OpenAPI::toJsonValue(m_service_network_arn));
    }
    if (m_service_network_id_isSet) {
        obj.insert(QString("serviceNetworkId"), ::OpenAPI::toJsonValue(m_service_network_id));
    }
    if (m_service_network_name_isSet) {
        obj.insert(QString("serviceNetworkName"), ::OpenAPI::toJsonValue(m_service_network_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_vpc_id_isSet) {
        obj.insert(QString("vpcId"), ::OpenAPI::toJsonValue(m_vpc_id));
    }
    return obj;
}

QString OAIServiceNetworkVpcAssociationSummary::getArn() const {
    return m_arn;
}
void OAIServiceNetworkVpcAssociationSummary::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_arn_Valid() const{
    return m_arn_isValid;
}

QDateTime OAIServiceNetworkVpcAssociationSummary::getCreatedAt() const {
    return m_created_at;
}
void OAIServiceNetworkVpcAssociationSummary::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIServiceNetworkVpcAssociationSummary::getCreatedBy() const {
    return m_created_by;
}
void OAIServiceNetworkVpcAssociationSummary::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QString OAIServiceNetworkVpcAssociationSummary::getId() const {
    return m_id;
}
void OAIServiceNetworkVpcAssociationSummary::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_id_Set() const{
    return m_id_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIServiceNetworkVpcAssociationSummary::getLastUpdatedAt() const {
    return m_last_updated_at;
}
void OAIServiceNetworkVpcAssociationSummary::setLastUpdatedAt(const QDateTime &last_updated_at) {
    m_last_updated_at = last_updated_at;
    m_last_updated_at_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_last_updated_at_Set() const{
    return m_last_updated_at_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_last_updated_at_Valid() const{
    return m_last_updated_at_isValid;
}

QString OAIServiceNetworkVpcAssociationSummary::getServiceNetworkArn() const {
    return m_service_network_arn;
}
void OAIServiceNetworkVpcAssociationSummary::setServiceNetworkArn(const QString &service_network_arn) {
    m_service_network_arn = service_network_arn;
    m_service_network_arn_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_service_network_arn_Set() const{
    return m_service_network_arn_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_service_network_arn_Valid() const{
    return m_service_network_arn_isValid;
}

QString OAIServiceNetworkVpcAssociationSummary::getServiceNetworkId() const {
    return m_service_network_id;
}
void OAIServiceNetworkVpcAssociationSummary::setServiceNetworkId(const QString &service_network_id) {
    m_service_network_id = service_network_id;
    m_service_network_id_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_service_network_id_Set() const{
    return m_service_network_id_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_service_network_id_Valid() const{
    return m_service_network_id_isValid;
}

QString OAIServiceNetworkVpcAssociationSummary::getServiceNetworkName() const {
    return m_service_network_name;
}
void OAIServiceNetworkVpcAssociationSummary::setServiceNetworkName(const QString &service_network_name) {
    m_service_network_name = service_network_name;
    m_service_network_name_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_service_network_name_Set() const{
    return m_service_network_name_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_service_network_name_Valid() const{
    return m_service_network_name_isValid;
}

OAIServiceNetworkVpcAssociationStatus OAIServiceNetworkVpcAssociationSummary::getStatus() const {
    return m_status;
}
void OAIServiceNetworkVpcAssociationSummary::setStatus(const OAIServiceNetworkVpcAssociationStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIServiceNetworkVpcAssociationSummary::getVpcId() const {
    return m_vpc_id;
}
void OAIServiceNetworkVpcAssociationSummary::setVpcId(const QString &vpc_id) {
    m_vpc_id = vpc_id;
    m_vpc_id_isSet = true;
}

bool OAIServiceNetworkVpcAssociationSummary::is_vpc_id_Set() const{
    return m_vpc_id_isSet;
}

bool OAIServiceNetworkVpcAssociationSummary::is_vpc_id_Valid() const{
    return m_vpc_id_isValid;
}

bool OAIServiceNetworkVpcAssociationSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_network_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_network_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_network_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceNetworkVpcAssociationSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
