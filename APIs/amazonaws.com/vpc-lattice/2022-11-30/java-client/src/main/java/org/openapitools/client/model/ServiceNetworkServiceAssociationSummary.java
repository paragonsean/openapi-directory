/*
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ServiceNetworkServiceAssociationStatus;
import org.openapitools.client.model.ServiceSummaryDnsEntry;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Summary information about the association between a service network and a service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:37.168630-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServiceNetworkServiceAssociationSummary {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CUSTOM_DOMAIN_NAME = "customDomainName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DOMAIN_NAME)
  private String customDomainName;

  public static final String SERIALIZED_NAME_DNS_ENTRY = "dnsEntry";
  @SerializedName(SERIALIZED_NAME_DNS_ENTRY)
  private ServiceSummaryDnsEntry dnsEntry;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SERVICE_ARN = "serviceArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ARN)
  private String serviceArn;

  public static final String SERIALIZED_NAME_SERVICE_ID = "serviceId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private String serviceId;

  public static final String SERIALIZED_NAME_SERVICE_NAME = "serviceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private String serviceName;

  public static final String SERIALIZED_NAME_SERVICE_NETWORK_ARN = "serviceNetworkArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_NETWORK_ARN)
  private String serviceNetworkArn;

  public static final String SERIALIZED_NAME_SERVICE_NETWORK_ID = "serviceNetworkId";
  @SerializedName(SERIALIZED_NAME_SERVICE_NETWORK_ID)
  private String serviceNetworkId;

  public static final String SERIALIZED_NAME_SERVICE_NETWORK_NAME = "serviceNetworkName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NETWORK_NAME)
  private String serviceNetworkName;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ServiceNetworkServiceAssociationStatus status;

  public ServiceNetworkServiceAssociationSummary() {
  }

  public ServiceNetworkServiceAssociationSummary arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public ServiceNetworkServiceAssociationSummary createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public ServiceNetworkServiceAssociationSummary createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public ServiceNetworkServiceAssociationSummary customDomainName(String customDomainName) {
    this.customDomainName = customDomainName;
    return this;
  }

  /**
   * Get customDomainName
   * @return customDomainName
   */
  @javax.annotation.Nullable
  public String getCustomDomainName() {
    return customDomainName;
  }

  public void setCustomDomainName(String customDomainName) {
    this.customDomainName = customDomainName;
  }


  public ServiceNetworkServiceAssociationSummary dnsEntry(ServiceSummaryDnsEntry dnsEntry) {
    this.dnsEntry = dnsEntry;
    return this;
  }

  /**
   * Get dnsEntry
   * @return dnsEntry
   */
  @javax.annotation.Nullable
  public ServiceSummaryDnsEntry getDnsEntry() {
    return dnsEntry;
  }

  public void setDnsEntry(ServiceSummaryDnsEntry dnsEntry) {
    this.dnsEntry = dnsEntry;
  }


  public ServiceNetworkServiceAssociationSummary id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ServiceNetworkServiceAssociationSummary serviceArn(String serviceArn) {
    this.serviceArn = serviceArn;
    return this;
  }

  /**
   * Get serviceArn
   * @return serviceArn
   */
  @javax.annotation.Nullable
  public String getServiceArn() {
    return serviceArn;
  }

  public void setServiceArn(String serviceArn) {
    this.serviceArn = serviceArn;
  }


  public ServiceNetworkServiceAssociationSummary serviceId(String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * Get serviceId
   * @return serviceId
   */
  @javax.annotation.Nullable
  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }


  public ServiceNetworkServiceAssociationSummary serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Get serviceName
   * @return serviceName
   */
  @javax.annotation.Nullable
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public ServiceNetworkServiceAssociationSummary serviceNetworkArn(String serviceNetworkArn) {
    this.serviceNetworkArn = serviceNetworkArn;
    return this;
  }

  /**
   * Get serviceNetworkArn
   * @return serviceNetworkArn
   */
  @javax.annotation.Nullable
  public String getServiceNetworkArn() {
    return serviceNetworkArn;
  }

  public void setServiceNetworkArn(String serviceNetworkArn) {
    this.serviceNetworkArn = serviceNetworkArn;
  }


  public ServiceNetworkServiceAssociationSummary serviceNetworkId(String serviceNetworkId) {
    this.serviceNetworkId = serviceNetworkId;
    return this;
  }

  /**
   * Get serviceNetworkId
   * @return serviceNetworkId
   */
  @javax.annotation.Nullable
  public String getServiceNetworkId() {
    return serviceNetworkId;
  }

  public void setServiceNetworkId(String serviceNetworkId) {
    this.serviceNetworkId = serviceNetworkId;
  }


  public ServiceNetworkServiceAssociationSummary serviceNetworkName(String serviceNetworkName) {
    this.serviceNetworkName = serviceNetworkName;
    return this;
  }

  /**
   * Get serviceNetworkName
   * @return serviceNetworkName
   */
  @javax.annotation.Nullable
  public String getServiceNetworkName() {
    return serviceNetworkName;
  }

  public void setServiceNetworkName(String serviceNetworkName) {
    this.serviceNetworkName = serviceNetworkName;
  }


  public ServiceNetworkServiceAssociationSummary status(ServiceNetworkServiceAssociationStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ServiceNetworkServiceAssociationStatus getStatus() {
    return status;
  }

  public void setStatus(ServiceNetworkServiceAssociationStatus status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceNetworkServiceAssociationSummary serviceNetworkServiceAssociationSummary = (ServiceNetworkServiceAssociationSummary) o;
    return Objects.equals(this.arn, serviceNetworkServiceAssociationSummary.arn) &&
        Objects.equals(this.createdAt, serviceNetworkServiceAssociationSummary.createdAt) &&
        Objects.equals(this.createdBy, serviceNetworkServiceAssociationSummary.createdBy) &&
        Objects.equals(this.customDomainName, serviceNetworkServiceAssociationSummary.customDomainName) &&
        Objects.equals(this.dnsEntry, serviceNetworkServiceAssociationSummary.dnsEntry) &&
        Objects.equals(this.id, serviceNetworkServiceAssociationSummary.id) &&
        Objects.equals(this.serviceArn, serviceNetworkServiceAssociationSummary.serviceArn) &&
        Objects.equals(this.serviceId, serviceNetworkServiceAssociationSummary.serviceId) &&
        Objects.equals(this.serviceName, serviceNetworkServiceAssociationSummary.serviceName) &&
        Objects.equals(this.serviceNetworkArn, serviceNetworkServiceAssociationSummary.serviceNetworkArn) &&
        Objects.equals(this.serviceNetworkId, serviceNetworkServiceAssociationSummary.serviceNetworkId) &&
        Objects.equals(this.serviceNetworkName, serviceNetworkServiceAssociationSummary.serviceNetworkName) &&
        Objects.equals(this.status, serviceNetworkServiceAssociationSummary.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, createdAt, createdBy, customDomainName, dnsEntry, id, serviceArn, serviceId, serviceName, serviceNetworkArn, serviceNetworkId, serviceNetworkName, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceNetworkServiceAssociationSummary {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    customDomainName: ").append(toIndentedString(customDomainName)).append("\n");
    sb.append("    dnsEntry: ").append(toIndentedString(dnsEntry)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    serviceArn: ").append(toIndentedString(serviceArn)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    serviceNetworkArn: ").append(toIndentedString(serviceNetworkArn)).append("\n");
    sb.append("    serviceNetworkId: ").append(toIndentedString(serviceNetworkId)).append("\n");
    sb.append("    serviceNetworkName: ").append(toIndentedString(serviceNetworkName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("createdAt");
    openapiFields.add("createdBy");
    openapiFields.add("customDomainName");
    openapiFields.add("dnsEntry");
    openapiFields.add("id");
    openapiFields.add("serviceArn");
    openapiFields.add("serviceId");
    openapiFields.add("serviceName");
    openapiFields.add("serviceNetworkArn");
    openapiFields.add("serviceNetworkId");
    openapiFields.add("serviceNetworkName");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServiceNetworkServiceAssociationSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServiceNetworkServiceAssociationSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServiceNetworkServiceAssociationSummary is not found in the empty JSON string", ServiceNetworkServiceAssociationSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServiceNetworkServiceAssociationSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServiceNetworkServiceAssociationSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("createdBy"));
      }
      // validate the optional field `customDomainName`
      if (jsonObj.get("customDomainName") != null && !jsonObj.get("customDomainName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("customDomainName"));
      }
      // validate the optional field `dnsEntry`
      if (jsonObj.get("dnsEntry") != null && !jsonObj.get("dnsEntry").isJsonNull()) {
        ServiceSummaryDnsEntry.validateJsonElement(jsonObj.get("dnsEntry"));
      }
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `serviceArn`
      if (jsonObj.get("serviceArn") != null && !jsonObj.get("serviceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceArn"));
      }
      // validate the optional field `serviceId`
      if (jsonObj.get("serviceId") != null && !jsonObj.get("serviceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceId"));
      }
      // validate the optional field `serviceName`
      if (jsonObj.get("serviceName") != null && !jsonObj.get("serviceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceName"));
      }
      // validate the optional field `serviceNetworkArn`
      if (jsonObj.get("serviceNetworkArn") != null && !jsonObj.get("serviceNetworkArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceNetworkArn"));
      }
      // validate the optional field `serviceNetworkId`
      if (jsonObj.get("serviceNetworkId") != null && !jsonObj.get("serviceNetworkId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceNetworkId"));
      }
      // validate the optional field `serviceNetworkName`
      if (jsonObj.get("serviceNetworkName") != null && !jsonObj.get("serviceNetworkName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceNetworkName"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ServiceNetworkServiceAssociationStatus.validateJsonElement(jsonObj.get("status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServiceNetworkServiceAssociationSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServiceNetworkServiceAssociationSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServiceNetworkServiceAssociationSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServiceNetworkServiceAssociationSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<ServiceNetworkServiceAssociationSummary>() {
           @Override
           public void write(JsonWriter out, ServiceNetworkServiceAssociationSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServiceNetworkServiceAssociationSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServiceNetworkServiceAssociationSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServiceNetworkServiceAssociationSummary
   * @throws IOException if the JSON string is invalid with respect to ServiceNetworkServiceAssociationSummary
   */
  public static ServiceNetworkServiceAssociationSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServiceNetworkServiceAssociationSummary.class);
  }

  /**
   * Convert an instance of ServiceNetworkServiceAssociationSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

