openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon VPC Lattice is a fully managed application networking service\
    \ that you use to connect, secure, and monitor all of your services across multiple\
    \ accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects\
    \ your microservices and legacy services within a logical boundary, so that you\
    \ can discover and manage them more efficiently. For more information, see the\
    \ <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice\
    \ User Guide</a> "
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon VPC Lattice
  version: 2022-11-30
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: vpc-lattice
  x-aws-signingName: vpc-lattice
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/vpc-lattice-2022-11-30.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/vpc-lattice/
servers:
- description: The Amazon VPC Lattice multi-region endpoint
  url: "http://vpc-lattice.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon VPC Lattice multi-region endpoint
  url: "https://vpc-lattice.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon VPC Lattice endpoint for China (Beijing) and China (Ningxia)
  url: "http://vpc-lattice.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon VPC Lattice endpoint for China (Beijing) and China (Ningxia)
  url: "https://vpc-lattice.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /accesslogsubscriptions:
    post:
      description: "Enables access logs to be sent to Amazon CloudWatch, Amazon S3,\
        \ and Amazon Kinesis Data Firehose. The service network owner can use the\
        \ access logs to audit the services in the network. The service network owner\
        \ will only see access logs from clients and services that are associated\
        \ with their service network. Access log entries represent traffic originated\
        \ from VPCs associated with that network. For more information, see <a href=\"\
        https://docs.aws.amazon.com/vpc-lattice/latest/ug/monitoring-access-logs.html\"\
        >Access logs</a> in the <i>Amazon VPC Lattice User Guide</i>."
      operationId: create_access_log_subscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessLogSubscription_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccessLogSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /accesslogsubscriptions#resourceIdentifier:
    get:
      description: Lists all access log subscriptions for the specified service network
        or service.
      operationId: list_access_log_subscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The ID or Amazon Resource Name (ARN) of the service network or
          service.
        explode: true
        in: query
        name: resourceIdentifier
        required: true
        schema:
          maxLength: 200
          minLength: 17
          pattern: "^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessLogSubscriptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /accesslogsubscriptions/{accessLogSubscriptionIdentifier}:
    delete:
      description: Deletes the specified access log subscription.
      operationId: delete_access_log_subscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the access log subscription.
        explode: false
        in: path
        name: accessLogSubscriptionIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((als-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:accesslogsubscription/als-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccessLogSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about the specified access log subscription.
      operationId: get_access_log_subscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the access log subscription.
        explode: false
        in: path
        name: accessLogSubscriptionIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((als-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:accesslogsubscription/als-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessLogSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates the specified access log subscription.
      operationId: update_access_log_subscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the access log subscription.
        explode: false
        in: path
        name: accessLogSubscriptionIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((als-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:accesslogsubscription/als-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessLogSubscription_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccessLogSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /authpolicy/{resourceIdentifier}:
    delete:
      description: "Deletes the specified auth policy. If an auth is set to <code>AWS_IAM</code>\
        \ and the auth policy is deleted, all requests will be denied by default.\
        \ If you are trying to remove the auth policy completely, you must set the\
        \ auth_type to <code>NONE</code>. If auth is enabled on the resource, but\
        \ no auth policy is set, all requests will be denied."
      operationId: delete_auth_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceIdentifier
        required: true
        schema:
          maxLength: 200
          minLength: 17
          pattern: "^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAuthPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about the auth policy for the specified service
        or service network.
      operationId: get_auth_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service network or
          service.
        explode: false
        in: path
        name: resourceIdentifier
        required: true
        schema:
          maxLength: 200
          minLength: 17
          pattern: "^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Creates or updates the auth policy. The policy string in JSON must
        not contain newlines or blank lines.
      operationId: put_auth_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service network or
          service for which the policy is created.
        explode: false
        in: path
        name: resourceIdentifier
        required: true
        schema:
          maxLength: 200
          minLength: 17
          pattern: "^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAuthPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAuthPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /resourcepolicy/{resourceArn}:
    delete:
      description: Deletes the specified resource policy.
      operationId: delete_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 200
          minLength: 20
          pattern: "^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about the resource policy. The resource policy
        is an IAM policy created on behalf of the resource owner when they share a
        resource.
      operationId: get_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the service network or service.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 200
          minLength: 20
          pattern: "^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Attaches a resource-based permission policy to a service or service
        network. The policy must contain the same actions and condition statements
        as the Amazon Web Services Resource Access Manager permission for sharing
        services and service networks.
      operationId: put_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service network or
          service for which the policy is created.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 200
          minLength: 20
          pattern: "^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /servicenetworks:
    get:
      description: Lists the service networks owned by the caller account or shared
        with the caller account. Also includes the account ID in the ARN to show which
        account owns the service network.
      operationId: list_service_networks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceNetworksResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates a service network. A service network is a logical boundary\
        \ for a collection of services. You can associate services and VPCs with a\
        \ service network.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-networks.html\"\
        >Service networks</a> in the <i>Amazon VPC Lattice User Guide</i>.</p>"
      operationId: create_service_network
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceNetwork_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceNetworkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /servicenetworks/{serviceNetworkIdentifier}:
    delete:
      description: "Deletes a service network. You can only delete the service network\
        \ if there is no service or VPC associated with it. If you delete a service\
        \ network, all resources related to the service network, such as the resource\
        \ policy, auth policy, and access log subscriptions, are also deleted. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-networks.html#delete-service-network\"\
        >Delete a service network</a> in the <i>Amazon VPC Lattice User Guide</i>."
      operationId: delete_service_network
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) or ID of the service network.
        explode: false
        in: path
        name: serviceNetworkIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 3
          pattern: "^((sn-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetwork/sn-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceNetworkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about the specified service network.
      operationId: get_service_network
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service network.
        explode: false
        in: path
        name: serviceNetworkIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 3
          pattern: "^((sn-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetwork/sn-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceNetworkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates the specified service network.
      operationId: update_service_network
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service network.
        explode: false
        in: path
        name: serviceNetworkIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 3
          pattern: "^((sn-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetwork/sn-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceNetwork_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceNetworkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /servicenetworkserviceassociations:
    get:
      description: "<p>Lists the associations between the service network and the\
        \ service. You can filter the list either by service or service network. You\
        \ must provide either the service network identifier or the service identifier.</p>\
        \ <p>Every association in Amazon VPC Lattice is given a unique Amazon Resource\
        \ Name (ARN), such as when a service network is associated with a VPC or when\
        \ a service is associated with a service network. If the association is for\
        \ a resource that is shared with another account, the association will include\
        \ the local account ID as the prefix in the ARN for each account the resource\
        \ is shared with.</p>"
      operationId: list_service_network_service_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: true
        in: query
        name: serviceIdentifier
        required: false
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: form
      - description: The ID or Amazon Resource Name (ARN) of the service network.
        explode: true
        in: query
        name: serviceNetworkIdentifier
        required: false
        schema:
          maxLength: 2048
          minLength: 3
          pattern: "^((sn-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetwork/sn-[0-9a-z]{17}))$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceNetworkServiceAssociationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Associates a service with a service network.</p> <p>You can't\
        \ use this operation if the service and service network are already associated\
        \ or if there is a disassociation or deletion in progress. If the association\
        \ fails, you can retry the operation by deleting the association and recreating\
        \ it.</p> <p>You cannot associate a service and service network that are shared\
        \ with a caller. The caller must own either the service or the service network.</p>\
        \ <p>As a result of this operation, the association is created in the service\
        \ network account and the association owner account.</p>"
      operationId: create_service_network_service_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceNetworkServiceAssociation_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceNetworkServiceAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /servicenetworkserviceassociations/{serviceNetworkServiceAssociationIdentifier}:
    delete:
      description: Deletes the association between a specified service and the specific
        service network. This request will fail if an association is still in progress.
      operationId: delete_service_network_service_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the association.
        explode: false
        in: path
        name: serviceNetworkServiceAssociationIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((snsa-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceNetworkServiceAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about the specified association between a
        service network and a service.
      operationId: get_service_network_service_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the association.
        explode: false
        in: path
        name: serviceNetworkServiceAssociationIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((snsa-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceNetworkServiceAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /servicenetworkvpcassociations:
    get:
      description: Lists the service network and VPC associations. You can filter
        the list either by VPC or service network. You must provide either the service
        network identifier or the VPC identifier.
      operationId: list_service_network_vpc_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The ID or Amazon Resource Name (ARN) of the service network.
        explode: true
        in: query
        name: serviceNetworkIdentifier
        required: false
        schema:
          maxLength: 2048
          minLength: 3
          pattern: "^((sn-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetwork/sn-[0-9a-z]{17}))$"
          type: string
        style: form
      - description: The ID or Amazon Resource Name (ARN) of the VPC.
        explode: true
        in: query
        name: vpcIdentifier
        required: false
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceNetworkVpcAssociationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Associates a VPC with a service network. When you associate\
        \ a VPC with the service network, it enables all the resources within that\
        \ VPC to be clients and communicate with other services in the service network.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-network-associations.html#service-network-vpc-associations\"\
        >Manage VPC associations</a> in the <i>Amazon VPC Lattice User Guide</i>.</p>\
        \ <p>You can't use this operation if there is a disassociation in progress.\
        \ If the association fails, retry by deleting the association and recreating\
        \ it.</p> <p>As a result of this operation, the association gets created in\
        \ the service network account and the VPC owner account.</p> <p>If you add\
        \ a security group to the service network and VPC association, the association\
        \ must continue to always have at least one security group. You can add or\
        \ edit security groups at any time. However, to remove all security groups,\
        \ you must first delete the association and recreate it without security groups.</p>"
      operationId: create_service_network_vpc_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceNetworkVpcAssociation_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceNetworkVpcAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /servicenetworkvpcassociations/{serviceNetworkVpcAssociationIdentifier}:
    delete:
      description: Disassociates the VPC from the service network. You can't disassociate
        the VPC if there is a create or update association in progress.
      operationId: delete_service_network_vpc_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the association.
        explode: false
        in: path
        name: serviceNetworkVpcAssociationIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((snva-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceNetworkVpcAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about the association between a service network
        and a VPC.
      operationId: get_service_network_vpc_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the association.
        explode: false
        in: path
        name: serviceNetworkVpcAssociationIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((snva-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceNetworkVpcAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: "Updates the service network and VPC association. If you add a\
        \ security group to the service network and VPC association, the association\
        \ must continue to always have at least one security group. You can add or\
        \ edit security groups at any time. However, to remove all security groups,\
        \ you must first delete the association and recreate it without security groups."
      operationId: update_service_network_vpc_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the association.
        explode: false
        in: path
        name: serviceNetworkVpcAssociationIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((snva-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceNetworkVpcAssociation_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceNetworkVpcAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /services:
    get:
      description: Lists the services owned by the caller account or shared with the
        caller account.
      operationId: list_services
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates a service. A service is any software application that\
        \ can run on instances containers, or serverless functions within an account\
        \ or virtual private cloud (VPC).</p> <p>For more information, see <a href=\"\
        https://docs.aws.amazon.com/vpc-lattice/latest/ug/services.html\">Services</a>\
        \ in the <i>Amazon VPC Lattice User Guide</i>.</p>"
      operationId: create_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateService_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /services/{serviceIdentifier}:
    delete:
      description: "Deletes a service. A service can't be deleted if it's associated\
        \ with a service network. If you delete a service, all resources related to\
        \ the service, such as the resource policy, auth policy, listeners, listener\
        \ rules, and access log subscriptions, are also deleted. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/services.html#delete-service\"\
        >Delete a service</a> in the <i>Amazon VPC Lattice User Guide</i>."
      operationId: delete_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about the specified service.
      operationId: get_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates the specified service.
      operationId: update_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateService_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /services/{serviceIdentifier}/listeners:
    get:
      description: Lists the listeners for the specified service.
      operationId: list_listeners
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListListenersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Creates a listener for a service. Before you start using your\
        \ Amazon VPC Lattice service, you must add one or more listeners. A listener\
        \ is a process that checks for connection requests to your services. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/listeners.html\"\
        >Listeners</a> in the <i>Amazon VPC Lattice User Guide</i>."
      operationId: create_listener
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateListener_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateListenerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /services/{serviceIdentifier}/listeners/{listenerIdentifier}:
    delete:
      description: Deletes the specified listener.
      operationId: delete_listener
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener.
        explode: false
        in: path
        name: listenerIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteListenerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about the specified listener for the specified
        service.
      operationId: get_listener
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener.
        explode: false
        in: path
        name: listenerIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetListenerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates the specified listener for the specified service.
      operationId: update_listener
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener.
        explode: false
        in: path
        name: listenerIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateListener_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateListenerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules:
    get:
      description: Lists the rules for the listener.
      operationId: list_rules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener.
        explode: false
        in: path
        name: listenerIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: 'Updates the listener rules in a batch. You can use this operation
        to change the priority of listener rules. This can be useful when bulk updating
        or swapping rule priority. '
      operationId: batch_update_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener.
        explode: false
        in: path
        name: listenerIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateRule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    post:
      description: "Creates a listener rule. Each listener has a default rule for\
        \ checking connection requests, but you can define additional rules. Each\
        \ rule consists of a priority, one or more actions, and one or more conditions.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/listeners.html#listener-rules\"\
        >Listener rules</a> in the <i>Amazon VPC Lattice User Guide</i>."
      operationId: create_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener.
        explode: false
        in: path
        name: listenerIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRule_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules/{ruleIdentifier}:
    delete:
      description: "<p>Deletes a listener rule. Each listener has a default rule for\
        \ checking connection requests, but you can define additional rules. Each\
        \ rule consists of a priority, one or more actions, and one or more conditions.\
        \ You can delete additional listener rules, but you cannot delete the default\
        \ rule.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/listeners.html#listener-rules\"\
        >Listener rules</a> in the <i>Amazon VPC Lattice User Guide</i>.</p>"
      operationId: delete_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener.
        explode: false
        in: path
        name: listenerIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the rule.
        explode: false
        in: path
        name: ruleIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((rule-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieves information about listener rules. You can also retrieve\
        \ information about the default listener rule. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/listeners.html#listener-rules\"\
        >Listener rules</a> in the <i>Amazon VPC Lattice User Guide</i>."
      operationId: get_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener.
        explode: false
        in: path
        name: listenerIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener rule.
        explode: false
        in: path
        name: ruleIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((rule-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: "Updates a rule for the listener. You can't modify a default listener\
        \ rule. To modify a default listener rule, use <code>UpdateListener</code>."
      operationId: update_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the listener.
        explode: false
        in: path
        name: listenerIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the rule.
        explode: false
        in: path
        name: ruleIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^((rule-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$))$"
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: false
        in: path
        name: serviceIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}:
    get:
      description: Lists the tags for the specified resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1224
          minLength: 0
          pattern: "^arn:[a-z0-9][-.a-z0-9]{0,62}:vpc-lattice:([a-z0-9][-.a-z0-9]{0,62})?:\\\
            d{12}?:[^/].{0,1023}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Adds the specified tags to the specified resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1224
          minLength: 0
          pattern: "^arn:[a-z0-9][-.a-z0-9]{0,62}:vpc-lattice:([a-z0-9][-.a-z0-9]{0,62})?:\\\
            d{12}?:[^/].{0,1023}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes the specified tags from the specified resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1224
          minLength: 0
          pattern: "^arn:[a-z0-9][-.a-z0-9]{0,62}:vpc-lattice:([a-z0-9][-.a-z0-9]{0,62})?:\\\
            d{12}?:[^/].{0,1023}$"
          type: string
        style: simple
      - description: The tag keys of the tags to remove.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /targetgroups:
    get:
      description: Lists your target groups. You can narrow your search by using the
        filters below in your request.
      operationId: list_target_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The target group type.
        explode: true
        in: query
        name: targetGroupType
        required: false
        schema:
          enum:
          - IP
          - LAMBDA
          - INSTANCE
          - ALB
          type: string
        style: form
      - description: The ID or Amazon Resource Name (ARN) of the service.
        explode: true
        in: query
        name: vpcIdentifier
        required: false
        schema:
          maxLength: 50
          minLength: 5
          pattern: "^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates a target group. A target group is a collection of targets,\
        \ or compute resources, that run your application or service. A target group\
        \ can only be used by a single service.</p> <p>For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/target-groups.html\"\
        >Target groups</a> in the <i>Amazon VPC Lattice User Guide</i>.</p>"
      operationId: create_target_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTargetGroup_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTargetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /targetgroups/{targetGroupIdentifier}:
    delete:
      description: Deletes a target group. You can't delete a target group if it is
        used in a listener rule or if the target group creation is in progress.
      operationId: delete_target_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the target group.
        explode: false
        in: path
        name: targetGroupIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((tg-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:targetgroup/tg-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTargetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about the specified target group.
      operationId: get_target_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the target group.
        explode: false
        in: path
        name: targetGroupIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((tg-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:targetgroup/tg-[0-9a-z]{17}))$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTargetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates the specified target group.
      operationId: update_target_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the target group.
        explode: false
        in: path
        name: targetGroupIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((tg-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:targetgroup/tg-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTargetGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTargetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /targetgroups/{targetGroupIdentifier}/deregistertargets:
    post:
      description: Deregisters the specified targets from the specified target group.
      operationId: deregister_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the target group.
        explode: false
        in: path
        name: targetGroupIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((tg-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:targetgroup/tg-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterTargets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterTargetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /targetgroups/{targetGroupIdentifier}/listtargets:
    post:
      description: "Lists the targets for the target group. By default, all targets\
        \ are included. You can use this API to check the health status of targets.\
        \ You can also ﬁlter the results by target. "
      operationId: list_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The ID or Amazon Resource Name (ARN) of the target group.
        explode: false
        in: path
        name: targetGroupIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((tg-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:targetgroup/tg-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTargets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /targetgroups/{targetGroupIdentifier}/registertargets:
    post:
      description: "Registers the targets with the target group. If it's a Lambda\
        \ target, you can only have one target in a target group."
      operationId: register_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID or Amazon Resource Name (ARN) of the target group.
        explode: false
        in: path
        name: targetGroupIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 17
          pattern: "^((tg-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:targetgroup/tg-[0-9a-z]{17}))$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterTargets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterTargetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchUpdateRuleResponse:
      example:
        unsuccessful: ""
        successful: ""
      properties:
        successful:
          allOf:
          - $ref: '#/components/schemas/RuleUpdateSuccessList'
          - description: The rules that were successfully updated.
          title: successful
        unsuccessful:
          allOf:
          - $ref: '#/components/schemas/RuleUpdateFailureList'
          - description: The rules that the operation couldn't update.
          title: unsuccessful
      title: BatchUpdateRuleResponse
      type: object
    RuleUpdate:
      description: Represents an object when updating a rule.
      properties:
        action:
          $ref: '#/components/schemas/RuleUpdate_action'
        match:
          $ref: '#/components/schemas/RuleUpdate_match'
        priority:
          allOf:
          - $ref: '#/components/schemas/RulePriority'
          - description: The rule priority. A listener can't have multiple rules with
              the same priority.
          title: priority
        ruleIdentifier:
          allOf:
          - $ref: '#/components/schemas/RuleIdentifier'
          - description: The ID or Amazon Resource Name (ARN) of the rule.
          title: ruleIdentifier
      required:
      - ruleIdentifier
      title: RuleUpdate
      type: object
    ValidationException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    ResourceNotFoundException: {}
    ConflictException: {}
    InternalServerException: {}
    CreateAccessLogSubscriptionResponse:
      example:
        resourceId: ""
        destinationArn: ""
        resourceArn: ""
        id: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AccessLogSubscriptionArn'
          - description: The Amazon Resource Name (ARN) of the access log subscription.
          title: arn
        destinationArn:
          allOf:
          - $ref: '#/components/schemas/AccessLogDestinationArn'
          - description: The Amazon Resource Name (ARN) of the log destination.
          title: destinationArn
        id:
          allOf:
          - $ref: '#/components/schemas/AccessLogSubscriptionId'
          - description: The ID of the access log subscription.
          title: id
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the service network or
              service.
          title: resourceArn
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service network or service.
          title: resourceId
      required:
      - arn
      - destinationArn
      - id
      - resourceArn
      - resourceId
      title: CreateAccessLogSubscriptionResponse
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      title: TagValue
      type: string
    CreateListenerResponse:
      example:
        protocol: ""
        defaultAction:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
        port: ""
        name: ""
        serviceArn: ""
        id: ""
        arn: ""
        serviceId: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ListenerArn'
          - description: The Amazon Resource Name (ARN) of the listener.
          title: arn
        defaultAction:
          $ref: '#/components/schemas/CreateListenerResponse_defaultAction'
        id:
          allOf:
          - $ref: '#/components/schemas/ListenerId'
          - description: The ID of the listener.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/ListenerName'
          - description: The name of the listener.
          title: name
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The port number of the listener.
          title: port
        protocol:
          allOf:
          - $ref: '#/components/schemas/ListenerProtocol'
          - description: The protocol of the listener.
          title: protocol
        serviceArn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: serviceArn
        serviceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: serviceId
      title: CreateListenerResponse
      type: object
    FixedResponseAction:
      description: 'Information about an action that returns a custom HTTP response. '
      properties:
        statusCode:
          allOf:
          - $ref: '#/components/schemas/HttpStatusCode'
          - description: The HTTP response code.
          title: statusCode
      required:
      - statusCode
      title: FixedResponseAction
      type: object
    ForwardAction:
      description: 'Describes a forward action. You can use forward actions to route
        requests to one or more target groups. '
      properties:
        targetGroups:
          allOf:
          - $ref: '#/components/schemas/WeightedTargetGroupList'
          - description: "<p>The target groups. Traffic matching the rule is forwarded\
              \ to the specified target groups. With forward actions, you can assign\
              \ a weight that controls the prioritization and selection of each target\
              \ group. This means that requests are distributed to individual target\
              \ groups based on their weights. For example, if two target groups have\
              \ the same weight, each target group receives half of the traffic.</p>\
              \ <p>The default value is 1. This means that if only one target group\
              \ is provided, there is no need to set the weight; 100% of traffic will\
              \ go to that target group.</p>"
          title: targetGroups
      required:
      - targetGroups
      title: ForwardAction
      type: object
    ServiceQuotaExceededException: {}
    CreateRuleResponse:
      example:
        match:
          httpMatch:
            headerMatches: ""
            method: ""
            pathMatch:
              caseSensitive: ""
              match:
                prefix: ""
                exact: ""
        name: ""
        action:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
        id: ""
        arn: ""
        priority: ""
      properties:
        action:
          $ref: '#/components/schemas/CreateRuleResponse_action'
        arn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          - description: The Amazon Resource Name (ARN) of the rule.
          title: arn
        id:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          - description: The ID of the rule.
          title: id
        match:
          $ref: '#/components/schemas/CreateRuleResponse_match'
        name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: name
        priority:
          allOf:
          - $ref: '#/components/schemas/RulePriority'
          - description: The priority assigned to the rule. The lower the priority
              number the higher the priority.
          title: priority
      title: CreateRuleResponse
      type: object
    HttpMatch:
      description: Describes criteria that can be applied to incoming requests.
      properties:
        headerMatches:
          allOf:
          - $ref: '#/components/schemas/HeaderMatchList'
          - description: The header matches. Matches incoming requests with rule based
              on request header value before applying rule action.
          title: headerMatches
        method:
          allOf:
          - $ref: '#/components/schemas/HttpMethod'
          - description: The HTTP method type.
          title: method
        pathMatch:
          $ref: '#/components/schemas/HttpMatch_pathMatch'
      title: HttpMatch
      type: object
    CreateServiceResponse:
      example:
        customDomainName: ""
        certificateArn: ""
        name: ""
        dnsEntry:
          hostedZoneId: ""
          domainName: ""
        id: ""
        arn: ""
        authType: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: arn
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of IAM policy.
          title: authType
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          - description: The Amazon Resource Name (ARN) of the certificate.
          title: certificateArn
        customDomainName:
          allOf:
          - $ref: '#/components/schemas/ServiceCustomDomainName'
          - description: The custom domain name of the service.
          title: customDomainName
        dnsEntry:
          $ref: '#/components/schemas/CreateServiceResponse_dnsEntry'
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceStatus'
          - description: "The status. If the status is <code>CREATE_FAILED</code>,\
              \ you will have to delete and recreate the service."
          title: status
      title: CreateServiceResponse
      type: object
    CreateServiceNetworkResponse:
      example:
        name: ""
        id: ""
        arn: ""
        authType: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkArn'
          - description: The Amazon Resource Name (ARN) of the service network.
          title: arn
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of IAM policy.
          title: authType
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkId'
          - description: The ID of the service network.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkName'
          - description: The name of the service network.
          title: name
      title: CreateServiceNetworkResponse
      type: object
    CreateServiceNetworkServiceAssociationResponse:
      example:
        customDomainName: ""
        createdBy: ""
        dnsEntry:
          hostedZoneId: ""
          domainName: ""
        id: ""
        arn: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationArn'
          - description: The Amazon Resource Name (ARN) of the association.
          title: arn
        createdBy:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account that created the association.
          title: createdBy
        customDomainName:
          allOf:
          - $ref: '#/components/schemas/ServiceCustomDomainName'
          - description: The custom domain name of the service.
          title: customDomainName
        dnsEntry:
          $ref: '#/components/schemas/CreateServiceNetworkServiceAssociationResponse_dnsEntry'
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationIdentifier'
          - description: The ID of the association.
          title: id
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationStatus'
          - description: The operation's status.
          title: status
      title: CreateServiceNetworkServiceAssociationResponse
      type: object
    CreateServiceNetworkVpcAssociationResponse:
      example:
        createdBy: ""
        securityGroupIds: ""
        id: ""
        arn: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
          - description: The Amazon Resource Name (ARN) of the association.
          title: arn
        createdBy:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account that created the association.
          title: createdBy
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
          - description: The ID of the association.
          title: id
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupList'
          - description: The IDs of the security groups.
          title: securityGroupIds
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
          - description: The operation's status.
          title: status
      title: CreateServiceNetworkVpcAssociationResponse
      type: object
    SecurityGroupId:
      maxLength: 200
      minLength: 5
      pattern: "^sg-(([0-9a-z]{8})|([0-9a-z]{17}))$"
      title: SecurityGroupId
      type: string
    CreateTargetGroupResponse:
      example:
        name: ""
        id: ""
        arn: ""
        type: ""
        config:
          protocol: ""
          port: ""
          healthCheck:
            path: ""
            protocol: ""
            port: ""
            healthCheckIntervalSeconds: ""
            healthCheckTimeoutSeconds: ""
            healthyThresholdCount: ""
            protocolVersion: ""
            matcher:
              httpCode: ""
            enabled: ""
            unhealthyThresholdCount: ""
          protocolVersion: ""
          vpcIdentifier: ""
          ipAddressType: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/TargetGroupArn'
          - description: The Amazon Resource Name (ARN) of the target group.
          title: arn
        config:
          $ref: '#/components/schemas/CreateTargetGroupResponse_config'
        id:
          allOf:
          - $ref: '#/components/schemas/TargetGroupId'
          - description: The ID of the target group.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/TargetGroupName'
          - description: The name of the target group.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/TargetGroupStatus'
          - description: "The operation's status. You can retry the operation if the\
              \ status is <code>CREATE_FAILED</code>. However, if you retry it while\
              \ the status is <code>CREATE_IN_PROGRESS</code>, there is no change\
              \ in the status. "
          title: status
        type:
          allOf:
          - $ref: '#/components/schemas/TargetGroupType'
          - description: The type of target group.
          title: type
      title: CreateTargetGroupResponse
      type: object
    HealthCheckConfig:
      description: The health check configuration of a target group. Health check
        configurations aren't used for <code>LAMBDA</code> and <code>ALB</code> target
        groups.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether health checking is enabled.
          title: enabled
        healthCheckIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/HealthCheckIntervalSeconds'
          - description: "The approximate amount of time, in seconds, between health\
              \ checks of an individual target. The range is 5–300 seconds. The default\
              \ is 30 seconds."
          title: healthCheckIntervalSeconds
        healthCheckTimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/HealthCheckTimeoutSeconds'
          - description: "The amount of time, in seconds, to wait before reporting\
              \ a target as unhealthy. The range is 1–120 seconds. The default is\
              \ 5 seconds."
          title: healthCheckTimeoutSeconds
        healthyThresholdCount:
          allOf:
          - $ref: '#/components/schemas/HealthyThresholdCount'
          - description: The number of consecutive successful health checks required
              before considering an unhealthy target healthy. The range is 2–10. The
              default is 5.
          title: healthyThresholdCount
        matcher:
          $ref: '#/components/schemas/UpdateTargetGroup_request_healthCheck_matcher'
        path:
          allOf:
          - $ref: '#/components/schemas/HealthCheckPath'
          - description: "The destination for health checks on the targets. If the\
              \ protocol version is <code>HTTP/1.1</code> or <code>HTTP/2</code>,\
              \ specify a valid URI (for example, <code>/path?query</code>). The default\
              \ path is <code>/</code>. Health checks are not supported if the protocol\
              \ version is <code>gRPC</code>, however, you can choose <code>HTTP/1.1</code>\
              \ or <code>HTTP/2</code> and specify a valid URI."
          title: path
        port:
          allOf:
          - $ref: '#/components/schemas/HealthCheckPort'
          - description: The port used when performing health checks on targets. The
              default setting is the port that a target receives traffic on.
          title: port
        protocol:
          allOf:
          - $ref: '#/components/schemas/TargetGroupProtocol'
          - description: The protocol used when performing health checks on targets.
              The possible protocols are <code>HTTP</code> and <code>HTTPS</code>.
              The default is <code>HTTP</code>.
          title: protocol
        protocolVersion:
          allOf:
          - $ref: '#/components/schemas/HealthCheckProtocolVersion'
          - description: The protocol version used when performing health checks on
              targets. The possible protocol versions are <code>HTTP1</code> and <code>HTTP2</code>.
          title: protocolVersion
        unhealthyThresholdCount:
          allOf:
          - $ref: '#/components/schemas/UnhealthyThresholdCount'
          - description: The number of consecutive failed health checks required before
              considering a target unhealthy. The range is 2–10. The default is 2.
          title: unhealthyThresholdCount
      title: HealthCheckConfig
      type: object
    IpAddressType:
      enum:
      - IPV4
      - IPV6
      title: IpAddressType
      type: string
    Port:
      maximum: 65535
      minimum: 1
      type: integer
    TargetGroupProtocol:
      enum:
      - HTTP
      - HTTPS
      title: TargetGroupProtocol
      type: string
    TargetGroupProtocolVersion:
      enum:
      - HTTP1
      - HTTP2
      - GRPC
      title: TargetGroupProtocolVersion
      type: string
    VpcId:
      maxLength: 50
      minLength: 5
      pattern: "^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$"
      type: string
    DeleteAccessLogSubscriptionResponse:
      properties: {}
      type: object
    DeleteAuthPolicyResponse:
      properties: {}
      type: object
    DeleteListenerResponse:
      properties: {}
      type: object
    DeleteResourcePolicyResponse:
      properties: {}
      type: object
    DeleteRuleResponse:
      properties: {}
      type: object
    DeleteServiceResponse:
      example:
        name: ""
        id: ""
        arn: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: arn
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceStatus'
          - description: "The status. You can retry the operation if the status is\
              \ <code>DELETE_FAILED</code>. However, if you retry it while the status\
              \ is <code>DELETE_IN_PROGRESS</code>, the status doesn't change."
          title: status
      title: DeleteServiceResponse
      type: object
    DeleteServiceNetworkResponse:
      properties: {}
      type: object
    DeleteServiceNetworkServiceAssociationResponse:
      example:
        id: ""
        arn: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationArn'
          - description: The Amazon Resource Name (ARN) of the association.
          title: arn
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationIdentifier'
          - description: The ID of the association.
          title: id
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationStatus'
          - description: "The operation's status. You can retry the operation if the\
              \ status is <code>DELETE_FAILED</code>. However, if you retry it when\
              \ the status is <code>DELETE_IN_PROGRESS</code>, there is no change\
              \ in the status."
          title: status
      title: DeleteServiceNetworkServiceAssociationResponse
      type: object
    DeleteServiceNetworkVpcAssociationResponse:
      example:
        id: ""
        arn: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
          - description: The Amazon Resource Name (ARN) of the association.
          title: arn
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
          - description: The ID of the association.
          title: id
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
          - description: "The status. You can retry the operation if the status is\
              \ <code>DELETE_FAILED</code>. However, if you retry it when the status\
              \ is <code>DELETE_IN_PROGRESS</code>, there is no change in the status."
          title: status
      title: DeleteServiceNetworkVpcAssociationResponse
      type: object
    DeleteTargetGroupResponse:
      example:
        id: ""
        arn: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/TargetGroupArn'
          - description: The Amazon Resource Name (ARN) of the target group.
          title: arn
        id:
          allOf:
          - $ref: '#/components/schemas/TargetGroupId'
          - description: The ID of the target group.
          title: id
        status:
          allOf:
          - $ref: '#/components/schemas/TargetGroupStatus'
          - description: "The status. You can retry the operation if the status is\
              \ <code>DELETE_FAILED</code>. However, if you retry it while the status\
              \ is <code>DELETE_IN_PROGRESS</code>, the status doesn't change."
          title: status
      title: DeleteTargetGroupResponse
      type: object
    DeregisterTargetsResponse:
      example:
        unsuccessful: ""
        successful: ""
      properties:
        successful:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: The targets that were successfully deregistered.
          title: successful
        unsuccessful:
          allOf:
          - $ref: '#/components/schemas/TargetFailureList'
          - description: The targets that the operation couldn't deregister.
          title: unsuccessful
      title: DeregisterTargetsResponse
      type: object
    Target:
      description: Describes a target.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/TargetIdString'
          - description: "The ID of the target. If the target type of the target group\
              \ is <code>INSTANCE</code>, this is an instance ID. If the target type\
              \ is <code>IP</code> , this is an IP address. If the target type is\
              \ <code>LAMBDA</code>, this is the ARN of the Lambda function. If the\
              \ target type is <code>ALB</code>, this is the ARN of the Application\
              \ Load Balancer."
          title: id
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: "The port on which the target is listening. For HTTP, the\
              \ default is <code>80</code>. For HTTPS, the default is <code>443</code>."
          title: port
      required:
      - id
      title: Target
      type: object
    GetAccessLogSubscriptionResponse:
      example:
        createdAt: ""
        resourceId: ""
        destinationArn: ""
        lastUpdatedAt: ""
        resourceArn: ""
        id: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AccessLogSubscriptionArn'
          - description: The Amazon Resource Name (ARN) of the access log subscription.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the access log subscription was created,\
              \ specified in ISO-8601 format."
          title: createdAt
        destinationArn:
          allOf:
          - $ref: '#/components/schemas/AccessLogDestinationArn'
          - description: The Amazon Resource Name (ARN) of the access log destination.
          title: destinationArn
        id:
          allOf:
          - $ref: '#/components/schemas/AccessLogSubscriptionId'
          - description: The ID of the access log subscription.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the access log subscription was last\
              \ updated, specified in ISO-8601 format."
          title: lastUpdatedAt
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the service network or
              service.
          title: resourceArn
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service network or service.
          title: resourceId
      required:
      - arn
      - createdAt
      - destinationArn
      - id
      - lastUpdatedAt
      - resourceArn
      - resourceId
      title: GetAccessLogSubscriptionResponse
      type: object
    GetAuthPolicyResponse:
      example:
        createdAt: ""
        lastUpdatedAt: ""
        state: ""
        policy: ""
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the auth policy was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the auth policy was last updated,\
              \ specified in ISO-8601 format."
          title: lastUpdatedAt
        policy:
          allOf:
          - $ref: '#/components/schemas/AuthPolicyString'
          - description: The auth policy.
          title: policy
        state:
          allOf:
          - $ref: '#/components/schemas/AuthPolicyState'
          - description: "The state of the auth policy. The auth policy is only active\
              \ when the auth type is set to <code>AWS_IAM</code>. If you provide\
              \ a policy, then authentication and authorization decisions are made\
              \ based on this policy and the client's IAM policy. If the auth type\
              \ is <code>NONE</code>, then any auth policy you provide will remain\
              \ inactive. For more information, see <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-networks.html#create-service-network\"\
              >Create a service network</a> in the <i>Amazon VPC Lattice User Guide</i>."
          title: state
      title: GetAuthPolicyResponse
      type: object
    GetListenerResponse:
      example:
        createdAt: ""
        protocol: ""
        defaultAction:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
        lastUpdatedAt: ""
        port: ""
        name: ""
        serviceArn: ""
        id: ""
        arn: ""
        serviceId: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ListenerArn'
          - description: The Amazon Resource Name (ARN) of the listener.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the listener was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        defaultAction:
          $ref: '#/components/schemas/GetListenerResponse_defaultAction'
        id:
          allOf:
          - $ref: '#/components/schemas/ListenerId'
          - description: The ID of the listener.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the listener was last updated, specified\
              \ in ISO-8601 format."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ListenerName'
          - description: The name of the listener.
          title: name
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The listener port.
          title: port
        protocol:
          allOf:
          - $ref: '#/components/schemas/ListenerProtocol'
          - description: The listener protocol.
          title: protocol
        serviceArn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: serviceArn
        serviceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: serviceId
      title: GetListenerResponse
      type: object
    GetResourcePolicyResponse:
      example:
        policy: ""
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyString'
          - description: An IAM policy.
          title: policy
      title: GetResourcePolicyResponse
      type: object
    GetRuleResponse:
      example:
        createdAt: ""
        isDefault: ""
        lastUpdatedAt: ""
        match:
          httpMatch:
            headerMatches: ""
            method: ""
            pathMatch:
              caseSensitive: ""
              match:
                prefix: ""
                exact: ""
        name: ""
        action:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
        id: ""
        arn: ""
        priority: ""
      properties:
        action:
          $ref: '#/components/schemas/CreateListenerResponse_defaultAction'
        arn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          - description: The Amazon Resource Name (ARN) of the listener.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the listener rule was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        id:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          - description: The ID of the listener.
          title: id
        isDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether this is the default rule.
          title: isDefault
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the listener rule was last updated,\
              \ specified in ISO-8601 format."
          title: lastUpdatedAt
        match:
          $ref: '#/components/schemas/RuleUpdate_match'
        name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the listener.
          title: name
        priority:
          allOf:
          - $ref: '#/components/schemas/RulePriority'
          - description: The priority level for the specified rule.
          title: priority
      title: GetRuleResponse
      type: object
    GetServiceResponse:
      example:
        createdAt: ""
        customDomainName: ""
        failureCode: ""
        certificateArn: ""
        lastUpdatedAt: ""
        name: ""
        dnsEntry:
          hostedZoneId: ""
          domainName: ""
        id: ""
        arn: ""
        authType: ""
        failureMessage: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: arn
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of IAM policy.
          title: authType
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          - description: The Amazon Resource Name (ARN) of the certificate.
          title: certificateArn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the service was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        customDomainName:
          allOf:
          - $ref: '#/components/schemas/ServiceCustomDomainName'
          - description: The custom domain name of the service.
          title: customDomainName
        dnsEntry:
          $ref: '#/components/schemas/CreateServiceNetworkServiceAssociationResponse_dnsEntry'
        failureCode:
          allOf:
          - $ref: '#/components/schemas/FailureCode'
          - description: The failure code.
          title: failureCode
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/FailureMessage'
          - description: The failure message.
          title: failureMessage
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the service was last updated, specified\
              \ in ISO-8601 format."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceStatus'
          - description: The status of the service.
          title: status
      title: GetServiceResponse
      type: object
    GetServiceNetworkResponse:
      example:
        createdAt: ""
        lastUpdatedAt: ""
        numberOfAssociatedVPCs: ""
        name: ""
        id: ""
        arn: ""
        authType: ""
        numberOfAssociatedServices: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkArn'
          - description: The Amazon Resource Name (ARN) of the service network.
          title: arn
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of IAM policy.
          title: authType
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the service network was created,\
              \ specified in ISO-8601 format."
          title: createdAt
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkId'
          - description: The ID of the service network.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time of the last update, specified in ISO-8601\
              \ format."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkName'
          - description: The name of the service network.
          title: name
        numberOfAssociatedServices:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of services associated with the service network.
          title: numberOfAssociatedServices
        numberOfAssociatedVPCs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of VPCs associated with the service network.
          title: numberOfAssociatedVPCs
      title: GetServiceNetworkResponse
      type: object
    GetServiceNetworkServiceAssociationResponse:
      example:
        customDomainName: ""
        serviceNetworkArn: ""
        failureCode: ""
        dnsEntry:
          hostedZoneId: ""
          domainName: ""
        serviceName: ""
        createdAt: ""
        createdBy: ""
        serviceArn: ""
        serviceNetworkId: ""
        id: ""
        arn: ""
        serviceId: ""
        failureMessage: ""
        serviceNetworkName: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationArn'
          - description: The Amazon Resource Name (ARN) of the association.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the association was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        createdBy:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account that created the association.
          title: createdBy
        customDomainName:
          allOf:
          - $ref: '#/components/schemas/ServiceCustomDomainName'
          - description: 'The custom domain name of the service. '
          title: customDomainName
        dnsEntry:
          $ref: '#/components/schemas/CreateServiceNetworkServiceAssociationResponse_dnsEntry'
        failureCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The failure code.
          title: failureCode
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The failure message.
          title: failureMessage
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationIdentifier'
          - description: The ID of the service network and service association.
          title: id
        serviceArn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: serviceArn
        serviceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: serviceId
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: serviceName
        serviceNetworkArn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkArn'
          - description: The Amazon Resource Name (ARN) of the service network.
          title: serviceNetworkArn
        serviceNetworkId:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkId'
          - description: The ID of the service network.
          title: serviceNetworkId
        serviceNetworkName:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkName'
          - description: The name of the service network.
          title: serviceNetworkName
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationStatus'
          - description: The status of the association.
          title: status
      title: GetServiceNetworkServiceAssociationResponse
      type: object
    GetServiceNetworkVpcAssociationResponse:
      example:
        serviceNetworkArn: ""
        failureCode: ""
        lastUpdatedAt: ""
        createdAt: ""
        createdBy: ""
        securityGroupIds: ""
        vpcId: ""
        serviceNetworkId: ""
        id: ""
        arn: ""
        failureMessage: ""
        serviceNetworkName: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
          - description: The Amazon Resource Name (ARN) of the association.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the association was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        createdBy:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account that created the association.
          title: createdBy
        failureCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The failure code.
          title: failureCode
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The failure message.
          title: failureMessage
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
          - description: The ID of the specified association between the service network
              and the VPC.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the association was last updated,\
              \ specified in ISO-8601 format."
          title: lastUpdatedAt
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupList'
          - description: The IDs of the security groups.
          title: securityGroupIds
        serviceNetworkArn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkArn'
          - description: The Amazon Resource Name (ARN) of the service network.
          title: serviceNetworkArn
        serviceNetworkId:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkId'
          - description: The ID of the service network.
          title: serviceNetworkId
        serviceNetworkName:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkName'
          - description: The name of the service network.
          title: serviceNetworkName
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
          - description: The status of the association.
          title: status
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC.
          title: vpcId
      title: GetServiceNetworkVpcAssociationResponse
      type: object
    GetTargetGroupResponse:
      example:
        createdAt: ""
        failureCode: ""
        lastUpdatedAt: ""
        name: ""
        id: ""
        arn: ""
        type: ""
        config:
          protocol: ""
          port: ""
          healthCheck:
            path: ""
            protocol: ""
            port: ""
            healthCheckIntervalSeconds: ""
            healthCheckTimeoutSeconds: ""
            healthyThresholdCount: ""
            protocolVersion: ""
            matcher:
              httpCode: ""
            enabled: ""
            unhealthyThresholdCount: ""
          protocolVersion: ""
          vpcIdentifier: ""
          ipAddressType: ""
        failureMessage: ""
        serviceArns: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/TargetGroupArn'
          - description: The Amazon Resource Name (ARN) of the target group.
          title: arn
        config:
          $ref: '#/components/schemas/GetTargetGroupResponse_config'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the target group was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        failureCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The failure code.
          title: failureCode
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The failure message.
          title: failureMessage
        id:
          allOf:
          - $ref: '#/components/schemas/TargetGroupId'
          - description: The ID of the target group.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the target group was last updated,\
              \ specified in ISO-8601 format."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/TargetGroupName'
          - description: The name of the target group.
          title: name
        serviceArns:
          allOf:
          - $ref: '#/components/schemas/ServiceArnList'
          - description: The Amazon Resource Names (ARNs) of the service.
          title: serviceArns
        status:
          allOf:
          - $ref: '#/components/schemas/TargetGroupStatus'
          - description: The status.
          title: status
        type:
          allOf:
          - $ref: '#/components/schemas/TargetGroupType'
          - description: The target group type.
          title: type
      title: GetTargetGroupResponse
      type: object
    ListAccessLogSubscriptionsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/AccessLogSubscriptionList'
          - description: The access log subscriptions.
          title: items
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token for the next page of results.
          title: nextToken
      required:
      - items
      title: ListAccessLogSubscriptionsResponse
      type: object
    ListListenersResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ListenerSummaryList'
          - description: Information about the listeners.
          title: items
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, a pagination token for\
              \ the next page of results."
          title: nextToken
      required:
      - items
      title: ListListenersResponse
      type: object
    ListRulesResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/RuleSummaryList'
          - description: Information about the rules.
          title: items
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, a pagination token for\
              \ the next page of results."
          title: nextToken
      required:
      - items
      title: ListRulesResponse
      type: object
    ListServiceNetworkServiceAssociationsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationList'
          - description: Information about the associations.
          title: items
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, a pagination token for\
              \ the next page of results."
          title: nextToken
      required:
      - items
      title: ListServiceNetworkServiceAssociationsResponse
      type: object
    ListServiceNetworkVpcAssociationsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationList'
          - description: Information about the associations.
          title: items
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, a pagination token for\
              \ the next page of results."
          title: nextToken
      required:
      - items
      title: ListServiceNetworkVpcAssociationsResponse
      type: object
    ListServiceNetworksResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkList'
          - description: Information about the service networks.
          title: items
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, a pagination token for\
              \ the next page of results."
          title: nextToken
      required:
      - items
      title: ListServiceNetworksResponse
      type: object
    ListServicesResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ServiceList'
          - description: The services.
          title: items
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, a pagination token for\
              \ the next page of results."
          title: nextToken
      title: ListServicesResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags.
          title: tags
      title: ListTagsForResourceResponse
      type: object
    ListTargetGroupsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/TargetGroupList'
          - description: Information about the target groups.
          title: items
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, a pagination token for\
              \ the next page of results."
          title: nextToken
      title: ListTargetGroupsResponse
      type: object
    ListTargetsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/TargetSummaryList'
          - description: Information about the targets.
          title: items
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, a pagination token for\
              \ the next page of results."
          title: nextToken
      required:
      - items
      title: ListTargetsResponse
      type: object
    PutAuthPolicyResponse:
      example:
        state: ""
        policy: ""
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/AuthPolicyString'
          - description: The auth policy. The policy string in JSON must not contain
              newlines or blank lines.
          title: policy
        state:
          allOf:
          - $ref: '#/components/schemas/AuthPolicyState'
          - description: "The state of the auth policy. The auth policy is only active\
              \ when the auth type is set to <code>AWS_IAM</code>. If you provide\
              \ a policy, then authentication and authorization decisions are made\
              \ based on this policy and the client's IAM policy. If the Auth type\
              \ is <code>NONE</code>, then, any auth policy you provide will remain\
              \ inactive. For more information, see <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-networks.html#create-service-network\"\
              >Create a service network</a> in the <i>Amazon VPC Lattice User Guide</i>."
          title: state
      title: PutAuthPolicyResponse
      type: object
    PutResourcePolicyResponse:
      properties: {}
      type: object
    RegisterTargetsResponse:
      example:
        unsuccessful: ""
        successful: ""
      properties:
        successful:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: The targets that were successfully registered.
          title: successful
        unsuccessful:
          allOf:
          - $ref: '#/components/schemas/TargetFailureList'
          - description: The targets that were not registered.
          title: unsuccessful
      title: RegisterTargetsResponse
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    UpdateAccessLogSubscriptionResponse:
      example:
        resourceId: ""
        destinationArn: ""
        resourceArn: ""
        id: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AccessLogSubscriptionArn'
          - description: The Amazon Resource Name (ARN) of the access log subscription.
          title: arn
        destinationArn:
          allOf:
          - $ref: '#/components/schemas/AccessLogDestinationArn'
          - description: The Amazon Resource Name (ARN) of the access log destination.
          title: destinationArn
        id:
          allOf:
          - $ref: '#/components/schemas/AccessLogSubscriptionId'
          - description: The ID of the access log subscription.
          title: id
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the access log subscription.
          title: resourceArn
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the resource.
          title: resourceId
      required:
      - arn
      - destinationArn
      - id
      - resourceArn
      - resourceId
      title: UpdateAccessLogSubscriptionResponse
      type: object
    UpdateListenerResponse:
      example:
        protocol: ""
        defaultAction:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
        port: ""
        name: ""
        serviceArn: ""
        id: ""
        arn: ""
        serviceId: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ListenerArn'
          - description: The Amazon Resource Name (ARN) of the listener.
          title: arn
        defaultAction:
          $ref: '#/components/schemas/CreateListenerResponse_defaultAction'
        id:
          allOf:
          - $ref: '#/components/schemas/ListenerId'
          - description: The ID of the listener.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/ListenerName'
          - description: The name of the listener.
          title: name
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The listener port.
          title: port
        protocol:
          allOf:
          - $ref: '#/components/schemas/ListenerProtocol'
          - description: The protocol of the listener.
          title: protocol
        serviceArn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: serviceArn
        serviceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: serviceId
      title: UpdateListenerResponse
      type: object
    UpdateRuleResponse:
      example:
        isDefault: ""
        match:
          httpMatch:
            headerMatches: ""
            method: ""
            pathMatch:
              caseSensitive: ""
              match:
                prefix: ""
                exact: ""
        name: ""
        action:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
        id: ""
        arn: ""
        priority: ""
      properties:
        action:
          $ref: '#/components/schemas/UpdateRuleResponse_action'
        arn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          - description: The Amazon Resource Name (ARN) of the listener.
          title: arn
        id:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          - description: The ID of the listener.
          title: id
        isDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether this is the default rule.
          title: isDefault
        match:
          $ref: '#/components/schemas/RuleUpdate_match'
        name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the listener.
          title: name
        priority:
          allOf:
          - $ref: '#/components/schemas/RulePriority'
          - description: The rule priority.
          title: priority
      title: UpdateRuleResponse
      type: object
    UpdateServiceResponse:
      example:
        customDomainName: ""
        certificateArn: ""
        name: ""
        id: ""
        arn: ""
        authType: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: arn
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of IAM policy.
          title: authType
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          - description: 'The Amazon Resource Name (ARN) of the certificate. '
          title: certificateArn
        customDomainName:
          allOf:
          - $ref: '#/components/schemas/ServiceCustomDomainName'
          - description: The custom domain name of the service.
          title: customDomainName
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: name
      title: UpdateServiceResponse
      type: object
    UpdateServiceNetworkResponse:
      example:
        name: ""
        id: ""
        arn: ""
        authType: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkArn'
          - description: The Amazon Resource Name (ARN) of the service network.
          title: arn
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of IAM policy.
          title: authType
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkId'
          - description: The ID of the service network.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkName'
          - description: The name of the service network.
          title: name
      title: UpdateServiceNetworkResponse
      type: object
    UpdateServiceNetworkVpcAssociationResponse:
      example:
        createdBy: ""
        securityGroupIds: ""
        id: ""
        arn: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
          - description: The Amazon Resource Name (ARN) of the association.
          title: arn
        createdBy:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account that created the association.
          title: createdBy
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
          - description: The ID of the association.
          title: id
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupList'
          - description: The IDs of the security groups.
          title: securityGroupIds
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
          - description: "The status. You can retry the operation if the status is\
              \ <code>DELETE_FAILED</code>. However, if you retry it while the status\
              \ is <code>DELETE_IN_PROGRESS</code>, there is no change in the status."
          title: status
      title: UpdateServiceNetworkVpcAssociationResponse
      type: object
    UpdateTargetGroupResponse:
      example:
        name: ""
        id: ""
        arn: ""
        type: ""
        config:
          protocol: ""
          port: ""
          healthCheck:
            path: ""
            protocol: ""
            port: ""
            healthCheckIntervalSeconds: ""
            healthCheckTimeoutSeconds: ""
            healthyThresholdCount: ""
            protocolVersion: ""
            matcher:
              httpCode: ""
            enabled: ""
            unhealthyThresholdCount: ""
          protocolVersion: ""
          vpcIdentifier: ""
          ipAddressType: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/TargetGroupArn'
          - description: The Amazon Resource Name (ARN) of the target group.
          title: arn
        config:
          $ref: '#/components/schemas/GetTargetGroupResponse_config'
        id:
          allOf:
          - $ref: '#/components/schemas/TargetGroupId'
          - description: The ID of the target group.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/TargetGroupName'
          - description: The name of the target group.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/TargetGroupStatus'
          - description: The status.
          title: status
        type:
          allOf:
          - $ref: '#/components/schemas/TargetGroupType'
          - description: The target group type.
          title: type
      title: UpdateTargetGroupResponse
      type: object
    Boolean:
      type: boolean
    HealthCheckIntervalSeconds:
      maximum: 300
      minimum: 0
      type: integer
    HealthCheckTimeoutSeconds:
      maximum: 120
      minimum: 0
      type: integer
    HealthyThresholdCount:
      maximum: 10
      minimum: 0
      type: integer
    Matcher:
      description: The codes to use when checking for a successful response from a
        target for health checks.
      properties:
        httpCode:
          allOf:
          - $ref: '#/components/schemas/HttpCodeMatcher'
          - description: The HTTP code to use when checking for a successful response
              from a target.
          title: httpCode
      title: Matcher
      type: object
    HealthCheckPath:
      maxLength: 2048
      minLength: 0
      pattern: "(^/[a-zA-Z0-9@:%_+.~#?&/=-]*$|(^$))"
      type: string
    HealthCheckPort:
      maximum: 65535
      minimum: 0
      type: integer
    HealthCheckProtocolVersion:
      enum:
      - HTTP1
      - HTTP2
      title: HealthCheckProtocolVersion
      type: string
    UnhealthyThresholdCount:
      maximum: 10
      minimum: 0
      type: integer
    AccessLogDestinationArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$"
      type: string
    AccessLogSubscriptionArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\d{12}:accesslogsubscription/als-[0-9a-z]{17}$"
      type: string
    AccessLogSubscriptionId:
      maxLength: 21
      minLength: 21
      pattern: "^als-[0-9a-z]{17}$"
      type: string
    AccessLogSubscriptionIdentifier:
      maxLength: 2048
      minLength: 17
      pattern: "^((als-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\\
        d{12}:accesslogsubscription/als-[0-9a-z]{17}))$"
      type: string
    AccessLogSubscriptionSummary:
      description: Summary information about an access log subscription.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AccessLogSubscriptionArn'
          - description: The Amazon Resource Name (ARN) of the access log subscription
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the access log subscription was created,\
              \ specified in ISO-8601 format."
          title: createdAt
        destinationArn:
          allOf:
          - $ref: '#/components/schemas/AccessLogDestinationArn'
          - description: The Amazon Resource Name (ARN) of the destination.
          title: destinationArn
        id:
          allOf:
          - $ref: '#/components/schemas/AccessLogSubscriptionId'
          - description: The ID of the access log subscription.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the access log subscription was last\
              \ updated, specified in ISO-8601 format."
          title: lastUpdatedAt
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the service or service
              network.
          title: resourceArn
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service or service network.
          title: resourceId
      required:
      - arn
      - createdAt
      - destinationArn
      - id
      - lastUpdatedAt
      - resourceArn
      - resourceId
      title: AccessLogSubscriptionSummary
      type: object
    AccessLogSubscriptionList:
      items:
        $ref: '#/components/schemas/AccessLogSubscriptionSummary'
      type: array
    Timestamp:
      format: date-time
      type: string
    ResourceArn:
      maxLength: 200
      minLength: 20
      pattern: "^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}$"
      type: string
    ResourceId:
      maxLength: 50
      minLength: 20
      pattern: "^((sn)|(svc))-[0-9a-z]{17}$"
      type: string
    AccountId:
      maxLength: 12
      minLength: 1
      pattern: "^[0-9]{12}$"
      type: string
    Arn:
      maxLength: 1224
      minLength: 0
      pattern: "^arn:[a-z0-9][-.a-z0-9]{0,62}:vpc-lattice:([a-z0-9][-.a-z0-9]{0,62})?:\\\
        d{12}?:[^/].{0,1023}$"
      type: string
    AuthPolicyState:
      enum:
      - Active
      - Inactive
      title: AuthPolicyState
      type: string
    AuthPolicyString:
      maxLength: 10000
      minLength: 0
      pattern: ^.*\S.*$
      type: string
    AuthType:
      enum:
      - NONE
      - AWS_IAM
      title: AuthType
      type: string
    ListenerIdentifier:
      maxLength: 2048
      minLength: 20
      pattern: "^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
        -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$"
      type: string
    RuleUpdateList:
      items:
        $ref: '#/components/schemas/RuleUpdate'
      maxItems: 5
      minItems: 1
      type: array
    ServiceIdentifier:
      maxLength: 2048
      minLength: 17
      pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\\
        d{12}:service/svc-[0-9a-z]{17}))$"
      type: string
    BatchUpdateRuleRequest:
      example:
        rules: ""
      properties:
        rules:
          allOf:
          - $ref: '#/components/schemas/RuleUpdateList'
          - description: The rules for the specified listener.
      required:
      - rules
      title: BatchUpdateRuleRequest
      type: object
    RuleUpdateSuccessList:
      items:
        $ref: '#/components/schemas/RuleUpdateSuccess'
      type: array
    RuleUpdateFailureList:
      items:
        $ref: '#/components/schemas/RuleUpdateFailure'
      type: array
    CertificateArn:
      maxLength: 2048
      minLength: 0
      pattern: "^(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:certificate/[0-9a-z-]+)?$"
      type: string
    ClientToken:
      maxLength: 64
      minLength: 1
      pattern: "[!-~]+"
      type: string
    ResourceIdentifier:
      maxLength: 200
      minLength: 17
      pattern: "^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$"
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 200
      minProperties: 0
      type: object
    CreateAccessLogSubscriptionRequest:
      example:
        resourceIdentifier: ""
        destinationArn: ""
        clientToken: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If you retry a request that\
              \ completed successfully using the same client token and parameters,\
              \ the retry succeeds without performing any actions. If the parameters\
              \ aren't identical, the retry fails."
        destinationArn:
          allOf:
          - $ref: '#/components/schemas/AccessLogDestinationArn'
          - description: "The Amazon Resource Name (ARN) of the destination. The supported\
              \ destination types are CloudWatch Log groups, Kinesis Data Firehose\
              \ delivery streams, and Amazon S3 buckets."
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: The ID or Amazon Resource Name (ARN) of the service network
              or service.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the access log subscription.
      required:
      - destinationArn
      - resourceIdentifier
      title: CreateAccessLogSubscriptionRequest
      type: object
    RuleAction:
      description: "Describes the action for a rule. Each rule must include exactly\
        \ one of the following types of actions: <code>forward </code>or <code>fixed-response</code>,\
        \ and it must be the last action to be performed."
      properties:
        fixedResponse:
          $ref: '#/components/schemas/CreateRule_request_action_fixedResponse'
        forward:
          $ref: '#/components/schemas/CreateRule_request_action_forward'
      title: RuleAction
      type: object
    ListenerName:
      maxLength: 63
      minLength: 3
      pattern: "^(?!listener-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
      type: string
    ListenerProtocol:
      enum:
      - HTTP
      - HTTPS
      title: ListenerProtocol
      type: string
    CreateListenerRequest:
      example:
        protocol: ""
        defaultAction:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
        port: ""
        clientToken: ""
        name: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If you retry a request that\
              \ completed successfully using the same client token and parameters,\
              \ the retry succeeds without performing any actions. If the parameters\
              \ aren't identical, the retry fails."
        defaultAction:
          $ref: '#/components/schemas/CreateListenerRequest_defaultAction'
        name:
          allOf:
          - $ref: '#/components/schemas/ListenerName'
          - description: "The name of the listener. A listener name must be unique\
              \ within a service. The valid characters are a-z, 0-9, and hyphens (-).\
              \ You can't use a hyphen as the first or last character, or immediately\
              \ after another hyphen."
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: "The listener port. You can specify a value from <code>1</code>\
              \ to <code>65535</code>. For HTTP, the default is <code>80</code>. For\
              \ HTTPS, the default is <code>443</code>."
        protocol:
          allOf:
          - $ref: '#/components/schemas/ListenerProtocol'
          - description: The listener protocol HTTP or HTTPS.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the listener.
      required:
      - defaultAction
      - name
      - protocol
      title: CreateListenerRequest
      type: object
    ListenerArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$"
      type: string
    ListenerId:
      maxLength: 26
      minLength: 26
      pattern: "^listener-[0-9a-z]{17}$"
      type: string
    ServiceArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\d{12}:service/svc-[0-9a-z]{17}$"
      title: ServiceArn
      type: string
    ServiceId:
      maxLength: 21
      minLength: 21
      pattern: "^svc-[0-9a-z]{17}$"
      type: string
    RuleMatch:
      description: Describes a rule match.
      properties:
        httpMatch:
          $ref: '#/components/schemas/CreateRule_request_match_httpMatch'
      title: RuleMatch
      type: object
    RuleName:
      maxLength: 63
      minLength: 3
      pattern: "^(?!rule-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
      type: string
    RulePriority:
      maximum: 100
      minimum: 1
      type: integer
    CreateRuleRequest:
      example:
        clientToken: ""
        match:
          httpMatch:
            headerMatches: ""
            method: ""
            pathMatch:
              caseSensitive: ""
              match:
                prefix: ""
                exact: ""
        name: ""
        action:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
        priority: ""
        tags: ""
      properties:
        action:
          $ref: '#/components/schemas/CreateListenerResponse_defaultAction'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If you retry a request that\
              \ completed successfully using the same client token and parameters,\
              \ the retry succeeds without performing any actions. If the parameters\
              \ aren't identical, the retry fails."
        match:
          $ref: '#/components/schemas/RuleUpdate_match'
        name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: "The name of the rule. The name must be unique within the\
              \ listener. The valid characters are a-z, 0-9, and hyphens (-). You\
              \ can't use a hyphen as the first or last character, or immediately\
              \ after another hyphen."
        priority:
          allOf:
          - $ref: '#/components/schemas/RulePriority'
          - description: The priority assigned to the rule. Each rule for a specific
              listener must have a unique priority. The lower the priority number
              the higher the priority.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the rule.
      required:
      - action
      - match
      - name
      - priority
      title: CreateRuleRequest
      type: object
    RuleArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$"
      type: string
    RuleId:
      maxLength: 22
      minLength: 5
      pattern: "^rule-[0-9a-z]{17}$"
      type: string
    ServiceNetworkName:
      maxLength: 63
      minLength: 3
      pattern: "^(?!servicenetwork-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
      type: string
    CreateServiceNetworkRequest:
      example:
        clientToken: ""
        name: ""
        authType: ""
        tags: ""
      properties:
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: "<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>:\
              \ The resource does not use an IAM policy. This is the default.</p>\
              \ </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy.\
              \ When this type is used, auth is enabled and an auth policy is required.</p>\
              \ </li> </ul>"
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If you retry a request that\
              \ completed successfully using the same client token and parameters,\
              \ the retry succeeds without performing any actions. If the parameters\
              \ aren't identical, the retry fails."
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkName'
          - description: "The name of the service network. The name must be unique\
              \ to the account. The valid characters are a-z, 0-9, and hyphens (-).\
              \ You can't use a hyphen as the first or last character, or immediately\
              \ after another hyphen."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the service network.
      required:
      - name
      title: CreateServiceNetworkRequest
      type: object
    ServiceNetworkArn:
      maxLength: 2048
      minLength: 32
      pattern: "^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\d{12}:servicenetwork/sn-[0-9a-z]{17}$"
      type: string
    ServiceNetworkId:
      maxLength: 32
      minLength: 32
      pattern: "^servicenetwork-[0-9a-z]{17}$"
      type: string
    ServiceNetworkIdentifier:
      maxLength: 2048
      minLength: 3
      pattern: "^((sn-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\\
        d{12}:servicenetwork/sn-[0-9a-z]{17}))$"
      type: string
    CreateServiceNetworkServiceAssociationRequest:
      example:
        clientToken: ""
        serviceNetworkIdentifier: ""
        serviceIdentifier: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If you retry a request that\
              \ completed successfully using the same client token and parameters,\
              \ the retry succeeds without performing any actions. If the parameters\
              \ aren't identical, the retry fails."
        serviceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ServiceIdentifier'
          - description: The ID or Amazon Resource Name (ARN) of the service.
        serviceNetworkIdentifier:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkIdentifier'
          - description: The ID or Amazon Resource Name (ARN) of the service network.
              You must use the ARN if the resources specified in the operation are
              in different accounts.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the association.
      required:
      - serviceIdentifier
      - serviceNetworkIdentifier
      title: CreateServiceNetworkServiceAssociationRequest
      type: object
    ServiceNetworkServiceAssociationArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}$"
      type: string
    ServiceCustomDomainName:
      maxLength: 255
      minLength: 3
      type: string
    DnsEntry:
      description: Describes the DNS information of a service.
      properties:
        domainName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The domain name of the service.
          title: domainName
        hostedZoneId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the hosted zone.
          title: hostedZoneId
      title: DnsEntry
      type: object
    ServiceNetworkServiceAssociationIdentifier:
      maxLength: 2048
      minLength: 17
      pattern: "^((snsa-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\\
        d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}))$"
      type: string
    ServiceNetworkServiceAssociationStatus:
      enum:
      - CREATE_IN_PROGRESS
      - ACTIVE
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_FAILED
      title: ServiceNetworkServiceAssociationStatus
      type: string
    CreateServiceNetworkVpcAssociationRequestSecurityGroupIdsList:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
      minItems: 0
      type: array
    CreateServiceNetworkVpcAssociationRequest:
      example:
        clientToken: ""
        securityGroupIds: ""
        serviceNetworkIdentifier: ""
        vpcIdentifier: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If you retry a request that\
              \ completed successfully using the same client token and parameters,\
              \ the retry succeeds without performing any actions. If the parameters\
              \ aren't identical, the retry fails."
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/CreateServiceNetworkVpcAssociationRequestSecurityGroupIdsList'
          - description: "The IDs of the security groups. Security groups aren't added\
              \ by default. You can add a security group to apply network level controls\
              \ to control which resources in a VPC are allowed to access the service\
              \ network and its services. For more information, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html\"\
              >Control traffic to resources using security groups</a> in the <i>Amazon\
              \ VPC User Guide</i>."
        serviceNetworkIdentifier:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkIdentifier'
          - description: The ID or Amazon Resource Name (ARN) of the service network.
              You must use the ARN when the resources specified in the operation are
              in different accounts.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the association.
        vpcIdentifier:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC.
      required:
      - serviceNetworkIdentifier
      - vpcIdentifier
      title: CreateServiceNetworkVpcAssociationRequest
      type: object
    ServiceNetworkVpcAssociationArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}$"
      type: string
    ServiceNetworkVpcAssociationId:
      maxLength: 22
      minLength: 22
      pattern: "^snva-[0-9a-z]{17}$"
      type: string
    SecurityGroupList:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      type: array
    ServiceNetworkVpcAssociationStatus:
      enum:
      - CREATE_IN_PROGRESS
      - ACTIVE
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_FAILED
      - UPDATE_FAILED
      title: ServiceNetworkVpcAssociationStatus
      type: string
    ServiceName:
      maxLength: 40
      minLength: 3
      pattern: "^(?!svc-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
      type: string
    CreateServiceRequest:
      example:
        customDomainName: ""
        certificateArn: ""
        clientToken: ""
        name: ""
        authType: ""
        tags: ""
      properties:
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: "<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>:\
              \ The resource does not use an IAM policy. This is the default.</p>\
              \ </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy.\
              \ When this type is used, auth is enabled and an auth policy is required.</p>\
              \ </li> </ul>"
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          - description: The Amazon Resource Name (ARN) of the certificate.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If you retry a request that\
              \ completed successfully using the same client token and parameters,\
              \ the retry succeeds without performing any actions. If the parameters\
              \ aren't identical, the retry fails."
        customDomainName:
          allOf:
          - $ref: '#/components/schemas/ServiceCustomDomainName'
          - description: The custom domain name of the service.
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: "The name of the service. The name must be unique within\
              \ the account. The valid characters are a-z, 0-9, and hyphens (-). You\
              \ can't use a hyphen as the first or last character, or immediately\
              \ after another hyphen."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the service.
      required:
      - name
      title: CreateServiceRequest
      type: object
    ServiceStatus:
      enum:
      - ACTIVE
      - CREATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_FAILED
      title: ServiceStatus
      type: string
    TargetGroupConfig:
      description: Describes the configuration of a target group. Lambda functions
        don't support target group configuration.
      properties:
        healthCheck:
          $ref: '#/components/schemas/CreateTargetGroup_request_config_healthCheck'
        ipAddressType:
          allOf:
          - $ref: '#/components/schemas/IpAddressType'
          - description: "The type of IP address used for the target group. The possible\
              \ values are <code>ipv4</code> and <code>ipv6</code>. This is an optional\
              \ parameter. If not specified, the IP address type defaults to <code>ipv4</code>."
          title: ipAddressType
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: "The port on which the targets are listening. For HTTP, the\
              \ default is <code>80</code>. For HTTPS, the default is <code>443</code> "
          title: port
        protocol:
          allOf:
          - $ref: '#/components/schemas/TargetGroupProtocol'
          - description: The protocol to use for routing traffic to the targets. Default
              is the protocol of a target group.
          title: protocol
        protocolVersion:
          allOf:
          - $ref: '#/components/schemas/TargetGroupProtocolVersion'
          - description: The protocol version. Default value is <code>HTTP1</code>.
          title: protocolVersion
        vpcIdentifier:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC.
          title: vpcIdentifier
      required:
      - port
      - protocol
      - vpcIdentifier
      title: TargetGroupConfig
      type: object
    TargetGroupName:
      maxLength: 128
      minLength: 3
      pattern: "^(?!tg-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
      type: string
    TargetGroupType:
      enum:
      - IP
      - LAMBDA
      - INSTANCE
      - ALB
      title: TargetGroupType
      type: string
    CreateTargetGroupRequest:
      example:
        clientToken: ""
        name: ""
        type: ""
        config:
          protocol: ""
          port: ""
          healthCheck:
            path: ""
            protocol: ""
            port: ""
            healthCheckIntervalSeconds: ""
            healthCheckTimeoutSeconds: ""
            healthyThresholdCount: ""
            protocolVersion: ""
            matcher:
              httpCode: ""
            enabled: ""
            unhealthyThresholdCount: ""
          protocolVersion: ""
          vpcIdentifier: ""
          ipAddressType: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If you retry a request that\
              \ completed successfully using the same client token and parameters,\
              \ the retry succeeds without performing any actions. If the parameters\
              \ aren't identical, the retry fails."
        config:
          $ref: '#/components/schemas/CreateTargetGroupResponse_config'
        name:
          allOf:
          - $ref: '#/components/schemas/TargetGroupName'
          - description: "The name of the target group. The name must be unique within\
              \ the account. The valid characters are a-z, 0-9, and hyphens (-). You\
              \ can't use a hyphen as the first or last character, or immediately\
              \ after another hyphen."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the target group.
        type:
          allOf:
          - $ref: '#/components/schemas/TargetGroupType'
          - description: The type of target group.
      required:
      - name
      - type
      title: CreateTargetGroupRequest
      type: object
    TargetGroupArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\d{12}:targetgroup/tg-[0-9a-z]{17}$"
      type: string
    TargetGroupId:
      maxLength: 20
      minLength: 20
      pattern: "^tg-[0-9a-z]{17}$"
      type: string
    TargetGroupStatus:
      enum:
      - CREATE_IN_PROGRESS
      - ACTIVE
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_FAILED
      title: TargetGroupStatus
      type: string
    DeleteAccessLogSubscriptionRequest:
      properties: {}
      title: DeleteAccessLogSubscriptionRequest
      type: object
    DeleteAuthPolicyRequest:
      properties: {}
      title: DeleteAuthPolicyRequest
      type: object
    DeleteListenerRequest:
      properties: {}
      title: DeleteListenerRequest
      type: object
    DeleteResourcePolicyRequest:
      properties: {}
      title: DeleteResourcePolicyRequest
      type: object
    RuleIdentifier:
      maxLength: 2048
      minLength: 20
      pattern: "^((rule-[0-9a-z]{17})|(^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
        -]+:\\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$))$"
      type: string
    DeleteRuleRequest:
      properties: {}
      title: DeleteRuleRequest
      type: object
    DeleteServiceNetworkRequest:
      properties: {}
      title: DeleteServiceNetworkRequest
      type: object
    DeleteServiceNetworkServiceAssociationRequest:
      properties: {}
      title: DeleteServiceNetworkServiceAssociationRequest
      type: object
    ServiceNetworkVpcAssociationIdentifier:
      maxLength: 2048
      minLength: 17
      pattern: "^((snva-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\\
        d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}))$"
      type: string
    DeleteServiceNetworkVpcAssociationRequest:
      properties: {}
      title: DeleteServiceNetworkVpcAssociationRequest
      type: object
    DeleteServiceRequest:
      properties: {}
      title: DeleteServiceRequest
      type: object
    TargetGroupIdentifier:
      maxLength: 2048
      minLength: 17
      pattern: "^((tg-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\\
        d{12}:targetgroup/tg-[0-9a-z]{17}))$"
      type: string
    DeleteTargetGroupRequest:
      properties: {}
      title: DeleteTargetGroupRequest
      type: object
    DeregisterTargetsRequestTargetsList:
      items:
        $ref: '#/components/schemas/Target'
      maxItems: 100
      minItems: 1
      type: array
    DeregisterTargetsRequest:
      example:
        targets: ""
      properties:
        targets:
          allOf:
          - $ref: '#/components/schemas/DeregisterTargetsRequestTargetsList'
          - description: The targets to deregister.
      required:
      - targets
      title: DeregisterTargetsRequest
      type: object
    TargetList:
      items:
        $ref: '#/components/schemas/Target'
      type: array
    TargetFailureList:
      items:
        $ref: '#/components/schemas/TargetFailure'
      type: array
    String:
      type: string
    FailureCode:
      type: string
    FailureMessage:
      type: string
    HttpStatusCode:
      maximum: 599
      minimum: 100
      type: integer
    WeightedTargetGroupList:
      items:
        $ref: '#/components/schemas/WeightedTargetGroup'
      maxItems: 2
      minItems: 1
      type: array
    GetAccessLogSubscriptionRequest:
      properties: {}
      title: GetAccessLogSubscriptionRequest
      type: object
    GetAuthPolicyRequest:
      properties: {}
      title: GetAuthPolicyRequest
      type: object
    GetListenerRequest:
      properties: {}
      title: GetListenerRequest
      type: object
    GetResourcePolicyRequest:
      properties: {}
      title: GetResourcePolicyRequest
      type: object
    PolicyString:
      maxLength: 10000
      minLength: 1
      pattern: ^.*\S.*$
      type: string
    GetRuleRequest:
      properties: {}
      title: GetRuleRequest
      type: object
    GetServiceNetworkRequest:
      properties: {}
      title: GetServiceNetworkRequest
      type: object
    Long:
      type: integer
    GetServiceNetworkServiceAssociationRequest:
      properties: {}
      title: GetServiceNetworkServiceAssociationRequest
      type: object
    GetServiceNetworkVpcAssociationRequest:
      properties: {}
      title: GetServiceNetworkVpcAssociationRequest
      type: object
    GetServiceRequest:
      properties: {}
      title: GetServiceRequest
      type: object
    GetTargetGroupRequest:
      properties: {}
      title: GetTargetGroupRequest
      type: object
    ServiceArnList:
      items:
        $ref: '#/components/schemas/ServiceArn'
      type: array
    HeaderMatchType:
      description: Describes a header match type. Only one can be provided.
      properties:
        contains:
          allOf:
          - $ref: '#/components/schemas/HeaderMatchContains'
          - description: Specifies a contains type match.
          title: contains
        exact:
          allOf:
          - $ref: '#/components/schemas/HeaderMatchExact'
          - description: Specifies an exact type match.
          title: exact
        prefix:
          allOf:
          - $ref: '#/components/schemas/HeaderMatchPrefix'
          - description: Specifies a prefix type match. Matches the value with the
              prefix.
          title: prefix
      title: HeaderMatchType
      type: object
    HeaderMatchName:
      maxLength: 100
      minLength: 1
      type: string
    HeaderMatch:
      description: Describes the constraints for a header match. Matches incoming
        requests with rule based on request header value before applying rule action.
      properties:
        caseSensitive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the match is case sensitive. Defaults to
              false.
          title: caseSensitive
        match:
          $ref: '#/components/schemas/HeaderMatch_match'
        name:
          allOf:
          - $ref: '#/components/schemas/HeaderMatchName'
          - description: The name of the header.
          title: name
      required:
      - match
      - name
      title: HeaderMatch
      type: object
    HeaderMatchContains:
      maxLength: 200
      minLength: 1
      type: string
    HeaderMatchExact:
      maxLength: 200
      minLength: 1
      type: string
    HeaderMatchList:
      items:
        $ref: '#/components/schemas/HeaderMatch'
      maxItems: 5
      minItems: 1
      type: array
    HeaderMatchPrefix:
      maxLength: 200
      minLength: 1
      type: string
    HttpCodeMatcher:
      maxLength: 2000
      minLength: 0
      pattern: "(^[0-9-,]+$|(^$))"
      type: string
    HttpMethod:
      maxLength: 16
      minLength: 0
      type: string
    PathMatch:
      description: Describes the conditions that can be applied when matching a path
        for incoming requests.
      properties:
        caseSensitive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the match is case sensitive. Defaults to
              false.
          title: caseSensitive
        match:
          $ref: '#/components/schemas/PathMatch_match'
      required:
      - match
      title: PathMatch
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 2048
      minLength: 1
      type: string
    ListAccessLogSubscriptionsRequest:
      properties: {}
      title: ListAccessLogSubscriptionsRequest
      type: object
    ListListenersRequest:
      properties: {}
      title: ListListenersRequest
      type: object
    ListenerSummaryList:
      items:
        $ref: '#/components/schemas/ListenerSummary'
      type: array
    ListRulesRequest:
      properties: {}
      title: ListRulesRequest
      type: object
    RuleSummaryList:
      items:
        $ref: '#/components/schemas/RuleSummary'
      type: array
    ListServiceNetworkServiceAssociationsRequest:
      properties: {}
      title: ListServiceNetworkServiceAssociationsRequest
      type: object
    ServiceNetworkServiceAssociationList:
      items:
        $ref: '#/components/schemas/ServiceNetworkServiceAssociationSummary'
      type: array
    ListServiceNetworkVpcAssociationsRequest:
      properties: {}
      title: ListServiceNetworkVpcAssociationsRequest
      type: object
    ServiceNetworkVpcAssociationList:
      items:
        $ref: '#/components/schemas/ServiceNetworkVpcAssociationSummary'
      type: array
    ListServiceNetworksRequest:
      properties: {}
      title: ListServiceNetworksRequest
      type: object
    ServiceNetworkList:
      items:
        $ref: '#/components/schemas/ServiceNetworkSummary'
      type: array
    ListServicesRequest:
      properties: {}
      title: ListServicesRequest
      type: object
    ServiceList:
      items:
        $ref: '#/components/schemas/ServiceSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListTargetGroupsRequest:
      properties: {}
      title: ListTargetGroupsRequest
      type: object
    TargetGroupList:
      items:
        $ref: '#/components/schemas/TargetGroupSummary'
      type: array
    ListTargetsRequestTargetsList:
      items:
        $ref: '#/components/schemas/Target'
      maxItems: 20
      minItems: 0
      type: array
    ListTargetsRequest:
      example:
        targets: ""
      properties:
        targets:
          allOf:
          - $ref: '#/components/schemas/ListTargetsRequestTargetsList'
          - description: The targets to list.
      title: ListTargetsRequest
      type: object
    TargetSummaryList:
      items:
        $ref: '#/components/schemas/TargetSummary'
      type: array
    ListenerSummary:
      description: Summary information about a listener.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ListenerArn'
          - description: The Amazon Resource Name (ARN) of the listener.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the listener was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        id:
          allOf:
          - $ref: '#/components/schemas/ListenerId'
          - description: The ID of the listener.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the listener was last updated, specified\
              \ in ISO-8601 format."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ListenerName'
          - description: The name of the listener.
          title: name
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The listener port.
          title: port
        protocol:
          allOf:
          - $ref: '#/components/schemas/ListenerProtocol'
          - description: The listener protocol.
          title: protocol
      title: ListenerSummary
      type: object
    PathMatchType:
      description: Describes a path match type. Each rule can include only one of
        the following types of paths.
      properties:
        exact:
          allOf:
          - $ref: '#/components/schemas/PathMatchExact'
          - description: An exact match of the path.
          title: exact
        prefix:
          allOf:
          - $ref: '#/components/schemas/PathMatchPrefix'
          - description: A prefix match of the path.
          title: prefix
      title: PathMatchType
      type: object
    PathMatchExact:
      maxLength: 200
      minLength: 1
      pattern: "^/[a-zA-Z0-9@:%_+.~#?&/=-]*$"
      type: string
    PathMatchPrefix:
      maxLength: 200
      minLength: 1
      pattern: "^/[a-zA-Z0-9@:%_+.~#?&/=-]*$"
      type: string
    PutAuthPolicyRequest:
      example:
        policy: ""
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/AuthPolicyString'
          - description: The auth policy. The policy string in JSON must not contain
              newlines or blank lines.
      required:
      - policy
      title: PutAuthPolicyRequest
      type: object
    PutResourcePolicyRequest:
      example:
        policy: ""
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyString'
          - description: An IAM policy. The policy string in JSON must not contain
              newlines or blank lines.
      required:
      - policy
      title: PutResourcePolicyRequest
      type: object
    RegisterTargetsRequestTargetsList:
      items:
        $ref: '#/components/schemas/Target'
      maxItems: 100
      minItems: 1
      type: array
    RegisterTargetsRequest:
      example:
        targets: ""
      properties:
        targets:
          allOf:
          - $ref: '#/components/schemas/RegisterTargetsRequestTargetsList'
          - description: The targets.
      required:
      - targets
      title: RegisterTargetsRequest
      type: object
    RuleSummary:
      description: Summary information about the listener rule.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          - description: The Amazon Resource Name (ARN) of the rule.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the listener rule was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        id:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          - description: The ID of the rule.
          title: id
        isDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: 'Indicates whether this is the default rule. Listener rules
              are created when you create a listener. Each listener has a default
              rule for checking connection requests. '
          title: isDefault
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the listener rule was last updated,\
              \ specified in ISO-8601 format."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: name
        priority:
          allOf:
          - $ref: '#/components/schemas/RulePriority'
          - description: ' The priority of the rule. '
          title: priority
      title: RuleSummary
      type: object
    RuleUpdateFailure:
      description: Describes a rule update that failed.
      properties:
        failureCode:
          allOf:
          - $ref: '#/components/schemas/FailureCode'
          - description: The failure code.
          title: failureCode
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/FailureMessage'
          - description: The failure message.
          title: failureMessage
        ruleIdentifier:
          allOf:
          - $ref: '#/components/schemas/RuleIdentifier'
          - description: The ID or Amazon Resource Name (ARN) of the rule.
          title: ruleIdentifier
      title: RuleUpdateFailure
      type: object
    RuleUpdateSuccess:
      description: Describes a successful rule update.
      properties:
        action:
          $ref: '#/components/schemas/CreateListenerResponse_defaultAction'
        arn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          - description: The Amazon Resource Name (ARN) of the listener.
          title: arn
        id:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          - description: The ID of the listener.
          title: id
        isDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether this is the default rule.
          title: isDefault
        match:
          $ref: '#/components/schemas/RuleUpdate_match'
        name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the listener.
          title: name
        priority:
          allOf:
          - $ref: '#/components/schemas/RulePriority'
          - description: The rule priority.
          title: priority
      title: RuleUpdateSuccess
      type: object
    ServiceSummary:
      description: Summary information about a service.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the service was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        customDomainName:
          allOf:
          - $ref: '#/components/schemas/ServiceCustomDomainName'
          - description: ' The custom domain name of the service. '
          title: customDomainName
        dnsEntry:
          $ref: '#/components/schemas/ServiceSummary_dnsEntry'
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the service was last updated. The
              format is ISO-8601.
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceStatus'
          - description: The status.
          title: status
      title: ServiceSummary
      type: object
    ServiceNetworkSummary:
      description: Summary information about a service network.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkArn'
          - description: The Amazon Resource Name (ARN) of the service network.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the service network was created,\
              \ specified in ISO-8601 format."
          title: createdAt
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkId'
          - description: The ID of the service network.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the service network was last updated,\
              \ specified in ISO-8601 format."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkName'
          - description: The name of the service network.
          title: name
        numberOfAssociatedServices:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of services associated with the service network.
          title: numberOfAssociatedServices
        numberOfAssociatedVPCs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of VPCs associated with the service network.
          title: numberOfAssociatedVPCs
      title: ServiceNetworkSummary
      type: object
    ServiceNetworkServiceAssociationSummary:
      description: Summary information about the association between a service network
        and a service.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationArn'
          - description: The Amazon Resource Name (ARN) of the association.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the association was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        createdBy:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account that created the association.
          title: createdBy
        customDomainName:
          allOf:
          - $ref: '#/components/schemas/ServiceCustomDomainName'
          - description: ' The custom domain name of the service. '
          title: customDomainName
        dnsEntry:
          $ref: '#/components/schemas/ServiceSummary_dnsEntry'
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationIdentifier'
          - description: The ID of the association.
          title: id
        serviceArn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: serviceArn
        serviceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service.
          title: serviceId
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: serviceName
        serviceNetworkArn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkArn'
          - description: The Amazon Resource Name (ARN) of the service network.
          title: serviceNetworkArn
        serviceNetworkId:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkId'
          - description: The ID of the service network.
          title: serviceNetworkId
        serviceNetworkName:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkName'
          - description: The name of the service network.
          title: serviceNetworkName
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkServiceAssociationStatus'
          - description: "The status. If the deletion fails, try to delete again."
          title: status
      title: ServiceNetworkServiceAssociationSummary
      type: object
    ServiceNetworkVpcAssociationSummary:
      description: Summary information about an association between a service network
        and a VPC.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
          - description: The Amazon Resource Name (ARN) of the association.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the association was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        createdBy:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account that created the association.
          title: createdBy
        id:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
          - description: The ID of the association.
          title: id
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the association was last updated,\
              \ specified in ISO-8601 format."
          title: lastUpdatedAt
        serviceNetworkArn:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkArn'
          - description: The Amazon Resource Name (ARN) of the service network.
          title: serviceNetworkArn
        serviceNetworkId:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkId'
          - description: The ID of the service network.
          title: serviceNetworkId
        serviceNetworkName:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkName'
          - description: The name of the service network.
          title: serviceNetworkName
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
          - description: The status.
          title: status
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC.
          title: vpcId
      title: ServiceNetworkVpcAssociationSummary
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    TargetIdString:
      maxLength: 200
      minLength: 1
      type: string
    TargetFailure:
      description: Describes a target failure.
      properties:
        failureCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The failure code.
          title: failureCode
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The failure message.
          title: failureMessage
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the target. If the target type of the target group\
              \ is <code>INSTANCE</code>, this is an instance ID. If the target type\
              \ is <code>IP</code> , this is an IP address. If the target type is\
              \ <code>LAMBDA</code>, this is the ARN of the Lambda function. If the\
              \ target type is <code>ALB</code>, this is the ARN of the Application\
              \ Load Balancer."
          title: id
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The port on which the target is listening. This parameter
              doesn't apply if the target is a Lambda function.
          title: port
      title: TargetFailure
      type: object
    TargetGroupSummary:
      description: Summary information about a target group.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/TargetGroupArn'
          - description: The ARN (Amazon Resource Name) of the target group.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the target group was created, specified\
              \ in ISO-8601 format."
          title: createdAt
        id:
          allOf:
          - $ref: '#/components/schemas/TargetGroupId'
          - description: The ID of the target group.
          title: id
        ipAddressType:
          allOf:
          - $ref: '#/components/schemas/IpAddressType'
          - description: "The type of IP address used for the target group. The possible\
              \ values are <code>ipv4</code> and <code>ipv6</code>. This is an optional\
              \ parameter. If not specified, the IP address type defaults to <code>ipv4</code>."
          title: ipAddressType
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the target group was last updated,\
              \ specified in ISO-8601 format."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/TargetGroupName'
          - description: The name of the target group.
          title: name
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The port of the target group.
          title: port
        protocol:
          allOf:
          - $ref: '#/components/schemas/TargetGroupProtocol'
          - description: The protocol of the target group.
          title: protocol
        serviceArns:
          allOf:
          - $ref: '#/components/schemas/ServiceArnList'
          - description: The list of Amazon Resource Names (ARNs) of the service.
          title: serviceArns
        status:
          allOf:
          - $ref: '#/components/schemas/TargetGroupStatus'
          - description: The status.
          title: status
        type:
          allOf:
          - $ref: '#/components/schemas/TargetGroupType'
          - description: The target group type.
          title: type
        vpcIdentifier:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC of the target group.
          title: vpcIdentifier
      title: TargetGroupSummary
      type: object
    TargetGroupWeight:
      maximum: 999
      minimum: 0
      type: integer
    TargetStatus:
      enum:
      - DRAINING
      - UNAVAILABLE
      - HEALTHY
      - UNHEALTHY
      - INITIAL
      - UNUSED
      title: TargetStatus
      type: string
    TargetSummary:
      description: Summary information about a target.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the target. If the target type of the target group\
              \ is <code>INSTANCE</code>, this is an instance ID. If the target type\
              \ is <code>IP</code> , this is an IP address. If the target type is\
              \ <code>LAMBDA</code>, this is the ARN of the Lambda function. If the\
              \ target type is <code>ALB</code>, this is the ARN of the Application\
              \ Load Balancer."
          title: id
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The port on which the target is listening.
          title: port
        reasonCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The code for why the target status is what it is.
          title: reasonCode
        status:
          allOf:
          - $ref: '#/components/schemas/TargetStatus'
          - description: "<p>The status of the target.</p> <ul> <li> <p> <code>Draining</code>:\
              \ The target is being deregistered. No new connections will be sent\
              \ to this target while current connections are being drained. Default\
              \ draining time is 5 minutes.</p> </li> <li> <p> <code>Unavailable</code>:\
              \ Health checks are unavailable for the target group.</p> </li> <li>\
              \ <p> <code>Healthy</code>: The target is healthy. </p> </li> <li> <p>\
              \ <code>Unhealthy</code>: The target is unhealthy.</p> </li> <li> <p>\
              \ <code>Initial</code>: Initial health checks on the target are being\
              \ performed.</p> </li> <li> <p> <code>Unused</code>: Target group is\
              \ not used in a service.</p> </li> </ul>"
          title: status
      title: TargetSummary
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAccessLogSubscriptionRequest:
      example:
        destinationArn: ""
      properties:
        destinationArn:
          allOf:
          - $ref: '#/components/schemas/AccessLogDestinationArn'
          - description: The Amazon Resource Name (ARN) of the access log destination.
      required:
      - destinationArn
      title: UpdateAccessLogSubscriptionRequest
      type: object
    UpdateListenerRequest:
      example:
        defaultAction:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
      properties:
        defaultAction:
          $ref: '#/components/schemas/CreateListenerResponse_defaultAction'
      required:
      - defaultAction
      title: UpdateListenerRequest
      type: object
    UpdateRuleRequest:
      example:
        match:
          httpMatch:
            headerMatches: ""
            method: ""
            pathMatch:
              caseSensitive: ""
              match:
                prefix: ""
                exact: ""
        action:
          forward:
            targetGroups: ""
          fixedResponse:
            statusCode: ""
        priority: ""
      properties:
        action:
          $ref: '#/components/schemas/UpdateRuleResponse_action'
        match:
          $ref: '#/components/schemas/RuleUpdate_match'
        priority:
          allOf:
          - $ref: '#/components/schemas/RulePriority'
          - description: The rule priority. A listener can't have multiple rules with
              the same priority.
      title: UpdateRuleRequest
      type: object
    UpdateServiceNetworkRequest:
      example:
        authType: ""
      properties:
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: "<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>:\
              \ The resource does not use an IAM policy. This is the default.</p>\
              \ </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy.\
              \ When this type is used, auth is enabled and an auth policy is required.</p>\
              \ </li> </ul>"
      required:
      - authType
      title: UpdateServiceNetworkRequest
      type: object
    UpdateServiceNetworkVpcAssociationRequestSecurityGroupIdsList:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
      minItems: 1
      type: array
    UpdateServiceNetworkVpcAssociationRequest:
      example:
        securityGroupIds: ""
      properties:
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/UpdateServiceNetworkVpcAssociationRequestSecurityGroupIdsList'
          - description: 'The IDs of the security groups. '
      required:
      - securityGroupIds
      title: UpdateServiceNetworkVpcAssociationRequest
      type: object
    UpdateServiceRequest:
      example:
        certificateArn: ""
        authType: ""
      properties:
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: "<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>:\
              \ The resource does not use an IAM policy. This is the default.</p>\
              \ </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy.\
              \ When this type is used, auth is enabled and an auth policy is required.</p>\
              \ </li> </ul>"
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          - description: 'The Amazon Resource Name (ARN) of the certificate. '
      title: UpdateServiceRequest
      type: object
    UpdateTargetGroupRequest:
      example:
        healthCheck:
          path: ""
          protocol: ""
          port: ""
          healthCheckIntervalSeconds: ""
          healthCheckTimeoutSeconds: ""
          healthyThresholdCount: ""
          protocolVersion: ""
          matcher:
            httpCode: ""
          enabled: ""
          unhealthyThresholdCount: ""
      properties:
        healthCheck:
          $ref: '#/components/schemas/CreateTargetGroup_request_config_healthCheck'
      required:
      - healthCheck
      title: UpdateTargetGroupRequest
      type: object
    WeightedTargetGroup:
      description: Describes the weight of a target group.
      properties:
        targetGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/TargetGroupIdentifier'
          - description: The ID or Amazon Resource Name (ARN) of the target group.
          title: targetGroupIdentifier
        weight:
          allOf:
          - $ref: '#/components/schemas/TargetGroupWeight'
          - description: "Only required if you specify multiple target groups for\
              \ a forward action. The \"weight\" determines how requests are distributed\
              \ to the target group. For example, if you specify two target groups,\
              \ each with a weight of 10, each target group receives half the requests.\
              \ If you specify two target groups, one with a weight of 10 and the\
              \ other with a weight of 20, the target group with a weight of 20 receives\
              \ twice as many requests as the other target group. If there's only\
              \ one target group specified, then the default value is 100."
          title: weight
      required:
      - targetGroupIdentifier
      title: WeightedTargetGroup
      type: object
    CreateRule_request_action_fixedResponse:
      allOf:
      - $ref: '#/components/schemas/FixedResponseAction'
      - description: ' Describes the rule action that returns a custom HTTP response. '
      example:
        statusCode: ""
      title: CreateRule_request_action_fixedResponse
    CreateRule_request_action_forward:
      allOf:
      - $ref: '#/components/schemas/ForwardAction'
      - description: The forward action. Traffic that matches the rule is forwarded
          to the specified target groups.
      example:
        targetGroups: ""
      title: CreateRule_request_action_forward
    CreateRule_request_action:
      description: "Describes the action for a rule. Each rule must include exactly\
        \ one of the following types of actions: <code>forward </code>or <code>fixed-response</code>,\
        \ and it must be the last action to be performed."
      properties:
        fixedResponse:
          $ref: '#/components/schemas/CreateRule_request_action_fixedResponse'
        forward:
          $ref: '#/components/schemas/CreateRule_request_action_forward'
      title: CreateRule_request_action
      type: object
    CreateRule_request_match_httpMatch:
      allOf:
      - $ref: '#/components/schemas/HttpMatch'
      - description: The HTTP criteria that a rule must match.
      example:
        headerMatches: ""
        method: ""
        pathMatch:
          caseSensitive: ""
          match:
            prefix: ""
            exact: ""
      title: CreateRule_request_match_httpMatch
    CreateRule_request_match:
      description: Describes a rule match.
      properties:
        httpMatch:
          $ref: '#/components/schemas/CreateRule_request_match_httpMatch'
      title: CreateRule_request_match
      type: object
    CreateRule_request:
      properties:
        action:
          $ref: '#/components/schemas/CreateRule_request_action'
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If you retry a request that completed\
            \ successfully using the same client token and parameters, the retry succeeds\
            \ without performing any actions. If the parameters aren't identical,\
            \ the retry fails."
          maxLength: 64
          minLength: 1
          pattern: "[!-~]+"
          title: clientToken
          type: string
        match:
          $ref: '#/components/schemas/CreateRule_request_match'
        name:
          description: "The name of the rule. The name must be unique within the listener.\
            \ The valid characters are a-z, 0-9, and hyphens (-). You can't use a\
            \ hyphen as the first or last character, or immediately after another\
            \ hyphen."
          maxLength: 63
          minLength: 3
          pattern: "^(?!rule-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
          title: name
          type: string
        priority:
          description: The priority assigned to the rule. Each rule for a specific
            listener must have a unique priority. The lower the priority number the
            higher the priority.
          maximum: 100
          minimum: 1
          title: priority
          type: integer
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the rule.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - action
      - match
      - name
      - priority
      title: CreateRule_request
      type: object
    BatchUpdateRule_request:
      properties:
        rules:
          description: The rules for the specified listener.
          items:
            $ref: '#/components/schemas/RuleUpdate'
          maxItems: 5
          minItems: 1
          title: rules
          type: array
      required:
      - rules
      title: BatchUpdateRule_request
      type: object
    CreateAccessLogSubscription_request:
      properties:
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If you retry a request that completed\
            \ successfully using the same client token and parameters, the retry succeeds\
            \ without performing any actions. If the parameters aren't identical,\
            \ the retry fails."
          maxLength: 64
          minLength: 1
          pattern: "[!-~]+"
          title: clientToken
          type: string
        destinationArn:
          description: "The Amazon Resource Name (ARN) of the destination. The supported\
            \ destination types are CloudWatch Log groups, Kinesis Data Firehose delivery\
            \ streams, and Amazon S3 buckets."
          maxLength: 2048
          minLength: 20
          pattern: "^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$"
          title: destinationArn
          type: string
        resourceIdentifier:
          description: The ID or Amazon Resource Name (ARN) of the service network
            or service.
          maxLength: 200
          minLength: 17
          pattern: "^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$"
          title: resourceIdentifier
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the access log subscription.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - destinationArn
      - resourceIdentifier
      title: CreateAccessLogSubscription_request
      type: object
    CreateListener_request:
      properties:
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If you retry a request that completed\
            \ successfully using the same client token and parameters, the retry succeeds\
            \ without performing any actions. If the parameters aren't identical,\
            \ the retry fails."
          maxLength: 64
          minLength: 1
          pattern: "[!-~]+"
          title: clientToken
          type: string
        defaultAction:
          $ref: '#/components/schemas/CreateRule_request_action'
        name:
          description: "The name of the listener. A listener name must be unique within\
            \ a service. The valid characters are a-z, 0-9, and hyphens (-). You can't\
            \ use a hyphen as the first or last character, or immediately after another\
            \ hyphen."
          maxLength: 63
          minLength: 3
          pattern: "^(?!listener-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
          title: name
          type: string
        port:
          description: "The listener port. You can specify a value from <code>1</code>\
            \ to <code>65535</code>. For HTTP, the default is <code>80</code>. For\
            \ HTTPS, the default is <code>443</code>."
          maximum: 65535
          minimum: 1
          title: port
          type: integer
        protocol:
          description: The listener protocol HTTP or HTTPS.
          enum:
          - HTTP
          - HTTPS
          title: protocol
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the listener.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - defaultAction
      - name
      - protocol
      title: CreateListener_request
      type: object
    CreateService_request:
      properties:
        authType:
          description: "<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>:\
            \ The resource does not use an IAM policy. This is the default.</p> </li>\
            \ <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When\
            \ this type is used, auth is enabled and an auth policy is required.</p>\
            \ </li> </ul>"
          enum:
          - NONE
          - AWS_IAM
          title: authType
          type: string
        certificateArn:
          description: The Amazon Resource Name (ARN) of the certificate.
          maxLength: 2048
          minLength: 0
          pattern: "^(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:certificate/[0-9a-z-]+)?$"
          title: certificateArn
          type: string
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If you retry a request that completed\
            \ successfully using the same client token and parameters, the retry succeeds\
            \ without performing any actions. If the parameters aren't identical,\
            \ the retry fails."
          maxLength: 64
          minLength: 1
          pattern: "[!-~]+"
          title: clientToken
          type: string
        customDomainName:
          description: The custom domain name of the service.
          maxLength: 255
          minLength: 3
          title: customDomainName
          type: string
        name:
          description: "The name of the service. The name must be unique within the\
            \ account. The valid characters are a-z, 0-9, and hyphens (-). You can't\
            \ use a hyphen as the first or last character, or immediately after another\
            \ hyphen."
          maxLength: 40
          minLength: 3
          pattern: "^(?!svc-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
          title: name
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the service.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - name
      title: CreateService_request
      type: object
    CreateServiceNetwork_request:
      properties:
        authType:
          description: "<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>:\
            \ The resource does not use an IAM policy. This is the default.</p> </li>\
            \ <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When\
            \ this type is used, auth is enabled and an auth policy is required.</p>\
            \ </li> </ul>"
          enum:
          - NONE
          - AWS_IAM
          title: authType
          type: string
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If you retry a request that completed\
            \ successfully using the same client token and parameters, the retry succeeds\
            \ without performing any actions. If the parameters aren't identical,\
            \ the retry fails."
          maxLength: 64
          minLength: 1
          pattern: "[!-~]+"
          title: clientToken
          type: string
        name:
          description: "The name of the service network. The name must be unique to\
            \ the account. The valid characters are a-z, 0-9, and hyphens (-). You\
            \ can't use a hyphen as the first or last character, or immediately after\
            \ another hyphen."
          maxLength: 63
          minLength: 3
          pattern: "^(?!servicenetwork-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
          title: name
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the service network.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - name
      title: CreateServiceNetwork_request
      type: object
    CreateServiceNetworkServiceAssociation_request:
      properties:
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If you retry a request that completed\
            \ successfully using the same client token and parameters, the retry succeeds\
            \ without performing any actions. If the parameters aren't identical,\
            \ the retry fails."
          maxLength: 64
          minLength: 1
          pattern: "[!-~]+"
          title: clientToken
          type: string
        serviceIdentifier:
          description: The ID or Amazon Resource Name (ARN) of the service.
          maxLength: 2048
          minLength: 17
          pattern: "^((svc-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:service/svc-[0-9a-z]{17}))$"
          title: serviceIdentifier
          type: string
        serviceNetworkIdentifier:
          description: The ID or Amazon Resource Name (ARN) of the service network.
            You must use the ARN if the resources specified in the operation are in
            different accounts.
          maxLength: 2048
          minLength: 3
          pattern: "^((sn-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetwork/sn-[0-9a-z]{17}))$"
          title: serviceNetworkIdentifier
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the association.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - serviceIdentifier
      - serviceNetworkIdentifier
      title: CreateServiceNetworkServiceAssociation_request
      type: object
    CreateServiceNetworkVpcAssociation_request:
      properties:
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If you retry a request that completed\
            \ successfully using the same client token and parameters, the retry succeeds\
            \ without performing any actions. If the parameters aren't identical,\
            \ the retry fails."
          maxLength: 64
          minLength: 1
          pattern: "[!-~]+"
          title: clientToken
          type: string
        securityGroupIds:
          description: "The IDs of the security groups. Security groups aren't added\
            \ by default. You can add a security group to apply network level controls\
            \ to control which resources in a VPC are allowed to access the service\
            \ network and its services. For more information, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html\"\
            >Control traffic to resources using security groups</a> in the <i>Amazon\
            \ VPC User Guide</i>."
          items:
            $ref: '#/components/schemas/SecurityGroupId'
          maxItems: 5
          minItems: 0
          title: securityGroupIds
          type: array
        serviceNetworkIdentifier:
          description: The ID or Amazon Resource Name (ARN) of the service network.
            You must use the ARN when the resources specified in the operation are
            in different accounts.
          maxLength: 2048
          minLength: 3
          pattern: "^((sn-[0-9a-z]{17})|(arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\\
            -]+:\\d{12}:servicenetwork/sn-[0-9a-z]{17}))$"
          title: serviceNetworkIdentifier
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the association.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
        vpcIdentifier:
          description: The ID of the VPC.
          maxLength: 50
          minLength: 5
          pattern: "^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$"
          title: vpcIdentifier
          type: string
      required:
      - serviceNetworkIdentifier
      - vpcIdentifier
      title: CreateServiceNetworkVpcAssociation_request
      type: object
    CreateTargetGroup_request_config_healthCheck:
      allOf:
      - $ref: '#/components/schemas/HealthCheckConfig'
      - description: The health check configuration.
      example:
        path: ""
        protocol: ""
        port: ""
        healthCheckIntervalSeconds: ""
        healthCheckTimeoutSeconds: ""
        healthyThresholdCount: ""
        protocolVersion: ""
        matcher:
          httpCode: ""
        enabled: ""
        unhealthyThresholdCount: ""
      title: CreateTargetGroup_request_config_healthCheck
    CreateTargetGroup_request_config:
      description: Describes the configuration of a target group. Lambda functions
        don't support target group configuration.
      properties:
        healthCheck:
          $ref: '#/components/schemas/CreateTargetGroup_request_config_healthCheck'
        ipAddressType:
          allOf:
          - $ref: '#/components/schemas/IpAddressType'
          - description: "The type of IP address used for the target group. The possible\
              \ values are <code>ipv4</code> and <code>ipv6</code>. This is an optional\
              \ parameter. If not specified, the IP address type defaults to <code>ipv4</code>."
          title: ipAddressType
        port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: "The port on which the targets are listening. For HTTP, the\
              \ default is <code>80</code>. For HTTPS, the default is <code>443</code> "
          title: port
        protocol:
          allOf:
          - $ref: '#/components/schemas/TargetGroupProtocol'
          - description: The protocol to use for routing traffic to the targets. Default
              is the protocol of a target group.
          title: protocol
        protocolVersion:
          allOf:
          - $ref: '#/components/schemas/TargetGroupProtocolVersion'
          - description: The protocol version. Default value is <code>HTTP1</code>.
          title: protocolVersion
        vpcIdentifier:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC.
          title: vpcIdentifier
      title: CreateTargetGroup_request_config
      type: object
    CreateTargetGroup_request:
      properties:
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If you retry a request that completed\
            \ successfully using the same client token and parameters, the retry succeeds\
            \ without performing any actions. If the parameters aren't identical,\
            \ the retry fails."
          maxLength: 64
          minLength: 1
          pattern: "[!-~]+"
          title: clientToken
          type: string
        config:
          $ref: '#/components/schemas/CreateTargetGroup_request_config'
        name:
          description: "The name of the target group. The name must be unique within\
            \ the account. The valid characters are a-z, 0-9, and hyphens (-). You\
            \ can't use a hyphen as the first or last character, or immediately after\
            \ another hyphen."
          maxLength: 128
          minLength: 3
          pattern: "^(?!tg-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"
          title: name
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the target group.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
        type:
          description: The type of target group.
          enum:
          - IP
          - LAMBDA
          - INSTANCE
          - ALB
          title: type
          type: string
      required:
      - name
      - type
      title: CreateTargetGroup_request
      type: object
    UpdateAccessLogSubscription_request:
      properties:
        destinationArn:
          description: The Amazon Resource Name (ARN) of the access log destination.
          maxLength: 2048
          minLength: 20
          pattern: "^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$"
          title: destinationArn
          type: string
      required:
      - destinationArn
      title: UpdateAccessLogSubscription_request
      type: object
    PutAuthPolicy_request:
      properties:
        policy:
          description: The auth policy. The policy string in JSON must not contain
            newlines or blank lines.
          maxLength: 10000
          minLength: 0
          pattern: ^.*\S.*$
          title: policy
          type: string
      required:
      - policy
      title: PutAuthPolicy_request
      type: object
    UpdateListener_request:
      properties:
        defaultAction:
          $ref: '#/components/schemas/CreateRule_request_action'
      required:
      - defaultAction
      title: UpdateListener_request
      type: object
    PutResourcePolicy_request:
      properties:
        policy:
          description: An IAM policy. The policy string in JSON must not contain newlines
            or blank lines.
          maxLength: 10000
          minLength: 1
          pattern: ^.*\S.*$
          title: policy
          type: string
      required:
      - policy
      title: PutResourcePolicy_request
      type: object
    UpdateRule_request:
      properties:
        action:
          $ref: '#/components/schemas/CreateRule_request_action'
        match:
          $ref: '#/components/schemas/CreateRule_request_match'
        priority:
          description: The rule priority. A listener can't have multiple rules with
            the same priority.
          maximum: 100
          minimum: 1
          title: priority
          type: integer
      title: UpdateRule_request
      type: object
    UpdateService_request:
      properties:
        authType:
          description: "<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>:\
            \ The resource does not use an IAM policy. This is the default.</p> </li>\
            \ <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When\
            \ this type is used, auth is enabled and an auth policy is required.</p>\
            \ </li> </ul>"
          enum:
          - NONE
          - AWS_IAM
          title: authType
          type: string
        certificateArn:
          description: 'The Amazon Resource Name (ARN) of the certificate. '
          maxLength: 2048
          minLength: 0
          pattern: "^(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:certificate/[0-9a-z-]+)?$"
          title: certificateArn
          type: string
      title: UpdateService_request
      type: object
    UpdateServiceNetwork_request:
      properties:
        authType:
          description: "<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>:\
            \ The resource does not use an IAM policy. This is the default.</p> </li>\
            \ <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When\
            \ this type is used, auth is enabled and an auth policy is required.</p>\
            \ </li> </ul>"
          enum:
          - NONE
          - AWS_IAM
          title: authType
          type: string
      required:
      - authType
      title: UpdateServiceNetwork_request
      type: object
    UpdateServiceNetworkVpcAssociation_request:
      properties:
        securityGroupIds:
          description: 'The IDs of the security groups. '
          items:
            $ref: '#/components/schemas/SecurityGroupId'
          maxItems: 5
          minItems: 1
          title: securityGroupIds
          type: array
      required:
      - securityGroupIds
      title: UpdateServiceNetworkVpcAssociation_request
      type: object
    UpdateTargetGroup_request_healthCheck_matcher:
      allOf:
      - $ref: '#/components/schemas/Matcher'
      - description: The codes to use when checking for a successful response from
          a target. These are called <i>Success codes</i> in the console.
      example:
        httpCode: ""
      title: UpdateTargetGroup_request_healthCheck_matcher
    UpdateTargetGroup_request_healthCheck:
      description: The health check configuration of a target group. Health check
        configurations aren't used for <code>LAMBDA</code> and <code>ALB</code> target
        groups.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether health checking is enabled.
          title: enabled
        healthCheckIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/HealthCheckIntervalSeconds'
          - description: "The approximate amount of time, in seconds, between health\
              \ checks of an individual target. The range is 5–300 seconds. The default\
              \ is 30 seconds."
          title: healthCheckIntervalSeconds
        healthCheckTimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/HealthCheckTimeoutSeconds'
          - description: "The amount of time, in seconds, to wait before reporting\
              \ a target as unhealthy. The range is 1–120 seconds. The default is\
              \ 5 seconds."
          title: healthCheckTimeoutSeconds
        healthyThresholdCount:
          allOf:
          - $ref: '#/components/schemas/HealthyThresholdCount'
          - description: The number of consecutive successful health checks required
              before considering an unhealthy target healthy. The range is 2–10. The
              default is 5.
          title: healthyThresholdCount
        matcher:
          $ref: '#/components/schemas/UpdateTargetGroup_request_healthCheck_matcher'
        path:
          allOf:
          - $ref: '#/components/schemas/HealthCheckPath'
          - description: "The destination for health checks on the targets. If the\
              \ protocol version is <code>HTTP/1.1</code> or <code>HTTP/2</code>,\
              \ specify a valid URI (for example, <code>/path?query</code>). The default\
              \ path is <code>/</code>. Health checks are not supported if the protocol\
              \ version is <code>gRPC</code>, however, you can choose <code>HTTP/1.1</code>\
              \ or <code>HTTP/2</code> and specify a valid URI."
          title: path
        port:
          allOf:
          - $ref: '#/components/schemas/HealthCheckPort'
          - description: The port used when performing health checks on targets. The
              default setting is the port that a target receives traffic on.
          title: port
        protocol:
          allOf:
          - $ref: '#/components/schemas/TargetGroupProtocol'
          - description: The protocol used when performing health checks on targets.
              The possible protocols are <code>HTTP</code> and <code>HTTPS</code>.
              The default is <code>HTTP</code>.
          title: protocol
        protocolVersion:
          allOf:
          - $ref: '#/components/schemas/HealthCheckProtocolVersion'
          - description: The protocol version used when performing health checks on
              targets. The possible protocol versions are <code>HTTP1</code> and <code>HTTP2</code>.
          title: protocolVersion
        unhealthyThresholdCount:
          allOf:
          - $ref: '#/components/schemas/UnhealthyThresholdCount'
          - description: The number of consecutive failed health checks required before
              considering a target unhealthy. The range is 2–10. The default is 2.
          title: unhealthyThresholdCount
      title: UpdateTargetGroup_request_healthCheck
      type: object
    UpdateTargetGroup_request:
      properties:
        healthCheck:
          $ref: '#/components/schemas/UpdateTargetGroup_request_healthCheck'
      required:
      - healthCheck
      title: UpdateTargetGroup_request
      type: object
    DeregisterTargets_request:
      properties:
        targets:
          description: The targets to deregister.
          items:
            $ref: '#/components/schemas/Target'
          maxItems: 100
          minItems: 1
          title: targets
          type: array
      required:
      - targets
      title: DeregisterTargets_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the resource.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    ListTargets_request:
      properties:
        targets:
          description: The targets to list.
          items:
            $ref: '#/components/schemas/Target'
          maxItems: 20
          minItems: 0
          title: targets
          type: array
      title: ListTargets_request
      type: object
    RegisterTargets_request:
      properties:
        targets:
          description: The targets.
          items:
            $ref: '#/components/schemas/Target'
          maxItems: 100
          minItems: 1
          title: targets
          type: array
      required:
      - targets
      title: RegisterTargets_request
      type: object
    RuleUpdate_action:
      allOf:
      - $ref: '#/components/schemas/RuleAction'
      - description: The rule action.
      title: RuleUpdate_action
    RuleUpdate_match:
      allOf:
      - $ref: '#/components/schemas/RuleMatch'
      - description: The rule match.
      example:
        httpMatch:
          headerMatches: ""
          method: ""
          pathMatch:
            caseSensitive: ""
            match:
              prefix: ""
              exact: ""
      title: RuleUpdate_match
    CreateListenerResponse_defaultAction:
      allOf:
      - $ref: '#/components/schemas/RuleAction'
      - description: The action for the default rule.
      example:
        forward:
          targetGroups: ""
        fixedResponse:
          statusCode: ""
      title: CreateListenerResponse_defaultAction
    CreateRuleResponse_action:
      allOf:
      - $ref: '#/components/schemas/RuleAction'
      - description: "The rule action. Each rule must include exactly one of the following\
          \ types of actions: <code>forward </code>or <code>fixed-response</code>,\
          \ and it must be the last action to be performed."
      example:
        forward:
          targetGroups: ""
        fixedResponse:
          statusCode: ""
      title: CreateRuleResponse_action
    CreateRuleResponse_match:
      allOf:
      - $ref: '#/components/schemas/RuleMatch'
      - description: "The rule match. The <code>RuleMatch</code> must be an <code>HttpMatch</code>.\
          \ This means that the rule should be an exact match on HTTP constraints\
          \ which are made up of the HTTP method, path, and header."
      example:
        httpMatch:
          headerMatches: ""
          method: ""
          pathMatch:
            caseSensitive: ""
            match:
              prefix: ""
              exact: ""
      title: CreateRuleResponse_match
    HttpMatch_pathMatch:
      allOf:
      - $ref: '#/components/schemas/PathMatch'
      - description: The path match.
      example:
        caseSensitive: ""
        match:
          prefix: ""
          exact: ""
      title: HttpMatch_pathMatch
    CreateServiceResponse_dnsEntry:
      allOf:
      - $ref: '#/components/schemas/DnsEntry'
      - description: The public DNS name of the service.
      example:
        hostedZoneId: ""
        domainName: ""
      title: CreateServiceResponse_dnsEntry
    CreateServiceNetworkServiceAssociationResponse_dnsEntry:
      allOf:
      - $ref: '#/components/schemas/DnsEntry'
      - description: The DNS name of the service.
      example:
        hostedZoneId: ""
        domainName: ""
      title: CreateServiceNetworkServiceAssociationResponse_dnsEntry
    CreateTargetGroupResponse_config:
      allOf:
      - $ref: '#/components/schemas/TargetGroupConfig'
      - description: "The target group configuration. If <code>type</code> is set\
          \ to <code>LAMBDA</code>, this parameter doesn't apply."
      example:
        protocol: ""
        port: ""
        healthCheck:
          path: ""
          protocol: ""
          port: ""
          healthCheckIntervalSeconds: ""
          healthCheckTimeoutSeconds: ""
          healthyThresholdCount: ""
          protocolVersion: ""
          matcher:
            httpCode: ""
          enabled: ""
          unhealthyThresholdCount: ""
        protocolVersion: ""
        vpcIdentifier: ""
        ipAddressType: ""
      title: CreateTargetGroupResponse_config
    GetListenerResponse_defaultAction:
      allOf:
      - $ref: '#/components/schemas/RuleAction'
      - description: The actions for the default listener rule.
      example:
        forward:
          targetGroups: ""
        fixedResponse:
          statusCode: ""
      title: GetListenerResponse_defaultAction
    GetTargetGroupResponse_config:
      allOf:
      - $ref: '#/components/schemas/TargetGroupConfig'
      - description: The target group configuration.
      example:
        protocol: ""
        port: ""
        healthCheck:
          path: ""
          protocol: ""
          port: ""
          healthCheckIntervalSeconds: ""
          healthCheckTimeoutSeconds: ""
          healthyThresholdCount: ""
          protocolVersion: ""
          matcher:
            httpCode: ""
          enabled: ""
          unhealthyThresholdCount: ""
        protocolVersion: ""
        vpcIdentifier: ""
        ipAddressType: ""
      title: GetTargetGroupResponse_config
    UpdateRuleResponse_action:
      allOf:
      - $ref: '#/components/schemas/RuleAction'
      - description: Information about the action for the specified listener rule.
      example:
        forward:
          targetGroups: ""
        fixedResponse:
          statusCode: ""
      title: UpdateRuleResponse_action
    CreateListenerRequest_defaultAction:
      allOf:
      - $ref: '#/components/schemas/RuleAction'
      - description: "The action for the default rule. Each listener has a default\
          \ rule. Each rule consists of a priority, one or more actions, and one or\
          \ more conditions. The default rule is the rule that's used if no other\
          \ rules match. Each rule must include exactly one of the following types\
          \ of actions: <code>forward </code>or <code>fixed-response</code>, and it\
          \ must be the last action to be performed. "
      example:
        forward:
          targetGroups: ""
        fixedResponse:
          statusCode: ""
      title: CreateListenerRequest_defaultAction
    HeaderMatch_match:
      allOf:
      - $ref: '#/components/schemas/HeaderMatchType'
      - description: The header match type.
      title: HeaderMatch_match
    PathMatch_match:
      allOf:
      - $ref: '#/components/schemas/PathMatchType'
      - description: The type of path match.
      example:
        prefix: ""
        exact: ""
      title: PathMatch_match
    ServiceSummary_dnsEntry:
      allOf:
      - $ref: '#/components/schemas/DnsEntry'
      - description: DNS information about the service.
      title: ServiceSummary_dnsEntry
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
