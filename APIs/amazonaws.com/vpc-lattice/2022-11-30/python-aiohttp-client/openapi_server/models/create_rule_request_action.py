# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_rule_request_action_fixed_response import CreateRuleRequestActionFixedResponse
from openapi_server.models.create_rule_request_action_forward import CreateRuleRequestActionForward
from openapi_server import util


class CreateRuleRequestAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fixed_response: CreateRuleRequestActionFixedResponse=None, forward: CreateRuleRequestActionForward=None):
        """CreateRuleRequestAction - a model defined in OpenAPI

        :param fixed_response: The fixed_response of this CreateRuleRequestAction.
        :param forward: The forward of this CreateRuleRequestAction.
        """
        self.openapi_types = {
            'fixed_response': CreateRuleRequestActionFixedResponse,
            'forward': CreateRuleRequestActionForward
        }

        self.attribute_map = {
            'fixed_response': 'fixedResponse',
            'forward': 'forward'
        }

        self._fixed_response = fixed_response
        self._forward = forward

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRuleRequestAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRule_request_action of this CreateRuleRequestAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixed_response(self):
        """Gets the fixed_response of this CreateRuleRequestAction.


        :return: The fixed_response of this CreateRuleRequestAction.
        :rtype: CreateRuleRequestActionFixedResponse
        """
        return self._fixed_response

    @fixed_response.setter
    def fixed_response(self, fixed_response):
        """Sets the fixed_response of this CreateRuleRequestAction.


        :param fixed_response: The fixed_response of this CreateRuleRequestAction.
        :type fixed_response: CreateRuleRequestActionFixedResponse
        """

        self._fixed_response = fixed_response

    @property
    def forward(self):
        """Gets the forward of this CreateRuleRequestAction.


        :return: The forward of this CreateRuleRequestAction.
        :rtype: CreateRuleRequestActionForward
        """
        return self._forward

    @forward.setter
    def forward(self, forward):
        """Sets the forward of this CreateRuleRequestAction.


        :param forward: The forward of this CreateRuleRequestAction.
        :type forward: CreateRuleRequestActionForward
        """

        self._forward = forward
