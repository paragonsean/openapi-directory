# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegisterTargetsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, successful: List=None, unsuccessful: List=None):
        """RegisterTargetsResponse - a model defined in OpenAPI

        :param successful: The successful of this RegisterTargetsResponse.
        :param unsuccessful: The unsuccessful of this RegisterTargetsResponse.
        """
        self.openapi_types = {
            'successful': List,
            'unsuccessful': List
        }

        self.attribute_map = {
            'successful': 'successful',
            'unsuccessful': 'unsuccessful'
        }

        self._successful = successful
        self._unsuccessful = unsuccessful

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterTargetsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterTargetsResponse of this RegisterTargetsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def successful(self):
        """Gets the successful of this RegisterTargetsResponse.


        :return: The successful of this RegisterTargetsResponse.
        :rtype: List
        """
        return self._successful

    @successful.setter
    def successful(self, successful):
        """Sets the successful of this RegisterTargetsResponse.


        :param successful: The successful of this RegisterTargetsResponse.
        :type successful: List
        """

        self._successful = successful

    @property
    def unsuccessful(self):
        """Gets the unsuccessful of this RegisterTargetsResponse.


        :return: The unsuccessful of this RegisterTargetsResponse.
        :rtype: List
        """
        return self._unsuccessful

    @unsuccessful.setter
    def unsuccessful(self, unsuccessful):
        """Sets the unsuccessful of this RegisterTargetsResponse.


        :param unsuccessful: The unsuccessful of this RegisterTargetsResponse.
        :type unsuccessful: List
        """

        self._unsuccessful = unsuccessful
