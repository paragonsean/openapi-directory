# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_listener_response_default_action import CreateListenerResponseDefaultAction
from openapi_server.models.listener_protocol import ListenerProtocol
from openapi_server import util


class CreateListenerResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, default_action: CreateListenerResponseDefaultAction=None, id: str=None, name: str=None, port: int=None, protocol: ListenerProtocol=None, service_arn: str=None, service_id: str=None):
        """CreateListenerResponse - a model defined in OpenAPI

        :param arn: The arn of this CreateListenerResponse.
        :param default_action: The default_action of this CreateListenerResponse.
        :param id: The id of this CreateListenerResponse.
        :param name: The name of this CreateListenerResponse.
        :param port: The port of this CreateListenerResponse.
        :param protocol: The protocol of this CreateListenerResponse.
        :param service_arn: The service_arn of this CreateListenerResponse.
        :param service_id: The service_id of this CreateListenerResponse.
        """
        self.openapi_types = {
            'arn': str,
            'default_action': CreateListenerResponseDefaultAction,
            'id': str,
            'name': str,
            'port': int,
            'protocol': ListenerProtocol,
            'service_arn': str,
            'service_id': str
        }

        self.attribute_map = {
            'arn': 'arn',
            'default_action': 'defaultAction',
            'id': 'id',
            'name': 'name',
            'port': 'port',
            'protocol': 'protocol',
            'service_arn': 'serviceArn',
            'service_id': 'serviceId'
        }

        self._arn = arn
        self._default_action = default_action
        self._id = id
        self._name = name
        self._port = port
        self._protocol = protocol
        self._service_arn = service_arn
        self._service_id = service_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateListenerResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateListenerResponse of this CreateListenerResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this CreateListenerResponse.


        :return: The arn of this CreateListenerResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this CreateListenerResponse.


        :param arn: The arn of this CreateListenerResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def default_action(self):
        """Gets the default_action of this CreateListenerResponse.


        :return: The default_action of this CreateListenerResponse.
        :rtype: CreateListenerResponseDefaultAction
        """
        return self._default_action

    @default_action.setter
    def default_action(self, default_action):
        """Sets the default_action of this CreateListenerResponse.


        :param default_action: The default_action of this CreateListenerResponse.
        :type default_action: CreateListenerResponseDefaultAction
        """

        self._default_action = default_action

    @property
    def id(self):
        """Gets the id of this CreateListenerResponse.


        :return: The id of this CreateListenerResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateListenerResponse.


        :param id: The id of this CreateListenerResponse.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this CreateListenerResponse.


        :return: The name of this CreateListenerResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateListenerResponse.


        :param name: The name of this CreateListenerResponse.
        :type name: str
        """

        self._name = name

    @property
    def port(self):
        """Gets the port of this CreateListenerResponse.


        :return: The port of this CreateListenerResponse.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this CreateListenerResponse.


        :param port: The port of this CreateListenerResponse.
        :type port: int
        """

        self._port = port

    @property
    def protocol(self):
        """Gets the protocol of this CreateListenerResponse.


        :return: The protocol of this CreateListenerResponse.
        :rtype: ListenerProtocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this CreateListenerResponse.


        :param protocol: The protocol of this CreateListenerResponse.
        :type protocol: ListenerProtocol
        """

        self._protocol = protocol

    @property
    def service_arn(self):
        """Gets the service_arn of this CreateListenerResponse.


        :return: The service_arn of this CreateListenerResponse.
        :rtype: str
        """
        return self._service_arn

    @service_arn.setter
    def service_arn(self, service_arn):
        """Sets the service_arn of this CreateListenerResponse.


        :param service_arn: The service_arn of this CreateListenerResponse.
        :type service_arn: str
        """

        self._service_arn = service_arn

    @property
    def service_id(self):
        """Gets the service_id of this CreateListenerResponse.


        :return: The service_id of this CreateListenerResponse.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this CreateListenerResponse.


        :param service_id: The service_id of this CreateListenerResponse.
        :type service_id: str
        """

        self._service_id = service_id
