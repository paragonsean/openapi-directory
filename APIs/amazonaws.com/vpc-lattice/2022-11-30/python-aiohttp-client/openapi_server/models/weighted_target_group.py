# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WeightedTargetGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_group_identifier: str=None, weight: int=None):
        """WeightedTargetGroup - a model defined in OpenAPI

        :param target_group_identifier: The target_group_identifier of this WeightedTargetGroup.
        :param weight: The weight of this WeightedTargetGroup.
        """
        self.openapi_types = {
            'target_group_identifier': str,
            'weight': int
        }

        self.attribute_map = {
            'target_group_identifier': 'targetGroupIdentifier',
            'weight': 'weight'
        }

        self._target_group_identifier = target_group_identifier
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WeightedTargetGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WeightedTargetGroup of this WeightedTargetGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_group_identifier(self):
        """Gets the target_group_identifier of this WeightedTargetGroup.


        :return: The target_group_identifier of this WeightedTargetGroup.
        :rtype: str
        """
        return self._target_group_identifier

    @target_group_identifier.setter
    def target_group_identifier(self, target_group_identifier):
        """Sets the target_group_identifier of this WeightedTargetGroup.


        :param target_group_identifier: The target_group_identifier of this WeightedTargetGroup.
        :type target_group_identifier: str
        """
        if target_group_identifier is None:
            raise ValueError("Invalid value for `target_group_identifier`, must not be `None`")

        self._target_group_identifier = target_group_identifier

    @property
    def weight(self):
        """Gets the weight of this WeightedTargetGroup.


        :return: The weight of this WeightedTargetGroup.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this WeightedTargetGroup.


        :param weight: The weight of this WeightedTargetGroup.
        :type weight: int
        """

        self._weight = weight
