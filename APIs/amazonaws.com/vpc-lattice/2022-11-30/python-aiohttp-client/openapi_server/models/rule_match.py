# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_rule_request_match_http_match import CreateRuleRequestMatchHttpMatch
from openapi_server import util


class RuleMatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, http_match: CreateRuleRequestMatchHttpMatch=None):
        """RuleMatch - a model defined in OpenAPI

        :param http_match: The http_match of this RuleMatch.
        """
        self.openapi_types = {
            'http_match': CreateRuleRequestMatchHttpMatch
        }

        self.attribute_map = {
            'http_match': 'httpMatch'
        }

        self._http_match = http_match

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuleMatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuleMatch of this RuleMatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def http_match(self):
        """Gets the http_match of this RuleMatch.


        :return: The http_match of this RuleMatch.
        :rtype: CreateRuleRequestMatchHttpMatch
        """
        return self._http_match

    @http_match.setter
    def http_match(self, http_match):
        """Sets the http_match of this RuleMatch.


        :param http_match: The http_match of this RuleMatch.
        :type http_match: CreateRuleRequestMatchHttpMatch
        """

        self._http_match = http_match
