# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RuleUpdateFailure(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failure_code: str=None, failure_message: str=None, rule_identifier: str=None):
        """RuleUpdateFailure - a model defined in OpenAPI

        :param failure_code: The failure_code of this RuleUpdateFailure.
        :param failure_message: The failure_message of this RuleUpdateFailure.
        :param rule_identifier: The rule_identifier of this RuleUpdateFailure.
        """
        self.openapi_types = {
            'failure_code': str,
            'failure_message': str,
            'rule_identifier': str
        }

        self.attribute_map = {
            'failure_code': 'failureCode',
            'failure_message': 'failureMessage',
            'rule_identifier': 'ruleIdentifier'
        }

        self._failure_code = failure_code
        self._failure_message = failure_message
        self._rule_identifier = rule_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuleUpdateFailure':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuleUpdateFailure of this RuleUpdateFailure.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failure_code(self):
        """Gets the failure_code of this RuleUpdateFailure.


        :return: The failure_code of this RuleUpdateFailure.
        :rtype: str
        """
        return self._failure_code

    @failure_code.setter
    def failure_code(self, failure_code):
        """Sets the failure_code of this RuleUpdateFailure.


        :param failure_code: The failure_code of this RuleUpdateFailure.
        :type failure_code: str
        """

        self._failure_code = failure_code

    @property
    def failure_message(self):
        """Gets the failure_message of this RuleUpdateFailure.


        :return: The failure_message of this RuleUpdateFailure.
        :rtype: str
        """
        return self._failure_message

    @failure_message.setter
    def failure_message(self, failure_message):
        """Sets the failure_message of this RuleUpdateFailure.


        :param failure_message: The failure_message of this RuleUpdateFailure.
        :type failure_message: str
        """

        self._failure_message = failure_message

    @property
    def rule_identifier(self):
        """Gets the rule_identifier of this RuleUpdateFailure.


        :return: The rule_identifier of this RuleUpdateFailure.
        :rtype: str
        """
        return self._rule_identifier

    @rule_identifier.setter
    def rule_identifier(self, rule_identifier):
        """Sets the rule_identifier of this RuleUpdateFailure.


        :param rule_identifier: The rule_identifier of this RuleUpdateFailure.
        :type rule_identifier: str
        """

        self._rule_identifier = rule_identifier
