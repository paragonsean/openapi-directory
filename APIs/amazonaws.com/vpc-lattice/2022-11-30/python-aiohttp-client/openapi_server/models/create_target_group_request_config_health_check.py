# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_check_protocol_version import HealthCheckProtocolVersion
from openapi_server.models.target_group_protocol import TargetGroupProtocol
from openapi_server.models.update_target_group_request_health_check_matcher import UpdateTargetGroupRequestHealthCheckMatcher
from openapi_server import util


class CreateTargetGroupRequestConfigHealthCheck(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, health_check_interval_seconds: int=None, health_check_timeout_seconds: int=None, healthy_threshold_count: int=None, matcher: UpdateTargetGroupRequestHealthCheckMatcher=None, path: str=None, port: int=None, protocol: TargetGroupProtocol=None, protocol_version: HealthCheckProtocolVersion=None, unhealthy_threshold_count: int=None):
        """CreateTargetGroupRequestConfigHealthCheck - a model defined in OpenAPI

        :param enabled: The enabled of this CreateTargetGroupRequestConfigHealthCheck.
        :param health_check_interval_seconds: The health_check_interval_seconds of this CreateTargetGroupRequestConfigHealthCheck.
        :param health_check_timeout_seconds: The health_check_timeout_seconds of this CreateTargetGroupRequestConfigHealthCheck.
        :param healthy_threshold_count: The healthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.
        :param matcher: The matcher of this CreateTargetGroupRequestConfigHealthCheck.
        :param path: The path of this CreateTargetGroupRequestConfigHealthCheck.
        :param port: The port of this CreateTargetGroupRequestConfigHealthCheck.
        :param protocol: The protocol of this CreateTargetGroupRequestConfigHealthCheck.
        :param protocol_version: The protocol_version of this CreateTargetGroupRequestConfigHealthCheck.
        :param unhealthy_threshold_count: The unhealthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.
        """
        self.openapi_types = {
            'enabled': bool,
            'health_check_interval_seconds': int,
            'health_check_timeout_seconds': int,
            'healthy_threshold_count': int,
            'matcher': UpdateTargetGroupRequestHealthCheckMatcher,
            'path': str,
            'port': int,
            'protocol': TargetGroupProtocol,
            'protocol_version': HealthCheckProtocolVersion,
            'unhealthy_threshold_count': int
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'health_check_interval_seconds': 'healthCheckIntervalSeconds',
            'health_check_timeout_seconds': 'healthCheckTimeoutSeconds',
            'healthy_threshold_count': 'healthyThresholdCount',
            'matcher': 'matcher',
            'path': 'path',
            'port': 'port',
            'protocol': 'protocol',
            'protocol_version': 'protocolVersion',
            'unhealthy_threshold_count': 'unhealthyThresholdCount'
        }

        self._enabled = enabled
        self._health_check_interval_seconds = health_check_interval_seconds
        self._health_check_timeout_seconds = health_check_timeout_seconds
        self._healthy_threshold_count = healthy_threshold_count
        self._matcher = matcher
        self._path = path
        self._port = port
        self._protocol = protocol
        self._protocol_version = protocol_version
        self._unhealthy_threshold_count = unhealthy_threshold_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTargetGroupRequestConfigHealthCheck':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTargetGroup_request_config_healthCheck of this CreateTargetGroupRequestConfigHealthCheck.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The enabled of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this CreateTargetGroupRequestConfigHealthCheck.


        :param enabled: The enabled of this CreateTargetGroupRequestConfigHealthCheck.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def health_check_interval_seconds(self):
        """Gets the health_check_interval_seconds of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The health_check_interval_seconds of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: int
        """
        return self._health_check_interval_seconds

    @health_check_interval_seconds.setter
    def health_check_interval_seconds(self, health_check_interval_seconds):
        """Sets the health_check_interval_seconds of this CreateTargetGroupRequestConfigHealthCheck.


        :param health_check_interval_seconds: The health_check_interval_seconds of this CreateTargetGroupRequestConfigHealthCheck.
        :type health_check_interval_seconds: int
        """

        self._health_check_interval_seconds = health_check_interval_seconds

    @property
    def health_check_timeout_seconds(self):
        """Gets the health_check_timeout_seconds of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The health_check_timeout_seconds of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: int
        """
        return self._health_check_timeout_seconds

    @health_check_timeout_seconds.setter
    def health_check_timeout_seconds(self, health_check_timeout_seconds):
        """Sets the health_check_timeout_seconds of this CreateTargetGroupRequestConfigHealthCheck.


        :param health_check_timeout_seconds: The health_check_timeout_seconds of this CreateTargetGroupRequestConfigHealthCheck.
        :type health_check_timeout_seconds: int
        """

        self._health_check_timeout_seconds = health_check_timeout_seconds

    @property
    def healthy_threshold_count(self):
        """Gets the healthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The healthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: int
        """
        return self._healthy_threshold_count

    @healthy_threshold_count.setter
    def healthy_threshold_count(self, healthy_threshold_count):
        """Sets the healthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.


        :param healthy_threshold_count: The healthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.
        :type healthy_threshold_count: int
        """

        self._healthy_threshold_count = healthy_threshold_count

    @property
    def matcher(self):
        """Gets the matcher of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The matcher of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: UpdateTargetGroupRequestHealthCheckMatcher
        """
        return self._matcher

    @matcher.setter
    def matcher(self, matcher):
        """Sets the matcher of this CreateTargetGroupRequestConfigHealthCheck.


        :param matcher: The matcher of this CreateTargetGroupRequestConfigHealthCheck.
        :type matcher: UpdateTargetGroupRequestHealthCheckMatcher
        """

        self._matcher = matcher

    @property
    def path(self):
        """Gets the path of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The path of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this CreateTargetGroupRequestConfigHealthCheck.


        :param path: The path of this CreateTargetGroupRequestConfigHealthCheck.
        :type path: str
        """

        self._path = path

    @property
    def port(self):
        """Gets the port of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The port of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this CreateTargetGroupRequestConfigHealthCheck.


        :param port: The port of this CreateTargetGroupRequestConfigHealthCheck.
        :type port: int
        """

        self._port = port

    @property
    def protocol(self):
        """Gets the protocol of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The protocol of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: TargetGroupProtocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this CreateTargetGroupRequestConfigHealthCheck.


        :param protocol: The protocol of this CreateTargetGroupRequestConfigHealthCheck.
        :type protocol: TargetGroupProtocol
        """

        self._protocol = protocol

    @property
    def protocol_version(self):
        """Gets the protocol_version of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The protocol_version of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: HealthCheckProtocolVersion
        """
        return self._protocol_version

    @protocol_version.setter
    def protocol_version(self, protocol_version):
        """Sets the protocol_version of this CreateTargetGroupRequestConfigHealthCheck.


        :param protocol_version: The protocol_version of this CreateTargetGroupRequestConfigHealthCheck.
        :type protocol_version: HealthCheckProtocolVersion
        """

        self._protocol_version = protocol_version

    @property
    def unhealthy_threshold_count(self):
        """Gets the unhealthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.


        :return: The unhealthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.
        :rtype: int
        """
        return self._unhealthy_threshold_count

    @unhealthy_threshold_count.setter
    def unhealthy_threshold_count(self, unhealthy_threshold_count):
        """Sets the unhealthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.


        :param unhealthy_threshold_count: The unhealthy_threshold_count of this CreateTargetGroupRequestConfigHealthCheck.
        :type unhealthy_threshold_count: int
        """

        self._unhealthy_threshold_count = unhealthy_threshold_count
