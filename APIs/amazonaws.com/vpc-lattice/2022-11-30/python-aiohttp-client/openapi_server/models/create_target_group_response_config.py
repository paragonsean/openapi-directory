# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_target_group_request_config_health_check import CreateTargetGroupRequestConfigHealthCheck
from openapi_server.models.ip_address_type import IpAddressType
from openapi_server.models.target_group_protocol import TargetGroupProtocol
from openapi_server.models.target_group_protocol_version import TargetGroupProtocolVersion
from openapi_server import util


class CreateTargetGroupResponseConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_check: CreateTargetGroupRequestConfigHealthCheck=None, ip_address_type: IpAddressType=None, port: int=None, protocol: TargetGroupProtocol=None, protocol_version: TargetGroupProtocolVersion=None, vpc_identifier: str=None):
        """CreateTargetGroupResponseConfig - a model defined in OpenAPI

        :param health_check: The health_check of this CreateTargetGroupResponseConfig.
        :param ip_address_type: The ip_address_type of this CreateTargetGroupResponseConfig.
        :param port: The port of this CreateTargetGroupResponseConfig.
        :param protocol: The protocol of this CreateTargetGroupResponseConfig.
        :param protocol_version: The protocol_version of this CreateTargetGroupResponseConfig.
        :param vpc_identifier: The vpc_identifier of this CreateTargetGroupResponseConfig.
        """
        self.openapi_types = {
            'health_check': CreateTargetGroupRequestConfigHealthCheck,
            'ip_address_type': IpAddressType,
            'port': int,
            'protocol': TargetGroupProtocol,
            'protocol_version': TargetGroupProtocolVersion,
            'vpc_identifier': str
        }

        self.attribute_map = {
            'health_check': 'healthCheck',
            'ip_address_type': 'ipAddressType',
            'port': 'port',
            'protocol': 'protocol',
            'protocol_version': 'protocolVersion',
            'vpc_identifier': 'vpcIdentifier'
        }

        self._health_check = health_check
        self._ip_address_type = ip_address_type
        self._port = port
        self._protocol = protocol
        self._protocol_version = protocol_version
        self._vpc_identifier = vpc_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTargetGroupResponseConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTargetGroupResponse_config of this CreateTargetGroupResponseConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_check(self):
        """Gets the health_check of this CreateTargetGroupResponseConfig.


        :return: The health_check of this CreateTargetGroupResponseConfig.
        :rtype: CreateTargetGroupRequestConfigHealthCheck
        """
        return self._health_check

    @health_check.setter
    def health_check(self, health_check):
        """Sets the health_check of this CreateTargetGroupResponseConfig.


        :param health_check: The health_check of this CreateTargetGroupResponseConfig.
        :type health_check: CreateTargetGroupRequestConfigHealthCheck
        """

        self._health_check = health_check

    @property
    def ip_address_type(self):
        """Gets the ip_address_type of this CreateTargetGroupResponseConfig.


        :return: The ip_address_type of this CreateTargetGroupResponseConfig.
        :rtype: IpAddressType
        """
        return self._ip_address_type

    @ip_address_type.setter
    def ip_address_type(self, ip_address_type):
        """Sets the ip_address_type of this CreateTargetGroupResponseConfig.


        :param ip_address_type: The ip_address_type of this CreateTargetGroupResponseConfig.
        :type ip_address_type: IpAddressType
        """

        self._ip_address_type = ip_address_type

    @property
    def port(self):
        """Gets the port of this CreateTargetGroupResponseConfig.


        :return: The port of this CreateTargetGroupResponseConfig.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this CreateTargetGroupResponseConfig.


        :param port: The port of this CreateTargetGroupResponseConfig.
        :type port: int
        """
        if port is None:
            raise ValueError("Invalid value for `port`, must not be `None`")

        self._port = port

    @property
    def protocol(self):
        """Gets the protocol of this CreateTargetGroupResponseConfig.


        :return: The protocol of this CreateTargetGroupResponseConfig.
        :rtype: TargetGroupProtocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this CreateTargetGroupResponseConfig.


        :param protocol: The protocol of this CreateTargetGroupResponseConfig.
        :type protocol: TargetGroupProtocol
        """
        if protocol is None:
            raise ValueError("Invalid value for `protocol`, must not be `None`")

        self._protocol = protocol

    @property
    def protocol_version(self):
        """Gets the protocol_version of this CreateTargetGroupResponseConfig.


        :return: The protocol_version of this CreateTargetGroupResponseConfig.
        :rtype: TargetGroupProtocolVersion
        """
        return self._protocol_version

    @protocol_version.setter
    def protocol_version(self, protocol_version):
        """Sets the protocol_version of this CreateTargetGroupResponseConfig.


        :param protocol_version: The protocol_version of this CreateTargetGroupResponseConfig.
        :type protocol_version: TargetGroupProtocolVersion
        """

        self._protocol_version = protocol_version

    @property
    def vpc_identifier(self):
        """Gets the vpc_identifier of this CreateTargetGroupResponseConfig.


        :return: The vpc_identifier of this CreateTargetGroupResponseConfig.
        :rtype: str
        """
        return self._vpc_identifier

    @vpc_identifier.setter
    def vpc_identifier(self, vpc_identifier):
        """Sets the vpc_identifier of this CreateTargetGroupResponseConfig.


        :param vpc_identifier: The vpc_identifier of this CreateTargetGroupResponseConfig.
        :type vpc_identifier: str
        """
        if vpc_identifier is None:
            raise ValueError("Invalid value for `vpc_identifier`, must not be `None`")

        self._vpc_identifier = vpc_identifier
