# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Matcher(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, http_code: str=None):
        """Matcher - a model defined in OpenAPI

        :param http_code: The http_code of this Matcher.
        """
        self.openapi_types = {
            'http_code': str
        }

        self.attribute_map = {
            'http_code': 'httpCode'
        }

        self._http_code = http_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Matcher':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Matcher of this Matcher.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def http_code(self):
        """Gets the http_code of this Matcher.


        :return: The http_code of this Matcher.
        :rtype: str
        """
        return self._http_code

    @http_code.setter
    def http_code(self, http_code):
        """Sets the http_code of this Matcher.


        :param http_code: The http_code of this Matcher.
        :type http_code: str
        """

        self._http_code = http_code
