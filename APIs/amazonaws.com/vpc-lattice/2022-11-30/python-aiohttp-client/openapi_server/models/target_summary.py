# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.target_status import TargetStatus
from openapi_server import util


class TargetSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, port: int=None, reason_code: str=None, status: TargetStatus=None):
        """TargetSummary - a model defined in OpenAPI

        :param id: The id of this TargetSummary.
        :param port: The port of this TargetSummary.
        :param reason_code: The reason_code of this TargetSummary.
        :param status: The status of this TargetSummary.
        """
        self.openapi_types = {
            'id': str,
            'port': int,
            'reason_code': str,
            'status': TargetStatus
        }

        self.attribute_map = {
            'id': 'id',
            'port': 'port',
            'reason_code': 'reasonCode',
            'status': 'status'
        }

        self._id = id
        self._port = port
        self._reason_code = reason_code
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetSummary of this TargetSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this TargetSummary.


        :return: The id of this TargetSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TargetSummary.


        :param id: The id of this TargetSummary.
        :type id: str
        """

        self._id = id

    @property
    def port(self):
        """Gets the port of this TargetSummary.


        :return: The port of this TargetSummary.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this TargetSummary.


        :param port: The port of this TargetSummary.
        :type port: int
        """

        self._port = port

    @property
    def reason_code(self):
        """Gets the reason_code of this TargetSummary.


        :return: The reason_code of this TargetSummary.
        :rtype: str
        """
        return self._reason_code

    @reason_code.setter
    def reason_code(self, reason_code):
        """Sets the reason_code of this TargetSummary.


        :param reason_code: The reason_code of this TargetSummary.
        :type reason_code: str
        """

        self._reason_code = reason_code

    @property
    def status(self):
        """Gets the status of this TargetSummary.


        :return: The status of this TargetSummary.
        :rtype: TargetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TargetSummary.


        :param status: The status of this TargetSummary.
        :type status: TargetStatus
        """

        self._status = status
