# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateServiceNetworkVpcAssociationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, security_group_ids: List[str]=None):
        """UpdateServiceNetworkVpcAssociationRequest - a model defined in OpenAPI

        :param security_group_ids: The security_group_ids of this UpdateServiceNetworkVpcAssociationRequest.
        """
        self.openapi_types = {
            'security_group_ids': List[str]
        }

        self.attribute_map = {
            'security_group_ids': 'securityGroupIds'
        }

        self._security_group_ids = security_group_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateServiceNetworkVpcAssociationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateServiceNetworkVpcAssociation_request of this UpdateServiceNetworkVpcAssociationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def security_group_ids(self):
        """Gets the security_group_ids of this UpdateServiceNetworkVpcAssociationRequest.

        The IDs of the security groups. 

        :return: The security_group_ids of this UpdateServiceNetworkVpcAssociationRequest.
        :rtype: List[str]
        """
        return self._security_group_ids

    @security_group_ids.setter
    def security_group_ids(self, security_group_ids):
        """Sets the security_group_ids of this UpdateServiceNetworkVpcAssociationRequest.

        The IDs of the security groups. 

        :param security_group_ids: The security_group_ids of this UpdateServiceNetworkVpcAssociationRequest.
        :type security_group_ids: List[str]
        """
        if security_group_ids is None:
            raise ValueError("Invalid value for `security_group_ids`, must not be `None`")
        if security_group_ids is not None and len(security_group_ids) > 5:
            raise ValueError("Invalid value for `security_group_ids`, number of items must be less than or equal to `5`")
        if security_group_ids is not None and len(security_group_ids) < 1:
            raise ValueError("Invalid value for `security_group_ids`, number of items must be greater than or equal to `1`")

        self._security_group_ids = security_group_ids
