# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_update_match import RuleUpdateMatch
from openapi_server.models.update_rule_response_action import UpdateRuleResponseAction
from openapi_server import util


class UpdateRuleResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: UpdateRuleResponseAction=None, arn: str=None, id: str=None, is_default: bool=None, match: RuleUpdateMatch=None, name: str=None, priority: int=None):
        """UpdateRuleResponse - a model defined in OpenAPI

        :param action: The action of this UpdateRuleResponse.
        :param arn: The arn of this UpdateRuleResponse.
        :param id: The id of this UpdateRuleResponse.
        :param is_default: The is_default of this UpdateRuleResponse.
        :param match: The match of this UpdateRuleResponse.
        :param name: The name of this UpdateRuleResponse.
        :param priority: The priority of this UpdateRuleResponse.
        """
        self.openapi_types = {
            'action': UpdateRuleResponseAction,
            'arn': str,
            'id': str,
            'is_default': bool,
            'match': RuleUpdateMatch,
            'name': str,
            'priority': int
        }

        self.attribute_map = {
            'action': 'action',
            'arn': 'arn',
            'id': 'id',
            'is_default': 'isDefault',
            'match': 'match',
            'name': 'name',
            'priority': 'priority'
        }

        self._action = action
        self._arn = arn
        self._id = id
        self._is_default = is_default
        self._match = match
        self._name = name
        self._priority = priority

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateRuleResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateRuleResponse of this UpdateRuleResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this UpdateRuleResponse.


        :return: The action of this UpdateRuleResponse.
        :rtype: UpdateRuleResponseAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this UpdateRuleResponse.


        :param action: The action of this UpdateRuleResponse.
        :type action: UpdateRuleResponseAction
        """

        self._action = action

    @property
    def arn(self):
        """Gets the arn of this UpdateRuleResponse.


        :return: The arn of this UpdateRuleResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this UpdateRuleResponse.


        :param arn: The arn of this UpdateRuleResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def id(self):
        """Gets the id of this UpdateRuleResponse.


        :return: The id of this UpdateRuleResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateRuleResponse.


        :param id: The id of this UpdateRuleResponse.
        :type id: str
        """

        self._id = id

    @property
    def is_default(self):
        """Gets the is_default of this UpdateRuleResponse.


        :return: The is_default of this UpdateRuleResponse.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this UpdateRuleResponse.


        :param is_default: The is_default of this UpdateRuleResponse.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def match(self):
        """Gets the match of this UpdateRuleResponse.


        :return: The match of this UpdateRuleResponse.
        :rtype: RuleUpdateMatch
        """
        return self._match

    @match.setter
    def match(self, match):
        """Sets the match of this UpdateRuleResponse.


        :param match: The match of this UpdateRuleResponse.
        :type match: RuleUpdateMatch
        """

        self._match = match

    @property
    def name(self):
        """Gets the name of this UpdateRuleResponse.


        :return: The name of this UpdateRuleResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateRuleResponse.


        :param name: The name of this UpdateRuleResponse.
        :type name: str
        """

        self._name = name

    @property
    def priority(self):
        """Gets the priority of this UpdateRuleResponse.


        :return: The priority of this UpdateRuleResponse.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this UpdateRuleResponse.


        :param priority: The priority of this UpdateRuleResponse.
        :type priority: int
        """

        self._priority = priority
