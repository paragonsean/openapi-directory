# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_rule_request_action import CreateRuleRequestAction
from openapi_server import util


class UpdateListenerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_action: CreateRuleRequestAction=None):
        """UpdateListenerRequest - a model defined in OpenAPI

        :param default_action: The default_action of this UpdateListenerRequest.
        """
        self.openapi_types = {
            'default_action': CreateRuleRequestAction
        }

        self.attribute_map = {
            'default_action': 'defaultAction'
        }

        self._default_action = default_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateListenerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateListener_request of this UpdateListenerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_action(self):
        """Gets the default_action of this UpdateListenerRequest.


        :return: The default_action of this UpdateListenerRequest.
        :rtype: CreateRuleRequestAction
        """
        return self._default_action

    @default_action.setter
    def default_action(self, default_action):
        """Sets the default_action of this UpdateListenerRequest.


        :param default_action: The default_action of this UpdateListenerRequest.
        :type default_action: CreateRuleRequestAction
        """
        if default_action is None:
            raise ValueError("Invalid value for `default_action`, must not be `None`")

        self._default_action = default_action
