/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonVpcLattice);
  }
}(this, function(expect, AmazonVpcLattice) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonVpcLattice.CreateRuleRequestMatchHttpMatch();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateRuleRequestMatchHttpMatch', function() {
    it('should create an instance of CreateRuleRequestMatchHttpMatch', function() {
      // uncomment below and update the code to test CreateRuleRequestMatchHttpMatch
      //var instance = new AmazonVpcLattice.CreateRuleRequestMatchHttpMatch();
      //expect(instance).to.be.a(AmazonVpcLattice.CreateRuleRequestMatchHttpMatch);
    });

    it('should have the property headerMatches (base name: "headerMatches")', function() {
      // uncomment below and update the code to test the property headerMatches
      //var instance = new AmazonVpcLattice.CreateRuleRequestMatchHttpMatch();
      //expect(instance).to.be();
    });

    it('should have the property method (base name: "method")', function() {
      // uncomment below and update the code to test the property method
      //var instance = new AmazonVpcLattice.CreateRuleRequestMatchHttpMatch();
      //expect(instance).to.be();
    });

    it('should have the property pathMatch (base name: "pathMatch")', function() {
      // uncomment below and update the code to test the property pathMatch
      //var instance = new AmazonVpcLattice.CreateRuleRequestMatchHttpMatch();
      //expect(instance).to.be();
    });

  });

}));
