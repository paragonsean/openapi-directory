/**
 * AWS Route53 Recovery Control Config
 * Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller
 *
 * The version of the OpenAPI document: 2020-11-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSafetyRuleResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSafetyRuleResponse::OAIUpdateSafetyRuleResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSafetyRuleResponse::OAIUpdateSafetyRuleResponse() {
    this->initializeModel();
}

OAIUpdateSafetyRuleResponse::~OAIUpdateSafetyRuleResponse() {}

void OAIUpdateSafetyRuleResponse::initializeModel() {

    m_assertion_rule_isSet = false;
    m_assertion_rule_isValid = false;

    m_gating_rule_isSet = false;
    m_gating_rule_isValid = false;
}

void OAIUpdateSafetyRuleResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSafetyRuleResponse::fromJsonObject(QJsonObject json) {

    m_assertion_rule_isValid = ::OpenAPI::fromJsonValue(m_assertion_rule, json[QString("AssertionRule")]);
    m_assertion_rule_isSet = !json[QString("AssertionRule")].isNull() && m_assertion_rule_isValid;

    m_gating_rule_isValid = ::OpenAPI::fromJsonValue(m_gating_rule, json[QString("GatingRule")]);
    m_gating_rule_isSet = !json[QString("GatingRule")].isNull() && m_gating_rule_isValid;
}

QString OAIUpdateSafetyRuleResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSafetyRuleResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_assertion_rule.isSet()) {
        obj.insert(QString("AssertionRule"), ::OpenAPI::toJsonValue(m_assertion_rule));
    }
    if (m_gating_rule.isSet()) {
        obj.insert(QString("GatingRule"), ::OpenAPI::toJsonValue(m_gating_rule));
    }
    return obj;
}

OAIUpdateSafetyRuleResponse_AssertionRule OAIUpdateSafetyRuleResponse::getAssertionRule() const {
    return m_assertion_rule;
}
void OAIUpdateSafetyRuleResponse::setAssertionRule(const OAIUpdateSafetyRuleResponse_AssertionRule &assertion_rule) {
    m_assertion_rule = assertion_rule;
    m_assertion_rule_isSet = true;
}

bool OAIUpdateSafetyRuleResponse::is_assertion_rule_Set() const{
    return m_assertion_rule_isSet;
}

bool OAIUpdateSafetyRuleResponse::is_assertion_rule_Valid() const{
    return m_assertion_rule_isValid;
}

OAIUpdateSafetyRuleResponse_GatingRule OAIUpdateSafetyRuleResponse::getGatingRule() const {
    return m_gating_rule;
}
void OAIUpdateSafetyRuleResponse::setGatingRule(const OAIUpdateSafetyRuleResponse_GatingRule &gating_rule) {
    m_gating_rule = gating_rule;
    m_gating_rule_isSet = true;
}

bool OAIUpdateSafetyRuleResponse::is_gating_rule_Set() const{
    return m_gating_rule_isSet;
}

bool OAIUpdateSafetyRuleResponse::is_gating_rule_Valid() const{
    return m_gating_rule_isValid;
}

bool OAIUpdateSafetyRuleResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assertion_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gating_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSafetyRuleResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
