/**
 * AWS Route53 Recovery Control Config
 * Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller
 *
 * The version of the OpenAPI document: 2020-11-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeClusterResponse_Cluster.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeClusterResponse_Cluster::OAIDescribeClusterResponse_Cluster(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeClusterResponse_Cluster::OAIDescribeClusterResponse_Cluster() {
    this->initializeModel();
}

OAIDescribeClusterResponse_Cluster::~OAIDescribeClusterResponse_Cluster() {}

void OAIDescribeClusterResponse_Cluster::initializeModel() {

    m_cluster_arn_isSet = false;
    m_cluster_arn_isValid = false;

    m_cluster_endpoints_isSet = false;
    m_cluster_endpoints_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDescribeClusterResponse_Cluster::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeClusterResponse_Cluster::fromJsonObject(QJsonObject json) {

    m_cluster_arn_isValid = ::OpenAPI::fromJsonValue(m_cluster_arn, json[QString("ClusterArn")]);
    m_cluster_arn_isSet = !json[QString("ClusterArn")].isNull() && m_cluster_arn_isValid;

    m_cluster_endpoints_isValid = ::OpenAPI::fromJsonValue(m_cluster_endpoints, json[QString("ClusterEndpoints")]);
    m_cluster_endpoints_isSet = !json[QString("ClusterEndpoints")].isNull() && m_cluster_endpoints_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIDescribeClusterResponse_Cluster::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeClusterResponse_Cluster::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster_arn_isSet) {
        obj.insert(QString("ClusterArn"), ::OpenAPI::toJsonValue(m_cluster_arn));
    }
    if (m_cluster_endpoints.isSet()) {
        obj.insert(QString("ClusterEndpoints"), ::OpenAPI::toJsonValue(m_cluster_endpoints));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIDescribeClusterResponse_Cluster::getClusterArn() const {
    return m_cluster_arn;
}
void OAIDescribeClusterResponse_Cluster::setClusterArn(const QString &cluster_arn) {
    m_cluster_arn = cluster_arn;
    m_cluster_arn_isSet = true;
}

bool OAIDescribeClusterResponse_Cluster::is_cluster_arn_Set() const{
    return m_cluster_arn_isSet;
}

bool OAIDescribeClusterResponse_Cluster::is_cluster_arn_Valid() const{
    return m_cluster_arn_isValid;
}

QList OAIDescribeClusterResponse_Cluster::getClusterEndpoints() const {
    return m_cluster_endpoints;
}
void OAIDescribeClusterResponse_Cluster::setClusterEndpoints(const QList &cluster_endpoints) {
    m_cluster_endpoints = cluster_endpoints;
    m_cluster_endpoints_isSet = true;
}

bool OAIDescribeClusterResponse_Cluster::is_cluster_endpoints_Set() const{
    return m_cluster_endpoints_isSet;
}

bool OAIDescribeClusterResponse_Cluster::is_cluster_endpoints_Valid() const{
    return m_cluster_endpoints_isValid;
}

QString OAIDescribeClusterResponse_Cluster::getName() const {
    return m_name;
}
void OAIDescribeClusterResponse_Cluster::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDescribeClusterResponse_Cluster::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDescribeClusterResponse_Cluster::is_name_Valid() const{
    return m_name_isValid;
}

OAIStatus OAIDescribeClusterResponse_Cluster::getStatus() const {
    return m_status;
}
void OAIDescribeClusterResponse_Cluster::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeClusterResponse_Cluster::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeClusterResponse_Cluster::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDescribeClusterResponse_Cluster::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cluster_endpoints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeClusterResponse_Cluster::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
