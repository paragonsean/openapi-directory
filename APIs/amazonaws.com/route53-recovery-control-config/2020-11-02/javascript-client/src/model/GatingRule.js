/**
 * AWS Route53 Recovery Control Config
 * Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller
 *
 * The version of the OpenAPI document: 2020-11-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GatingRuleRuleConfig from './GatingRuleRuleConfig';
import Status from './Status';

/**
 * The GatingRule model module.
 * @module model/GatingRule
 * @version 2020-11-02
 */
class GatingRule {
    /**
     * Constructs a new <code>GatingRule</code>.
     * &lt;p&gt;A gating rule verifies that a gating routing control or set of gating routing controls, evaluates as true, based on a rule configuration that you specify, which allows a set of routing control state changes to complete.&lt;/p&gt; &lt;p&gt;For example, if you specify one gating routing control and you set the Type in the rule configuration to OR, that indicates that you must set the gating routing control to On for the rule to evaluate as true; that is, for the gating control \&quot;switch\&quot; to be \&quot;On\&quot;. When you do that, then you can update the routing control states for the target routing controls that you specify in the gating rule.&lt;/p&gt;
     * @alias module:model/GatingRule
     * @param controlPanelArn {String} 
     * @param gatingControls {Array} 
     * @param name {String} 
     * @param ruleConfig {module:model/GatingRuleRuleConfig} 
     * @param safetyRuleArn {String} 
     * @param status {module:model/Status} 
     * @param targetControls {Array} 
     * @param waitPeriodMs {Number} 
     */
    constructor(controlPanelArn, gatingControls, name, ruleConfig, safetyRuleArn, status, targetControls, waitPeriodMs) { 
        
        GatingRule.initialize(this, controlPanelArn, gatingControls, name, ruleConfig, safetyRuleArn, status, targetControls, waitPeriodMs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, controlPanelArn, gatingControls, name, ruleConfig, safetyRuleArn, status, targetControls, waitPeriodMs) { 
        obj['ControlPanelArn'] = controlPanelArn;
        obj['GatingControls'] = gatingControls;
        obj['Name'] = name;
        obj['RuleConfig'] = ruleConfig;
        obj['SafetyRuleArn'] = safetyRuleArn;
        obj['Status'] = status;
        obj['TargetControls'] = targetControls;
        obj['WaitPeriodMs'] = waitPeriodMs;
    }

    /**
     * Constructs a <code>GatingRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatingRule} obj Optional instance to populate.
     * @return {module:model/GatingRule} The populated <code>GatingRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GatingRule();

            if (data.hasOwnProperty('ControlPanelArn')) {
                obj['ControlPanelArn'] = ApiClient.convertToType(data['ControlPanelArn'], 'String');
            }
            if (data.hasOwnProperty('GatingControls')) {
                obj['GatingControls'] = ApiClient.convertToType(data['GatingControls'], Array);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('RuleConfig')) {
                obj['RuleConfig'] = GatingRuleRuleConfig.constructFromObject(data['RuleConfig']);
            }
            if (data.hasOwnProperty('SafetyRuleArn')) {
                obj['SafetyRuleArn'] = ApiClient.convertToType(data['SafetyRuleArn'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], Status);
            }
            if (data.hasOwnProperty('TargetControls')) {
                obj['TargetControls'] = ApiClient.convertToType(data['TargetControls'], Array);
            }
            if (data.hasOwnProperty('WaitPeriodMs')) {
                obj['WaitPeriodMs'] = ApiClient.convertToType(data['WaitPeriodMs'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GatingRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GatingRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GatingRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ControlPanelArn`
        if (data['ControlPanelArn']) { // data not null
          String.validateJSON(data['ControlPanelArn']);
        }
        // validate the optional field `GatingControls`
        if (data['GatingControls']) { // data not null
          Array.validateJSON(data['GatingControls']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `RuleConfig`
        if (data['RuleConfig']) { // data not null
          GatingRuleRuleConfig.validateJSON(data['RuleConfig']);
        }
        // validate the optional field `SafetyRuleArn`
        if (data['SafetyRuleArn']) { // data not null
          String.validateJSON(data['SafetyRuleArn']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          Status.validateJSON(data['Status']);
        }
        // validate the optional field `TargetControls`
        if (data['TargetControls']) { // data not null
          Array.validateJSON(data['TargetControls']);
        }
        // validate the optional field `WaitPeriodMs`
        if (data['WaitPeriodMs']) { // data not null
          Number.validateJSON(data['WaitPeriodMs']);
        }

        return true;
    }


}

GatingRule.RequiredProperties = ["ControlPanelArn", "GatingControls", "Name", "RuleConfig", "SafetyRuleArn", "Status", "TargetControls", "WaitPeriodMs"];

/**
 * @member {String} ControlPanelArn
 */
GatingRule.prototype['ControlPanelArn'] = undefined;

/**
 * @member {Array} GatingControls
 */
GatingRule.prototype['GatingControls'] = undefined;

/**
 * @member {String} Name
 */
GatingRule.prototype['Name'] = undefined;

/**
 * @member {module:model/GatingRuleRuleConfig} RuleConfig
 */
GatingRule.prototype['RuleConfig'] = undefined;

/**
 * @member {String} SafetyRuleArn
 */
GatingRule.prototype['SafetyRuleArn'] = undefined;

/**
 * @member {module:model/Status} Status
 */
GatingRule.prototype['Status'] = undefined;

/**
 * @member {Array} TargetControls
 */
GatingRule.prototype['TargetControls'] = undefined;

/**
 * @member {Number} WaitPeriodMs
 */
GatingRule.prototype['WaitPeriodMs'] = undefined;






export default GatingRule;

