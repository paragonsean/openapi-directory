/**
 * AWS Route53 Recovery Control Config
 * Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller
 *
 * The version of the OpenAPI document: 2020-11-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RuleASSERTION from './RuleASSERTION';
import RuleGATING from './RuleGATING';

/**
 * The Rule model module.
 * @module model/Rule
 * @version 2020-11-02
 */
class Rule {
    /**
     * Constructs a new <code>Rule</code>.
     * A safety rule. A safety rule can be an assertion rule or a gating rule.
     * @alias module:model/Rule
     */
    constructor() { 
        
        Rule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Rule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Rule} obj Optional instance to populate.
     * @return {module:model/Rule} The populated <code>Rule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Rule();

            if (data.hasOwnProperty('ASSERTION')) {
                obj['ASSERTION'] = RuleASSERTION.constructFromObject(data['ASSERTION']);
            }
            if (data.hasOwnProperty('GATING')) {
                obj['GATING'] = RuleGATING.constructFromObject(data['GATING']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Rule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Rule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ASSERTION`
        if (data['ASSERTION']) { // data not null
          RuleASSERTION.validateJSON(data['ASSERTION']);
        }
        // validate the optional field `GATING`
        if (data['GATING']) { // data not null
          RuleGATING.validateJSON(data['GATING']);
        }

        return true;
    }


}



/**
 * @member {module:model/RuleASSERTION} ASSERTION
 */
Rule.prototype['ASSERTION'] = undefined;

/**
 * @member {module:model/RuleGATING} GATING
 */
Rule.prototype['GATING'] = undefined;






export default Rule;

