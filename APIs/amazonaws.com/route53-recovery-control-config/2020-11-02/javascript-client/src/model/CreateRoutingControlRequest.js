/**
 * AWS Route53 Recovery Control Config
 * Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller
 *
 * The version of the OpenAPI document: 2020-11-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateRoutingControlRequest model module.
 * @module model/CreateRoutingControlRequest
 * @version 2020-11-02
 */
class CreateRoutingControlRequest {
    /**
     * Constructs a new <code>CreateRoutingControlRequest</code>.
     * @alias module:model/CreateRoutingControlRequest
     * @param clusterArn {String} The Amazon Resource Name (ARN) of the cluster that includes the routing control.
     * @param routingControlName {String} The name of the routing control.
     */
    constructor(clusterArn, routingControlName) { 
        
        CreateRoutingControlRequest.initialize(this, clusterArn, routingControlName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clusterArn, routingControlName) { 
        obj['ClusterArn'] = clusterArn;
        obj['RoutingControlName'] = routingControlName;
    }

    /**
     * Constructs a <code>CreateRoutingControlRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRoutingControlRequest} obj Optional instance to populate.
     * @return {module:model/CreateRoutingControlRequest} The populated <code>CreateRoutingControlRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRoutingControlRequest();

            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
            if (data.hasOwnProperty('ClusterArn')) {
                obj['ClusterArn'] = ApiClient.convertToType(data['ClusterArn'], 'String');
            }
            if (data.hasOwnProperty('ControlPanelArn')) {
                obj['ControlPanelArn'] = ApiClient.convertToType(data['ControlPanelArn'], 'String');
            }
            if (data.hasOwnProperty('RoutingControlName')) {
                obj['RoutingControlName'] = ApiClient.convertToType(data['RoutingControlName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRoutingControlRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRoutingControlRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRoutingControlRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ClientToken'] && !(typeof data['ClientToken'] === 'string' || data['ClientToken'] instanceof String)) {
            throw new Error("Expected the field `ClientToken` to be a primitive type in the JSON string but got " + data['ClientToken']);
        }
        // ensure the json data is a string
        if (data['ClusterArn'] && !(typeof data['ClusterArn'] === 'string' || data['ClusterArn'] instanceof String)) {
            throw new Error("Expected the field `ClusterArn` to be a primitive type in the JSON string but got " + data['ClusterArn']);
        }
        // ensure the json data is a string
        if (data['ControlPanelArn'] && !(typeof data['ControlPanelArn'] === 'string' || data['ControlPanelArn'] instanceof String)) {
            throw new Error("Expected the field `ControlPanelArn` to be a primitive type in the JSON string but got " + data['ControlPanelArn']);
        }
        // ensure the json data is a string
        if (data['RoutingControlName'] && !(typeof data['RoutingControlName'] === 'string' || data['RoutingControlName'] instanceof String)) {
            throw new Error("Expected the field `RoutingControlName` to be a primitive type in the JSON string but got " + data['RoutingControlName']);
        }

        return true;
    }


}

CreateRoutingControlRequest.RequiredProperties = ["ClusterArn", "RoutingControlName"];

/**
 * A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.
 * @member {String} ClientToken
 */
CreateRoutingControlRequest.prototype['ClientToken'] = undefined;

/**
 * The Amazon Resource Name (ARN) of the cluster that includes the routing control.
 * @member {String} ClusterArn
 */
CreateRoutingControlRequest.prototype['ClusterArn'] = undefined;

/**
 * The Amazon Resource Name (ARN) of the control panel that includes the routing control.
 * @member {String} ControlPanelArn
 */
CreateRoutingControlRequest.prototype['ControlPanelArn'] = undefined;

/**
 * The name of the routing control.
 * @member {String} RoutingControlName
 */
CreateRoutingControlRequest.prototype['RoutingControlName'] = undefined;






export default CreateRoutingControlRequest;

