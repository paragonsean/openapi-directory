/**
 * AWS Route53 Recovery Control Config
 * Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller
 *
 * The version of the OpenAPI document: 2020-11-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateControlPanelRequest model module.
 * @module model/UpdateControlPanelRequest
 * @version 2020-11-02
 */
class UpdateControlPanelRequest {
    /**
     * Constructs a new <code>UpdateControlPanelRequest</code>.
     * @alias module:model/UpdateControlPanelRequest
     * @param controlPanelArn {String} The Amazon Resource Name (ARN) of the control panel.
     * @param controlPanelName {String} The name of the control panel.
     */
    constructor(controlPanelArn, controlPanelName) { 
        
        UpdateControlPanelRequest.initialize(this, controlPanelArn, controlPanelName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, controlPanelArn, controlPanelName) { 
        obj['ControlPanelArn'] = controlPanelArn;
        obj['ControlPanelName'] = controlPanelName;
    }

    /**
     * Constructs a <code>UpdateControlPanelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateControlPanelRequest} obj Optional instance to populate.
     * @return {module:model/UpdateControlPanelRequest} The populated <code>UpdateControlPanelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateControlPanelRequest();

            if (data.hasOwnProperty('ControlPanelArn')) {
                obj['ControlPanelArn'] = ApiClient.convertToType(data['ControlPanelArn'], 'String');
            }
            if (data.hasOwnProperty('ControlPanelName')) {
                obj['ControlPanelName'] = ApiClient.convertToType(data['ControlPanelName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateControlPanelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateControlPanelRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateControlPanelRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ControlPanelArn'] && !(typeof data['ControlPanelArn'] === 'string' || data['ControlPanelArn'] instanceof String)) {
            throw new Error("Expected the field `ControlPanelArn` to be a primitive type in the JSON string but got " + data['ControlPanelArn']);
        }
        // ensure the json data is a string
        if (data['ControlPanelName'] && !(typeof data['ControlPanelName'] === 'string' || data['ControlPanelName'] instanceof String)) {
            throw new Error("Expected the field `ControlPanelName` to be a primitive type in the JSON string but got " + data['ControlPanelName']);
        }

        return true;
    }


}

UpdateControlPanelRequest.RequiredProperties = ["ControlPanelArn", "ControlPanelName"];

/**
 * The Amazon Resource Name (ARN) of the control panel.
 * @member {String} ControlPanelArn
 */
UpdateControlPanelRequest.prototype['ControlPanelArn'] = undefined;

/**
 * The name of the control panel.
 * @member {String} ControlPanelName
 */
UpdateControlPanelRequest.prototype['ControlPanelName'] = undefined;






export default UpdateControlPanelRequest;

