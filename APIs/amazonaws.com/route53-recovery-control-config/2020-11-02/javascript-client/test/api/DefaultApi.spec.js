/**
 * AWS Route53 Recovery Control Config
 * Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller
 *
 * The version of the OpenAPI document: 2020-11-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsRoute53RecoveryControlConfig);
  }
}(this, function(expect, AwsRoute53RecoveryControlConfig) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsRoute53RecoveryControlConfig.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createCluster', function() {
      it('should call createCluster successfully', function(done) {
        //uncomment below and update the code to test createCluster
        //instance.createCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createControlPanel', function() {
      it('should call createControlPanel successfully', function(done) {
        //uncomment below and update the code to test createControlPanel
        //instance.createControlPanel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRoutingControl', function() {
      it('should call createRoutingControl successfully', function(done) {
        //uncomment below and update the code to test createRoutingControl
        //instance.createRoutingControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSafetyRule', function() {
      it('should call createSafetyRule successfully', function(done) {
        //uncomment below and update the code to test createSafetyRule
        //instance.createSafetyRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCluster', function() {
      it('should call deleteCluster successfully', function(done) {
        //uncomment below and update the code to test deleteCluster
        //instance.deleteCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteControlPanel', function() {
      it('should call deleteControlPanel successfully', function(done) {
        //uncomment below and update the code to test deleteControlPanel
        //instance.deleteControlPanel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRoutingControl', function() {
      it('should call deleteRoutingControl successfully', function(done) {
        //uncomment below and update the code to test deleteRoutingControl
        //instance.deleteRoutingControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSafetyRule', function() {
      it('should call deleteSafetyRule successfully', function(done) {
        //uncomment below and update the code to test deleteSafetyRule
        //instance.deleteSafetyRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeCluster', function() {
      it('should call describeCluster successfully', function(done) {
        //uncomment below and update the code to test describeCluster
        //instance.describeCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeControlPanel', function() {
      it('should call describeControlPanel successfully', function(done) {
        //uncomment below and update the code to test describeControlPanel
        //instance.describeControlPanel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeRoutingControl', function() {
      it('should call describeRoutingControl successfully', function(done) {
        //uncomment below and update the code to test describeRoutingControl
        //instance.describeRoutingControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeSafetyRule', function() {
      it('should call describeSafetyRule successfully', function(done) {
        //uncomment below and update the code to test describeSafetyRule
        //instance.describeSafetyRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssociatedRoute53HealthChecks', function() {
      it('should call listAssociatedRoute53HealthChecks successfully', function(done) {
        //uncomment below and update the code to test listAssociatedRoute53HealthChecks
        //instance.listAssociatedRoute53HealthChecks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusters', function() {
      it('should call listClusters successfully', function(done) {
        //uncomment below and update the code to test listClusters
        //instance.listClusters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listControlPanels', function() {
      it('should call listControlPanels successfully', function(done) {
        //uncomment below and update the code to test listControlPanels
        //instance.listControlPanels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRoutingControls', function() {
      it('should call listRoutingControls successfully', function(done) {
        //uncomment below and update the code to test listRoutingControls
        //instance.listRoutingControls(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSafetyRules', function() {
      it('should call listSafetyRules successfully', function(done) {
        //uncomment below and update the code to test listSafetyRules
        //instance.listSafetyRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateControlPanel', function() {
      it('should call updateControlPanel successfully', function(done) {
        //uncomment below and update the code to test updateControlPanel
        //instance.updateControlPanel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoutingControl', function() {
      it('should call updateRoutingControl successfully', function(done) {
        //uncomment below and update the code to test updateRoutingControl
        //instance.updateRoutingControl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSafetyRule', function() {
      it('should call updateSafetyRule successfully', function(done) {
        //uncomment below and update the code to test updateSafetyRule
        //instance.updateSafetyRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
