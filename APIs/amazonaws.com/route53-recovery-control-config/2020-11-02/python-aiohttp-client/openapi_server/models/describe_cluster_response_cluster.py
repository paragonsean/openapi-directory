# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class DescribeClusterResponseCluster(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_arn: str=None, cluster_endpoints: List=None, name: str=None, status: Status=None):
        """DescribeClusterResponseCluster - a model defined in OpenAPI

        :param cluster_arn: The cluster_arn of this DescribeClusterResponseCluster.
        :param cluster_endpoints: The cluster_endpoints of this DescribeClusterResponseCluster.
        :param name: The name of this DescribeClusterResponseCluster.
        :param status: The status of this DescribeClusterResponseCluster.
        """
        self.openapi_types = {
            'cluster_arn': str,
            'cluster_endpoints': List,
            'name': str,
            'status': Status
        }

        self.attribute_map = {
            'cluster_arn': 'ClusterArn',
            'cluster_endpoints': 'ClusterEndpoints',
            'name': 'Name',
            'status': 'Status'
        }

        self._cluster_arn = cluster_arn
        self._cluster_endpoints = cluster_endpoints
        self._name = name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeClusterResponseCluster':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeClusterResponse_Cluster of this DescribeClusterResponseCluster.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_arn(self):
        """Gets the cluster_arn of this DescribeClusterResponseCluster.


        :return: The cluster_arn of this DescribeClusterResponseCluster.
        :rtype: str
        """
        return self._cluster_arn

    @cluster_arn.setter
    def cluster_arn(self, cluster_arn):
        """Sets the cluster_arn of this DescribeClusterResponseCluster.


        :param cluster_arn: The cluster_arn of this DescribeClusterResponseCluster.
        :type cluster_arn: str
        """

        self._cluster_arn = cluster_arn

    @property
    def cluster_endpoints(self):
        """Gets the cluster_endpoints of this DescribeClusterResponseCluster.


        :return: The cluster_endpoints of this DescribeClusterResponseCluster.
        :rtype: List
        """
        return self._cluster_endpoints

    @cluster_endpoints.setter
    def cluster_endpoints(self, cluster_endpoints):
        """Sets the cluster_endpoints of this DescribeClusterResponseCluster.


        :param cluster_endpoints: The cluster_endpoints of this DescribeClusterResponseCluster.
        :type cluster_endpoints: List
        """

        self._cluster_endpoints = cluster_endpoints

    @property
    def name(self):
        """Gets the name of this DescribeClusterResponseCluster.


        :return: The name of this DescribeClusterResponseCluster.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeClusterResponseCluster.


        :param name: The name of this DescribeClusterResponseCluster.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this DescribeClusterResponseCluster.


        :return: The status of this DescribeClusterResponseCluster.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeClusterResponseCluster.


        :param status: The status of this DescribeClusterResponseCluster.
        :type status: Status
        """

        self._status = status
