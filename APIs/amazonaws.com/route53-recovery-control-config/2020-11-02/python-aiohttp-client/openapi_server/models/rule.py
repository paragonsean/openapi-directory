# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_assertion import RuleASSERTION
from openapi_server.models.rule_gating import RuleGATING
from openapi_server import util


class Rule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assertion: RuleASSERTION=None, gating: RuleGATING=None):
        """Rule - a model defined in OpenAPI

        :param assertion: The assertion of this Rule.
        :param gating: The gating of this Rule.
        """
        self.openapi_types = {
            'assertion': RuleASSERTION,
            'gating': RuleGATING
        }

        self.attribute_map = {
            'assertion': 'ASSERTION',
            'gating': 'GATING'
        }

        self._assertion = assertion
        self._gating = gating

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Rule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Rule of this Rule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assertion(self):
        """Gets the assertion of this Rule.


        :return: The assertion of this Rule.
        :rtype: RuleASSERTION
        """
        return self._assertion

    @assertion.setter
    def assertion(self, assertion):
        """Sets the assertion of this Rule.


        :param assertion: The assertion of this Rule.
        :type assertion: RuleASSERTION
        """

        self._assertion = assertion

    @property
    def gating(self):
        """Gets the gating of this Rule.


        :return: The gating of this Rule.
        :rtype: RuleGATING
        """
        return self._gating

    @gating.setter
    def gating(self, gating):
        """Sets the gating of this Rule.


        :param gating: The gating of this Rule.
        :type gating: RuleGATING
        """

        self._gating = gating
