# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class CreateRoutingControlResponseRoutingControl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, control_panel_arn: str=None, name: str=None, routing_control_arn: str=None, status: Status=None):
        """CreateRoutingControlResponseRoutingControl - a model defined in OpenAPI

        :param control_panel_arn: The control_panel_arn of this CreateRoutingControlResponseRoutingControl.
        :param name: The name of this CreateRoutingControlResponseRoutingControl.
        :param routing_control_arn: The routing_control_arn of this CreateRoutingControlResponseRoutingControl.
        :param status: The status of this CreateRoutingControlResponseRoutingControl.
        """
        self.openapi_types = {
            'control_panel_arn': str,
            'name': str,
            'routing_control_arn': str,
            'status': Status
        }

        self.attribute_map = {
            'control_panel_arn': 'ControlPanelArn',
            'name': 'Name',
            'routing_control_arn': 'RoutingControlArn',
            'status': 'Status'
        }

        self._control_panel_arn = control_panel_arn
        self._name = name
        self._routing_control_arn = routing_control_arn
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRoutingControlResponseRoutingControl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRoutingControlResponse_RoutingControl of this CreateRoutingControlResponseRoutingControl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def control_panel_arn(self):
        """Gets the control_panel_arn of this CreateRoutingControlResponseRoutingControl.


        :return: The control_panel_arn of this CreateRoutingControlResponseRoutingControl.
        :rtype: str
        """
        return self._control_panel_arn

    @control_panel_arn.setter
    def control_panel_arn(self, control_panel_arn):
        """Sets the control_panel_arn of this CreateRoutingControlResponseRoutingControl.


        :param control_panel_arn: The control_panel_arn of this CreateRoutingControlResponseRoutingControl.
        :type control_panel_arn: str
        """

        self._control_panel_arn = control_panel_arn

    @property
    def name(self):
        """Gets the name of this CreateRoutingControlResponseRoutingControl.


        :return: The name of this CreateRoutingControlResponseRoutingControl.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateRoutingControlResponseRoutingControl.


        :param name: The name of this CreateRoutingControlResponseRoutingControl.
        :type name: str
        """

        self._name = name

    @property
    def routing_control_arn(self):
        """Gets the routing_control_arn of this CreateRoutingControlResponseRoutingControl.


        :return: The routing_control_arn of this CreateRoutingControlResponseRoutingControl.
        :rtype: str
        """
        return self._routing_control_arn

    @routing_control_arn.setter
    def routing_control_arn(self, routing_control_arn):
        """Sets the routing_control_arn of this CreateRoutingControlResponseRoutingControl.


        :param routing_control_arn: The routing_control_arn of this CreateRoutingControlResponseRoutingControl.
        :type routing_control_arn: str
        """

        self._routing_control_arn = routing_control_arn

    @property
    def status(self):
        """Gets the status of this CreateRoutingControlResponseRoutingControl.


        :return: The status of this CreateRoutingControlResponseRoutingControl.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateRoutingControlResponseRoutingControl.


        :param status: The status of this CreateRoutingControlResponseRoutingControl.
        :type status: Status
        """

        self._status = status
