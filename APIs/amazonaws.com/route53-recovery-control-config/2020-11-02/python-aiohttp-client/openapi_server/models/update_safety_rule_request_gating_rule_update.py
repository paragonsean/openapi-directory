# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateSafetyRuleRequestGatingRuleUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, safety_rule_arn: str=None, wait_period_ms: int=None):
        """UpdateSafetyRuleRequestGatingRuleUpdate - a model defined in OpenAPI

        :param name: The name of this UpdateSafetyRuleRequestGatingRuleUpdate.
        :param safety_rule_arn: The safety_rule_arn of this UpdateSafetyRuleRequestGatingRuleUpdate.
        :param wait_period_ms: The wait_period_ms of this UpdateSafetyRuleRequestGatingRuleUpdate.
        """
        self.openapi_types = {
            'name': str,
            'safety_rule_arn': str,
            'wait_period_ms': int
        }

        self.attribute_map = {
            'name': 'Name',
            'safety_rule_arn': 'SafetyRuleArn',
            'wait_period_ms': 'WaitPeriodMs'
        }

        self._name = name
        self._safety_rule_arn = safety_rule_arn
        self._wait_period_ms = wait_period_ms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSafetyRuleRequestGatingRuleUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSafetyRuleRequest_GatingRuleUpdate of this UpdateSafetyRuleRequestGatingRuleUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdateSafetyRuleRequestGatingRuleUpdate.


        :return: The name of this UpdateSafetyRuleRequestGatingRuleUpdate.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateSafetyRuleRequestGatingRuleUpdate.


        :param name: The name of this UpdateSafetyRuleRequestGatingRuleUpdate.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def safety_rule_arn(self):
        """Gets the safety_rule_arn of this UpdateSafetyRuleRequestGatingRuleUpdate.


        :return: The safety_rule_arn of this UpdateSafetyRuleRequestGatingRuleUpdate.
        :rtype: str
        """
        return self._safety_rule_arn

    @safety_rule_arn.setter
    def safety_rule_arn(self, safety_rule_arn):
        """Sets the safety_rule_arn of this UpdateSafetyRuleRequestGatingRuleUpdate.


        :param safety_rule_arn: The safety_rule_arn of this UpdateSafetyRuleRequestGatingRuleUpdate.
        :type safety_rule_arn: str
        """
        if safety_rule_arn is None:
            raise ValueError("Invalid value for `safety_rule_arn`, must not be `None`")

        self._safety_rule_arn = safety_rule_arn

    @property
    def wait_period_ms(self):
        """Gets the wait_period_ms of this UpdateSafetyRuleRequestGatingRuleUpdate.


        :return: The wait_period_ms of this UpdateSafetyRuleRequestGatingRuleUpdate.
        :rtype: int
        """
        return self._wait_period_ms

    @wait_period_ms.setter
    def wait_period_ms(self, wait_period_ms):
        """Sets the wait_period_ms of this UpdateSafetyRuleRequestGatingRuleUpdate.


        :param wait_period_ms: The wait_period_ms of this UpdateSafetyRuleRequestGatingRuleUpdate.
        :type wait_period_ms: int
        """
        if wait_period_ms is None:
            raise ValueError("Invalid value for `wait_period_ms`, must not be `None`")

        self._wait_period_ms = wait_period_ms
