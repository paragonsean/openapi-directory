/**
 * Synthetics
 * <fullname>Amazon CloudWatch Synthetics</fullname> <p>You can use Amazon CloudWatch Synthetics to continually monitor your services. You can create and manage <i>canaries</i>, which are modular, lightweight scripts that monitor your endpoints and APIs from the outside-in. You can set up your canaries to run 24 hours a day, once per minute. The canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. The canaries seamlessly integrate with CloudWatch ServiceLens to help you trace the causes of impacted nodes in your applications. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html\">Using ServiceLens to Monitor the Health of Your Applications</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Before you create and manage canaries, be aware of the security considerations. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html\">Security Considerations for Synthetics Canaries</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuntimeVersion.h
 *
 * This structure contains information about one canary runtime version. For more information about runtime versions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\&quot;&gt; Canary Runtime Versions&lt;/a&gt;.
 */

#ifndef OAIRuntimeVersion_H
#define OAIRuntimeVersion_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRuntimeVersion : public OAIObject {
public:
    OAIRuntimeVersion();
    OAIRuntimeVersion(QString json);
    ~OAIRuntimeVersion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVersionName() const;
    void setVersionName(const QString &version_name);
    bool is_version_name_Set() const;
    bool is_version_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getReleaseDate() const;
    void setReleaseDate(const QDateTime &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    QDateTime getDeprecationDate() const;
    void setDeprecationDate(const QDateTime &deprecation_date);
    bool is_deprecation_date_Set() const;
    bool is_deprecation_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_version_name;
    bool m_version_name_isSet;
    bool m_version_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    QDateTime m_deprecation_date;
    bool m_deprecation_date_isSet;
    bool m_deprecation_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuntimeVersion)

#endif // OAIRuntimeVersion_H
