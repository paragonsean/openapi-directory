/**
 * Synthetics
 * <fullname>Amazon CloudWatch Synthetics</fullname> <p>You can use Amazon CloudWatch Synthetics to continually monitor your services. You can create and manage <i>canaries</i>, which are modular, lightweight scripts that monitor your endpoints and APIs from the outside-in. You can set up your canaries to run 24 hours a day, once per minute. The canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. The canaries seamlessly integrate with CloudWatch ServiceLens to help you trace the causes of impacted nodes in your applications. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html\">Using ServiceLens to Monitor the Health of Your Applications</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Before you create and manage canaries, be aware of the security considerations. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html\">Security Considerations for Synthetics Canaries</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCanary_request_RunConfig.h
 *
 * A structure that contains input information for a canary run.
 */

#ifndef OAICreateCanary_request_RunConfig_H
#define OAICreateCanary_request_RunConfig_H

#include <QJsonObject>

#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateCanary_request_RunConfig : public OAIObject {
public:
    OAICreateCanary_request_RunConfig();
    OAICreateCanary_request_RunConfig(QString json);
    ~OAICreateCanary_request_RunConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTimeoutInSeconds() const;
    void setTimeoutInSeconds(const qint32 &timeout_in_seconds);
    bool is_timeout_in_seconds_Set() const;
    bool is_timeout_in_seconds_Valid() const;

    qint32 getMemoryInMb() const;
    void setMemoryInMb(const qint32 &memory_in_mb);
    bool is_memory_in_mb_Set() const;
    bool is_memory_in_mb_Valid() const;

    bool getActiveTracing() const;
    void setActiveTracing(const bool &active_tracing);
    bool is_active_tracing_Set() const;
    bool is_active_tracing_Valid() const;

    QMap getEnvironmentVariables() const;
    void setEnvironmentVariables(const QMap &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_timeout_in_seconds;
    bool m_timeout_in_seconds_isSet;
    bool m_timeout_in_seconds_isValid;

    qint32 m_memory_in_mb;
    bool m_memory_in_mb_isSet;
    bool m_memory_in_mb_isValid;

    bool m_active_tracing;
    bool m_active_tracing_isSet;
    bool m_active_tracing_isValid;

    QMap m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCanary_request_RunConfig)

#endif // OAICreateCanary_request_RunConfig_H
