/**
 * Synthetics
 * <fullname>Amazon CloudWatch Synthetics</fullname> <p>You can use Amazon CloudWatch Synthetics to continually monitor your services. You can create and manage <i>canaries</i>, which are modular, lightweight scripts that monitor your endpoints and APIs from the outside-in. You can set up your canaries to run 24 hours a day, once per minute. The canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. The canaries seamlessly integrate with CloudWatch ServiceLens to help you trace the causes of impacted nodes in your applications. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html\">Using ServiceLens to Monitor the Health of Your Applications</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Before you create and manage canaries, be aware of the security considerations. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html\">Security Considerations for Synthetics Canaries</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateGroupResponse_Group.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateGroupResponse_Group::OAICreateGroupResponse_Group(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateGroupResponse_Group::OAICreateGroupResponse_Group() {
    this->initializeModel();
}

OAICreateGroupResponse_Group::~OAICreateGroupResponse_Group() {}

void OAICreateGroupResponse_Group::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;
}

void OAICreateGroupResponse_Group::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateGroupResponse_Group::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;
}

QString OAICreateGroupResponse_Group::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateGroupResponse_Group::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    return obj;
}

QString OAICreateGroupResponse_Group::getId() const {
    return m_id;
}
void OAICreateGroupResponse_Group::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateGroupResponse_Group::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateGroupResponse_Group::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateGroupResponse_Group::getName() const {
    return m_name;
}
void OAICreateGroupResponse_Group::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateGroupResponse_Group::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateGroupResponse_Group::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateGroupResponse_Group::getArn() const {
    return m_arn;
}
void OAICreateGroupResponse_Group::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateGroupResponse_Group::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateGroupResponse_Group::is_arn_Valid() const{
    return m_arn_isValid;
}

QMap OAICreateGroupResponse_Group::getTags() const {
    return m_tags;
}
void OAICreateGroupResponse_Group::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateGroupResponse_Group::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateGroupResponse_Group::is_tags_Valid() const{
    return m_tags_isValid;
}

QDateTime OAICreateGroupResponse_Group::getCreatedTime() const {
    return m_created_time;
}
void OAICreateGroupResponse_Group::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAICreateGroupResponse_Group::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAICreateGroupResponse_Group::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QDateTime OAICreateGroupResponse_Group::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAICreateGroupResponse_Group::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAICreateGroupResponse_Group::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAICreateGroupResponse_Group::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

bool OAICreateGroupResponse_Group::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateGroupResponse_Group::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
