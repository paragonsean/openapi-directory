/**
 * Synthetics
 * <fullname>Amazon CloudWatch Synthetics</fullname> <p>You can use Amazon CloudWatch Synthetics to continually monitor your services. You can create and manage <i>canaries</i>, which are modular, lightweight scripts that monitor your endpoints and APIs from the outside-in. You can set up your canaries to run 24 hours a day, once per minute. The canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. The canaries seamlessly integrate with CloudWatch ServiceLens to help you trace the causes of impacted nodes in your applications. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html\">Using ServiceLens to Monitor the Health of Your Applications</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Before you create and manage canaries, be aware of the security considerations. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html\">Security Considerations for Synthetics Canaries</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICanaryCodeOutput.h
 *
 * This structure contains information about the canary&#39;s Lambda handler and where its code is stored by CloudWatch Synthetics.
 */

#ifndef OAICanaryCodeOutput_H
#define OAICanaryCodeOutput_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICanaryCodeOutput : public OAIObject {
public:
    OAICanaryCodeOutput();
    OAICanaryCodeOutput(QString json);
    ~OAICanaryCodeOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSourceLocationArn() const;
    void setSourceLocationArn(const QString &source_location_arn);
    bool is_source_location_arn_Set() const;
    bool is_source_location_arn_Valid() const;

    QString getHandler() const;
    void setHandler(const QString &handler);
    bool is_handler_Set() const;
    bool is_handler_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_source_location_arn;
    bool m_source_location_arn_isSet;
    bool m_source_location_arn_isValid;

    QString m_handler;
    bool m_handler_isSet;
    bool m_handler_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICanaryCodeOutput)

#endif // OAICanaryCodeOutput_H
