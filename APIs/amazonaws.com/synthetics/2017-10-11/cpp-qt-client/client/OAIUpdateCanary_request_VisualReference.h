/**
 * Synthetics
 * <fullname>Amazon CloudWatch Synthetics</fullname> <p>You can use Amazon CloudWatch Synthetics to continually monitor your services. You can create and manage <i>canaries</i>, which are modular, lightweight scripts that monitor your endpoints and APIs from the outside-in. You can set up your canaries to run 24 hours a day, once per minute. The canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. The canaries seamlessly integrate with CloudWatch ServiceLens to help you trace the causes of impacted nodes in your applications. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html\">Using ServiceLens to Monitor the Health of Your Applications</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Before you create and manage canaries, be aware of the security considerations. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html\">Security Considerations for Synthetics Canaries</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateCanary_request_VisualReference.h
 *
 * &lt;p&gt;An object that specifies what screenshots to use as a baseline for visual monitoring by this canary. It can optionally also specify parts of the screenshots to ignore during the visual monitoring comparison.&lt;/p&gt; &lt;p&gt;Visual monitoring is supported only on canaries running the &lt;b&gt;syn-puppeteer-node-3.2&lt;/b&gt; runtime or later. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Library_SyntheticsLogger_VisualTesting.html\&quot;&gt; Visual monitoring&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Blueprints_VisualTesting.html\&quot;&gt; Visual monitoring blueprint&lt;/a&gt; &lt;/p&gt;
 */

#ifndef OAIUpdateCanary_request_VisualReference_H
#define OAIUpdateCanary_request_VisualReference_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateCanary_request_VisualReference : public OAIObject {
public:
    OAIUpdateCanary_request_VisualReference();
    OAIUpdateCanary_request_VisualReference(QString json);
    ~OAIUpdateCanary_request_VisualReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getBaseScreenshots() const;
    void setBaseScreenshots(const QList &base_screenshots);
    bool is_base_screenshots_Set() const;
    bool is_base_screenshots_Valid() const;

    QString getBaseCanaryRunId() const;
    void setBaseCanaryRunId(const QString &base_canary_run_id);
    bool is_base_canary_run_id_Set() const;
    bool is_base_canary_run_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_base_screenshots;
    bool m_base_screenshots_isSet;
    bool m_base_screenshots_isValid;

    QString m_base_canary_run_id;
    bool m_base_canary_run_id_isSet;
    bool m_base_canary_run_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateCanary_request_VisualReference)

#endif // OAIUpdateCanary_request_VisualReference_H
