/*
 * Synthetics
 * <fullname>Amazon CloudWatch Synthetics</fullname> <p>You can use Amazon CloudWatch Synthetics to continually monitor your services. You can create and manage <i>canaries</i>, which are modular, lightweight scripts that monitor your endpoints and APIs from the outside-in. You can set up your canaries to run 24 hours a day, once per minute. The canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. The canaries seamlessly integrate with CloudWatch ServiceLens to help you trace the causes of impacted nodes in your applications. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html\">Using ServiceLens to Monitor the Health of Your Applications</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Before you create and manage canaries, be aware of the security considerations. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html\">Security Considerations for Synthetics Canaries</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateCanaryRequestRunConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:28.608248-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateCanaryRequestRunConfig {
  public static final String SERIALIZED_NAME_TIMEOUT_IN_SECONDS = "TimeoutInSeconds";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_IN_SECONDS)
  private Integer timeoutInSeconds;

  public static final String SERIALIZED_NAME_MEMORY_IN_M_B = "MemoryInMB";
  @SerializedName(SERIALIZED_NAME_MEMORY_IN_M_B)
  private Integer memoryInMB;

  public static final String SERIALIZED_NAME_ACTIVE_TRACING = "ActiveTracing";
  @SerializedName(SERIALIZED_NAME_ACTIVE_TRACING)
  private Boolean activeTracing;

  public static final String SERIALIZED_NAME_ENVIRONMENT_VARIABLES = "EnvironmentVariables";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_VARIABLES)
  private Map environmentVariables;

  public UpdateCanaryRequestRunConfig() {
  }

  public UpdateCanaryRequestRunConfig timeoutInSeconds(Integer timeoutInSeconds) {
    this.timeoutInSeconds = timeoutInSeconds;
    return this;
  }

  /**
   * Get timeoutInSeconds
   * @return timeoutInSeconds
   */
  @javax.annotation.Nullable
  public Integer getTimeoutInSeconds() {
    return timeoutInSeconds;
  }

  public void setTimeoutInSeconds(Integer timeoutInSeconds) {
    this.timeoutInSeconds = timeoutInSeconds;
  }


  public UpdateCanaryRequestRunConfig memoryInMB(Integer memoryInMB) {
    this.memoryInMB = memoryInMB;
    return this;
  }

  /**
   * Get memoryInMB
   * @return memoryInMB
   */
  @javax.annotation.Nullable
  public Integer getMemoryInMB() {
    return memoryInMB;
  }

  public void setMemoryInMB(Integer memoryInMB) {
    this.memoryInMB = memoryInMB;
  }


  public UpdateCanaryRequestRunConfig activeTracing(Boolean activeTracing) {
    this.activeTracing = activeTracing;
    return this;
  }

  /**
   * Get activeTracing
   * @return activeTracing
   */
  @javax.annotation.Nullable
  public Boolean getActiveTracing() {
    return activeTracing;
  }

  public void setActiveTracing(Boolean activeTracing) {
    this.activeTracing = activeTracing;
  }


  public UpdateCanaryRequestRunConfig environmentVariables(Map environmentVariables) {
    this.environmentVariables = environmentVariables;
    return this;
  }

  /**
   * Get environmentVariables
   * @return environmentVariables
   */
  @javax.annotation.Nullable
  public Map getEnvironmentVariables() {
    return environmentVariables;
  }

  public void setEnvironmentVariables(Map environmentVariables) {
    this.environmentVariables = environmentVariables;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateCanaryRequestRunConfig updateCanaryRequestRunConfig = (UpdateCanaryRequestRunConfig) o;
    return Objects.equals(this.timeoutInSeconds, updateCanaryRequestRunConfig.timeoutInSeconds) &&
        Objects.equals(this.memoryInMB, updateCanaryRequestRunConfig.memoryInMB) &&
        Objects.equals(this.activeTracing, updateCanaryRequestRunConfig.activeTracing) &&
        Objects.equals(this.environmentVariables, updateCanaryRequestRunConfig.environmentVariables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeoutInSeconds, memoryInMB, activeTracing, environmentVariables);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateCanaryRequestRunConfig {\n");
    sb.append("    timeoutInSeconds: ").append(toIndentedString(timeoutInSeconds)).append("\n");
    sb.append("    memoryInMB: ").append(toIndentedString(memoryInMB)).append("\n");
    sb.append("    activeTracing: ").append(toIndentedString(activeTracing)).append("\n");
    sb.append("    environmentVariables: ").append(toIndentedString(environmentVariables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TimeoutInSeconds");
    openapiFields.add("MemoryInMB");
    openapiFields.add("ActiveTracing");
    openapiFields.add("EnvironmentVariables");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateCanaryRequestRunConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateCanaryRequestRunConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateCanaryRequestRunConfig is not found in the empty JSON string", UpdateCanaryRequestRunConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateCanaryRequestRunConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateCanaryRequestRunConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TimeoutInSeconds`
      if (jsonObj.get("TimeoutInSeconds") != null && !jsonObj.get("TimeoutInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimeoutInSeconds"));
      }
      // validate the optional field `MemoryInMB`
      if (jsonObj.get("MemoryInMB") != null && !jsonObj.get("MemoryInMB").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MemoryInMB"));
      }
      // validate the optional field `ActiveTracing`
      if (jsonObj.get("ActiveTracing") != null && !jsonObj.get("ActiveTracing").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ActiveTracing"));
      }
      // validate the optional field `EnvironmentVariables`
      if (jsonObj.get("EnvironmentVariables") != null && !jsonObj.get("EnvironmentVariables").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("EnvironmentVariables"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateCanaryRequestRunConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateCanaryRequestRunConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateCanaryRequestRunConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateCanaryRequestRunConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateCanaryRequestRunConfig>() {
           @Override
           public void write(JsonWriter out, UpdateCanaryRequestRunConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateCanaryRequestRunConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateCanaryRequestRunConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateCanaryRequestRunConfig
   * @throws IOException if the JSON string is invalid with respect to UpdateCanaryRequestRunConfig
   */
  public static UpdateCanaryRequestRunConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateCanaryRequestRunConfig.class);
  }

  /**
   * Convert an instance of UpdateCanaryRequestRunConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

