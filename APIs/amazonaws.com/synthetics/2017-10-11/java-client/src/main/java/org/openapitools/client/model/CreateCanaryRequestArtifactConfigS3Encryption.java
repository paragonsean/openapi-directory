/*
 * Synthetics
 * <fullname>Amazon CloudWatch Synthetics</fullname> <p>You can use Amazon CloudWatch Synthetics to continually monitor your services. You can create and manage <i>canaries</i>, which are modular, lightweight scripts that monitor your endpoints and APIs from the outside-in. You can set up your canaries to run 24 hours a day, once per minute. The canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. The canaries seamlessly integrate with CloudWatch ServiceLens to help you trace the causes of impacted nodes in your applications. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html\">Using ServiceLens to Monitor the Health of Your Applications</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Before you create and manage canaries, be aware of the security considerations. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html\">Security Considerations for Synthetics Canaries</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.EncryptionMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateCanaryRequestArtifactConfigS3Encryption
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:28.608248-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCanaryRequestArtifactConfigS3Encryption {
  public static final String SERIALIZED_NAME_ENCRYPTION_MODE = "EncryptionMode";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_MODE)
  private EncryptionMode encryptionMode;

  public static final String SERIALIZED_NAME_KMS_KEY_ARN = "KmsKeyArn";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ARN)
  private String kmsKeyArn;

  public CreateCanaryRequestArtifactConfigS3Encryption() {
  }

  public CreateCanaryRequestArtifactConfigS3Encryption encryptionMode(EncryptionMode encryptionMode) {
    this.encryptionMode = encryptionMode;
    return this;
  }

  /**
   * Get encryptionMode
   * @return encryptionMode
   */
  @javax.annotation.Nullable
  public EncryptionMode getEncryptionMode() {
    return encryptionMode;
  }

  public void setEncryptionMode(EncryptionMode encryptionMode) {
    this.encryptionMode = encryptionMode;
  }


  public CreateCanaryRequestArtifactConfigS3Encryption kmsKeyArn(String kmsKeyArn) {
    this.kmsKeyArn = kmsKeyArn;
    return this;
  }

  /**
   * Get kmsKeyArn
   * @return kmsKeyArn
   */
  @javax.annotation.Nullable
  public String getKmsKeyArn() {
    return kmsKeyArn;
  }

  public void setKmsKeyArn(String kmsKeyArn) {
    this.kmsKeyArn = kmsKeyArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCanaryRequestArtifactConfigS3Encryption createCanaryRequestArtifactConfigS3Encryption = (CreateCanaryRequestArtifactConfigS3Encryption) o;
    return Objects.equals(this.encryptionMode, createCanaryRequestArtifactConfigS3Encryption.encryptionMode) &&
        Objects.equals(this.kmsKeyArn, createCanaryRequestArtifactConfigS3Encryption.kmsKeyArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(encryptionMode, kmsKeyArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCanaryRequestArtifactConfigS3Encryption {\n");
    sb.append("    encryptionMode: ").append(toIndentedString(encryptionMode)).append("\n");
    sb.append("    kmsKeyArn: ").append(toIndentedString(kmsKeyArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EncryptionMode");
    openapiFields.add("KmsKeyArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCanaryRequestArtifactConfigS3Encryption
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCanaryRequestArtifactConfigS3Encryption.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCanaryRequestArtifactConfigS3Encryption is not found in the empty JSON string", CreateCanaryRequestArtifactConfigS3Encryption.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCanaryRequestArtifactConfigS3Encryption.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCanaryRequestArtifactConfigS3Encryption` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EncryptionMode`
      if (jsonObj.get("EncryptionMode") != null && !jsonObj.get("EncryptionMode").isJsonNull()) {
        EncryptionMode.validateJsonElement(jsonObj.get("EncryptionMode"));
      }
      // validate the optional field `KmsKeyArn`
      if (jsonObj.get("KmsKeyArn") != null && !jsonObj.get("KmsKeyArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCanaryRequestArtifactConfigS3Encryption.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCanaryRequestArtifactConfigS3Encryption' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCanaryRequestArtifactConfigS3Encryption> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCanaryRequestArtifactConfigS3Encryption.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCanaryRequestArtifactConfigS3Encryption>() {
           @Override
           public void write(JsonWriter out, CreateCanaryRequestArtifactConfigS3Encryption value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCanaryRequestArtifactConfigS3Encryption read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCanaryRequestArtifactConfigS3Encryption given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCanaryRequestArtifactConfigS3Encryption
   * @throws IOException if the JSON string is invalid with respect to CreateCanaryRequestArtifactConfigS3Encryption
   */
  public static CreateCanaryRequestArtifactConfigS3Encryption fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCanaryRequestArtifactConfigS3Encryption.class);
  }

  /**
   * Convert an instance of CreateCanaryRequestArtifactConfigS3Encryption to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

