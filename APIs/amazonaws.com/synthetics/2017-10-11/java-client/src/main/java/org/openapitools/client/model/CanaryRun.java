/*
 * Synthetics
 * <fullname>Amazon CloudWatch Synthetics</fullname> <p>You can use Amazon CloudWatch Synthetics to continually monitor your services. You can create and manage <i>canaries</i>, which are modular, lightweight scripts that monitor your endpoints and APIs from the outside-in. You can set up your canaries to run 24 hours a day, once per minute. The canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. The canaries seamlessly integrate with CloudWatch ServiceLens to help you trace the causes of impacted nodes in your applications. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html\">Using ServiceLens to Monitor the Health of Your Applications</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Before you create and manage canaries, be aware of the security considerations. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html\">Security Considerations for Synthetics Canaries</a>.</p>
 *
 * The version of the OpenAPI document: 2017-10-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CanaryRunStatus;
import org.openapitools.client.model.CanaryRunTimeline;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This structure contains the details about one run of one canary.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:28.608248-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CanaryRun {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private CanaryRunStatus status;

  public static final String SERIALIZED_NAME_TIMELINE = "Timeline";
  @SerializedName(SERIALIZED_NAME_TIMELINE)
  private CanaryRunTimeline timeline;

  public static final String SERIALIZED_NAME_ARTIFACT_S3_LOCATION = "ArtifactS3Location";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_S3_LOCATION)
  private String artifactS3Location;

  public CanaryRun() {
  }

  public CanaryRun id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CanaryRun name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CanaryRun status(CanaryRunStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public CanaryRunStatus getStatus() {
    return status;
  }

  public void setStatus(CanaryRunStatus status) {
    this.status = status;
  }


  public CanaryRun timeline(CanaryRunTimeline timeline) {
    this.timeline = timeline;
    return this;
  }

  /**
   * Get timeline
   * @return timeline
   */
  @javax.annotation.Nullable
  public CanaryRunTimeline getTimeline() {
    return timeline;
  }

  public void setTimeline(CanaryRunTimeline timeline) {
    this.timeline = timeline;
  }


  public CanaryRun artifactS3Location(String artifactS3Location) {
    this.artifactS3Location = artifactS3Location;
    return this;
  }

  /**
   * Get artifactS3Location
   * @return artifactS3Location
   */
  @javax.annotation.Nullable
  public String getArtifactS3Location() {
    return artifactS3Location;
  }

  public void setArtifactS3Location(String artifactS3Location) {
    this.artifactS3Location = artifactS3Location;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CanaryRun canaryRun = (CanaryRun) o;
    return Objects.equals(this.id, canaryRun.id) &&
        Objects.equals(this.name, canaryRun.name) &&
        Objects.equals(this.status, canaryRun.status) &&
        Objects.equals(this.timeline, canaryRun.timeline) &&
        Objects.equals(this.artifactS3Location, canaryRun.artifactS3Location);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, status, timeline, artifactS3Location);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CanaryRun {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    timeline: ").append(toIndentedString(timeline)).append("\n");
    sb.append("    artifactS3Location: ").append(toIndentedString(artifactS3Location)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("Name");
    openapiFields.add("Status");
    openapiFields.add("Timeline");
    openapiFields.add("ArtifactS3Location");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CanaryRun
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CanaryRun.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CanaryRun is not found in the empty JSON string", CanaryRun.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CanaryRun.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CanaryRun` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        CanaryRunStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Timeline`
      if (jsonObj.get("Timeline") != null && !jsonObj.get("Timeline").isJsonNull()) {
        CanaryRunTimeline.validateJsonElement(jsonObj.get("Timeline"));
      }
      // validate the optional field `ArtifactS3Location`
      if (jsonObj.get("ArtifactS3Location") != null && !jsonObj.get("ArtifactS3Location").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ArtifactS3Location"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CanaryRun.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CanaryRun' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CanaryRun> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CanaryRun.class));

       return (TypeAdapter<T>) new TypeAdapter<CanaryRun>() {
           @Override
           public void write(JsonWriter out, CanaryRun value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CanaryRun read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CanaryRun given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CanaryRun
   * @throws IOException if the JSON string is invalid with respect to CanaryRun
   */
  public static CanaryRun fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CanaryRun.class);
  }

  /**
   * Convert an instance of CanaryRun to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

