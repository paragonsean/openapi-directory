# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BaseScreenshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, screenshot_name: str=None, ignore_coordinates: List=None):
        """BaseScreenshot - a model defined in OpenAPI

        :param screenshot_name: The screenshot_name of this BaseScreenshot.
        :param ignore_coordinates: The ignore_coordinates of this BaseScreenshot.
        """
        self.openapi_types = {
            'screenshot_name': str,
            'ignore_coordinates': List
        }

        self.attribute_map = {
            'screenshot_name': 'ScreenshotName',
            'ignore_coordinates': 'IgnoreCoordinates'
        }

        self._screenshot_name = screenshot_name
        self._ignore_coordinates = ignore_coordinates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseScreenshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseScreenshot of this BaseScreenshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def screenshot_name(self):
        """Gets the screenshot_name of this BaseScreenshot.


        :return: The screenshot_name of this BaseScreenshot.
        :rtype: str
        """
        return self._screenshot_name

    @screenshot_name.setter
    def screenshot_name(self, screenshot_name):
        """Sets the screenshot_name of this BaseScreenshot.


        :param screenshot_name: The screenshot_name of this BaseScreenshot.
        :type screenshot_name: str
        """
        if screenshot_name is None:
            raise ValueError("Invalid value for `screenshot_name`, must not be `None`")

        self._screenshot_name = screenshot_name

    @property
    def ignore_coordinates(self):
        """Gets the ignore_coordinates of this BaseScreenshot.


        :return: The ignore_coordinates of this BaseScreenshot.
        :rtype: List
        """
        return self._ignore_coordinates

    @ignore_coordinates.setter
    def ignore_coordinates(self, ignore_coordinates):
        """Sets the ignore_coordinates of this BaseScreenshot.


        :param ignore_coordinates: The ignore_coordinates of this BaseScreenshot.
        :type ignore_coordinates: List
        """

        self._ignore_coordinates = ignore_coordinates
