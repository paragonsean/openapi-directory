# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CanaryCodeOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_location_arn: str=None, handler: str=None):
        """CanaryCodeOutput - a model defined in OpenAPI

        :param source_location_arn: The source_location_arn of this CanaryCodeOutput.
        :param handler: The handler of this CanaryCodeOutput.
        """
        self.openapi_types = {
            'source_location_arn': str,
            'handler': str
        }

        self.attribute_map = {
            'source_location_arn': 'SourceLocationArn',
            'handler': 'Handler'
        }

        self._source_location_arn = source_location_arn
        self._handler = handler

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CanaryCodeOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CanaryCodeOutput of this CanaryCodeOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_location_arn(self):
        """Gets the source_location_arn of this CanaryCodeOutput.


        :return: The source_location_arn of this CanaryCodeOutput.
        :rtype: str
        """
        return self._source_location_arn

    @source_location_arn.setter
    def source_location_arn(self, source_location_arn):
        """Sets the source_location_arn of this CanaryCodeOutput.


        :param source_location_arn: The source_location_arn of this CanaryCodeOutput.
        :type source_location_arn: str
        """

        self._source_location_arn = source_location_arn

    @property
    def handler(self):
        """Gets the handler of this CanaryCodeOutput.


        :return: The handler of this CanaryCodeOutput.
        :rtype: str
        """
        return self._handler

    @handler.setter
    def handler(self, handler):
        """Sets the handler of this CanaryCodeOutput.


        :param handler: The handler of this CanaryCodeOutput.
        :type handler: str
        """

        self._handler = handler
