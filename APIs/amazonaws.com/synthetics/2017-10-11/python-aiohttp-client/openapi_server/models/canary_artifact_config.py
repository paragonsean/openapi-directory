# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artifact_config_output_s3_encryption import ArtifactConfigOutputS3Encryption
from openapi_server import util


class CanaryArtifactConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_encryption: ArtifactConfigOutputS3Encryption=None):
        """CanaryArtifactConfig - a model defined in OpenAPI

        :param s3_encryption: The s3_encryption of this CanaryArtifactConfig.
        """
        self.openapi_types = {
            's3_encryption': ArtifactConfigOutputS3Encryption
        }

        self.attribute_map = {
            's3_encryption': 'S3Encryption'
        }

        self._s3_encryption = s3_encryption

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CanaryArtifactConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Canary_ArtifactConfig of this CanaryArtifactConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_encryption(self):
        """Gets the s3_encryption of this CanaryArtifactConfig.


        :return: The s3_encryption of this CanaryArtifactConfig.
        :rtype: ArtifactConfigOutputS3Encryption
        """
        return self._s3_encryption

    @s3_encryption.setter
    def s3_encryption(self, s3_encryption):
        """Sets the s3_encryption of this CanaryArtifactConfig.


        :param s3_encryption: The s3_encryption of this CanaryArtifactConfig.
        :type s3_encryption: ArtifactConfigOutputS3Encryption
        """

        self._s3_encryption = s3_encryption
