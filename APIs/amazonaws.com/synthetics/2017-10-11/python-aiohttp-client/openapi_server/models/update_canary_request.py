# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_canary_request_artifact_config import CreateCanaryRequestArtifactConfig
from openapi_server.models.create_canary_request_code import CreateCanaryRequestCode
from openapi_server.models.create_canary_request_run_config import CreateCanaryRequestRunConfig
from openapi_server.models.create_canary_request_schedule import CreateCanaryRequestSchedule
from openapi_server.models.create_canary_request_vpc_config import CreateCanaryRequestVpcConfig
from openapi_server.models.update_canary_request_visual_reference import UpdateCanaryRequestVisualReference
import re
from openapi_server import util


class UpdateCanaryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: CreateCanaryRequestCode=None, execution_role_arn: str=None, runtime_version: str=None, schedule: CreateCanaryRequestSchedule=None, run_config: CreateCanaryRequestRunConfig=None, success_retention_period_in_days: int=None, failure_retention_period_in_days: int=None, vpc_config: CreateCanaryRequestVpcConfig=None, visual_reference: UpdateCanaryRequestVisualReference=None, artifact_s3_location: str=None, artifact_config: CreateCanaryRequestArtifactConfig=None):
        """UpdateCanaryRequest - a model defined in OpenAPI

        :param code: The code of this UpdateCanaryRequest.
        :param execution_role_arn: The execution_role_arn of this UpdateCanaryRequest.
        :param runtime_version: The runtime_version of this UpdateCanaryRequest.
        :param schedule: The schedule of this UpdateCanaryRequest.
        :param run_config: The run_config of this UpdateCanaryRequest.
        :param success_retention_period_in_days: The success_retention_period_in_days of this UpdateCanaryRequest.
        :param failure_retention_period_in_days: The failure_retention_period_in_days of this UpdateCanaryRequest.
        :param vpc_config: The vpc_config of this UpdateCanaryRequest.
        :param visual_reference: The visual_reference of this UpdateCanaryRequest.
        :param artifact_s3_location: The artifact_s3_location of this UpdateCanaryRequest.
        :param artifact_config: The artifact_config of this UpdateCanaryRequest.
        """
        self.openapi_types = {
            'code': CreateCanaryRequestCode,
            'execution_role_arn': str,
            'runtime_version': str,
            'schedule': CreateCanaryRequestSchedule,
            'run_config': CreateCanaryRequestRunConfig,
            'success_retention_period_in_days': int,
            'failure_retention_period_in_days': int,
            'vpc_config': CreateCanaryRequestVpcConfig,
            'visual_reference': UpdateCanaryRequestVisualReference,
            'artifact_s3_location': str,
            'artifact_config': CreateCanaryRequestArtifactConfig
        }

        self.attribute_map = {
            'code': 'Code',
            'execution_role_arn': 'ExecutionRoleArn',
            'runtime_version': 'RuntimeVersion',
            'schedule': 'Schedule',
            'run_config': 'RunConfig',
            'success_retention_period_in_days': 'SuccessRetentionPeriodInDays',
            'failure_retention_period_in_days': 'FailureRetentionPeriodInDays',
            'vpc_config': 'VpcConfig',
            'visual_reference': 'VisualReference',
            'artifact_s3_location': 'ArtifactS3Location',
            'artifact_config': 'ArtifactConfig'
        }

        self._code = code
        self._execution_role_arn = execution_role_arn
        self._runtime_version = runtime_version
        self._schedule = schedule
        self._run_config = run_config
        self._success_retention_period_in_days = success_retention_period_in_days
        self._failure_retention_period_in_days = failure_retention_period_in_days
        self._vpc_config = vpc_config
        self._visual_reference = visual_reference
        self._artifact_s3_location = artifact_s3_location
        self._artifact_config = artifact_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCanaryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCanary_request of this UpdateCanaryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this UpdateCanaryRequest.


        :return: The code of this UpdateCanaryRequest.
        :rtype: CreateCanaryRequestCode
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this UpdateCanaryRequest.


        :param code: The code of this UpdateCanaryRequest.
        :type code: CreateCanaryRequestCode
        """

        self._code = code

    @property
    def execution_role_arn(self):
        """Gets the execution_role_arn of this UpdateCanaryRequest.

        <p>The ARN of the IAM role to be used to run the canary. This role must already exist, and must include <code>lambda.amazonaws.com</code> as a principal in the trust policy. The role must also have the following permissions:</p> <ul> <li> <p> <code>s3:PutObject</code> </p> </li> <li> <p> <code>s3:GetBucketLocation</code> </p> </li> <li> <p> <code>s3:ListAllMyBuckets</code> </p> </li> <li> <p> <code>cloudwatch:PutMetricData</code> </p> </li> <li> <p> <code>logs:CreateLogGroup</code> </p> </li> <li> <p> <code>logs:CreateLogStream</code> </p> </li> <li> <p> <code>logs:CreateLogStream</code> </p> </li> </ul>

        :return: The execution_role_arn of this UpdateCanaryRequest.
        :rtype: str
        """
        return self._execution_role_arn

    @execution_role_arn.setter
    def execution_role_arn(self, execution_role_arn):
        """Sets the execution_role_arn of this UpdateCanaryRequest.

        <p>The ARN of the IAM role to be used to run the canary. This role must already exist, and must include <code>lambda.amazonaws.com</code> as a principal in the trust policy. The role must also have the following permissions:</p> <ul> <li> <p> <code>s3:PutObject</code> </p> </li> <li> <p> <code>s3:GetBucketLocation</code> </p> </li> <li> <p> <code>s3:ListAllMyBuckets</code> </p> </li> <li> <p> <code>cloudwatch:PutMetricData</code> </p> </li> <li> <p> <code>logs:CreateLogGroup</code> </p> </li> <li> <p> <code>logs:CreateLogStream</code> </p> </li> <li> <p> <code>logs:CreateLogStream</code> </p> </li> </ul>

        :param execution_role_arn: The execution_role_arn of this UpdateCanaryRequest.
        :type execution_role_arn: str
        """
        if execution_role_arn is not None and len(execution_role_arn) > 2048:
            raise ValueError("Invalid value for `execution_role_arn`, length must be less than or equal to `2048`")
        if execution_role_arn is not None and len(execution_role_arn) < 1:
            raise ValueError("Invalid value for `execution_role_arn`, length must be greater than or equal to `1`")
        if execution_role_arn is not None and not re.search(r'arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role\/?[a-zA-Z_0-9+=,.@\-_\/]+', execution_role_arn):
            raise ValueError("Invalid value for `execution_role_arn`, must be a follow pattern or equal to `/arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role\/?[a-zA-Z_0-9+=,.@\-_\/]+/`")

        self._execution_role_arn = execution_role_arn

    @property
    def runtime_version(self):
        """Gets the runtime_version of this UpdateCanaryRequest.

        Specifies the runtime version to use for the canary. For a list of valid runtime versions and for more information about runtime versions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\"> Canary Runtime Versions</a>.

        :return: The runtime_version of this UpdateCanaryRequest.
        :rtype: str
        """
        return self._runtime_version

    @runtime_version.setter
    def runtime_version(self, runtime_version):
        """Sets the runtime_version of this UpdateCanaryRequest.

        Specifies the runtime version to use for the canary. For a list of valid runtime versions and for more information about runtime versions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html\"> Canary Runtime Versions</a>.

        :param runtime_version: The runtime_version of this UpdateCanaryRequest.
        :type runtime_version: str
        """
        if runtime_version is not None and len(runtime_version) > 1024:
            raise ValueError("Invalid value for `runtime_version`, length must be less than or equal to `1024`")
        if runtime_version is not None and len(runtime_version) < 1:
            raise ValueError("Invalid value for `runtime_version`, length must be greater than or equal to `1`")

        self._runtime_version = runtime_version

    @property
    def schedule(self):
        """Gets the schedule of this UpdateCanaryRequest.


        :return: The schedule of this UpdateCanaryRequest.
        :rtype: CreateCanaryRequestSchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this UpdateCanaryRequest.


        :param schedule: The schedule of this UpdateCanaryRequest.
        :type schedule: CreateCanaryRequestSchedule
        """

        self._schedule = schedule

    @property
    def run_config(self):
        """Gets the run_config of this UpdateCanaryRequest.


        :return: The run_config of this UpdateCanaryRequest.
        :rtype: CreateCanaryRequestRunConfig
        """
        return self._run_config

    @run_config.setter
    def run_config(self, run_config):
        """Sets the run_config of this UpdateCanaryRequest.


        :param run_config: The run_config of this UpdateCanaryRequest.
        :type run_config: CreateCanaryRequestRunConfig
        """

        self._run_config = run_config

    @property
    def success_retention_period_in_days(self):
        """Gets the success_retention_period_in_days of this UpdateCanaryRequest.

        The number of days to retain data about successful runs of this canary.

        :return: The success_retention_period_in_days of this UpdateCanaryRequest.
        :rtype: int
        """
        return self._success_retention_period_in_days

    @success_retention_period_in_days.setter
    def success_retention_period_in_days(self, success_retention_period_in_days):
        """Sets the success_retention_period_in_days of this UpdateCanaryRequest.

        The number of days to retain data about successful runs of this canary.

        :param success_retention_period_in_days: The success_retention_period_in_days of this UpdateCanaryRequest.
        :type success_retention_period_in_days: int
        """
        if success_retention_period_in_days is not None and success_retention_period_in_days > 1024:
            raise ValueError("Invalid value for `success_retention_period_in_days`, must be a value less than or equal to `1024`")
        if success_retention_period_in_days is not None and success_retention_period_in_days < 1:
            raise ValueError("Invalid value for `success_retention_period_in_days`, must be a value greater than or equal to `1`")

        self._success_retention_period_in_days = success_retention_period_in_days

    @property
    def failure_retention_period_in_days(self):
        """Gets the failure_retention_period_in_days of this UpdateCanaryRequest.

        The number of days to retain data about failed runs of this canary.

        :return: The failure_retention_period_in_days of this UpdateCanaryRequest.
        :rtype: int
        """
        return self._failure_retention_period_in_days

    @failure_retention_period_in_days.setter
    def failure_retention_period_in_days(self, failure_retention_period_in_days):
        """Sets the failure_retention_period_in_days of this UpdateCanaryRequest.

        The number of days to retain data about failed runs of this canary.

        :param failure_retention_period_in_days: The failure_retention_period_in_days of this UpdateCanaryRequest.
        :type failure_retention_period_in_days: int
        """
        if failure_retention_period_in_days is not None and failure_retention_period_in_days > 1024:
            raise ValueError("Invalid value for `failure_retention_period_in_days`, must be a value less than or equal to `1024`")
        if failure_retention_period_in_days is not None and failure_retention_period_in_days < 1:
            raise ValueError("Invalid value for `failure_retention_period_in_days`, must be a value greater than or equal to `1`")

        self._failure_retention_period_in_days = failure_retention_period_in_days

    @property
    def vpc_config(self):
        """Gets the vpc_config of this UpdateCanaryRequest.


        :return: The vpc_config of this UpdateCanaryRequest.
        :rtype: CreateCanaryRequestVpcConfig
        """
        return self._vpc_config

    @vpc_config.setter
    def vpc_config(self, vpc_config):
        """Sets the vpc_config of this UpdateCanaryRequest.


        :param vpc_config: The vpc_config of this UpdateCanaryRequest.
        :type vpc_config: CreateCanaryRequestVpcConfig
        """

        self._vpc_config = vpc_config

    @property
    def visual_reference(self):
        """Gets the visual_reference of this UpdateCanaryRequest.


        :return: The visual_reference of this UpdateCanaryRequest.
        :rtype: UpdateCanaryRequestVisualReference
        """
        return self._visual_reference

    @visual_reference.setter
    def visual_reference(self, visual_reference):
        """Sets the visual_reference of this UpdateCanaryRequest.


        :param visual_reference: The visual_reference of this UpdateCanaryRequest.
        :type visual_reference: UpdateCanaryRequestVisualReference
        """

        self._visual_reference = visual_reference

    @property
    def artifact_s3_location(self):
        """Gets the artifact_s3_location of this UpdateCanaryRequest.

        The location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary. Artifacts include the log file, screenshots, and HAR files. The name of the S3 bucket can't include a period (.).

        :return: The artifact_s3_location of this UpdateCanaryRequest.
        :rtype: str
        """
        return self._artifact_s3_location

    @artifact_s3_location.setter
    def artifact_s3_location(self, artifact_s3_location):
        """Sets the artifact_s3_location of this UpdateCanaryRequest.

        The location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary. Artifacts include the log file, screenshots, and HAR files. The name of the S3 bucket can't include a period (.).

        :param artifact_s3_location: The artifact_s3_location of this UpdateCanaryRequest.
        :type artifact_s3_location: str
        """
        if artifact_s3_location is not None and len(artifact_s3_location) > 1024:
            raise ValueError("Invalid value for `artifact_s3_location`, length must be less than or equal to `1024`")
        if artifact_s3_location is not None and len(artifact_s3_location) < 1:
            raise ValueError("Invalid value for `artifact_s3_location`, length must be greater than or equal to `1`")

        self._artifact_s3_location = artifact_s3_location

    @property
    def artifact_config(self):
        """Gets the artifact_config of this UpdateCanaryRequest.


        :return: The artifact_config of this UpdateCanaryRequest.
        :rtype: CreateCanaryRequestArtifactConfig
        """
        return self._artifact_config

    @artifact_config.setter
    def artifact_config(self, artifact_config):
        """Sets the artifact_config of this UpdateCanaryRequest.


        :param artifact_config: The artifact_config of this UpdateCanaryRequest.
        :type artifact_config: CreateCanaryRequestArtifactConfig
        """

        self._artifact_config = artifact_config
