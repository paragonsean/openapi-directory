/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AttachmentStatus from './model/AttachmentStatus';
import CancelTaskOutput from './model/CancelTaskOutput';
import Capacity from './model/Capacity';
import Command from './model/Command';
import CpuOptions from './model/CpuOptions';
import CreateTaskInput from './model/CreateTaskInput';
import CreateTaskInputCommand from './model/CreateTaskInputCommand';
import CreateTaskOutput from './model/CreateTaskOutput';
import CreateTaskRequest from './model/CreateTaskRequest';
import CreateTaskRequestCommand from './model/CreateTaskRequestCommand';
import DescribeDeviceEc2Input from './model/DescribeDeviceEc2Input';
import DescribeDeviceEc2InstancesRequest from './model/DescribeDeviceEc2InstancesRequest';
import DescribeDeviceEc2Output from './model/DescribeDeviceEc2Output';
import DescribeDeviceOutput from './model/DescribeDeviceOutput';
import DescribeDeviceOutputSoftware from './model/DescribeDeviceOutputSoftware';
import DescribeExecutionOutput from './model/DescribeExecutionOutput';
import DescribeTaskOutput from './model/DescribeTaskOutput';
import DeviceSummary from './model/DeviceSummary';
import EbsInstanceBlockDevice from './model/EbsInstanceBlockDevice';
import ExecutionState from './model/ExecutionState';
import ExecutionSummary from './model/ExecutionSummary';
import Instance from './model/Instance';
import InstanceBlockDeviceMapping from './model/InstanceBlockDeviceMapping';
import InstanceBlockDeviceMappingEbs from './model/InstanceBlockDeviceMappingEbs';
import InstanceCpuOptions from './model/InstanceCpuOptions';
import InstanceState from './model/InstanceState';
import InstanceStateName from './model/InstanceStateName';
import InstanceSummary from './model/InstanceSummary';
import InstanceSummaryInstance from './model/InstanceSummaryInstance';
import IpAddressAssignment from './model/IpAddressAssignment';
import ListDeviceResourcesOutput from './model/ListDeviceResourcesOutput';
import ListDevicesOutput from './model/ListDevicesOutput';
import ListExecutionsOutput from './model/ListExecutionsOutput';
import ListTagsForResourceOutput from './model/ListTagsForResourceOutput';
import ListTasksOutput from './model/ListTasksOutput';
import PhysicalConnectorType from './model/PhysicalConnectorType';
import PhysicalNetworkInterface from './model/PhysicalNetworkInterface';
import ResourceSummary from './model/ResourceSummary';
import SecurityGroupIdentifier from './model/SecurityGroupIdentifier';
import SoftwareInformation from './model/SoftwareInformation';
import TagResourceInput from './model/TagResourceInput';
import TagResourceRequest from './model/TagResourceRequest';
import TaskState from './model/TaskState';
import TaskSummary from './model/TaskSummary';
import UnlockState from './model/UnlockState';
import DefaultApi from './api/DefaultApi';


/**
* Amazon Web Services Snow Device Management documentation..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsSnowDeviceManagement = require('index'); // See note below*.
* var xxxSvc = new AwsSnowDeviceManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsSnowDeviceManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsSnowDeviceManagement.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsSnowDeviceManagement.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2021-08-04
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AttachmentStatus model constructor.
     * @property {module:model/AttachmentStatus}
     */
    AttachmentStatus,

    /**
     * The CancelTaskOutput model constructor.
     * @property {module:model/CancelTaskOutput}
     */
    CancelTaskOutput,

    /**
     * The Capacity model constructor.
     * @property {module:model/Capacity}
     */
    Capacity,

    /**
     * The Command model constructor.
     * @property {module:model/Command}
     */
    Command,

    /**
     * The CpuOptions model constructor.
     * @property {module:model/CpuOptions}
     */
    CpuOptions,

    /**
     * The CreateTaskInput model constructor.
     * @property {module:model/CreateTaskInput}
     */
    CreateTaskInput,

    /**
     * The CreateTaskInputCommand model constructor.
     * @property {module:model/CreateTaskInputCommand}
     */
    CreateTaskInputCommand,

    /**
     * The CreateTaskOutput model constructor.
     * @property {module:model/CreateTaskOutput}
     */
    CreateTaskOutput,

    /**
     * The CreateTaskRequest model constructor.
     * @property {module:model/CreateTaskRequest}
     */
    CreateTaskRequest,

    /**
     * The CreateTaskRequestCommand model constructor.
     * @property {module:model/CreateTaskRequestCommand}
     */
    CreateTaskRequestCommand,

    /**
     * The DescribeDeviceEc2Input model constructor.
     * @property {module:model/DescribeDeviceEc2Input}
     */
    DescribeDeviceEc2Input,

    /**
     * The DescribeDeviceEc2InstancesRequest model constructor.
     * @property {module:model/DescribeDeviceEc2InstancesRequest}
     */
    DescribeDeviceEc2InstancesRequest,

    /**
     * The DescribeDeviceEc2Output model constructor.
     * @property {module:model/DescribeDeviceEc2Output}
     */
    DescribeDeviceEc2Output,

    /**
     * The DescribeDeviceOutput model constructor.
     * @property {module:model/DescribeDeviceOutput}
     */
    DescribeDeviceOutput,

    /**
     * The DescribeDeviceOutputSoftware model constructor.
     * @property {module:model/DescribeDeviceOutputSoftware}
     */
    DescribeDeviceOutputSoftware,

    /**
     * The DescribeExecutionOutput model constructor.
     * @property {module:model/DescribeExecutionOutput}
     */
    DescribeExecutionOutput,

    /**
     * The DescribeTaskOutput model constructor.
     * @property {module:model/DescribeTaskOutput}
     */
    DescribeTaskOutput,

    /**
     * The DeviceSummary model constructor.
     * @property {module:model/DeviceSummary}
     */
    DeviceSummary,

    /**
     * The EbsInstanceBlockDevice model constructor.
     * @property {module:model/EbsInstanceBlockDevice}
     */
    EbsInstanceBlockDevice,

    /**
     * The ExecutionState model constructor.
     * @property {module:model/ExecutionState}
     */
    ExecutionState,

    /**
     * The ExecutionSummary model constructor.
     * @property {module:model/ExecutionSummary}
     */
    ExecutionSummary,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The InstanceBlockDeviceMapping model constructor.
     * @property {module:model/InstanceBlockDeviceMapping}
     */
    InstanceBlockDeviceMapping,

    /**
     * The InstanceBlockDeviceMappingEbs model constructor.
     * @property {module:model/InstanceBlockDeviceMappingEbs}
     */
    InstanceBlockDeviceMappingEbs,

    /**
     * The InstanceCpuOptions model constructor.
     * @property {module:model/InstanceCpuOptions}
     */
    InstanceCpuOptions,

    /**
     * The InstanceState model constructor.
     * @property {module:model/InstanceState}
     */
    InstanceState,

    /**
     * The InstanceStateName model constructor.
     * @property {module:model/InstanceStateName}
     */
    InstanceStateName,

    /**
     * The InstanceSummary model constructor.
     * @property {module:model/InstanceSummary}
     */
    InstanceSummary,

    /**
     * The InstanceSummaryInstance model constructor.
     * @property {module:model/InstanceSummaryInstance}
     */
    InstanceSummaryInstance,

    /**
     * The IpAddressAssignment model constructor.
     * @property {module:model/IpAddressAssignment}
     */
    IpAddressAssignment,

    /**
     * The ListDeviceResourcesOutput model constructor.
     * @property {module:model/ListDeviceResourcesOutput}
     */
    ListDeviceResourcesOutput,

    /**
     * The ListDevicesOutput model constructor.
     * @property {module:model/ListDevicesOutput}
     */
    ListDevicesOutput,

    /**
     * The ListExecutionsOutput model constructor.
     * @property {module:model/ListExecutionsOutput}
     */
    ListExecutionsOutput,

    /**
     * The ListTagsForResourceOutput model constructor.
     * @property {module:model/ListTagsForResourceOutput}
     */
    ListTagsForResourceOutput,

    /**
     * The ListTasksOutput model constructor.
     * @property {module:model/ListTasksOutput}
     */
    ListTasksOutput,

    /**
     * The PhysicalConnectorType model constructor.
     * @property {module:model/PhysicalConnectorType}
     */
    PhysicalConnectorType,

    /**
     * The PhysicalNetworkInterface model constructor.
     * @property {module:model/PhysicalNetworkInterface}
     */
    PhysicalNetworkInterface,

    /**
     * The ResourceSummary model constructor.
     * @property {module:model/ResourceSummary}
     */
    ResourceSummary,

    /**
     * The SecurityGroupIdentifier model constructor.
     * @property {module:model/SecurityGroupIdentifier}
     */
    SecurityGroupIdentifier,

    /**
     * The SoftwareInformation model constructor.
     * @property {module:model/SoftwareInformation}
     */
    SoftwareInformation,

    /**
     * The TagResourceInput model constructor.
     * @property {module:model/TagResourceInput}
     */
    TagResourceInput,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
     * The TaskState model constructor.
     * @property {module:model/TaskState}
     */
    TaskState,

    /**
     * The TaskSummary model constructor.
     * @property {module:model/TaskSummary}
     */
    TaskSummary,

    /**
     * The UnlockState model constructor.
     * @property {module:model/UnlockState}
     */
    UnlockState,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
