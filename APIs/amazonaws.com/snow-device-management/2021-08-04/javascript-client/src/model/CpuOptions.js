/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CpuOptions model module.
 * @module model/CpuOptions
 * @version 2021-08-04
 */
class CpuOptions {
    /**
     * Constructs a new <code>CpuOptions</code>.
     * The options for how a device&#39;s CPU is configured.
     * @alias module:model/CpuOptions
     */
    constructor() { 
        
        CpuOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CpuOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CpuOptions} obj Optional instance to populate.
     * @return {module:model/CpuOptions} The populated <code>CpuOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CpuOptions();

            if (data.hasOwnProperty('coreCount')) {
                obj['coreCount'] = ApiClient.convertToType(data['coreCount'], 'Number');
            }
            if (data.hasOwnProperty('threadsPerCore')) {
                obj['threadsPerCore'] = ApiClient.convertToType(data['threadsPerCore'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CpuOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CpuOptions</code>.
     */
    static validateJSON(data) {
        // validate the optional field `coreCount`
        if (data['coreCount']) { // data not null
          Number.validateJSON(data['coreCount']);
        }
        // validate the optional field `threadsPerCore`
        if (data['threadsPerCore']) { // data not null
          Number.validateJSON(data['threadsPerCore']);
        }

        return true;
    }


}



/**
 * @member {Number} coreCount
 */
CpuOptions.prototype['coreCount'] = undefined;

/**
 * @member {Number} threadsPerCore
 */
CpuOptions.prototype['threadsPerCore'] = undefined;






export default CpuOptions;

