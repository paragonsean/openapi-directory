/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceSummary model module.
 * @module model/DeviceSummary
 * @version 2021-08-04
 */
class DeviceSummary {
    /**
     * Constructs a new <code>DeviceSummary</code>.
     * Identifying information about the device.
     * @alias module:model/DeviceSummary
     */
    constructor() { 
        
        DeviceSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceSummary} obj Optional instance to populate.
     * @return {module:model/DeviceSummary} The populated <code>DeviceSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceSummary();

            if (data.hasOwnProperty('associatedWithJob')) {
                obj['associatedWithJob'] = ApiClient.convertToType(data['associatedWithJob'], 'String');
            }
            if (data.hasOwnProperty('managedDeviceArn')) {
                obj['managedDeviceArn'] = ApiClient.convertToType(data['managedDeviceArn'], 'String');
            }
            if (data.hasOwnProperty('managedDeviceId')) {
                obj['managedDeviceId'] = ApiClient.convertToType(data['managedDeviceId'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `associatedWithJob`
        if (data['associatedWithJob']) { // data not null
          String.validateJSON(data['associatedWithJob']);
        }
        // validate the optional field `managedDeviceArn`
        if (data['managedDeviceArn']) { // data not null
          String.validateJSON(data['managedDeviceArn']);
        }
        // validate the optional field `managedDeviceId`
        if (data['managedDeviceId']) { // data not null
          String.validateJSON(data['managedDeviceId']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }

        return true;
    }


}



/**
 * @member {String} associatedWithJob
 */
DeviceSummary.prototype['associatedWithJob'] = undefined;

/**
 * @member {String} managedDeviceArn
 */
DeviceSummary.prototype['managedDeviceArn'] = undefined;

/**
 * @member {String} managedDeviceId
 */
DeviceSummary.prototype['managedDeviceId'] = undefined;

/**
 * @member {Object} tags
 */
DeviceSummary.prototype['tags'] = undefined;






export default DeviceSummary;

