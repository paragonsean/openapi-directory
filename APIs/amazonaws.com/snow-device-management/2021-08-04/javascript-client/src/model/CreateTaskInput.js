/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateTaskInputCommand from './CreateTaskInputCommand';

/**
 * The CreateTaskInput model module.
 * @module model/CreateTaskInput
 * @version 2021-08-04
 */
class CreateTaskInput {
    /**
     * Constructs a new <code>CreateTaskInput</code>.
     * @alias module:model/CreateTaskInput
     * @param command {module:model/CreateTaskInputCommand} 
     * @param targets {Array} 
     */
    constructor(command, targets) { 
        
        CreateTaskInput.initialize(this, command, targets);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, command, targets) { 
        obj['command'] = command;
        obj['targets'] = targets;
    }

    /**
     * Constructs a <code>CreateTaskInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateTaskInput} obj Optional instance to populate.
     * @return {module:model/CreateTaskInput} The populated <code>CreateTaskInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateTaskInput();

            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('command')) {
                obj['command'] = CreateTaskInputCommand.constructFromObject(data['command']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('targets')) {
                obj['targets'] = ApiClient.convertToType(data['targets'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateTaskInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateTaskInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateTaskInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `clientToken`
        if (data['clientToken']) { // data not null
          String.validateJSON(data['clientToken']);
        }
        // validate the optional field `command`
        if (data['command']) { // data not null
          CreateTaskInputCommand.validateJSON(data['command']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `targets`
        if (data['targets']) { // data not null
          Array.validateJSON(data['targets']);
        }

        return true;
    }


}

CreateTaskInput.RequiredProperties = ["command", "targets"];

/**
 * @member {String} clientToken
 */
CreateTaskInput.prototype['clientToken'] = undefined;

/**
 * @member {module:model/CreateTaskInputCommand} command
 */
CreateTaskInput.prototype['command'] = undefined;

/**
 * @member {String} description
 */
CreateTaskInput.prototype['description'] = undefined;

/**
 * @member {Object} tags
 */
CreateTaskInput.prototype['tags'] = undefined;

/**
 * @member {Array} targets
 */
CreateTaskInput.prototype['targets'] = undefined;






export default CreateTaskInput;

