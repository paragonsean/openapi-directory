/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttachmentStatus from './AttachmentStatus';
import EbsInstanceBlockDevice from './EbsInstanceBlockDevice';

/**
 * The InstanceBlockDeviceMappingEbs model module.
 * @module model/InstanceBlockDeviceMappingEbs
 * @version 2021-08-04
 */
class InstanceBlockDeviceMappingEbs {
    /**
     * Constructs a new <code>InstanceBlockDeviceMappingEbs</code>.
     * @alias module:model/InstanceBlockDeviceMappingEbs
     * @implements module:model/EbsInstanceBlockDevice
     */
    constructor() { 
        EbsInstanceBlockDevice.initialize(this);
        InstanceBlockDeviceMappingEbs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceBlockDeviceMappingEbs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceBlockDeviceMappingEbs} obj Optional instance to populate.
     * @return {module:model/InstanceBlockDeviceMappingEbs} The populated <code>InstanceBlockDeviceMappingEbs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceBlockDeviceMappingEbs();
            EbsInstanceBlockDevice.constructFromObject(data, obj);

            if (data.hasOwnProperty('attachTime')) {
                obj['attachTime'] = ApiClient.convertToType(data['attachTime'], 'Date');
            }
            if (data.hasOwnProperty('deleteOnTermination')) {
                obj['deleteOnTermination'] = ApiClient.convertToType(data['deleteOnTermination'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], AttachmentStatus);
            }
            if (data.hasOwnProperty('volumeId')) {
                obj['volumeId'] = ApiClient.convertToType(data['volumeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceBlockDeviceMappingEbs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceBlockDeviceMappingEbs</code>.
     */
    static validateJSON(data) {
        // validate the optional field `attachTime`
        if (data['attachTime']) { // data not null
          Date.validateJSON(data['attachTime']);
        }
        // validate the optional field `deleteOnTermination`
        if (data['deleteOnTermination']) { // data not null
          Boolean.validateJSON(data['deleteOnTermination']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          AttachmentStatus.validateJSON(data['status']);
        }
        // validate the optional field `volumeId`
        if (data['volumeId']) { // data not null
          String.validateJSON(data['volumeId']);
        }

        return true;
    }


}



/**
 * @member {Date} attachTime
 */
InstanceBlockDeviceMappingEbs.prototype['attachTime'] = undefined;

/**
 * @member {Boolean} deleteOnTermination
 */
InstanceBlockDeviceMappingEbs.prototype['deleteOnTermination'] = undefined;

/**
 * @member {module:model/AttachmentStatus} status
 */
InstanceBlockDeviceMappingEbs.prototype['status'] = undefined;

/**
 * @member {String} volumeId
 */
InstanceBlockDeviceMappingEbs.prototype['volumeId'] = undefined;


// Implement EbsInstanceBlockDevice interface:
/**
 * @member {Date} attachTime
 */
EbsInstanceBlockDevice.prototype['attachTime'] = undefined;
/**
 * @member {Boolean} deleteOnTermination
 */
EbsInstanceBlockDevice.prototype['deleteOnTermination'] = undefined;
/**
 * @member {module:model/AttachmentStatus} status
 */
EbsInstanceBlockDevice.prototype['status'] = undefined;
/**
 * @member {String} volumeId
 */
EbsInstanceBlockDevice.prototype['volumeId'] = undefined;




export default InstanceBlockDeviceMappingEbs;

