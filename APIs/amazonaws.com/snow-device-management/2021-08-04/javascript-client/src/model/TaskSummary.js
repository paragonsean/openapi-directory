/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskState from './TaskState';

/**
 * The TaskSummary model module.
 * @module model/TaskSummary
 * @version 2021-08-04
 */
class TaskSummary {
    /**
     * Constructs a new <code>TaskSummary</code>.
     * Information about the task assigned to one or many devices.
     * @alias module:model/TaskSummary
     * @param taskId {String} 
     */
    constructor(taskId) { 
        
        TaskSummary.initialize(this, taskId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, taskId) { 
        obj['taskId'] = taskId;
    }

    /**
     * Constructs a <code>TaskSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskSummary} obj Optional instance to populate.
     * @return {module:model/TaskSummary} The populated <code>TaskSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskSummary();

            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], TaskState);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('taskArn')) {
                obj['taskArn'] = ApiClient.convertToType(data['taskArn'], 'String');
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TaskSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          TaskState.validateJSON(data['state']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `taskArn`
        if (data['taskArn']) { // data not null
          String.validateJSON(data['taskArn']);
        }
        // validate the optional field `taskId`
        if (data['taskId']) { // data not null
          String.validateJSON(data['taskId']);
        }

        return true;
    }


}

TaskSummary.RequiredProperties = ["taskId"];

/**
 * @member {module:model/TaskState} state
 */
TaskSummary.prototype['state'] = undefined;

/**
 * @member {Object} tags
 */
TaskSummary.prototype['tags'] = undefined;

/**
 * @member {String} taskArn
 */
TaskSummary.prototype['taskArn'] = undefined;

/**
 * @member {String} taskId
 */
TaskSummary.prototype['taskId'] = undefined;






export default TaskSummary;

