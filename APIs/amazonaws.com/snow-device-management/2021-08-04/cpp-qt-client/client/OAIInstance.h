/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstance.h
 *
 * The description of an instance. Currently, Amazon EC2 instances are the only supported instance type.
 */

#ifndef OAIInstance_H
#define OAIInstance_H

#include <QJsonObject>

#include "OAIInstanceState.h"
#include "OAIInstance_cpuOptions.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstance_cpuOptions;
class OAIInstanceState;

class OAIInstance : public OAIObject {
public:
    OAIInstance();
    OAIInstance(QString json);
    ~OAIInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAmiLaunchIndex() const;
    void setAmiLaunchIndex(const qint32 &ami_launch_index);
    bool is_ami_launch_index_Set() const;
    bool is_ami_launch_index_Valid() const;

    QList getBlockDeviceMappings() const;
    void setBlockDeviceMappings(const QList &block_device_mappings);
    bool is_block_device_mappings_Set() const;
    bool is_block_device_mappings_Valid() const;

    OAIInstance_cpuOptions getCpuOptions() const;
    void setCpuOptions(const OAIInstance_cpuOptions &cpu_options);
    bool is_cpu_options_Set() const;
    bool is_cpu_options_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getImageId() const;
    void setImageId(const QString &image_id);
    bool is_image_id_Set() const;
    bool is_image_id_Valid() const;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getPrivateIpAddress() const;
    void setPrivateIpAddress(const QString &private_ip_address);
    bool is_private_ip_address_Set() const;
    bool is_private_ip_address_Valid() const;

    QString getPublicIpAddress() const;
    void setPublicIpAddress(const QString &public_ip_address);
    bool is_public_ip_address_Set() const;
    bool is_public_ip_address_Valid() const;

    QString getRootDeviceName() const;
    void setRootDeviceName(const QString &root_device_name);
    bool is_root_device_name_Set() const;
    bool is_root_device_name_Valid() const;

    QList getSecurityGroups() const;
    void setSecurityGroups(const QList &security_groups);
    bool is_security_groups_Set() const;
    bool is_security_groups_Valid() const;

    OAIInstanceState getState() const;
    void setState(const OAIInstanceState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_ami_launch_index;
    bool m_ami_launch_index_isSet;
    bool m_ami_launch_index_isValid;

    QList m_block_device_mappings;
    bool m_block_device_mappings_isSet;
    bool m_block_device_mappings_isValid;

    OAIInstance_cpuOptions m_cpu_options;
    bool m_cpu_options_isSet;
    bool m_cpu_options_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_image_id;
    bool m_image_id_isSet;
    bool m_image_id_isValid;

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_private_ip_address;
    bool m_private_ip_address_isSet;
    bool m_private_ip_address_isValid;

    QString m_public_ip_address;
    bool m_public_ip_address_isSet;
    bool m_public_ip_address_isValid;

    QString m_root_device_name;
    bool m_root_device_name_isSet;
    bool m_root_device_name_isValid;

    QList m_security_groups;
    bool m_security_groups_isSet;
    bool m_security_groups_isValid;

    OAIInstanceState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstance)

#endif // OAIInstance_H
