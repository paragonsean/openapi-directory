/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICapacity.h
 *
 * The physical capacity of the Amazon Web Services Snow Family device. 
 */

#ifndef OAICapacity_H
#define OAICapacity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICapacity : public OAIObject {
public:
    OAICapacity();
    OAICapacity(QString json);
    ~OAICapacity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAvailable() const;
    void setAvailable(const qint32 &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    qint32 getUsed() const;
    void setUsed(const qint32 &used);
    bool is_used_Set() const;
    bool is_used_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_available;
    bool m_available_isSet;
    bool m_available_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    qint32 m_used;
    bool m_used_isSet;
    bool m_used_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICapacity)

#endif // OAICapacity_H
