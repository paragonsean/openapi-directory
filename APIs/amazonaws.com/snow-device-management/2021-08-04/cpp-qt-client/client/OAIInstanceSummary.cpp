/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstanceSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstanceSummary::OAIInstanceSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstanceSummary::OAIInstanceSummary() {
    this->initializeModel();
}

OAIInstanceSummary::~OAIInstanceSummary() {}

void OAIInstanceSummary::initializeModel() {

    m_instance_isSet = false;
    m_instance_isValid = false;

    m_last_updated_at_isSet = false;
    m_last_updated_at_isValid = false;
}

void OAIInstanceSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstanceSummary::fromJsonObject(QJsonObject json) {

    m_instance_isValid = ::OpenAPI::fromJsonValue(m_instance, json[QString("instance")]);
    m_instance_isSet = !json[QString("instance")].isNull() && m_instance_isValid;

    m_last_updated_at_isValid = ::OpenAPI::fromJsonValue(m_last_updated_at, json[QString("lastUpdatedAt")]);
    m_last_updated_at_isSet = !json[QString("lastUpdatedAt")].isNull() && m_last_updated_at_isValid;
}

QString OAIInstanceSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstanceSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_instance.isSet()) {
        obj.insert(QString("instance"), ::OpenAPI::toJsonValue(m_instance));
    }
    if (m_last_updated_at_isSet) {
        obj.insert(QString("lastUpdatedAt"), ::OpenAPI::toJsonValue(m_last_updated_at));
    }
    return obj;
}

OAIInstanceSummary_instance OAIInstanceSummary::getInstance() const {
    return m_instance;
}
void OAIInstanceSummary::setInstance(const OAIInstanceSummary_instance &instance) {
    m_instance = instance;
    m_instance_isSet = true;
}

bool OAIInstanceSummary::is_instance_Set() const{
    return m_instance_isSet;
}

bool OAIInstanceSummary::is_instance_Valid() const{
    return m_instance_isValid;
}

QDateTime OAIInstanceSummary::getLastUpdatedAt() const {
    return m_last_updated_at;
}
void OAIInstanceSummary::setLastUpdatedAt(const QDateTime &last_updated_at) {
    m_last_updated_at = last_updated_at;
    m_last_updated_at_isSet = true;
}

bool OAIInstanceSummary::is_last_updated_at_Set() const{
    return m_last_updated_at_isSet;
}

bool OAIInstanceSummary::is_last_updated_at_Valid() const{
    return m_last_updated_at_isValid;
}

bool OAIInstanceSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstanceSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
