/**
 * AWS Snow Device Management
 * Amazon Web Services Snow Device Management documentation.
 *
 * The version of the OpenAPI document: 2021-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhysicalNetworkInterface.h
 *
 * The details about the physical network interface for the device.
 */

#ifndef OAIPhysicalNetworkInterface_H
#define OAIPhysicalNetworkInterface_H

#include <QJsonObject>

#include "OAIIpAddressAssignment.h"
#include "OAIPhysicalConnectorType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPhysicalNetworkInterface : public OAIObject {
public:
    OAIPhysicalNetworkInterface();
    OAIPhysicalNetworkInterface(QString json);
    ~OAIPhysicalNetworkInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefaultGateway() const;
    void setDefaultGateway(const QString &default_gateway);
    bool is_default_gateway_Set() const;
    bool is_default_gateway_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    OAIIpAddressAssignment getIpAddressAssignment() const;
    void setIpAddressAssignment(const OAIIpAddressAssignment &ip_address_assignment);
    bool is_ip_address_assignment_Set() const;
    bool is_ip_address_assignment_Valid() const;

    QString getMacAddress() const;
    void setMacAddress(const QString &mac_address);
    bool is_mac_address_Set() const;
    bool is_mac_address_Valid() const;

    QString getNetmask() const;
    void setNetmask(const QString &netmask);
    bool is_netmask_Set() const;
    bool is_netmask_Valid() const;

    OAIPhysicalConnectorType getPhysicalConnectorType() const;
    void setPhysicalConnectorType(const OAIPhysicalConnectorType &physical_connector_type);
    bool is_physical_connector_type_Set() const;
    bool is_physical_connector_type_Valid() const;

    QString getPhysicalNetworkInterfaceId() const;
    void setPhysicalNetworkInterfaceId(const QString &physical_network_interface_id);
    bool is_physical_network_interface_id_Set() const;
    bool is_physical_network_interface_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_default_gateway;
    bool m_default_gateway_isSet;
    bool m_default_gateway_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    OAIIpAddressAssignment m_ip_address_assignment;
    bool m_ip_address_assignment_isSet;
    bool m_ip_address_assignment_isValid;

    QString m_mac_address;
    bool m_mac_address_isSet;
    bool m_mac_address_isValid;

    QString m_netmask;
    bool m_netmask_isSet;
    bool m_netmask_isValid;

    OAIPhysicalConnectorType m_physical_connector_type;
    bool m_physical_connector_type_isSet;
    bool m_physical_connector_type_isValid;

    QString m_physical_network_interface_id;
    bool m_physical_network_interface_id_isSet;
    bool m_physical_network_interface_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhysicalNetworkInterface)

#endif // OAIPhysicalNetworkInterface_H
