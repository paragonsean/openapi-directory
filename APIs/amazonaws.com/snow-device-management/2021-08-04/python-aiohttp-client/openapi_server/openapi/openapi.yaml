openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Amazon Web Services Snow Device Management documentation.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Snow Device Management
  version: 2021-08-04
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: snow-device-management
  x-aws-signingName: snow-device-management
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/snow-device-management-2021-08-04.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/snow-device-management/
servers:
- description: The AWS Snow Device Management multi-region endpoint
  url: "http://snow-device-management.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Snow Device Management multi-region endpoint
  url: "https://snow-device-management.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Snow Device Management endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://snow-device-management.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Snow Device Management endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://snow-device-management.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /executions#taskId:
    get:
      description: Returns the status of tasks for one or more target devices.
      operationId: list_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of tasks to list per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token to continue to the next page of tasks.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
        style: form
      - description: A structure used to filter the tasks by their current state.
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - QUEUED
          - IN_PROGRESS
          - CANCELED
          - FAILED
          - SUCCEEDED
          - REJECTED
          - TIMED_OUT
          type: string
        style: form
      - description: The ID of the task.
        explode: true
        in: query
        name: taskId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /managed-device/{managedDeviceId}/describe:
    post:
      description: "Checks device-specific information, such as the device type, software\
        \ version, IP addresses, and lock status."
      operationId: describe_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the device that you are checking the information of.
        explode: false
        in: path
        name: managedDeviceId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeviceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /managed-device/{managedDeviceId}/resources:
    get:
      description: "Returns a list of the Amazon Web Services resources available\
        \ for a device. Currently, Amazon EC2 instances are the only supported resource\
        \ type."
      operationId: list_device_resources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the managed device that you are listing the resources
          of.
        explode: false
        in: path
        name: managedDeviceId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The maximum number of resources per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token to continue to the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
        style: form
      - description: A structure used to filter the results by type of resource.
        explode: true
        in: query
        name: type
        required: false
        schema:
          maxLength: 50
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /managed-device/{managedDeviceId}/resources/ec2/describe:
    post:
      description: "Checks the current state of the Amazon EC2 instances. The output\
        \ is similar to <code>describeDevice</code>, but the results are sourced from\
        \ the device cache in the Amazon Web Services Cloud and include a subset of\
        \ the available fields. "
      operationId: describe_device_ec2_instances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the managed device.
        explode: false
        in: path
        name: managedDeviceId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDeviceEc2Instances_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeviceEc2Output'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /managed-devices:
    get:
      description: Returns a list of all devices on your Amazon Web Services account
        that have Amazon Web Services Snow Device Management enabled in the Amazon
        Web Services Region where the command is run.
      operationId: list_devices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the job used to order the device.
        explode: true
        in: query
        name: jobId
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: form
      - description: The maximum number of devices to list per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token to continue to the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{resourceArn}:
    get:
      description: Returns a list of tags for a managed device or task.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the device or task.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Adds or replaces tags on a device or task.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the device or task.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes a tag from a device or task.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the device or task.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional metadata that you assign to a resource. You can use\
          \ tags to categorize a resource in different ways, such as by purpose, owner,\
          \ or environment."
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /task:
    post:
      description: "Instructs one or more devices to start a task, such as unlocking\
        \ or rebooting."
      operationId: create_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTask_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /task/{taskId}:
    post:
      description: 'Checks the metadata for a given task on a device. '
      operationId: describe_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the task to be described.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTaskOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /task/{taskId}/cancel:
    post:
      description: <p>Sends a cancel request for a specified task. You can cancel
        a task only if it's still in a <code>QUEUED</code> state. Tasks that are already
        running can't be cancelled.</p> <note> <p>A task might still run if it's processed
        from the queue before the <code>CancelTask</code> operation changes the task's
        state.</p> </note>
      operationId: cancel_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the task that you are attempting to cancel. You can
          retrieve a task ID by using the <code>ListTasks</code> operation.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelTaskOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /task/{taskId}/execution/{managedDeviceId}:
    post:
      description: Checks the status of a remote task running on one or more target
        devices.
      operationId: describe_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the managed device.
        explode: false
        in: path
        name: managedDeviceId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The ID of the task that the action is describing.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeExecutionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tasks:
    get:
      description: Returns a list of tasks that can be filtered by state.
      operationId: list_tasks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of tasks per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A pagination token to continue to the next page of tasks.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
        style: form
      - description: A structure used to filter the list of tasks.
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - IN_PROGRESS
          - CANCELED
          - COMPLETED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTasksOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CancelTaskOutput:
      example:
        taskId: ""
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the task that you are attempting to cancel.
          title: taskId
      title: CancelTaskOutput
      type: object
    ThrottlingException: {}
    InternalServerException: {}
    ResourceNotFoundException: {}
    ValidationException: {}
    AccessDeniedException: {}
    CreateTaskOutput:
      example:
        taskArn: ""
        taskId: ""
      properties:
        taskArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the task that you created.
          title: taskArn
        taskId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the task that you created.
          title: taskId
      title: CreateTaskOutput
      type: object
    Reboot:
      description: A structure used to reboot the device.
      properties: {}
      type: object
    Unlock:
      description: A structure used to unlock a device.
      properties: {}
      type: object
    String:
      title: String
      type: string
    ServiceQuotaExceededException: {}
    DescribeDeviceOutput:
      example:
        deviceType: ""
        managedDeviceId: ""
        software:
          installState: ""
          installingVersion: ""
          installedVersion: ""
        lastUpdatedAt: ""
        physicalNetworkInterfaces: ""
        associatedWithJob: ""
        deviceCapacities: ""
        deviceState: ""
        lastReachedOutAt: ""
        managedDeviceArn: ""
        tags: ""
      properties:
        associatedWithJob:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the job used when ordering the device.
          title: associatedWithJob
        deviceCapacities:
          allOf:
          - $ref: '#/components/schemas/CapacityList'
          - description: 'The hardware specifications of the device. '
          title: deviceCapacities
        deviceState:
          allOf:
          - $ref: '#/components/schemas/UnlockState'
          - description: The current state of the device.
          title: deviceState
        deviceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of Amazon Web Services Snow Family device.
          title: deviceType
        lastReachedOutAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the device last contacted the Amazon Web Services Cloud.
              Indicates that the device is online.
          title: lastReachedOutAt
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the device last pushed an update to the Amazon Web Services
              Cloud. Indicates when the device cache was refreshed.
          title: lastUpdatedAt
        managedDeviceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the device.
          title: managedDeviceArn
        managedDeviceId:
          allOf:
          - $ref: '#/components/schemas/ManagedDeviceId'
          - description: The ID of the device that you checked the information for.
          title: managedDeviceId
        physicalNetworkInterfaces:
          allOf:
          - $ref: '#/components/schemas/PhysicalNetworkInterfaceList'
          - description: The network interfaces available on the device.
          title: physicalNetworkInterfaces
        software:
          $ref: '#/components/schemas/DescribeDeviceOutput_software'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Optional metadata that you assign to a resource. You can\
              \ use tags to categorize a resource in different ways, such as by purpose,\
              \ owner, or environment. "
          title: tags
      title: DescribeDeviceOutput
      type: object
    DescribeDeviceEc2Output:
      example:
        instances: ""
      properties:
        instances:
          allOf:
          - $ref: '#/components/schemas/InstanceSummaryList'
          - description: 'A list of structures containing information about each instance. '
          title: instances
      title: DescribeDeviceEc2Output
      type: object
    DescribeExecutionOutput:
      example:
        executionId: ""
        managedDeviceId: ""
        lastUpdatedAt: ""
        startedAt: ""
        state: ""
        taskId: ""
      properties:
        executionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: The ID of the execution.
          title: executionId
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the status of the execution was last updated.
          title: lastUpdatedAt
        managedDeviceId:
          allOf:
          - $ref: '#/components/schemas/ManagedDeviceId'
          - description: The ID of the managed device that the task is being executed
              on.
          title: managedDeviceId
        startedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the execution began.
          title: startedAt
        state:
          allOf:
          - $ref: '#/components/schemas/ExecutionState'
          - description: The current state of the execution.
          title: state
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          - description: The ID of the task being executed on the device.
          title: taskId
      title: DescribeExecutionOutput
      type: object
    DescribeTaskOutput:
      example:
        createdAt: ""
        completedAt: ""
        lastUpdatedAt: ""
        taskArn: ""
        description: ""
        state: ""
        targets: ""
        taskId: ""
        tags: ""
      properties:
        completedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the task was completed.
          title: completedAt
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the <code>CreateTask</code> operation was called.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/TaskDescriptionString'
          - description: The description provided of the task and managed devices.
          title: description
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the state of the task was last updated.
          title: lastUpdatedAt
        state:
          allOf:
          - $ref: '#/components/schemas/TaskState'
          - description: The current state of the task.
          title: state
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Optional metadata that you assign to a resource. You can\
              \ use tags to categorize a resource in different ways, such as by purpose,\
              \ owner, or environment."
          title: tags
        targets:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: The managed devices that the task was sent to.
          title: targets
        taskArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the task.
          title: taskArn
        taskId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the task.
          title: taskId
      title: DescribeTaskOutput
      type: object
    ListDeviceResourcesOutput:
      example:
        nextToken: ""
        resources: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token to continue to the next page of results.
          title: nextToken
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourceSummaryList'
          - description: "A structure defining the resource's type, Amazon Resource\
              \ Name (ARN), and ID."
          title: resources
      title: ListDeviceResourcesOutput
      type: object
    ListDevicesOutput:
      example:
        devices: ""
        nextToken: ""
      properties:
        devices:
          allOf:
          - $ref: '#/components/schemas/DeviceSummaryList'
          - description: A list of device structures that contain information about
              the device.
          title: devices
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token to continue to the next page of devices.
          title: nextToken
      title: ListDevicesOutput
      type: object
    ListExecutionsOutput:
      example:
        executions: ""
        nextToken: ""
      properties:
        executions:
          allOf:
          - $ref: '#/components/schemas/ExecutionSummaryList'
          - description: "A list of executions. Each execution contains the task ID,\
              \ the device that the task is executing on, the execution ID, and the\
              \ status of the execution."
          title: executions
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token to continue to the next page of executions.
          title: nextToken
      title: ListExecutionsOutput
      type: object
    ListTagsForResourceOutput:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tags for the device or task.
          title: tags
      title: ListTagsForResourceOutput
      type: object
    ListTasksOutput:
      example:
        nextToken: ""
        tasks: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token to continue to the next page of tasks.
          title: nextToken
        tasks:
          allOf:
          - $ref: '#/components/schemas/TaskSummaryList'
          - description: A list of task structures containing details about each task.
          title: tasks
      title: ListTasksOutput
      type: object
    AttachmentStatus:
      enum:
      - ATTACHING
      - ATTACHED
      - DETACHING
      - DETACHED
      title: AttachmentStatus
      type: string
    Boolean:
      type: boolean
    TaskId:
      maxLength: 64
      minLength: 1
      type: string
    CancelTaskInput:
      properties: {}
      title: CancelTaskInput
      type: object
    Long:
      type: integer
    CapacityNameString:
      maxLength: 100
      minLength: 0
      type: string
    CapacityUnitString:
      maxLength: 20
      minLength: 0
      type: string
    Capacity:
      description: 'The physical capacity of the Amazon Web Services Snow Family device. '
      properties:
        available:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The amount of capacity available for use on the device.
          title: available
        name:
          allOf:
          - $ref: '#/components/schemas/CapacityNameString'
          - description: "The name of the type of capacity, such as memory."
          title: name
        total:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The total capacity on the device.
          title: total
        unit:
          allOf:
          - $ref: '#/components/schemas/CapacityUnitString'
          - description: The unit of measure for the type of capacity.
          title: unit
        used:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The amount of capacity used on the device.
          title: used
      title: Capacity
      type: object
    CapacityList:
      items:
        $ref: '#/components/schemas/Capacity'
      maxItems: 100
      minItems: 0
      type: array
    Command:
      description: The command given to the device to execute.
      properties:
        reboot:
          allOf:
          - $ref: '#/components/schemas/Reboot'
          - description: Reboots the device.
          title: reboot
        unlock:
          allOf:
          - $ref: '#/components/schemas/Unlock'
          - description: Unlocks the device.
          title: unlock
      title: Command
      type: object
    Integer:
      type: integer
    CpuOptions:
      description: The options for how a device's CPU is configured.
      properties:
        coreCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of cores that the CPU can use.
          title: coreCount
        threadsPerCore:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of threads per core in the CPU.
          title: threadsPerCore
      title: CpuOptions
      type: object
    IdempotencyToken:
      maxLength: 64
      minLength: 1
      pattern: "[!-~]+"
      type: string
    TaskDescriptionString:
      maxLength: 128
      minLength: 1
      pattern: "[A-Za-z0-9 _.,!#]*"
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    TargetList:
      items:
        $ref: '#/components/schemas/String'
      maxItems: 10
      minItems: 1
      type: array
    CreateTaskInput:
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: A token ensuring that the action is called only once with
              the specified details.
        command:
          $ref: '#/components/schemas/CreateTaskInput_command'
        description:
          allOf:
          - $ref: '#/components/schemas/TaskDescriptionString'
          - description: A description of the task and its targets.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Optional metadata that you assign to a resource. You can\
              \ use tags to categorize a resource in different ways, such as by purpose,\
              \ owner, or environment. "
        targets:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: A list of managed device IDs.
      required:
      - command
      - targets
      title: CreateTaskInput
      type: object
    InstanceIdsList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ManagedDeviceId:
      maxLength: 64
      minLength: 1
      type: string
    DescribeDeviceEc2Input:
      properties:
        instanceIds:
          allOf:
          - $ref: '#/components/schemas/InstanceIdsList'
          - description: A list of instance IDs associated with the managed device.
      required:
      - instanceIds
      title: DescribeDeviceEc2Input
      type: object
    InstanceSummaryList:
      items:
        $ref: '#/components/schemas/InstanceSummary'
      type: array
    DescribeDeviceInput:
      properties: {}
      title: DescribeDeviceInput
      type: object
    UnlockState:
      enum:
      - UNLOCKED
      - LOCKED
      - UNLOCKING
      title: UnlockState
      type: string
    Timestamp:
      format: date-time
      type: string
    PhysicalNetworkInterfaceList:
      items:
        $ref: '#/components/schemas/PhysicalNetworkInterface'
      type: array
    SoftwareInformation:
      description: Information about the software on the device.
      properties:
        installState:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The state of the software that is installed or that is being
              installed on the device.
          title: installState
        installedVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the software currently installed on the device.
          title: installedVersion
        installingVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the software being installed on the device.
          title: installingVersion
      title: SoftwareInformation
      type: object
    DescribeExecutionInput:
      properties: {}
      title: DescribeExecutionInput
      type: object
    ExecutionId:
      maxLength: 64
      minLength: 1
      type: string
    ExecutionState:
      enum:
      - QUEUED
      - IN_PROGRESS
      - CANCELED
      - FAILED
      - SUCCEEDED
      - REJECTED
      - TIMED_OUT
      title: ExecutionState
      type: string
    DescribeTaskInput:
      properties: {}
      title: DescribeTaskInput
      type: object
    TaskState:
      enum:
      - IN_PROGRESS
      - CANCELED
      - COMPLETED
      title: TaskState
      type: string
    DeviceSummary:
      description: Identifying information about the device.
      properties:
        associatedWithJob:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the job used to order the device.
          title: associatedWithJob
        managedDeviceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the device.
          title: managedDeviceArn
        managedDeviceId:
          allOf:
          - $ref: '#/components/schemas/ManagedDeviceId'
          - description: The ID of the device.
          title: managedDeviceId
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Optional metadata that you assign to a resource. You can\
              \ use tags to categorize a resource in different ways, such as by purpose,\
              \ owner, or environment."
          title: tags
      title: DeviceSummary
      type: object
    DeviceSummaryList:
      items:
        $ref: '#/components/schemas/DeviceSummary'
      type: array
    EbsInstanceBlockDevice:
      description: Describes a parameter used to set up an Amazon Elastic Block Store
        (Amazon EBS) volume in a block device mapping.
      properties:
        attachTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the attachment was initiated.
          title: attachTime
        deleteOnTermination:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that indicates whether the volume is deleted on instance
              termination.
          title: deleteOnTermination
        status:
          allOf:
          - $ref: '#/components/schemas/AttachmentStatus'
          - description: The attachment state.
          title: status
        volumeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the Amazon EBS volume.
          title: volumeId
      title: EbsInstanceBlockDevice
      type: object
    ExecutionSummary:
      description: The summary of a task execution on a specified device.
      properties:
        executionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: The ID of the execution.
          title: executionId
        managedDeviceId:
          allOf:
          - $ref: '#/components/schemas/ManagedDeviceId'
          - description: The ID of the managed device that the task is being executed
              on.
          title: managedDeviceId
        state:
          allOf:
          - $ref: '#/components/schemas/ExecutionState'
          - description: The state of the execution.
          title: state
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          - description: The ID of the task.
          title: taskId
      title: ExecutionSummary
      type: object
    ExecutionSummaryList:
      items:
        $ref: '#/components/schemas/ExecutionSummary'
      type: array
    InstanceBlockDeviceMappingList:
      items:
        $ref: '#/components/schemas/InstanceBlockDeviceMapping'
      type: array
    SecurityGroupIdentifierList:
      items:
        $ref: '#/components/schemas/SecurityGroupIdentifier'
      type: array
    InstanceState:
      description: The description of the current state of an instance.
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The state of the instance as a 16-bit unsigned integer.\
              \ </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1,\
              \ which equals decimal values between 256 and 65,535. These numerical\
              \ values are used for internal purposes and should be ignored. </p>\
              \ <p>The low byte is all of the bits between 2^0 and (2^8)-1, which\
              \ equals decimal values between 0 and 255. </p> <p>The valid values\
              \ for the instance state code are all in the range of the low byte.\
              \ These values are: </p> <ul> <li> <p> <code>0</code> : <code>pending</code>\
              \ </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li>\
              \ <li> <p> <code>32</code> : <code>shutting-down</code> </p> </li> <li>\
              \ <p> <code>48</code> : <code>terminated</code> </p> </li> <li> <p>\
              \ <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code>\
              \ : <code>stopped</code> </p> </li> </ul> <p>You can ignore the high\
              \ byte value by zeroing out all of the bits above 2^8 or 256 in decimal.\
              \ </p>"
          title: code
        name:
          allOf:
          - $ref: '#/components/schemas/InstanceStateName'
          - description: The current state of the instance.
          title: name
      title: InstanceState
      type: object
    Instance:
      description: "The description of an instance. Currently, Amazon EC2 instances\
        \ are the only supported instance type."
      properties:
        amiLaunchIndex:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The Amazon Machine Image (AMI) launch index, which you can\
              \ use to find this instance in the launch group. "
          title: amiLaunchIndex
        blockDeviceMappings:
          allOf:
          - $ref: '#/components/schemas/InstanceBlockDeviceMappingList'
          - description: Any block device mapping entries for the instance.
          title: blockDeviceMappings
        cpuOptions:
          $ref: '#/components/schemas/Instance_cpuOptions'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the instance was created.
          title: createdAt
        imageId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the AMI used to launch the instance.
          title: imageId
        instanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the instance.
          title: instanceId
        instanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The instance type.
          title: instanceType
        privateIpAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The private IPv4 address assigned to the instance.
          title: privateIpAddress
        publicIpAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The public IPv4 address assigned to the instance.
          title: publicIpAddress
        rootDeviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The device name of the root device volume (for example,\
              \ <code>/dev/sda1</code>). "
          title: rootDeviceName
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdentifierList'
          - description: The security groups for the instance.
          title: securityGroups
        state:
          $ref: '#/components/schemas/InstanceState'
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the instance was last updated.
          title: updatedAt
      title: Instance
      type: object
    InstanceBlockDeviceMapping:
      description: The description of a block device mapping.
      properties:
        deviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The block device name.
          title: deviceName
        ebs:
          $ref: '#/components/schemas/InstanceBlockDeviceMapping_ebs'
      title: InstanceBlockDeviceMapping
      type: object
    InstanceStateName:
      enum:
      - PENDING
      - RUNNING
      - SHUTTING_DOWN
      - TERMINATED
      - STOPPING
      - STOPPED
      title: InstanceStateName
      type: string
    InstanceSummary:
      description: The details about the instance.
      properties:
        instance:
          $ref: '#/components/schemas/InstanceSummary_instance'
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the instance summary was last updated.
          title: lastUpdatedAt
      title: InstanceSummary
      type: object
    IpAddressAssignment:
      enum:
      - DHCP
      - STATIC
      title: IpAddressAssignment
      type: string
    JobId:
      maxLength: 64
      minLength: 1
      type: string
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 1024
      minLength: 1
      pattern: "[a-zA-Z0-9+/=]*"
      type: string
    ListDeviceResourcesInputTypeString:
      maxLength: 50
      minLength: 1
      type: string
    ListDeviceResourcesInput:
      properties: {}
      title: ListDeviceResourcesInput
      type: object
    ResourceSummaryList:
      items:
        $ref: '#/components/schemas/ResourceSummary'
      type: array
    ListDevicesInput:
      properties: {}
      title: ListDevicesInput
      type: object
    ListExecutionsInput:
      properties: {}
      title: ListExecutionsInput
      type: object
    ListTagsForResourceInput:
      properties: {}
      title: ListTagsForResourceInput
      type: object
    ListTasksInput:
      properties: {}
      title: ListTasksInput
      type: object
    TaskSummaryList:
      items:
        $ref: '#/components/schemas/TaskSummary'
      type: array
    PhysicalConnectorType:
      enum:
      - RJ45
      - SFP_PLUS
      - QSFP
      - RJ45_2
      - WIFI
      title: PhysicalConnectorType
      type: string
    PhysicalNetworkInterface:
      description: The details about the physical network interface for the device.
      properties:
        defaultGateway:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The default gateway of the device.
          title: defaultGateway
        ipAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The IP address of the device.
          title: ipAddress
        ipAddressAssignment:
          allOf:
          - $ref: '#/components/schemas/IpAddressAssignment'
          - description: A value that describes whether the IP address is dynamic
              or persistent.
          title: ipAddressAssignment
        macAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The MAC address of the device.
          title: macAddress
        netmask:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The netmask used to divide the IP address into subnets.
          title: netmask
        physicalConnectorType:
          allOf:
          - $ref: '#/components/schemas/PhysicalConnectorType'
          - description: The physical connector type.
          title: physicalConnectorType
        physicalNetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The physical network interface ID.
          title: physicalNetworkInterfaceId
      title: PhysicalNetworkInterface
      type: object
    ResourceSummary:
      description: A summary of a resource available on the device.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the resource.
          title: arn
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the resource.
          title: id
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The resource type.
          title: resourceType
      required:
      - resourceType
      title: ResourceSummary
      type: object
    SecurityGroupIdentifier:
      description: Information about the device's security group.
      properties:
        groupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The security group ID.
          title: groupId
        groupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The security group name.
          title: groupName
      title: SecurityGroupIdentifier
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/String'
      type: array
    TagResourceInput:
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Optional metadata that you assign to a resource. You can\
              \ use tags to categorize a resource in different ways, such as by purpose,\
              \ owner, or environment."
      required:
      - tags
      title: TagResourceInput
      type: object
    TaskSummary:
      description: Information about the task assigned to one or many devices.
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/TaskState'
          - description: The state of the task assigned to one or many devices.
          title: state
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Optional metadata that you assign to a resource. You can\
              \ use tags to categorize a resource in different ways, such as by purpose,\
              \ owner, or environment."
          title: tags
        taskArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the task.
          title: taskArn
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          - description: The task ID.
          title: taskId
      required:
      - taskId
      title: TaskSummary
      type: object
    UntagResourceInput:
      properties: {}
      title: UntagResourceInput
      type: object
    CreateTask_request_command:
      description: The command given to the device to execute.
      properties:
        reboot:
          allOf:
          - $ref: '#/components/schemas/Reboot'
          - description: Reboots the device.
          title: reboot
        unlock:
          allOf:
          - $ref: '#/components/schemas/Unlock'
          - description: Unlocks the device.
          title: unlock
      title: CreateTask_request_command
      type: object
    CreateTask_request:
      properties:
        clientToken:
          description: A token ensuring that the action is called only once with the
            specified details.
          maxLength: 64
          minLength: 1
          pattern: "[!-~]+"
          title: clientToken
          type: string
        command:
          $ref: '#/components/schemas/CreateTask_request_command'
        description:
          description: A description of the task and its targets.
          maxLength: 128
          minLength: 1
          pattern: "[A-Za-z0-9 _.,!#]*"
          title: description
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: "Optional metadata that you assign to a resource. You can use\
            \ tags to categorize a resource in different ways, such as by purpose,\
            \ owner, or environment. "
          title: tags
          type: object
        targets:
          description: A list of managed device IDs.
          items:
            $ref: '#/components/schemas/String'
          maxItems: 10
          minItems: 1
          title: targets
          type: array
      required:
      - command
      - targets
      title: CreateTask_request
      type: object
    DescribeDeviceEc2Instances_request:
      properties:
        instanceIds:
          description: A list of instance IDs associated with the managed device.
          items:
            $ref: '#/components/schemas/String'
          title: instanceIds
          type: array
      required:
      - instanceIds
      title: DescribeDeviceEc2Instances_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: "Optional metadata that you assign to a resource. You can use\
            \ tags to categorize a resource in different ways, such as by purpose,\
            \ owner, or environment."
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    DescribeDeviceOutput_software:
      allOf:
      - $ref: '#/components/schemas/SoftwareInformation'
      - description: The software installed on the device.
      example:
        installState: ""
        installingVersion: ""
        installedVersion: ""
      title: DescribeDeviceOutput_software
    CreateTaskInput_command:
      allOf:
      - $ref: '#/components/schemas/Command'
      - description: The task to be performed. Only one task is executed on a device
          at a time.
      title: CreateTaskInput_command
    Instance_cpuOptions:
      allOf:
      - $ref: '#/components/schemas/CpuOptions'
      - description: The CPU options for the instance.
      title: Instance_cpuOptions
    InstanceBlockDeviceMapping_ebs:
      allOf:
      - $ref: '#/components/schemas/EbsInstanceBlockDevice'
      - description: 'The parameters used to automatically set up Amazon Elastic Block
          Store (Amazon EBS) volumes when the instance is launched. '
      title: InstanceBlockDeviceMapping_ebs
    InstanceSummary_instance:
      allOf:
      - $ref: '#/components/schemas/Instance'
      - description: A structure containing details about the instance.
      title: InstanceSummary_instance
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
