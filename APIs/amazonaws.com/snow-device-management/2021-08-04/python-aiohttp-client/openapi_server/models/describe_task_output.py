# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_state import TaskState
from openapi_server import util


class DescribeTaskOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completed_at: datetime=None, created_at: datetime=None, description: str=None, last_updated_at: datetime=None, state: TaskState=None, tags: Dict=None, targets: List=None, task_arn: str=None, task_id: str=None):
        """DescribeTaskOutput - a model defined in OpenAPI

        :param completed_at: The completed_at of this DescribeTaskOutput.
        :param created_at: The created_at of this DescribeTaskOutput.
        :param description: The description of this DescribeTaskOutput.
        :param last_updated_at: The last_updated_at of this DescribeTaskOutput.
        :param state: The state of this DescribeTaskOutput.
        :param tags: The tags of this DescribeTaskOutput.
        :param targets: The targets of this DescribeTaskOutput.
        :param task_arn: The task_arn of this DescribeTaskOutput.
        :param task_id: The task_id of this DescribeTaskOutput.
        """
        self.openapi_types = {
            'completed_at': datetime,
            'created_at': datetime,
            'description': str,
            'last_updated_at': datetime,
            'state': TaskState,
            'tags': Dict,
            'targets': List,
            'task_arn': str,
            'task_id': str
        }

        self.attribute_map = {
            'completed_at': 'completedAt',
            'created_at': 'createdAt',
            'description': 'description',
            'last_updated_at': 'lastUpdatedAt',
            'state': 'state',
            'tags': 'tags',
            'targets': 'targets',
            'task_arn': 'taskArn',
            'task_id': 'taskId'
        }

        self._completed_at = completed_at
        self._created_at = created_at
        self._description = description
        self._last_updated_at = last_updated_at
        self._state = state
        self._tags = tags
        self._targets = targets
        self._task_arn = task_arn
        self._task_id = task_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTaskOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTaskOutput of this DescribeTaskOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completed_at(self):
        """Gets the completed_at of this DescribeTaskOutput.


        :return: The completed_at of this DescribeTaskOutput.
        :rtype: datetime
        """
        return self._completed_at

    @completed_at.setter
    def completed_at(self, completed_at):
        """Sets the completed_at of this DescribeTaskOutput.


        :param completed_at: The completed_at of this DescribeTaskOutput.
        :type completed_at: datetime
        """

        self._completed_at = completed_at

    @property
    def created_at(self):
        """Gets the created_at of this DescribeTaskOutput.


        :return: The created_at of this DescribeTaskOutput.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this DescribeTaskOutput.


        :param created_at: The created_at of this DescribeTaskOutput.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this DescribeTaskOutput.


        :return: The description of this DescribeTaskOutput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeTaskOutput.


        :param description: The description of this DescribeTaskOutput.
        :type description: str
        """

        self._description = description

    @property
    def last_updated_at(self):
        """Gets the last_updated_at of this DescribeTaskOutput.


        :return: The last_updated_at of this DescribeTaskOutput.
        :rtype: datetime
        """
        return self._last_updated_at

    @last_updated_at.setter
    def last_updated_at(self, last_updated_at):
        """Sets the last_updated_at of this DescribeTaskOutput.


        :param last_updated_at: The last_updated_at of this DescribeTaskOutput.
        :type last_updated_at: datetime
        """

        self._last_updated_at = last_updated_at

    @property
    def state(self):
        """Gets the state of this DescribeTaskOutput.


        :return: The state of this DescribeTaskOutput.
        :rtype: TaskState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DescribeTaskOutput.


        :param state: The state of this DescribeTaskOutput.
        :type state: TaskState
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this DescribeTaskOutput.


        :return: The tags of this DescribeTaskOutput.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeTaskOutput.


        :param tags: The tags of this DescribeTaskOutput.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def targets(self):
        """Gets the targets of this DescribeTaskOutput.


        :return: The targets of this DescribeTaskOutput.
        :rtype: List
        """
        return self._targets

    @targets.setter
    def targets(self, targets):
        """Sets the targets of this DescribeTaskOutput.


        :param targets: The targets of this DescribeTaskOutput.
        :type targets: List
        """

        self._targets = targets

    @property
    def task_arn(self):
        """Gets the task_arn of this DescribeTaskOutput.


        :return: The task_arn of this DescribeTaskOutput.
        :rtype: str
        """
        return self._task_arn

    @task_arn.setter
    def task_arn(self, task_arn):
        """Sets the task_arn of this DescribeTaskOutput.


        :param task_arn: The task_arn of this DescribeTaskOutput.
        :type task_arn: str
        """

        self._task_arn = task_arn

    @property
    def task_id(self):
        """Gets the task_id of this DescribeTaskOutput.


        :return: The task_id of this DescribeTaskOutput.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this DescribeTaskOutput.


        :param task_id: The task_id of this DescribeTaskOutput.
        :type task_id: str
        """

        self._task_id = task_id
