# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ip_address_assignment import IpAddressAssignment
from openapi_server.models.physical_connector_type import PhysicalConnectorType
from openapi_server import util


class PhysicalNetworkInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_gateway: str=None, ip_address: str=None, ip_address_assignment: IpAddressAssignment=None, mac_address: str=None, netmask: str=None, physical_connector_type: PhysicalConnectorType=None, physical_network_interface_id: str=None):
        """PhysicalNetworkInterface - a model defined in OpenAPI

        :param default_gateway: The default_gateway of this PhysicalNetworkInterface.
        :param ip_address: The ip_address of this PhysicalNetworkInterface.
        :param ip_address_assignment: The ip_address_assignment of this PhysicalNetworkInterface.
        :param mac_address: The mac_address of this PhysicalNetworkInterface.
        :param netmask: The netmask of this PhysicalNetworkInterface.
        :param physical_connector_type: The physical_connector_type of this PhysicalNetworkInterface.
        :param physical_network_interface_id: The physical_network_interface_id of this PhysicalNetworkInterface.
        """
        self.openapi_types = {
            'default_gateway': str,
            'ip_address': str,
            'ip_address_assignment': IpAddressAssignment,
            'mac_address': str,
            'netmask': str,
            'physical_connector_type': PhysicalConnectorType,
            'physical_network_interface_id': str
        }

        self.attribute_map = {
            'default_gateway': 'defaultGateway',
            'ip_address': 'ipAddress',
            'ip_address_assignment': 'ipAddressAssignment',
            'mac_address': 'macAddress',
            'netmask': 'netmask',
            'physical_connector_type': 'physicalConnectorType',
            'physical_network_interface_id': 'physicalNetworkInterfaceId'
        }

        self._default_gateway = default_gateway
        self._ip_address = ip_address
        self._ip_address_assignment = ip_address_assignment
        self._mac_address = mac_address
        self._netmask = netmask
        self._physical_connector_type = physical_connector_type
        self._physical_network_interface_id = physical_network_interface_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhysicalNetworkInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhysicalNetworkInterface of this PhysicalNetworkInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_gateway(self):
        """Gets the default_gateway of this PhysicalNetworkInterface.


        :return: The default_gateway of this PhysicalNetworkInterface.
        :rtype: str
        """
        return self._default_gateway

    @default_gateway.setter
    def default_gateway(self, default_gateway):
        """Sets the default_gateway of this PhysicalNetworkInterface.


        :param default_gateway: The default_gateway of this PhysicalNetworkInterface.
        :type default_gateway: str
        """

        self._default_gateway = default_gateway

    @property
    def ip_address(self):
        """Gets the ip_address of this PhysicalNetworkInterface.


        :return: The ip_address of this PhysicalNetworkInterface.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this PhysicalNetworkInterface.


        :param ip_address: The ip_address of this PhysicalNetworkInterface.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def ip_address_assignment(self):
        """Gets the ip_address_assignment of this PhysicalNetworkInterface.


        :return: The ip_address_assignment of this PhysicalNetworkInterface.
        :rtype: IpAddressAssignment
        """
        return self._ip_address_assignment

    @ip_address_assignment.setter
    def ip_address_assignment(self, ip_address_assignment):
        """Sets the ip_address_assignment of this PhysicalNetworkInterface.


        :param ip_address_assignment: The ip_address_assignment of this PhysicalNetworkInterface.
        :type ip_address_assignment: IpAddressAssignment
        """

        self._ip_address_assignment = ip_address_assignment

    @property
    def mac_address(self):
        """Gets the mac_address of this PhysicalNetworkInterface.


        :return: The mac_address of this PhysicalNetworkInterface.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this PhysicalNetworkInterface.


        :param mac_address: The mac_address of this PhysicalNetworkInterface.
        :type mac_address: str
        """

        self._mac_address = mac_address

    @property
    def netmask(self):
        """Gets the netmask of this PhysicalNetworkInterface.


        :return: The netmask of this PhysicalNetworkInterface.
        :rtype: str
        """
        return self._netmask

    @netmask.setter
    def netmask(self, netmask):
        """Sets the netmask of this PhysicalNetworkInterface.


        :param netmask: The netmask of this PhysicalNetworkInterface.
        :type netmask: str
        """

        self._netmask = netmask

    @property
    def physical_connector_type(self):
        """Gets the physical_connector_type of this PhysicalNetworkInterface.


        :return: The physical_connector_type of this PhysicalNetworkInterface.
        :rtype: PhysicalConnectorType
        """
        return self._physical_connector_type

    @physical_connector_type.setter
    def physical_connector_type(self, physical_connector_type):
        """Sets the physical_connector_type of this PhysicalNetworkInterface.


        :param physical_connector_type: The physical_connector_type of this PhysicalNetworkInterface.
        :type physical_connector_type: PhysicalConnectorType
        """

        self._physical_connector_type = physical_connector_type

    @property
    def physical_network_interface_id(self):
        """Gets the physical_network_interface_id of this PhysicalNetworkInterface.


        :return: The physical_network_interface_id of this PhysicalNetworkInterface.
        :rtype: str
        """
        return self._physical_network_interface_id

    @physical_network_interface_id.setter
    def physical_network_interface_id(self, physical_network_interface_id):
        """Sets the physical_network_interface_id of this PhysicalNetworkInterface.


        :param physical_network_interface_id: The physical_network_interface_id of this PhysicalNetworkInterface.
        :type physical_network_interface_id: str
        """

        self._physical_network_interface_id = physical_network_interface_id
