# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, associated_with_job: str=None, managed_device_arn: str=None, managed_device_id: str=None, tags: Dict=None):
        """DeviceSummary - a model defined in OpenAPI

        :param associated_with_job: The associated_with_job of this DeviceSummary.
        :param managed_device_arn: The managed_device_arn of this DeviceSummary.
        :param managed_device_id: The managed_device_id of this DeviceSummary.
        :param tags: The tags of this DeviceSummary.
        """
        self.openapi_types = {
            'associated_with_job': str,
            'managed_device_arn': str,
            'managed_device_id': str,
            'tags': Dict
        }

        self.attribute_map = {
            'associated_with_job': 'associatedWithJob',
            'managed_device_arn': 'managedDeviceArn',
            'managed_device_id': 'managedDeviceId',
            'tags': 'tags'
        }

        self._associated_with_job = associated_with_job
        self._managed_device_arn = managed_device_arn
        self._managed_device_id = managed_device_id
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceSummary of this DeviceSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def associated_with_job(self):
        """Gets the associated_with_job of this DeviceSummary.


        :return: The associated_with_job of this DeviceSummary.
        :rtype: str
        """
        return self._associated_with_job

    @associated_with_job.setter
    def associated_with_job(self, associated_with_job):
        """Sets the associated_with_job of this DeviceSummary.


        :param associated_with_job: The associated_with_job of this DeviceSummary.
        :type associated_with_job: str
        """

        self._associated_with_job = associated_with_job

    @property
    def managed_device_arn(self):
        """Gets the managed_device_arn of this DeviceSummary.


        :return: The managed_device_arn of this DeviceSummary.
        :rtype: str
        """
        return self._managed_device_arn

    @managed_device_arn.setter
    def managed_device_arn(self, managed_device_arn):
        """Sets the managed_device_arn of this DeviceSummary.


        :param managed_device_arn: The managed_device_arn of this DeviceSummary.
        :type managed_device_arn: str
        """

        self._managed_device_arn = managed_device_arn

    @property
    def managed_device_id(self):
        """Gets the managed_device_id of this DeviceSummary.


        :return: The managed_device_id of this DeviceSummary.
        :rtype: str
        """
        return self._managed_device_id

    @managed_device_id.setter
    def managed_device_id(self, managed_device_id):
        """Sets the managed_device_id of this DeviceSummary.


        :param managed_device_id: The managed_device_id of this DeviceSummary.
        :type managed_device_id: str
        """

        self._managed_device_id = managed_device_id

    @property
    def tags(self):
        """Gets the tags of this DeviceSummary.


        :return: The tags of this DeviceSummary.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DeviceSummary.


        :param tags: The tags of this DeviceSummary.
        :type tags: Dict
        """

        self._tags = tags
