# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceCpuOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, core_count: int=None, threads_per_core: int=None):
        """InstanceCpuOptions - a model defined in OpenAPI

        :param core_count: The core_count of this InstanceCpuOptions.
        :param threads_per_core: The threads_per_core of this InstanceCpuOptions.
        """
        self.openapi_types = {
            'core_count': int,
            'threads_per_core': int
        }

        self.attribute_map = {
            'core_count': 'coreCount',
            'threads_per_core': 'threadsPerCore'
        }

        self._core_count = core_count
        self._threads_per_core = threads_per_core

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceCpuOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Instance_cpuOptions of this InstanceCpuOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def core_count(self):
        """Gets the core_count of this InstanceCpuOptions.


        :return: The core_count of this InstanceCpuOptions.
        :rtype: int
        """
        return self._core_count

    @core_count.setter
    def core_count(self, core_count):
        """Sets the core_count of this InstanceCpuOptions.


        :param core_count: The core_count of this InstanceCpuOptions.
        :type core_count: int
        """

        self._core_count = core_count

    @property
    def threads_per_core(self):
        """Gets the threads_per_core of this InstanceCpuOptions.


        :return: The threads_per_core of this InstanceCpuOptions.
        :rtype: int
        """
        return self._threads_per_core

    @threads_per_core.setter
    def threads_per_core(self, threads_per_core):
        """Sets the threads_per_core of this InstanceCpuOptions.


        :param threads_per_core: The threads_per_core of this InstanceCpuOptions.
        :type threads_per_core: int
        """

        self._threads_per_core = threads_per_core
