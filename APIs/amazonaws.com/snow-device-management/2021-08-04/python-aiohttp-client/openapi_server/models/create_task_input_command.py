# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateTaskInputCommand(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reboot: object=None, unlock: object=None):
        """CreateTaskInputCommand - a model defined in OpenAPI

        :param reboot: The reboot of this CreateTaskInputCommand.
        :param unlock: The unlock of this CreateTaskInputCommand.
        """
        self.openapi_types = {
            'reboot': object,
            'unlock': object
        }

        self.attribute_map = {
            'reboot': 'reboot',
            'unlock': 'unlock'
        }

        self._reboot = reboot
        self._unlock = unlock

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTaskInputCommand':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTaskInput_command of this CreateTaskInputCommand.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reboot(self):
        """Gets the reboot of this CreateTaskInputCommand.


        :return: The reboot of this CreateTaskInputCommand.
        :rtype: object
        """
        return self._reboot

    @reboot.setter
    def reboot(self, reboot):
        """Sets the reboot of this CreateTaskInputCommand.


        :param reboot: The reboot of this CreateTaskInputCommand.
        :type reboot: object
        """

        self._reboot = reboot

    @property
    def unlock(self):
        """Gets the unlock of this CreateTaskInputCommand.


        :return: The unlock of this CreateTaskInputCommand.
        :rtype: object
        """
        return self._unlock

    @unlock.setter
    def unlock(self, unlock):
        """Sets the unlock of this CreateTaskInputCommand.


        :param unlock: The unlock of this CreateTaskInputCommand.
        :type unlock: object
        """

        self._unlock = unlock
