# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_device_output_software import DescribeDeviceOutputSoftware
from openapi_server.models.unlock_state import UnlockState
from openapi_server import util


class DescribeDeviceOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, associated_with_job: str=None, device_capacities: List=None, device_state: UnlockState=None, device_type: str=None, last_reached_out_at: datetime=None, last_updated_at: datetime=None, managed_device_arn: str=None, managed_device_id: str=None, physical_network_interfaces: List=None, software: DescribeDeviceOutputSoftware=None, tags: Dict=None):
        """DescribeDeviceOutput - a model defined in OpenAPI

        :param associated_with_job: The associated_with_job of this DescribeDeviceOutput.
        :param device_capacities: The device_capacities of this DescribeDeviceOutput.
        :param device_state: The device_state of this DescribeDeviceOutput.
        :param device_type: The device_type of this DescribeDeviceOutput.
        :param last_reached_out_at: The last_reached_out_at of this DescribeDeviceOutput.
        :param last_updated_at: The last_updated_at of this DescribeDeviceOutput.
        :param managed_device_arn: The managed_device_arn of this DescribeDeviceOutput.
        :param managed_device_id: The managed_device_id of this DescribeDeviceOutput.
        :param physical_network_interfaces: The physical_network_interfaces of this DescribeDeviceOutput.
        :param software: The software of this DescribeDeviceOutput.
        :param tags: The tags of this DescribeDeviceOutput.
        """
        self.openapi_types = {
            'associated_with_job': str,
            'device_capacities': List,
            'device_state': UnlockState,
            'device_type': str,
            'last_reached_out_at': datetime,
            'last_updated_at': datetime,
            'managed_device_arn': str,
            'managed_device_id': str,
            'physical_network_interfaces': List,
            'software': DescribeDeviceOutputSoftware,
            'tags': Dict
        }

        self.attribute_map = {
            'associated_with_job': 'associatedWithJob',
            'device_capacities': 'deviceCapacities',
            'device_state': 'deviceState',
            'device_type': 'deviceType',
            'last_reached_out_at': 'lastReachedOutAt',
            'last_updated_at': 'lastUpdatedAt',
            'managed_device_arn': 'managedDeviceArn',
            'managed_device_id': 'managedDeviceId',
            'physical_network_interfaces': 'physicalNetworkInterfaces',
            'software': 'software',
            'tags': 'tags'
        }

        self._associated_with_job = associated_with_job
        self._device_capacities = device_capacities
        self._device_state = device_state
        self._device_type = device_type
        self._last_reached_out_at = last_reached_out_at
        self._last_updated_at = last_updated_at
        self._managed_device_arn = managed_device_arn
        self._managed_device_id = managed_device_id
        self._physical_network_interfaces = physical_network_interfaces
        self._software = software
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDeviceOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDeviceOutput of this DescribeDeviceOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def associated_with_job(self):
        """Gets the associated_with_job of this DescribeDeviceOutput.


        :return: The associated_with_job of this DescribeDeviceOutput.
        :rtype: str
        """
        return self._associated_with_job

    @associated_with_job.setter
    def associated_with_job(self, associated_with_job):
        """Sets the associated_with_job of this DescribeDeviceOutput.


        :param associated_with_job: The associated_with_job of this DescribeDeviceOutput.
        :type associated_with_job: str
        """

        self._associated_with_job = associated_with_job

    @property
    def device_capacities(self):
        """Gets the device_capacities of this DescribeDeviceOutput.


        :return: The device_capacities of this DescribeDeviceOutput.
        :rtype: List
        """
        return self._device_capacities

    @device_capacities.setter
    def device_capacities(self, device_capacities):
        """Sets the device_capacities of this DescribeDeviceOutput.


        :param device_capacities: The device_capacities of this DescribeDeviceOutput.
        :type device_capacities: List
        """

        self._device_capacities = device_capacities

    @property
    def device_state(self):
        """Gets the device_state of this DescribeDeviceOutput.


        :return: The device_state of this DescribeDeviceOutput.
        :rtype: UnlockState
        """
        return self._device_state

    @device_state.setter
    def device_state(self, device_state):
        """Sets the device_state of this DescribeDeviceOutput.


        :param device_state: The device_state of this DescribeDeviceOutput.
        :type device_state: UnlockState
        """

        self._device_state = device_state

    @property
    def device_type(self):
        """Gets the device_type of this DescribeDeviceOutput.


        :return: The device_type of this DescribeDeviceOutput.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this DescribeDeviceOutput.


        :param device_type: The device_type of this DescribeDeviceOutput.
        :type device_type: str
        """

        self._device_type = device_type

    @property
    def last_reached_out_at(self):
        """Gets the last_reached_out_at of this DescribeDeviceOutput.


        :return: The last_reached_out_at of this DescribeDeviceOutput.
        :rtype: datetime
        """
        return self._last_reached_out_at

    @last_reached_out_at.setter
    def last_reached_out_at(self, last_reached_out_at):
        """Sets the last_reached_out_at of this DescribeDeviceOutput.


        :param last_reached_out_at: The last_reached_out_at of this DescribeDeviceOutput.
        :type last_reached_out_at: datetime
        """

        self._last_reached_out_at = last_reached_out_at

    @property
    def last_updated_at(self):
        """Gets the last_updated_at of this DescribeDeviceOutput.


        :return: The last_updated_at of this DescribeDeviceOutput.
        :rtype: datetime
        """
        return self._last_updated_at

    @last_updated_at.setter
    def last_updated_at(self, last_updated_at):
        """Sets the last_updated_at of this DescribeDeviceOutput.


        :param last_updated_at: The last_updated_at of this DescribeDeviceOutput.
        :type last_updated_at: datetime
        """

        self._last_updated_at = last_updated_at

    @property
    def managed_device_arn(self):
        """Gets the managed_device_arn of this DescribeDeviceOutput.


        :return: The managed_device_arn of this DescribeDeviceOutput.
        :rtype: str
        """
        return self._managed_device_arn

    @managed_device_arn.setter
    def managed_device_arn(self, managed_device_arn):
        """Sets the managed_device_arn of this DescribeDeviceOutput.


        :param managed_device_arn: The managed_device_arn of this DescribeDeviceOutput.
        :type managed_device_arn: str
        """

        self._managed_device_arn = managed_device_arn

    @property
    def managed_device_id(self):
        """Gets the managed_device_id of this DescribeDeviceOutput.


        :return: The managed_device_id of this DescribeDeviceOutput.
        :rtype: str
        """
        return self._managed_device_id

    @managed_device_id.setter
    def managed_device_id(self, managed_device_id):
        """Sets the managed_device_id of this DescribeDeviceOutput.


        :param managed_device_id: The managed_device_id of this DescribeDeviceOutput.
        :type managed_device_id: str
        """

        self._managed_device_id = managed_device_id

    @property
    def physical_network_interfaces(self):
        """Gets the physical_network_interfaces of this DescribeDeviceOutput.


        :return: The physical_network_interfaces of this DescribeDeviceOutput.
        :rtype: List
        """
        return self._physical_network_interfaces

    @physical_network_interfaces.setter
    def physical_network_interfaces(self, physical_network_interfaces):
        """Sets the physical_network_interfaces of this DescribeDeviceOutput.


        :param physical_network_interfaces: The physical_network_interfaces of this DescribeDeviceOutput.
        :type physical_network_interfaces: List
        """

        self._physical_network_interfaces = physical_network_interfaces

    @property
    def software(self):
        """Gets the software of this DescribeDeviceOutput.


        :return: The software of this DescribeDeviceOutput.
        :rtype: DescribeDeviceOutputSoftware
        """
        return self._software

    @software.setter
    def software(self, software):
        """Sets the software of this DescribeDeviceOutput.


        :param software: The software of this DescribeDeviceOutput.
        :type software: DescribeDeviceOutputSoftware
        """

        self._software = software

    @property
    def tags(self):
        """Gets the tags of this DescribeDeviceOutput.


        :return: The tags of this DescribeDeviceOutput.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeDeviceOutput.


        :param tags: The tags of this DescribeDeviceOutput.
        :type tags: Dict
        """

        self._tags = tags
