/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBatchJobExecutionResponse.h
 *
 * 
 */

#ifndef OAIGetBatchJobExecutionResponse_H
#define OAIGetBatchJobExecutionResponse_H

#include <QJsonObject>

#include "OAIBatchJobExecutionStatus.h"
#include "OAIBatchJobType.h"
#include "OAIGetBatchJobExecutionResponse_batchJobIdentifier.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetBatchJobExecutionResponse_batchJobIdentifier;

class OAIGetBatchJobExecutionResponse : public OAIObject {
public:
    OAIGetBatchJobExecutionResponse();
    OAIGetBatchJobExecutionResponse(QString json);
    ~OAIGetBatchJobExecutionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    OAIGetBatchJobExecutionResponse_batchJobIdentifier getBatchJobIdentifier() const;
    void setBatchJobIdentifier(const OAIGetBatchJobExecutionResponse_batchJobIdentifier &batch_job_identifier);
    bool is_batch_job_identifier_Set() const;
    bool is_batch_job_identifier_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getExecutionId() const;
    void setExecutionId(const QString &execution_id);
    bool is_execution_id_Set() const;
    bool is_execution_id_Valid() const;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    QString getJobName() const;
    void setJobName(const QString &job_name);
    bool is_job_name_Set() const;
    bool is_job_name_Valid() const;

    OAIBatchJobType getJobType() const;
    void setJobType(const OAIBatchJobType &job_type);
    bool is_job_type_Set() const;
    bool is_job_type_Valid() const;

    QString getJobUser() const;
    void setJobUser(const QString &job_user);
    bool is_job_user_Set() const;
    bool is_job_user_Valid() const;

    QString getReturnCode() const;
    void setReturnCode(const QString &return_code);
    bool is_return_code_Set() const;
    bool is_return_code_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    OAIBatchJobExecutionStatus getStatus() const;
    void setStatus(const OAIBatchJobExecutionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusReason() const;
    void setStatusReason(const QString &status_reason);
    bool is_status_reason_Set() const;
    bool is_status_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    OAIGetBatchJobExecutionResponse_batchJobIdentifier m_batch_job_identifier;
    bool m_batch_job_identifier_isSet;
    bool m_batch_job_identifier_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_execution_id;
    bool m_execution_id_isSet;
    bool m_execution_id_isValid;

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    QString m_job_name;
    bool m_job_name_isSet;
    bool m_job_name_isValid;

    OAIBatchJobType m_job_type;
    bool m_job_type_isSet;
    bool m_job_type_isValid;

    QString m_job_user;
    bool m_job_user_isSet;
    bool m_job_user_isValid;

    QString m_return_code;
    bool m_return_code_isSet;
    bool m_return_code_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    OAIBatchJobExecutionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_reason;
    bool m_status_reason_isSet;
    bool m_status_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBatchJobExecutionResponse)

#endif // OAIGetBatchJobExecutionResponse_H
