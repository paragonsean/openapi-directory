/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStopApplicationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStopApplicationRequest::OAIStopApplicationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStopApplicationRequest::OAIStopApplicationRequest() {
    this->initializeModel();
}

OAIStopApplicationRequest::~OAIStopApplicationRequest() {}

void OAIStopApplicationRequest::initializeModel() {

    m_force_stop_isSet = false;
    m_force_stop_isValid = false;
}

void OAIStopApplicationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStopApplicationRequest::fromJsonObject(QJsonObject json) {

    m_force_stop_isValid = ::OpenAPI::fromJsonValue(m_force_stop, json[QString("forceStop")]);
    m_force_stop_isSet = !json[QString("forceStop")].isNull() && m_force_stop_isValid;
}

QString OAIStopApplicationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStopApplicationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_force_stop_isSet) {
        obj.insert(QString("forceStop"), ::OpenAPI::toJsonValue(m_force_stop));
    }
    return obj;
}

bool OAIStopApplicationRequest::getForceStop() const {
    return m_force_stop;
}
void OAIStopApplicationRequest::setForceStop(const bool &force_stop) {
    m_force_stop = force_stop;
    m_force_stop_isSet = true;
}

bool OAIStopApplicationRequest::is_force_stop_Set() const{
    return m_force_stop_isSet;
}

bool OAIStopApplicationRequest::is_force_stop_Valid() const{
    return m_force_stop_isValid;
}

bool OAIStopApplicationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_force_stop_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStopApplicationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
