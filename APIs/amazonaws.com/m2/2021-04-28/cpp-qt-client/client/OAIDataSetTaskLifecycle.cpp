/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSetTaskLifecycle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSetTaskLifecycle::OAIDataSetTaskLifecycle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSetTaskLifecycle::OAIDataSetTaskLifecycle() {
    this->initializeModel();
}

OAIDataSetTaskLifecycle::~OAIDataSetTaskLifecycle() {}

void OAIDataSetTaskLifecycle::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDataSetTaskLifecycle::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDataSetTaskLifecycle::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Creating", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSetTaskLifecycle::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Running", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSetTaskLifecycle::RUNNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSetTaskLifecycle::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDataSetTaskLifecycle::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDataSetTaskLifecycle::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDataSetTaskLifecycle::CREATING:
            val = "Creating";
            break;
        case eOAIDataSetTaskLifecycle::RUNNING:
            val = "Running";
            break;
        case eOAIDataSetTaskLifecycle::COMPLETED:
            val = "Completed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDataSetTaskLifecycle::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDataSetTaskLifecycle::eOAIDataSetTaskLifecycle OAIDataSetTaskLifecycle::getValue() const {
    return m_value;
}

void OAIDataSetTaskLifecycle::setValue(const OAIDataSetTaskLifecycle::eOAIDataSetTaskLifecycle& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDataSetTaskLifecycle::isSet() const {
    
    return m_value_isSet;
}

bool OAIDataSetTaskLifecycle::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
