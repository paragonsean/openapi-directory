/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListBatchJobDefinitionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListBatchJobDefinitionsResponse::OAIListBatchJobDefinitionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListBatchJobDefinitionsResponse::OAIListBatchJobDefinitionsResponse() {
    this->initializeModel();
}

OAIListBatchJobDefinitionsResponse::~OAIListBatchJobDefinitionsResponse() {}

void OAIListBatchJobDefinitionsResponse::initializeModel() {

    m_batch_job_definitions_isSet = false;
    m_batch_job_definitions_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListBatchJobDefinitionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListBatchJobDefinitionsResponse::fromJsonObject(QJsonObject json) {

    m_batch_job_definitions_isValid = ::OpenAPI::fromJsonValue(m_batch_job_definitions, json[QString("batchJobDefinitions")]);
    m_batch_job_definitions_isSet = !json[QString("batchJobDefinitions")].isNull() && m_batch_job_definitions_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListBatchJobDefinitionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListBatchJobDefinitionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_job_definitions.isSet()) {
        obj.insert(QString("batchJobDefinitions"), ::OpenAPI::toJsonValue(m_batch_job_definitions));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListBatchJobDefinitionsResponse::getBatchJobDefinitions() const {
    return m_batch_job_definitions;
}
void OAIListBatchJobDefinitionsResponse::setBatchJobDefinitions(const QList &batch_job_definitions) {
    m_batch_job_definitions = batch_job_definitions;
    m_batch_job_definitions_isSet = true;
}

bool OAIListBatchJobDefinitionsResponse::is_batch_job_definitions_Set() const{
    return m_batch_job_definitions_isSet;
}

bool OAIListBatchJobDefinitionsResponse::is_batch_job_definitions_Valid() const{
    return m_batch_job_definitions_isValid;
}

QString OAIListBatchJobDefinitionsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListBatchJobDefinitionsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListBatchJobDefinitionsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListBatchJobDefinitionsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListBatchJobDefinitionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_job_definitions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListBatchJobDefinitionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_batch_job_definitions_isValid && true;
}

} // namespace OpenAPI
