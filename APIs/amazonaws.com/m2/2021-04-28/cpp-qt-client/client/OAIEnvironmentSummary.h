/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnvironmentSummary.h
 *
 * Contains a subset of the possible runtime environment attributes. Used in the environment list.
 */

#ifndef OAIEnvironmentSummary_H
#define OAIEnvironmentSummary_H

#include <QJsonObject>

#include "OAIEngineType.h"
#include "OAIEnvironmentLifecycle.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEnvironmentSummary : public OAIObject {
public:
    OAIEnvironmentSummary();
    OAIEnvironmentSummary(QString json);
    ~OAIEnvironmentSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAIEngineType getEngineType() const;
    void setEngineType(const OAIEngineType &engine_type);
    bool is_engine_type_Set() const;
    bool is_engine_type_Valid() const;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    QString getEnvironmentArn() const;
    void setEnvironmentArn(const QString &environment_arn);
    bool is_environment_arn_Set() const;
    bool is_environment_arn_Valid() const;

    QString getEnvironmentId() const;
    void setEnvironmentId(const QString &environment_id);
    bool is_environment_id_Set() const;
    bool is_environment_id_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIEnvironmentLifecycle getStatus() const;
    void setStatus(const OAIEnvironmentLifecycle &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAIEngineType m_engine_type;
    bool m_engine_type_isSet;
    bool m_engine_type_isValid;

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    QString m_environment_arn;
    bool m_environment_arn_isSet;
    bool m_environment_arn_isValid;

    QString m_environment_id;
    bool m_environment_id_isSet;
    bool m_environment_id_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIEnvironmentLifecycle m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnvironmentSummary)

#endif // OAIEnvironmentSummary_H
