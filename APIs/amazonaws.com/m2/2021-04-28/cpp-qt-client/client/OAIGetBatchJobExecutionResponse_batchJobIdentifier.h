/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBatchJobExecutionResponse_batchJobIdentifier.h
 *
 * 
 */

#ifndef OAIGetBatchJobExecutionResponse_batchJobIdentifier_H
#define OAIGetBatchJobExecutionResponse_batchJobIdentifier_H

#include <QJsonObject>

#include "OAIStartBatchJob_request_batchJobIdentifier_fileBatchJobIdentifier.h"
#include "OAIStartBatchJob_request_batchJobIdentifier_scriptBatchJobIdentifier.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartBatchJob_request_batchJobIdentifier_fileBatchJobIdentifier;
class OAIStartBatchJob_request_batchJobIdentifier_scriptBatchJobIdentifier;

class OAIGetBatchJobExecutionResponse_batchJobIdentifier : public OAIObject {
public:
    OAIGetBatchJobExecutionResponse_batchJobIdentifier();
    OAIGetBatchJobExecutionResponse_batchJobIdentifier(QString json);
    ~OAIGetBatchJobExecutionResponse_batchJobIdentifier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStartBatchJob_request_batchJobIdentifier_fileBatchJobIdentifier getFileBatchJobIdentifier() const;
    void setFileBatchJobIdentifier(const OAIStartBatchJob_request_batchJobIdentifier_fileBatchJobIdentifier &file_batch_job_identifier);
    bool is_file_batch_job_identifier_Set() const;
    bool is_file_batch_job_identifier_Valid() const;

    OAIStartBatchJob_request_batchJobIdentifier_scriptBatchJobIdentifier getScriptBatchJobIdentifier() const;
    void setScriptBatchJobIdentifier(const OAIStartBatchJob_request_batchJobIdentifier_scriptBatchJobIdentifier &script_batch_job_identifier);
    bool is_script_batch_job_identifier_Set() const;
    bool is_script_batch_job_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStartBatchJob_request_batchJobIdentifier_fileBatchJobIdentifier m_file_batch_job_identifier;
    bool m_file_batch_job_identifier_isSet;
    bool m_file_batch_job_identifier_isValid;

    OAIStartBatchJob_request_batchJobIdentifier_scriptBatchJobIdentifier m_script_batch_job_identifier;
    bool m_script_batch_job_identifier_isSet;
    bool m_script_batch_job_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBatchJobExecutionResponse_batchJobIdentifier)

#endif // OAIGetBatchJobExecutionResponse_batchJobIdentifier_H
