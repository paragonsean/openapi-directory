/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListBatchJobExecutionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListBatchJobExecutionsResponse::OAIListBatchJobExecutionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListBatchJobExecutionsResponse::OAIListBatchJobExecutionsResponse() {
    this->initializeModel();
}

OAIListBatchJobExecutionsResponse::~OAIListBatchJobExecutionsResponse() {}

void OAIListBatchJobExecutionsResponse::initializeModel() {

    m_batch_job_executions_isSet = false;
    m_batch_job_executions_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListBatchJobExecutionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListBatchJobExecutionsResponse::fromJsonObject(QJsonObject json) {

    m_batch_job_executions_isValid = ::OpenAPI::fromJsonValue(m_batch_job_executions, json[QString("batchJobExecutions")]);
    m_batch_job_executions_isSet = !json[QString("batchJobExecutions")].isNull() && m_batch_job_executions_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListBatchJobExecutionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListBatchJobExecutionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_job_executions.isSet()) {
        obj.insert(QString("batchJobExecutions"), ::OpenAPI::toJsonValue(m_batch_job_executions));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListBatchJobExecutionsResponse::getBatchJobExecutions() const {
    return m_batch_job_executions;
}
void OAIListBatchJobExecutionsResponse::setBatchJobExecutions(const QList &batch_job_executions) {
    m_batch_job_executions = batch_job_executions;
    m_batch_job_executions_isSet = true;
}

bool OAIListBatchJobExecutionsResponse::is_batch_job_executions_Set() const{
    return m_batch_job_executions_isSet;
}

bool OAIListBatchJobExecutionsResponse::is_batch_job_executions_Valid() const{
    return m_batch_job_executions_isValid;
}

QString OAIListBatchJobExecutionsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListBatchJobExecutionsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListBatchJobExecutionsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListBatchJobExecutionsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListBatchJobExecutionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_job_executions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListBatchJobExecutionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_batch_job_executions_isValid && true;
}

} // namespace OpenAPI
