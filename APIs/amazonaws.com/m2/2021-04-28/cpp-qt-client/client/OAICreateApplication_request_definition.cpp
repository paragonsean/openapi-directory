/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateApplication_request_definition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateApplication_request_definition::OAICreateApplication_request_definition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateApplication_request_definition::OAICreateApplication_request_definition() {
    this->initializeModel();
}

OAICreateApplication_request_definition::~OAICreateApplication_request_definition() {}

void OAICreateApplication_request_definition::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;

    m_s3_location_isSet = false;
    m_s3_location_isValid = false;
}

void OAICreateApplication_request_definition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateApplication_request_definition::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_s3_location_isValid = ::OpenAPI::fromJsonValue(m_s3_location, json[QString("s3Location")]);
    m_s3_location_isSet = !json[QString("s3Location")].isNull() && m_s3_location_isValid;
}

QString OAICreateApplication_request_definition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateApplication_request_definition::asJsonObject() const {
    QJsonObject obj;
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_s3_location_isSet) {
        obj.insert(QString("s3Location"), ::OpenAPI::toJsonValue(m_s3_location));
    }
    return obj;
}

QString OAICreateApplication_request_definition::getContent() const {
    return m_content;
}
void OAICreateApplication_request_definition::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAICreateApplication_request_definition::is_content_Set() const{
    return m_content_isSet;
}

bool OAICreateApplication_request_definition::is_content_Valid() const{
    return m_content_isValid;
}

QString OAICreateApplication_request_definition::getS3Location() const {
    return m_s3_location;
}
void OAICreateApplication_request_definition::setS3Location(const QString &s3_location) {
    m_s3_location = s3_location;
    m_s3_location_isSet = true;
}

bool OAICreateApplication_request_definition::is_s3_location_Set() const{
    return m_s3_location_isSet;
}

bool OAICreateApplication_request_definition::is_s3_location_Valid() const{
    return m_s3_location_isValid;
}

bool OAICreateApplication_request_definition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateApplication_request_definition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
