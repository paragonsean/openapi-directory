/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetApplicationVersionResponse.h
 *
 * 
 */

#ifndef OAIGetApplicationVersionResponse_H
#define OAIGetApplicationVersionResponse_H

#include <QJsonObject>

#include "OAIApplicationVersionLifecycle.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetApplicationVersionResponse : public OAIObject {
public:
    OAIGetApplicationVersionResponse();
    OAIGetApplicationVersionResponse(QString json);
    ~OAIGetApplicationVersionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getApplicationVersion() const;
    void setApplicationVersion(const qint32 &application_version);
    bool is_application_version_Set() const;
    bool is_application_version_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getDefinitionContent() const;
    void setDefinitionContent(const QString &definition_content);
    bool is_definition_content_Set() const;
    bool is_definition_content_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIApplicationVersionLifecycle getStatus() const;
    void setStatus(const OAIApplicationVersionLifecycle &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusReason() const;
    void setStatusReason(const QString &status_reason);
    bool is_status_reason_Set() const;
    bool is_status_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_application_version;
    bool m_application_version_isSet;
    bool m_application_version_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_definition_content;
    bool m_definition_content_isSet;
    bool m_definition_content_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIApplicationVersionLifecycle m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_reason;
    bool m_status_reason_isSet;
    bool m_status_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetApplicationVersionResponse)

#endif // OAIGetApplicationVersionResponse_H
