/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartBatchJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartBatchJobResponse::OAIStartBatchJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartBatchJobResponse::OAIStartBatchJobResponse() {
    this->initializeModel();
}

OAIStartBatchJobResponse::~OAIStartBatchJobResponse() {}

void OAIStartBatchJobResponse::initializeModel() {

    m_execution_id_isSet = false;
    m_execution_id_isValid = false;
}

void OAIStartBatchJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartBatchJobResponse::fromJsonObject(QJsonObject json) {

    m_execution_id_isValid = ::OpenAPI::fromJsonValue(m_execution_id, json[QString("executionId")]);
    m_execution_id_isSet = !json[QString("executionId")].isNull() && m_execution_id_isValid;
}

QString OAIStartBatchJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartBatchJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_execution_id_isSet) {
        obj.insert(QString("executionId"), ::OpenAPI::toJsonValue(m_execution_id));
    }
    return obj;
}

QString OAIStartBatchJobResponse::getExecutionId() const {
    return m_execution_id;
}
void OAIStartBatchJobResponse::setExecutionId(const QString &execution_id) {
    m_execution_id = execution_id;
    m_execution_id_isSet = true;
}

bool OAIStartBatchJobResponse::is_execution_id_Set() const{
    return m_execution_id_isSet;
}

bool OAIStartBatchJobResponse::is_execution_id_Valid() const{
    return m_execution_id_isValid;
}

bool OAIStartBatchJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_execution_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartBatchJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_execution_id_isValid && true;
}

} // namespace OpenAPI
