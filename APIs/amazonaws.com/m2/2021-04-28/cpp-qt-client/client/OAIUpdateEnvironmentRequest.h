/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateEnvironmentRequest.h
 *
 * 
 */

#ifndef OAIUpdateEnvironmentRequest_H
#define OAIUpdateEnvironmentRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateEnvironmentRequest : public OAIObject {
public:
    OAIUpdateEnvironmentRequest();
    OAIUpdateEnvironmentRequest(QString json);
    ~OAIUpdateEnvironmentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getApplyDuringMaintenanceWindow() const;
    void setApplyDuringMaintenanceWindow(const bool &apply_during_maintenance_window);
    bool is_apply_during_maintenance_window_Set() const;
    bool is_apply_during_maintenance_window_Valid() const;

    qint32 getDesiredCapacity() const;
    void setDesiredCapacity(const qint32 &desired_capacity);
    bool is_desired_capacity_Set() const;
    bool is_desired_capacity_Valid() const;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getPreferredMaintenanceWindow() const;
    void setPreferredMaintenanceWindow(const QString &preferred_maintenance_window);
    bool is_preferred_maintenance_window_Set() const;
    bool is_preferred_maintenance_window_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_apply_during_maintenance_window;
    bool m_apply_during_maintenance_window_isSet;
    bool m_apply_during_maintenance_window_isValid;

    qint32 m_desired_capacity;
    bool m_desired_capacity_isSet;
    bool m_desired_capacity_isValid;

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_preferred_maintenance_window;
    bool m_preferred_maintenance_window_isSet;
    bool m_preferred_maintenance_window_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateEnvironmentRequest)

#endif // OAIUpdateEnvironmentRequest_H
