/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetEnvironmentResponse_pendingMaintenance.h
 *
 * 
 */

#ifndef OAIGetEnvironmentResponse_pendingMaintenance_H
#define OAIGetEnvironmentResponse_pendingMaintenance_H

#include <QJsonObject>

#include "OAIPendingMaintenance_schedule.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPendingMaintenance_schedule;

class OAIGetEnvironmentResponse_pendingMaintenance : public OAIObject {
public:
    OAIGetEnvironmentResponse_pendingMaintenance();
    OAIGetEnvironmentResponse_pendingMaintenance(QString json);
    ~OAIGetEnvironmentResponse_pendingMaintenance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    OAIPendingMaintenance_schedule getSchedule() const;
    void setSchedule(const OAIPendingMaintenance_schedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    OAIPendingMaintenance_schedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetEnvironmentResponse_pendingMaintenance)

#endif // OAIGetEnvironmentResponse_pendingMaintenance_H
