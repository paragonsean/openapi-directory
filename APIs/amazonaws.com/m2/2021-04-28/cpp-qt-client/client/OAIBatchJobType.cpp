/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchJobType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchJobType::OAIBatchJobType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchJobType::OAIBatchJobType() {
    this->initializeModel();
}

OAIBatchJobType::~OAIBatchJobType() {}

void OAIBatchJobType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIBatchJobType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIBatchJobType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("VSE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBatchJobType::VSE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JES2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBatchJobType::JES2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JES3", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBatchJobType::JES3;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIBatchJobType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIBatchJobType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIBatchJobType::VSE:
            val = "VSE";
            break;
        case eOAIBatchJobType::JES2:
            val = "JES2";
            break;
        case eOAIBatchJobType::JES3:
            val = "JES3";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIBatchJobType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIBatchJobType::eOAIBatchJobType OAIBatchJobType::getValue() const {
    return m_value;
}

void OAIBatchJobType::setValue(const OAIBatchJobType::eOAIBatchJobType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIBatchJobType::isSet() const {
    
    return m_value_isSet;
}

bool OAIBatchJobType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
