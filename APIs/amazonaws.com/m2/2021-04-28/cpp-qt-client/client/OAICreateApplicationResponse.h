/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateApplicationResponse.h
 *
 * 
 */

#ifndef OAICreateApplicationResponse_H
#define OAICreateApplicationResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateApplicationResponse : public OAIObject {
public:
    OAICreateApplicationResponse();
    OAICreateApplicationResponse(QString json);
    ~OAICreateApplicationResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationArn() const;
    void setApplicationArn(const QString &application_arn);
    bool is_application_arn_Set() const;
    bool is_application_arn_Valid() const;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    qint32 getApplicationVersion() const;
    void setApplicationVersion(const qint32 &application_version);
    bool is_application_version_Set() const;
    bool is_application_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_arn;
    bool m_application_arn_isSet;
    bool m_application_arn_isValid;

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    qint32 m_application_version;
    bool m_application_version_isSet;
    bool m_application_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateApplicationResponse)

#endif // OAICreateApplicationResponse_H
