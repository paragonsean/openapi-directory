/**
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScriptBatchJobDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScriptBatchJobDefinition::OAIScriptBatchJobDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScriptBatchJobDefinition::OAIScriptBatchJobDefinition() {
    this->initializeModel();
}

OAIScriptBatchJobDefinition::~OAIScriptBatchJobDefinition() {}

void OAIScriptBatchJobDefinition::initializeModel() {

    m_script_name_isSet = false;
    m_script_name_isValid = false;
}

void OAIScriptBatchJobDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScriptBatchJobDefinition::fromJsonObject(QJsonObject json) {

    m_script_name_isValid = ::OpenAPI::fromJsonValue(m_script_name, json[QString("scriptName")]);
    m_script_name_isSet = !json[QString("scriptName")].isNull() && m_script_name_isValid;
}

QString OAIScriptBatchJobDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScriptBatchJobDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_script_name_isSet) {
        obj.insert(QString("scriptName"), ::OpenAPI::toJsonValue(m_script_name));
    }
    return obj;
}

QString OAIScriptBatchJobDefinition::getScriptName() const {
    return m_script_name;
}
void OAIScriptBatchJobDefinition::setScriptName(const QString &script_name) {
    m_script_name = script_name;
    m_script_name_isSet = true;
}

bool OAIScriptBatchJobDefinition::is_script_name_Set() const{
    return m_script_name_isSet;
}

bool OAIScriptBatchJobDefinition::is_script_name_Valid() const{
    return m_script_name_isValid;
}

bool OAIScriptBatchJobDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_script_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScriptBatchJobDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_script_name_isValid && true;
}

} // namespace OpenAPI
