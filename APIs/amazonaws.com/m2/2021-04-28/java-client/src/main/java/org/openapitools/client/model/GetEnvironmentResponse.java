/*
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.EngineType;
import org.openapitools.client.model.EnvironmentLifecycle;
import org.openapitools.client.model.GetEnvironmentResponseHighAvailabilityConfig;
import org.openapitools.client.model.GetEnvironmentResponsePendingMaintenance;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetEnvironmentResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:48.998910-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetEnvironmentResponse {
  public static final String SERIALIZED_NAME_ACTUAL_CAPACITY = "actualCapacity";
  @SerializedName(SERIALIZED_NAME_ACTUAL_CAPACITY)
  private Integer actualCapacity;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENGINE_TYPE = "engineType";
  @SerializedName(SERIALIZED_NAME_ENGINE_TYPE)
  private EngineType engineType;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "engineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ARN = "environmentArn";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ARN)
  private String environmentArn;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environmentId";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_HIGH_AVAILABILITY_CONFIG = "highAvailabilityConfig";
  @SerializedName(SERIALIZED_NAME_HIGH_AVAILABILITY_CONFIG)
  private GetEnvironmentResponseHighAvailabilityConfig highAvailabilityConfig;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "instanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private String instanceType;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "kmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_LOAD_BALANCER_ARN = "loadBalancerArn";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_ARN)
  private String loadBalancerArn;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PENDING_MAINTENANCE = "pendingMaintenance";
  @SerializedName(SERIALIZED_NAME_PENDING_MAINTENANCE)
  private GetEnvironmentResponsePendingMaintenance pendingMaintenance;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "preferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_PUBLICLY_ACCESSIBLE = "publiclyAccessible";
  @SerializedName(SERIALIZED_NAME_PUBLICLY_ACCESSIBLE)
  private Boolean publiclyAccessible;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "securityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EnvironmentLifecycle status;

  public static final String SERIALIZED_NAME_STATUS_REASON = "statusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  public static final String SERIALIZED_NAME_STORAGE_CONFIGURATIONS = "storageConfigurations";
  @SerializedName(SERIALIZED_NAME_STORAGE_CONFIGURATIONS)
  private List storageConfigurations;

  public static final String SERIALIZED_NAME_SUBNET_IDS = "subnetIds";
  @SerializedName(SERIALIZED_NAME_SUBNET_IDS)
  private List subnetIds;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_VPC_ID = "vpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public GetEnvironmentResponse() {
  }

  public GetEnvironmentResponse actualCapacity(Integer actualCapacity) {
    this.actualCapacity = actualCapacity;
    return this;
  }

  /**
   * Get actualCapacity
   * @return actualCapacity
   */
  @javax.annotation.Nullable
  public Integer getActualCapacity() {
    return actualCapacity;
  }

  public void setActualCapacity(Integer actualCapacity) {
    this.actualCapacity = actualCapacity;
  }


  public GetEnvironmentResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public GetEnvironmentResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetEnvironmentResponse engineType(EngineType engineType) {
    this.engineType = engineType;
    return this;
  }

  /**
   * Get engineType
   * @return engineType
   */
  @javax.annotation.Nonnull
  public EngineType getEngineType() {
    return engineType;
  }

  public void setEngineType(EngineType engineType) {
    this.engineType = engineType;
  }


  public GetEnvironmentResponse engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nonnull
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public GetEnvironmentResponse environmentArn(String environmentArn) {
    this.environmentArn = environmentArn;
    return this;
  }

  /**
   * Get environmentArn
   * @return environmentArn
   */
  @javax.annotation.Nonnull
  public String getEnvironmentArn() {
    return environmentArn;
  }

  public void setEnvironmentArn(String environmentArn) {
    this.environmentArn = environmentArn;
  }


  public GetEnvironmentResponse environmentId(String environmentId) {
    this.environmentId = environmentId;
    return this;
  }

  /**
   * Get environmentId
   * @return environmentId
   */
  @javax.annotation.Nonnull
  public String getEnvironmentId() {
    return environmentId;
  }

  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public GetEnvironmentResponse highAvailabilityConfig(GetEnvironmentResponseHighAvailabilityConfig highAvailabilityConfig) {
    this.highAvailabilityConfig = highAvailabilityConfig;
    return this;
  }

  /**
   * Get highAvailabilityConfig
   * @return highAvailabilityConfig
   */
  @javax.annotation.Nullable
  public GetEnvironmentResponseHighAvailabilityConfig getHighAvailabilityConfig() {
    return highAvailabilityConfig;
  }

  public void setHighAvailabilityConfig(GetEnvironmentResponseHighAvailabilityConfig highAvailabilityConfig) {
    this.highAvailabilityConfig = highAvailabilityConfig;
  }


  public GetEnvironmentResponse instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nonnull
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }


  public GetEnvironmentResponse kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public GetEnvironmentResponse loadBalancerArn(String loadBalancerArn) {
    this.loadBalancerArn = loadBalancerArn;
    return this;
  }

  /**
   * Get loadBalancerArn
   * @return loadBalancerArn
   */
  @javax.annotation.Nullable
  public String getLoadBalancerArn() {
    return loadBalancerArn;
  }

  public void setLoadBalancerArn(String loadBalancerArn) {
    this.loadBalancerArn = loadBalancerArn;
  }


  public GetEnvironmentResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetEnvironmentResponse pendingMaintenance(GetEnvironmentResponsePendingMaintenance pendingMaintenance) {
    this.pendingMaintenance = pendingMaintenance;
    return this;
  }

  /**
   * Get pendingMaintenance
   * @return pendingMaintenance
   */
  @javax.annotation.Nullable
  public GetEnvironmentResponsePendingMaintenance getPendingMaintenance() {
    return pendingMaintenance;
  }

  public void setPendingMaintenance(GetEnvironmentResponsePendingMaintenance pendingMaintenance) {
    this.pendingMaintenance = pendingMaintenance;
  }


  public GetEnvironmentResponse preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public GetEnvironmentResponse publiclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
    return this;
  }

  /**
   * Get publiclyAccessible
   * @return publiclyAccessible
   */
  @javax.annotation.Nullable
  public Boolean getPubliclyAccessible() {
    return publiclyAccessible;
  }

  public void setPubliclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
  }


  public GetEnvironmentResponse securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nonnull
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public GetEnvironmentResponse status(EnvironmentLifecycle status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public EnvironmentLifecycle getStatus() {
    return status;
  }

  public void setStatus(EnvironmentLifecycle status) {
    this.status = status;
  }


  public GetEnvironmentResponse statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Get statusReason
   * @return statusReason
   */
  @javax.annotation.Nullable
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public GetEnvironmentResponse storageConfigurations(List storageConfigurations) {
    this.storageConfigurations = storageConfigurations;
    return this;
  }

  /**
   * Get storageConfigurations
   * @return storageConfigurations
   */
  @javax.annotation.Nullable
  public List getStorageConfigurations() {
    return storageConfigurations;
  }

  public void setStorageConfigurations(List storageConfigurations) {
    this.storageConfigurations = storageConfigurations;
  }


  public GetEnvironmentResponse subnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  /**
   * Get subnetIds
   * @return subnetIds
   */
  @javax.annotation.Nonnull
  public List getSubnetIds() {
    return subnetIds;
  }

  public void setSubnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
  }


  public GetEnvironmentResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public GetEnvironmentResponse vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nonnull
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetEnvironmentResponse getEnvironmentResponse = (GetEnvironmentResponse) o;
    return Objects.equals(this.actualCapacity, getEnvironmentResponse.actualCapacity) &&
        Objects.equals(this.creationTime, getEnvironmentResponse.creationTime) &&
        Objects.equals(this.description, getEnvironmentResponse.description) &&
        Objects.equals(this.engineType, getEnvironmentResponse.engineType) &&
        Objects.equals(this.engineVersion, getEnvironmentResponse.engineVersion) &&
        Objects.equals(this.environmentArn, getEnvironmentResponse.environmentArn) &&
        Objects.equals(this.environmentId, getEnvironmentResponse.environmentId) &&
        Objects.equals(this.highAvailabilityConfig, getEnvironmentResponse.highAvailabilityConfig) &&
        Objects.equals(this.instanceType, getEnvironmentResponse.instanceType) &&
        Objects.equals(this.kmsKeyId, getEnvironmentResponse.kmsKeyId) &&
        Objects.equals(this.loadBalancerArn, getEnvironmentResponse.loadBalancerArn) &&
        Objects.equals(this.name, getEnvironmentResponse.name) &&
        Objects.equals(this.pendingMaintenance, getEnvironmentResponse.pendingMaintenance) &&
        Objects.equals(this.preferredMaintenanceWindow, getEnvironmentResponse.preferredMaintenanceWindow) &&
        Objects.equals(this.publiclyAccessible, getEnvironmentResponse.publiclyAccessible) &&
        Objects.equals(this.securityGroupIds, getEnvironmentResponse.securityGroupIds) &&
        Objects.equals(this.status, getEnvironmentResponse.status) &&
        Objects.equals(this.statusReason, getEnvironmentResponse.statusReason) &&
        Objects.equals(this.storageConfigurations, getEnvironmentResponse.storageConfigurations) &&
        Objects.equals(this.subnetIds, getEnvironmentResponse.subnetIds) &&
        Objects.equals(this.tags, getEnvironmentResponse.tags) &&
        Objects.equals(this.vpcId, getEnvironmentResponse.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualCapacity, creationTime, description, engineType, engineVersion, environmentArn, environmentId, highAvailabilityConfig, instanceType, kmsKeyId, loadBalancerArn, name, pendingMaintenance, preferredMaintenanceWindow, publiclyAccessible, securityGroupIds, status, statusReason, storageConfigurations, subnetIds, tags, vpcId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetEnvironmentResponse {\n");
    sb.append("    actualCapacity: ").append(toIndentedString(actualCapacity)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    engineType: ").append(toIndentedString(engineType)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    environmentArn: ").append(toIndentedString(environmentArn)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    highAvailabilityConfig: ").append(toIndentedString(highAvailabilityConfig)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    loadBalancerArn: ").append(toIndentedString(loadBalancerArn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pendingMaintenance: ").append(toIndentedString(pendingMaintenance)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    publiclyAccessible: ").append(toIndentedString(publiclyAccessible)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    storageConfigurations: ").append(toIndentedString(storageConfigurations)).append("\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actualCapacity");
    openapiFields.add("creationTime");
    openapiFields.add("description");
    openapiFields.add("engineType");
    openapiFields.add("engineVersion");
    openapiFields.add("environmentArn");
    openapiFields.add("environmentId");
    openapiFields.add("highAvailabilityConfig");
    openapiFields.add("instanceType");
    openapiFields.add("kmsKeyId");
    openapiFields.add("loadBalancerArn");
    openapiFields.add("name");
    openapiFields.add("pendingMaintenance");
    openapiFields.add("preferredMaintenanceWindow");
    openapiFields.add("publiclyAccessible");
    openapiFields.add("securityGroupIds");
    openapiFields.add("status");
    openapiFields.add("statusReason");
    openapiFields.add("storageConfigurations");
    openapiFields.add("subnetIds");
    openapiFields.add("tags");
    openapiFields.add("vpcId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("creationTime");
    openapiRequiredFields.add("engineType");
    openapiRequiredFields.add("engineVersion");
    openapiRequiredFields.add("environmentArn");
    openapiRequiredFields.add("environmentId");
    openapiRequiredFields.add("instanceType");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("securityGroupIds");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("subnetIds");
    openapiRequiredFields.add("vpcId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetEnvironmentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetEnvironmentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetEnvironmentResponse is not found in the empty JSON string", GetEnvironmentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetEnvironmentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetEnvironmentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetEnvironmentResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `actualCapacity`
      if (jsonObj.get("actualCapacity") != null && !jsonObj.get("actualCapacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("actualCapacity"));
      }
      // validate the required field `creationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the required field `engineType`
      EngineType.validateJsonElement(jsonObj.get("engineType"));
      // validate the required field `engineVersion`
      String.validateJsonElement(jsonObj.get("engineVersion"));
      // validate the required field `environmentArn`
      String.validateJsonElement(jsonObj.get("environmentArn"));
      // validate the required field `environmentId`
      String.validateJsonElement(jsonObj.get("environmentId"));
      // validate the optional field `highAvailabilityConfig`
      if (jsonObj.get("highAvailabilityConfig") != null && !jsonObj.get("highAvailabilityConfig").isJsonNull()) {
        GetEnvironmentResponseHighAvailabilityConfig.validateJsonElement(jsonObj.get("highAvailabilityConfig"));
      }
      // validate the required field `instanceType`
      String.validateJsonElement(jsonObj.get("instanceType"));
      // validate the optional field `kmsKeyId`
      if (jsonObj.get("kmsKeyId") != null && !jsonObj.get("kmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("kmsKeyId"));
      }
      // validate the optional field `loadBalancerArn`
      if (jsonObj.get("loadBalancerArn") != null && !jsonObj.get("loadBalancerArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("loadBalancerArn"));
      }
      // validate the required field `name`
      String.validateJsonElement(jsonObj.get("name"));
      // validate the optional field `pendingMaintenance`
      if (jsonObj.get("pendingMaintenance") != null && !jsonObj.get("pendingMaintenance").isJsonNull()) {
        GetEnvironmentResponsePendingMaintenance.validateJsonElement(jsonObj.get("pendingMaintenance"));
      }
      // validate the optional field `preferredMaintenanceWindow`
      if (jsonObj.get("preferredMaintenanceWindow") != null && !jsonObj.get("preferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("preferredMaintenanceWindow"));
      }
      // validate the optional field `publiclyAccessible`
      if (jsonObj.get("publiclyAccessible") != null && !jsonObj.get("publiclyAccessible").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("publiclyAccessible"));
      }
      // validate the required field `securityGroupIds`
      List.validateJsonElement(jsonObj.get("securityGroupIds"));
      // validate the required field `status`
      EnvironmentLifecycle.validateJsonElement(jsonObj.get("status"));
      // validate the optional field `statusReason`
      if (jsonObj.get("statusReason") != null && !jsonObj.get("statusReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusReason"));
      }
      // validate the optional field `storageConfigurations`
      if (jsonObj.get("storageConfigurations") != null && !jsonObj.get("storageConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("storageConfigurations"));
      }
      // validate the required field `subnetIds`
      List.validateJsonElement(jsonObj.get("subnetIds"));
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the required field `vpcId`
      String.validateJsonElement(jsonObj.get("vpcId"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetEnvironmentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetEnvironmentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetEnvironmentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetEnvironmentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetEnvironmentResponse>() {
           @Override
           public void write(JsonWriter out, GetEnvironmentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetEnvironmentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetEnvironmentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetEnvironmentResponse
   * @throws IOException if the JSON string is invalid with respect to GetEnvironmentResponse
   */
  public static GetEnvironmentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetEnvironmentResponse.class);
  }

  /**
   * Convert an instance of GetEnvironmentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

