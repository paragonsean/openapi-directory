/*
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The required attributes for a generation data group data set. A generation data set is one of a collection of successive, historically related, catalogued data sets that together are known as a generation data group (GDG). Use this structure when you want to import a GDG. For more information on GDG, see &lt;a href&#x3D;\&quot;https://www.ibm.com/docs/en/zos/2.3.0?topic&#x3D;guide-generation-data-sets\&quot;&gt;Generation data sets&lt;/a&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:48.998910-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GdgDetailAttributes {
  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_ROLL_DISPOSITION = "rollDisposition";
  @SerializedName(SERIALIZED_NAME_ROLL_DISPOSITION)
  private String rollDisposition;

  public GdgDetailAttributes() {
  }

  public GdgDetailAttributes limit(Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Get limit
   * @return limit
   */
  @javax.annotation.Nullable
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public GdgDetailAttributes rollDisposition(String rollDisposition) {
    this.rollDisposition = rollDisposition;
    return this;
  }

  /**
   * Get rollDisposition
   * @return rollDisposition
   */
  @javax.annotation.Nullable
  public String getRollDisposition() {
    return rollDisposition;
  }

  public void setRollDisposition(String rollDisposition) {
    this.rollDisposition = rollDisposition;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GdgDetailAttributes gdgDetailAttributes = (GdgDetailAttributes) o;
    return Objects.equals(this.limit, gdgDetailAttributes.limit) &&
        Objects.equals(this.rollDisposition, gdgDetailAttributes.rollDisposition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, rollDisposition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GdgDetailAttributes {\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    rollDisposition: ").append(toIndentedString(rollDisposition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("limit");
    openapiFields.add("rollDisposition");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GdgDetailAttributes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GdgDetailAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GdgDetailAttributes is not found in the empty JSON string", GdgDetailAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GdgDetailAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GdgDetailAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `limit`
      if (jsonObj.get("limit") != null && !jsonObj.get("limit").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("limit"));
      }
      // validate the optional field `rollDisposition`
      if (jsonObj.get("rollDisposition") != null && !jsonObj.get("rollDisposition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("rollDisposition"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GdgDetailAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GdgDetailAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GdgDetailAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GdgDetailAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<GdgDetailAttributes>() {
           @Override
           public void write(JsonWriter out, GdgDetailAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GdgDetailAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GdgDetailAttributes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GdgDetailAttributes
   * @throws IOException if the JSON string is invalid with respect to GdgDetailAttributes
   */
  public static GdgDetailAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GdgDetailAttributes.class);
  }

  /**
   * Convert an instance of GdgDetailAttributes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

