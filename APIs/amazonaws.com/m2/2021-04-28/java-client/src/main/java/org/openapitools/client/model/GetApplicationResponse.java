/*
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ApplicationLifecycle;
import org.openapitools.client.model.EngineType;
import org.openapitools.client.model.GetApplicationResponseDeployedVersion;
import org.openapitools.client.model.GetApplicationResponseLatestVersion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetApplicationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:48.998910-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetApplicationResponse {
  public static final String SERIALIZED_NAME_APPLICATION_ARN = "applicationArn";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ARN)
  private String applicationArn;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_DEPLOYED_VERSION = "deployedVersion";
  @SerializedName(SERIALIZED_NAME_DEPLOYED_VERSION)
  private GetApplicationResponseDeployedVersion deployedVersion;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENGINE_TYPE = "engineType";
  @SerializedName(SERIALIZED_NAME_ENGINE_TYPE)
  private EngineType engineType;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environmentId";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "kmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_LAST_START_TIME = "lastStartTime";
  @SerializedName(SERIALIZED_NAME_LAST_START_TIME)
  private OffsetDateTime lastStartTime;

  public static final String SERIALIZED_NAME_LATEST_VERSION = "latestVersion";
  @SerializedName(SERIALIZED_NAME_LATEST_VERSION)
  private GetApplicationResponseLatestVersion latestVersion;

  public static final String SERIALIZED_NAME_LISTENER_ARNS = "listenerArns";
  @SerializedName(SERIALIZED_NAME_LISTENER_ARNS)
  private List listenerArns;

  public static final String SERIALIZED_NAME_LISTENER_PORTS = "listenerPorts";
  @SerializedName(SERIALIZED_NAME_LISTENER_PORTS)
  private List listenerPorts;

  public static final String SERIALIZED_NAME_LOAD_BALANCER_DNS_NAME = "loadBalancerDnsName";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_DNS_NAME)
  private String loadBalancerDnsName;

  public static final String SERIALIZED_NAME_LOG_GROUPS = "logGroups";
  @SerializedName(SERIALIZED_NAME_LOG_GROUPS)
  private List logGroups;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ApplicationLifecycle status;

  public static final String SERIALIZED_NAME_STATUS_REASON = "statusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_TARGET_GROUP_ARNS = "targetGroupArns";
  @SerializedName(SERIALIZED_NAME_TARGET_GROUP_ARNS)
  private List targetGroupArns;

  public GetApplicationResponse() {
  }

  public GetApplicationResponse applicationArn(String applicationArn) {
    this.applicationArn = applicationArn;
    return this;
  }

  /**
   * Get applicationArn
   * @return applicationArn
   */
  @javax.annotation.Nonnull
  public String getApplicationArn() {
    return applicationArn;
  }

  public void setApplicationArn(String applicationArn) {
    this.applicationArn = applicationArn;
  }


  public GetApplicationResponse applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * @return applicationId
   */
  @javax.annotation.Nonnull
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public GetApplicationResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public GetApplicationResponse deployedVersion(GetApplicationResponseDeployedVersion deployedVersion) {
    this.deployedVersion = deployedVersion;
    return this;
  }

  /**
   * Get deployedVersion
   * @return deployedVersion
   */
  @javax.annotation.Nullable
  public GetApplicationResponseDeployedVersion getDeployedVersion() {
    return deployedVersion;
  }

  public void setDeployedVersion(GetApplicationResponseDeployedVersion deployedVersion) {
    this.deployedVersion = deployedVersion;
  }


  public GetApplicationResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetApplicationResponse engineType(EngineType engineType) {
    this.engineType = engineType;
    return this;
  }

  /**
   * Get engineType
   * @return engineType
   */
  @javax.annotation.Nonnull
  public EngineType getEngineType() {
    return engineType;
  }

  public void setEngineType(EngineType engineType) {
    this.engineType = engineType;
  }


  public GetApplicationResponse environmentId(String environmentId) {
    this.environmentId = environmentId;
    return this;
  }

  /**
   * Get environmentId
   * @return environmentId
   */
  @javax.annotation.Nullable
  public String getEnvironmentId() {
    return environmentId;
  }

  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public GetApplicationResponse kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public GetApplicationResponse lastStartTime(OffsetDateTime lastStartTime) {
    this.lastStartTime = lastStartTime;
    return this;
  }

  /**
   * Get lastStartTime
   * @return lastStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastStartTime() {
    return lastStartTime;
  }

  public void setLastStartTime(OffsetDateTime lastStartTime) {
    this.lastStartTime = lastStartTime;
  }


  public GetApplicationResponse latestVersion(GetApplicationResponseLatestVersion latestVersion) {
    this.latestVersion = latestVersion;
    return this;
  }

  /**
   * Get latestVersion
   * @return latestVersion
   */
  @javax.annotation.Nonnull
  public GetApplicationResponseLatestVersion getLatestVersion() {
    return latestVersion;
  }

  public void setLatestVersion(GetApplicationResponseLatestVersion latestVersion) {
    this.latestVersion = latestVersion;
  }


  public GetApplicationResponse listenerArns(List listenerArns) {
    this.listenerArns = listenerArns;
    return this;
  }

  /**
   * Get listenerArns
   * @return listenerArns
   */
  @javax.annotation.Nullable
  public List getListenerArns() {
    return listenerArns;
  }

  public void setListenerArns(List listenerArns) {
    this.listenerArns = listenerArns;
  }


  public GetApplicationResponse listenerPorts(List listenerPorts) {
    this.listenerPorts = listenerPorts;
    return this;
  }

  /**
   * Get listenerPorts
   * @return listenerPorts
   */
  @javax.annotation.Nullable
  public List getListenerPorts() {
    return listenerPorts;
  }

  public void setListenerPorts(List listenerPorts) {
    this.listenerPorts = listenerPorts;
  }


  public GetApplicationResponse loadBalancerDnsName(String loadBalancerDnsName) {
    this.loadBalancerDnsName = loadBalancerDnsName;
    return this;
  }

  /**
   * Get loadBalancerDnsName
   * @return loadBalancerDnsName
   */
  @javax.annotation.Nullable
  public String getLoadBalancerDnsName() {
    return loadBalancerDnsName;
  }

  public void setLoadBalancerDnsName(String loadBalancerDnsName) {
    this.loadBalancerDnsName = loadBalancerDnsName;
  }


  public GetApplicationResponse logGroups(List logGroups) {
    this.logGroups = logGroups;
    return this;
  }

  /**
   * Get logGroups
   * @return logGroups
   */
  @javax.annotation.Nullable
  public List getLogGroups() {
    return logGroups;
  }

  public void setLogGroups(List logGroups) {
    this.logGroups = logGroups;
  }


  public GetApplicationResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetApplicationResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public GetApplicationResponse status(ApplicationLifecycle status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public ApplicationLifecycle getStatus() {
    return status;
  }

  public void setStatus(ApplicationLifecycle status) {
    this.status = status;
  }


  public GetApplicationResponse statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Get statusReason
   * @return statusReason
   */
  @javax.annotation.Nullable
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public GetApplicationResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public GetApplicationResponse targetGroupArns(List targetGroupArns) {
    this.targetGroupArns = targetGroupArns;
    return this;
  }

  /**
   * Get targetGroupArns
   * @return targetGroupArns
   */
  @javax.annotation.Nullable
  public List getTargetGroupArns() {
    return targetGroupArns;
  }

  public void setTargetGroupArns(List targetGroupArns) {
    this.targetGroupArns = targetGroupArns;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetApplicationResponse getApplicationResponse = (GetApplicationResponse) o;
    return Objects.equals(this.applicationArn, getApplicationResponse.applicationArn) &&
        Objects.equals(this.applicationId, getApplicationResponse.applicationId) &&
        Objects.equals(this.creationTime, getApplicationResponse.creationTime) &&
        Objects.equals(this.deployedVersion, getApplicationResponse.deployedVersion) &&
        Objects.equals(this.description, getApplicationResponse.description) &&
        Objects.equals(this.engineType, getApplicationResponse.engineType) &&
        Objects.equals(this.environmentId, getApplicationResponse.environmentId) &&
        Objects.equals(this.kmsKeyId, getApplicationResponse.kmsKeyId) &&
        Objects.equals(this.lastStartTime, getApplicationResponse.lastStartTime) &&
        Objects.equals(this.latestVersion, getApplicationResponse.latestVersion) &&
        Objects.equals(this.listenerArns, getApplicationResponse.listenerArns) &&
        Objects.equals(this.listenerPorts, getApplicationResponse.listenerPorts) &&
        Objects.equals(this.loadBalancerDnsName, getApplicationResponse.loadBalancerDnsName) &&
        Objects.equals(this.logGroups, getApplicationResponse.logGroups) &&
        Objects.equals(this.name, getApplicationResponse.name) &&
        Objects.equals(this.roleArn, getApplicationResponse.roleArn) &&
        Objects.equals(this.status, getApplicationResponse.status) &&
        Objects.equals(this.statusReason, getApplicationResponse.statusReason) &&
        Objects.equals(this.tags, getApplicationResponse.tags) &&
        Objects.equals(this.targetGroupArns, getApplicationResponse.targetGroupArns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationArn, applicationId, creationTime, deployedVersion, description, engineType, environmentId, kmsKeyId, lastStartTime, latestVersion, listenerArns, listenerPorts, loadBalancerDnsName, logGroups, name, roleArn, status, statusReason, tags, targetGroupArns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetApplicationResponse {\n");
    sb.append("    applicationArn: ").append(toIndentedString(applicationArn)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    deployedVersion: ").append(toIndentedString(deployedVersion)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    engineType: ").append(toIndentedString(engineType)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    lastStartTime: ").append(toIndentedString(lastStartTime)).append("\n");
    sb.append("    latestVersion: ").append(toIndentedString(latestVersion)).append("\n");
    sb.append("    listenerArns: ").append(toIndentedString(listenerArns)).append("\n");
    sb.append("    listenerPorts: ").append(toIndentedString(listenerPorts)).append("\n");
    sb.append("    loadBalancerDnsName: ").append(toIndentedString(loadBalancerDnsName)).append("\n");
    sb.append("    logGroups: ").append(toIndentedString(logGroups)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    targetGroupArns: ").append(toIndentedString(targetGroupArns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("applicationArn");
    openapiFields.add("applicationId");
    openapiFields.add("creationTime");
    openapiFields.add("deployedVersion");
    openapiFields.add("description");
    openapiFields.add("engineType");
    openapiFields.add("environmentId");
    openapiFields.add("kmsKeyId");
    openapiFields.add("lastStartTime");
    openapiFields.add("latestVersion");
    openapiFields.add("listenerArns");
    openapiFields.add("listenerPorts");
    openapiFields.add("loadBalancerDnsName");
    openapiFields.add("logGroups");
    openapiFields.add("name");
    openapiFields.add("roleArn");
    openapiFields.add("status");
    openapiFields.add("statusReason");
    openapiFields.add("tags");
    openapiFields.add("targetGroupArns");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("applicationArn");
    openapiRequiredFields.add("applicationId");
    openapiRequiredFields.add("creationTime");
    openapiRequiredFields.add("engineType");
    openapiRequiredFields.add("latestVersion");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("status");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetApplicationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetApplicationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetApplicationResponse is not found in the empty JSON string", GetApplicationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetApplicationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetApplicationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetApplicationResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `applicationArn`
      String.validateJsonElement(jsonObj.get("applicationArn"));
      // validate the required field `applicationId`
      String.validateJsonElement(jsonObj.get("applicationId"));
      // validate the required field `creationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      // validate the optional field `deployedVersion`
      if (jsonObj.get("deployedVersion") != null && !jsonObj.get("deployedVersion").isJsonNull()) {
        GetApplicationResponseDeployedVersion.validateJsonElement(jsonObj.get("deployedVersion"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the required field `engineType`
      EngineType.validateJsonElement(jsonObj.get("engineType"));
      // validate the optional field `environmentId`
      if (jsonObj.get("environmentId") != null && !jsonObj.get("environmentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("environmentId"));
      }
      // validate the optional field `kmsKeyId`
      if (jsonObj.get("kmsKeyId") != null && !jsonObj.get("kmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("kmsKeyId"));
      }
      // validate the optional field `lastStartTime`
      if (jsonObj.get("lastStartTime") != null && !jsonObj.get("lastStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastStartTime"));
      }
      // validate the required field `latestVersion`
      GetApplicationResponseLatestVersion.validateJsonElement(jsonObj.get("latestVersion"));
      // validate the optional field `listenerArns`
      if (jsonObj.get("listenerArns") != null && !jsonObj.get("listenerArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("listenerArns"));
      }
      // validate the optional field `listenerPorts`
      if (jsonObj.get("listenerPorts") != null && !jsonObj.get("listenerPorts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("listenerPorts"));
      }
      // validate the optional field `loadBalancerDnsName`
      if (jsonObj.get("loadBalancerDnsName") != null && !jsonObj.get("loadBalancerDnsName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("loadBalancerDnsName"));
      }
      // validate the optional field `logGroups`
      if (jsonObj.get("logGroups") != null && !jsonObj.get("logGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("logGroups"));
      }
      // validate the required field `name`
      String.validateJsonElement(jsonObj.get("name"));
      // validate the optional field `roleArn`
      if (jsonObj.get("roleArn") != null && !jsonObj.get("roleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("roleArn"));
      }
      // validate the required field `status`
      ApplicationLifecycle.validateJsonElement(jsonObj.get("status"));
      // validate the optional field `statusReason`
      if (jsonObj.get("statusReason") != null && !jsonObj.get("statusReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusReason"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `targetGroupArns`
      if (jsonObj.get("targetGroupArns") != null && !jsonObj.get("targetGroupArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("targetGroupArns"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetApplicationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetApplicationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetApplicationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetApplicationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetApplicationResponse>() {
           @Override
           public void write(JsonWriter out, GetApplicationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetApplicationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetApplicationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetApplicationResponse
   * @throws IOException if the JSON string is invalid with respect to GetApplicationResponse
   */
  public static GetApplicationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetApplicationResponse.class);
  }

  /**
   * Convert an instance of GetApplicationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

