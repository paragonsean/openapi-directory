/*
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ApplicationDeploymentLifecycle;
import org.openapitools.client.model.ApplicationLifecycle;
import org.openapitools.client.model.ApplicationVersionLifecycle;
import org.openapitools.client.model.EngineType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ApplicationSummary
 */
public class ApplicationSummaryTest {
    private final ApplicationSummary model = new ApplicationSummary();

    /**
     * Model tests for ApplicationSummary
     */
    @Test
    public void testApplicationSummary() {
        // TODO: test ApplicationSummary
    }

    /**
     * Test the property 'applicationArn'
     */
    @Test
    public void applicationArnTest() {
        // TODO: test applicationArn
    }

    /**
     * Test the property 'applicationId'
     */
    @Test
    public void applicationIdTest() {
        // TODO: test applicationId
    }

    /**
     * Test the property 'applicationVersion'
     */
    @Test
    public void applicationVersionTest() {
        // TODO: test applicationVersion
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'deploymentStatus'
     */
    @Test
    public void deploymentStatusTest() {
        // TODO: test deploymentStatus
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'engineType'
     */
    @Test
    public void engineTypeTest() {
        // TODO: test engineType
    }

    /**
     * Test the property 'environmentId'
     */
    @Test
    public void environmentIdTest() {
        // TODO: test environmentId
    }

    /**
     * Test the property 'lastStartTime'
     */
    @Test
    public void lastStartTimeTest() {
        // TODO: test lastStartTime
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'versionStatus'
     */
    @Test
    public void versionStatusTest() {
        // TODO: test versionStatus
    }

}
