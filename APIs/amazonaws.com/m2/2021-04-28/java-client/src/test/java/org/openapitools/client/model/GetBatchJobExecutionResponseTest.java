/*
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.BatchJobExecutionStatus;
import org.openapitools.client.model.BatchJobType;
import org.openapitools.client.model.GetBatchJobExecutionResponseBatchJobIdentifier;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetBatchJobExecutionResponse
 */
public class GetBatchJobExecutionResponseTest {
    private final GetBatchJobExecutionResponse model = new GetBatchJobExecutionResponse();

    /**
     * Model tests for GetBatchJobExecutionResponse
     */
    @Test
    public void testGetBatchJobExecutionResponse() {
        // TODO: test GetBatchJobExecutionResponse
    }

    /**
     * Test the property 'applicationId'
     */
    @Test
    public void applicationIdTest() {
        // TODO: test applicationId
    }

    /**
     * Test the property 'batchJobIdentifier'
     */
    @Test
    public void batchJobIdentifierTest() {
        // TODO: test batchJobIdentifier
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'executionId'
     */
    @Test
    public void executionIdTest() {
        // TODO: test executionId
    }

    /**
     * Test the property 'jobId'
     */
    @Test
    public void jobIdTest() {
        // TODO: test jobId
    }

    /**
     * Test the property 'jobName'
     */
    @Test
    public void jobNameTest() {
        // TODO: test jobName
    }

    /**
     * Test the property 'jobType'
     */
    @Test
    public void jobTypeTest() {
        // TODO: test jobType
    }

    /**
     * Test the property 'jobUser'
     */
    @Test
    public void jobUserTest() {
        // TODO: test jobUser
    }

    /**
     * Test the property 'returnCode'
     */
    @Test
    public void returnCodeTest() {
        // TODO: test returnCode
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusReason'
     */
    @Test
    public void statusReasonTest() {
        // TODO: test statusReason
    }

}
