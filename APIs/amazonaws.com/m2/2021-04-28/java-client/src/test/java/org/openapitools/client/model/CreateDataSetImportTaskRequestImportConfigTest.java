/*
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateDataSetImportTaskRequestImportConfig
 */
public class CreateDataSetImportTaskRequestImportConfigTest {
    private final CreateDataSetImportTaskRequestImportConfig model = new CreateDataSetImportTaskRequestImportConfig();

    /**
     * Model tests for CreateDataSetImportTaskRequestImportConfig
     */
    @Test
    public void testCreateDataSetImportTaskRequestImportConfig() {
        // TODO: test CreateDataSetImportTaskRequestImportConfig
    }

    /**
     * Test the property 'dataSets'
     */
    @Test
    public void dataSetsTest() {
        // TODO: test dataSets
    }

    /**
     * Test the property 's3Location'
     */
    @Test
    public void s3LocationTest() {
        // TODO: test s3Location
    }

}
