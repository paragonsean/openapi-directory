/*
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateEnvironmentRequestHighAvailabilityConfig;
import org.openapitools.client.model.StorageConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateEnvironmentRequest
 */
public class CreateEnvironmentRequestTest {
    private final CreateEnvironmentRequest model = new CreateEnvironmentRequest();

    /**
     * Model tests for CreateEnvironmentRequest
     */
    @Test
    public void testCreateEnvironmentRequest() {
        // TODO: test CreateEnvironmentRequest
    }

    /**
     * Test the property 'clientToken'
     */
    @Test
    public void clientTokenTest() {
        // TODO: test clientToken
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'engineType'
     */
    @Test
    public void engineTypeTest() {
        // TODO: test engineType
    }

    /**
     * Test the property 'engineVersion'
     */
    @Test
    public void engineVersionTest() {
        // TODO: test engineVersion
    }

    /**
     * Test the property 'highAvailabilityConfig'
     */
    @Test
    public void highAvailabilityConfigTest() {
        // TODO: test highAvailabilityConfig
    }

    /**
     * Test the property 'instanceType'
     */
    @Test
    public void instanceTypeTest() {
        // TODO: test instanceType
    }

    /**
     * Test the property 'kmsKeyId'
     */
    @Test
    public void kmsKeyIdTest() {
        // TODO: test kmsKeyId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'preferredMaintenanceWindow'
     */
    @Test
    public void preferredMaintenanceWindowTest() {
        // TODO: test preferredMaintenanceWindow
    }

    /**
     * Test the property 'publiclyAccessible'
     */
    @Test
    public void publiclyAccessibleTest() {
        // TODO: test publiclyAccessible
    }

    /**
     * Test the property 'securityGroupIds'
     */
    @Test
    public void securityGroupIdsTest() {
        // TODO: test securityGroupIds
    }

    /**
     * Test the property 'storageConfigurations'
     */
    @Test
    public void storageConfigurationsTest() {
        // TODO: test storageConfigurations
    }

    /**
     * Test the property 'subnetIds'
     */
    @Test
    public void subnetIdsTest() {
        // TODO: test subnetIds
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

}
