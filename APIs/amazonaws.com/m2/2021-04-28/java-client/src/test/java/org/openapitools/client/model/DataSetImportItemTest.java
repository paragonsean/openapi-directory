/*
 * AWSMainframeModernization
 * Amazon Web Services Mainframe Modernization provides tools and resources to help you plan and implement migration and modernization from mainframes to Amazon Web Services managed runtime environments. It provides tools for analyzing existing mainframe applications, developing or updating mainframe applications using COBOL or PL/I, and implementing an automated pipeline for continuous integration and continuous delivery (CI/CD) of the applications.
 *
 * The version of the OpenAPI document: 2021-04-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DataSetImportItemDataSet;
import org.openapitools.client.model.DataSetImportItemExternalLocation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DataSetImportItem
 */
public class DataSetImportItemTest {
    private final DataSetImportItem model = new DataSetImportItem();

    /**
     * Model tests for DataSetImportItem
     */
    @Test
    public void testDataSetImportItem() {
        // TODO: test DataSetImportItem
    }

    /**
     * Test the property 'dataSet'
     */
    @Test
    public void dataSetTest() {
        // TODO: test dataSet
    }

    /**
     * Test the property 'externalLocation'
     */
    @Test
    public void externalLocationTest() {
        // TODO: test externalLocation
    }

}
