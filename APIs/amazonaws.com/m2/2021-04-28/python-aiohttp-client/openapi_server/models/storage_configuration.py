# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_configuration_efs import StorageConfigurationEfs
from openapi_server.models.storage_configuration_fsx import StorageConfigurationFsx
from openapi_server import util


class StorageConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, efs: StorageConfigurationEfs=None, fsx: StorageConfigurationFsx=None):
        """StorageConfiguration - a model defined in OpenAPI

        :param efs: The efs of this StorageConfiguration.
        :param fsx: The fsx of this StorageConfiguration.
        """
        self.openapi_types = {
            'efs': StorageConfigurationEfs,
            'fsx': StorageConfigurationFsx
        }

        self.attribute_map = {
            'efs': 'efs',
            'fsx': 'fsx'
        }

        self._efs = efs
        self._fsx = fsx

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageConfiguration of this StorageConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def efs(self):
        """Gets the efs of this StorageConfiguration.


        :return: The efs of this StorageConfiguration.
        :rtype: StorageConfigurationEfs
        """
        return self._efs

    @efs.setter
    def efs(self, efs):
        """Sets the efs of this StorageConfiguration.


        :param efs: The efs of this StorageConfiguration.
        :type efs: StorageConfigurationEfs
        """

        self._efs = efs

    @property
    def fsx(self):
        """Gets the fsx of this StorageConfiguration.


        :return: The fsx of this StorageConfiguration.
        :rtype: StorageConfigurationFsx
        """
        return self._fsx

    @fsx.setter
    def fsx(self, fsx):
        """Sets the fsx of this StorageConfiguration.


        :param fsx: The fsx of this StorageConfiguration.
        :type fsx: StorageConfigurationFsx
        """

        self._fsx = fsx
