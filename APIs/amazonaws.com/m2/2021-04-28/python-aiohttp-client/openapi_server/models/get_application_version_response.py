# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_version_lifecycle import ApplicationVersionLifecycle
from openapi_server import util


class GetApplicationVersionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_version: int=None, creation_time: datetime=None, definition_content: str=None, description: str=None, name: str=None, status: ApplicationVersionLifecycle=None, status_reason: str=None):
        """GetApplicationVersionResponse - a model defined in OpenAPI

        :param application_version: The application_version of this GetApplicationVersionResponse.
        :param creation_time: The creation_time of this GetApplicationVersionResponse.
        :param definition_content: The definition_content of this GetApplicationVersionResponse.
        :param description: The description of this GetApplicationVersionResponse.
        :param name: The name of this GetApplicationVersionResponse.
        :param status: The status of this GetApplicationVersionResponse.
        :param status_reason: The status_reason of this GetApplicationVersionResponse.
        """
        self.openapi_types = {
            'application_version': int,
            'creation_time': datetime,
            'definition_content': str,
            'description': str,
            'name': str,
            'status': ApplicationVersionLifecycle,
            'status_reason': str
        }

        self.attribute_map = {
            'application_version': 'applicationVersion',
            'creation_time': 'creationTime',
            'definition_content': 'definitionContent',
            'description': 'description',
            'name': 'name',
            'status': 'status',
            'status_reason': 'statusReason'
        }

        self._application_version = application_version
        self._creation_time = creation_time
        self._definition_content = definition_content
        self._description = description
        self._name = name
        self._status = status
        self._status_reason = status_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetApplicationVersionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetApplicationVersionResponse of this GetApplicationVersionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_version(self):
        """Gets the application_version of this GetApplicationVersionResponse.


        :return: The application_version of this GetApplicationVersionResponse.
        :rtype: int
        """
        return self._application_version

    @application_version.setter
    def application_version(self, application_version):
        """Sets the application_version of this GetApplicationVersionResponse.


        :param application_version: The application_version of this GetApplicationVersionResponse.
        :type application_version: int
        """
        if application_version is None:
            raise ValueError("Invalid value for `application_version`, must not be `None`")

        self._application_version = application_version

    @property
    def creation_time(self):
        """Gets the creation_time of this GetApplicationVersionResponse.


        :return: The creation_time of this GetApplicationVersionResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this GetApplicationVersionResponse.


        :param creation_time: The creation_time of this GetApplicationVersionResponse.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def definition_content(self):
        """Gets the definition_content of this GetApplicationVersionResponse.


        :return: The definition_content of this GetApplicationVersionResponse.
        :rtype: str
        """
        return self._definition_content

    @definition_content.setter
    def definition_content(self, definition_content):
        """Sets the definition_content of this GetApplicationVersionResponse.


        :param definition_content: The definition_content of this GetApplicationVersionResponse.
        :type definition_content: str
        """
        if definition_content is None:
            raise ValueError("Invalid value for `definition_content`, must not be `None`")

        self._definition_content = definition_content

    @property
    def description(self):
        """Gets the description of this GetApplicationVersionResponse.


        :return: The description of this GetApplicationVersionResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetApplicationVersionResponse.


        :param description: The description of this GetApplicationVersionResponse.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this GetApplicationVersionResponse.


        :return: The name of this GetApplicationVersionResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetApplicationVersionResponse.


        :param name: The name of this GetApplicationVersionResponse.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def status(self):
        """Gets the status of this GetApplicationVersionResponse.


        :return: The status of this GetApplicationVersionResponse.
        :rtype: ApplicationVersionLifecycle
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetApplicationVersionResponse.


        :param status: The status of this GetApplicationVersionResponse.
        :type status: ApplicationVersionLifecycle
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this GetApplicationVersionResponse.


        :return: The status_reason of this GetApplicationVersionResponse.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this GetApplicationVersionResponse.


        :param status_reason: The status_reason of this GetApplicationVersionResponse.
        :type status_reason: str
        """

        self._status_reason = status_reason
