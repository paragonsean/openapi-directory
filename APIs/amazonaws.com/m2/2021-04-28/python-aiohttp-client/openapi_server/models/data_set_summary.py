# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataSetSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: datetime=None, data_set_name: str=None, data_set_org: str=None, format: str=None, last_referenced_time: datetime=None, last_updated_time: datetime=None):
        """DataSetSummary - a model defined in OpenAPI

        :param creation_time: The creation_time of this DataSetSummary.
        :param data_set_name: The data_set_name of this DataSetSummary.
        :param data_set_org: The data_set_org of this DataSetSummary.
        :param format: The format of this DataSetSummary.
        :param last_referenced_time: The last_referenced_time of this DataSetSummary.
        :param last_updated_time: The last_updated_time of this DataSetSummary.
        """
        self.openapi_types = {
            'creation_time': datetime,
            'data_set_name': str,
            'data_set_org': str,
            'format': str,
            'last_referenced_time': datetime,
            'last_updated_time': datetime
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'data_set_name': 'dataSetName',
            'data_set_org': 'dataSetOrg',
            'format': 'format',
            'last_referenced_time': 'lastReferencedTime',
            'last_updated_time': 'lastUpdatedTime'
        }

        self._creation_time = creation_time
        self._data_set_name = data_set_name
        self._data_set_org = data_set_org
        self._format = format
        self._last_referenced_time = last_referenced_time
        self._last_updated_time = last_updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSetSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSetSummary of this DataSetSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this DataSetSummary.


        :return: The creation_time of this DataSetSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DataSetSummary.


        :param creation_time: The creation_time of this DataSetSummary.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def data_set_name(self):
        """Gets the data_set_name of this DataSetSummary.


        :return: The data_set_name of this DataSetSummary.
        :rtype: str
        """
        return self._data_set_name

    @data_set_name.setter
    def data_set_name(self, data_set_name):
        """Sets the data_set_name of this DataSetSummary.


        :param data_set_name: The data_set_name of this DataSetSummary.
        :type data_set_name: str
        """
        if data_set_name is None:
            raise ValueError("Invalid value for `data_set_name`, must not be `None`")

        self._data_set_name = data_set_name

    @property
    def data_set_org(self):
        """Gets the data_set_org of this DataSetSummary.


        :return: The data_set_org of this DataSetSummary.
        :rtype: str
        """
        return self._data_set_org

    @data_set_org.setter
    def data_set_org(self, data_set_org):
        """Sets the data_set_org of this DataSetSummary.


        :param data_set_org: The data_set_org of this DataSetSummary.
        :type data_set_org: str
        """

        self._data_set_org = data_set_org

    @property
    def format(self):
        """Gets the format of this DataSetSummary.


        :return: The format of this DataSetSummary.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this DataSetSummary.


        :param format: The format of this DataSetSummary.
        :type format: str
        """

        self._format = format

    @property
    def last_referenced_time(self):
        """Gets the last_referenced_time of this DataSetSummary.


        :return: The last_referenced_time of this DataSetSummary.
        :rtype: datetime
        """
        return self._last_referenced_time

    @last_referenced_time.setter
    def last_referenced_time(self, last_referenced_time):
        """Sets the last_referenced_time of this DataSetSummary.


        :param last_referenced_time: The last_referenced_time of this DataSetSummary.
        :type last_referenced_time: datetime
        """

        self._last_referenced_time = last_referenced_time

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this DataSetSummary.


        :return: The last_updated_time of this DataSetSummary.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this DataSetSummary.


        :param last_updated_time: The last_updated_time of this DataSetSummary.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time
