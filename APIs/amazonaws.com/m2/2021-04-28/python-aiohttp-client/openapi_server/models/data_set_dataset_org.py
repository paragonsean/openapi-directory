# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_org_attributes_gdg import DatasetOrgAttributesGdg
from openapi_server.models.dataset_org_attributes_po import DatasetOrgAttributesPo
from openapi_server.models.dataset_org_attributes_ps import DatasetOrgAttributesPs
from openapi_server.models.dataset_org_attributes_vsam import DatasetOrgAttributesVsam
from openapi_server import util


class DataSetDatasetOrg(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gdg: DatasetOrgAttributesGdg=None, po: DatasetOrgAttributesPo=None, ps: DatasetOrgAttributesPs=None, vsam: DatasetOrgAttributesVsam=None):
        """DataSetDatasetOrg - a model defined in OpenAPI

        :param gdg: The gdg of this DataSetDatasetOrg.
        :param po: The po of this DataSetDatasetOrg.
        :param ps: The ps of this DataSetDatasetOrg.
        :param vsam: The vsam of this DataSetDatasetOrg.
        """
        self.openapi_types = {
            'gdg': DatasetOrgAttributesGdg,
            'po': DatasetOrgAttributesPo,
            'ps': DatasetOrgAttributesPs,
            'vsam': DatasetOrgAttributesVsam
        }

        self.attribute_map = {
            'gdg': 'gdg',
            'po': 'po',
            'ps': 'ps',
            'vsam': 'vsam'
        }

        self._gdg = gdg
        self._po = po
        self._ps = ps
        self._vsam = vsam

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSetDatasetOrg':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSet_datasetOrg of this DataSetDatasetOrg.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gdg(self):
        """Gets the gdg of this DataSetDatasetOrg.


        :return: The gdg of this DataSetDatasetOrg.
        :rtype: DatasetOrgAttributesGdg
        """
        return self._gdg

    @gdg.setter
    def gdg(self, gdg):
        """Sets the gdg of this DataSetDatasetOrg.


        :param gdg: The gdg of this DataSetDatasetOrg.
        :type gdg: DatasetOrgAttributesGdg
        """

        self._gdg = gdg

    @property
    def po(self):
        """Gets the po of this DataSetDatasetOrg.


        :return: The po of this DataSetDatasetOrg.
        :rtype: DatasetOrgAttributesPo
        """
        return self._po

    @po.setter
    def po(self, po):
        """Sets the po of this DataSetDatasetOrg.


        :param po: The po of this DataSetDatasetOrg.
        :type po: DatasetOrgAttributesPo
        """

        self._po = po

    @property
    def ps(self):
        """Gets the ps of this DataSetDatasetOrg.


        :return: The ps of this DataSetDatasetOrg.
        :rtype: DatasetOrgAttributesPs
        """
        return self._ps

    @ps.setter
    def ps(self, ps):
        """Sets the ps of this DataSetDatasetOrg.


        :param ps: The ps of this DataSetDatasetOrg.
        :type ps: DatasetOrgAttributesPs
        """

        self._ps = ps

    @property
    def vsam(self):
        """Gets the vsam of this DataSetDatasetOrg.


        :return: The vsam of this DataSetDatasetOrg.
        :rtype: DatasetOrgAttributesVsam
        """
        return self._vsam

    @vsam.setter
    def vsam(self, vsam):
        """Sets the vsam of this DataSetDatasetOrg.


        :param vsam: The vsam of this DataSetDatasetOrg.
        :type vsam: DatasetOrgAttributesVsam
        """

        self._vsam = vsam
