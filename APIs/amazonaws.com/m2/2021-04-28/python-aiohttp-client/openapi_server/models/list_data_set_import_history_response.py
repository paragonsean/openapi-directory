# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListDataSetImportHistoryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_set_import_tasks: List=None, next_token: str=None):
        """ListDataSetImportHistoryResponse - a model defined in OpenAPI

        :param data_set_import_tasks: The data_set_import_tasks of this ListDataSetImportHistoryResponse.
        :param next_token: The next_token of this ListDataSetImportHistoryResponse.
        """
        self.openapi_types = {
            'data_set_import_tasks': List,
            'next_token': str
        }

        self.attribute_map = {
            'data_set_import_tasks': 'dataSetImportTasks',
            'next_token': 'nextToken'
        }

        self._data_set_import_tasks = data_set_import_tasks
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDataSetImportHistoryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDataSetImportHistoryResponse of this ListDataSetImportHistoryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_set_import_tasks(self):
        """Gets the data_set_import_tasks of this ListDataSetImportHistoryResponse.


        :return: The data_set_import_tasks of this ListDataSetImportHistoryResponse.
        :rtype: List
        """
        return self._data_set_import_tasks

    @data_set_import_tasks.setter
    def data_set_import_tasks(self, data_set_import_tasks):
        """Sets the data_set_import_tasks of this ListDataSetImportHistoryResponse.


        :param data_set_import_tasks: The data_set_import_tasks of this ListDataSetImportHistoryResponse.
        :type data_set_import_tasks: List
        """
        if data_set_import_tasks is None:
            raise ValueError("Invalid value for `data_set_import_tasks`, must not be `None`")

        self._data_set_import_tasks = data_set_import_tasks

    @property
    def next_token(self):
        """Gets the next_token of this ListDataSetImportHistoryResponse.


        :return: The next_token of this ListDataSetImportHistoryResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListDataSetImportHistoryResponse.


        :param next_token: The next_token of this ListDataSetImportHistoryResponse.
        :type next_token: str
        """

        self._next_token = next_token
