# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_lifecycle import DeploymentLifecycle
from openapi_server import util


class DeployedVersionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_version: int=None, status: DeploymentLifecycle=None, status_reason: str=None):
        """DeployedVersionSummary - a model defined in OpenAPI

        :param application_version: The application_version of this DeployedVersionSummary.
        :param status: The status of this DeployedVersionSummary.
        :param status_reason: The status_reason of this DeployedVersionSummary.
        """
        self.openapi_types = {
            'application_version': int,
            'status': DeploymentLifecycle,
            'status_reason': str
        }

        self.attribute_map = {
            'application_version': 'applicationVersion',
            'status': 'status',
            'status_reason': 'statusReason'
        }

        self._application_version = application_version
        self._status = status
        self._status_reason = status_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployedVersionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployedVersionSummary of this DeployedVersionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_version(self):
        """Gets the application_version of this DeployedVersionSummary.


        :return: The application_version of this DeployedVersionSummary.
        :rtype: int
        """
        return self._application_version

    @application_version.setter
    def application_version(self, application_version):
        """Sets the application_version of this DeployedVersionSummary.


        :param application_version: The application_version of this DeployedVersionSummary.
        :type application_version: int
        """
        if application_version is None:
            raise ValueError("Invalid value for `application_version`, must not be `None`")

        self._application_version = application_version

    @property
    def status(self):
        """Gets the status of this DeployedVersionSummary.


        :return: The status of this DeployedVersionSummary.
        :rtype: DeploymentLifecycle
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeployedVersionSummary.


        :param status: The status of this DeployedVersionSummary.
        :type status: DeploymentLifecycle
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this DeployedVersionSummary.


        :return: The status_reason of this DeployedVersionSummary.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this DeployedVersionSummary.


        :param status_reason: The status_reason of this DeployedVersionSummary.
        :type status_reason: str
        """

        self._status_reason = status_reason
