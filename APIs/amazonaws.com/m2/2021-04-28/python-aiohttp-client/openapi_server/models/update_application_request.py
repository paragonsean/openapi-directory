# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_application_request_definition import CreateApplicationRequestDefinition
from openapi_server import util


class UpdateApplicationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_application_version: int=None, definition: CreateApplicationRequestDefinition=None, description: str=None):
        """UpdateApplicationRequest - a model defined in OpenAPI

        :param current_application_version: The current_application_version of this UpdateApplicationRequest.
        :param definition: The definition of this UpdateApplicationRequest.
        :param description: The description of this UpdateApplicationRequest.
        """
        self.openapi_types = {
            'current_application_version': int,
            'definition': CreateApplicationRequestDefinition,
            'description': str
        }

        self.attribute_map = {
            'current_application_version': 'currentApplicationVersion',
            'definition': 'definition',
            'description': 'description'
        }

        self._current_application_version = current_application_version
        self._definition = definition
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateApplicationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateApplication_request of this UpdateApplicationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_application_version(self):
        """Gets the current_application_version of this UpdateApplicationRequest.

        The current version of the application to update.

        :return: The current_application_version of this UpdateApplicationRequest.
        :rtype: int
        """
        return self._current_application_version

    @current_application_version.setter
    def current_application_version(self, current_application_version):
        """Sets the current_application_version of this UpdateApplicationRequest.

        The current version of the application to update.

        :param current_application_version: The current_application_version of this UpdateApplicationRequest.
        :type current_application_version: int
        """
        if current_application_version is None:
            raise ValueError("Invalid value for `current_application_version`, must not be `None`")
        if current_application_version is not None and current_application_version < 1:
            raise ValueError("Invalid value for `current_application_version`, must be a value greater than or equal to `1`")

        self._current_application_version = current_application_version

    @property
    def definition(self):
        """Gets the definition of this UpdateApplicationRequest.


        :return: The definition of this UpdateApplicationRequest.
        :rtype: CreateApplicationRequestDefinition
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this UpdateApplicationRequest.


        :param definition: The definition of this UpdateApplicationRequest.
        :type definition: CreateApplicationRequestDefinition
        """

        self._definition = definition

    @property
    def description(self):
        """Gets the description of this UpdateApplicationRequest.

        The description of the application to update.

        :return: The description of this UpdateApplicationRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateApplicationRequest.

        The description of the application to update.

        :param description: The description of this UpdateApplicationRequest.
        :type description: str
        """
        if description is not None and len(description) > 500:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `500`")
        if description is not None and len(description) < 0:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")

        self._description = description
