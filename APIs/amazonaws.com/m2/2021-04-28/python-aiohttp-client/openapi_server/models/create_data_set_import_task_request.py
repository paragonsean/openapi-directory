# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_data_set_import_task_request_import_config import CreateDataSetImportTaskRequestImportConfig
from openapi_server import util


class CreateDataSetImportTaskRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_token: str=None, import_config: CreateDataSetImportTaskRequestImportConfig=None):
        """CreateDataSetImportTaskRequest - a model defined in OpenAPI

        :param client_token: The client_token of this CreateDataSetImportTaskRequest.
        :param import_config: The import_config of this CreateDataSetImportTaskRequest.
        """
        self.openapi_types = {
            'client_token': str,
            'import_config': CreateDataSetImportTaskRequestImportConfig
        }

        self.attribute_map = {
            'client_token': 'clientToken',
            'import_config': 'importConfig'
        }

        self._client_token = client_token
        self._import_config = import_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDataSetImportTaskRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDataSetImportTask_request of this CreateDataSetImportTaskRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_token(self):
        """Gets the client_token of this CreateDataSetImportTaskRequest.

         Unique, case-sensitive identifier you provide to ensure the idempotency of the request to create a data set import. The service generates the clientToken when the API call is triggered. The token expires after one hour, so if you retry the API within this timeframe with the same clientToken, you will get the same response. The service also handles deleting the clientToken after it expires. 

        :return: The client_token of this CreateDataSetImportTaskRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this CreateDataSetImportTaskRequest.

         Unique, case-sensitive identifier you provide to ensure the idempotency of the request to create a data set import. The service generates the clientToken when the API call is triggered. The token expires after one hour, so if you retry the API within this timeframe with the same clientToken, you will get the same response. The service also handles deleting the clientToken after it expires. 

        :param client_token: The client_token of this CreateDataSetImportTaskRequest.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def import_config(self):
        """Gets the import_config of this CreateDataSetImportTaskRequest.


        :return: The import_config of this CreateDataSetImportTaskRequest.
        :rtype: CreateDataSetImportTaskRequestImportConfig
        """
        return self._import_config

    @import_config.setter
    def import_config(self, import_config):
        """Sets the import_config of this CreateDataSetImportTaskRequest.


        :param import_config: The import_config of this CreateDataSetImportTaskRequest.
        :type import_config: CreateDataSetImportTaskRequestImportConfig
        """
        if import_config is None:
            raise ValueError("Invalid value for `import_config`, must not be `None`")

        self._import_config = import_config
