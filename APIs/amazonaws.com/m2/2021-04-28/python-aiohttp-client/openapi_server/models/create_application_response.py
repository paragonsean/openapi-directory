# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateApplicationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_arn: str=None, application_id: str=None, application_version: int=None):
        """CreateApplicationResponse - a model defined in OpenAPI

        :param application_arn: The application_arn of this CreateApplicationResponse.
        :param application_id: The application_id of this CreateApplicationResponse.
        :param application_version: The application_version of this CreateApplicationResponse.
        """
        self.openapi_types = {
            'application_arn': str,
            'application_id': str,
            'application_version': int
        }

        self.attribute_map = {
            'application_arn': 'applicationArn',
            'application_id': 'applicationId',
            'application_version': 'applicationVersion'
        }

        self._application_arn = application_arn
        self._application_id = application_id
        self._application_version = application_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateApplicationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateApplicationResponse of this CreateApplicationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_arn(self):
        """Gets the application_arn of this CreateApplicationResponse.


        :return: The application_arn of this CreateApplicationResponse.
        :rtype: str
        """
        return self._application_arn

    @application_arn.setter
    def application_arn(self, application_arn):
        """Sets the application_arn of this CreateApplicationResponse.


        :param application_arn: The application_arn of this CreateApplicationResponse.
        :type application_arn: str
        """
        if application_arn is None:
            raise ValueError("Invalid value for `application_arn`, must not be `None`")

        self._application_arn = application_arn

    @property
    def application_id(self):
        """Gets the application_id of this CreateApplicationResponse.


        :return: The application_id of this CreateApplicationResponse.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this CreateApplicationResponse.


        :param application_id: The application_id of this CreateApplicationResponse.
        :type application_id: str
        """
        if application_id is None:
            raise ValueError("Invalid value for `application_id`, must not be `None`")

        self._application_id = application_id

    @property
    def application_version(self):
        """Gets the application_version of this CreateApplicationResponse.


        :return: The application_version of this CreateApplicationResponse.
        :rtype: int
        """
        return self._application_version

    @application_version.setter
    def application_version(self, application_version):
        """Sets the application_version of this CreateApplicationResponse.


        :param application_version: The application_version of this CreateApplicationResponse.
        :type application_version: int
        """
        if application_version is None:
            raise ValueError("Invalid value for `application_version`, must not be `None`")

        self._application_version = application_version
