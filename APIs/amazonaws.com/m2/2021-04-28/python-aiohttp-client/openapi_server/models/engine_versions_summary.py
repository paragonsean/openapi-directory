# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EngineVersionsSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, engine_type: str=None, engine_version: str=None):
        """EngineVersionsSummary - a model defined in OpenAPI

        :param engine_type: The engine_type of this EngineVersionsSummary.
        :param engine_version: The engine_version of this EngineVersionsSummary.
        """
        self.openapi_types = {
            'engine_type': str,
            'engine_version': str
        }

        self.attribute_map = {
            'engine_type': 'engineType',
            'engine_version': 'engineVersion'
        }

        self._engine_type = engine_type
        self._engine_version = engine_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EngineVersionsSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EngineVersionsSummary of this EngineVersionsSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def engine_type(self):
        """Gets the engine_type of this EngineVersionsSummary.


        :return: The engine_type of this EngineVersionsSummary.
        :rtype: str
        """
        return self._engine_type

    @engine_type.setter
    def engine_type(self, engine_type):
        """Sets the engine_type of this EngineVersionsSummary.


        :param engine_type: The engine_type of this EngineVersionsSummary.
        :type engine_type: str
        """
        if engine_type is None:
            raise ValueError("Invalid value for `engine_type`, must not be `None`")

        self._engine_type = engine_type

    @property
    def engine_version(self):
        """Gets the engine_version of this EngineVersionsSummary.


        :return: The engine_version of this EngineVersionsSummary.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this EngineVersionsSummary.


        :param engine_version: The engine_version of this EngineVersionsSummary.
        :type engine_version: str
        """
        if engine_version is None:
            raise ValueError("Invalid value for `engine_version`, must not be `None`")

        self._engine_version = engine_version
