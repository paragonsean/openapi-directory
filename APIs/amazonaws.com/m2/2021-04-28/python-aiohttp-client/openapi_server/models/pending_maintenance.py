# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pending_maintenance_schedule import PendingMaintenanceSchedule
from openapi_server import util


class PendingMaintenance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, engine_version: str=None, schedule: PendingMaintenanceSchedule=None):
        """PendingMaintenance - a model defined in OpenAPI

        :param engine_version: The engine_version of this PendingMaintenance.
        :param schedule: The schedule of this PendingMaintenance.
        """
        self.openapi_types = {
            'engine_version': str,
            'schedule': PendingMaintenanceSchedule
        }

        self.attribute_map = {
            'engine_version': 'engineVersion',
            'schedule': 'schedule'
        }

        self._engine_version = engine_version
        self._schedule = schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PendingMaintenance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PendingMaintenance of this PendingMaintenance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def engine_version(self):
        """Gets the engine_version of this PendingMaintenance.


        :return: The engine_version of this PendingMaintenance.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this PendingMaintenance.


        :param engine_version: The engine_version of this PendingMaintenance.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def schedule(self):
        """Gets the schedule of this PendingMaintenance.


        :return: The schedule of this PendingMaintenance.
        :rtype: PendingMaintenanceSchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this PendingMaintenance.


        :param schedule: The schedule of this PendingMaintenance.
        :type schedule: PendingMaintenanceSchedule
        """

        self._schedule = schedule
