openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon Web Services Mainframe Modernization provides tools and resources\
    \ to help you plan and implement migration and modernization from mainframes to\
    \ Amazon Web Services managed runtime environments. It provides tools for analyzing\
    \ existing mainframe applications, developing or updating mainframe applications\
    \ using COBOL or PL/I, and implementing an automated pipeline for continuous integration\
    \ and continuous delivery (CI/CD) of the applications."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWSMainframeModernization
  version: 2021-04-28
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: m2
  x-aws-signingName: m2
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/m2-2021-04-28.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/m2/
servers:
- description: The AWSMainframeModernization multi-region endpoint
  url: "http://m2.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWSMainframeModernization multi-region endpoint
  url: "https://m2.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWSMainframeModernization endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://m2.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWSMainframeModernization endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://m2.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /applications:
    get:
      description: Lists the applications associated with a specific Amazon Web Services
        account. You can provide the unique identifier of a specific runtime environment
        in a query parameter to see all applications associated with that environment.
      operationId: list_applications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the runtime environment where the applications
          are deployed.
        explode: true
        in: query
        name: environmentId
        required: false
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: form
      - description: The maximum number of applications to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 2000
          minimum: 1
          type: integer
        style: form
      - description: The names of the applications.
        explode: true
        in: query
        name: names
        required: false
        schema:
          items:
            $ref: '#/components/schemas/EntityName'
          maxItems: 10
          minItems: 1
          type: array
        style: form
      - description: A pagination token to control the number of applications displayed
          in the list.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^\\S{1,2000}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new application with given parameters. Requires an existing
        runtime environment and application definition file.
      operationId: create_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{applicationId}:
    delete:
      description: Deletes a specific application. You cannot delete a running application.
      operationId: delete_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application you want to delete.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Describes the details of a specific application.
      operationId: get_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates an application and creates a new version.
      operationId: update_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application you want to update.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{applicationId}/batch-job:
    post:
      description: Starts a batch job and returns the unique identifier of this execution
        of the batch job. The associated application must be running in order to start
        the batch job.
      operationId: start_batch_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application associated with this
          batch job.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartBatchJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartBatchJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{applicationId}/batch-job-definitions:
    get:
      description: Lists all the available batch job definitions based on the batch
        job resources uploaded during the application creation. You can use the batch
        job definitions in the list to start a batch job.
      operationId: list_batch_job_definitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The maximum number of batch job definitions to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 2000
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token returned from a previous call to this operation.\
          \ This specifies the next item to return. To return to the beginning of\
          \ the list, exclude this parameter."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^\\S{1,2000}$"
          type: string
        style: form
      - description: "If the batch job definition is a FileBatchJobDefinition, the\
          \ prefix allows you to search on the file names of FileBatchJobDefinitions."
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchJobDefinitionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/batch-job-executions:
    get:
      description: "Lists historical, current, and scheduled batch job executions\
        \ for a specific application."
      operationId: list_batch_job_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The unique identifier of each batch job execution.
        explode: true
        in: query
        name: executionIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Identifier'
          maxItems: 10
          minItems: 1
          type: array
        style: form
      - description: The name of each batch job execution.
        explode: true
        in: query
        name: jobName
        required: false
        schema:
          pattern: "^\\S{1,100}$"
          type: string
        style: form
      - description: The maximum number of batch job executions to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 2000
          minimum: 1
          type: integer
        style: form
      - description: A pagination token to control the number of batch job executions
          displayed in the list.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^\\S{1,2000}$"
          type: string
        style: form
      - description: The time after which the batch job executions started.
        explode: true
        in: query
        name: startedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The time before the batch job executions started.
        explode: true
        in: query
        name: startedBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The status of the batch job executions.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - Submitting
          - Holding
          - Dispatching
          - Running
          - Cancelling
          - Cancelled
          - Succeeded
          - Failed
          - Succeeded With Warning
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchJobExecutionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/batch-job-executions/{executionId}:
    get:
      description: Gets the details of a specific batch job execution for a specific
        application.
      operationId: get_batch_job_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The unique identifier of the batch job execution.
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchJobExecutionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/batch-job-executions/{executionId}/cancel:
    post:
      description: Cancels the running of a specific batch job execution.
      operationId: cancel_batch_job_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The unique identifier of the batch job execution.
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelBatchJobExecutionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/dataset-import-task:
    post:
      description: Starts a data set import task for a specific application.
      operationId: create_data_set_import_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application for which you want to
          import data sets.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSetImportTask_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataSetImportTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{applicationId}/dataset-import-tasks:
    get:
      description: Lists the data set imports for the specified application.
      operationId: list_data_set_import_history
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The maximum number of objects to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 2000
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token returned from a previous call to this operation.\
          \ This specifies the next item to return. To return to the beginning of\
          \ the list, exclude this parameter."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^\\S{1,2000}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSetImportHistoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/dataset-import-tasks/{taskId}:
    get:
      description: Gets the status of a data set import task initiated with the <a>CreateDataSetImportTask</a>
        operation.
      operationId: get_data_set_import_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application identifier.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: 'The task identifier returned by the <a>CreateDataSetImportTask</a>
          operation. '
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataSetImportTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/datasets:
    get:
      description: "Lists the data sets imported for a specific application. In Amazon\
        \ Web Services Mainframe Modernization, data sets are associated with applications\
        \ deployed on runtime environments. This is known as importing data sets.\
        \ Currently, Amazon Web Services Mainframe Modernization can import data sets\
        \ into catalogs using <a href=\"https://docs.aws.amazon.com/m2/latest/APIReference/API_CreateDataSetImportTask.html\"\
        >CreateDataSetImportTask</a>."
      operationId: list_data_sets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application for which you want to
          list the associated data sets.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The maximum number of objects to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 2000
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token returned from a previous call to this operation.\
          \ This specifies the next item to return. To return to the beginning of\
          \ the list, exclude this parameter."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^\\S{1,2000}$"
          type: string
        style: form
      - description: "The prefix of the data set name, which you can use to filter\
          \ the list of data sets."
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          pattern: "^\\S{1,200}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/datasets/{dataSetName}:
    get:
      description: Gets the details of a specific data set.
      operationId: get_data_set_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application that this data set is
          associated with.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The name of the data set.
        explode: false
        in: path
        name: dataSetName
        required: true
        schema:
          pattern: "^\\S{1,200}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataSetDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/deployments:
    get:
      description: Returns a list of all deployments of a specific application. A
        deployment is a combination of a specific application and a specific version
        of that application. Each deployment is mapped to a particular application
        version.
      operationId: list_deployments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application identifier.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The maximum number of objects to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 2000
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token returned from a previous call to this operation.\
          \ This specifies the next item to return. To return to the beginning of\
          \ the list, exclude this parameter."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^\\S{1,2000}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeploymentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates and starts a deployment to deploy an application into a
        runtime environment.
      operationId: create_deployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application identifier.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeployment_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeploymentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{applicationId}/deployments/{deploymentId}:
    get:
      description: Gets details of a specific deployment with a given deployment identifier.
      operationId: get_deployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The unique identifier for the deployment.
        explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeploymentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/environment/{environmentId}:
    delete:
      description: Deletes a specific application from the specific runtime environment
        where it was previously deployed. You cannot delete a runtime environment
        using DeleteEnvironment if any application has ever been deployed to it. This
        API removes the association of the application with the runtime environment
        so you can delete the environment smoothly.
      operationId: delete_application_from_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application you want to delete.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The unique identifier of the runtime environment where the application
          was previously deployed.
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicationFromEnvironmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/start:
    post:
      description: Starts an application that is currently stopped.
      operationId: start_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application you want to start.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/stop:
    post:
      description: Stops a running application.
      operationId: stop_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application you want to stop.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{applicationId}/versions:
    get:
      description: Returns a list of the application versions for a specific application.
      operationId: list_application_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The maximum number of application versions to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 2000
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token returned from a previous call to this operation.\
          \ This specifies the next item to return. To return to the beginning of\
          \ the list, exclude this parameter."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^\\S{1,2000}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/versions/{applicationVersion}:
    get:
      description: Returns details about a specific version of a specific application.
      operationId: get_application_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      - description: The specific version of the application.
        explode: false
        in: path
        name: applicationVersion
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /engine-versions:
    get:
      description: Lists the available engine versions.
      operationId: list_engine_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The type of target platform.
        explode: true
        in: query
        name: engineType
        required: false
        schema:
          enum:
          - microfocus
          - bluage
          type: string
        style: form
      - description: The maximum number of objects to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 2000
          minimum: 1
          type: integer
        style: form
      - description: "A pagination token returned from a previous call to this operation.\
          \ This specifies the next item to return. To return to the beginning of\
          \ the list, exclude this parameter."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^\\S{1,2000}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEngineVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /environments:
    get:
      description: Lists the runtime environments.
      operationId: list_environments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The engine type for the runtime environment.
        explode: true
        in: query
        name: engineType
        required: false
        schema:
          enum:
          - microfocus
          - bluage
          type: string
        style: form
      - description: The maximum number of runtime environments to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 2000
          minimum: 1
          type: integer
        style: form
      - description: The names of the runtime environments. Must be unique within
          the account.
        explode: true
        in: query
        name: names
        required: false
        schema:
          items:
            $ref: '#/components/schemas/EntityName'
          maxItems: 10
          minItems: 1
          type: array
        style: form
      - description: A pagination token to control the number of runtime environments
          displayed in the list.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^\\S{1,2000}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a runtime environment for a given runtime engine.
      operationId: create_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironment_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /environments/{environmentId}:
    delete:
      description: "Deletes a specific runtime environment. The environment cannot\
        \ contain deployed applications. If it does, you must delete those applications\
        \ before you delete the environment."
      operationId: delete_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the runtime environment you want to
          delete.
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Describes a specific runtime environment.
      operationId: get_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the runtime environment.
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates the configuration details for a specific runtime environment.
      operationId: update_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the runtime environment that you want
          to update.
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          pattern: "^\\S{1,80}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironment_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /signed-bi-url:
    get:
      description: Gets a single sign-on URL that can be used to connect to AWS Blu
        Insights.
      operationId: get_signed_bluinsights_url
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSignedBluinsightsUrlResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{resourceArn}:
    get:
      description: Lists the tags for the specified resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]|):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Adds one or more tags to the specified resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]|):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes one or more tags from the specified resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]|):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$"
          type: string
        style: simple
      - description: The keys of the tags to remove.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CancelBatchJobExecutionResponse:
      properties: {}
      type: object
    ResourceNotFoundException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    ConflictException: {}
    ValidationException: {}
    InternalServerException: {}
    CreateApplicationResponse:
      example:
        applicationVersion: ""
        applicationArn: ""
        applicationId: ""
      properties:
        applicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the application.
          title: applicationArn
        applicationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique application identifier.
          title: applicationId
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version number of the application.
          title: applicationVersion
      required:
      - applicationArn
      - applicationId
      - applicationVersion
      title: CreateApplicationResponse
      type: object
    StringFree65000:
      maxLength: 65000
      minLength: 1
      type: string
    String2000:
      pattern: "^\\S{1,2000}$"
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      title: TagValue
      type: string
    ServiceQuotaExceededException: {}
    CreateDataSetImportTaskResponse:
      example:
        taskId: ""
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The task identifier. This operation is asynchronous. Use
              this identifier with the <a>GetDataSetImportTask</a> operation to obtain
              the status of this task.
          title: taskId
      required:
      - taskId
      title: CreateDataSetImportTaskResponse
      type: object
    DataSetImportList:
      items:
        $ref: '#/components/schemas/DataSetImportItem'
      maxItems: 100
      minItems: 1
      type: array
    CreateDeploymentResponse:
      example:
        deploymentId: ""
      properties:
        deploymentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the deployment.
          title: deploymentId
      required:
      - deploymentId
      title: CreateDeploymentResponse
      type: object
    CreateEnvironmentResponse:
      example:
        environmentId: ""
      properties:
        environmentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the runtime environment.
          title: environmentId
      required:
      - environmentId
      title: CreateEnvironmentResponse
      type: object
    CapacityValue:
      type: integer
    String50:
      pattern: "^\\S{1,50}$"
      title: String50
      type: string
    StorageConfiguration:
      description: Defines the storage configuration for a runtime environment.
      properties:
        efs:
          $ref: '#/components/schemas/StorageConfiguration_efs'
        fsx:
          $ref: '#/components/schemas/StorageConfiguration_fsx'
      title: StorageConfiguration
      type: object
    DeleteApplicationResponse:
      properties: {}
      type: object
    DeleteApplicationFromEnvironmentResponse:
      properties: {}
      type: object
    DeleteEnvironmentResponse:
      properties: {}
      type: object
    GetApplicationResponse:
      example:
        creationTime: ""
        listenerArns: ""
        description: ""
        engineType: ""
        applicationArn: ""
        loadBalancerDnsName: ""
        targetGroupArns: ""
        deployedVersion:
          applicationVersion: ""
          statusReason: ""
          status: ""
        tags: ""
        environmentId: ""
        statusReason: ""
        latestVersion:
          applicationVersion: ""
          statusReason: ""
          creationTime: ""
          status: ""
        roleArn: ""
        lastStartTime: ""
        name: ""
        kmsKeyId: ""
        applicationId: ""
        logGroups: ""
        listenerPorts: ""
        status: ""
      properties:
        applicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the application.
          title: applicationArn
        applicationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The identifier of the application.
          title: applicationId
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when this application was created.
          title: creationTime
        deployedVersion:
          $ref: '#/components/schemas/GetApplicationResponse_deployedVersion'
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          - description: The description of the application.
          title: description
        engineType:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: The type of the target platform for the application.
          title: engineType
        environmentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The identifier of the runtime environment where you want
              to deploy the application.
          title: environmentId
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of a customer managed key.
          title: kmsKeyId
        lastStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when you last started the application. Null
              until the application runs for the first time.
          title: lastStartTime
        latestVersion:
          $ref: '#/components/schemas/GetApplicationResponse_latestVersion'
        listenerArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: The Amazon Resource Name (ARN) for the network load balancer
              listener created in your Amazon Web Services account. Amazon Web Services
              Mainframe Modernization creates this listener for you the first time
              you deploy an application.
          title: listenerArns
        listenerPorts:
          allOf:
          - $ref: '#/components/schemas/PortList'
          - description: The port associated with the network load balancer listener
              created in your Amazon Web Services account.
          title: listenerPorts
        loadBalancerDnsName:
          allOf:
          - $ref: '#/components/schemas/String100'
          - description: The public DNS name of the load balancer created in your
              Amazon Web Services account.
          title: loadBalancerDnsName
        logGroups:
          allOf:
          - $ref: '#/components/schemas/LogGroupSummaries'
          - description: The list of log summaries. Each log summary includes the
              log type as well as the log group identifier. These are CloudWatch logs.
              Amazon Web Services Mainframe Modernization pushes the application log
              to CloudWatch under the customer's account.
          title: logGroups
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The unique identifier of the application.
          title: name
        roleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the role associated with
              the application.
          title: roleArn
        status:
          allOf:
          - $ref: '#/components/schemas/ApplicationLifecycle'
          - description: The status of the application.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for the reported status.
          title: statusReason
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of tags associated with the application.
          title: tags
        targetGroupArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: Returns the Amazon Resource Names (ARNs) of the target groups
              that are attached to the network load balancer.
          title: targetGroupArns
      required:
      - applicationArn
      - applicationId
      - creationTime
      - engineType
      - latestVersion
      - name
      - status
      title: GetApplicationResponse
      type: object
    GetApplicationVersionResponse:
      example:
        applicationVersion: ""
        statusReason: ""
        creationTime: ""
        definitionContent: ""
        name: ""
        description: ""
        status: ""
      properties:
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The specific version of the application.
          title: applicationVersion
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the application version was created.
          title: creationTime
        definitionContent:
          allOf:
          - $ref: '#/components/schemas/StringFree65000'
          - description: The content of the application definition. This is a JSON
              object that contains the resource configuration and definitions that
              identify an application.
          title: definitionContent
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          - description: The application description.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the application version.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/ApplicationVersionLifecycle'
          - description: The status of the application version.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for the reported status.
          title: statusReason
      required:
      - applicationVersion
      - creationTime
      - definitionContent
      - name
      - status
      title: GetApplicationVersionResponse
      type: object
    GetBatchJobExecutionResponse:
      example:
        jobName: ""
        executionId: ""
        jobId: ""
        returnCode: ""
        batchJobIdentifier:
          scriptBatchJobIdentifier:
            scriptName: ""
          fileBatchJobIdentifier:
            folderPath: ""
            fileName: ""
        jobUser: ""
        statusReason: ""
        startTime: ""
        endTime: ""
        applicationId: ""
        jobType: ""
        status: ""
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The identifier of the application.
          title: applicationId
        batchJobIdentifier:
          $ref: '#/components/schemas/GetBatchJobExecutionResponse_batchJobIdentifier'
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the batch job execution ended.
          title: endTime
        executionId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier for this batch job execution.
          title: executionId
        jobId:
          allOf:
          - $ref: '#/components/schemas/String100'
          - description: The unique identifier for this batch job.
          title: jobId
        jobName:
          allOf:
          - $ref: '#/components/schemas/String100'
          - description: The name of this batch job.
          title: jobName
        jobType:
          allOf:
          - $ref: '#/components/schemas/BatchJobType'
          - description: The type of job.
          title: jobType
        jobUser:
          allOf:
          - $ref: '#/components/schemas/String100'
          - description: The user for the job.
          title: jobUser
        returnCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The batch job return code from either the Blu Age or Micro\
              \ Focus runtime engines. For more information, see <a href=\"https://www.ibm.com/docs/en/was/8.5.5?topic=model-batch-return-codes\"\
              >Batch return codes</a> in the <i>IBM WebSphere Application Server</i>\
              \ documentation."
          title: returnCode
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the batch job execution started.
          title: startTime
        status:
          allOf:
          - $ref: '#/components/schemas/BatchJobExecutionStatus'
          - description: The status of the batch job execution.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for the reported status.
          title: statusReason
      required:
      - applicationId
      - executionId
      - startTime
      - status
      title: GetBatchJobExecutionResponse
      type: object
    GetDataSetDetailsResponse:
      example:
        blocksize: ""
        creationTime: ""
        dataSetOrg:
          ps:
            format: ""
            encoding: ""
          gdg:
            limit: ""
            rollDisposition: ""
          vsam:
            alternateKeys: ""
            cacheAtStartup: ""
            compressed: ""
            recordFormat: ""
            encoding: ""
            primaryKey:
              offset: ""
              length: ""
              name: ""
          po:
            format: ""
            encoding: ""
        lastReferencedTime: ""
        recordLength: ""
        dataSetName: ""
        lastUpdatedTime: ""
        location: ""
      properties:
        blocksize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: 'The size of the block on disk. '
          title: blocksize
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the data set was created.
          title: creationTime
        dataSetName:
          allOf:
          - $ref: '#/components/schemas/String200'
          - description: The name of the data set.
          title: dataSetName
        dataSetOrg:
          $ref: '#/components/schemas/GetDataSetDetailsResponse_dataSetOrg'
        lastReferencedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the data set was referenced.
          title: lastReferencedTime
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the data set was updated.
          title: lastUpdatedTime
        location:
          allOf:
          - $ref: '#/components/schemas/String2000'
          - description: The location where the data set is stored.
          title: location
        recordLength:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The length of records in the data set.
          title: recordLength
      required:
      - dataSetName
      title: GetDataSetDetailsResponse
      type: object
    GetDataSetImportTaskResponse:
      example:
        summary:
          total: ""
          inProgress: ""
          pending: ""
          failed: ""
          succeeded: ""
        taskId: ""
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/DataSetTaskLifecycle'
          - description: The status of the task.
          title: status
        summary:
          $ref: '#/components/schemas/GetDataSetImportTaskResponse_summary'
        taskId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The task identifier.
          title: taskId
      required:
      - status
      - taskId
      title: GetDataSetImportTaskResponse
      type: object
    GetDeploymentResponse:
      example:
        applicationVersion: ""
        environmentId: ""
        statusReason: ""
        creationTime: ""
        deploymentId: ""
        applicationId: ""
        status: ""
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the application.
          title: applicationId
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The application version.
          title: applicationVersion
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the deployment was created.
          title: creationTime
        deploymentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the deployment.
          title: deploymentId
        environmentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the runtime environment.
          title: environmentId
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentLifecycle'
          - description: The status of the deployment.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for the reported status.
          title: statusReason
      required:
      - applicationId
      - applicationVersion
      - creationTime
      - deploymentId
      - environmentId
      - status
      title: GetDeploymentResponse
      type: object
    GetEnvironmentResponse:
      example:
        engineVersion: ""
        loadBalancerArn: ""
        creationTime: ""
        instanceType: ""
        description: ""
        engineType: ""
        environmentArn: ""
        pendingMaintenance:
          engineVersion: ""
          schedule:
            startTime: ""
            endTime: ""
        highAvailabilityConfig:
          desiredCapacity: ""
        tags: ""
        actualCapacity: ""
        environmentId: ""
        statusReason: ""
        securityGroupIds: ""
        preferredMaintenanceWindow: ""
        vpcId: ""
        name: ""
        publiclyAccessible: ""
        storageConfigurations: ""
        kmsKeyId: ""
        status: ""
        subnetIds: ""
      properties:
        actualCapacity:
          allOf:
          - $ref: '#/components/schemas/CapacityValue'
          - description: "The number of instances included in the runtime environment.\
              \ A standalone runtime environment has a maxiumum of one instance. Currently,\
              \ a high availability runtime environment has a maximum of two instances. "
          title: actualCapacity
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the runtime environment was created.
          title: creationTime
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          - description: The description of the runtime environment.
          title: description
        engineType:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: The target platform for the runtime environment.
          title: engineType
        engineVersion:
          allOf:
          - $ref: '#/components/schemas/EngineVersion'
          - description: The version of the runtime engine.
          title: engineVersion
        environmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the runtime environment.
          title: environmentArn
        environmentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the runtime environment.
          title: environmentId
        highAvailabilityConfig:
          $ref: '#/components/schemas/GetEnvironmentResponse_highAvailabilityConfig'
        instanceType:
          allOf:
          - $ref: '#/components/schemas/String20'
          - description: The type of instance underlying the runtime environment.
          title: instanceType
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of a customer managed key.
          title: kmsKeyId
        loadBalancerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the load balancer used
              with the runtime environment.
          title: loadBalancerArn
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the runtime environment. Must be unique within
              the account.
          title: name
        pendingMaintenance:
          $ref: '#/components/schemas/GetEnvironmentResponse_pendingMaintenance'
        preferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String50'
          - description: "Configures the maintenance window you want for the runtime\
              \ environment. If you do not provide a value, a random system-generated\
              \ value will be assigned."
          title: preferredMaintenanceWindow
        publiclyAccessible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: 'Whether applications running in this runtime environment
              are publicly accessible. '
          title: publiclyAccessible
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/String50List'
          - description: The unique identifiers of the security groups assigned to
              this runtime environment.
          title: securityGroupIds
        status:
          allOf:
          - $ref: '#/components/schemas/EnvironmentLifecycle'
          - description: The status of the runtime environment.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for the reported status.
          title: statusReason
        storageConfigurations:
          allOf:
          - $ref: '#/components/schemas/StorageConfigurationList'
          - description: The storage configurations defined for the runtime environment.
          title: storageConfigurations
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/String50List'
          - description: The unique identifiers of the subnets assigned to this runtime
              environment.
          title: subnetIds
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags defined for this runtime environment.
          title: tags
        vpcId:
          allOf:
          - $ref: '#/components/schemas/String50'
          - description: The unique identifier for the VPC used with this runtime
              environment.
          title: vpcId
      required:
      - creationTime
      - engineType
      - engineVersion
      - environmentArn
      - environmentId
      - instanceType
      - name
      - securityGroupIds
      - status
      - subnetIds
      - vpcId
      title: GetEnvironmentResponse
      type: object
    GetSignedBluinsightsUrlResponse:
      example:
        signedBiUrl: ""
      properties:
        signedBiUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Single sign-on AWS Blu Insights URL.
          title: signedBiUrl
      required:
      - signedBiUrl
      title: GetSignedBluinsightsUrlResponse
      type: object
    ListApplicationVersionsResponse:
      example:
        applicationVersions: ""
        nextToken: ""
      properties:
        applicationVersions:
          allOf:
          - $ref: '#/components/schemas/ApplicationVersionSummaryList'
          - description: The list of application versions.
          title: applicationVersions
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are more items to return, this contains a token\
              \ that is passed to a subsequent call to this operation to retrieve\
              \ the next set of items."
          title: nextToken
      required:
      - applicationVersions
      title: ListApplicationVersionsResponse
      type: object
    ListApplicationsResponse:
      example:
        nextToken: ""
        applications: ""
      properties:
        applications:
          allOf:
          - $ref: '#/components/schemas/ApplicationSummaryList'
          - description: Returns a list of summary details for all the applications
              in a runtime environment.
          title: applications
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's returned when the response doesn't
              contain all applications.
          title: nextToken
      required:
      - applications
      title: ListApplicationsResponse
      type: object
    EntityName:
      pattern: "^[A-Za-z0-9][A-Za-z0-9_\\-]{1,59}$"
      title: EntityName
      type: string
    ListBatchJobDefinitionsResponse:
      example:
        batchJobDefinitions: ""
        nextToken: ""
      properties:
        batchJobDefinitions:
          allOf:
          - $ref: '#/components/schemas/BatchJobDefinitions'
          - description: The list of batch job definitions.
          title: batchJobDefinitions
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are more items to return, this contains a token\
              \ that is passed to a subsequent call to this operation to retrieve\
              \ the next set of items."
          title: nextToken
      required:
      - batchJobDefinitions
      title: ListBatchJobDefinitionsResponse
      type: object
    ListBatchJobExecutionsResponse:
      example:
        batchJobExecutions: ""
        nextToken: ""
      properties:
        batchJobExecutions:
          allOf:
          - $ref: '#/components/schemas/BatchJobExecutionSummaryList'
          - description: Returns a list of batch job executions for an application.
          title: batchJobExecutions
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's returned when the response doesn't
              contain all batch job executions.
          title: nextToken
      required:
      - batchJobExecutions
      title: ListBatchJobExecutionsResponse
      type: object
    Identifier:
      pattern: "^\\S{1,80}$"
      title: Identifier
      type: string
    ListDataSetImportHistoryResponse:
      example:
        dataSetImportTasks: ""
        nextToken: ""
      properties:
        dataSetImportTasks:
          allOf:
          - $ref: '#/components/schemas/DataSetImportTaskList'
          - description: The data set import tasks.
          title: dataSetImportTasks
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are more items to return, this contains a token\
              \ that is passed to a subsequent call to this operation to retrieve\
              \ the next set of items."
          title: nextToken
      required:
      - dataSetImportTasks
      title: ListDataSetImportHistoryResponse
      type: object
    ListDataSetsResponse:
      example:
        nextToken: ""
        dataSets: ""
      properties:
        dataSets:
          allOf:
          - $ref: '#/components/schemas/DataSetsSummaryList'
          - description: "The list of data sets, containing information including\
              \ the creation time, the data set name, the data set organization, the\
              \ data set format, and the last time the data set was referenced or\
              \ updated."
          title: dataSets
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are more items to return, this contains a token\
              \ that is passed to a subsequent call to this operation to retrieve\
              \ the next set of items."
          title: nextToken
      required:
      - dataSets
      title: ListDataSetsResponse
      type: object
    ListDeploymentsResponse:
      example:
        deployments: ""
        nextToken: ""
      properties:
        deployments:
          allOf:
          - $ref: '#/components/schemas/DeploymentList'
          - description: The list of deployments that is returned.
          title: deployments
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are more items to return, this contains a token\
              \ that is passed to a subsequent call to this operation to retrieve\
              \ the next set of items."
          title: nextToken
      required:
      - deployments
      title: ListDeploymentsResponse
      type: object
    ListEngineVersionsResponse:
      example:
        engineVersions: ""
        nextToken: ""
      properties:
        engineVersions:
          allOf:
          - $ref: '#/components/schemas/EngineVersionsSummaryList'
          - description: Returns the engine versions.
          title: engineVersions
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are more items to return, this contains a token\
              \ that is passed to a subsequent call to this operation to retrieve\
              \ the next set of items."
          title: nextToken
      required:
      - engineVersions
      title: ListEngineVersionsResponse
      type: object
    ListEnvironmentsResponse:
      example:
        environments: ""
        nextToken: ""
      properties:
        environments:
          allOf:
          - $ref: '#/components/schemas/EnvironmentSummaryList'
          - description: 'Returns a list of summary details for all the runtime environments
              in your account. '
          title: environments
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's returned when the response doesn't
              contain all the runtime environments.
          title: nextToken
      required:
      - environments
      title: ListEnvironmentsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the resource.
          title: tags
      required:
      - tags
      title: ListTagsForResourceResponse
      type: object
    StartApplicationResponse:
      properties: {}
      type: object
    StartBatchJobResponse:
      example:
        executionId: ""
      properties:
        executionId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of this execution of the batch job.
          title: executionId
      required:
      - executionId
      title: StartBatchJobResponse
      type: object
    FileBatchJobIdentifier:
      description: A batch job identifier in which the batch job to run is identified
        by the file name and the relative path to the file name.
      properties:
        fileName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The file name for the batch job identifier.
          title: fileName
        folderPath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The relative path to the file name for the batch job identifier.
          title: folderPath
      required:
      - fileName
      title: FileBatchJobIdentifier
      type: object
    ScriptBatchJobIdentifier:
      description: A batch job identifier in which the batch job to run is identified
        by the script name.
      properties:
        scriptName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the script containing the batch job definition.
          title: scriptName
      required:
      - scriptName
      title: ScriptBatchJobIdentifier
      type: object
    BatchParamValue:
      description: Parameter value can be of up to 44 alphanumeric characters.
      maxLength: 44
      minLength: 0
      title: BatchParamValue
      type: string
    StopApplicationResponse:
      properties: {}
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: ^(?!aws:).+$
      title: TagKey
      type: string
    UpdateApplicationResponse:
      example:
        applicationVersion: ""
      properties:
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The new version of the application.
          title: applicationVersion
      required:
      - applicationVersion
      title: UpdateApplicationResponse
      type: object
    UpdateEnvironmentResponse:
      example:
        environmentId: ""
      properties:
        environmentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the runtime environment that was
              updated.
          title: environmentId
      required:
      - environmentId
      title: UpdateEnvironmentResponse
      type: object
    Boolean:
      type: boolean
    Integer:
      title: Integer
      type: integer
    String:
      type: string
    AlternateKey:
      description: "Defines an alternate key. This value is optional. A legacy data\
        \ set might not have any alternate key defined but if those alternate keys\
        \ definitions exist, provide them, as some applications will make use of them."
      properties:
        allowDuplicates:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the alternate key values are supposed to
              be unique for the given data set.
          title: allowDuplicates
        length:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: A strictly positive integer value representing the length
              of the alternate key.
          title: length
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the alternate key.
          title: name
        offset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: A positive integer value representing the offset to mark
              the start of the alternate key part in the record byte array.
          title: offset
      required:
      - length
      - offset
      title: AlternateKey
      type: object
    AlternateKeyList:
      items:
        $ref: '#/components/schemas/AlternateKey'
      type: array
    ApplicationDeploymentLifecycle:
      enum:
      - Deploying
      - Deployed
      title: ApplicationDeploymentLifecycle
      type: string
    ApplicationLifecycle:
      enum:
      - Creating
      - Created
      - Available
      - Ready
      - Starting
      - Running
      - Stopping
      - Stopped
      - Failed
      - Deleting
      - Deleting From Environment
      title: ApplicationLifecycle
      type: string
    Arn:
      pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]|):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$"
      title: Arn
      type: string
    Version:
      minimum: 1
      type: integer
    Timestamp:
      format: date-time
      type: string
    EntityDescription:
      maxLength: 500
      minLength: 0
      type: string
    EngineType:
      enum:
      - microfocus
      - bluage
      title: EngineType
      type: string
    ApplicationVersionLifecycle:
      enum:
      - Creating
      - Available
      - Failed
      title: ApplicationVersionLifecycle
      type: string
    ApplicationSummary:
      description: A subset of the possible application attributes. Used in the application
        list.
      properties:
        applicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the application.
          title: applicationArn
        applicationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the application.
          title: applicationId
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the application.
          title: applicationVersion
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the application was created.
          title: creationTime
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/ApplicationDeploymentLifecycle'
          - description: Indicates either an ongoing deployment or if the application
              has ever deployed successfully.
          title: deploymentStatus
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          - description: The description of the application.
          title: description
        engineType:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: The type of the target platform for this application.
          title: engineType
        environmentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the runtime environment that hosts
              this application.
          title: environmentId
        lastStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when you last started the application. Null
              until the application runs for the first time.
          title: lastStartTime
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the application.
          title: name
        roleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the role associated with
              the application.
          title: roleArn
        status:
          allOf:
          - $ref: '#/components/schemas/ApplicationLifecycle'
          - description: The status of the application.
          title: status
        versionStatus:
          allOf:
          - $ref: '#/components/schemas/ApplicationVersionLifecycle'
          - description: Indicates the status of the latest version of the application.
          title: versionStatus
      required:
      - applicationArn
      - applicationId
      - applicationVersion
      - creationTime
      - engineType
      - name
      - status
      title: ApplicationSummary
      type: object
    ApplicationSummaryList:
      items:
        $ref: '#/components/schemas/ApplicationSummary'
      type: array
    ApplicationVersionSummary:
      description: Defines an application version summary.
      properties:
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The application version.
          title: applicationVersion
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the application version was created.
          title: creationTime
        status:
          allOf:
          - $ref: '#/components/schemas/ApplicationVersionLifecycle'
          - description: The status of the application.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for the reported status.
          title: statusReason
      required:
      - applicationVersion
      - creationTime
      - status
      title: ApplicationVersionSummary
      type: object
    ApplicationVersionSummaryList:
      items:
        $ref: '#/components/schemas/ApplicationVersionSummary'
      type: array
    ArnList:
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 1
      type: array
    FileBatchJobDefinition:
      description: A file containing a batch job definition.
      properties:
        fileName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the file containing the batch job definition.
          title: fileName
        folderPath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The path to the file containing the batch job definition.
          title: folderPath
      required:
      - fileName
      title: FileBatchJobDefinition
      type: object
    ScriptBatchJobDefinition:
      description: A batch job definition contained in a script.
      properties:
        scriptName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the script containing the batch job definition.
          title: scriptName
      required:
      - scriptName
      title: ScriptBatchJobDefinition
      type: object
    BatchJobDefinition:
      description: Defines the details of a batch job.
      properties:
        fileBatchJobDefinition:
          $ref: '#/components/schemas/BatchJobDefinition_fileBatchJobDefinition'
        scriptBatchJobDefinition:
          $ref: '#/components/schemas/BatchJobDefinition_scriptBatchJobDefinition'
      title: BatchJobDefinition
      type: object
    BatchJobDefinitions:
      items:
        $ref: '#/components/schemas/BatchJobDefinition'
      type: array
    BatchJobExecutionStatus:
      enum:
      - Submitting
      - Holding
      - Dispatching
      - Running
      - Cancelling
      - Cancelled
      - Succeeded
      - Failed
      - Succeeded With Warning
      title: BatchJobExecutionStatus
      type: string
    BatchJobIdentifier:
      description: Identifies a specific batch job.
      properties:
        fileBatchJobIdentifier:
          $ref: '#/components/schemas/StartBatchJob_request_batchJobIdentifier_fileBatchJobIdentifier'
        scriptBatchJobIdentifier:
          $ref: '#/components/schemas/StartBatchJob_request_batchJobIdentifier_scriptBatchJobIdentifier'
      title: BatchJobIdentifier
      type: object
    String100:
      pattern: "^\\S{1,100}$"
      type: string
    BatchJobType:
      enum:
      - VSE
      - JES2
      - JES3
      title: BatchJobType
      type: string
    BatchJobExecutionSummary:
      description: A subset of the possible batch job attributes. Used in the batch
        job list.
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the application that hosts this
              batch job.
          title: applicationId
        batchJobIdentifier:
          $ref: '#/components/schemas/GetBatchJobExecutionResponse_batchJobIdentifier'
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when this batch job execution ended.
          title: endTime
        executionId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of this execution of the batch job.
          title: executionId
        jobId:
          allOf:
          - $ref: '#/components/schemas/String100'
          - description: The unique identifier of a particular batch job.
          title: jobId
        jobName:
          allOf:
          - $ref: '#/components/schemas/String100'
          - description: The name of a particular batch job.
          title: jobName
        jobType:
          allOf:
          - $ref: '#/components/schemas/BatchJobType'
          - description: The type of a particular batch job execution.
          title: jobType
        returnCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The batch job return code from either the Blu Age or Micro\
              \ Focus runtime engines. For more information, see <a href=\"https://www.ibm.com/docs/en/was/8.5.5?topic=model-batch-return-codes\"\
              >Batch return codes</a> in the <i>IBM WebSphere Application Server</i>\
              \ documentation."
          title: returnCode
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when a particular batch job execution started.
          title: startTime
        status:
          allOf:
          - $ref: '#/components/schemas/BatchJobExecutionStatus'
          - description: The status of a particular batch job execution.
          title: status
      required:
      - applicationId
      - executionId
      - startTime
      - status
      title: BatchJobExecutionSummary
      type: object
    BatchJobExecutionSummaryList:
      items:
        $ref: '#/components/schemas/BatchJobExecutionSummary'
      type: array
    BatchJobParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/BatchParamValue'
      description: Job parameters are optional. Can contain up to 500 entries.
      maxProperties: 500
      minProperties: 0
      type: object
    BatchParamKey:
      description: "<p>See https://www.ibm.com/docs/en/workload-automation/9.3.0?topic=zos-coding-variables-in-jcl\
        \ to get details about limits for both keys and values: 8 for keys (variable\
        \ names), 44 for values (variable values) In addition, keys will be only alphabetic\
        \ characters and digits, without any space or special characters (dash, underscore,\
        \ etc ...)</p> <p>Parameter key: the first character must be alphabetic. Can\
        \ be of up to 8 alphanumeric characters.</p>"
      maxLength: 8
      minLength: 1
      pattern: "^[A-Za-z][A-Za-z0-9]{1,7}$"
      type: string
    CancelBatchJobExecutionRequest:
      properties: {}
      title: CancelBatchJobExecutionRequest
      type: object
    Definition:
      description: 'The application definition for a particular application. '
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/StringFree65000'
          - description: The content of the application definition. This is a JSON
              object that contains the resource configuration/definitions that identify
              an application.
          title: content
        s3Location:
          allOf:
          - $ref: '#/components/schemas/String2000'
          - description: The S3 bucket that contains the application definition.
          title: s3Location
      title: Definition
      type: object
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 200
      minProperties: 0
      type: object
    CreateApplicationRequest:
      example:
        clientToken: ""
        roleArn: ""
        name: ""
        description: ""
        engineType: ""
        definition:
          s3Location: ""
          content: ""
        kmsKeyId: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Unique, case-sensitive identifier the service generates\
              \ to ensure the idempotency of the request to create an application.\
              \ The service generates the clientToken when the API call is triggered.\
              \ The token expires after one hour, so if you retry the API within this\
              \ timeframe with the same clientToken, you will get the same response.\
              \ The service also handles deleting the clientToken after it expires. "
        definition:
          $ref: '#/components/schemas/CreateApplicationRequest_definition'
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          - description: The description of the application.
        engineType:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: The type of the target platform for this application.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of a customer managed key.
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The unique identifier of the application.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) that identifies a role that
              the application uses to access Amazon Web Services resources that are
              not part of the application or are in a different Amazon Web Services
              account.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of tags to apply to the application.
      required:
      - definition
      - engineType
      - name
      title: CreateApplicationRequest
      type: object
    DataSetImportConfig:
      description: Identifies one or more data sets you want to import with the <a>CreateDataSetImportTask</a>
        operation.
      properties:
        dataSets:
          allOf:
          - $ref: '#/components/schemas/DataSetImportList'
          - description: The data sets.
          title: dataSets
        s3Location:
          allOf:
          - $ref: '#/components/schemas/String2000'
          - description: The Amazon S3 location of the data sets.
          title: s3Location
      title: DataSetImportConfig
      type: object
    CreateDataSetImportTaskRequest:
      example:
        importConfig:
          dataSets: ""
          s3Location: ""
        clientToken: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " Unique, case-sensitive identifier you provide to ensure\
              \ the idempotency of the request to create a data set import. The service\
              \ generates the clientToken when the API call is triggered. The token\
              \ expires after one hour, so if you retry the API within this timeframe\
              \ with the same clientToken, you will get the same response. The service\
              \ also handles deleting the clientToken after it expires. "
        importConfig:
          $ref: '#/components/schemas/CreateDataSetImportTaskRequest_importConfig'
      required:
      - importConfig
      title: CreateDataSetImportTaskRequest
      type: object
    CreateDeploymentRequest:
      example:
        applicationVersion: ""
        environmentId: ""
        clientToken: ""
      properties:
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the application to deploy.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Unique, case-sensitive identifier you provide to ensure\
              \ the idempotency of the request to create a deployment. The service\
              \ generates the clientToken when the API call is triggered. The token\
              \ expires after one hour, so if you retry the API within this timeframe\
              \ with the same clientToken, you will get the same response. The service\
              \ also handles deleting the clientToken after it expires. "
        environmentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The identifier of the runtime environment where you want
              to deploy this application.
      required:
      - applicationVersion
      - environmentId
      title: CreateDeploymentRequest
      type: object
    EngineVersion:
      pattern: "^\\S{1,10}$"
      type: string
    HighAvailabilityConfig:
      description: Defines the details of a high availability configuration.
      properties:
        desiredCapacity:
          allOf:
          - $ref: '#/components/schemas/CapacityValue'
          - description: The number of instances in a high availability configuration.
              The minimum possible value is 1 and the maximum is 100.
          title: desiredCapacity
      required:
      - desiredCapacity
      title: HighAvailabilityConfig
      type: object
    String20:
      pattern: "^\\S{1,20}$"
      title: String20
      type: string
    String50List:
      items:
        $ref: '#/components/schemas/String50'
      type: array
    StorageConfigurationList:
      items:
        $ref: '#/components/schemas/StorageConfiguration'
      type: array
    CreateEnvironmentRequest:
      example:
        engineVersion: ""
        clientToken: ""
        instanceType: ""
        description: ""
        engineType: ""
        highAvailabilityConfig:
          desiredCapacity: ""
        tags: ""
        securityGroupIds: ""
        preferredMaintenanceWindow: ""
        name: ""
        publiclyAccessible: ""
        storageConfigurations: ""
        kmsKeyId: ""
        subnetIds: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Unique, case-sensitive identifier you provide to ensure\
              \ the idempotency of the request to create an environment. The service\
              \ generates the clientToken when the API call is triggered. The token\
              \ expires after one hour, so if you retry the API within this timeframe\
              \ with the same clientToken, you will get the same response. The service\
              \ also handles deleting the clientToken after it expires. "
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          - description: The description of the runtime environment.
        engineType:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: The engine type for the runtime environment.
        engineVersion:
          allOf:
          - $ref: '#/components/schemas/EngineVersion'
          - description: The version of the engine type for the runtime environment.
        highAvailabilityConfig:
          $ref: '#/components/schemas/CreateEnvironmentRequest_highAvailabilityConfig'
        instanceType:
          allOf:
          - $ref: '#/components/schemas/String20'
          - description: The type of instance for the runtime environment.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of a customer managed key.
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the runtime environment. Must be unique within
              the account.
        preferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String50'
          - description: "Configures the maintenance window you want for the runtime\
              \ environment. If you do not provide a value, a random system-generated\
              \ value will be assigned."
        publiclyAccessible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the runtime environment is publicly accessible.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/String50List'
          - description: The list of security groups for the VPC associated with this
              runtime environment.
        storageConfigurations:
          allOf:
          - $ref: '#/components/schemas/StorageConfigurationList'
          - description: Optional. The storage configurations for this runtime environment.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/String50List'
          - description: The list of subnets associated with the VPC for this runtime
              environment.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the runtime environment.
      required:
      - engineType
      - instanceType
      - name
      title: CreateEnvironmentRequest
      type: object
    DatasetOrgAttributes:
      description: "Additional details about the data set. Different attributes correspond\
        \ to different data set organizations. The values are populated based on datasetOrg,\
        \ storageType and backend (Blu Age or Micro Focus)."
      properties:
        gdg:
          $ref: '#/components/schemas/DatasetOrgAttributes_gdg'
        po:
          $ref: '#/components/schemas/DatasetOrgAttributes_po'
        ps:
          $ref: '#/components/schemas/DatasetOrgAttributes_ps'
        vsam:
          $ref: '#/components/schemas/DatasetOrgAttributes_vsam'
      title: DatasetOrgAttributes
      type: object
    RecordLength:
      description: The length of the records in the data set.
      properties:
        max:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The maximum record length. In case of fixed, both minimum\
              \ and maximum are the same."
          title: max
        min:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The minimum record length of a record.
          title: min
      required:
      - max
      - min
      title: RecordLength
      type: object
    DataSet:
      description: Defines a data set.
      properties:
        datasetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The logical identifier for a specific data set (in mainframe
              format).
          title: datasetName
        datasetOrg:
          $ref: '#/components/schemas/DataSet_datasetOrg'
        recordLength:
          $ref: '#/components/schemas/DataSet_recordLength'
        relativePath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The relative location of the data set in the database or
              file system. '
          title: relativePath
        storageType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The storage type of the data set: database or file system.\
              \ For Micro Focus, database corresponds to datastore and file system\
              \ corresponds to EFS/FSX. For Blu Age, there is no support of file system\
              \ and database corresponds to Blusam. "
          title: storageType
      required:
      - datasetName
      - datasetOrg
      - recordLength
      title: DataSet
      type: object
    ExternalLocation:
      description: Defines an external storage location.
      properties:
        s3Location:
          allOf:
          - $ref: '#/components/schemas/String2000'
          - description: The URI of the Amazon S3 bucket.
          title: s3Location
      title: ExternalLocation
      type: object
    DataSetImportItem:
      description: Identifies a specific data set to import from an external location.
      properties:
        dataSet:
          $ref: '#/components/schemas/DataSetImportItem_dataSet'
        externalLocation:
          $ref: '#/components/schemas/DataSetImportItem_externalLocation'
      required:
      - dataSet
      - externalLocation
      title: DataSetImportItem
      type: object
    DataSetImportSummary:
      description: Represents a summary of data set imports.
      properties:
        failed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of data set imports that have failed.
          title: failed
        inProgress:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of data set imports that are in progress.
          title: inProgress
        pending:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of data set imports that are pending.
          title: pending
        succeeded:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of data set imports that have succeeded.
          title: succeeded
        total:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of data set imports.
          title: total
      required:
      - failed
      - inProgress
      - pending
      - succeeded
      - total
      title: DataSetImportSummary
      type: object
    DataSetTaskLifecycle:
      enum:
      - Creating
      - Running
      - Completed
      title: DataSetTaskLifecycle
      type: string
    DataSetImportTask:
      description: Contains information about a data set import task.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/DataSetTaskLifecycle'
          - description: The status of the data set import task.
          title: status
        summary:
          $ref: '#/components/schemas/DataSetImportTask_summary'
        taskId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The identifier of the data set import task.
          title: taskId
      required:
      - status
      - summary
      - taskId
      title: DataSetImportTask
      type: object
    DataSetImportTaskList:
      items:
        $ref: '#/components/schemas/DataSetImportTask'
      type: array
    String200:
      pattern: "^\\S{1,200}$"
      type: string
    DataSetSummary:
      description: A subset of the possible data set attributes.
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the data set was created.
          title: creationTime
        dataSetName:
          allOf:
          - $ref: '#/components/schemas/String200'
          - description: The name of the data set.
          title: dataSetName
        dataSetOrg:
          allOf:
          - $ref: '#/components/schemas/String20'
          - description: The type of data set. The only supported value is VSAM.
          title: dataSetOrg
        format:
          allOf:
          - $ref: '#/components/schemas/String20'
          - description: 'The format of the data set. '
          title: format
        lastReferencedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the data set was referenced.
          title: lastReferencedTime
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the data set was updated.
          title: lastUpdatedTime
      required:
      - dataSetName
      title: DataSetSummary
      type: object
    DataSetsSummaryList:
      items:
        $ref: '#/components/schemas/DataSetSummary'
      type: array
    GdgDetailAttributes:
      description: "The required attributes for a generation data group data set.\
        \ A generation data set is one of a collection of successive, historically\
        \ related, catalogued data sets that together are known as a generation data\
        \ group (GDG). Use this structure when you want to import a GDG. For more\
        \ information on GDG, see <a href=\"https://www.ibm.com/docs/en/zos/2.3.0?topic=guide-generation-data-sets\"\
        >Generation data sets</a>."
      properties:
        limit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The maximum number of generation data sets, up to 255, in\
              \ a GDG."
          title: limit
        rollDisposition:
          allOf:
          - $ref: '#/components/schemas/String50'
          - description: The disposition of the data set in the catalog.
          title: rollDisposition
      title: GdgDetailAttributes
      type: object
    PoDetailAttributes:
      description: The supported properties for a PO type data set.
      properties:
        encoding:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The character set encoding of the data set.
          title: encoding
        format:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The format of the data set records.
          title: format
      required:
      - encoding
      - format
      title: PoDetailAttributes
      type: object
    PsDetailAttributes:
      description: The supported properties for a PS type data set.
      properties:
        encoding:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The character set encoding of the data set.
          title: encoding
        format:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The format of the data set records.
          title: format
      required:
      - encoding
      - format
      title: PsDetailAttributes
      type: object
    VsamDetailAttributes:
      description: The attributes of a VSAM type data set.
      properties:
        alternateKeys:
          allOf:
          - $ref: '#/components/schemas/AlternateKeyList'
          - description: "The alternate key definitions, if any. A legacy dataset\
              \ might not have any alternate key defined, but if those alternate keys\
              \ definitions exist, provide them as some applications will make use\
              \ of them."
          title: alternateKeys
        cacheAtStartup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If set to True, enforces loading the data set into cache\
              \ before it’s used by the application."
          title: cacheAtStartup
        compressed:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether indexes for this dataset are stored as\
              \ compressed values. If you have a large data set (typically &gt; 100\
              \ Mb), consider setting this flag to True."
          title: compressed
        encoding:
          allOf:
          - $ref: '#/components/schemas/String20'
          - description: "The character set used by the data set. Can be ASCII, EBCDIC,\
              \ or unknown."
          title: encoding
        primaryKey:
          $ref: '#/components/schemas/VsamDetailAttributes_primaryKey'
        recordFormat:
          allOf:
          - $ref: '#/components/schemas/String20'
          - description: The record format of the data set.
          title: recordFormat
      title: VsamDetailAttributes
      type: object
    DatasetDetailOrgAttributes:
      description: "Additional details about the data set. Different attributes correspond\
        \ to different data set organizations. The values are populated based on datasetOrg,\
        \ storageType and backend (Blu Age or Micro Focus)."
      properties:
        gdg:
          $ref: '#/components/schemas/DatasetDetailOrgAttributes_gdg'
        po:
          $ref: '#/components/schemas/DatasetDetailOrgAttributes_po'
        ps:
          $ref: '#/components/schemas/DatasetDetailOrgAttributes_ps'
        vsam:
          $ref: '#/components/schemas/DatasetDetailOrgAttributes_vsam'
      title: DatasetDetailOrgAttributes
      type: object
    GdgAttributes:
      description: "The required attributes for a generation data group data set.\
        \ A generation data set is one of a collection of successive, historically\
        \ related, catalogued data sets that together are known as a generation data\
        \ group (GDG). Use this structure when you want to import a GDG. For more\
        \ information on GDG, see <a href=\"https://www.ibm.com/docs/en/zos/2.3.0?topic=guide-generation-data-sets\"\
        >Generation data sets</a>."
      properties:
        limit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The maximum number of generation data sets, up to 255, in\
              \ a GDG."
          title: limit
        rollDisposition:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The disposition of the data set in the catalog.
          title: rollDisposition
      title: GdgAttributes
      type: object
    PoAttributes:
      description: The supported properties for a PO type data set.
      properties:
        encoding:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The character set encoding of the data set.
          title: encoding
        format:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The format of the data set records.
          title: format
        memberFileExtensions:
          allOf:
          - $ref: '#/components/schemas/String20List'
          - description: "An array containing one or more filename extensions, allowing\
              \ you to specify which files to be included as PDS member."
          title: memberFileExtensions
      required:
      - format
      - memberFileExtensions
      title: PoAttributes
      type: object
    PsAttributes:
      description: The supported properties for a PS type data set.
      properties:
        encoding:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The character set encoding of the data set.
          title: encoding
        format:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The format of the data set records.
          title: format
      required:
      - format
      title: PsAttributes
      type: object
    VsamAttributes:
      description: The attributes of a VSAM type data set.
      properties:
        alternateKeys:
          allOf:
          - $ref: '#/components/schemas/AlternateKeyList'
          - description: "The alternate key definitions, if any. A legacy dataset\
              \ might not have any alternate key defined, but if those alternate keys\
              \ definitions exist, provide them as some applications will make use\
              \ of them."
          title: alternateKeys
        compressed:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether indexes for this dataset are stored as\
              \ compressed values. If you have a large data set (typically &gt; 100\
              \ Mb), consider setting this flag to True."
          title: compressed
        encoding:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The character set used by the data set. Can be ASCII, EBCDIC,\
              \ or unknown."
          title: encoding
        format:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The record format of the data set.
          title: format
        primaryKey:
          $ref: '#/components/schemas/VsamDetailAttributes_primaryKey'
      required:
      - format
      title: VsamAttributes
      type: object
    DeleteApplicationFromEnvironmentRequest:
      properties: {}
      title: DeleteApplicationFromEnvironmentRequest
      type: object
    DeleteApplicationRequest:
      properties: {}
      title: DeleteApplicationRequest
      type: object
    DeleteEnvironmentRequest:
      properties: {}
      title: DeleteEnvironmentRequest
      type: object
    DeploymentLifecycle:
      enum:
      - Deploying
      - Succeeded
      - Failed
      title: DeploymentLifecycle
      type: string
    DeployedVersionSummary:
      description: Contains a summary of a deployed application.
      properties:
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the deployed application.
          title: applicationVersion
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentLifecycle'
          - description: The status of the deployment.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for the reported status.
          title: statusReason
      required:
      - applicationVersion
      - status
      title: DeployedVersionSummary
      type: object
    DeploymentSummary:
      description: A subset of information about a specific deployment.
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the application.
          title: applicationId
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the application.
          title: applicationVersion
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the deployment was created.
          title: creationTime
        deploymentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the deployment.
          title: deploymentId
        environmentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of the runtime environment.
          title: environmentId
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentLifecycle'
          - description: The current status of the deployment.
          title: status
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for the reported status.
          title: statusReason
      required:
      - applicationId
      - applicationVersion
      - creationTime
      - deploymentId
      - environmentId
      - status
      title: DeploymentSummary
      type: object
    DeploymentList:
      items:
        $ref: '#/components/schemas/DeploymentSummary'
      type: array
    EfsStorageConfiguration:
      description: Defines the storage configuration for an Amazon EFS file system.
      properties:
        fileSystemId:
          allOf:
          - $ref: '#/components/schemas/String200'
          - description: The file system identifier.
            xml:
              name: file-system-id
          title: fileSystemId
        mountPoint:
          allOf:
          - $ref: '#/components/schemas/String200'
          - description: The mount point for the file system.
            xml:
              name: mount-point
          title: mountPoint
      required:
      - fileSystemId
      - mountPoint
      title: EfsStorageConfiguration
      type: object
    EngineVersionsSummary:
      description: A subset of information about the engine version for a specific
        application.
      properties:
        engineType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of target platform for the application.
          title: engineType
        engineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the engine type used by the application.
          title: engineVersion
      required:
      - engineType
      - engineVersion
      title: EngineVersionsSummary
      type: object
    EngineVersionsSummaryList:
      items:
        $ref: '#/components/schemas/EngineVersionsSummary'
      type: array
    EntityNameList:
      items:
        $ref: '#/components/schemas/EntityName'
      maxItems: 10
      minItems: 1
      type: array
    EnvironmentLifecycle:
      enum:
      - Creating
      - Available
      - Updating
      - Deleting
      - Failed
      title: EnvironmentLifecycle
      type: string
    EnvironmentSummary:
      description: Contains a subset of the possible runtime environment attributes.
        Used in the environment list.
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the runtime environment was created.
          title: creationTime
        engineType:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: The target platform for the runtime environment.
          title: engineType
        engineVersion:
          allOf:
          - $ref: '#/components/schemas/EngineVersion'
          - description: The version of the runtime engine.
          title: engineVersion
        environmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of a particular runtime environment.
          title: environmentArn
        environmentId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The unique identifier of a particular runtime environment.
          title: environmentId
        instanceType:
          allOf:
          - $ref: '#/components/schemas/String20'
          - description: The instance type of the runtime environment.
          title: instanceType
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the runtime environment.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/EnvironmentLifecycle'
          - description: The status of the runtime environment
          title: status
      required:
      - creationTime
      - engineType
      - engineVersion
      - environmentArn
      - environmentId
      - instanceType
      - name
      - status
      title: EnvironmentSummary
      type: object
    EnvironmentSummaryList:
      items:
        $ref: '#/components/schemas/EnvironmentSummary'
      type: array
    FsxStorageConfiguration:
      description: Defines the storage configuration for an Amazon FSx file system.
      properties:
        fileSystemId:
          allOf:
          - $ref: '#/components/schemas/String200'
          - description: The file system identifier.
            xml:
              name: file-system-id
          title: fileSystemId
        mountPoint:
          allOf:
          - $ref: '#/components/schemas/String200'
          - description: The mount point for the file system.
            xml:
              name: mount-point
          title: mountPoint
      required:
      - fileSystemId
      - mountPoint
      title: FsxStorageConfiguration
      type: object
    GetApplicationRequest:
      properties: {}
      title: GetApplicationRequest
      type: object
    PortList:
      items:
        $ref: '#/components/schemas/Integer'
      minItems: 1
      type: array
    LogGroupSummaries:
      items:
        $ref: '#/components/schemas/LogGroupSummary'
      type: array
    GetApplicationVersionRequest:
      properties: {}
      title: GetApplicationVersionRequest
      type: object
    GetBatchJobExecutionRequest:
      properties: {}
      title: GetBatchJobExecutionRequest
      type: object
    GetDataSetDetailsRequest:
      properties: {}
      title: GetDataSetDetailsRequest
      type: object
    GetDataSetImportTaskRequest:
      properties: {}
      title: GetDataSetImportTaskRequest
      type: object
    GetDeploymentRequest:
      properties: {}
      title: GetDeploymentRequest
      type: object
    GetEnvironmentRequest:
      properties: {}
      title: GetEnvironmentRequest
      type: object
    PendingMaintenance:
      description: The scheduled maintenance for a runtime engine.
      properties:
        engineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The specific runtime engine that the maintenance schedule
              applies to.
          title: engineVersion
        schedule:
          $ref: '#/components/schemas/PendingMaintenance_schedule'
      title: PendingMaintenance
      type: object
    IdentifierList:
      items:
        $ref: '#/components/schemas/Identifier'
      maxItems: 10
      minItems: 1
      type: array
    MaxResults:
      maximum: 2000
      minimum: 1
      type: integer
    NextToken:
      pattern: "^\\S{1,2000}$"
      type: string
    ListApplicationVersionsRequest:
      properties: {}
      title: ListApplicationVersionsRequest
      type: object
    ListApplicationsRequest:
      properties: {}
      title: ListApplicationsRequest
      type: object
    ListBatchJobDefinitionsRequest:
      properties: {}
      title: ListBatchJobDefinitionsRequest
      type: object
    ListBatchJobExecutionsRequest:
      properties: {}
      title: ListBatchJobExecutionsRequest
      type: object
    ListDataSetImportHistoryRequest:
      properties: {}
      title: ListDataSetImportHistoryRequest
      type: object
    ListDataSetsRequest:
      properties: {}
      title: ListDataSetsRequest
      type: object
    ListDeploymentsRequest:
      properties: {}
      title: ListDeploymentsRequest
      type: object
    ListEngineVersionsRequest:
      properties: {}
      title: ListEngineVersionsRequest
      type: object
    ListEnvironmentsRequest:
      properties: {}
      title: ListEnvironmentsRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    LogGroupIdentifier:
      maxLength: 512
      minLength: 1
      type: string
    LogGroupSummary:
      description: "A subset of the attributes that describe a log group. In CloudWatch\
        \ a log group is a group of log streams that share the same retention, monitoring,\
        \ and access control settings."
      properties:
        logGroupName:
          allOf:
          - $ref: '#/components/schemas/LogGroupIdentifier'
          - description: The name of the log group.
          title: logGroupName
        logType:
          allOf:
          - $ref: '#/components/schemas/String20'
          - description: The type of log.
          title: logType
      required:
      - logGroupName
      - logType
      title: LogGroupSummary
      type: object
    MaintenanceSchedule:
      description: The information about the maintenance schedule.
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the scheduled maintenance is to end.
          title: endTime
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the scheduled maintenance is to start.
          title: startTime
      title: MaintenanceSchedule
      type: object
    String20List:
      items:
        $ref: '#/components/schemas/String20'
      maxItems: 10
      minItems: 1
      type: array
    PrimaryKey:
      description: The primary key for a KSDS data set.
      properties:
        length:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: 'A strictly positive integer value representing the length
              of the primary key. '
          title: length
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A name for the Primary Key.
          title: name
        offset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: A positive integer value representing the offset to mark
              the start of the primary key in the record byte array.
          title: offset
      required:
      - length
      - offset
      title: PrimaryKey
      type: object
    StartApplicationRequest:
      properties: {}
      title: StartApplicationRequest
      type: object
    StartBatchJobRequest:
      example:
        batchJobIdentifier:
          scriptBatchJobIdentifier:
            scriptName: ""
          fileBatchJobIdentifier:
            folderPath: ""
            fileName: ""
        jobParams: ""
      properties:
        batchJobIdentifier:
          $ref: '#/components/schemas/StartBatchJobRequest_batchJobIdentifier'
        jobParams:
          allOf:
          - $ref: '#/components/schemas/BatchJobParametersMap'
          - description: "The collection of batch job parameters. For details about\
              \ limits for keys and values, see <a href=\"https://www.ibm.com/docs/en/workload-automation/9.3.0?topic=zos-coding-variables-in-jcl\"\
              >Coding variables in JCL</a>."
      required:
      - batchJobIdentifier
      title: StartBatchJobRequest
      type: object
    StopApplicationRequest:
      example:
        forceStop: ""
      properties:
        forceStop:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Stopping an application process can take a long time. Setting
              this parameter to true lets you force stop the application so you don't
              need to wait until the process finishes to apply another action on the
              application. The default value is false.
      title: StopApplicationRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to add to the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateApplicationRequest:
      example:
        description: ""
        definition:
          s3Location: ""
          content: ""
        currentApplicationVersion: ""
      properties:
        currentApplicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The current version of the application to update.
        definition:
          $ref: '#/components/schemas/CreateApplicationRequest_definition'
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          - description: The description of the application to update.
      required:
      - currentApplicationVersion
      title: UpdateApplicationRequest
      type: object
    UpdateEnvironmentRequest:
      example:
        engineVersion: ""
        applyDuringMaintenanceWindow: ""
        instanceType: ""
        preferredMaintenanceWindow: ""
        desiredCapacity: ""
      properties:
        applyDuringMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether to update the runtime environment during\
              \ the maintenance window. The default is false. Currently, Amazon Web\
              \ Services Mainframe Modernization accepts the <code>engineVersion</code>\
              \ parameter only if <code>applyDuringMaintenanceWindow</code> is true.\
              \ If any parameter other than <code>engineVersion</code> is provided\
              \ in <code>UpdateEnvironmentRequest</code>, it will fail if <code>applyDuringMaintenanceWindow</code>\
              \ is set to true."
        desiredCapacity:
          allOf:
          - $ref: '#/components/schemas/CapacityValue'
          - description: The desired capacity for the runtime environment to update.
              The minimum possible value is 0 and the maximum is 100.
        engineVersion:
          allOf:
          - $ref: '#/components/schemas/EngineVersion'
          - description: The version of the runtime engine for the runtime environment.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/String20'
          - description: The instance type for the runtime environment to update.
        preferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Configures the maintenance window you want for the runtime\
              \ environment. If you do not provide a value, a random system-generated\
              \ value will be assigned."
      title: UpdateEnvironmentRequest
      type: object
    CreateApplication_request_definition:
      description: 'The application definition for a particular application. '
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/StringFree65000'
          - description: The content of the application definition. This is a JSON
              object that contains the resource configuration/definitions that identify
              an application.
          title: content
        s3Location:
          allOf:
          - $ref: '#/components/schemas/String2000'
          - description: The S3 bucket that contains the application definition.
          title: s3Location
      title: CreateApplication_request_definition
      type: object
    CreateApplication_request:
      properties:
        clientToken:
          description: "Unique, case-sensitive identifier the service generates to\
            \ ensure the idempotency of the request to create an application. The\
            \ service generates the clientToken when the API call is triggered. The\
            \ token expires after one hour, so if you retry the API within this timeframe\
            \ with the same clientToken, you will get the same response. The service\
            \ also handles deleting the clientToken after it expires. "
          title: clientToken
          type: string
        definition:
          $ref: '#/components/schemas/CreateApplication_request_definition'
        description:
          description: The description of the application.
          maxLength: 500
          minLength: 0
          title: description
          type: string
        engineType:
          description: The type of the target platform for this application.
          enum:
          - microfocus
          - bluage
          title: engineType
          type: string
        kmsKeyId:
          description: The identifier of a customer managed key.
          title: kmsKeyId
          type: string
        name:
          description: The unique identifier of the application.
          pattern: "^[A-Za-z0-9][A-Za-z0-9_\\-]{1,59}$"
          title: name
          type: string
        roleArn:
          description: The Amazon Resource Name (ARN) that identifies a role that
            the application uses to access Amazon Web Services resources that are
            not part of the application or are in a different Amazon Web Services
            account.
          pattern: "^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]|):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$"
          title: roleArn
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A list of tags to apply to the application.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - definition
      - engineType
      - name
      title: CreateApplication_request
      type: object
    CreateDataSetImportTask_request_importConfig:
      description: Identifies one or more data sets you want to import with the <a>CreateDataSetImportTask</a>
        operation.
      properties:
        dataSets:
          allOf:
          - $ref: '#/components/schemas/DataSetImportList'
          - description: The data sets.
          title: dataSets
        s3Location:
          allOf:
          - $ref: '#/components/schemas/String2000'
          - description: The Amazon S3 location of the data sets.
          title: s3Location
      title: CreateDataSetImportTask_request_importConfig
      type: object
    CreateDataSetImportTask_request:
      properties:
        clientToken:
          description: " Unique, case-sensitive identifier you provide to ensure the\
            \ idempotency of the request to create a data set import. The service\
            \ generates the clientToken when the API call is triggered. The token\
            \ expires after one hour, so if you retry the API within this timeframe\
            \ with the same clientToken, you will get the same response. The service\
            \ also handles deleting the clientToken after it expires. "
          title: clientToken
          type: string
        importConfig:
          $ref: '#/components/schemas/CreateDataSetImportTask_request_importConfig'
      required:
      - importConfig
      title: CreateDataSetImportTask_request
      type: object
    CreateDeployment_request:
      properties:
        applicationVersion:
          description: The version of the application to deploy.
          minimum: 1
          title: applicationVersion
          type: integer
        clientToken:
          description: "Unique, case-sensitive identifier you provide to ensure the\
            \ idempotency of the request to create a deployment. The service generates\
            \ the clientToken when the API call is triggered. The token expires after\
            \ one hour, so if you retry the API within this timeframe with the same\
            \ clientToken, you will get the same response. The service also handles\
            \ deleting the clientToken after it expires. "
          title: clientToken
          type: string
        environmentId:
          description: The identifier of the runtime environment where you want to
            deploy this application.
          pattern: "^\\S{1,80}$"
          title: environmentId
          type: string
      required:
      - applicationVersion
      - environmentId
      title: CreateDeployment_request
      type: object
    CreateEnvironment_request_highAvailabilityConfig:
      description: Defines the details of a high availability configuration.
      properties:
        desiredCapacity:
          allOf:
          - $ref: '#/components/schemas/CapacityValue'
          - description: The number of instances in a high availability configuration.
              The minimum possible value is 1 and the maximum is 100.
          title: desiredCapacity
      title: CreateEnvironment_request_highAvailabilityConfig
      type: object
    CreateEnvironment_request:
      properties:
        clientToken:
          description: "Unique, case-sensitive identifier you provide to ensure the\
            \ idempotency of the request to create an environment. The service generates\
            \ the clientToken when the API call is triggered. The token expires after\
            \ one hour, so if you retry the API within this timeframe with the same\
            \ clientToken, you will get the same response. The service also handles\
            \ deleting the clientToken after it expires. "
          title: clientToken
          type: string
        description:
          description: The description of the runtime environment.
          maxLength: 500
          minLength: 0
          title: description
          type: string
        engineType:
          description: The engine type for the runtime environment.
          enum:
          - microfocus
          - bluage
          title: engineType
          type: string
        engineVersion:
          description: The version of the engine type for the runtime environment.
          pattern: "^\\S{1,10}$"
          title: engineVersion
          type: string
        highAvailabilityConfig:
          $ref: '#/components/schemas/CreateEnvironment_request_highAvailabilityConfig'
        instanceType:
          description: The type of instance for the runtime environment.
          pattern: "^\\S{1,20}$"
          title: instanceType
          type: string
        kmsKeyId:
          description: The identifier of a customer managed key.
          title: kmsKeyId
          type: string
        name:
          description: The name of the runtime environment. Must be unique within
            the account.
          pattern: "^[A-Za-z0-9][A-Za-z0-9_\\-]{1,59}$"
          title: name
          type: string
        preferredMaintenanceWindow:
          description: "Configures the maintenance window you want for the runtime\
            \ environment. If you do not provide a value, a random system-generated\
            \ value will be assigned."
          pattern: "^\\S{1,50}$"
          title: preferredMaintenanceWindow
          type: string
        publiclyAccessible:
          description: Specifies whether the runtime environment is publicly accessible.
          title: publiclyAccessible
          type: boolean
        securityGroupIds:
          description: The list of security groups for the VPC associated with this
            runtime environment.
          items:
            $ref: '#/components/schemas/String50'
          title: securityGroupIds
          type: array
        storageConfigurations:
          description: Optional. The storage configurations for this runtime environment.
          items:
            $ref: '#/components/schemas/StorageConfiguration'
          title: storageConfigurations
          type: array
        subnetIds:
          description: The list of subnets associated with the VPC for this runtime
            environment.
          items:
            $ref: '#/components/schemas/String50'
          title: subnetIds
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the runtime environment.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - engineType
      - instanceType
      - name
      title: CreateEnvironment_request
      type: object
    UpdateApplication_request:
      properties:
        currentApplicationVersion:
          description: The current version of the application to update.
          minimum: 1
          title: currentApplicationVersion
          type: integer
        definition:
          $ref: '#/components/schemas/CreateApplication_request_definition'
        description:
          description: The description of the application to update.
          maxLength: 500
          minLength: 0
          title: description
          type: string
      required:
      - currentApplicationVersion
      title: UpdateApplication_request
      type: object
    UpdateEnvironment_request:
      properties:
        applyDuringMaintenanceWindow:
          description: "Indicates whether to update the runtime environment during\
            \ the maintenance window. The default is false. Currently, Amazon Web\
            \ Services Mainframe Modernization accepts the <code>engineVersion</code>\
            \ parameter only if <code>applyDuringMaintenanceWindow</code> is true.\
            \ If any parameter other than <code>engineVersion</code> is provided in\
            \ <code>UpdateEnvironmentRequest</code>, it will fail if <code>applyDuringMaintenanceWindow</code>\
            \ is set to true."
          title: applyDuringMaintenanceWindow
          type: boolean
        desiredCapacity:
          description: The desired capacity for the runtime environment to update.
            The minimum possible value is 0 and the maximum is 100.
          title: desiredCapacity
          type: integer
        engineVersion:
          description: The version of the runtime engine for the runtime environment.
          pattern: "^\\S{1,10}$"
          title: engineVersion
          type: string
        instanceType:
          description: The instance type for the runtime environment to update.
          pattern: "^\\S{1,20}$"
          title: instanceType
          type: string
        preferredMaintenanceWindow:
          description: "Configures the maintenance window you want for the runtime\
            \ environment. If you do not provide a value, a random system-generated\
            \ value will be assigned."
          title: preferredMaintenanceWindow
          type: string
      title: UpdateEnvironment_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to add to the resource.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    StartBatchJob_request_batchJobIdentifier_fileBatchJobIdentifier:
      allOf:
      - $ref: '#/components/schemas/FileBatchJobIdentifier'
      - description: Specifies a file associated with a specific batch job.
      example:
        folderPath: ""
        fileName: ""
      title: StartBatchJob_request_batchJobIdentifier_fileBatchJobIdentifier
    StartBatchJob_request_batchJobIdentifier_scriptBatchJobIdentifier:
      allOf:
      - $ref: '#/components/schemas/ScriptBatchJobIdentifier'
      - description: A batch job identifier in which the batch job to run is identified
          by the script name.
      example:
        scriptName: ""
      title: StartBatchJob_request_batchJobIdentifier_scriptBatchJobIdentifier
    StartBatchJob_request_batchJobIdentifier:
      description: Identifies a specific batch job.
      properties:
        fileBatchJobIdentifier:
          $ref: '#/components/schemas/StartBatchJob_request_batchJobIdentifier_fileBatchJobIdentifier'
        scriptBatchJobIdentifier:
          $ref: '#/components/schemas/StartBatchJob_request_batchJobIdentifier_scriptBatchJobIdentifier'
      title: StartBatchJob_request_batchJobIdentifier
      type: object
    StartBatchJob_request:
      properties:
        batchJobIdentifier:
          $ref: '#/components/schemas/StartBatchJob_request_batchJobIdentifier'
        jobParams:
          additionalProperties:
            $ref: '#/components/schemas/BatchParamValue'
          description: Job parameters are optional. Can contain up to 500 entries.
          maxProperties: 500
          minProperties: 0
          title: jobParams
          type: object
      required:
      - batchJobIdentifier
      title: StartBatchJob_request
      type: object
    StopApplication_request:
      properties:
        forceStop:
          description: Stopping an application process can take a long time. Setting
            this parameter to true lets you force stop the application so you don't
            need to wait until the process finishes to apply another action on the
            application. The default value is false.
          title: forceStop
          type: boolean
      title: StopApplication_request
      type: object
    StorageConfiguration_efs:
      allOf:
      - $ref: '#/components/schemas/EfsStorageConfiguration'
      - description: Defines the storage configuration for an Amazon EFS file system.
      title: StorageConfiguration_efs
    StorageConfiguration_fsx:
      allOf:
      - $ref: '#/components/schemas/FsxStorageConfiguration'
      - description: Defines the storage configuration for an Amazon FSx file system.
      title: StorageConfiguration_fsx
    GetApplicationResponse_deployedVersion:
      allOf:
      - $ref: '#/components/schemas/DeployedVersionSummary'
      - description: The version of the application that is deployed.
      example:
        applicationVersion: ""
        statusReason: ""
        status: ""
      title: GetApplicationResponse_deployedVersion
    GetApplicationResponse_latestVersion:
      allOf:
      - $ref: '#/components/schemas/ApplicationVersionSummary'
      - description: The latest version of the application.
      example:
        applicationVersion: ""
        statusReason: ""
        creationTime: ""
        status: ""
      title: GetApplicationResponse_latestVersion
    GetBatchJobExecutionResponse_batchJobIdentifier:
      allOf:
      - $ref: '#/components/schemas/BatchJobIdentifier'
      - description: The unique identifier of this batch job.
      example:
        scriptBatchJobIdentifier:
          scriptName: ""
        fileBatchJobIdentifier:
          folderPath: ""
          fileName: ""
      title: GetBatchJobExecutionResponse_batchJobIdentifier
    GetDataSetDetailsResponse_dataSetOrg:
      allOf:
      - $ref: '#/components/schemas/DatasetDetailOrgAttributes'
      - description: The type of data set. The only supported value is VSAM.
      example:
        ps:
          format: ""
          encoding: ""
        gdg:
          limit: ""
          rollDisposition: ""
        vsam:
          alternateKeys: ""
          cacheAtStartup: ""
          compressed: ""
          recordFormat: ""
          encoding: ""
          primaryKey:
            offset: ""
            length: ""
            name: ""
        po:
          format: ""
          encoding: ""
      title: GetDataSetDetailsResponse_dataSetOrg
    GetDataSetImportTaskResponse_summary:
      allOf:
      - $ref: '#/components/schemas/DataSetImportSummary'
      - description: A summary of the status of the task.
      example:
        total: ""
        inProgress: ""
        pending: ""
        failed: ""
        succeeded: ""
      title: GetDataSetImportTaskResponse_summary
    GetEnvironmentResponse_highAvailabilityConfig:
      allOf:
      - $ref: '#/components/schemas/HighAvailabilityConfig'
      - description: The desired capacity of the high availability configuration for
          the runtime environment.
      example:
        desiredCapacity: ""
      title: GetEnvironmentResponse_highAvailabilityConfig
    GetEnvironmentResponse_pendingMaintenance:
      allOf:
      - $ref: '#/components/schemas/PendingMaintenance'
      - description: Indicates the pending maintenance scheduled on this environment.
      example:
        engineVersion: ""
        schedule:
          startTime: ""
          endTime: ""
      title: GetEnvironmentResponse_pendingMaintenance
    BatchJobDefinition_fileBatchJobDefinition:
      allOf:
      - $ref: '#/components/schemas/FileBatchJobDefinition'
      - description: Specifies a file containing a batch job definition.
      title: BatchJobDefinition_fileBatchJobDefinition
    BatchJobDefinition_scriptBatchJobDefinition:
      allOf:
      - $ref: '#/components/schemas/ScriptBatchJobDefinition'
      - description: A script containing a batch job definition.
      title: BatchJobDefinition_scriptBatchJobDefinition
    CreateApplicationRequest_definition:
      allOf:
      - $ref: '#/components/schemas/Definition'
      - description: The application definition for this application. You can specify
          either inline JSON or an S3 bucket location.
      example:
        s3Location: ""
        content: ""
      title: CreateApplicationRequest_definition
    CreateDataSetImportTaskRequest_importConfig:
      allOf:
      - $ref: '#/components/schemas/DataSetImportConfig'
      - description: The data set import task configuration.
      example:
        dataSets: ""
        s3Location: ""
      title: CreateDataSetImportTaskRequest_importConfig
    CreateEnvironmentRequest_highAvailabilityConfig:
      allOf:
      - $ref: '#/components/schemas/HighAvailabilityConfig'
      - description: The details of a high availability configuration for this runtime
          environment.
      example:
        desiredCapacity: ""
      title: CreateEnvironmentRequest_highAvailabilityConfig
    DatasetOrgAttributes_gdg:
      allOf:
      - $ref: '#/components/schemas/GdgAttributes'
      - description: The generation data group of the data set.
      title: DatasetOrgAttributes_gdg
    DatasetOrgAttributes_po:
      allOf:
      - $ref: '#/components/schemas/PoAttributes'
      - description: The details of a PO type data set.
      title: DatasetOrgAttributes_po
    DatasetOrgAttributes_ps:
      allOf:
      - $ref: '#/components/schemas/PsAttributes'
      - description: The details of a PS type data set.
      title: DatasetOrgAttributes_ps
    DatasetOrgAttributes_vsam:
      allOf:
      - $ref: '#/components/schemas/VsamAttributes'
      - description: The details of a VSAM data set.
      title: DatasetOrgAttributes_vsam
    DataSet_datasetOrg:
      allOf:
      - $ref: '#/components/schemas/DatasetOrgAttributes'
      - description: The type of dataset. The only supported value is VSAM.
      title: DataSet_datasetOrg
    DataSet_recordLength:
      allOf:
      - $ref: '#/components/schemas/RecordLength'
      - description: The length of a record.
      title: DataSet_recordLength
    DataSetImportItem_dataSet:
      allOf:
      - $ref: '#/components/schemas/DataSet'
      - description: The data set.
      title: DataSetImportItem_dataSet
    DataSetImportItem_externalLocation:
      allOf:
      - $ref: '#/components/schemas/ExternalLocation'
      - description: The location of the data set.
      title: DataSetImportItem_externalLocation
    DataSetImportTask_summary:
      allOf:
      - $ref: '#/components/schemas/DataSetImportSummary'
      - description: A summary of the data set import task.
      title: DataSetImportTask_summary
    VsamDetailAttributes_primaryKey:
      allOf:
      - $ref: '#/components/schemas/PrimaryKey'
      - description: The primary key of the data set.
      example:
        offset: ""
        length: ""
        name: ""
      title: VsamDetailAttributes_primaryKey
    DatasetDetailOrgAttributes_gdg:
      allOf:
      - $ref: '#/components/schemas/GdgDetailAttributes'
      - description: The generation data group of the data set.
      example:
        limit: ""
        rollDisposition: ""
      title: DatasetDetailOrgAttributes_gdg
    DatasetDetailOrgAttributes_po:
      allOf:
      - $ref: '#/components/schemas/PoDetailAttributes'
      - description: The details of a PO type data set.
      example:
        format: ""
        encoding: ""
      title: DatasetDetailOrgAttributes_po
    DatasetDetailOrgAttributes_ps:
      allOf:
      - $ref: '#/components/schemas/PsDetailAttributes'
      - description: The details of a PS type data set.
      example:
        format: ""
        encoding: ""
      title: DatasetDetailOrgAttributes_ps
    DatasetDetailOrgAttributes_vsam:
      allOf:
      - $ref: '#/components/schemas/VsamDetailAttributes'
      - description: The details of a VSAM data set.
      example:
        alternateKeys: ""
        cacheAtStartup: ""
        compressed: ""
        recordFormat: ""
        encoding: ""
        primaryKey:
          offset: ""
          length: ""
          name: ""
      title: DatasetDetailOrgAttributes_vsam
    PendingMaintenance_schedule:
      allOf:
      - $ref: '#/components/schemas/MaintenanceSchedule'
      - description: The maintenance schedule for the runtime engine version.
      example:
        startTime: ""
        endTime: ""
      title: PendingMaintenance_schedule
    StartBatchJobRequest_batchJobIdentifier:
      allOf:
      - $ref: '#/components/schemas/BatchJobIdentifier'
      - description: The unique identifier of the batch job.
      example:
        scriptBatchJobIdentifier:
          scriptName: ""
        fileBatchJobIdentifier:
          folderPath: ""
          fileName: ""
      title: StartBatchJobRequest_batchJobIdentifier
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
