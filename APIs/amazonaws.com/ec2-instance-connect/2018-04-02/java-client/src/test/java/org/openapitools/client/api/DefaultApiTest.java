/*
 * AWS EC2 Instance Connect
 * Amazon EC2 Instance Connect enables system administrators to publish one-time use SSH public keys to EC2, providing users a simple and secure way to connect to their instances.
 *
 * The version of the OpenAPI document: 2018-04-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SendSSHPublicKeyRequest;
import org.openapitools.client.model.SendSSHPublicKeyResponse;
import org.openapitools.client.model.SendSerialConsoleSSHPublicKeyRequest;
import org.openapitools.client.model.SendSerialConsoleSSHPublicKeyResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Pushes an SSH public key to the specified EC2 instance for use by the specified user. The key remains for 60 seconds. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Connect-using-EC2-Instance-Connect.html\&quot;&gt;Connect to your Linux instance using EC2 Instance Connect&lt;/a&gt; in the &lt;i&gt;Amazon EC2 User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendSSHPublicKeyTest() throws ApiException {
        String xAmzTarget = null;
        SendSSHPublicKeyRequest sendSSHPublicKeyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        SendSSHPublicKeyResponse response = api.sendSSHPublicKey(xAmzTarget, sendSSHPublicKeyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Pushes an SSH public key to the specified EC2 instance. The key remains for 60 seconds, which gives you 60 seconds to establish a serial console connection to the instance using SSH. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-serial-console.html\&quot;&gt;EC2 Serial Console&lt;/a&gt; in the &lt;i&gt;Amazon EC2 User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendSerialConsoleSSHPublicKeyTest() throws ApiException {
        String xAmzTarget = null;
        SendSerialConsoleSSHPublicKeyRequest sendSerialConsoleSSHPublicKeyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        SendSerialConsoleSSHPublicKeyResponse response = api.sendSerialConsoleSSHPublicKey(xAmzTarget, sendSerialConsoleSSHPublicKeyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
