/**
 * AWS EC2 Instance Connect
 * Amazon EC2 Instance Connect enables system administrators to publish one-time use SSH public keys to EC2, providing users a simple and secure way to connect to their instances.
 *
 * The version of the OpenAPI document: 2018-04-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SendSSHPublicKeyRequest from '../model/SendSSHPublicKeyRequest';
import SendSSHPublicKeyResponse from '../model/SendSSHPublicKeyResponse';
import SendSerialConsoleSSHPublicKeyRequest from '../model/SendSerialConsoleSSHPublicKeyRequest';
import SendSerialConsoleSSHPublicKeyResponse from '../model/SendSerialConsoleSSHPublicKeyResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 2018-04-02
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the sendSSHPublicKey operation.
     * @callback module:api/DefaultApi~sendSSHPublicKeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendSSHPublicKeyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Pushes an SSH public key to the specified EC2 instance for use by the specified user. The key remains for 60 seconds. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Connect-using-EC2-Instance-Connect.html\">Connect to your Linux instance using EC2 Instance Connect</a> in the <i>Amazon EC2 User Guide</i>.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/SendSSHPublicKeyRequest} sendSSHPublicKeyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~sendSSHPublicKeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendSSHPublicKeyResponse}
     */
    sendSSHPublicKey(xAmzTarget, sendSSHPublicKeyRequest, opts, callback) {
      opts = opts || {};
      let postBody = sendSSHPublicKeyRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling sendSSHPublicKey");
      }
      // verify the required parameter 'sendSSHPublicKeyRequest' is set
      if (sendSSHPublicKeyRequest === undefined || sendSSHPublicKeyRequest === null) {
        throw new Error("Missing the required parameter 'sendSSHPublicKeyRequest' when calling sendSSHPublicKey");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SendSSHPublicKeyResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSEC2InstanceConnectService.SendSSHPublicKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sendSerialConsoleSSHPublicKey operation.
     * @callback module:api/DefaultApi~sendSerialConsoleSSHPublicKeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendSerialConsoleSSHPublicKeyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Pushes an SSH public key to the specified EC2 instance. The key remains for 60 seconds, which gives you 60 seconds to establish a serial console connection to the instance using SSH. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-serial-console.html\">EC2 Serial Console</a> in the <i>Amazon EC2 User Guide</i>.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/SendSerialConsoleSSHPublicKeyRequest} sendSerialConsoleSSHPublicKeyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~sendSerialConsoleSSHPublicKeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendSerialConsoleSSHPublicKeyResponse}
     */
    sendSerialConsoleSSHPublicKey(xAmzTarget, sendSerialConsoleSSHPublicKeyRequest, opts, callback) {
      opts = opts || {};
      let postBody = sendSerialConsoleSSHPublicKeyRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling sendSerialConsoleSSHPublicKey");
      }
      // verify the required parameter 'sendSerialConsoleSSHPublicKeyRequest' is set
      if (sendSerialConsoleSSHPublicKeyRequest === undefined || sendSerialConsoleSSHPublicKeyRequest === null) {
        throw new Error("Missing the required parameter 'sendSerialConsoleSSHPublicKeyRequest' when calling sendSerialConsoleSSHPublicKey");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SendSerialConsoleSSHPublicKeyResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSEC2InstanceConnectService.SendSerialConsoleSSHPublicKey', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
