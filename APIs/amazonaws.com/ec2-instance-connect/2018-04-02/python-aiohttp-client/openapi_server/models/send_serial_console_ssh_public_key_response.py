# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SendSerialConsoleSSHPublicKeyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_id: str=None, success: bool=None):
        """SendSerialConsoleSSHPublicKeyResponse - a model defined in OpenAPI

        :param request_id: The request_id of this SendSerialConsoleSSHPublicKeyResponse.
        :param success: The success of this SendSerialConsoleSSHPublicKeyResponse.
        """
        self.openapi_types = {
            'request_id': str,
            'success': bool
        }

        self.attribute_map = {
            'request_id': 'RequestId',
            'success': 'Success'
        }

        self._request_id = request_id
        self._success = success

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendSerialConsoleSSHPublicKeyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendSerialConsoleSSHPublicKeyResponse of this SendSerialConsoleSSHPublicKeyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_id(self):
        """Gets the request_id of this SendSerialConsoleSSHPublicKeyResponse.


        :return: The request_id of this SendSerialConsoleSSHPublicKeyResponse.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this SendSerialConsoleSSHPublicKeyResponse.


        :param request_id: The request_id of this SendSerialConsoleSSHPublicKeyResponse.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def success(self):
        """Gets the success of this SendSerialConsoleSSHPublicKeyResponse.


        :return: The success of this SendSerialConsoleSSHPublicKeyResponse.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this SendSerialConsoleSSHPublicKeyResponse.


        :param success: The success of this SendSerialConsoleSSHPublicKeyResponse.
        :type success: bool
        """

        self._success = success
