# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SendSSHPublicKeyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_id: str=None, instance_os_user: str=None, ssh_public_key: str=None, availability_zone: str=None):
        """SendSSHPublicKeyRequest - a model defined in OpenAPI

        :param instance_id: The instance_id of this SendSSHPublicKeyRequest.
        :param instance_os_user: The instance_os_user of this SendSSHPublicKeyRequest.
        :param ssh_public_key: The ssh_public_key of this SendSSHPublicKeyRequest.
        :param availability_zone: The availability_zone of this SendSSHPublicKeyRequest.
        """
        self.openapi_types = {
            'instance_id': str,
            'instance_os_user': str,
            'ssh_public_key': str,
            'availability_zone': str
        }

        self.attribute_map = {
            'instance_id': 'InstanceId',
            'instance_os_user': 'InstanceOSUser',
            'ssh_public_key': 'SSHPublicKey',
            'availability_zone': 'AvailabilityZone'
        }

        self._instance_id = instance_id
        self._instance_os_user = instance_os_user
        self._ssh_public_key = ssh_public_key
        self._availability_zone = availability_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendSSHPublicKeyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendSSHPublicKeyRequest of this SendSSHPublicKeyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_id(self):
        """Gets the instance_id of this SendSSHPublicKeyRequest.


        :return: The instance_id of this SendSSHPublicKeyRequest.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this SendSSHPublicKeyRequest.


        :param instance_id: The instance_id of this SendSSHPublicKeyRequest.
        :type instance_id: str
        """
        if instance_id is None:
            raise ValueError("Invalid value for `instance_id`, must not be `None`")

        self._instance_id = instance_id

    @property
    def instance_os_user(self):
        """Gets the instance_os_user of this SendSSHPublicKeyRequest.


        :return: The instance_os_user of this SendSSHPublicKeyRequest.
        :rtype: str
        """
        return self._instance_os_user

    @instance_os_user.setter
    def instance_os_user(self, instance_os_user):
        """Sets the instance_os_user of this SendSSHPublicKeyRequest.


        :param instance_os_user: The instance_os_user of this SendSSHPublicKeyRequest.
        :type instance_os_user: str
        """
        if instance_os_user is None:
            raise ValueError("Invalid value for `instance_os_user`, must not be `None`")

        self._instance_os_user = instance_os_user

    @property
    def ssh_public_key(self):
        """Gets the ssh_public_key of this SendSSHPublicKeyRequest.


        :return: The ssh_public_key of this SendSSHPublicKeyRequest.
        :rtype: str
        """
        return self._ssh_public_key

    @ssh_public_key.setter
    def ssh_public_key(self, ssh_public_key):
        """Sets the ssh_public_key of this SendSSHPublicKeyRequest.


        :param ssh_public_key: The ssh_public_key of this SendSSHPublicKeyRequest.
        :type ssh_public_key: str
        """
        if ssh_public_key is None:
            raise ValueError("Invalid value for `ssh_public_key`, must not be `None`")

        self._ssh_public_key = ssh_public_key

    @property
    def availability_zone(self):
        """Gets the availability_zone of this SendSSHPublicKeyRequest.


        :return: The availability_zone of this SendSSHPublicKeyRequest.
        :rtype: str
        """
        return self._availability_zone

    @availability_zone.setter
    def availability_zone(self, availability_zone):
        """Sets the availability_zone of this SendSSHPublicKeyRequest.


        :param availability_zone: The availability_zone of this SendSSHPublicKeyRequest.
        :type availability_zone: str
        """

        self._availability_zone = availability_zone
