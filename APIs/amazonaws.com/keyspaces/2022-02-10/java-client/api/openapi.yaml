openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Amazon Keyspaces (for Apache Cassandra) is a scalable, highly available,\
    \ and managed Apache Cassandra-compatible database service. Amazon Keyspaces makes\
    \ it easy to migrate, run, and scale Cassandra workloads in the Amazon Web Services\
    \ Cloud. With just a few clicks on the Amazon Web Services Management Console\
    \ or a few lines of code, you can create keyspaces and tables in Amazon Keyspaces,\
    \ without deploying any infrastructure or installing software. </p> <p>In addition\
    \ to supporting Cassandra Query Language (CQL) requests via open-source Cassandra\
    \ drivers, Amazon Keyspaces supports data definition language (DDL) operations\
    \ to manage keyspaces and tables using the Amazon Web Services SDK and CLI, as\
    \ well as infrastructure as code (IaC) services and tools such as CloudFormation\
    \ and Terraform. This API reference describes the supported DDL operations in\
    \ detail.</p> <p>For the list of all supported CQL APIs, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/cassandra-apis.html\"\
    >Supported Cassandra APIs, operations, and data types in Amazon Keyspaces</a>\
    \ in the <i>Amazon Keyspaces Developer Guide</i>.</p> <p>To learn how Amazon Keyspaces\
    \ API actions are recorded with CloudTrail, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/logging-using-cloudtrail.html#service-name-info-in-cloudtrail\"\
    >Amazon Keyspaces information in CloudTrail</a> in the <i>Amazon Keyspaces Developer\
    \ Guide</i>.</p> <p>For more information about Amazon Web Services APIs, for example\
    \ how to implement retry logic or how to sign Amazon Web Services API requests,\
    \ see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-apis.html\"\
    >Amazon Web Services APIs</a> in the <i>General Reference</i>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Keyspaces
  version: 2022-02-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: keyspaces
  x-aws-signingName: cassandra
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/keyspaces-2022-02-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/cassandra/
servers:
- description: The Amazon Keyspaces multi-region endpoint
  url: "http://cassandra.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Keyspaces multi-region endpoint
  url: "https://cassandra.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Keyspaces endpoint for China (Beijing) and China (Ningxia)
  url: "http://cassandra.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Keyspaces endpoint for China (Beijing) and China (Ningxia)
  url: "https://cassandra.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=KeyspacesService.CreateKeyspace:
    post:
      description: "<p>The <code>CreateKeyspace</code> operation adds a new keyspace\
        \ to your account. In an Amazon Web Services account, keyspace names must\
        \ be unique within each Region.</p> <p> <code>CreateKeyspace</code> is an\
        \ asynchronous operation. You can monitor the creation status of the new keyspace\
        \ by using the <code>GetKeyspace</code> operation.</p> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/working-with-keyspaces.html#keyspaces-create\"\
        >Creating keyspaces</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      operationId: CreateKeyspace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.CreateKeyspace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyspaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKeyspaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.CreateTable:
    post:
      description: "<p>The <code>CreateTable</code> operation adds a new table to\
        \ the specified keyspace. Within a keyspace, table names must be unique.</p>\
        \ <p> <code>CreateTable</code> is an asynchronous operation. When the request\
        \ is received, the status of the table is set to <code>CREATING</code>. You\
        \ can monitor the creation status of the new table by using the <code>GetTable</code>\
        \ operation, which returns the current <code>status</code> of the table. You\
        \ can start using a table when the status is <code>ACTIVE</code>.</p> <p>For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/working-with-tables.html#tables-create\"\
        >Creating tables</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      operationId: CreateTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.CreateTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.DeleteKeyspace:
    post:
      description: 'The <code>DeleteKeyspace</code> operation deletes a keyspace and
        all of its tables. '
      operationId: DeleteKeyspace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.DeleteKeyspace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteKeyspaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKeyspaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.DeleteTable:
    post:
      description: "The <code>DeleteTable</code> operation deletes a table and all\
        \ of its data. After a <code>DeleteTable</code> request is received, the specified\
        \ table is in the <code>DELETING</code> state until Amazon Keyspaces completes\
        \ the deletion. If the table is in the <code>ACTIVE</code> state, you can\
        \ delete it. If a table is either in the <code>CREATING</code> or <code>UPDATING</code>\
        \ states, then Amazon Keyspaces returns a <code>ResourceInUseException</code>.\
        \ If the specified table does not exist, Amazon Keyspaces returns a <code>ResourceNotFoundException</code>.\
        \ If the table is already in the <code>DELETING</code> state, no error is\
        \ returned."
      operationId: DeleteTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.DeleteTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.GetKeyspace:
    post:
      description: Returns the name and the Amazon Resource Name (ARN) of the specified
        table.
      operationId: GetKeyspace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.GetKeyspace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetKeyspaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKeyspaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.GetTable:
    post:
      description: "<p>Returns information about the table, including the table's\
        \ name and current status, the keyspace name, configuration settings, and\
        \ metadata.</p> <p>To read table metadata using <code>GetTable</code>, <code>Select</code>\
        \ action permissions for the table and system tables are required to complete\
        \ the operation.</p>"
      operationId: GetTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.GetTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.ListKeyspaces:
    post:
      description: Returns a list of keyspaces.
      operationId: ListKeyspaces
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.ListKeyspaces
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListKeyspacesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKeyspacesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.ListTables:
    post:
      description: Returns a list of tables for a specified keyspace.
      operationId: ListTables
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.ListTables
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTablesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTablesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.ListTagsForResource:
    post:
      description: Returns a list of all tags associated with the specified Amazon
        Keyspaces resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.RestoreTable:
    post:
      description: "<p>Restores the specified table to the specified point in time\
        \ within the <code>earliest_restorable_timestamp</code> and the current time.\
        \ For more information about restore points, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery_HowItWorks.html#howitworks_backup_window\"\
        > Time window for PITR continuous backups</a> in the <i>Amazon Keyspaces Developer\
        \ Guide</i>.</p> <p>Any number of users can execute up to 4 concurrent restores\
        \ (any type of restore) in a given account.</p> <p>When you restore using\
        \ point in time recovery, Amazon Keyspaces restores your source table's schema\
        \ and data to the state based on the selected timestamp <code>(day:hour:minute:second)</code>\
        \ to a new table. The Time to Live (TTL) settings are also restored to the\
        \ state based on the selected timestamp.</p> <p>In addition to the table's\
        \ schema, data, and TTL settings, <code>RestoreTable</code> restores the capacity\
        \ mode, encryption, and point-in-time recovery settings from the source table.\
        \ Unlike the table's schema data and TTL settings, which are restored based\
        \ on the selected timestamp, these settings are always restored based on the\
        \ table's settings as of the current time or when the table was deleted.</p>\
        \ <p>You can also overwrite these settings during restore:</p> <ul> <li> <p>Read/write\
        \ capacity mode</p> </li> <li> <p>Provisioned throughput capacity settings</p>\
        \ </li> <li> <p>Point-in-time (PITR) settings</p> </li> <li> <p>Tags</p> </li>\
        \ </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery_HowItWorks.html#howitworks_backup_settings\"\
        >PITR restore settings</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>\
        \ <p>Note that the following settings are not restored, and you must configure\
        \ them manually for the new table:</p> <ul> <li> <p>Automatic scaling policies\
        \ (for tables that use provisioned capacity mode)</p> </li> <li> <p>Identity\
        \ and Access Management (IAM) policies</p> </li> <li> <p>Amazon CloudWatch\
        \ metrics and alarms</p> </li> </ul>"
      operationId: RestoreTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.RestoreTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.TagResource:
    post:
      description: "<p>Associates a set of tags with a Amazon Keyspaces resource.\
        \ You can then activate these user-defined tags so that they appear on the\
        \ Cost Management Console for cost allocation tracking. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html\"\
        >Adding tags and labels to Amazon Keyspaces resources</a> in the <i>Amazon\
        \ Keyspaces Developer Guide</i>.</p> <p>For IAM policy examples that show\
        \ how to control access to Amazon Keyspaces resources based on tags, see <a\
        \ href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/security_iam_id-based-policy-examples.html#security_iam_id-based-policy-examples-tags\"\
        >Amazon Keyspaces resource access based on tags</a> in the <i>Amazon Keyspaces\
        \ Developer Guide</i>.</p>"
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.UntagResource:
    post:
      description: Removes the association of tags from a Amazon Keyspaces resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=KeyspacesService.UpdateTable:
    post:
      description: "Adds new columns to the table or updates one of the table's settings,\
        \ for example capacity mode, encryption, point-in-time recovery, or ttl settings.\
        \ Note that you can only update one specific table setting per update operation."
      operationId: UpdateTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - KeyspacesService.UpdateTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateKeyspaceResponse:
      example:
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The unique identifier of the keyspace in the format of an
              Amazon Resource Name (ARN).
      required:
      - resourceArn
      type: object
    CreateKeyspaceRequest:
      example:
        keyspaceName: ""
        replicationSpecification:
          regionList: ""
          replicationStrategy: ""
        tags: ""
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace to be created.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>A list of key-value pair tags to be attached to the keyspace.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html\"\
              >Adding tags and labels to Amazon Keyspaces resources</a> in the <i>Amazon\
              \ Keyspaces Developer Guide</i>.</p>"
        replicationSpecification:
          $ref: '#/components/schemas/CreateKeyspaceRequest_replicationSpecification'
      required:
      - keyspaceName
      title: CreateKeyspaceRequest
      type: object
    ValidationException: {}
    ServiceQuotaExceededException: {}
    InternalServerException: {}
    ConflictException: {}
    AccessDeniedException: {}
    CreateTableResponse:
      example:
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The unique identifier of the table in the format of an Amazon
              Resource Name (ARN).
      required:
      - resourceArn
      type: object
    CreateTableRequest:
      example:
        capacitySpecification:
          writeCapacityUnits: ""
          throughputMode: ""
          readCapacityUnits: ""
        encryptionSpecification:
          kmsKeyIdentifier: ""
          type: ""
        keyspaceName: ""
        clientSideTimestamps:
          status: ""
        pointInTimeRecovery:
          status: ""
        schemaDefinition:
          clusteringKeys: ""
          allColumns: ""
          partitionKeys: ""
          staticColumns: ""
        comment:
          message: ""
        defaultTimeToLive: ""
        ttl:
          status: ""
        tableName: ""
        tags: ""
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace that the table is going to be created
              in.
        tableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the table.
        schemaDefinition:
          $ref: '#/components/schemas/CreateTableRequest_schemaDefinition'
        comment:
          $ref: '#/components/schemas/CreateTableRequest_comment'
        capacitySpecification:
          $ref: '#/components/schemas/CreateTableRequest_capacitySpecification'
        encryptionSpecification:
          $ref: '#/components/schemas/CreateTableRequest_encryptionSpecification'
        pointInTimeRecovery:
          $ref: '#/components/schemas/CreateTableRequest_pointInTimeRecovery'
        ttl:
          $ref: '#/components/schemas/CreateTableRequest_ttl'
        defaultTimeToLive:
          allOf:
          - $ref: '#/components/schemas/DefaultTimeToLive'
          - description: "<p>The default Time to Live setting in seconds for the table.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl\"\
              >Setting the default TTL value for a table</a> in the <i>Amazon Keyspaces\
              \ Developer Guide</i>.</p>"
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>A list of key-value pair tags to be attached to the resource.\
              \ </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html\"\
              >Adding tags and labels to Amazon Keyspaces resources</a> in the <i>Amazon\
              \ Keyspaces Developer Guide</i>.</p>"
        clientSideTimestamps:
          $ref: '#/components/schemas/CreateTableRequest_clientSideTimestamps'
      required:
      - keyspaceName
      - schemaDefinition
      - tableName
      title: CreateTableRequest
      type: object
    ResourceNotFoundException: {}
    DeleteKeyspaceResponse:
      properties: {}
      type: object
    DeleteKeyspaceRequest:
      example:
        keyspaceName: ""
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace to be deleted.
      required:
      - keyspaceName
      title: DeleteKeyspaceRequest
      type: object
    DeleteTableResponse:
      properties: {}
      type: object
    DeleteTableRequest:
      example:
        keyspaceName: ""
        tableName: ""
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace of the to be deleted table.
        tableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the table to be deleted.
      required:
      - keyspaceName
      - tableName
      title: DeleteTableRequest
      type: object
    GetKeyspaceResponse:
      example:
        replicationRegions: ""
        keyspaceName: ""
        replicationStrategy: ""
        resourceArn: ""
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Returns the ARN of the keyspace.
        replicationStrategy:
          allOf:
          - $ref: '#/components/schemas/rs'
          - description: ' Returns the replication strategy of the keyspace. The options
              are <code>SINGLE_REGION</code> or <code>MULTI_REGION</code>. '
        replicationRegions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          - description: " If the <code>replicationStrategy</code> of the keyspace\
              \ is <code>MULTI_REGION</code>, a list of replication Regions is returned. "
      required:
      - keyspaceName
      - replicationStrategy
      - resourceArn
      type: object
    GetKeyspaceRequest:
      example:
        keyspaceName: ""
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace.
      required:
      - keyspaceName
      title: GetKeyspaceRequest
      type: object
    GetTableResponse:
      example:
        encryptionSpecification:
          kmsKeyIdentifier: ""
          type: ""
        keyspaceName: ""
        clientSideTimestamps:
          status: ""
        pointInTimeRecovery:
          earliestRestorableTimestamp: ""
          status: ""
        schemaDefinition:
          clusteringKeys: ""
          allColumns: ""
          partitionKeys: ""
          staticColumns: ""
        ttl:
          status: ""
        tableName: ""
        capacitySpecification:
          lastUpdateToPayPerRequestTimestamp: ""
          writeCapacityUnits: ""
          throughputMode: ""
          readCapacityUnits: ""
        creationTimestamp: ""
        resourceArn: ""
        comment:
          message: ""
        defaultTimeToLive: ""
        status: ""
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace that the specified table is stored
              in.
        tableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the specified table.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The Amazon Resource Name (ARN) of the specified table.
        creationTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The creation timestamp of the specified table.
        status:
          allOf:
          - $ref: '#/components/schemas/TableStatus'
          - description: The current status of the specified table.
        schemaDefinition:
          $ref: '#/components/schemas/GetTableResponse_schemaDefinition'
        capacitySpecification:
          $ref: '#/components/schemas/GetTableResponse_capacitySpecification'
        encryptionSpecification:
          $ref: '#/components/schemas/GetTableResponse_encryptionSpecification'
        pointInTimeRecovery:
          $ref: '#/components/schemas/GetTableResponse_pointInTimeRecovery'
        ttl:
          $ref: '#/components/schemas/GetTableResponse_ttl'
        defaultTimeToLive:
          allOf:
          - $ref: '#/components/schemas/DefaultTimeToLive'
          - description: The default Time to Live settings in seconds of the specified
              table.
        comment:
          $ref: '#/components/schemas/GetTableResponse_comment'
        clientSideTimestamps:
          $ref: '#/components/schemas/GetTableResponse_clientSideTimestamps'
      required:
      - keyspaceName
      - resourceArn
      - tableName
      type: object
    GetTableRequest:
      example:
        keyspaceName: ""
        tableName: ""
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace that the table is stored in.
        tableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the table.
      required:
      - keyspaceName
      - tableName
      title: GetTableRequest
      type: object
    ListKeyspacesResponse:
      example:
        keyspaces: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token to specify where to start paginating. This is the
              <code>NextToken</code> from a previously truncated response.
        keyspaces:
          allOf:
          - $ref: '#/components/schemas/KeyspaceSummaryList'
          - description: A list of keyspaces.
      required:
      - keyspaces
      type: object
    ListKeyspacesRequest:
      example:
        nextToken: ""
        maxResults: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token. To resume pagination, provide the\
              \ <code>NextToken</code> value as argument of a subsequent API invocation."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The total number of keyspaces to return in the output. If\
              \ the total number of keyspaces available is more than the value specified,\
              \ a <code>NextToken</code> is provided in the output. To resume pagination,\
              \ provide the <code>NextToken</code> value as an argument of a subsequent\
              \ API invocation."
      title: ListKeyspacesRequest
      type: object
    ListTablesResponse:
      example:
        tables: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token to specify where to start paginating. This is the
              <code>NextToken</code> from a previously truncated response.
        tables:
          allOf:
          - $ref: '#/components/schemas/TableSummaryList'
          - description: A list of tables.
      type: object
    ListTablesRequest:
      example:
        keyspaceName: ""
        nextToken: ""
        maxResults: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token. To resume pagination, provide the\
              \ <code>NextToken</code> value as an argument of a subsequent API invocation."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The total number of tables to return in the output. If the\
              \ total number of tables available is more than the value specified,\
              \ a <code>NextToken</code> is provided in the output. To resume pagination,\
              \ provide the <code>NextToken</code> value as an argument of a subsequent\
              \ API invocation."
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace.
      required:
      - keyspaceName
      title: ListTablesRequest
      type: object
    ListTagsForResourceResponse:
      example:
        nextToken: ""
        tags: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token to specify where to start paginating. This is the
              <code>NextToken</code> from a previously truncated response.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags.
      type: object
    ListTagsForResourceRequest:
      example:
        nextToken: ""
        maxResults: ""
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The Amazon Resource Name (ARN) of the Amazon Keyspaces resource.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token. To resume pagination, provide the\
              \ <code>NextToken</code> value as argument of a subsequent API invocation."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The total number of tags to return in the output. If the\
              \ total number of tags available is more than the value specified, a\
              \ <code>NextToken</code> is provided in the output. To resume pagination,\
              \ provide the <code>NextToken</code> value as an argument of a subsequent\
              \ API invocation."
      required:
      - resourceArn
      title: ListTagsForResourceRequest
      type: object
    RestoreTableResponse:
      example:
        restoredTableARN: ""
      properties:
        restoredTableARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The Amazon Resource Name (ARN) of the restored table.
      required:
      - restoredTableARN
      type: object
    RestoreTableRequest:
      example:
        restoreTimestamp: ""
        sourceTableName: ""
        targetKeyspaceName: ""
        capacitySpecificationOverride:
          writeCapacityUnits: ""
          throughputMode: ""
          readCapacityUnits: ""
        tagsOverride: ""
        sourceKeyspaceName: ""
        pointInTimeRecoveryOverride:
          status: ""
        targetTableName: ""
        encryptionSpecificationOverride:
          kmsKeyIdentifier: ""
          type: ""
      properties:
        sourceKeyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The keyspace name of the source table.
        sourceTableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the source table.
        targetKeyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the target keyspace.
        targetTableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the target table.
        restoreTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The restore timestamp in ISO 8601 format.
        capacitySpecificationOverride:
          $ref: '#/components/schemas/RestoreTableRequest_capacitySpecificationOverride'
        encryptionSpecificationOverride:
          $ref: '#/components/schemas/RestoreTableRequest_encryptionSpecificationOverride'
        pointInTimeRecoveryOverride:
          $ref: '#/components/schemas/RestoreTableRequest_pointInTimeRecoveryOverride'
        tagsOverride:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>A list of key-value pair tags to be attached to the restored\
              \ table. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html\"\
              >Adding tags and labels to Amazon Keyspaces resources</a> in the <i>Amazon\
              \ Keyspaces Developer Guide</i>.</p>"
      required:
      - sourceKeyspaceName
      - sourceTableName
      - targetKeyspaceName
      - targetTableName
      title: RestoreTableRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        resourceArn: ""
        tags: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The Amazon Resource Name (ARN) of the Amazon Keyspaces resource
              to which to add tags.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the Amazon Keyspaces resource.
      required:
      - resourceArn
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        resourceArn: ""
        tags: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The Amazon Keyspaces resource that the tags will be removed
              from. This value is an Amazon Resource Name (ARN).
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of existing tags to be removed from the Amazon Keyspaces
              resource.
      required:
      - resourceArn
      - tags
      title: UntagResourceRequest
      type: object
    UpdateTableResponse:
      example:
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The Amazon Resource Name (ARN) of the modified table.
      required:
      - resourceArn
      type: object
    UpdateTableRequest:
      example:
        capacitySpecification:
          writeCapacityUnits: ""
          throughputMode: ""
          readCapacityUnits: ""
        encryptionSpecification:
          kmsKeyIdentifier: ""
          type: ""
        keyspaceName: ""
        clientSideTimestamps:
          status: ""
        addColumns: ""
        pointInTimeRecovery:
          status: ""
        defaultTimeToLive: ""
        ttl:
          status: ""
        tableName: ""
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace the specified table is stored in.
        tableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the table.
        addColumns:
          allOf:
          - $ref: '#/components/schemas/ColumnDefinitionList'
          - description: "<p>For each column to be added to the specified table:</p>\
              \ <ul> <li> <p> <code>name</code> - The name of the column.</p> </li>\
              \ <li> <p> <code>type</code> - An Amazon Keyspaces data type. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types\"\
              >Data types</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>\
              \ </li> </ul>"
        capacitySpecification:
          $ref: '#/components/schemas/UpdateTableRequest_capacitySpecification'
        encryptionSpecification:
          $ref: '#/components/schemas/UpdateTableRequest_encryptionSpecification'
        pointInTimeRecovery:
          $ref: '#/components/schemas/UpdateTableRequest_pointInTimeRecovery'
        ttl:
          $ref: '#/components/schemas/UpdateTableRequest_ttl'
        defaultTimeToLive:
          allOf:
          - $ref: '#/components/schemas/DefaultTimeToLive'
          - description: "<p>The default Time to Live setting in seconds for the table.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl\"\
              >Setting the default TTL value for a table</a> in the <i>Amazon Keyspaces\
              \ Developer Guide</i>.</p>"
        clientSideTimestamps:
          $ref: '#/components/schemas/UpdateTableRequest_clientSideTimestamps'
      required:
      - keyspaceName
      - tableName
      title: UpdateTableRequest
      type: object
    ARN:
      maxLength: 1000
      minLength: 20
      pattern: "arn:(aws[a-zA-Z0-9-]*):cassandra:.+.*"
      type: string
    ThroughputMode:
      enum:
      - PAY_PER_REQUEST
      - PROVISIONED
      type: string
    CapacityUnits:
      minimum: 1
      type: integer
    CapacitySpecification:
      description: "<p>Amazon Keyspaces has two read/write capacity modes for processing\
        \ reads and writes on your tables: </p> <ul> <li> <p>On-demand (default)</p>\
        \ </li> <li> <p>Provisioned</p> </li> </ul> <p>The read/write capacity mode\
        \ that you choose controls how you are charged for read and write throughput\
        \ and how table throughput capacity is managed.</p> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\"\
        >Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      properties:
        throughputMode:
          allOf:
          - $ref: '#/components/schemas/ThroughputMode'
          - description: "<p>The read/write throughput capacity mode for a table.\
              \ The options are:</p> <ul> <li> <p> <code>throughputMode:PAY_PER_REQUEST</code>\
              \ and </p> </li> <li> <p> <code>throughputMode:PROVISIONED</code> -\
              \ Provisioned capacity mode requires <code>readCapacityUnits</code>\
              \ and <code>writeCapacityUnits</code> as input.</p> </li> </ul> <p>The\
              \ default is <code>throughput_mode:PAY_PER_REQUEST</code>.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\"\
              >Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer\
              \ Guide</i>.</p>"
        readCapacityUnits:
          allOf:
          - $ref: '#/components/schemas/CapacityUnits'
          - description: The throughput capacity specified for <code>read</code> operations
              defined in <code>read capacity units</code> <code>(RCUs)</code>.
        writeCapacityUnits:
          allOf:
          - $ref: '#/components/schemas/CapacityUnits'
          - description: The throughput capacity specified for <code>write</code>
              operations defined in <code>write capacity units</code> <code>(WCUs)</code>.
      required:
      - throughputMode
      type: object
    Timestamp:
      format: date-time
      type: string
    CapacitySpecificationSummary:
      description: "<p>The read/write throughput capacity mode for a table. The options\
        \ are:</p> <ul> <li> <p> <code>throughputMode:PAY_PER_REQUEST</code> and </p>\
        \ </li> <li> <p> <code>throughputMode:PROVISIONED</code>.</p> </li> </ul>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\"\
        >Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      properties:
        throughputMode:
          allOf:
          - $ref: '#/components/schemas/ThroughputMode'
          - description: "<p>The read/write throughput capacity mode for a table.\
              \ The options are:</p> <ul> <li> <p> <code>throughputMode:PAY_PER_REQUEST</code>\
              \ and </p> </li> <li> <p> <code>throughputMode:PROVISIONED</code> -\
              \ Provisioned capacity mode requires <code>readCapacityUnits</code>\
              \ and <code>writeCapacityUnits</code> as input. </p> </li> </ul> <p>The\
              \ default is <code>throughput_mode:PAY_PER_REQUEST</code>.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\"\
              >Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer\
              \ Guide</i>.</p>"
        readCapacityUnits:
          allOf:
          - $ref: '#/components/schemas/CapacityUnits'
          - description: The throughput capacity specified for <code>read</code> operations
              defined in <code>read capacity units</code> <code>(RCUs)</code>.
        writeCapacityUnits:
          allOf:
          - $ref: '#/components/schemas/CapacityUnits'
          - description: The throughput capacity specified for <code>write</code>
              operations defined in <code>write capacity units</code> <code>(WCUs)</code>.
        lastUpdateToPayPerRequestTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of the last operation that changed the provisioned
              throughput capacity of a table.
      required:
      - throughputMode
      type: object
    ClientSideTimestampsStatus:
      enum:
      - ENABLED
      type: string
    ClientSideTimestamps:
      description: "<p>The client-side timestamp setting of the table.</p> <p>For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/client-side-timestamps-how-it-works.html\"\
        >How it works: Amazon Keyspaces client-side timestamps</a> in the <i>Amazon\
        \ Keyspaces Developer Guide</i>.</p>"
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/ClientSideTimestampsStatus'
          - description: Shows how to enable client-side timestamps settings for the
              specified table.
      required:
      - status
      type: object
    GenericString:
      type: string
    SortOrder:
      enum:
      - ASC
      - DESC
      type: string
    ClusteringKey:
      description: The optional clustering column portion of your primary key determines
        how the data is clustered and sorted within each partition.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name(s) of the clustering column(s).
        orderBy:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: Sets the ascendant (<code>ASC</code>) or descendant (<code>DESC</code>)
              order modifier.
      required:
      - name
      - orderBy
      type: object
    ClusteringKeyList:
      items:
        $ref: '#/components/schemas/ClusteringKey'
      type: array
    ColumnDefinition:
      description: The names and data types of regular columns.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name of the column.
        type:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The data type of the column. For a list of available data\
              \ types, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types\"\
              >Data types</a> in the <i>Amazon Keyspaces Developer Guide</i>."
      required:
      - name
      - type
      type: object
    ColumnDefinitionList:
      items:
        $ref: '#/components/schemas/ColumnDefinition'
      minItems: 1
      type: array
    String:
      type: string
    Comment:
      description: An optional comment that describes the table.
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An optional description of the table.
      required:
      - message
      type: object
    KeyspaceName:
      maxLength: 48
      minLength: 1
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_]{0,47}"
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 60
      minItems: 1
      type: array
    ReplicationSpecification:
      description: <p> The replication specification of the keyspace includes:</p>
        <ul> <li> <p> <code>regionList</code> - up to six Amazon Web Services Regions
        where the keyspace is replicated in.</p> </li> <li> <p> <code>replicationStrategy</code>
        - the required value is <code>SINGLE_REGION</code> or <code>MULTI_REGION</code>.</p>
        </li> </ul>
      properties:
        replicationStrategy:
          allOf:
          - $ref: '#/components/schemas/rs'
          - description: " The <code>replicationStrategy</code> of a keyspace, the\
              \ required value is <code>SINGLE_REGION</code> or <code>MULTI_REGION</code>. "
        regionList:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          - description: ' The <code>regionList</code> can contain up to six Amazon
              Web Services Regions where the keyspace is replicated in. '
      required:
      - replicationStrategy
      type: object
    TableName:
      maxLength: 48
      minLength: 1
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_]{0,47}"
      type: string
    SchemaDefinition:
      description: Describes the schema of the table.
      properties:
        allColumns:
          allOf:
          - $ref: '#/components/schemas/ColumnDefinitionList'
          - description: The regular columns of the table.
        partitionKeys:
          allOf:
          - $ref: '#/components/schemas/PartitionKeyList'
          - description: The columns that are part of the partition key of the table
              .
        clusteringKeys:
          allOf:
          - $ref: '#/components/schemas/ClusteringKeyList'
          - description: The columns that are part of the clustering key of the table.
        staticColumns:
          allOf:
          - $ref: '#/components/schemas/StaticColumnList'
          - description: The columns that have been defined as <code>STATIC</code>.
              Static columns store values that are shared by all rows in the same
              partition.
      required:
      - allColumns
      - partitionKeys
      type: object
    EncryptionSpecification:
      description: "<p>Amazon Keyspaces encrypts and decrypts the table data at rest\
        \ transparently and integrates with Key Management Service for storing and\
        \ managing the encryption key. You can choose one of the following KMS keys\
        \ (KMS keys):</p> <ul> <li> <p>Amazon Web Services owned key - This is the\
        \ default encryption type. The key is owned by Amazon Keyspaces (no additional\
        \ charge). </p> </li> <li> <p>Customer managed key - This key is stored in\
        \ your account and is created, owned, and managed by you. You have full control\
        \ over the customer managed key (KMS charges apply).</p> </li> </ul> <p>For\
        \ more information about encryption at rest in Amazon Keyspaces, see <a href=\"\
        https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\"\
        >Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>\
        \ <p>For more information about KMS, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\"\
        >KMS management service concepts</a> in the <i>Key Management Service Developer\
        \ Guide</i>.</p>"
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/EncryptionType'
          - description: "<p>The encryption option specified for the table. You can\
              \ choose one of the following KMS keys (KMS keys):</p> <ul> <li> <p>\
              \ <code>type:AWS_OWNED_KMS_KEY</code> - This key is owned by Amazon\
              \ Keyspaces. </p> </li> <li> <p> <code>type:CUSTOMER_MANAGED_KMS_KEY</code>\
              \ - This key is stored in your account and is created, owned, and managed\
              \ by you. This option requires the <code>kms_key_identifier</code> of\
              \ the KMS key in Amazon Resource Name (ARN) format as input. </p> </li>\
              \ </ul> <p>The default is <code>type:AWS_OWNED_KMS_KEY</code>. </p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\"\
              >Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
        kmsKeyIdentifier:
          allOf:
          - $ref: '#/components/schemas/kmsKeyARN'
          - description: "The Amazon Resource Name (ARN) of the customer managed KMS\
              \ key, for example <code>kms_key_identifier:ARN</code>."
      required:
      - type
      type: object
    PointInTimeRecovery:
      description: "<p>Point-in-time recovery (PITR) helps protect your Amazon Keyspaces\
        \ tables from accidental write or delete operations by providing you continuous\
        \ backups of your table data.</p> <p>For more information, see <a href=\"\
        https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html\"\
        >Point-in-time recovery</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/PointInTimeRecoveryStatus'
          - description: <p>The options are:</p> <ul> <li> <p> <code>status=ENABLED</code>
              </p> </li> <li> <p> <code>status=DISABLED</code> </p> </li> </ul>
      required:
      - status
      type: object
    TimeToLive:
      description: "<p>Enable custom Time to Live (TTL) settings for rows and columns\
        \ without setting a TTL default for the specified table.</p> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_enabling\"\
        >Enabling TTL on tables</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/TimeToLiveStatus'
          - description: Shows how to enable custom Time to Live (TTL) settings for
              the specified table.
      required:
      - status
      type: object
    DefaultTimeToLive:
      maximum: 630720000
      minimum: 1
      type: integer
    EncryptionType:
      enum:
      - CUSTOMER_MANAGED_KMS_KEY
      - AWS_OWNED_KMS_KEY
      type: string
    kmsKeyARN:
      maxLength: 5096
      minLength: 1
      type: string
    rs:
      enum:
      - SINGLE_REGION
      - MULTI_REGION
      maxLength: 20
      minLength: 1
      type: string
    RegionList:
      items:
        $ref: '#/components/schemas/region'
      maxItems: 6
      minItems: 2
      type: array
    TableStatus:
      enum:
      - ACTIVE
      - CREATING
      - UPDATING
      - DELETING
      - DELETED
      - RESTORING
      - INACCESSIBLE_ENCRYPTION_CREDENTIALS
      type: string
    PointInTimeRecoverySummary:
      description: The point-in-time recovery status of the specified table.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/PointInTimeRecoveryStatus'
          - description: Shows if point-in-time recovery is enabled or disabled for
              the specified table.
        earliestRestorableTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Specifies the earliest possible restore point of the table
              in ISO 8601 format.
      required:
      - status
      type: object
    KeyspaceSummary:
      description: Represents the properties of a keyspace.
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The unique identifier of the keyspace in the format of an
              Amazon Resource Name (ARN).
        replicationStrategy:
          allOf:
          - $ref: '#/components/schemas/rs'
          - description: ' This property specifies if a keyspace is a single Region
              keyspace or a multi-Region keyspace. The available values are <code>SINGLE_REGION</code>
              or <code>MULTI_REGION</code>. '
        replicationRegions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          - description: " If the <code>replicationStrategy</code> of the keyspace\
              \ is <code>MULTI_REGION</code>, a list of replication Regions is returned. "
      required:
      - keyspaceName
      - replicationStrategy
      - resourceArn
      type: object
    KeyspaceSummaryList:
      items:
        $ref: '#/components/schemas/KeyspaceSummary'
      type: array
    NextToken:
      maxLength: 2048
      minLength: 1
      type: string
    MaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    TableSummaryList:
      items:
        $ref: '#/components/schemas/TableSummary'
      type: array
    PartitionKey:
      description: "The partition key portion of the primary key is required and determines\
        \ how Amazon Keyspaces stores the data. The partition key can be a single\
        \ column, or it can be a compound value composed of two or more columns."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name(s) of the partition key column(s).
      required:
      - name
      type: object
    PartitionKeyList:
      items:
        $ref: '#/components/schemas/PartitionKey'
      minItems: 1
      type: array
    PointInTimeRecoveryStatus:
      enum:
      - ENABLED
      - DISABLED
      type: string
    region:
      maxLength: 25
      minLength: 2
      type: string
    StaticColumnList:
      items:
        $ref: '#/components/schemas/StaticColumn'
      type: array
    StaticColumn:
      description: The static columns of the table. Static columns store values that
        are shared by all rows in the same partition.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name of the static column.
      required:
      - name
      type: object
    TableSummary:
      description: "Returns the name of the specified table, the keyspace it is stored\
        \ in, and the unique identifier in the format of an Amazon Resource Name (ARN)."
      properties:
        keyspaceName:
          allOf:
          - $ref: '#/components/schemas/KeyspaceName'
          - description: The name of the keyspace that the table is stored in.
        tableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the table.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The unique identifier of the table in the format of an Amazon
              Resource Name (ARN).
      required:
      - keyspaceName
      - resourceArn
      - tableName
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    TagValue:
      maxLength: 256
      minLength: 1
      type: string
    Tag:
      description: "<p>Describes a tag. A tag is a key-value pair. You can add up\
        \ to 50 tags to a single Amazon Keyspaces resource.</p> <p>Amazon Web Services-assigned\
        \ tag names and values are automatically assigned the <code>aws:</code> prefix,\
        \ which the user cannot assign. Amazon Web Services-assigned tag names do\
        \ not count towards the tag limit of 50. User-assigned tag names have the\
        \ prefix <code>user:</code> in the Cost Allocation Report. You cannot backdate\
        \ the application of a tag.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html\"\
        >Adding tags and labels to Amazon Keyspaces resources</a> in the <i>Amazon\
        \ Keyspaces Developer Guide</i>.</p>"
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: "The key of the tag. Tag keys are case sensitive. Each Amazon\
              \ Keyspaces resource can only have up to one tag with the same key.\
              \ If you try to add an existing tag (same key), the existing tag value\
              \ will be updated to the new value."
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of the tag. Tag values are case-sensitive and can
              be null.
      required:
      - key
      - value
      type: object
    TimeToLiveStatus:
      enum:
      - ENABLED
      type: string
    CreateKeyspaceRequest_replicationSpecification:
      allOf:
      - $ref: '#/components/schemas/ReplicationSpecification'
      - description: "<p> The replication specification of the keyspace includes:</p>\
          \ <ul> <li> <p> <code>replicationStrategy</code> - the required value is\
          \ <code>SINGLE_REGION</code> or <code>MULTI_REGION</code>.</p> </li> <li>\
          \ <p> <code>regionList</code> - if the <code>replicationStrategy</code>\
          \ is <code>MULTI_REGION</code>, the <code>regionList</code> requires the\
          \ current Region and at least one additional Amazon Web Services Region\
          \ where the keyspace is going to be replicated in. The maximum number of\
          \ supported replication Regions including the current Region is six.</p>\
          \ </li> </ul>"
      example:
        regionList: ""
        replicationStrategy: ""
    CreateTableRequest_schemaDefinition:
      allOf:
      - $ref: '#/components/schemas/SchemaDefinition'
      - description: "<p>The <code>schemaDefinition</code> consists of the following\
          \ parameters.</p> <p>For each column to be created:</p> <ul> <li> <p> <code>name</code>\
          \ - The name of the column.</p> </li> <li> <p> <code>type</code> - An Amazon\
          \ Keyspaces data type. For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types\"\
          >Data types</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p> </li>\
          \ </ul> <p>The primary key of the table consists of the following columns:</p>\
          \ <ul> <li> <p> <code>partitionKeys</code> - The partition key can be a\
          \ single column, or it can be a compound value composed of two or more columns.\
          \ The partition key portion of the primary key is required and determines\
          \ how Amazon Keyspaces stores your data.</p> </li> <li> <p> <code>name</code>\
          \ - The name of each partition key column.</p> </li> <li> <p> <code>clusteringKeys</code>\
          \ - The optional clustering column portion of your primary key determines\
          \ how the data is clustered and sorted within each partition.</p> </li>\
          \ <li> <p> <code>name</code> - The name of the clustering column. </p> </li>\
          \ <li> <p> <code>orderBy</code> - Sets the ascendant (<code>ASC</code>)\
          \ or descendant (<code>DESC</code>) order modifier.</p> <p>To define a column\
          \ as static use <code>staticColumns</code> - Static columns store values\
          \ that are shared by all rows in the same partition:</p> </li> <li> <p>\
          \ <code>name</code> - The name of the column.</p> </li> <li> <p> <code>type</code>\
          \ - An Amazon Keyspaces data type.</p> </li> </ul>"
      example:
        clusteringKeys: ""
        allColumns: ""
        partitionKeys: ""
        staticColumns: ""
    CreateTableRequest_comment:
      allOf:
      - $ref: '#/components/schemas/Comment'
      - description: This parameter allows to enter a description of the table.
      example:
        message: ""
    CreateTableRequest_capacitySpecification:
      allOf:
      - $ref: '#/components/schemas/CapacitySpecification'
      - description: "<p>Specifies the read/write throughput capacity mode for the\
          \ table. The options are:</p> <ul> <li> <p> <code>throughputMode:PAY_PER_REQUEST</code>\
          \ and </p> </li> <li> <p> <code>throughputMode:PROVISIONED</code> - Provisioned\
          \ capacity mode requires <code>readCapacityUnits</code> and <code>writeCapacityUnits</code>\
          \ as input.</p> </li> </ul> <p>The default is <code>throughput_mode:PAY_PER_REQUEST</code>.</p>\
          \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\"\
          >Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      example:
        writeCapacityUnits: ""
        throughputMode: ""
        readCapacityUnits: ""
    CreateTableRequest_encryptionSpecification:
      allOf:
      - $ref: '#/components/schemas/EncryptionSpecification'
      - description: "<p>Specifies how the encryption key for encryption at rest is\
          \ managed for the table. You can choose one of the following KMS key (KMS\
          \ key):</p> <ul> <li> <p> <code>type:AWS_OWNED_KMS_KEY</code> - This key\
          \ is owned by Amazon Keyspaces. </p> </li> <li> <p> <code>type:CUSTOMER_MANAGED_KMS_KEY</code>\
          \ - This key is stored in your account and is created, owned, and managed\
          \ by you. This option requires the <code>kms_key_identifier</code> of the\
          \ KMS key in Amazon Resource Name (ARN) format as input.</p> </li> </ul>\
          \ <p>The default is <code>type:AWS_OWNED_KMS_KEY</code>.</p> <p>For more\
          \ information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\"\
          >Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      example:
        kmsKeyIdentifier: ""
        type: ""
    CreateTableRequest_pointInTimeRecovery:
      allOf:
      - $ref: '#/components/schemas/PointInTimeRecovery'
      - description: "<p>Specifies if <code>pointInTimeRecovery</code> is enabled\
          \ or disabled for the table. The options are:</p> <ul> <li> <p> <code>status=ENABLED</code>\
          \ </p> </li> <li> <p> <code>status=DISABLED</code> </p> </li> </ul> <p>If\
          \ it's not specified, the default is <code>status=DISABLED</code>.</p> <p>For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html\"\
          >Point-in-time recovery</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      example:
        status: ""
    CreateTableRequest_ttl:
      allOf:
      - $ref: '#/components/schemas/TimeToLive'
      - description: "<p>Enables Time to Live custom settings for the table. The options\
          \ are:</p> <ul> <li> <p> <code>status:enabled</code> </p> </li> <li> <p>\
          \ <code>status:disabled</code> </p> </li> </ul> <p>The default is <code>status:disabled</code>.\
          \ After <code>ttl</code> is enabled, you can't disable it for the table.</p>\
          \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html\"\
          >Expiring data by using Amazon Keyspaces Time to Live (TTL)</a> in the <i>Amazon\
          \ Keyspaces Developer Guide</i>.</p>"
      example:
        status: ""
    CreateTableRequest_clientSideTimestamps:
      allOf:
      - $ref: '#/components/schemas/ClientSideTimestamps'
      - description: "<p> Enables client-side timestamps for the table. By default,\
          \ the setting is disabled. You can enable client-side timestamps with the\
          \ following option:</p> <ul> <li> <p> <code>status: \"enabled\"</code> </p>\
          \ </li> </ul> <p>Once client-side timestamps are enabled for a table, this\
          \ setting cannot be disabled.</p>"
      example:
        status: ""
    GetTableResponse_schemaDefinition:
      allOf:
      - $ref: '#/components/schemas/SchemaDefinition'
      - description: The schema definition of the specified table.
      example:
        clusteringKeys: ""
        allColumns: ""
        partitionKeys: ""
        staticColumns: ""
    GetTableResponse_capacitySpecification:
      allOf:
      - $ref: '#/components/schemas/CapacitySpecificationSummary'
      - description: <p>The read/write throughput capacity mode for a table. The options
          are:</p> <ul> <li> <p> <code>throughputMode:PAY_PER_REQUEST</code> </p>
          </li> <li> <p> <code>throughputMode:PROVISIONED</code> </p> </li> </ul>
      example:
        lastUpdateToPayPerRequestTimestamp: ""
        writeCapacityUnits: ""
        throughputMode: ""
        readCapacityUnits: ""
    GetTableResponse_encryptionSpecification:
      allOf:
      - $ref: '#/components/schemas/EncryptionSpecification'
      - description: The encryption settings of the specified table.
      example:
        kmsKeyIdentifier: ""
        type: ""
    GetTableResponse_pointInTimeRecovery:
      allOf:
      - $ref: '#/components/schemas/PointInTimeRecoverySummary'
      - description: The point-in-time recovery status of the specified table.
      example:
        earliestRestorableTimestamp: ""
        status: ""
    GetTableResponse_ttl:
      allOf:
      - $ref: '#/components/schemas/TimeToLive'
      - description: The custom Time to Live settings of the specified table.
      example:
        status: ""
    GetTableResponse_comment:
      allOf:
      - $ref: '#/components/schemas/Comment'
      - description: The the description of the specified table.
      example:
        message: ""
    GetTableResponse_clientSideTimestamps:
      allOf:
      - $ref: '#/components/schemas/ClientSideTimestamps'
      - description: ' The client-side timestamps setting of the table.'
      example:
        status: ""
    RestoreTableRequest_capacitySpecificationOverride:
      allOf:
      - $ref: '#/components/schemas/CapacitySpecification'
      - description: "<p>Specifies the read/write throughput capacity mode for the\
          \ target table. The options are:</p> <ul> <li> <p> <code>throughputMode:PAY_PER_REQUEST</code>\
          \ </p> </li> <li> <p> <code>throughputMode:PROVISIONED</code> - Provisioned\
          \ capacity mode requires <code>readCapacityUnits</code> and <code>writeCapacityUnits</code>\
          \ as input.</p> </li> </ul> <p>The default is <code>throughput_mode:PAY_PER_REQUEST</code>.</p>\
          \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\"\
          >Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      example:
        writeCapacityUnits: ""
        throughputMode: ""
        readCapacityUnits: ""
    RestoreTableRequest_encryptionSpecificationOverride:
      allOf:
      - $ref: '#/components/schemas/EncryptionSpecification'
      - description: "<p>Specifies the encryption settings for the target table. You\
          \ can choose one of the following KMS key (KMS key):</p> <ul> <li> <p> <code>type:AWS_OWNED_KMS_KEY</code>\
          \ - This key is owned by Amazon Keyspaces. </p> </li> <li> <p> <code>type:CUSTOMER_MANAGED_KMS_KEY</code>\
          \ - This key is stored in your account and is created, owned, and managed\
          \ by you. This option requires the <code>kms_key_identifier</code> of the\
          \ KMS key in Amazon Resource Name (ARN) format as input. </p> </li> </ul>\
          \ <p>The default is <code>type:AWS_OWNED_KMS_KEY</code>.</p> <p>For more\
          \ information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\"\
          >Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      example:
        kmsKeyIdentifier: ""
        type: ""
    RestoreTableRequest_pointInTimeRecoveryOverride:
      allOf:
      - $ref: '#/components/schemas/PointInTimeRecovery'
      - description: "<p>Specifies the <code>pointInTimeRecovery</code> settings for\
          \ the target table. The options are:</p> <ul> <li> <p> <code>status=ENABLED</code>\
          \ </p> </li> <li> <p> <code>status=DISABLED</code> </p> </li> </ul> <p>If\
          \ it's not specified, the default is <code>status=DISABLED</code>.</p> <p>For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html\"\
          >Point-in-time recovery</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      example:
        status: ""
    UpdateTableRequest_capacitySpecification:
      allOf:
      - $ref: '#/components/schemas/CapacitySpecification'
      - description: "<p>Modifies the read/write throughput capacity mode for the\
          \ table. The options are:</p> <ul> <li> <p> <code>throughputMode:PAY_PER_REQUEST</code>\
          \ and </p> </li> <li> <p> <code>throughputMode:PROVISIONED</code> - Provisioned\
          \ capacity mode requires <code>readCapacityUnits</code> and <code>writeCapacityUnits</code>\
          \ as input.</p> </li> </ul> <p>The default is <code>throughput_mode:PAY_PER_REQUEST</code>.</p>\
          \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\"\
          >Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      example:
        writeCapacityUnits: ""
        throughputMode: ""
        readCapacityUnits: ""
    UpdateTableRequest_encryptionSpecification:
      allOf:
      - $ref: '#/components/schemas/EncryptionSpecification'
      - description: "<p>Modifies the encryption settings of the table. You can choose\
          \ one of the following KMS key (KMS key):</p> <ul> <li> <p> <code>type:AWS_OWNED_KMS_KEY</code>\
          \ - This key is owned by Amazon Keyspaces. </p> </li> <li> <p> <code>type:CUSTOMER_MANAGED_KMS_KEY</code>\
          \ - This key is stored in your account and is created, owned, and managed\
          \ by you. This option requires the <code>kms_key_identifier</code> of the\
          \ KMS key in Amazon Resource Name (ARN) format as input. </p> </li> </ul>\
          \ <p>The default is <code>AWS_OWNED_KMS_KEY</code>.</p> <p>For more information,\
          \ see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\"\
          >Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      example:
        kmsKeyIdentifier: ""
        type: ""
    UpdateTableRequest_pointInTimeRecovery:
      allOf:
      - $ref: '#/components/schemas/PointInTimeRecovery'
      - description: "<p>Modifies the <code>pointInTimeRecovery</code> settings of\
          \ the table. The options are:</p> <ul> <li> <p> <code>status=ENABLED</code>\
          \ </p> </li> <li> <p> <code>status=DISABLED</code> </p> </li> </ul> <p>If\
          \ it's not specified, the default is <code>status=DISABLED</code>.</p> <p>For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html\"\
          >Point-in-time recovery</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      example:
        status: ""
    UpdateTableRequest_ttl:
      allOf:
      - $ref: '#/components/schemas/TimeToLive'
      - description: "<p>Modifies Time to Live custom settings for the table. The\
          \ options are:</p> <ul> <li> <p> <code>status:enabled</code> </p> </li>\
          \ <li> <p> <code>status:disabled</code> </p> </li> </ul> <p>The default\
          \ is <code>status:disabled</code>. After <code>ttl</code> is enabled, you\
          \ can't disable it for the table.</p> <p>For more information, see <a href=\"\
          https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html\">Expiring\
          \ data by using Amazon Keyspaces Time to Live (TTL)</a> in the <i>Amazon\
          \ Keyspaces Developer Guide</i>.</p>"
      example:
        status: ""
    UpdateTableRequest_clientSideTimestamps:
      allOf:
      - $ref: '#/components/schemas/ClientSideTimestamps'
      - description: "<p>Enables client-side timestamps for the table. By default,\
          \ the setting is disabled. You can enable client-side timestamps with the\
          \ following option:</p> <ul> <li> <p> <code>status: \"enabled\"</code> </p>\
          \ </li> </ul> <p>Once client-side timestamps are enabled for a table, this\
          \ setting cannot be disabled.</p>"
      example:
        status: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

