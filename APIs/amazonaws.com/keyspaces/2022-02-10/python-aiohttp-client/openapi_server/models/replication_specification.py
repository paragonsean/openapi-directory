# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rs import Rs
from openapi_server import util


class ReplicationSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replication_strategy: Rs=None, region_list: List=None):
        """ReplicationSpecification - a model defined in OpenAPI

        :param replication_strategy: The replication_strategy of this ReplicationSpecification.
        :param region_list: The region_list of this ReplicationSpecification.
        """
        self.openapi_types = {
            'replication_strategy': Rs,
            'region_list': List
        }

        self.attribute_map = {
            'replication_strategy': 'replicationStrategy',
            'region_list': 'regionList'
        }

        self._replication_strategy = replication_strategy
        self._region_list = region_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicationSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicationSpecification of this ReplicationSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replication_strategy(self):
        """Gets the replication_strategy of this ReplicationSpecification.


        :return: The replication_strategy of this ReplicationSpecification.
        :rtype: Rs
        """
        return self._replication_strategy

    @replication_strategy.setter
    def replication_strategy(self, replication_strategy):
        """Sets the replication_strategy of this ReplicationSpecification.


        :param replication_strategy: The replication_strategy of this ReplicationSpecification.
        :type replication_strategy: Rs
        """
        if replication_strategy is None:
            raise ValueError("Invalid value for `replication_strategy`, must not be `None`")

        self._replication_strategy = replication_strategy

    @property
    def region_list(self):
        """Gets the region_list of this ReplicationSpecification.


        :return: The region_list of this ReplicationSpecification.
        :rtype: List
        """
        return self._region_list

    @region_list.setter
    def region_list(self, region_list):
        """Sets the region_list of this ReplicationSpecification.


        :param region_list: The region_list of this ReplicationSpecification.
        :type region_list: List
        """

        self._region_list = region_list
