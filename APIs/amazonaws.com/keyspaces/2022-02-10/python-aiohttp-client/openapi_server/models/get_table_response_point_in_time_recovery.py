# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.point_in_time_recovery_status import PointInTimeRecoveryStatus
from openapi_server import util


class GetTableResponsePointInTimeRecovery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: PointInTimeRecoveryStatus=None, earliest_restorable_timestamp: datetime=None):
        """GetTableResponsePointInTimeRecovery - a model defined in OpenAPI

        :param status: The status of this GetTableResponsePointInTimeRecovery.
        :param earliest_restorable_timestamp: The earliest_restorable_timestamp of this GetTableResponsePointInTimeRecovery.
        """
        self.openapi_types = {
            'status': PointInTimeRecoveryStatus,
            'earliest_restorable_timestamp': datetime
        }

        self.attribute_map = {
            'status': 'status',
            'earliest_restorable_timestamp': 'earliestRestorableTimestamp'
        }

        self._status = status
        self._earliest_restorable_timestamp = earliest_restorable_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTableResponsePointInTimeRecovery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetTableResponse_pointInTimeRecovery of this GetTableResponsePointInTimeRecovery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this GetTableResponsePointInTimeRecovery.


        :return: The status of this GetTableResponsePointInTimeRecovery.
        :rtype: PointInTimeRecoveryStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetTableResponsePointInTimeRecovery.


        :param status: The status of this GetTableResponsePointInTimeRecovery.
        :type status: PointInTimeRecoveryStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def earliest_restorable_timestamp(self):
        """Gets the earliest_restorable_timestamp of this GetTableResponsePointInTimeRecovery.


        :return: The earliest_restorable_timestamp of this GetTableResponsePointInTimeRecovery.
        :rtype: datetime
        """
        return self._earliest_restorable_timestamp

    @earliest_restorable_timestamp.setter
    def earliest_restorable_timestamp(self, earliest_restorable_timestamp):
        """Sets the earliest_restorable_timestamp of this GetTableResponsePointInTimeRecovery.


        :param earliest_restorable_timestamp: The earliest_restorable_timestamp of this GetTableResponsePointInTimeRecovery.
        :type earliest_restorable_timestamp: datetime
        """

        self._earliest_restorable_timestamp = earliest_restorable_timestamp
