/**
 * Amazon Keyspaces
 * <p>Amazon Keyspaces (for Apache Cassandra) is a scalable, highly available, and managed Apache Cassandra-compatible database service. Amazon Keyspaces makes it easy to migrate, run, and scale Cassandra workloads in the Amazon Web Services Cloud. With just a few clicks on the Amazon Web Services Management Console or a few lines of code, you can create keyspaces and tables in Amazon Keyspaces, without deploying any infrastructure or installing software. </p> <p>In addition to supporting Cassandra Query Language (CQL) requests via open-source Cassandra drivers, Amazon Keyspaces supports data definition language (DDL) operations to manage keyspaces and tables using the Amazon Web Services SDK and CLI, as well as infrastructure as code (IaC) services and tools such as CloudFormation and Terraform. This API reference describes the supported DDL operations in detail.</p> <p>For the list of all supported CQL APIs, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/cassandra-apis.html\">Supported Cassandra APIs, operations, and data types in Amazon Keyspaces</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p> <p>To learn how Amazon Keyspaces API actions are recorded with CloudTrail, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/logging-using-cloudtrail.html#service-name-info-in-cloudtrail\">Amazon Keyspaces information in CloudTrail</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p> <p>For more information about Amazon Web Services APIs, for example how to implement retry logic or how to sign Amazon Web Services API requests, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-apis.html\">Amazon Web Services APIs</a> in the <i>General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2022-02-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEncryptionSpecification.h
 *
 * &lt;p&gt;Amazon Keyspaces encrypts and decrypts the table data at rest transparently and integrates with Key Management Service for storing and managing the encryption key. You can choose one of the following KMS keys (KMS keys):&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Amazon Web Services owned key - This is the default encryption type. The key is owned by Amazon Keyspaces (no additional charge). &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Customer managed key - This key is stored in your account and is created, owned, and managed by you. You have full control over the customer managed key (KMS charges apply).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about encryption at rest in Amazon Keyspaces, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\&quot;&gt;Encryption at rest&lt;/a&gt; in the &lt;i&gt;Amazon Keyspaces Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about KMS, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\&quot;&gt;KMS management service concepts&lt;/a&gt; in the &lt;i&gt;Key Management Service Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIEncryptionSpecification_H
#define OAIEncryptionSpecification_H

#include <QJsonObject>

#include "OAIEncryptionType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEncryptionSpecification : public OAIObject {
public:
    OAIEncryptionSpecification();
    OAIEncryptionSpecification(QString json);
    ~OAIEncryptionSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEncryptionType getType() const;
    void setType(const OAIEncryptionType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getKmsKeyIdentifier() const;
    void setKmsKeyIdentifier(const QString &kms_key_identifier);
    bool is_kms_key_identifier_Set() const;
    bool is_kms_key_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEncryptionType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_kms_key_identifier;
    bool m_kms_key_identifier_isSet;
    bool m_kms_key_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEncryptionSpecification)

#endif // OAIEncryptionSpecification_H
