/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonLexModelBuildingV2);
  }
}(this, function(expect, AmazonLexModelBuildingV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UtteranceSpecification', function() {
    it('should create an instance of UtteranceSpecification', function() {
      // uncomment below and update the code to test UtteranceSpecification
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be.a(AmazonLexModelBuildingV2.UtteranceSpecification);
    });

    it('should have the property botAliasId (base name: "botAliasId")', function() {
      // uncomment below and update the code to test the property botAliasId
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property botVersion (base name: "botVersion")', function() {
      // uncomment below and update the code to test the property botVersion
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property localeId (base name: "localeId")', function() {
      // uncomment below and update the code to test the property localeId
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property sessionId (base name: "sessionId")', function() {
      // uncomment below and update the code to test the property sessionId
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property channel (base name: "channel")', function() {
      // uncomment below and update the code to test the property channel
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property mode (base name: "mode")', function() {
      // uncomment below and update the code to test the property mode
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property conversationStartTime (base name: "conversationStartTime")', function() {
      // uncomment below and update the code to test the property conversationStartTime
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property conversationEndTime (base name: "conversationEndTime")', function() {
      // uncomment below and update the code to test the property conversationEndTime
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property utterance (base name: "utterance")', function() {
      // uncomment below and update the code to test the property utterance
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property utteranceTimestamp (base name: "utteranceTimestamp")', function() {
      // uncomment below and update the code to test the property utteranceTimestamp
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property audioVoiceDurationMillis (base name: "audioVoiceDurationMillis")', function() {
      // uncomment below and update the code to test the property audioVoiceDurationMillis
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property utteranceUnderstood (base name: "utteranceUnderstood")', function() {
      // uncomment below and update the code to test the property utteranceUnderstood
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property inputType (base name: "inputType")', function() {
      // uncomment below and update the code to test the property inputType
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property outputType (base name: "outputType")', function() {
      // uncomment below and update the code to test the property outputType
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property associatedIntentName (base name: "associatedIntentName")', function() {
      // uncomment below and update the code to test the property associatedIntentName
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property associatedSlotName (base name: "associatedSlotName")', function() {
      // uncomment below and update the code to test the property associatedSlotName
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property intentState (base name: "intentState")', function() {
      // uncomment below and update the code to test the property intentState
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property dialogActionType (base name: "dialogActionType")', function() {
      // uncomment below and update the code to test the property dialogActionType
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property botResponseAudioVoiceId (base name: "botResponseAudioVoiceId")', function() {
      // uncomment below and update the code to test the property botResponseAudioVoiceId
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property slotsFilledInSession (base name: "slotsFilledInSession")', function() {
      // uncomment below and update the code to test the property slotsFilledInSession
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property utteranceRequestId (base name: "utteranceRequestId")', function() {
      // uncomment below and update the code to test the property utteranceRequestId
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

    it('should have the property botResponses (base name: "botResponses")', function() {
      // uncomment below and update the code to test the property botResponses
      //var instance = new AmazonLexModelBuildingV2.UtteranceSpecification();
      //expect(instance).to.be();
    });

  });

}));
