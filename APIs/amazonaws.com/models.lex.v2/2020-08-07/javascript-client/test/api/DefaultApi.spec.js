/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonLexModelBuildingV2);
  }
}(this, function(expect, AmazonLexModelBuildingV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonLexModelBuildingV2.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('batchCreateCustomVocabularyItem', function() {
      it('should call batchCreateCustomVocabularyItem successfully', function(done) {
        //uncomment below and update the code to test batchCreateCustomVocabularyItem
        //instance.batchCreateCustomVocabularyItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchDeleteCustomVocabularyItem', function() {
      it('should call batchDeleteCustomVocabularyItem successfully', function(done) {
        //uncomment below and update the code to test batchDeleteCustomVocabularyItem
        //instance.batchDeleteCustomVocabularyItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchUpdateCustomVocabularyItem', function() {
      it('should call batchUpdateCustomVocabularyItem successfully', function(done) {
        //uncomment below and update the code to test batchUpdateCustomVocabularyItem
        //instance.batchUpdateCustomVocabularyItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('buildBotLocale', function() {
      it('should call buildBotLocale successfully', function(done) {
        //uncomment below and update the code to test buildBotLocale
        //instance.buildBotLocale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBot', function() {
      it('should call createBot successfully', function(done) {
        //uncomment below and update the code to test createBot
        //instance.createBot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBotAlias', function() {
      it('should call createBotAlias successfully', function(done) {
        //uncomment below and update the code to test createBotAlias
        //instance.createBotAlias(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBotLocale', function() {
      it('should call createBotLocale successfully', function(done) {
        //uncomment below and update the code to test createBotLocale
        //instance.createBotLocale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBotVersion', function() {
      it('should call createBotVersion successfully', function(done) {
        //uncomment below and update the code to test createBotVersion
        //instance.createBotVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExport', function() {
      it('should call createExport successfully', function(done) {
        //uncomment below and update the code to test createExport
        //instance.createExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createIntent', function() {
      it('should call createIntent successfully', function(done) {
        //uncomment below and update the code to test createIntent
        //instance.createIntent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createResourcePolicy', function() {
      it('should call createResourcePolicy successfully', function(done) {
        //uncomment below and update the code to test createResourcePolicy
        //instance.createResourcePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createResourcePolicyStatement', function() {
      it('should call createResourcePolicyStatement successfully', function(done) {
        //uncomment below and update the code to test createResourcePolicyStatement
        //instance.createResourcePolicyStatement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSlot', function() {
      it('should call createSlot successfully', function(done) {
        //uncomment below and update the code to test createSlot
        //instance.createSlot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSlotType', function() {
      it('should call createSlotType successfully', function(done) {
        //uncomment below and update the code to test createSlotType
        //instance.createSlotType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTestSetDiscrepancyReport', function() {
      it('should call createTestSetDiscrepancyReport successfully', function(done) {
        //uncomment below and update the code to test createTestSetDiscrepancyReport
        //instance.createTestSetDiscrepancyReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUploadUrl', function() {
      it('should call createUploadUrl successfully', function(done) {
        //uncomment below and update the code to test createUploadUrl
        //instance.createUploadUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBot', function() {
      it('should call deleteBot successfully', function(done) {
        //uncomment below and update the code to test deleteBot
        //instance.deleteBot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBotAlias', function() {
      it('should call deleteBotAlias successfully', function(done) {
        //uncomment below and update the code to test deleteBotAlias
        //instance.deleteBotAlias(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBotLocale', function() {
      it('should call deleteBotLocale successfully', function(done) {
        //uncomment below and update the code to test deleteBotLocale
        //instance.deleteBotLocale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBotVersion', function() {
      it('should call deleteBotVersion successfully', function(done) {
        //uncomment below and update the code to test deleteBotVersion
        //instance.deleteBotVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCustomVocabulary', function() {
      it('should call deleteCustomVocabulary successfully', function(done) {
        //uncomment below and update the code to test deleteCustomVocabulary
        //instance.deleteCustomVocabulary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExport', function() {
      it('should call deleteExport successfully', function(done) {
        //uncomment below and update the code to test deleteExport
        //instance.deleteExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteImport', function() {
      it('should call deleteImport successfully', function(done) {
        //uncomment below and update the code to test deleteImport
        //instance.deleteImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteIntent', function() {
      it('should call deleteIntent successfully', function(done) {
        //uncomment below and update the code to test deleteIntent
        //instance.deleteIntent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteResourcePolicy', function() {
      it('should call deleteResourcePolicy successfully', function(done) {
        //uncomment below and update the code to test deleteResourcePolicy
        //instance.deleteResourcePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteResourcePolicyStatement', function() {
      it('should call deleteResourcePolicyStatement successfully', function(done) {
        //uncomment below and update the code to test deleteResourcePolicyStatement
        //instance.deleteResourcePolicyStatement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSlot', function() {
      it('should call deleteSlot successfully', function(done) {
        //uncomment below and update the code to test deleteSlot
        //instance.deleteSlot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSlotType', function() {
      it('should call deleteSlotType successfully', function(done) {
        //uncomment below and update the code to test deleteSlotType
        //instance.deleteSlotType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTestSet', function() {
      it('should call deleteTestSet successfully', function(done) {
        //uncomment below and update the code to test deleteTestSet
        //instance.deleteTestSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUtterances', function() {
      it('should call deleteUtterances successfully', function(done) {
        //uncomment below and update the code to test deleteUtterances
        //instance.deleteUtterances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBot', function() {
      it('should call describeBot successfully', function(done) {
        //uncomment below and update the code to test describeBot
        //instance.describeBot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBotAlias', function() {
      it('should call describeBotAlias successfully', function(done) {
        //uncomment below and update the code to test describeBotAlias
        //instance.describeBotAlias(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBotLocale', function() {
      it('should call describeBotLocale successfully', function(done) {
        //uncomment below and update the code to test describeBotLocale
        //instance.describeBotLocale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBotRecommendation', function() {
      it('should call describeBotRecommendation successfully', function(done) {
        //uncomment below and update the code to test describeBotRecommendation
        //instance.describeBotRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBotVersion', function() {
      it('should call describeBotVersion successfully', function(done) {
        //uncomment below and update the code to test describeBotVersion
        //instance.describeBotVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeCustomVocabularyMetadata', function() {
      it('should call describeCustomVocabularyMetadata successfully', function(done) {
        //uncomment below and update the code to test describeCustomVocabularyMetadata
        //instance.describeCustomVocabularyMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeExport', function() {
      it('should call describeExport successfully', function(done) {
        //uncomment below and update the code to test describeExport
        //instance.describeExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeImport', function() {
      it('should call describeImport successfully', function(done) {
        //uncomment below and update the code to test describeImport
        //instance.describeImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeIntent', function() {
      it('should call describeIntent successfully', function(done) {
        //uncomment below and update the code to test describeIntent
        //instance.describeIntent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeResourcePolicy', function() {
      it('should call describeResourcePolicy successfully', function(done) {
        //uncomment below and update the code to test describeResourcePolicy
        //instance.describeResourcePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeSlot', function() {
      it('should call describeSlot successfully', function(done) {
        //uncomment below and update the code to test describeSlot
        //instance.describeSlot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeSlotType', function() {
      it('should call describeSlotType successfully', function(done) {
        //uncomment below and update the code to test describeSlotType
        //instance.describeSlotType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTestExecution', function() {
      it('should call describeTestExecution successfully', function(done) {
        //uncomment below and update the code to test describeTestExecution
        //instance.describeTestExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTestSet', function() {
      it('should call describeTestSet successfully', function(done) {
        //uncomment below and update the code to test describeTestSet
        //instance.describeTestSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTestSetDiscrepancyReport', function() {
      it('should call describeTestSetDiscrepancyReport successfully', function(done) {
        //uncomment below and update the code to test describeTestSetDiscrepancyReport
        //instance.describeTestSetDiscrepancyReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTestSetGeneration', function() {
      it('should call describeTestSetGeneration successfully', function(done) {
        //uncomment below and update the code to test describeTestSetGeneration
        //instance.describeTestSetGeneration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTestExecutionArtifactsUrl', function() {
      it('should call getTestExecutionArtifactsUrl successfully', function(done) {
        //uncomment below and update the code to test getTestExecutionArtifactsUrl
        //instance.getTestExecutionArtifactsUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAggregatedUtterances', function() {
      it('should call listAggregatedUtterances successfully', function(done) {
        //uncomment below and update the code to test listAggregatedUtterances
        //instance.listAggregatedUtterances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBotAliases', function() {
      it('should call listBotAliases successfully', function(done) {
        //uncomment below and update the code to test listBotAliases
        //instance.listBotAliases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBotLocales', function() {
      it('should call listBotLocales successfully', function(done) {
        //uncomment below and update the code to test listBotLocales
        //instance.listBotLocales(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBotRecommendations', function() {
      it('should call listBotRecommendations successfully', function(done) {
        //uncomment below and update the code to test listBotRecommendations
        //instance.listBotRecommendations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBotVersions', function() {
      it('should call listBotVersions successfully', function(done) {
        //uncomment below and update the code to test listBotVersions
        //instance.listBotVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBots', function() {
      it('should call listBots successfully', function(done) {
        //uncomment below and update the code to test listBots
        //instance.listBots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBuiltInIntents', function() {
      it('should call listBuiltInIntents successfully', function(done) {
        //uncomment below and update the code to test listBuiltInIntents
        //instance.listBuiltInIntents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBuiltInSlotTypes', function() {
      it('should call listBuiltInSlotTypes successfully', function(done) {
        //uncomment below and update the code to test listBuiltInSlotTypes
        //instance.listBuiltInSlotTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCustomVocabularyItems', function() {
      it('should call listCustomVocabularyItems successfully', function(done) {
        //uncomment below and update the code to test listCustomVocabularyItems
        //instance.listCustomVocabularyItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExports', function() {
      it('should call listExports successfully', function(done) {
        //uncomment below and update the code to test listExports
        //instance.listExports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listImports', function() {
      it('should call listImports successfully', function(done) {
        //uncomment below and update the code to test listImports
        //instance.listImports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listIntentMetrics', function() {
      it('should call listIntentMetrics successfully', function(done) {
        //uncomment below and update the code to test listIntentMetrics
        //instance.listIntentMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listIntentPaths', function() {
      it('should call listIntentPaths successfully', function(done) {
        //uncomment below and update the code to test listIntentPaths
        //instance.listIntentPaths(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listIntentStageMetrics', function() {
      it('should call listIntentStageMetrics successfully', function(done) {
        //uncomment below and update the code to test listIntentStageMetrics
        //instance.listIntentStageMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listIntents', function() {
      it('should call listIntents successfully', function(done) {
        //uncomment below and update the code to test listIntents
        //instance.listIntents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRecommendedIntents', function() {
      it('should call listRecommendedIntents successfully', function(done) {
        //uncomment below and update the code to test listRecommendedIntents
        //instance.listRecommendedIntents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSessionAnalyticsData', function() {
      it('should call listSessionAnalyticsData successfully', function(done) {
        //uncomment below and update the code to test listSessionAnalyticsData
        //instance.listSessionAnalyticsData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSessionMetrics', function() {
      it('should call listSessionMetrics successfully', function(done) {
        //uncomment below and update the code to test listSessionMetrics
        //instance.listSessionMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSlotTypes', function() {
      it('should call listSlotTypes successfully', function(done) {
        //uncomment below and update the code to test listSlotTypes
        //instance.listSlotTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSlots', function() {
      it('should call listSlots successfully', function(done) {
        //uncomment below and update the code to test listSlots
        //instance.listSlots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTestExecutionResultItems', function() {
      it('should call listTestExecutionResultItems successfully', function(done) {
        //uncomment below and update the code to test listTestExecutionResultItems
        //instance.listTestExecutionResultItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTestExecutions', function() {
      it('should call listTestExecutions successfully', function(done) {
        //uncomment below and update the code to test listTestExecutions
        //instance.listTestExecutions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTestSetRecords', function() {
      it('should call listTestSetRecords successfully', function(done) {
        //uncomment below and update the code to test listTestSetRecords
        //instance.listTestSetRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTestSets', function() {
      it('should call listTestSets successfully', function(done) {
        //uncomment below and update the code to test listTestSets
        //instance.listTestSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUtteranceAnalyticsData', function() {
      it('should call listUtteranceAnalyticsData successfully', function(done) {
        //uncomment below and update the code to test listUtteranceAnalyticsData
        //instance.listUtteranceAnalyticsData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUtteranceMetrics', function() {
      it('should call listUtteranceMetrics successfully', function(done) {
        //uncomment below and update the code to test listUtteranceMetrics
        //instance.listUtteranceMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchAssociatedTranscripts', function() {
      it('should call searchAssociatedTranscripts successfully', function(done) {
        //uncomment below and update the code to test searchAssociatedTranscripts
        //instance.searchAssociatedTranscripts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startBotRecommendation', function() {
      it('should call startBotRecommendation successfully', function(done) {
        //uncomment below and update the code to test startBotRecommendation
        //instance.startBotRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startImport', function() {
      it('should call startImport successfully', function(done) {
        //uncomment below and update the code to test startImport
        //instance.startImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startTestExecution', function() {
      it('should call startTestExecution successfully', function(done) {
        //uncomment below and update the code to test startTestExecution
        //instance.startTestExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startTestSetGeneration', function() {
      it('should call startTestSetGeneration successfully', function(done) {
        //uncomment below and update the code to test startTestSetGeneration
        //instance.startTestSetGeneration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopBotRecommendation', function() {
      it('should call stopBotRecommendation successfully', function(done) {
        //uncomment below and update the code to test stopBotRecommendation
        //instance.stopBotRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBot', function() {
      it('should call updateBot successfully', function(done) {
        //uncomment below and update the code to test updateBot
        //instance.updateBot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBotAlias', function() {
      it('should call updateBotAlias successfully', function(done) {
        //uncomment below and update the code to test updateBotAlias
        //instance.updateBotAlias(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBotLocale', function() {
      it('should call updateBotLocale successfully', function(done) {
        //uncomment below and update the code to test updateBotLocale
        //instance.updateBotLocale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBotRecommendation', function() {
      it('should call updateBotRecommendation successfully', function(done) {
        //uncomment below and update the code to test updateBotRecommendation
        //instance.updateBotRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExport', function() {
      it('should call updateExport successfully', function(done) {
        //uncomment below and update the code to test updateExport
        //instance.updateExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateIntent', function() {
      it('should call updateIntent successfully', function(done) {
        //uncomment below and update the code to test updateIntent
        //instance.updateIntent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateResourcePolicy', function() {
      it('should call updateResourcePolicy successfully', function(done) {
        //uncomment below and update the code to test updateResourcePolicy
        //instance.updateResourcePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSlot', function() {
      it('should call updateSlot successfully', function(done) {
        //uncomment below and update the code to test updateSlot
        //instance.updateSlot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSlotType', function() {
      it('should call updateSlotType successfully', function(done) {
        //uncomment below and update the code to test updateSlotType
        //instance.updateSlotType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTestSet', function() {
      it('should call updateTestSet successfully', function(done) {
        //uncomment below and update the code to test updateTestSet
        //instance.updateTestSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
