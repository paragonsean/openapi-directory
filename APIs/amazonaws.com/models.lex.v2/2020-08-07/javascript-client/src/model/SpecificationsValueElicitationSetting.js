/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PromptSpecification from './PromptSpecification';
import SlotDefaultValueSpecification from './SlotDefaultValueSpecification';
import SubSlotValueElicitationSetting from './SubSlotValueElicitationSetting';
import WaitAndContinueSpecification from './WaitAndContinueSpecification';

/**
 * The SpecificationsValueElicitationSetting model module.
 * @module model/SpecificationsValueElicitationSetting
 * @version 2020-08-07
 */
class SpecificationsValueElicitationSetting {
    /**
     * Constructs a new <code>SpecificationsValueElicitationSetting</code>.
     * @alias module:model/SpecificationsValueElicitationSetting
     * @implements module:model/SubSlotValueElicitationSetting
     * @param promptSpecification {module:model/PromptSpecification} 
     */
    constructor(promptSpecification) { 
        SubSlotValueElicitationSetting.initialize(this, promptSpecification);
        SpecificationsValueElicitationSetting.initialize(this, promptSpecification);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, promptSpecification) { 
        obj['promptSpecification'] = promptSpecification;
    }

    /**
     * Constructs a <code>SpecificationsValueElicitationSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpecificationsValueElicitationSetting} obj Optional instance to populate.
     * @return {module:model/SpecificationsValueElicitationSetting} The populated <code>SpecificationsValueElicitationSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpecificationsValueElicitationSetting();
            SubSlotValueElicitationSetting.constructFromObject(data, obj);

            if (data.hasOwnProperty('defaultValueSpecification')) {
                obj['defaultValueSpecification'] = SlotDefaultValueSpecification.constructFromObject(data['defaultValueSpecification']);
            }
            if (data.hasOwnProperty('promptSpecification')) {
                obj['promptSpecification'] = PromptSpecification.constructFromObject(data['promptSpecification']);
            }
            if (data.hasOwnProperty('sampleUtterances')) {
                obj['sampleUtterances'] = ApiClient.convertToType(data['sampleUtterances'], Array);
            }
            if (data.hasOwnProperty('waitAndContinueSpecification')) {
                obj['waitAndContinueSpecification'] = WaitAndContinueSpecification.constructFromObject(data['waitAndContinueSpecification']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpecificationsValueElicitationSetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpecificationsValueElicitationSetting</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SpecificationsValueElicitationSetting.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `defaultValueSpecification`
        if (data['defaultValueSpecification']) { // data not null
          SlotDefaultValueSpecification.validateJSON(data['defaultValueSpecification']);
        }
        // validate the optional field `promptSpecification`
        if (data['promptSpecification']) { // data not null
          PromptSpecification.validateJSON(data['promptSpecification']);
        }
        // validate the optional field `sampleUtterances`
        if (data['sampleUtterances']) { // data not null
          Array.validateJSON(data['sampleUtterances']);
        }
        // validate the optional field `waitAndContinueSpecification`
        if (data['waitAndContinueSpecification']) { // data not null
          WaitAndContinueSpecification.validateJSON(data['waitAndContinueSpecification']);
        }

        return true;
    }


}

SpecificationsValueElicitationSetting.RequiredProperties = ["promptSpecification"];

/**
 * @member {module:model/SlotDefaultValueSpecification} defaultValueSpecification
 */
SpecificationsValueElicitationSetting.prototype['defaultValueSpecification'] = undefined;

/**
 * @member {module:model/PromptSpecification} promptSpecification
 */
SpecificationsValueElicitationSetting.prototype['promptSpecification'] = undefined;

/**
 * @member {Array} sampleUtterances
 */
SpecificationsValueElicitationSetting.prototype['sampleUtterances'] = undefined;

/**
 * @member {module:model/WaitAndContinueSpecification} waitAndContinueSpecification
 */
SpecificationsValueElicitationSetting.prototype['waitAndContinueSpecification'] = undefined;


// Implement SubSlotValueElicitationSetting interface:
/**
 * @member {module:model/SlotDefaultValueSpecification} defaultValueSpecification
 */
SubSlotValueElicitationSetting.prototype['defaultValueSpecification'] = undefined;
/**
 * @member {module:model/PromptSpecification} promptSpecification
 */
SubSlotValueElicitationSetting.prototype['promptSpecification'] = undefined;
/**
 * @member {Array} sampleUtterances
 */
SubSlotValueElicitationSetting.prototype['sampleUtterances'] = undefined;
/**
 * @member {module:model/WaitAndContinueSpecification} waitAndContinueSpecification
 */
SubSlotValueElicitationSetting.prototype['waitAndContinueSpecification'] = undefined;




export default SpecificationsValueElicitationSetting;

