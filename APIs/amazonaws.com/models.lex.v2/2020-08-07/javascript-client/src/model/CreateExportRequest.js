/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateExportRequestResourceSpecification from './CreateExportRequestResourceSpecification';

/**
 * The CreateExportRequest model module.
 * @module model/CreateExportRequest
 * @version 2020-08-07
 */
class CreateExportRequest {
    /**
     * Constructs a new <code>CreateExportRequest</code>.
     * @alias module:model/CreateExportRequest
     * @param resourceSpecification {module:model/CreateExportRequestResourceSpecification} 
     * @param fileFormat {module:model/CreateExportRequest.FileFormatEnum} The file format of the bot or bot locale definition files.
     */
    constructor(resourceSpecification, fileFormat) { 
        
        CreateExportRequest.initialize(this, resourceSpecification, fileFormat);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceSpecification, fileFormat) { 
        obj['resourceSpecification'] = resourceSpecification;
        obj['fileFormat'] = fileFormat;
    }

    /**
     * Constructs a <code>CreateExportRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateExportRequest} obj Optional instance to populate.
     * @return {module:model/CreateExportRequest} The populated <code>CreateExportRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateExportRequest();

            if (data.hasOwnProperty('resourceSpecification')) {
                obj['resourceSpecification'] = CreateExportRequestResourceSpecification.constructFromObject(data['resourceSpecification']);
            }
            if (data.hasOwnProperty('fileFormat')) {
                obj['fileFormat'] = ApiClient.convertToType(data['fileFormat'], 'String');
            }
            if (data.hasOwnProperty('filePassword')) {
                obj['filePassword'] = ApiClient.convertToType(data['filePassword'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateExportRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateExportRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateExportRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `resourceSpecification`
        if (data['resourceSpecification']) { // data not null
          CreateExportRequestResourceSpecification.validateJSON(data['resourceSpecification']);
        }
        // ensure the json data is a string
        if (data['fileFormat'] && !(typeof data['fileFormat'] === 'string' || data['fileFormat'] instanceof String)) {
            throw new Error("Expected the field `fileFormat` to be a primitive type in the JSON string but got " + data['fileFormat']);
        }
        // ensure the json data is a string
        if (data['filePassword'] && !(typeof data['filePassword'] === 'string' || data['filePassword'] instanceof String)) {
            throw new Error("Expected the field `filePassword` to be a primitive type in the JSON string but got " + data['filePassword']);
        }

        return true;
    }


}

CreateExportRequest.RequiredProperties = ["resourceSpecification", "fileFormat"];

/**
 * @member {module:model/CreateExportRequestResourceSpecification} resourceSpecification
 */
CreateExportRequest.prototype['resourceSpecification'] = undefined;

/**
 * The file format of the bot or bot locale definition files.
 * @member {module:model/CreateExportRequest.FileFormatEnum} fileFormat
 */
CreateExportRequest.prototype['fileFormat'] = undefined;

/**
 * An password to use to encrypt the exported archive. Using a password is optional, but you should encrypt the archive to protect the data in transit between Amazon Lex and your local computer.
 * @member {String} filePassword
 */
CreateExportRequest.prototype['filePassword'] = undefined;





/**
 * Allowed values for the <code>fileFormat</code> property.
 * @enum {String}
 * @readonly
 */
CreateExportRequest['FileFormatEnum'] = {

    /**
     * value: "LexJson"
     * @const
     */
    "LexJson": "LexJson",

    /**
     * value: "TSV"
     * @const
     */
    "TSV": "TSV",

    /**
     * value: "CSV"
     * @const
     */
    "CSV": "CSV"
};



export default CreateExportRequest;

