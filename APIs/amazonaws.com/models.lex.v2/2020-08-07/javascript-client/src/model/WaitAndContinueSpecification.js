/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WaitAndContinueSpecificationContinueResponse from './WaitAndContinueSpecificationContinueResponse';
import WaitAndContinueSpecificationStillWaitingResponse from './WaitAndContinueSpecificationStillWaitingResponse';
import WaitAndContinueSpecificationWaitingResponse from './WaitAndContinueSpecificationWaitingResponse';

/**
 * The WaitAndContinueSpecification model module.
 * @module model/WaitAndContinueSpecification
 * @version 2020-08-07
 */
class WaitAndContinueSpecification {
    /**
     * Constructs a new <code>WaitAndContinueSpecification</code>.
     * Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input. 
     * @alias module:model/WaitAndContinueSpecification
     * @param waitingResponse {module:model/WaitAndContinueSpecificationWaitingResponse} 
     * @param continueResponse {module:model/WaitAndContinueSpecificationContinueResponse} 
     */
    constructor(waitingResponse, continueResponse) { 
        
        WaitAndContinueSpecification.initialize(this, waitingResponse, continueResponse);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, waitingResponse, continueResponse) { 
        obj['waitingResponse'] = waitingResponse;
        obj['continueResponse'] = continueResponse;
    }

    /**
     * Constructs a <code>WaitAndContinueSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WaitAndContinueSpecification} obj Optional instance to populate.
     * @return {module:model/WaitAndContinueSpecification} The populated <code>WaitAndContinueSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WaitAndContinueSpecification();

            if (data.hasOwnProperty('waitingResponse')) {
                obj['waitingResponse'] = WaitAndContinueSpecificationWaitingResponse.constructFromObject(data['waitingResponse']);
            }
            if (data.hasOwnProperty('continueResponse')) {
                obj['continueResponse'] = WaitAndContinueSpecificationContinueResponse.constructFromObject(data['continueResponse']);
            }
            if (data.hasOwnProperty('stillWaitingResponse')) {
                obj['stillWaitingResponse'] = WaitAndContinueSpecificationStillWaitingResponse.constructFromObject(data['stillWaitingResponse']);
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WaitAndContinueSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WaitAndContinueSpecification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WaitAndContinueSpecification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `waitingResponse`
        if (data['waitingResponse']) { // data not null
          WaitAndContinueSpecificationWaitingResponse.validateJSON(data['waitingResponse']);
        }
        // validate the optional field `continueResponse`
        if (data['continueResponse']) { // data not null
          WaitAndContinueSpecificationContinueResponse.validateJSON(data['continueResponse']);
        }
        // validate the optional field `stillWaitingResponse`
        if (data['stillWaitingResponse']) { // data not null
          WaitAndContinueSpecificationStillWaitingResponse.validateJSON(data['stillWaitingResponse']);
        }
        // validate the optional field `active`
        if (data['active']) { // data not null
          Boolean.validateJSON(data['active']);
        }

        return true;
    }


}

WaitAndContinueSpecification.RequiredProperties = ["waitingResponse", "continueResponse"];

/**
 * @member {module:model/WaitAndContinueSpecificationWaitingResponse} waitingResponse
 */
WaitAndContinueSpecification.prototype['waitingResponse'] = undefined;

/**
 * @member {module:model/WaitAndContinueSpecificationContinueResponse} continueResponse
 */
WaitAndContinueSpecification.prototype['continueResponse'] = undefined;

/**
 * @member {module:model/WaitAndContinueSpecificationStillWaitingResponse} stillWaitingResponse
 */
WaitAndContinueSpecification.prototype['stillWaitingResponse'] = undefined;

/**
 * @member {Boolean} active
 */
WaitAndContinueSpecification.prototype['active'] = undefined;






export default WaitAndContinueSpecification;

