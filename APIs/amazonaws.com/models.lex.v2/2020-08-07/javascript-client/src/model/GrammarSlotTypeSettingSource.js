/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GrammarSlotTypeSource from './GrammarSlotTypeSource';

/**
 * The GrammarSlotTypeSettingSource model module.
 * @module model/GrammarSlotTypeSettingSource
 * @version 2020-08-07
 */
class GrammarSlotTypeSettingSource {
    /**
     * Constructs a new <code>GrammarSlotTypeSettingSource</code>.
     * @alias module:model/GrammarSlotTypeSettingSource
     * @implements module:model/GrammarSlotTypeSource
     * @param s3BucketName {String} 
     * @param s3ObjectKey {String} 
     */
    constructor(s3BucketName, s3ObjectKey) { 
        GrammarSlotTypeSource.initialize(this, s3BucketName, s3ObjectKey);
        GrammarSlotTypeSettingSource.initialize(this, s3BucketName, s3ObjectKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, s3BucketName, s3ObjectKey) { 
        obj['s3BucketName'] = s3BucketName;
        obj['s3ObjectKey'] = s3ObjectKey;
    }

    /**
     * Constructs a <code>GrammarSlotTypeSettingSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GrammarSlotTypeSettingSource} obj Optional instance to populate.
     * @return {module:model/GrammarSlotTypeSettingSource} The populated <code>GrammarSlotTypeSettingSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GrammarSlotTypeSettingSource();
            GrammarSlotTypeSource.constructFromObject(data, obj);

            if (data.hasOwnProperty('s3BucketName')) {
                obj['s3BucketName'] = ApiClient.convertToType(data['s3BucketName'], 'String');
            }
            if (data.hasOwnProperty('s3ObjectKey')) {
                obj['s3ObjectKey'] = ApiClient.convertToType(data['s3ObjectKey'], 'String');
            }
            if (data.hasOwnProperty('kmsKeyArn')) {
                obj['kmsKeyArn'] = ApiClient.convertToType(data['kmsKeyArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GrammarSlotTypeSettingSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GrammarSlotTypeSettingSource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GrammarSlotTypeSettingSource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `s3BucketName`
        if (data['s3BucketName']) { // data not null
          String.validateJSON(data['s3BucketName']);
        }
        // validate the optional field `s3ObjectKey`
        if (data['s3ObjectKey']) { // data not null
          String.validateJSON(data['s3ObjectKey']);
        }
        // validate the optional field `kmsKeyArn`
        if (data['kmsKeyArn']) { // data not null
          String.validateJSON(data['kmsKeyArn']);
        }

        return true;
    }


}

GrammarSlotTypeSettingSource.RequiredProperties = ["s3BucketName", "s3ObjectKey"];

/**
 * @member {String} s3BucketName
 */
GrammarSlotTypeSettingSource.prototype['s3BucketName'] = undefined;

/**
 * @member {String} s3ObjectKey
 */
GrammarSlotTypeSettingSource.prototype['s3ObjectKey'] = undefined;

/**
 * @member {String} kmsKeyArn
 */
GrammarSlotTypeSettingSource.prototype['kmsKeyArn'] = undefined;


// Implement GrammarSlotTypeSource interface:
/**
 * @member {String} s3BucketName
 */
GrammarSlotTypeSource.prototype['s3BucketName'] = undefined;
/**
 * @member {String} s3ObjectKey
 */
GrammarSlotTypeSource.prototype['s3ObjectKey'] = undefined;
/**
 * @member {String} kmsKeyArn
 */
GrammarSlotTypeSource.prototype['kmsKeyArn'] = undefined;




export default GrammarSlotTypeSettingSource;

