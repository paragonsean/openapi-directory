/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AllowedInputTypes model module.
 * @module model/AllowedInputTypes
 * @version 2020-08-07
 */
class AllowedInputTypes {
    /**
     * Constructs a new <code>AllowedInputTypes</code>.
     * Specifies the allowed input types.
     * @alias module:model/AllowedInputTypes
     * @param allowAudioInput {Boolean} 
     * @param allowDTMFInput {Boolean} 
     */
    constructor(allowAudioInput, allowDTMFInput) { 
        
        AllowedInputTypes.initialize(this, allowAudioInput, allowDTMFInput);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allowAudioInput, allowDTMFInput) { 
        obj['allowAudioInput'] = allowAudioInput;
        obj['allowDTMFInput'] = allowDTMFInput;
    }

    /**
     * Constructs a <code>AllowedInputTypes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllowedInputTypes} obj Optional instance to populate.
     * @return {module:model/AllowedInputTypes} The populated <code>AllowedInputTypes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllowedInputTypes();

            if (data.hasOwnProperty('allowAudioInput')) {
                obj['allowAudioInput'] = ApiClient.convertToType(data['allowAudioInput'], 'Boolean');
            }
            if (data.hasOwnProperty('allowDTMFInput')) {
                obj['allowDTMFInput'] = ApiClient.convertToType(data['allowDTMFInput'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AllowedInputTypes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AllowedInputTypes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AllowedInputTypes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `allowAudioInput`
        if (data['allowAudioInput']) { // data not null
          Boolean.validateJSON(data['allowAudioInput']);
        }
        // validate the optional field `allowDTMFInput`
        if (data['allowDTMFInput']) { // data not null
          Boolean.validateJSON(data['allowDTMFInput']);
        }

        return true;
    }


}

AllowedInputTypes.RequiredProperties = ["allowAudioInput", "allowDTMFInput"];

/**
 * @member {Boolean} allowAudioInput
 */
AllowedInputTypes.prototype['allowAudioInput'] = undefined;

/**
 * @member {Boolean} allowDTMFInput
 */
AllowedInputTypes.prototype['allowDTMFInput'] = undefined;






export default AllowedInputTypes;

