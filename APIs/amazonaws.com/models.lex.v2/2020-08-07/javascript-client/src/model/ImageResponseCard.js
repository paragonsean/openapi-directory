/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImageResponseCard model module.
 * @module model/ImageResponseCard
 * @version 2020-08-07
 */
class ImageResponseCard {
    /**
     * Constructs a new <code>ImageResponseCard</code>.
     * &lt;p&gt;A card that is shown to the user by a messaging platform. You define the contents of the card, the card is displayed by the platform. &lt;/p&gt; &lt;p&gt;When you use a response card, the response from the user is constrained to the text associated with a button on the card.&lt;/p&gt;
     * @alias module:model/ImageResponseCard
     * @param title {String} 
     */
    constructor(title) { 
        
        ImageResponseCard.initialize(this, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title) { 
        obj['title'] = title;
    }

    /**
     * Constructs a <code>ImageResponseCard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageResponseCard} obj Optional instance to populate.
     * @return {module:model/ImageResponseCard} The populated <code>ImageResponseCard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageResponseCard();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('subtitle')) {
                obj['subtitle'] = ApiClient.convertToType(data['subtitle'], 'String');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('buttons')) {
                obj['buttons'] = ApiClient.convertToType(data['buttons'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageResponseCard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageResponseCard</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImageResponseCard.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `title`
        if (data['title']) { // data not null
          String.validateJSON(data['title']);
        }
        // validate the optional field `subtitle`
        if (data['subtitle']) { // data not null
          String.validateJSON(data['subtitle']);
        }
        // validate the optional field `imageUrl`
        if (data['imageUrl']) { // data not null
          String.validateJSON(data['imageUrl']);
        }
        // validate the optional field `buttons`
        if (data['buttons']) { // data not null
          Array.validateJSON(data['buttons']);
        }

        return true;
    }


}

ImageResponseCard.RequiredProperties = ["title"];

/**
 * @member {String} title
 */
ImageResponseCard.prototype['title'] = undefined;

/**
 * @member {String} subtitle
 */
ImageResponseCard.prototype['subtitle'] = undefined;

/**
 * @member {String} imageUrl
 */
ImageResponseCard.prototype['imageUrl'] = undefined;

/**
 * @member {Array} buttons
 */
ImageResponseCard.prototype['buttons'] = undefined;






export default ImageResponseCard;

