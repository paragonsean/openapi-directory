/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserTurnOutputSpecification from './UserTurnOutputSpecification';
import UserTurnOutputSpecificationIntent from './UserTurnOutputSpecificationIntent';

/**
 * The UserTurnResultExpectedOutput model module.
 * @module model/UserTurnResultExpectedOutput
 * @version 2020-08-07
 */
class UserTurnResultExpectedOutput {
    /**
     * Constructs a new <code>UserTurnResultExpectedOutput</code>.
     * @alias module:model/UserTurnResultExpectedOutput
     * @implements module:model/UserTurnOutputSpecification
     * @param intent {module:model/UserTurnOutputSpecificationIntent} 
     */
    constructor(intent) { 
        UserTurnOutputSpecification.initialize(this, intent);
        UserTurnResultExpectedOutput.initialize(this, intent);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, intent) { 
        obj['intent'] = intent;
    }

    /**
     * Constructs a <code>UserTurnResultExpectedOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserTurnResultExpectedOutput} obj Optional instance to populate.
     * @return {module:model/UserTurnResultExpectedOutput} The populated <code>UserTurnResultExpectedOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserTurnResultExpectedOutput();
            UserTurnOutputSpecification.constructFromObject(data, obj);

            if (data.hasOwnProperty('intent')) {
                obj['intent'] = UserTurnOutputSpecificationIntent.constructFromObject(data['intent']);
            }
            if (data.hasOwnProperty('activeContexts')) {
                obj['activeContexts'] = ApiClient.convertToType(data['activeContexts'], Array);
            }
            if (data.hasOwnProperty('transcript')) {
                obj['transcript'] = ApiClient.convertToType(data['transcript'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserTurnResultExpectedOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserTurnResultExpectedOutput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserTurnResultExpectedOutput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `intent`
        if (data['intent']) { // data not null
          UserTurnOutputSpecificationIntent.validateJSON(data['intent']);
        }
        // validate the optional field `activeContexts`
        if (data['activeContexts']) { // data not null
          Array.validateJSON(data['activeContexts']);
        }
        // validate the optional field `transcript`
        if (data['transcript']) { // data not null
          String.validateJSON(data['transcript']);
        }

        return true;
    }


}

UserTurnResultExpectedOutput.RequiredProperties = ["intent"];

/**
 * @member {module:model/UserTurnOutputSpecificationIntent} intent
 */
UserTurnResultExpectedOutput.prototype['intent'] = undefined;

/**
 * @member {Array} activeContexts
 */
UserTurnResultExpectedOutput.prototype['activeContexts'] = undefined;

/**
 * @member {String} transcript
 */
UserTurnResultExpectedOutput.prototype['transcript'] = undefined;


// Implement UserTurnOutputSpecification interface:
/**
 * @member {module:model/UserTurnOutputSpecificationIntent} intent
 */
UserTurnOutputSpecification.prototype['intent'] = undefined;
/**
 * @member {Array} activeContexts
 */
UserTurnOutputSpecification.prototype['activeContexts'] = undefined;
/**
 * @member {String} transcript
 */
UserTurnOutputSpecification.prototype['transcript'] = undefined;




export default UserTurnResultExpectedOutput;

