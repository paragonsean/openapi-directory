/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RuntimeHints model module.
 * @module model/RuntimeHints
 * @version 2020-08-07
 */
class RuntimeHints {
    /**
     * Constructs a new <code>RuntimeHints</code>.
     * &lt;p&gt;You can provide Amazon Lex with hints to the phrases that a customer is likely to use for a slot. When a slot with hints is resolved, the phrases in the runtime hints are preferred in the resolution. You can provide hints for a maximum of 100 intents. You can provide a maximum of 100 slots.&lt;/p&gt; &lt;p&gt;Before you can use runtime hints with an existing bot, you must first rebuild the bot.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lexv2/latest/dg/using-hints.html\&quot;&gt;Using runtime hints to improve recognition of slot values&lt;/a&gt;.&lt;/p&gt;
     * @alias module:model/RuntimeHints
     */
    constructor() { 
        
        RuntimeHints.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RuntimeHints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuntimeHints} obj Optional instance to populate.
     * @return {module:model/RuntimeHints} The populated <code>RuntimeHints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuntimeHints();

            if (data.hasOwnProperty('slotHints')) {
                obj['slotHints'] = ApiClient.convertToType(data['slotHints'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuntimeHints</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuntimeHints</code>.
     */
    static validateJSON(data) {
        // validate the optional field `slotHints`
        if (data['slotHints']) { // data not null
          Object.validateJSON(data['slotHints']);
        }

        return true;
    }


}



/**
 * @member {Object} slotHints
 */
RuntimeHints.prototype['slotHints'] = undefined;






export default RuntimeHints;

