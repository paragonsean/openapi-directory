/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BotRecommendationStatus from './BotRecommendationStatus';

/**
 * The BotRecommendationSummary model module.
 * @module model/BotRecommendationSummary
 * @version 2020-08-07
 */
class BotRecommendationSummary {
    /**
     * Constructs a new <code>BotRecommendationSummary</code>.
     * A summary of the bot recommendation.
     * @alias module:model/BotRecommendationSummary
     * @param botRecommendationStatus {module:model/BotRecommendationStatus} 
     * @param botRecommendationId {String} 
     */
    constructor(botRecommendationStatus, botRecommendationId) { 
        
        BotRecommendationSummary.initialize(this, botRecommendationStatus, botRecommendationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, botRecommendationStatus, botRecommendationId) { 
        obj['botRecommendationStatus'] = botRecommendationStatus;
        obj['botRecommendationId'] = botRecommendationId;
    }

    /**
     * Constructs a <code>BotRecommendationSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BotRecommendationSummary} obj Optional instance to populate.
     * @return {module:model/BotRecommendationSummary} The populated <code>BotRecommendationSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BotRecommendationSummary();

            if (data.hasOwnProperty('botRecommendationStatus')) {
                obj['botRecommendationStatus'] = ApiClient.convertToType(data['botRecommendationStatus'], BotRecommendationStatus);
            }
            if (data.hasOwnProperty('botRecommendationId')) {
                obj['botRecommendationId'] = ApiClient.convertToType(data['botRecommendationId'], 'String');
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BotRecommendationSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BotRecommendationSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BotRecommendationSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `botRecommendationStatus`
        if (data['botRecommendationStatus']) { // data not null
          BotRecommendationStatus.validateJSON(data['botRecommendationStatus']);
        }
        // validate the optional field `botRecommendationId`
        if (data['botRecommendationId']) { // data not null
          String.validateJSON(data['botRecommendationId']);
        }
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          Date.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `lastUpdatedDateTime`
        if (data['lastUpdatedDateTime']) { // data not null
          Date.validateJSON(data['lastUpdatedDateTime']);
        }

        return true;
    }


}

BotRecommendationSummary.RequiredProperties = ["botRecommendationStatus", "botRecommendationId"];

/**
 * @member {module:model/BotRecommendationStatus} botRecommendationStatus
 */
BotRecommendationSummary.prototype['botRecommendationStatus'] = undefined;

/**
 * @member {String} botRecommendationId
 */
BotRecommendationSummary.prototype['botRecommendationId'] = undefined;

/**
 * @member {Date} creationDateTime
 */
BotRecommendationSummary.prototype['creationDateTime'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
BotRecommendationSummary.prototype['lastUpdatedDateTime'] = undefined;






export default BotRecommendationSummary;

