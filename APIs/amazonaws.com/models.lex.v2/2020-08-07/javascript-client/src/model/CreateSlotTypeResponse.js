/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateSlotTypeResponseCompositeSlotTypeSetting from './CreateSlotTypeResponseCompositeSlotTypeSetting';
import CreateSlotTypeResponseExternalSourceSetting from './CreateSlotTypeResponseExternalSourceSetting';
import CreateSlotTypeResponseValueSelectionSetting from './CreateSlotTypeResponseValueSelectionSetting';

/**
 * The CreateSlotTypeResponse model module.
 * @module model/CreateSlotTypeResponse
 * @version 2020-08-07
 */
class CreateSlotTypeResponse {
    /**
     * Constructs a new <code>CreateSlotTypeResponse</code>.
     * @alias module:model/CreateSlotTypeResponse
     */
    constructor() { 
        
        CreateSlotTypeResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateSlotTypeResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateSlotTypeResponse} obj Optional instance to populate.
     * @return {module:model/CreateSlotTypeResponse} The populated <code>CreateSlotTypeResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSlotTypeResponse();

            if (data.hasOwnProperty('slotTypeId')) {
                obj['slotTypeId'] = ApiClient.convertToType(data['slotTypeId'], 'String');
            }
            if (data.hasOwnProperty('slotTypeName')) {
                obj['slotTypeName'] = ApiClient.convertToType(data['slotTypeName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('slotTypeValues')) {
                obj['slotTypeValues'] = ApiClient.convertToType(data['slotTypeValues'], Array);
            }
            if (data.hasOwnProperty('valueSelectionSetting')) {
                obj['valueSelectionSetting'] = CreateSlotTypeResponseValueSelectionSetting.constructFromObject(data['valueSelectionSetting']);
            }
            if (data.hasOwnProperty('parentSlotTypeSignature')) {
                obj['parentSlotTypeSignature'] = ApiClient.convertToType(data['parentSlotTypeSignature'], 'String');
            }
            if (data.hasOwnProperty('botId')) {
                obj['botId'] = ApiClient.convertToType(data['botId'], 'String');
            }
            if (data.hasOwnProperty('botVersion')) {
                obj['botVersion'] = ApiClient.convertToType(data['botVersion'], 'String');
            }
            if (data.hasOwnProperty('localeId')) {
                obj['localeId'] = ApiClient.convertToType(data['localeId'], 'String');
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'Date');
            }
            if (data.hasOwnProperty('externalSourceSetting')) {
                obj['externalSourceSetting'] = CreateSlotTypeResponseExternalSourceSetting.constructFromObject(data['externalSourceSetting']);
            }
            if (data.hasOwnProperty('compositeSlotTypeSetting')) {
                obj['compositeSlotTypeSetting'] = CreateSlotTypeResponseCompositeSlotTypeSetting.constructFromObject(data['compositeSlotTypeSetting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSlotTypeResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSlotTypeResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `slotTypeId`
        if (data['slotTypeId']) { // data not null
          String.validateJSON(data['slotTypeId']);
        }
        // validate the optional field `slotTypeName`
        if (data['slotTypeName']) { // data not null
          String.validateJSON(data['slotTypeName']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `slotTypeValues`
        if (data['slotTypeValues']) { // data not null
          Array.validateJSON(data['slotTypeValues']);
        }
        // validate the optional field `valueSelectionSetting`
        if (data['valueSelectionSetting']) { // data not null
          CreateSlotTypeResponseValueSelectionSetting.validateJSON(data['valueSelectionSetting']);
        }
        // validate the optional field `parentSlotTypeSignature`
        if (data['parentSlotTypeSignature']) { // data not null
          String.validateJSON(data['parentSlotTypeSignature']);
        }
        // validate the optional field `botId`
        if (data['botId']) { // data not null
          String.validateJSON(data['botId']);
        }
        // validate the optional field `botVersion`
        if (data['botVersion']) { // data not null
          String.validateJSON(data['botVersion']);
        }
        // validate the optional field `localeId`
        if (data['localeId']) { // data not null
          String.validateJSON(data['localeId']);
        }
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          Date.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `externalSourceSetting`
        if (data['externalSourceSetting']) { // data not null
          CreateSlotTypeResponseExternalSourceSetting.validateJSON(data['externalSourceSetting']);
        }
        // validate the optional field `compositeSlotTypeSetting`
        if (data['compositeSlotTypeSetting']) { // data not null
          CreateSlotTypeResponseCompositeSlotTypeSetting.validateJSON(data['compositeSlotTypeSetting']);
        }

        return true;
    }


}



/**
 * @member {String} slotTypeId
 */
CreateSlotTypeResponse.prototype['slotTypeId'] = undefined;

/**
 * @member {String} slotTypeName
 */
CreateSlotTypeResponse.prototype['slotTypeName'] = undefined;

/**
 * @member {String} description
 */
CreateSlotTypeResponse.prototype['description'] = undefined;

/**
 * @member {Array} slotTypeValues
 */
CreateSlotTypeResponse.prototype['slotTypeValues'] = undefined;

/**
 * @member {module:model/CreateSlotTypeResponseValueSelectionSetting} valueSelectionSetting
 */
CreateSlotTypeResponse.prototype['valueSelectionSetting'] = undefined;

/**
 * @member {String} parentSlotTypeSignature
 */
CreateSlotTypeResponse.prototype['parentSlotTypeSignature'] = undefined;

/**
 * @member {String} botId
 */
CreateSlotTypeResponse.prototype['botId'] = undefined;

/**
 * @member {String} botVersion
 */
CreateSlotTypeResponse.prototype['botVersion'] = undefined;

/**
 * @member {String} localeId
 */
CreateSlotTypeResponse.prototype['localeId'] = undefined;

/**
 * @member {Date} creationDateTime
 */
CreateSlotTypeResponse.prototype['creationDateTime'] = undefined;

/**
 * @member {module:model/CreateSlotTypeResponseExternalSourceSetting} externalSourceSetting
 */
CreateSlotTypeResponse.prototype['externalSourceSetting'] = undefined;

/**
 * @member {module:model/CreateSlotTypeResponseCompositeSlotTypeSetting} compositeSlotTypeSetting
 */
CreateSlotTypeResponse.prototype['compositeSlotTypeSetting'] = undefined;






export default CreateSlotTypeResponse;

