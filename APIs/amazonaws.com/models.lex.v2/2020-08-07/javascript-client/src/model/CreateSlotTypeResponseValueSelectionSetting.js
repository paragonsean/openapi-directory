/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateSlotTypeRequestValueSelectionSettingAdvancedRecognitionSetting from './CreateSlotTypeRequestValueSelectionSettingAdvancedRecognitionSetting';
import CreateSlotTypeRequestValueSelectionSettingRegexFilter from './CreateSlotTypeRequestValueSelectionSettingRegexFilter';
import SlotValueResolutionStrategy from './SlotValueResolutionStrategy';
import SlotValueSelectionSetting from './SlotValueSelectionSetting';

/**
 * The CreateSlotTypeResponseValueSelectionSetting model module.
 * @module model/CreateSlotTypeResponseValueSelectionSetting
 * @version 2020-08-07
 */
class CreateSlotTypeResponseValueSelectionSetting {
    /**
     * Constructs a new <code>CreateSlotTypeResponseValueSelectionSetting</code>.
     * @alias module:model/CreateSlotTypeResponseValueSelectionSetting
     * @implements module:model/SlotValueSelectionSetting
     * @param resolutionStrategy {module:model/SlotValueResolutionStrategy} 
     */
    constructor(resolutionStrategy) { 
        SlotValueSelectionSetting.initialize(this, resolutionStrategy);
        CreateSlotTypeResponseValueSelectionSetting.initialize(this, resolutionStrategy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resolutionStrategy) { 
        obj['resolutionStrategy'] = resolutionStrategy;
    }

    /**
     * Constructs a <code>CreateSlotTypeResponseValueSelectionSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateSlotTypeResponseValueSelectionSetting} obj Optional instance to populate.
     * @return {module:model/CreateSlotTypeResponseValueSelectionSetting} The populated <code>CreateSlotTypeResponseValueSelectionSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSlotTypeResponseValueSelectionSetting();
            SlotValueSelectionSetting.constructFromObject(data, obj);

            if (data.hasOwnProperty('resolutionStrategy')) {
                obj['resolutionStrategy'] = ApiClient.convertToType(data['resolutionStrategy'], SlotValueResolutionStrategy);
            }
            if (data.hasOwnProperty('regexFilter')) {
                obj['regexFilter'] = CreateSlotTypeRequestValueSelectionSettingRegexFilter.constructFromObject(data['regexFilter']);
            }
            if (data.hasOwnProperty('advancedRecognitionSetting')) {
                obj['advancedRecognitionSetting'] = CreateSlotTypeRequestValueSelectionSettingAdvancedRecognitionSetting.constructFromObject(data['advancedRecognitionSetting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSlotTypeResponseValueSelectionSetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSlotTypeResponseValueSelectionSetting</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateSlotTypeResponseValueSelectionSetting.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `resolutionStrategy`
        if (data['resolutionStrategy']) { // data not null
          SlotValueResolutionStrategy.validateJSON(data['resolutionStrategy']);
        }
        // validate the optional field `regexFilter`
        if (data['regexFilter']) { // data not null
          CreateSlotTypeRequestValueSelectionSettingRegexFilter.validateJSON(data['regexFilter']);
        }
        // validate the optional field `advancedRecognitionSetting`
        if (data['advancedRecognitionSetting']) { // data not null
          CreateSlotTypeRequestValueSelectionSettingAdvancedRecognitionSetting.validateJSON(data['advancedRecognitionSetting']);
        }

        return true;
    }


}

CreateSlotTypeResponseValueSelectionSetting.RequiredProperties = ["resolutionStrategy"];

/**
 * @member {module:model/SlotValueResolutionStrategy} resolutionStrategy
 */
CreateSlotTypeResponseValueSelectionSetting.prototype['resolutionStrategy'] = undefined;

/**
 * @member {module:model/CreateSlotTypeRequestValueSelectionSettingRegexFilter} regexFilter
 */
CreateSlotTypeResponseValueSelectionSetting.prototype['regexFilter'] = undefined;

/**
 * @member {module:model/CreateSlotTypeRequestValueSelectionSettingAdvancedRecognitionSetting} advancedRecognitionSetting
 */
CreateSlotTypeResponseValueSelectionSetting.prototype['advancedRecognitionSetting'] = undefined;


// Implement SlotValueSelectionSetting interface:
/**
 * @member {module:model/SlotValueResolutionStrategy} resolutionStrategy
 */
SlotValueSelectionSetting.prototype['resolutionStrategy'] = undefined;
/**
 * @member {module:model/CreateSlotTypeRequestValueSelectionSettingRegexFilter} regexFilter
 */
SlotValueSelectionSetting.prototype['regexFilter'] = undefined;
/**
 * @member {module:model/CreateSlotTypeRequestValueSelectionSettingAdvancedRecognitionSetting} advancedRecognitionSetting
 */
SlotValueSelectionSetting.prototype['advancedRecognitionSetting'] = undefined;




export default CreateSlotTypeResponseValueSelectionSetting;

