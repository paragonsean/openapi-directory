/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsBinByName from './AnalyticsBinByName';
import AnalyticsInterval from './AnalyticsInterval';
import AnalyticsSortOrder from './AnalyticsSortOrder';

/**
 * The AnalyticsBinBySpecification model module.
 * @module model/AnalyticsBinBySpecification
 * @version 2020-08-07
 */
class AnalyticsBinBySpecification {
    /**
     * Constructs a new <code>AnalyticsBinBySpecification</code>.
     * Contains the time metric, interval, and method by which to bin the analytics data.
     * @alias module:model/AnalyticsBinBySpecification
     * @param name {module:model/AnalyticsBinByName} 
     * @param interval {module:model/AnalyticsInterval} 
     */
    constructor(name, interval) { 
        
        AnalyticsBinBySpecification.initialize(this, name, interval);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, interval) { 
        obj['name'] = name;
        obj['interval'] = interval;
    }

    /**
     * Constructs a <code>AnalyticsBinBySpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalyticsBinBySpecification} obj Optional instance to populate.
     * @return {module:model/AnalyticsBinBySpecification} The populated <code>AnalyticsBinBySpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalyticsBinBySpecification();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], AnalyticsBinByName);
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], AnalyticsInterval);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], AnalyticsSortOrder);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalyticsBinBySpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalyticsBinBySpecification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnalyticsBinBySpecification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          AnalyticsBinByName.validateJSON(data['name']);
        }
        // validate the optional field `interval`
        if (data['interval']) { // data not null
          AnalyticsInterval.validateJSON(data['interval']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          AnalyticsSortOrder.validateJSON(data['order']);
        }

        return true;
    }


}

AnalyticsBinBySpecification.RequiredProperties = ["name", "interval"];

/**
 * @member {module:model/AnalyticsBinByName} name
 */
AnalyticsBinBySpecification.prototype['name'] = undefined;

/**
 * @member {module:model/AnalyticsInterval} interval
 */
AnalyticsBinBySpecification.prototype['interval'] = undefined;

/**
 * @member {module:model/AnalyticsSortOrder} order
 */
AnalyticsBinBySpecification.prototype['order'] = undefined;






export default AnalyticsBinBySpecification;

