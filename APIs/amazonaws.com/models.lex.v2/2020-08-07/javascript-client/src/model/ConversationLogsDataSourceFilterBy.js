/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConversationLogsInputModeFilter from './ConversationLogsInputModeFilter';

/**
 * The ConversationLogsDataSourceFilterBy model module.
 * @module model/ConversationLogsDataSourceFilterBy
 * @version 2020-08-07
 */
class ConversationLogsDataSourceFilterBy {
    /**
     * Constructs a new <code>ConversationLogsDataSourceFilterBy</code>.
     * The selected data source to filter the conversation log.
     * @alias module:model/ConversationLogsDataSourceFilterBy
     * @param startTime {Date} 
     * @param endTime {Date} 
     * @param inputMode {module:model/ConversationLogsInputModeFilter} 
     */
    constructor(startTime, endTime, inputMode) { 
        
        ConversationLogsDataSourceFilterBy.initialize(this, startTime, endTime, inputMode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startTime, endTime, inputMode) { 
        obj['startTime'] = startTime;
        obj['endTime'] = endTime;
        obj['inputMode'] = inputMode;
    }

    /**
     * Constructs a <code>ConversationLogsDataSourceFilterBy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationLogsDataSourceFilterBy} obj Optional instance to populate.
     * @return {module:model/ConversationLogsDataSourceFilterBy} The populated <code>ConversationLogsDataSourceFilterBy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationLogsDataSourceFilterBy();

            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('inputMode')) {
                obj['inputMode'] = ApiClient.convertToType(data['inputMode'], ConversationLogsInputModeFilter);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationLogsDataSourceFilterBy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationLogsDataSourceFilterBy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConversationLogsDataSourceFilterBy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `startTime`
        if (data['startTime']) { // data not null
          Date.validateJSON(data['startTime']);
        }
        // validate the optional field `endTime`
        if (data['endTime']) { // data not null
          Date.validateJSON(data['endTime']);
        }
        // validate the optional field `inputMode`
        if (data['inputMode']) { // data not null
          ConversationLogsInputModeFilter.validateJSON(data['inputMode']);
        }

        return true;
    }


}

ConversationLogsDataSourceFilterBy.RequiredProperties = ["startTime", "endTime", "inputMode"];

/**
 * @member {Date} startTime
 */
ConversationLogsDataSourceFilterBy.prototype['startTime'] = undefined;

/**
 * @member {Date} endTime
 */
ConversationLogsDataSourceFilterBy.prototype['endTime'] = undefined;

/**
 * @member {module:model/ConversationLogsInputModeFilter} inputMode
 */
ConversationLogsDataSourceFilterBy.prototype['inputMode'] = undefined;






export default ConversationLogsDataSourceFilterBy;

