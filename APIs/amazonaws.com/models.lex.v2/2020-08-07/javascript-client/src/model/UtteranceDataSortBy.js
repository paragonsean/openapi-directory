/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsSortOrder from './AnalyticsSortOrder';
import AnalyticsUtteranceSortByName from './AnalyticsUtteranceSortByName';

/**
 * The UtteranceDataSortBy model module.
 * @module model/UtteranceDataSortBy
 * @version 2020-08-07
 */
class UtteranceDataSortBy {
    /**
     * Constructs a new <code>UtteranceDataSortBy</code>.
     * An object specifying the measure and method by which to sort the utterance data.
     * @alias module:model/UtteranceDataSortBy
     * @param name {module:model/AnalyticsUtteranceSortByName} 
     * @param order {module:model/AnalyticsSortOrder} 
     */
    constructor(name, order) { 
        
        UtteranceDataSortBy.initialize(this, name, order);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, order) { 
        obj['name'] = name;
        obj['order'] = order;
    }

    /**
     * Constructs a <code>UtteranceDataSortBy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UtteranceDataSortBy} obj Optional instance to populate.
     * @return {module:model/UtteranceDataSortBy} The populated <code>UtteranceDataSortBy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UtteranceDataSortBy();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], AnalyticsUtteranceSortByName);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], AnalyticsSortOrder);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UtteranceDataSortBy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UtteranceDataSortBy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UtteranceDataSortBy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          AnalyticsUtteranceSortByName.validateJSON(data['name']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          AnalyticsSortOrder.validateJSON(data['order']);
        }

        return true;
    }


}

UtteranceDataSortBy.RequiredProperties = ["name", "order"];

/**
 * @member {module:model/AnalyticsUtteranceSortByName} name
 */
UtteranceDataSortBy.prototype['name'] = undefined;

/**
 * @member {module:model/AnalyticsSortOrder} order
 */
UtteranceDataSortBy.prototype['order'] = undefined;






export default UtteranceDataSortBy;

