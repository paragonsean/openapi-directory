/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BotMember model module.
 * @module model/BotMember
 * @version 2020-08-07
 */
class BotMember {
    /**
     * Constructs a new <code>BotMember</code>.
     * A bot that is a member of a network of bots.
     * @alias module:model/BotMember
     * @param botMemberId {String} 
     * @param botMemberName {String} 
     * @param botMemberAliasId {String} 
     * @param botMemberAliasName {String} 
     * @param botMemberVersion {String} 
     */
    constructor(botMemberId, botMemberName, botMemberAliasId, botMemberAliasName, botMemberVersion) { 
        
        BotMember.initialize(this, botMemberId, botMemberName, botMemberAliasId, botMemberAliasName, botMemberVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, botMemberId, botMemberName, botMemberAliasId, botMemberAliasName, botMemberVersion) { 
        obj['botMemberId'] = botMemberId;
        obj['botMemberName'] = botMemberName;
        obj['botMemberAliasId'] = botMemberAliasId;
        obj['botMemberAliasName'] = botMemberAliasName;
        obj['botMemberVersion'] = botMemberVersion;
    }

    /**
     * Constructs a <code>BotMember</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BotMember} obj Optional instance to populate.
     * @return {module:model/BotMember} The populated <code>BotMember</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BotMember();

            if (data.hasOwnProperty('botMemberId')) {
                obj['botMemberId'] = ApiClient.convertToType(data['botMemberId'], 'String');
            }
            if (data.hasOwnProperty('botMemberName')) {
                obj['botMemberName'] = ApiClient.convertToType(data['botMemberName'], 'String');
            }
            if (data.hasOwnProperty('botMemberAliasId')) {
                obj['botMemberAliasId'] = ApiClient.convertToType(data['botMemberAliasId'], 'String');
            }
            if (data.hasOwnProperty('botMemberAliasName')) {
                obj['botMemberAliasName'] = ApiClient.convertToType(data['botMemberAliasName'], 'String');
            }
            if (data.hasOwnProperty('botMemberVersion')) {
                obj['botMemberVersion'] = ApiClient.convertToType(data['botMemberVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BotMember</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BotMember</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BotMember.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `botMemberId`
        if (data['botMemberId']) { // data not null
          String.validateJSON(data['botMemberId']);
        }
        // validate the optional field `botMemberName`
        if (data['botMemberName']) { // data not null
          String.validateJSON(data['botMemberName']);
        }
        // validate the optional field `botMemberAliasId`
        if (data['botMemberAliasId']) { // data not null
          String.validateJSON(data['botMemberAliasId']);
        }
        // validate the optional field `botMemberAliasName`
        if (data['botMemberAliasName']) { // data not null
          String.validateJSON(data['botMemberAliasName']);
        }
        // validate the optional field `botMemberVersion`
        if (data['botMemberVersion']) { // data not null
          String.validateJSON(data['botMemberVersion']);
        }

        return true;
    }


}

BotMember.RequiredProperties = ["botMemberId", "botMemberName", "botMemberAliasId", "botMemberAliasName", "botMemberVersion"];

/**
 * @member {String} botMemberId
 */
BotMember.prototype['botMemberId'] = undefined;

/**
 * @member {String} botMemberName
 */
BotMember.prototype['botMemberName'] = undefined;

/**
 * @member {String} botMemberAliasId
 */
BotMember.prototype['botMemberAliasId'] = undefined;

/**
 * @member {String} botMemberAliasName
 */
BotMember.prototype['botMemberAliasName'] = undefined;

/**
 * @member {String} botMemberVersion
 */
BotMember.prototype['botMemberVersion'] = undefined;






export default BotMember;

