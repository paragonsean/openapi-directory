/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BotAliasStatus from './BotAliasStatus';
import DescribeBotAliasResponseConversationLogSettings from './DescribeBotAliasResponseConversationLogSettings';
import SentimentAnalysisSettings from './SentimentAnalysisSettings';

/**
 * The DescribeBotAliasResponse model module.
 * @module model/DescribeBotAliasResponse
 * @version 2020-08-07
 */
class DescribeBotAliasResponse {
    /**
     * Constructs a new <code>DescribeBotAliasResponse</code>.
     * @alias module:model/DescribeBotAliasResponse
     */
    constructor() { 
        
        DescribeBotAliasResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeBotAliasResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeBotAliasResponse} obj Optional instance to populate.
     * @return {module:model/DescribeBotAliasResponse} The populated <code>DescribeBotAliasResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeBotAliasResponse();

            if (data.hasOwnProperty('botAliasId')) {
                obj['botAliasId'] = ApiClient.convertToType(data['botAliasId'], 'String');
            }
            if (data.hasOwnProperty('botAliasName')) {
                obj['botAliasName'] = ApiClient.convertToType(data['botAliasName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('botVersion')) {
                obj['botVersion'] = ApiClient.convertToType(data['botVersion'], 'String');
            }
            if (data.hasOwnProperty('botAliasLocaleSettings')) {
                obj['botAliasLocaleSettings'] = ApiClient.convertToType(data['botAliasLocaleSettings'], Object);
            }
            if (data.hasOwnProperty('conversationLogSettings')) {
                obj['conversationLogSettings'] = DescribeBotAliasResponseConversationLogSettings.constructFromObject(data['conversationLogSettings']);
            }
            if (data.hasOwnProperty('sentimentAnalysisSettings')) {
                obj['sentimentAnalysisSettings'] = SentimentAnalysisSettings.constructFromObject(data['sentimentAnalysisSettings']);
            }
            if (data.hasOwnProperty('botAliasHistoryEvents')) {
                obj['botAliasHistoryEvents'] = ApiClient.convertToType(data['botAliasHistoryEvents'], Array);
            }
            if (data.hasOwnProperty('botAliasStatus')) {
                obj['botAliasStatus'] = ApiClient.convertToType(data['botAliasStatus'], BotAliasStatus);
            }
            if (data.hasOwnProperty('botId')) {
                obj['botId'] = ApiClient.convertToType(data['botId'], 'String');
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('parentBotNetworks')) {
                obj['parentBotNetworks'] = ApiClient.convertToType(data['parentBotNetworks'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeBotAliasResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeBotAliasResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `botAliasId`
        if (data['botAliasId']) { // data not null
          String.validateJSON(data['botAliasId']);
        }
        // validate the optional field `botAliasName`
        if (data['botAliasName']) { // data not null
          String.validateJSON(data['botAliasName']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `botVersion`
        if (data['botVersion']) { // data not null
          String.validateJSON(data['botVersion']);
        }
        // validate the optional field `botAliasLocaleSettings`
        if (data['botAliasLocaleSettings']) { // data not null
          Object.validateJSON(data['botAliasLocaleSettings']);
        }
        // validate the optional field `conversationLogSettings`
        if (data['conversationLogSettings']) { // data not null
          DescribeBotAliasResponseConversationLogSettings.validateJSON(data['conversationLogSettings']);
        }
        // validate the optional field `sentimentAnalysisSettings`
        if (data['sentimentAnalysisSettings']) { // data not null
          SentimentAnalysisSettings.validateJSON(data['sentimentAnalysisSettings']);
        }
        // validate the optional field `botAliasHistoryEvents`
        if (data['botAliasHistoryEvents']) { // data not null
          Array.validateJSON(data['botAliasHistoryEvents']);
        }
        // validate the optional field `botAliasStatus`
        if (data['botAliasStatus']) { // data not null
          BotAliasStatus.validateJSON(data['botAliasStatus']);
        }
        // validate the optional field `botId`
        if (data['botId']) { // data not null
          String.validateJSON(data['botId']);
        }
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          Date.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `lastUpdatedDateTime`
        if (data['lastUpdatedDateTime']) { // data not null
          Date.validateJSON(data['lastUpdatedDateTime']);
        }
        // validate the optional field `parentBotNetworks`
        if (data['parentBotNetworks']) { // data not null
          Array.validateJSON(data['parentBotNetworks']);
        }

        return true;
    }


}



/**
 * @member {String} botAliasId
 */
DescribeBotAliasResponse.prototype['botAliasId'] = undefined;

/**
 * @member {String} botAliasName
 */
DescribeBotAliasResponse.prototype['botAliasName'] = undefined;

/**
 * @member {String} description
 */
DescribeBotAliasResponse.prototype['description'] = undefined;

/**
 * @member {String} botVersion
 */
DescribeBotAliasResponse.prototype['botVersion'] = undefined;

/**
 * @member {Object} botAliasLocaleSettings
 */
DescribeBotAliasResponse.prototype['botAliasLocaleSettings'] = undefined;

/**
 * @member {module:model/DescribeBotAliasResponseConversationLogSettings} conversationLogSettings
 */
DescribeBotAliasResponse.prototype['conversationLogSettings'] = undefined;

/**
 * @member {module:model/SentimentAnalysisSettings} sentimentAnalysisSettings
 */
DescribeBotAliasResponse.prototype['sentimentAnalysisSettings'] = undefined;

/**
 * @member {Array} botAliasHistoryEvents
 */
DescribeBotAliasResponse.prototype['botAliasHistoryEvents'] = undefined;

/**
 * @member {module:model/BotAliasStatus} botAliasStatus
 */
DescribeBotAliasResponse.prototype['botAliasStatus'] = undefined;

/**
 * @member {String} botId
 */
DescribeBotAliasResponse.prototype['botId'] = undefined;

/**
 * @member {Date} creationDateTime
 */
DescribeBotAliasResponse.prototype['creationDateTime'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
DescribeBotAliasResponse.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {Array} parentBotNetworks
 */
DescribeBotAliasResponse.prototype['parentBotNetworks'] = undefined;






export default DescribeBotAliasResponse;

