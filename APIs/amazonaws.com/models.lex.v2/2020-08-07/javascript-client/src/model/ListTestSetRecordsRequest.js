/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListTestSetRecordsRequest model module.
 * @module model/ListTestSetRecordsRequest
 * @version 2020-08-07
 */
class ListTestSetRecordsRequest {
    /**
     * Constructs a new <code>ListTestSetRecordsRequest</code>.
     * @alias module:model/ListTestSetRecordsRequest
     */
    constructor() { 
        
        ListTestSetRecordsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListTestSetRecordsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListTestSetRecordsRequest} obj Optional instance to populate.
     * @return {module:model/ListTestSetRecordsRequest} The populated <code>ListTestSetRecordsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListTestSetRecordsRequest();

            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('nextToken')) {
                obj['nextToken'] = ApiClient.convertToType(data['nextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListTestSetRecordsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListTestSetRecordsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nextToken'] && !(typeof data['nextToken'] === 'string' || data['nextToken'] instanceof String)) {
            throw new Error("Expected the field `nextToken` to be a primitive type in the JSON string but got " + data['nextToken']);
        }

        return true;
    }


}



/**
 * The maximum number of test set records to return in each page. If there are fewer records than the max page size, only the actual number of records are returned.
 * @member {Number} maxResults
 */
ListTestSetRecordsRequest.prototype['maxResults'] = undefined;

/**
 * If the response from the ListTestSetRecords operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.
 * @member {String} nextToken
 */
ListTestSetRecordsRequest.prototype['nextToken'] = undefined;






export default ListTestSetRecordsRequest;

