/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TestSetImportResourceSpecification from './TestSetImportResourceSpecification';
import TestSetImportResourceSpecificationImportInputLocation from './TestSetImportResourceSpecificationImportInputLocation';
import TestSetImportResourceSpecificationStorageLocation from './TestSetImportResourceSpecificationStorageLocation';
import TestSetModality from './TestSetModality';

/**
 * The StartImportRequestResourceSpecificationTestSetImportResourceSpecification model module.
 * @module model/StartImportRequestResourceSpecificationTestSetImportResourceSpecification
 * @version 2020-08-07
 */
class StartImportRequestResourceSpecificationTestSetImportResourceSpecification {
    /**
     * Constructs a new <code>StartImportRequestResourceSpecificationTestSetImportResourceSpecification</code>.
     * @alias module:model/StartImportRequestResourceSpecificationTestSetImportResourceSpecification
     * @implements module:model/TestSetImportResourceSpecification
     * @param testSetName {String} 
     * @param roleArn {String} 
     * @param storageLocation {module:model/TestSetImportResourceSpecificationStorageLocation} 
     * @param importInputLocation {module:model/TestSetImportResourceSpecificationImportInputLocation} 
     * @param modality {module:model/TestSetModality} 
     */
    constructor(testSetName, roleArn, storageLocation, importInputLocation, modality) { 
        TestSetImportResourceSpecification.initialize(this, testSetName, roleArn, storageLocation, importInputLocation, modality);
        StartImportRequestResourceSpecificationTestSetImportResourceSpecification.initialize(this, testSetName, roleArn, storageLocation, importInputLocation, modality);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, testSetName, roleArn, storageLocation, importInputLocation, modality) { 
        obj['testSetName'] = testSetName;
        obj['roleArn'] = roleArn;
        obj['storageLocation'] = storageLocation;
        obj['importInputLocation'] = importInputLocation;
        obj['modality'] = modality;
    }

    /**
     * Constructs a <code>StartImportRequestResourceSpecificationTestSetImportResourceSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartImportRequestResourceSpecificationTestSetImportResourceSpecification} obj Optional instance to populate.
     * @return {module:model/StartImportRequestResourceSpecificationTestSetImportResourceSpecification} The populated <code>StartImportRequestResourceSpecificationTestSetImportResourceSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartImportRequestResourceSpecificationTestSetImportResourceSpecification();
            TestSetImportResourceSpecification.constructFromObject(data, obj);

            if (data.hasOwnProperty('testSetName')) {
                obj['testSetName'] = ApiClient.convertToType(data['testSetName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('roleArn')) {
                obj['roleArn'] = ApiClient.convertToType(data['roleArn'], 'String');
            }
            if (data.hasOwnProperty('storageLocation')) {
                obj['storageLocation'] = TestSetImportResourceSpecificationStorageLocation.constructFromObject(data['storageLocation']);
            }
            if (data.hasOwnProperty('importInputLocation')) {
                obj['importInputLocation'] = TestSetImportResourceSpecificationImportInputLocation.constructFromObject(data['importInputLocation']);
            }
            if (data.hasOwnProperty('modality')) {
                obj['modality'] = ApiClient.convertToType(data['modality'], TestSetModality);
            }
            if (data.hasOwnProperty('testSetTags')) {
                obj['testSetTags'] = ApiClient.convertToType(data['testSetTags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartImportRequestResourceSpecificationTestSetImportResourceSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartImportRequestResourceSpecificationTestSetImportResourceSpecification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartImportRequestResourceSpecificationTestSetImportResourceSpecification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `testSetName`
        if (data['testSetName']) { // data not null
          String.validateJSON(data['testSetName']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `roleArn`
        if (data['roleArn']) { // data not null
          String.validateJSON(data['roleArn']);
        }
        // validate the optional field `storageLocation`
        if (data['storageLocation']) { // data not null
          TestSetImportResourceSpecificationStorageLocation.validateJSON(data['storageLocation']);
        }
        // validate the optional field `importInputLocation`
        if (data['importInputLocation']) { // data not null
          TestSetImportResourceSpecificationImportInputLocation.validateJSON(data['importInputLocation']);
        }
        // validate the optional field `modality`
        if (data['modality']) { // data not null
          TestSetModality.validateJSON(data['modality']);
        }
        // validate the optional field `testSetTags`
        if (data['testSetTags']) { // data not null
          Object.validateJSON(data['testSetTags']);
        }

        return true;
    }


}

StartImportRequestResourceSpecificationTestSetImportResourceSpecification.RequiredProperties = ["testSetName", "roleArn", "storageLocation", "importInputLocation", "modality"];

/**
 * @member {String} testSetName
 */
StartImportRequestResourceSpecificationTestSetImportResourceSpecification.prototype['testSetName'] = undefined;

/**
 * @member {String} description
 */
StartImportRequestResourceSpecificationTestSetImportResourceSpecification.prototype['description'] = undefined;

/**
 * @member {String} roleArn
 */
StartImportRequestResourceSpecificationTestSetImportResourceSpecification.prototype['roleArn'] = undefined;

/**
 * @member {module:model/TestSetImportResourceSpecificationStorageLocation} storageLocation
 */
StartImportRequestResourceSpecificationTestSetImportResourceSpecification.prototype['storageLocation'] = undefined;

/**
 * @member {module:model/TestSetImportResourceSpecificationImportInputLocation} importInputLocation
 */
StartImportRequestResourceSpecificationTestSetImportResourceSpecification.prototype['importInputLocation'] = undefined;

/**
 * @member {module:model/TestSetModality} modality
 */
StartImportRequestResourceSpecificationTestSetImportResourceSpecification.prototype['modality'] = undefined;

/**
 * @member {Object} testSetTags
 */
StartImportRequestResourceSpecificationTestSetImportResourceSpecification.prototype['testSetTags'] = undefined;


// Implement TestSetImportResourceSpecification interface:
/**
 * @member {String} testSetName
 */
TestSetImportResourceSpecification.prototype['testSetName'] = undefined;
/**
 * @member {String} description
 */
TestSetImportResourceSpecification.prototype['description'] = undefined;
/**
 * @member {String} roleArn
 */
TestSetImportResourceSpecification.prototype['roleArn'] = undefined;
/**
 * @member {module:model/TestSetImportResourceSpecificationStorageLocation} storageLocation
 */
TestSetImportResourceSpecification.prototype['storageLocation'] = undefined;
/**
 * @member {module:model/TestSetImportResourceSpecificationImportInputLocation} importInputLocation
 */
TestSetImportResourceSpecification.prototype['importInputLocation'] = undefined;
/**
 * @member {module:model/TestSetModality} modality
 */
TestSetImportResourceSpecification.prototype['modality'] = undefined;
/**
 * @member {Object} testSetTags
 */
TestSetImportResourceSpecification.prototype['testSetTags'] = undefined;




export default StartImportRequestResourceSpecificationTestSetImportResourceSpecification;

