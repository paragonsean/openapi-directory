/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserTurnIntentOutput from './UserTurnIntentOutput';

/**
 * The UserTurnOutputSpecificationIntent model module.
 * @module model/UserTurnOutputSpecificationIntent
 * @version 2020-08-07
 */
class UserTurnOutputSpecificationIntent {
    /**
     * Constructs a new <code>UserTurnOutputSpecificationIntent</code>.
     * @alias module:model/UserTurnOutputSpecificationIntent
     * @implements module:model/UserTurnIntentOutput
     * @param name {String} 
     */
    constructor(name) { 
        UserTurnIntentOutput.initialize(this, name);
        UserTurnOutputSpecificationIntent.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>UserTurnOutputSpecificationIntent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserTurnOutputSpecificationIntent} obj Optional instance to populate.
     * @return {module:model/UserTurnOutputSpecificationIntent} The populated <code>UserTurnOutputSpecificationIntent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserTurnOutputSpecificationIntent();
            UserTurnIntentOutput.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('slots')) {
                obj['slots'] = ApiClient.convertToType(data['slots'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserTurnOutputSpecificationIntent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserTurnOutputSpecificationIntent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserTurnOutputSpecificationIntent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `slots`
        if (data['slots']) { // data not null
          Object.validateJSON(data['slots']);
        }

        return true;
    }


}

UserTurnOutputSpecificationIntent.RequiredProperties = ["name"];

/**
 * @member {String} name
 */
UserTurnOutputSpecificationIntent.prototype['name'] = undefined;

/**
 * @member {Object} slots
 */
UserTurnOutputSpecificationIntent.prototype['slots'] = undefined;


// Implement UserTurnIntentOutput interface:
/**
 * @member {String} name
 */
UserTurnIntentOutput.prototype['name'] = undefined;
/**
 * @member {Object} slots
 */
UserTurnIntentOutput.prototype['slots'] = undefined;




export default UserTurnOutputSpecificationIntent;

