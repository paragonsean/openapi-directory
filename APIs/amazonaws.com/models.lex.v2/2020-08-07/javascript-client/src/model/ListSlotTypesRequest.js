/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ListSlotTypesRequestSortBy from './ListSlotTypesRequestSortBy';
import SlotTypeFilter from './SlotTypeFilter';

/**
 * The ListSlotTypesRequest model module.
 * @module model/ListSlotTypesRequest
 * @version 2020-08-07
 */
class ListSlotTypesRequest {
    /**
     * Constructs a new <code>ListSlotTypesRequest</code>.
     * @alias module:model/ListSlotTypesRequest
     */
    constructor() { 
        
        ListSlotTypesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListSlotTypesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListSlotTypesRequest} obj Optional instance to populate.
     * @return {module:model/ListSlotTypesRequest} The populated <code>ListSlotTypesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListSlotTypesRequest();

            if (data.hasOwnProperty('sortBy')) {
                obj['sortBy'] = ListSlotTypesRequestSortBy.constructFromObject(data['sortBy']);
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], [SlotTypeFilter]);
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('nextToken')) {
                obj['nextToken'] = ApiClient.convertToType(data['nextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListSlotTypesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListSlotTypesRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `sortBy`
        if (data['sortBy']) { // data not null
          ListSlotTypesRequestSortBy.validateJSON(data['sortBy']);
        }
        if (data['filters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['filters'])) {
                throw new Error("Expected the field `filters` to be an array in the JSON data but got " + data['filters']);
            }
            // validate the optional field `filters` (array)
            for (const item of data['filters']) {
                SlotTypeFilter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextToken'] && !(typeof data['nextToken'] === 'string' || data['nextToken'] instanceof String)) {
            throw new Error("Expected the field `nextToken` to be a primitive type in the JSON string but got " + data['nextToken']);
        }

        return true;
    }


}



/**
 * @member {module:model/ListSlotTypesRequestSortBy} sortBy
 */
ListSlotTypesRequest.prototype['sortBy'] = undefined;

/**
 * Provides the specification of a filter used to limit the slot types in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.
 * @member {Array.<module:model/SlotTypeFilter>} filters
 */
ListSlotTypesRequest.prototype['filters'] = undefined;

/**
 * The maximum number of slot types to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.
 * @member {Number} maxResults
 */
ListSlotTypesRequest.prototype['maxResults'] = undefined;

/**
 * If the response from the <code>ListSlotTypes</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token in the <code>nextToken</code> parameter to return the next page of results.
 * @member {String} nextToken
 */
ListSlotTypesRequest.prototype['nextToken'] = undefined;






export default ListSlotTypesRequest;

