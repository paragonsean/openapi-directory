/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SlotTypeCategory from './SlotTypeCategory';

/**
 * The SlotTypeSummary model module.
 * @module model/SlotTypeSummary
 * @version 2020-08-07
 */
class SlotTypeSummary {
    /**
     * Constructs a new <code>SlotTypeSummary</code>.
     * Provides summary information about a slot type.
     * @alias module:model/SlotTypeSummary
     */
    constructor() { 
        
        SlotTypeSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SlotTypeSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SlotTypeSummary} obj Optional instance to populate.
     * @return {module:model/SlotTypeSummary} The populated <code>SlotTypeSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SlotTypeSummary();

            if (data.hasOwnProperty('slotTypeId')) {
                obj['slotTypeId'] = ApiClient.convertToType(data['slotTypeId'], 'String');
            }
            if (data.hasOwnProperty('slotTypeName')) {
                obj['slotTypeName'] = ApiClient.convertToType(data['slotTypeName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('parentSlotTypeSignature')) {
                obj['parentSlotTypeSignature'] = ApiClient.convertToType(data['parentSlotTypeSignature'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('slotTypeCategory')) {
                obj['slotTypeCategory'] = ApiClient.convertToType(data['slotTypeCategory'], SlotTypeCategory);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SlotTypeSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SlotTypeSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `slotTypeId`
        if (data['slotTypeId']) { // data not null
          String.validateJSON(data['slotTypeId']);
        }
        // validate the optional field `slotTypeName`
        if (data['slotTypeName']) { // data not null
          String.validateJSON(data['slotTypeName']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `parentSlotTypeSignature`
        if (data['parentSlotTypeSignature']) { // data not null
          String.validateJSON(data['parentSlotTypeSignature']);
        }
        // validate the optional field `lastUpdatedDateTime`
        if (data['lastUpdatedDateTime']) { // data not null
          Date.validateJSON(data['lastUpdatedDateTime']);
        }
        // validate the optional field `slotTypeCategory`
        if (data['slotTypeCategory']) { // data not null
          SlotTypeCategory.validateJSON(data['slotTypeCategory']);
        }

        return true;
    }


}



/**
 * @member {String} slotTypeId
 */
SlotTypeSummary.prototype['slotTypeId'] = undefined;

/**
 * @member {String} slotTypeName
 */
SlotTypeSummary.prototype['slotTypeName'] = undefined;

/**
 * @member {String} description
 */
SlotTypeSummary.prototype['description'] = undefined;

/**
 * @member {String} parentSlotTypeSignature
 */
SlotTypeSummary.prototype['parentSlotTypeSignature'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
SlotTypeSummary.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {module:model/SlotTypeCategory} slotTypeCategory
 */
SlotTypeSummary.prototype['slotTypeCategory'] = undefined;






export default SlotTypeSummary;

