/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomVocabularyItem model module.
 * @module model/CustomVocabularyItem
 * @version 2020-08-07
 */
class CustomVocabularyItem {
    /**
     * Constructs a new <code>CustomVocabularyItem</code>.
     * The unique custom vocabulary item from the custom vocabulary list.
     * @alias module:model/CustomVocabularyItem
     * @param itemId {String} 
     * @param phrase {String} 
     */
    constructor(itemId, phrase) { 
        
        CustomVocabularyItem.initialize(this, itemId, phrase);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, itemId, phrase) { 
        obj['itemId'] = itemId;
        obj['phrase'] = phrase;
    }

    /**
     * Constructs a <code>CustomVocabularyItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomVocabularyItem} obj Optional instance to populate.
     * @return {module:model/CustomVocabularyItem} The populated <code>CustomVocabularyItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomVocabularyItem();

            if (data.hasOwnProperty('itemId')) {
                obj['itemId'] = ApiClient.convertToType(data['itemId'], 'String');
            }
            if (data.hasOwnProperty('phrase')) {
                obj['phrase'] = ApiClient.convertToType(data['phrase'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('displayAs')) {
                obj['displayAs'] = ApiClient.convertToType(data['displayAs'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomVocabularyItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomVocabularyItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomVocabularyItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `itemId`
        if (data['itemId']) { // data not null
          String.validateJSON(data['itemId']);
        }
        // validate the optional field `phrase`
        if (data['phrase']) { // data not null
          String.validateJSON(data['phrase']);
        }
        // validate the optional field `weight`
        if (data['weight']) { // data not null
          Number.validateJSON(data['weight']);
        }
        // validate the optional field `displayAs`
        if (data['displayAs']) { // data not null
          String.validateJSON(data['displayAs']);
        }

        return true;
    }


}

CustomVocabularyItem.RequiredProperties = ["itemId", "phrase"];

/**
 * @member {String} itemId
 */
CustomVocabularyItem.prototype['itemId'] = undefined;

/**
 * @member {String} phrase
 */
CustomVocabularyItem.prototype['phrase'] = undefined;

/**
 * @member {Number} weight
 */
CustomVocabularyItem.prototype['weight'] = undefined;

/**
 * @member {String} displayAs
 */
CustomVocabularyItem.prototype['displayAs'] = undefined;






export default CustomVocabularyItem;

