/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ListTestExecutionResultItemsRequestResultFilterByConversationLevelTestResultsFilterBy from './ListTestExecutionResultItemsRequestResultFilterByConversationLevelTestResultsFilterBy';
import TestResultTypeFilter from './TestResultTypeFilter';

/**
 * The TestExecutionResultFilterBy model module.
 * @module model/TestExecutionResultFilterBy
 * @version 2020-08-07
 */
class TestExecutionResultFilterBy {
    /**
     * Constructs a new <code>TestExecutionResultFilterBy</code>.
     * Contains information about the method by which to filter the results of the test execution.
     * @alias module:model/TestExecutionResultFilterBy
     * @param resultTypeFilter {module:model/TestResultTypeFilter} 
     */
    constructor(resultTypeFilter) { 
        
        TestExecutionResultFilterBy.initialize(this, resultTypeFilter);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resultTypeFilter) { 
        obj['resultTypeFilter'] = resultTypeFilter;
    }

    /**
     * Constructs a <code>TestExecutionResultFilterBy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestExecutionResultFilterBy} obj Optional instance to populate.
     * @return {module:model/TestExecutionResultFilterBy} The populated <code>TestExecutionResultFilterBy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestExecutionResultFilterBy();

            if (data.hasOwnProperty('resultTypeFilter')) {
                obj['resultTypeFilter'] = ApiClient.convertToType(data['resultTypeFilter'], TestResultTypeFilter);
            }
            if (data.hasOwnProperty('conversationLevelTestResultsFilterBy')) {
                obj['conversationLevelTestResultsFilterBy'] = ListTestExecutionResultItemsRequestResultFilterByConversationLevelTestResultsFilterBy.constructFromObject(data['conversationLevelTestResultsFilterBy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestExecutionResultFilterBy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestExecutionResultFilterBy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TestExecutionResultFilterBy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `resultTypeFilter`
        if (data['resultTypeFilter']) { // data not null
          TestResultTypeFilter.validateJSON(data['resultTypeFilter']);
        }
        // validate the optional field `conversationLevelTestResultsFilterBy`
        if (data['conversationLevelTestResultsFilterBy']) { // data not null
          ListTestExecutionResultItemsRequestResultFilterByConversationLevelTestResultsFilterBy.validateJSON(data['conversationLevelTestResultsFilterBy']);
        }

        return true;
    }


}

TestExecutionResultFilterBy.RequiredProperties = ["resultTypeFilter"];

/**
 * @member {module:model/TestResultTypeFilter} resultTypeFilter
 */
TestExecutionResultFilterBy.prototype['resultTypeFilter'] = undefined;

/**
 * @member {module:model/ListTestExecutionResultItemsRequestResultFilterByConversationLevelTestResultsFilterBy} conversationLevelTestResultsFilterBy
 */
TestExecutionResultFilterBy.prototype['conversationLevelTestResultsFilterBy'] = undefined;






export default TestExecutionResultFilterBy;

