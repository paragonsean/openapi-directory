/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SlotPriority model module.
 * @module model/SlotPriority
 * @version 2020-08-07
 */
class SlotPriority {
    /**
     * Constructs a new <code>SlotPriority</code>.
     * Sets the priority that Amazon Lex should use when eliciting slot values from a user.
     * @alias module:model/SlotPriority
     * @param priority {Number} 
     * @param slotId {String} 
     */
    constructor(priority, slotId) { 
        
        SlotPriority.initialize(this, priority, slotId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, priority, slotId) { 
        obj['priority'] = priority;
        obj['slotId'] = slotId;
    }

    /**
     * Constructs a <code>SlotPriority</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SlotPriority} obj Optional instance to populate.
     * @return {module:model/SlotPriority} The populated <code>SlotPriority</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SlotPriority();

            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('slotId')) {
                obj['slotId'] = ApiClient.convertToType(data['slotId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SlotPriority</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SlotPriority</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SlotPriority.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `priority`
        if (data['priority']) { // data not null
          Number.validateJSON(data['priority']);
        }
        // validate the optional field `slotId`
        if (data['slotId']) { // data not null
          String.validateJSON(data['slotId']);
        }

        return true;
    }


}

SlotPriority.RequiredProperties = ["priority", "slotId"];

/**
 * @member {Number} priority
 */
SlotPriority.prototype['priority'] = undefined;

/**
 * @member {String} slotId
 */
SlotPriority.prototype['slotId'] = undefined;






export default SlotPriority;

