/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsNodeType from './AnalyticsNodeType';

/**
 * The AnalyticsIntentNodeSummary model module.
 * @module model/AnalyticsIntentNodeSummary
 * @version 2020-08-07
 */
class AnalyticsIntentNodeSummary {
    /**
     * Constructs a new <code>AnalyticsIntentNodeSummary</code>.
     * An object containing information about the requested path.
     * @alias module:model/AnalyticsIntentNodeSummary
     */
    constructor() { 
        
        AnalyticsIntentNodeSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnalyticsIntentNodeSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalyticsIntentNodeSummary} obj Optional instance to populate.
     * @return {module:model/AnalyticsIntentNodeSummary} The populated <code>AnalyticsIntentNodeSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalyticsIntentNodeSummary();

            if (data.hasOwnProperty('intentName')) {
                obj['intentName'] = ApiClient.convertToType(data['intentName'], 'String');
            }
            if (data.hasOwnProperty('intentPath')) {
                obj['intentPath'] = ApiClient.convertToType(data['intentPath'], 'String');
            }
            if (data.hasOwnProperty('intentCount')) {
                obj['intentCount'] = ApiClient.convertToType(data['intentCount'], 'Number');
            }
            if (data.hasOwnProperty('intentLevel')) {
                obj['intentLevel'] = ApiClient.convertToType(data['intentLevel'], 'Number');
            }
            if (data.hasOwnProperty('nodeType')) {
                obj['nodeType'] = ApiClient.convertToType(data['nodeType'], AnalyticsNodeType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalyticsIntentNodeSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalyticsIntentNodeSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `intentName`
        if (data['intentName']) { // data not null
          String.validateJSON(data['intentName']);
        }
        // validate the optional field `intentPath`
        if (data['intentPath']) { // data not null
          String.validateJSON(data['intentPath']);
        }
        // validate the optional field `intentCount`
        if (data['intentCount']) { // data not null
          Number.validateJSON(data['intentCount']);
        }
        // validate the optional field `intentLevel`
        if (data['intentLevel']) { // data not null
          Number.validateJSON(data['intentLevel']);
        }
        // validate the optional field `nodeType`
        if (data['nodeType']) { // data not null
          AnalyticsNodeType.validateJSON(data['nodeType']);
        }

        return true;
    }


}



/**
 * @member {String} intentName
 */
AnalyticsIntentNodeSummary.prototype['intentName'] = undefined;

/**
 * @member {String} intentPath
 */
AnalyticsIntentNodeSummary.prototype['intentPath'] = undefined;

/**
 * @member {Number} intentCount
 */
AnalyticsIntentNodeSummary.prototype['intentCount'] = undefined;

/**
 * @member {Number} intentLevel
 */
AnalyticsIntentNodeSummary.prototype['intentLevel'] = undefined;

/**
 * @member {module:model/AnalyticsNodeType} nodeType
 */
AnalyticsIntentNodeSummary.prototype['nodeType'] = undefined;






export default AnalyticsIntentNodeSummary;

