/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateSlotResponseSubSlotSetting from './CreateSlotResponseSubSlotSetting';
import UpdateSlotResponseMultipleValuesSetting from './UpdateSlotResponseMultipleValuesSetting';
import UpdateSlotResponseObfuscationSetting from './UpdateSlotResponseObfuscationSetting';
import UpdateSlotResponseValueElicitationSetting from './UpdateSlotResponseValueElicitationSetting';

/**
 * The UpdateSlotResponse model module.
 * @module model/UpdateSlotResponse
 * @version 2020-08-07
 */
class UpdateSlotResponse {
    /**
     * Constructs a new <code>UpdateSlotResponse</code>.
     * @alias module:model/UpdateSlotResponse
     */
    constructor() { 
        
        UpdateSlotResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateSlotResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSlotResponse} obj Optional instance to populate.
     * @return {module:model/UpdateSlotResponse} The populated <code>UpdateSlotResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSlotResponse();

            if (data.hasOwnProperty('slotId')) {
                obj['slotId'] = ApiClient.convertToType(data['slotId'], 'String');
            }
            if (data.hasOwnProperty('slotName')) {
                obj['slotName'] = ApiClient.convertToType(data['slotName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('slotTypeId')) {
                obj['slotTypeId'] = ApiClient.convertToType(data['slotTypeId'], 'String');
            }
            if (data.hasOwnProperty('valueElicitationSetting')) {
                obj['valueElicitationSetting'] = UpdateSlotResponseValueElicitationSetting.constructFromObject(data['valueElicitationSetting']);
            }
            if (data.hasOwnProperty('obfuscationSetting')) {
                obj['obfuscationSetting'] = UpdateSlotResponseObfuscationSetting.constructFromObject(data['obfuscationSetting']);
            }
            if (data.hasOwnProperty('botId')) {
                obj['botId'] = ApiClient.convertToType(data['botId'], 'String');
            }
            if (data.hasOwnProperty('botVersion')) {
                obj['botVersion'] = ApiClient.convertToType(data['botVersion'], 'String');
            }
            if (data.hasOwnProperty('localeId')) {
                obj['localeId'] = ApiClient.convertToType(data['localeId'], 'String');
            }
            if (data.hasOwnProperty('intentId')) {
                obj['intentId'] = ApiClient.convertToType(data['intentId'], 'String');
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('multipleValuesSetting')) {
                obj['multipleValuesSetting'] = UpdateSlotResponseMultipleValuesSetting.constructFromObject(data['multipleValuesSetting']);
            }
            if (data.hasOwnProperty('subSlotSetting')) {
                obj['subSlotSetting'] = CreateSlotResponseSubSlotSetting.constructFromObject(data['subSlotSetting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSlotResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSlotResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `slotId`
        if (data['slotId']) { // data not null
          String.validateJSON(data['slotId']);
        }
        // validate the optional field `slotName`
        if (data['slotName']) { // data not null
          String.validateJSON(data['slotName']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `slotTypeId`
        if (data['slotTypeId']) { // data not null
          String.validateJSON(data['slotTypeId']);
        }
        // validate the optional field `valueElicitationSetting`
        if (data['valueElicitationSetting']) { // data not null
          UpdateSlotResponseValueElicitationSetting.validateJSON(data['valueElicitationSetting']);
        }
        // validate the optional field `obfuscationSetting`
        if (data['obfuscationSetting']) { // data not null
          UpdateSlotResponseObfuscationSetting.validateJSON(data['obfuscationSetting']);
        }
        // validate the optional field `botId`
        if (data['botId']) { // data not null
          String.validateJSON(data['botId']);
        }
        // validate the optional field `botVersion`
        if (data['botVersion']) { // data not null
          String.validateJSON(data['botVersion']);
        }
        // validate the optional field `localeId`
        if (data['localeId']) { // data not null
          String.validateJSON(data['localeId']);
        }
        // validate the optional field `intentId`
        if (data['intentId']) { // data not null
          String.validateJSON(data['intentId']);
        }
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          Date.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `lastUpdatedDateTime`
        if (data['lastUpdatedDateTime']) { // data not null
          Date.validateJSON(data['lastUpdatedDateTime']);
        }
        // validate the optional field `multipleValuesSetting`
        if (data['multipleValuesSetting']) { // data not null
          UpdateSlotResponseMultipleValuesSetting.validateJSON(data['multipleValuesSetting']);
        }
        // validate the optional field `subSlotSetting`
        if (data['subSlotSetting']) { // data not null
          CreateSlotResponseSubSlotSetting.validateJSON(data['subSlotSetting']);
        }

        return true;
    }


}



/**
 * @member {String} slotId
 */
UpdateSlotResponse.prototype['slotId'] = undefined;

/**
 * @member {String} slotName
 */
UpdateSlotResponse.prototype['slotName'] = undefined;

/**
 * @member {String} description
 */
UpdateSlotResponse.prototype['description'] = undefined;

/**
 * @member {String} slotTypeId
 */
UpdateSlotResponse.prototype['slotTypeId'] = undefined;

/**
 * @member {module:model/UpdateSlotResponseValueElicitationSetting} valueElicitationSetting
 */
UpdateSlotResponse.prototype['valueElicitationSetting'] = undefined;

/**
 * @member {module:model/UpdateSlotResponseObfuscationSetting} obfuscationSetting
 */
UpdateSlotResponse.prototype['obfuscationSetting'] = undefined;

/**
 * @member {String} botId
 */
UpdateSlotResponse.prototype['botId'] = undefined;

/**
 * @member {String} botVersion
 */
UpdateSlotResponse.prototype['botVersion'] = undefined;

/**
 * @member {String} localeId
 */
UpdateSlotResponse.prototype['localeId'] = undefined;

/**
 * @member {String} intentId
 */
UpdateSlotResponse.prototype['intentId'] = undefined;

/**
 * @member {Date} creationDateTime
 */
UpdateSlotResponse.prototype['creationDateTime'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
UpdateSlotResponse.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {module:model/UpdateSlotResponseMultipleValuesSetting} multipleValuesSetting
 */
UpdateSlotResponse.prototype['multipleValuesSetting'] = undefined;

/**
 * @member {module:model/CreateSlotResponseSubSlotSetting} subSlotSetting
 */
UpdateSlotResponse.prototype['subSlotSetting'] = undefined;






export default UpdateSlotResponse;

