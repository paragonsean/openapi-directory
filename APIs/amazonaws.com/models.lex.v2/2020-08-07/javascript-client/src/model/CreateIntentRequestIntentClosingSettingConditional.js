/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConditionalSpecification from './ConditionalSpecification';
import ConditionalSpecificationDefaultBranch from './ConditionalSpecificationDefaultBranch';

/**
 * The CreateIntentRequestIntentClosingSettingConditional model module.
 * @module model/CreateIntentRequestIntentClosingSettingConditional
 * @version 2020-08-07
 */
class CreateIntentRequestIntentClosingSettingConditional {
    /**
     * Constructs a new <code>CreateIntentRequestIntentClosingSettingConditional</code>.
     * @alias module:model/CreateIntentRequestIntentClosingSettingConditional
     * @implements module:model/ConditionalSpecification
     * @param active {Boolean} 
     * @param conditionalBranches {Array} 
     * @param defaultBranch {module:model/ConditionalSpecificationDefaultBranch} 
     */
    constructor(active, conditionalBranches, defaultBranch) { 
        ConditionalSpecification.initialize(this, active, conditionalBranches, defaultBranch);
        CreateIntentRequestIntentClosingSettingConditional.initialize(this, active, conditionalBranches, defaultBranch);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, active, conditionalBranches, defaultBranch) { 
        obj['active'] = active;
        obj['conditionalBranches'] = conditionalBranches;
        obj['defaultBranch'] = defaultBranch;
    }

    /**
     * Constructs a <code>CreateIntentRequestIntentClosingSettingConditional</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateIntentRequestIntentClosingSettingConditional} obj Optional instance to populate.
     * @return {module:model/CreateIntentRequestIntentClosingSettingConditional} The populated <code>CreateIntentRequestIntentClosingSettingConditional</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateIntentRequestIntentClosingSettingConditional();
            ConditionalSpecification.constructFromObject(data, obj);

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('conditionalBranches')) {
                obj['conditionalBranches'] = ApiClient.convertToType(data['conditionalBranches'], Array);
            }
            if (data.hasOwnProperty('defaultBranch')) {
                obj['defaultBranch'] = ConditionalSpecificationDefaultBranch.constructFromObject(data['defaultBranch']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateIntentRequestIntentClosingSettingConditional</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateIntentRequestIntentClosingSettingConditional</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateIntentRequestIntentClosingSettingConditional.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `active`
        if (data['active']) { // data not null
          Boolean.validateJSON(data['active']);
        }
        // validate the optional field `conditionalBranches`
        if (data['conditionalBranches']) { // data not null
          Array.validateJSON(data['conditionalBranches']);
        }
        // validate the optional field `defaultBranch`
        if (data['defaultBranch']) { // data not null
          ConditionalSpecificationDefaultBranch.validateJSON(data['defaultBranch']);
        }

        return true;
    }


}

CreateIntentRequestIntentClosingSettingConditional.RequiredProperties = ["active", "conditionalBranches", "defaultBranch"];

/**
 * @member {Boolean} active
 */
CreateIntentRequestIntentClosingSettingConditional.prototype['active'] = undefined;

/**
 * @member {Array} conditionalBranches
 */
CreateIntentRequestIntentClosingSettingConditional.prototype['conditionalBranches'] = undefined;

/**
 * @member {module:model/ConditionalSpecificationDefaultBranch} defaultBranch
 */
CreateIntentRequestIntentClosingSettingConditional.prototype['defaultBranch'] = undefined;


// Implement ConditionalSpecification interface:
/**
 * @member {Boolean} active
 */
ConditionalSpecification.prototype['active'] = undefined;
/**
 * @member {Array} conditionalBranches
 */
ConditionalSpecification.prototype['conditionalBranches'] = undefined;
/**
 * @member {module:model/ConditionalSpecificationDefaultBranch} defaultBranch
 */
ConditionalSpecification.prototype['defaultBranch'] = undefined;




export default CreateIntentRequestIntentClosingSettingConditional;

