/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputSessionStateSpecification from './InputSessionStateSpecification';
import InputSessionStateSpecificationRuntimeHints from './InputSessionStateSpecificationRuntimeHints';

/**
 * The UserTurnInputSpecificationSessionState model module.
 * @module model/UserTurnInputSpecificationSessionState
 * @version 2020-08-07
 */
class UserTurnInputSpecificationSessionState {
    /**
     * Constructs a new <code>UserTurnInputSpecificationSessionState</code>.
     * @alias module:model/UserTurnInputSpecificationSessionState
     * @implements module:model/InputSessionStateSpecification
     */
    constructor() { 
        InputSessionStateSpecification.initialize(this);
        UserTurnInputSpecificationSessionState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserTurnInputSpecificationSessionState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserTurnInputSpecificationSessionState} obj Optional instance to populate.
     * @return {module:model/UserTurnInputSpecificationSessionState} The populated <code>UserTurnInputSpecificationSessionState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserTurnInputSpecificationSessionState();
            InputSessionStateSpecification.constructFromObject(data, obj);

            if (data.hasOwnProperty('sessionAttributes')) {
                obj['sessionAttributes'] = ApiClient.convertToType(data['sessionAttributes'], Object);
            }
            if (data.hasOwnProperty('activeContexts')) {
                obj['activeContexts'] = ApiClient.convertToType(data['activeContexts'], Array);
            }
            if (data.hasOwnProperty('runtimeHints')) {
                obj['runtimeHints'] = InputSessionStateSpecificationRuntimeHints.constructFromObject(data['runtimeHints']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserTurnInputSpecificationSessionState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserTurnInputSpecificationSessionState</code>.
     */
    static validateJSON(data) {
        // validate the optional field `sessionAttributes`
        if (data['sessionAttributes']) { // data not null
          Object.validateJSON(data['sessionAttributes']);
        }
        // validate the optional field `activeContexts`
        if (data['activeContexts']) { // data not null
          Array.validateJSON(data['activeContexts']);
        }
        // validate the optional field `runtimeHints`
        if (data['runtimeHints']) { // data not null
          InputSessionStateSpecificationRuntimeHints.validateJSON(data['runtimeHints']);
        }

        return true;
    }


}



/**
 * @member {Object} sessionAttributes
 */
UserTurnInputSpecificationSessionState.prototype['sessionAttributes'] = undefined;

/**
 * @member {Array} activeContexts
 */
UserTurnInputSpecificationSessionState.prototype['activeContexts'] = undefined;

/**
 * @member {module:model/InputSessionStateSpecificationRuntimeHints} runtimeHints
 */
UserTurnInputSpecificationSessionState.prototype['runtimeHints'] = undefined;


// Implement InputSessionStateSpecification interface:
/**
 * @member {Object} sessionAttributes
 */
InputSessionStateSpecification.prototype['sessionAttributes'] = undefined;
/**
 * @member {Array} activeContexts
 */
InputSessionStateSpecification.prototype['activeContexts'] = undefined;
/**
 * @member {module:model/InputSessionStateSpecificationRuntimeHints} runtimeHints
 */
InputSessionStateSpecification.prototype['runtimeHints'] = undefined;




export default UserTurnInputSpecificationSessionState;

