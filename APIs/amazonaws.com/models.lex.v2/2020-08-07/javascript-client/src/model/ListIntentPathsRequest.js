/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsPathFilter from './AnalyticsPathFilter';

/**
 * The ListIntentPathsRequest model module.
 * @module model/ListIntentPathsRequest
 * @version 2020-08-07
 */
class ListIntentPathsRequest {
    /**
     * Constructs a new <code>ListIntentPathsRequest</code>.
     * @alias module:model/ListIntentPathsRequest
     * @param startDateTime {Date} The date and time that marks the beginning of the range of time for which you want to see intent path metrics.
     * @param endDateTime {Date} The date and time that marks the end of the range of time for which you want to see intent path metrics.
     * @param intentPath {String} <p>The intent path for which you want to retrieve metrics. Use a forward slash to separate intents in the path. For example:</p> <ul> <li> <p>/BookCar</p> </li> <li> <p>/BookCar/BookHotel</p> </li> <li> <p>/BookHotel/BookCar</p> </li> </ul>
     */
    constructor(startDateTime, endDateTime, intentPath) { 
        
        ListIntentPathsRequest.initialize(this, startDateTime, endDateTime, intentPath);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startDateTime, endDateTime, intentPath) { 
        obj['startDateTime'] = startDateTime;
        obj['endDateTime'] = endDateTime;
        obj['intentPath'] = intentPath;
    }

    /**
     * Constructs a <code>ListIntentPathsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListIntentPathsRequest} obj Optional instance to populate.
     * @return {module:model/ListIntentPathsRequest} The populated <code>ListIntentPathsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListIntentPathsRequest();

            if (data.hasOwnProperty('startDateTime')) {
                obj['startDateTime'] = ApiClient.convertToType(data['startDateTime'], 'Date');
            }
            if (data.hasOwnProperty('endDateTime')) {
                obj['endDateTime'] = ApiClient.convertToType(data['endDateTime'], 'Date');
            }
            if (data.hasOwnProperty('intentPath')) {
                obj['intentPath'] = ApiClient.convertToType(data['intentPath'], 'String');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], [AnalyticsPathFilter]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListIntentPathsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListIntentPathsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListIntentPathsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['intentPath'] && !(typeof data['intentPath'] === 'string' || data['intentPath'] instanceof String)) {
            throw new Error("Expected the field `intentPath` to be a primitive type in the JSON string but got " + data['intentPath']);
        }
        if (data['filters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['filters'])) {
                throw new Error("Expected the field `filters` to be an array in the JSON data but got " + data['filters']);
            }
            // validate the optional field `filters` (array)
            for (const item of data['filters']) {
                AnalyticsPathFilter.validateJSON(item);
            };
        }

        return true;
    }


}

ListIntentPathsRequest.RequiredProperties = ["startDateTime", "endDateTime", "intentPath"];

/**
 * The date and time that marks the beginning of the range of time for which you want to see intent path metrics.
 * @member {Date} startDateTime
 */
ListIntentPathsRequest.prototype['startDateTime'] = undefined;

/**
 * The date and time that marks the end of the range of time for which you want to see intent path metrics.
 * @member {Date} endDateTime
 */
ListIntentPathsRequest.prototype['endDateTime'] = undefined;

/**
 * <p>The intent path for which you want to retrieve metrics. Use a forward slash to separate intents in the path. For example:</p> <ul> <li> <p>/BookCar</p> </li> <li> <p>/BookCar/BookHotel</p> </li> <li> <p>/BookHotel/BookCar</p> </li> </ul>
 * @member {String} intentPath
 */
ListIntentPathsRequest.prototype['intentPath'] = undefined;

/**
 * A list of objects, each describes a condition by which you want to filter the results.
 * @member {Array.<module:model/AnalyticsPathFilter>} filters
 */
ListIntentPathsRequest.prototype['filters'] = undefined;






export default ListIntentPathsRequest;

