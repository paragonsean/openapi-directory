/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IntentLevelSlotResolutionTestResultItem model module.
 * @module model/IntentLevelSlotResolutionTestResultItem
 * @version 2020-08-07
 */
class IntentLevelSlotResolutionTestResultItem {
    /**
     * Constructs a new <code>IntentLevelSlotResolutionTestResultItem</code>.
     * Information about intent-level slot resolution in a test result.
     * @alias module:model/IntentLevelSlotResolutionTestResultItem
     * @param intentName {String} 
     * @param multiTurnConversation {Boolean} 
     * @param slotResolutionResults {Array} 
     */
    constructor(intentName, multiTurnConversation, slotResolutionResults) { 
        
        IntentLevelSlotResolutionTestResultItem.initialize(this, intentName, multiTurnConversation, slotResolutionResults);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, intentName, multiTurnConversation, slotResolutionResults) { 
        obj['intentName'] = intentName;
        obj['multiTurnConversation'] = multiTurnConversation;
        obj['slotResolutionResults'] = slotResolutionResults;
    }

    /**
     * Constructs a <code>IntentLevelSlotResolutionTestResultItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntentLevelSlotResolutionTestResultItem} obj Optional instance to populate.
     * @return {module:model/IntentLevelSlotResolutionTestResultItem} The populated <code>IntentLevelSlotResolutionTestResultItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntentLevelSlotResolutionTestResultItem();

            if (data.hasOwnProperty('intentName')) {
                obj['intentName'] = ApiClient.convertToType(data['intentName'], 'String');
            }
            if (data.hasOwnProperty('multiTurnConversation')) {
                obj['multiTurnConversation'] = ApiClient.convertToType(data['multiTurnConversation'], 'Boolean');
            }
            if (data.hasOwnProperty('slotResolutionResults')) {
                obj['slotResolutionResults'] = ApiClient.convertToType(data['slotResolutionResults'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntentLevelSlotResolutionTestResultItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntentLevelSlotResolutionTestResultItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IntentLevelSlotResolutionTestResultItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `intentName`
        if (data['intentName']) { // data not null
          String.validateJSON(data['intentName']);
        }
        // validate the optional field `multiTurnConversation`
        if (data['multiTurnConversation']) { // data not null
          Boolean.validateJSON(data['multiTurnConversation']);
        }
        // validate the optional field `slotResolutionResults`
        if (data['slotResolutionResults']) { // data not null
          Array.validateJSON(data['slotResolutionResults']);
        }

        return true;
    }


}

IntentLevelSlotResolutionTestResultItem.RequiredProperties = ["intentName", "multiTurnConversation", "slotResolutionResults"];

/**
 * @member {String} intentName
 */
IntentLevelSlotResolutionTestResultItem.prototype['intentName'] = undefined;

/**
 * @member {Boolean} multiTurnConversation
 */
IntentLevelSlotResolutionTestResultItem.prototype['multiTurnConversation'] = undefined;

/**
 * @member {Array} slotResolutionResults
 */
IntentLevelSlotResolutionTestResultItem.prototype['slotResolutionResults'] = undefined;






export default IntentLevelSlotResolutionTestResultItem;

