/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DialogCodeHookInvocationSetting from './DialogCodeHookInvocationSetting';
import DialogCodeHookInvocationSettingPostCodeHookSpecification from './DialogCodeHookInvocationSettingPostCodeHookSpecification';

/**
 * The SlotCaptureSettingCodeHook model module.
 * @module model/SlotCaptureSettingCodeHook
 * @version 2020-08-07
 */
class SlotCaptureSettingCodeHook {
    /**
     * Constructs a new <code>SlotCaptureSettingCodeHook</code>.
     * @alias module:model/SlotCaptureSettingCodeHook
     * @implements module:model/DialogCodeHookInvocationSetting
     * @param enableCodeHookInvocation {Boolean} 
     * @param active {Boolean} 
     * @param postCodeHookSpecification {module:model/DialogCodeHookInvocationSettingPostCodeHookSpecification} 
     */
    constructor(enableCodeHookInvocation, active, postCodeHookSpecification) { 
        DialogCodeHookInvocationSetting.initialize(this, enableCodeHookInvocation, active, postCodeHookSpecification);
        SlotCaptureSettingCodeHook.initialize(this, enableCodeHookInvocation, active, postCodeHookSpecification);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enableCodeHookInvocation, active, postCodeHookSpecification) { 
        obj['enableCodeHookInvocation'] = enableCodeHookInvocation;
        obj['active'] = active;
        obj['postCodeHookSpecification'] = postCodeHookSpecification;
    }

    /**
     * Constructs a <code>SlotCaptureSettingCodeHook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SlotCaptureSettingCodeHook} obj Optional instance to populate.
     * @return {module:model/SlotCaptureSettingCodeHook} The populated <code>SlotCaptureSettingCodeHook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SlotCaptureSettingCodeHook();
            DialogCodeHookInvocationSetting.constructFromObject(data, obj);

            if (data.hasOwnProperty('enableCodeHookInvocation')) {
                obj['enableCodeHookInvocation'] = ApiClient.convertToType(data['enableCodeHookInvocation'], 'Boolean');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('invocationLabel')) {
                obj['invocationLabel'] = ApiClient.convertToType(data['invocationLabel'], 'String');
            }
            if (data.hasOwnProperty('postCodeHookSpecification')) {
                obj['postCodeHookSpecification'] = DialogCodeHookInvocationSettingPostCodeHookSpecification.constructFromObject(data['postCodeHookSpecification']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SlotCaptureSettingCodeHook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SlotCaptureSettingCodeHook</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SlotCaptureSettingCodeHook.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `enableCodeHookInvocation`
        if (data['enableCodeHookInvocation']) { // data not null
          Boolean.validateJSON(data['enableCodeHookInvocation']);
        }
        // validate the optional field `active`
        if (data['active']) { // data not null
          Boolean.validateJSON(data['active']);
        }
        // validate the optional field `invocationLabel`
        if (data['invocationLabel']) { // data not null
          String.validateJSON(data['invocationLabel']);
        }
        // validate the optional field `postCodeHookSpecification`
        if (data['postCodeHookSpecification']) { // data not null
          DialogCodeHookInvocationSettingPostCodeHookSpecification.validateJSON(data['postCodeHookSpecification']);
        }

        return true;
    }


}

SlotCaptureSettingCodeHook.RequiredProperties = ["enableCodeHookInvocation", "active", "postCodeHookSpecification"];

/**
 * @member {Boolean} enableCodeHookInvocation
 */
SlotCaptureSettingCodeHook.prototype['enableCodeHookInvocation'] = undefined;

/**
 * @member {Boolean} active
 */
SlotCaptureSettingCodeHook.prototype['active'] = undefined;

/**
 * @member {String} invocationLabel
 */
SlotCaptureSettingCodeHook.prototype['invocationLabel'] = undefined;

/**
 * @member {module:model/DialogCodeHookInvocationSettingPostCodeHookSpecification} postCodeHookSpecification
 */
SlotCaptureSettingCodeHook.prototype['postCodeHookSpecification'] = undefined;


// Implement DialogCodeHookInvocationSetting interface:
/**
 * @member {Boolean} enableCodeHookInvocation
 */
DialogCodeHookInvocationSetting.prototype['enableCodeHookInvocation'] = undefined;
/**
 * @member {Boolean} active
 */
DialogCodeHookInvocationSetting.prototype['active'] = undefined;
/**
 * @member {String} invocationLabel
 */
DialogCodeHookInvocationSetting.prototype['invocationLabel'] = undefined;
/**
 * @member {module:model/DialogCodeHookInvocationSettingPostCodeHookSpecification} postCodeHookSpecification
 */
DialogCodeHookInvocationSetting.prototype['postCodeHookSpecification'] = undefined;




export default SlotCaptureSettingCodeHook;

