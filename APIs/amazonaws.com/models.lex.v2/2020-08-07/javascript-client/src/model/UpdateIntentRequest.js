/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateIntentRequestDialogCodeHook from './CreateIntentRequestDialogCodeHook';
import CreateIntentRequestFulfillmentCodeHook from './CreateIntentRequestFulfillmentCodeHook';
import CreateIntentRequestInitialResponseSetting from './CreateIntentRequestInitialResponseSetting';
import CreateIntentRequestIntentClosingSetting from './CreateIntentRequestIntentClosingSetting';
import CreateIntentRequestIntentConfirmationSetting from './CreateIntentRequestIntentConfirmationSetting';
import CreateIntentRequestKendraConfiguration from './CreateIntentRequestKendraConfiguration';
import InputContext from './InputContext';
import OutputContext from './OutputContext';
import SampleUtterance from './SampleUtterance';
import SlotPriority from './SlotPriority';

/**
 * The UpdateIntentRequest model module.
 * @module model/UpdateIntentRequest
 * @version 2020-08-07
 */
class UpdateIntentRequest {
    /**
     * Constructs a new <code>UpdateIntentRequest</code>.
     * @alias module:model/UpdateIntentRequest
     * @param intentName {String} The new name for the intent.
     */
    constructor(intentName) { 
        
        UpdateIntentRequest.initialize(this, intentName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, intentName) { 
        obj['intentName'] = intentName;
    }

    /**
     * Constructs a <code>UpdateIntentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateIntentRequest} obj Optional instance to populate.
     * @return {module:model/UpdateIntentRequest} The populated <code>UpdateIntentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateIntentRequest();

            if (data.hasOwnProperty('intentName')) {
                obj['intentName'] = ApiClient.convertToType(data['intentName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('parentIntentSignature')) {
                obj['parentIntentSignature'] = ApiClient.convertToType(data['parentIntentSignature'], 'String');
            }
            if (data.hasOwnProperty('sampleUtterances')) {
                obj['sampleUtterances'] = ApiClient.convertToType(data['sampleUtterances'], [SampleUtterance]);
            }
            if (data.hasOwnProperty('dialogCodeHook')) {
                obj['dialogCodeHook'] = CreateIntentRequestDialogCodeHook.constructFromObject(data['dialogCodeHook']);
            }
            if (data.hasOwnProperty('fulfillmentCodeHook')) {
                obj['fulfillmentCodeHook'] = CreateIntentRequestFulfillmentCodeHook.constructFromObject(data['fulfillmentCodeHook']);
            }
            if (data.hasOwnProperty('slotPriorities')) {
                obj['slotPriorities'] = ApiClient.convertToType(data['slotPriorities'], [SlotPriority]);
            }
            if (data.hasOwnProperty('intentConfirmationSetting')) {
                obj['intentConfirmationSetting'] = CreateIntentRequestIntentConfirmationSetting.constructFromObject(data['intentConfirmationSetting']);
            }
            if (data.hasOwnProperty('intentClosingSetting')) {
                obj['intentClosingSetting'] = CreateIntentRequestIntentClosingSetting.constructFromObject(data['intentClosingSetting']);
            }
            if (data.hasOwnProperty('inputContexts')) {
                obj['inputContexts'] = ApiClient.convertToType(data['inputContexts'], [InputContext]);
            }
            if (data.hasOwnProperty('outputContexts')) {
                obj['outputContexts'] = ApiClient.convertToType(data['outputContexts'], [OutputContext]);
            }
            if (data.hasOwnProperty('kendraConfiguration')) {
                obj['kendraConfiguration'] = CreateIntentRequestKendraConfiguration.constructFromObject(data['kendraConfiguration']);
            }
            if (data.hasOwnProperty('initialResponseSetting')) {
                obj['initialResponseSetting'] = CreateIntentRequestInitialResponseSetting.constructFromObject(data['initialResponseSetting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateIntentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateIntentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateIntentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['intentName'] && !(typeof data['intentName'] === 'string' || data['intentName'] instanceof String)) {
            throw new Error("Expected the field `intentName` to be a primitive type in the JSON string but got " + data['intentName']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['parentIntentSignature'] && !(typeof data['parentIntentSignature'] === 'string' || data['parentIntentSignature'] instanceof String)) {
            throw new Error("Expected the field `parentIntentSignature` to be a primitive type in the JSON string but got " + data['parentIntentSignature']);
        }
        if (data['sampleUtterances']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sampleUtterances'])) {
                throw new Error("Expected the field `sampleUtterances` to be an array in the JSON data but got " + data['sampleUtterances']);
            }
            // validate the optional field `sampleUtterances` (array)
            for (const item of data['sampleUtterances']) {
                SampleUtterance.validateJSON(item);
            };
        }
        // validate the optional field `dialogCodeHook`
        if (data['dialogCodeHook']) { // data not null
          CreateIntentRequestDialogCodeHook.validateJSON(data['dialogCodeHook']);
        }
        // validate the optional field `fulfillmentCodeHook`
        if (data['fulfillmentCodeHook']) { // data not null
          CreateIntentRequestFulfillmentCodeHook.validateJSON(data['fulfillmentCodeHook']);
        }
        if (data['slotPriorities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['slotPriorities'])) {
                throw new Error("Expected the field `slotPriorities` to be an array in the JSON data but got " + data['slotPriorities']);
            }
            // validate the optional field `slotPriorities` (array)
            for (const item of data['slotPriorities']) {
                SlotPriority.validateJSON(item);
            };
        }
        // validate the optional field `intentConfirmationSetting`
        if (data['intentConfirmationSetting']) { // data not null
          CreateIntentRequestIntentConfirmationSetting.validateJSON(data['intentConfirmationSetting']);
        }
        // validate the optional field `intentClosingSetting`
        if (data['intentClosingSetting']) { // data not null
          CreateIntentRequestIntentClosingSetting.validateJSON(data['intentClosingSetting']);
        }
        if (data['inputContexts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['inputContexts'])) {
                throw new Error("Expected the field `inputContexts` to be an array in the JSON data but got " + data['inputContexts']);
            }
            // validate the optional field `inputContexts` (array)
            for (const item of data['inputContexts']) {
                InputContext.validateJSON(item);
            };
        }
        if (data['outputContexts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['outputContexts'])) {
                throw new Error("Expected the field `outputContexts` to be an array in the JSON data but got " + data['outputContexts']);
            }
            // validate the optional field `outputContexts` (array)
            for (const item of data['outputContexts']) {
                OutputContext.validateJSON(item);
            };
        }
        // validate the optional field `kendraConfiguration`
        if (data['kendraConfiguration']) { // data not null
          CreateIntentRequestKendraConfiguration.validateJSON(data['kendraConfiguration']);
        }
        // validate the optional field `initialResponseSetting`
        if (data['initialResponseSetting']) { // data not null
          CreateIntentRequestInitialResponseSetting.validateJSON(data['initialResponseSetting']);
        }

        return true;
    }


}

UpdateIntentRequest.RequiredProperties = ["intentName"];

/**
 * The new name for the intent.
 * @member {String} intentName
 */
UpdateIntentRequest.prototype['intentName'] = undefined;

/**
 * The new description of the intent.
 * @member {String} description
 */
UpdateIntentRequest.prototype['description'] = undefined;

/**
 * The signature of the new built-in intent to use as the parent of this intent.
 * @member {String} parentIntentSignature
 */
UpdateIntentRequest.prototype['parentIntentSignature'] = undefined;

/**
 * New utterances used to invoke the intent.
 * @member {Array.<module:model/SampleUtterance>} sampleUtterances
 */
UpdateIntentRequest.prototype['sampleUtterances'] = undefined;

/**
 * @member {module:model/CreateIntentRequestDialogCodeHook} dialogCodeHook
 */
UpdateIntentRequest.prototype['dialogCodeHook'] = undefined;

/**
 * @member {module:model/CreateIntentRequestFulfillmentCodeHook} fulfillmentCodeHook
 */
UpdateIntentRequest.prototype['fulfillmentCodeHook'] = undefined;

/**
 * A new list of slots and their priorities that are contained by the intent.
 * @member {Array.<module:model/SlotPriority>} slotPriorities
 */
UpdateIntentRequest.prototype['slotPriorities'] = undefined;

/**
 * @member {module:model/CreateIntentRequestIntentConfirmationSetting} intentConfirmationSetting
 */
UpdateIntentRequest.prototype['intentConfirmationSetting'] = undefined;

/**
 * @member {module:model/CreateIntentRequestIntentClosingSetting} intentClosingSetting
 */
UpdateIntentRequest.prototype['intentClosingSetting'] = undefined;

/**
 * A new list of contexts that must be active in order for Amazon Lex to consider the intent.
 * @member {Array.<module:model/InputContext>} inputContexts
 */
UpdateIntentRequest.prototype['inputContexts'] = undefined;

/**
 * A new list of contexts that Amazon Lex activates when the intent is fulfilled.
 * @member {Array.<module:model/OutputContext>} outputContexts
 */
UpdateIntentRequest.prototype['outputContexts'] = undefined;

/**
 * @member {module:model/CreateIntentRequestKendraConfiguration} kendraConfiguration
 */
UpdateIntentRequest.prototype['kendraConfiguration'] = undefined;

/**
 * @member {module:model/CreateIntentRequestInitialResponseSetting} initialResponseSetting
 */
UpdateIntentRequest.prototype['initialResponseSetting'] = undefined;






export default UpdateIntentRequest;

