/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SpecificationsValueElicitationSetting from './SpecificationsValueElicitationSetting';

/**
 * The Specifications model module.
 * @module model/Specifications
 * @version 2020-08-07
 */
class Specifications {
    /**
     * Constructs a new <code>Specifications</code>.
     * Subslot specifications.
     * @alias module:model/Specifications
     * @param slotTypeId {String} 
     * @param valueElicitationSetting {module:model/SpecificationsValueElicitationSetting} 
     */
    constructor(slotTypeId, valueElicitationSetting) { 
        
        Specifications.initialize(this, slotTypeId, valueElicitationSetting);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, slotTypeId, valueElicitationSetting) { 
        obj['slotTypeId'] = slotTypeId;
        obj['valueElicitationSetting'] = valueElicitationSetting;
    }

    /**
     * Constructs a <code>Specifications</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Specifications} obj Optional instance to populate.
     * @return {module:model/Specifications} The populated <code>Specifications</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Specifications();

            if (data.hasOwnProperty('slotTypeId')) {
                obj['slotTypeId'] = ApiClient.convertToType(data['slotTypeId'], 'String');
            }
            if (data.hasOwnProperty('valueElicitationSetting')) {
                obj['valueElicitationSetting'] = SpecificationsValueElicitationSetting.constructFromObject(data['valueElicitationSetting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Specifications</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Specifications</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Specifications.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `slotTypeId`
        if (data['slotTypeId']) { // data not null
          String.validateJSON(data['slotTypeId']);
        }
        // validate the optional field `valueElicitationSetting`
        if (data['valueElicitationSetting']) { // data not null
          SpecificationsValueElicitationSetting.validateJSON(data['valueElicitationSetting']);
        }

        return true;
    }


}

Specifications.RequiredProperties = ["slotTypeId", "valueElicitationSetting"];

/**
 * @member {String} slotTypeId
 */
Specifications.prototype['slotTypeId'] = undefined;

/**
 * @member {module:model/SpecificationsValueElicitationSetting} valueElicitationSetting
 */
Specifications.prototype['valueElicitationSetting'] = undefined;






export default Specifications;

