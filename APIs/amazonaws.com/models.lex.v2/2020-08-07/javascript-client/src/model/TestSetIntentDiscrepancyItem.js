/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TestSetIntentDiscrepancyItem model module.
 * @module model/TestSetIntentDiscrepancyItem
 * @version 2020-08-07
 */
class TestSetIntentDiscrepancyItem {
    /**
     * Constructs a new <code>TestSetIntentDiscrepancyItem</code>.
     * Contains information about discrepancy in an intent information between the test set and the bot.
     * @alias module:model/TestSetIntentDiscrepancyItem
     * @param intentName {String} 
     * @param errorMessage {String} 
     */
    constructor(intentName, errorMessage) { 
        
        TestSetIntentDiscrepancyItem.initialize(this, intentName, errorMessage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, intentName, errorMessage) { 
        obj['intentName'] = intentName;
        obj['errorMessage'] = errorMessage;
    }

    /**
     * Constructs a <code>TestSetIntentDiscrepancyItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestSetIntentDiscrepancyItem} obj Optional instance to populate.
     * @return {module:model/TestSetIntentDiscrepancyItem} The populated <code>TestSetIntentDiscrepancyItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestSetIntentDiscrepancyItem();

            if (data.hasOwnProperty('intentName')) {
                obj['intentName'] = ApiClient.convertToType(data['intentName'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestSetIntentDiscrepancyItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestSetIntentDiscrepancyItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TestSetIntentDiscrepancyItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `intentName`
        if (data['intentName']) { // data not null
          String.validateJSON(data['intentName']);
        }
        // validate the optional field `errorMessage`
        if (data['errorMessage']) { // data not null
          String.validateJSON(data['errorMessage']);
        }

        return true;
    }


}

TestSetIntentDiscrepancyItem.RequiredProperties = ["intentName", "errorMessage"];

/**
 * @member {String} intentName
 */
TestSetIntentDiscrepancyItem.prototype['intentName'] = undefined;

/**
 * @member {String} errorMessage
 */
TestSetIntentDiscrepancyItem.prototype['errorMessage'] = undefined;






export default TestSetIntentDiscrepancyItem;

