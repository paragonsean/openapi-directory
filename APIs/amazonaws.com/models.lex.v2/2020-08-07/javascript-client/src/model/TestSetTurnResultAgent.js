/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AgentTurnResult from './AgentTurnResult';
import ExecutionErrorDetails from './ExecutionErrorDetails';

/**
 * The TestSetTurnResultAgent model module.
 * @module model/TestSetTurnResultAgent
 * @version 2020-08-07
 */
class TestSetTurnResultAgent {
    /**
     * Constructs a new <code>TestSetTurnResultAgent</code>.
     * @alias module:model/TestSetTurnResultAgent
     * @implements module:model/AgentTurnResult
     * @param expectedAgentPrompt {String} 
     */
    constructor(expectedAgentPrompt) { 
        AgentTurnResult.initialize(this, expectedAgentPrompt);
        TestSetTurnResultAgent.initialize(this, expectedAgentPrompt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, expectedAgentPrompt) { 
        obj['expectedAgentPrompt'] = expectedAgentPrompt;
    }

    /**
     * Constructs a <code>TestSetTurnResultAgent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestSetTurnResultAgent} obj Optional instance to populate.
     * @return {module:model/TestSetTurnResultAgent} The populated <code>TestSetTurnResultAgent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestSetTurnResultAgent();
            AgentTurnResult.constructFromObject(data, obj);

            if (data.hasOwnProperty('expectedAgentPrompt')) {
                obj['expectedAgentPrompt'] = ApiClient.convertToType(data['expectedAgentPrompt'], 'String');
            }
            if (data.hasOwnProperty('actualAgentPrompt')) {
                obj['actualAgentPrompt'] = ApiClient.convertToType(data['actualAgentPrompt'], 'String');
            }
            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = ExecutionErrorDetails.constructFromObject(data['errorDetails']);
            }
            if (data.hasOwnProperty('actualElicitedSlot')) {
                obj['actualElicitedSlot'] = ApiClient.convertToType(data['actualElicitedSlot'], 'String');
            }
            if (data.hasOwnProperty('actualIntent')) {
                obj['actualIntent'] = ApiClient.convertToType(data['actualIntent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestSetTurnResultAgent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestSetTurnResultAgent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TestSetTurnResultAgent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `expectedAgentPrompt`
        if (data['expectedAgentPrompt']) { // data not null
          String.validateJSON(data['expectedAgentPrompt']);
        }
        // validate the optional field `actualAgentPrompt`
        if (data['actualAgentPrompt']) { // data not null
          String.validateJSON(data['actualAgentPrompt']);
        }
        // validate the optional field `errorDetails`
        if (data['errorDetails']) { // data not null
          ExecutionErrorDetails.validateJSON(data['errorDetails']);
        }
        // validate the optional field `actualElicitedSlot`
        if (data['actualElicitedSlot']) { // data not null
          String.validateJSON(data['actualElicitedSlot']);
        }
        // validate the optional field `actualIntent`
        if (data['actualIntent']) { // data not null
          String.validateJSON(data['actualIntent']);
        }

        return true;
    }


}

TestSetTurnResultAgent.RequiredProperties = ["expectedAgentPrompt"];

/**
 * @member {String} expectedAgentPrompt
 */
TestSetTurnResultAgent.prototype['expectedAgentPrompt'] = undefined;

/**
 * @member {String} actualAgentPrompt
 */
TestSetTurnResultAgent.prototype['actualAgentPrompt'] = undefined;

/**
 * @member {module:model/ExecutionErrorDetails} errorDetails
 */
TestSetTurnResultAgent.prototype['errorDetails'] = undefined;

/**
 * @member {String} actualElicitedSlot
 */
TestSetTurnResultAgent.prototype['actualElicitedSlot'] = undefined;

/**
 * @member {String} actualIntent
 */
TestSetTurnResultAgent.prototype['actualIntent'] = undefined;


// Implement AgentTurnResult interface:
/**
 * @member {String} expectedAgentPrompt
 */
AgentTurnResult.prototype['expectedAgentPrompt'] = undefined;
/**
 * @member {String} actualAgentPrompt
 */
AgentTurnResult.prototype['actualAgentPrompt'] = undefined;
/**
 * @member {module:model/ExecutionErrorDetails} errorDetails
 */
AgentTurnResult.prototype['errorDetails'] = undefined;
/**
 * @member {String} actualElicitedSlot
 */
AgentTurnResult.prototype['actualElicitedSlot'] = undefined;
/**
 * @member {String} actualIntent
 */
AgentTurnResult.prototype['actualIntent'] = undefined;




export default TestSetTurnResultAgent;

