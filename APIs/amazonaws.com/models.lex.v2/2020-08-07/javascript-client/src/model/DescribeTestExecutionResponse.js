/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeTestExecutionResponseTarget from './DescribeTestExecutionResponseTarget';
import TestExecutionApiMode from './TestExecutionApiMode';
import TestExecutionModality from './TestExecutionModality';
import TestExecutionStatus from './TestExecutionStatus';

/**
 * The DescribeTestExecutionResponse model module.
 * @module model/DescribeTestExecutionResponse
 * @version 2020-08-07
 */
class DescribeTestExecutionResponse {
    /**
     * Constructs a new <code>DescribeTestExecutionResponse</code>.
     * @alias module:model/DescribeTestExecutionResponse
     */
    constructor() { 
        
        DescribeTestExecutionResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeTestExecutionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeTestExecutionResponse} obj Optional instance to populate.
     * @return {module:model/DescribeTestExecutionResponse} The populated <code>DescribeTestExecutionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeTestExecutionResponse();

            if (data.hasOwnProperty('testExecutionId')) {
                obj['testExecutionId'] = ApiClient.convertToType(data['testExecutionId'], 'String');
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('testExecutionStatus')) {
                obj['testExecutionStatus'] = ApiClient.convertToType(data['testExecutionStatus'], TestExecutionStatus);
            }
            if (data.hasOwnProperty('testSetId')) {
                obj['testSetId'] = ApiClient.convertToType(data['testSetId'], 'String');
            }
            if (data.hasOwnProperty('testSetName')) {
                obj['testSetName'] = ApiClient.convertToType(data['testSetName'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = DescribeTestExecutionResponseTarget.constructFromObject(data['target']);
            }
            if (data.hasOwnProperty('apiMode')) {
                obj['apiMode'] = ApiClient.convertToType(data['apiMode'], TestExecutionApiMode);
            }
            if (data.hasOwnProperty('testExecutionModality')) {
                obj['testExecutionModality'] = ApiClient.convertToType(data['testExecutionModality'], TestExecutionModality);
            }
            if (data.hasOwnProperty('failureReasons')) {
                obj['failureReasons'] = ApiClient.convertToType(data['failureReasons'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeTestExecutionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeTestExecutionResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `testExecutionId`
        if (data['testExecutionId']) { // data not null
          String.validateJSON(data['testExecutionId']);
        }
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          Date.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `lastUpdatedDateTime`
        if (data['lastUpdatedDateTime']) { // data not null
          Date.validateJSON(data['lastUpdatedDateTime']);
        }
        // validate the optional field `testExecutionStatus`
        if (data['testExecutionStatus']) { // data not null
          TestExecutionStatus.validateJSON(data['testExecutionStatus']);
        }
        // validate the optional field `testSetId`
        if (data['testSetId']) { // data not null
          String.validateJSON(data['testSetId']);
        }
        // validate the optional field `testSetName`
        if (data['testSetName']) { // data not null
          String.validateJSON(data['testSetName']);
        }
        // validate the optional field `target`
        if (data['target']) { // data not null
          DescribeTestExecutionResponseTarget.validateJSON(data['target']);
        }
        // validate the optional field `apiMode`
        if (data['apiMode']) { // data not null
          TestExecutionApiMode.validateJSON(data['apiMode']);
        }
        // validate the optional field `testExecutionModality`
        if (data['testExecutionModality']) { // data not null
          TestExecutionModality.validateJSON(data['testExecutionModality']);
        }
        // validate the optional field `failureReasons`
        if (data['failureReasons']) { // data not null
          Array.validateJSON(data['failureReasons']);
        }

        return true;
    }


}



/**
 * @member {String} testExecutionId
 */
DescribeTestExecutionResponse.prototype['testExecutionId'] = undefined;

/**
 * @member {Date} creationDateTime
 */
DescribeTestExecutionResponse.prototype['creationDateTime'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
DescribeTestExecutionResponse.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {module:model/TestExecutionStatus} testExecutionStatus
 */
DescribeTestExecutionResponse.prototype['testExecutionStatus'] = undefined;

/**
 * @member {String} testSetId
 */
DescribeTestExecutionResponse.prototype['testSetId'] = undefined;

/**
 * @member {String} testSetName
 */
DescribeTestExecutionResponse.prototype['testSetName'] = undefined;

/**
 * @member {module:model/DescribeTestExecutionResponseTarget} target
 */
DescribeTestExecutionResponse.prototype['target'] = undefined;

/**
 * @member {module:model/TestExecutionApiMode} apiMode
 */
DescribeTestExecutionResponse.prototype['apiMode'] = undefined;

/**
 * @member {module:model/TestExecutionModality} testExecutionModality
 */
DescribeTestExecutionResponse.prototype['testExecutionModality'] = undefined;

/**
 * @member {Array} failureReasons
 */
DescribeTestExecutionResponse.prototype['failureReasons'] = undefined;






export default DescribeTestExecutionResponse;

