/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeTestSetDiscrepancyReportResponseTarget from './DescribeTestSetDiscrepancyReportResponseTarget';
import DescribeTestSetDiscrepancyReportResponseTestSetDiscrepancyTopErrors from './DescribeTestSetDiscrepancyReportResponseTestSetDiscrepancyTopErrors';
import TestSetDiscrepancyReportStatus from './TestSetDiscrepancyReportStatus';

/**
 * The DescribeTestSetDiscrepancyReportResponse model module.
 * @module model/DescribeTestSetDiscrepancyReportResponse
 * @version 2020-08-07
 */
class DescribeTestSetDiscrepancyReportResponse {
    /**
     * Constructs a new <code>DescribeTestSetDiscrepancyReportResponse</code>.
     * @alias module:model/DescribeTestSetDiscrepancyReportResponse
     */
    constructor() { 
        
        DescribeTestSetDiscrepancyReportResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeTestSetDiscrepancyReportResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeTestSetDiscrepancyReportResponse} obj Optional instance to populate.
     * @return {module:model/DescribeTestSetDiscrepancyReportResponse} The populated <code>DescribeTestSetDiscrepancyReportResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeTestSetDiscrepancyReportResponse();

            if (data.hasOwnProperty('testSetDiscrepancyReportId')) {
                obj['testSetDiscrepancyReportId'] = ApiClient.convertToType(data['testSetDiscrepancyReportId'], 'String');
            }
            if (data.hasOwnProperty('testSetId')) {
                obj['testSetId'] = ApiClient.convertToType(data['testSetId'], 'String');
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'Date');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = DescribeTestSetDiscrepancyReportResponseTarget.constructFromObject(data['target']);
            }
            if (data.hasOwnProperty('testSetDiscrepancyReportStatus')) {
                obj['testSetDiscrepancyReportStatus'] = ApiClient.convertToType(data['testSetDiscrepancyReportStatus'], TestSetDiscrepancyReportStatus);
            }
            if (data.hasOwnProperty('lastUpdatedDataTime')) {
                obj['lastUpdatedDataTime'] = ApiClient.convertToType(data['lastUpdatedDataTime'], 'Date');
            }
            if (data.hasOwnProperty('testSetDiscrepancyTopErrors')) {
                obj['testSetDiscrepancyTopErrors'] = DescribeTestSetDiscrepancyReportResponseTestSetDiscrepancyTopErrors.constructFromObject(data['testSetDiscrepancyTopErrors']);
            }
            if (data.hasOwnProperty('testSetDiscrepancyRawOutputUrl')) {
                obj['testSetDiscrepancyRawOutputUrl'] = ApiClient.convertToType(data['testSetDiscrepancyRawOutputUrl'], 'String');
            }
            if (data.hasOwnProperty('failureReasons')) {
                obj['failureReasons'] = ApiClient.convertToType(data['failureReasons'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeTestSetDiscrepancyReportResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeTestSetDiscrepancyReportResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `testSetDiscrepancyReportId`
        if (data['testSetDiscrepancyReportId']) { // data not null
          String.validateJSON(data['testSetDiscrepancyReportId']);
        }
        // validate the optional field `testSetId`
        if (data['testSetId']) { // data not null
          String.validateJSON(data['testSetId']);
        }
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          Date.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `target`
        if (data['target']) { // data not null
          DescribeTestSetDiscrepancyReportResponseTarget.validateJSON(data['target']);
        }
        // validate the optional field `testSetDiscrepancyReportStatus`
        if (data['testSetDiscrepancyReportStatus']) { // data not null
          TestSetDiscrepancyReportStatus.validateJSON(data['testSetDiscrepancyReportStatus']);
        }
        // validate the optional field `lastUpdatedDataTime`
        if (data['lastUpdatedDataTime']) { // data not null
          Date.validateJSON(data['lastUpdatedDataTime']);
        }
        // validate the optional field `testSetDiscrepancyTopErrors`
        if (data['testSetDiscrepancyTopErrors']) { // data not null
          DescribeTestSetDiscrepancyReportResponseTestSetDiscrepancyTopErrors.validateJSON(data['testSetDiscrepancyTopErrors']);
        }
        // validate the optional field `testSetDiscrepancyRawOutputUrl`
        if (data['testSetDiscrepancyRawOutputUrl']) { // data not null
          String.validateJSON(data['testSetDiscrepancyRawOutputUrl']);
        }
        // validate the optional field `failureReasons`
        if (data['failureReasons']) { // data not null
          Array.validateJSON(data['failureReasons']);
        }

        return true;
    }


}



/**
 * @member {String} testSetDiscrepancyReportId
 */
DescribeTestSetDiscrepancyReportResponse.prototype['testSetDiscrepancyReportId'] = undefined;

/**
 * @member {String} testSetId
 */
DescribeTestSetDiscrepancyReportResponse.prototype['testSetId'] = undefined;

/**
 * @member {Date} creationDateTime
 */
DescribeTestSetDiscrepancyReportResponse.prototype['creationDateTime'] = undefined;

/**
 * @member {module:model/DescribeTestSetDiscrepancyReportResponseTarget} target
 */
DescribeTestSetDiscrepancyReportResponse.prototype['target'] = undefined;

/**
 * @member {module:model/TestSetDiscrepancyReportStatus} testSetDiscrepancyReportStatus
 */
DescribeTestSetDiscrepancyReportResponse.prototype['testSetDiscrepancyReportStatus'] = undefined;

/**
 * @member {Date} lastUpdatedDataTime
 */
DescribeTestSetDiscrepancyReportResponse.prototype['lastUpdatedDataTime'] = undefined;

/**
 * @member {module:model/DescribeTestSetDiscrepancyReportResponseTestSetDiscrepancyTopErrors} testSetDiscrepancyTopErrors
 */
DescribeTestSetDiscrepancyReportResponse.prototype['testSetDiscrepancyTopErrors'] = undefined;

/**
 * @member {String} testSetDiscrepancyRawOutputUrl
 */
DescribeTestSetDiscrepancyReportResponse.prototype['testSetDiscrepancyRawOutputUrl'] = undefined;

/**
 * @member {Array} failureReasons
 */
DescribeTestSetDiscrepancyReportResponse.prototype['failureReasons'] = undefined;






export default DescribeTestSetDiscrepancyReportResponse;

