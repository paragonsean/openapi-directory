/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExecutionErrorDetails from './ExecutionErrorDetails';
import TestResultMatchStatus from './TestResultMatchStatus';
import UserTurnResultActualOutput from './UserTurnResultActualOutput';
import UserTurnResultConversationLevelResult from './UserTurnResultConversationLevelResult';
import UserTurnResultExpectedOutput from './UserTurnResultExpectedOutput';
import UserTurnResultInput from './UserTurnResultInput';

/**
 * The UserTurnResult model module.
 * @module model/UserTurnResult
 * @version 2020-08-07
 */
class UserTurnResult {
    /**
     * Constructs a new <code>UserTurnResult</code>.
     * Contains the results for the user turn by the test execution.
     * @alias module:model/UserTurnResult
     * @param input {module:model/UserTurnResultInput} 
     * @param expectedOutput {module:model/UserTurnResultExpectedOutput} 
     */
    constructor(input, expectedOutput) { 
        
        UserTurnResult.initialize(this, input, expectedOutput);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, input, expectedOutput) { 
        obj['input'] = input;
        obj['expectedOutput'] = expectedOutput;
    }

    /**
     * Constructs a <code>UserTurnResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserTurnResult} obj Optional instance to populate.
     * @return {module:model/UserTurnResult} The populated <code>UserTurnResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserTurnResult();

            if (data.hasOwnProperty('input')) {
                obj['input'] = UserTurnResultInput.constructFromObject(data['input']);
            }
            if (data.hasOwnProperty('expectedOutput')) {
                obj['expectedOutput'] = UserTurnResultExpectedOutput.constructFromObject(data['expectedOutput']);
            }
            if (data.hasOwnProperty('actualOutput')) {
                obj['actualOutput'] = UserTurnResultActualOutput.constructFromObject(data['actualOutput']);
            }
            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = ExecutionErrorDetails.constructFromObject(data['errorDetails']);
            }
            if (data.hasOwnProperty('endToEndResult')) {
                obj['endToEndResult'] = ApiClient.convertToType(data['endToEndResult'], TestResultMatchStatus);
            }
            if (data.hasOwnProperty('intentMatchResult')) {
                obj['intentMatchResult'] = ApiClient.convertToType(data['intentMatchResult'], TestResultMatchStatus);
            }
            if (data.hasOwnProperty('slotMatchResult')) {
                obj['slotMatchResult'] = ApiClient.convertToType(data['slotMatchResult'], TestResultMatchStatus);
            }
            if (data.hasOwnProperty('speechTranscriptionResult')) {
                obj['speechTranscriptionResult'] = ApiClient.convertToType(data['speechTranscriptionResult'], TestResultMatchStatus);
            }
            if (data.hasOwnProperty('conversationLevelResult')) {
                obj['conversationLevelResult'] = UserTurnResultConversationLevelResult.constructFromObject(data['conversationLevelResult']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserTurnResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserTurnResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserTurnResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `input`
        if (data['input']) { // data not null
          UserTurnResultInput.validateJSON(data['input']);
        }
        // validate the optional field `expectedOutput`
        if (data['expectedOutput']) { // data not null
          UserTurnResultExpectedOutput.validateJSON(data['expectedOutput']);
        }
        // validate the optional field `actualOutput`
        if (data['actualOutput']) { // data not null
          UserTurnResultActualOutput.validateJSON(data['actualOutput']);
        }
        // validate the optional field `errorDetails`
        if (data['errorDetails']) { // data not null
          ExecutionErrorDetails.validateJSON(data['errorDetails']);
        }
        // validate the optional field `endToEndResult`
        if (data['endToEndResult']) { // data not null
          TestResultMatchStatus.validateJSON(data['endToEndResult']);
        }
        // validate the optional field `intentMatchResult`
        if (data['intentMatchResult']) { // data not null
          TestResultMatchStatus.validateJSON(data['intentMatchResult']);
        }
        // validate the optional field `slotMatchResult`
        if (data['slotMatchResult']) { // data not null
          TestResultMatchStatus.validateJSON(data['slotMatchResult']);
        }
        // validate the optional field `speechTranscriptionResult`
        if (data['speechTranscriptionResult']) { // data not null
          TestResultMatchStatus.validateJSON(data['speechTranscriptionResult']);
        }
        // validate the optional field `conversationLevelResult`
        if (data['conversationLevelResult']) { // data not null
          UserTurnResultConversationLevelResult.validateJSON(data['conversationLevelResult']);
        }

        return true;
    }


}

UserTurnResult.RequiredProperties = ["input", "expectedOutput"];

/**
 * @member {module:model/UserTurnResultInput} input
 */
UserTurnResult.prototype['input'] = undefined;

/**
 * @member {module:model/UserTurnResultExpectedOutput} expectedOutput
 */
UserTurnResult.prototype['expectedOutput'] = undefined;

/**
 * @member {module:model/UserTurnResultActualOutput} actualOutput
 */
UserTurnResult.prototype['actualOutput'] = undefined;

/**
 * @member {module:model/ExecutionErrorDetails} errorDetails
 */
UserTurnResult.prototype['errorDetails'] = undefined;

/**
 * @member {module:model/TestResultMatchStatus} endToEndResult
 */
UserTurnResult.prototype['endToEndResult'] = undefined;

/**
 * @member {module:model/TestResultMatchStatus} intentMatchResult
 */
UserTurnResult.prototype['intentMatchResult'] = undefined;

/**
 * @member {module:model/TestResultMatchStatus} slotMatchResult
 */
UserTurnResult.prototype['slotMatchResult'] = undefined;

/**
 * @member {module:model/TestResultMatchStatus} speechTranscriptionResult
 */
UserTurnResult.prototype['speechTranscriptionResult'] = undefined;

/**
 * @member {module:model/UserTurnResultConversationLevelResult} conversationLevelResult
 */
UserTurnResult.prototype['conversationLevelResult'] = undefined;






export default UserTurnResult;

