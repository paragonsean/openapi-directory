/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateIntentResponseDialogCodeHook from './CreateIntentResponseDialogCodeHook';
import CreateIntentResponseFulfillmentCodeHook from './CreateIntentResponseFulfillmentCodeHook';
import CreateIntentResponseInitialResponseSetting from './CreateIntentResponseInitialResponseSetting';
import CreateIntentResponseIntentClosingSetting from './CreateIntentResponseIntentClosingSetting';
import CreateIntentResponseIntentConfirmationSetting from './CreateIntentResponseIntentConfirmationSetting';
import CreateIntentResponseKendraConfiguration from './CreateIntentResponseKendraConfiguration';

/**
 * The CreateIntentResponse model module.
 * @module model/CreateIntentResponse
 * @version 2020-08-07
 */
class CreateIntentResponse {
    /**
     * Constructs a new <code>CreateIntentResponse</code>.
     * @alias module:model/CreateIntentResponse
     */
    constructor() { 
        
        CreateIntentResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateIntentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateIntentResponse} obj Optional instance to populate.
     * @return {module:model/CreateIntentResponse} The populated <code>CreateIntentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateIntentResponse();

            if (data.hasOwnProperty('intentId')) {
                obj['intentId'] = ApiClient.convertToType(data['intentId'], 'String');
            }
            if (data.hasOwnProperty('intentName')) {
                obj['intentName'] = ApiClient.convertToType(data['intentName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('parentIntentSignature')) {
                obj['parentIntentSignature'] = ApiClient.convertToType(data['parentIntentSignature'], 'String');
            }
            if (data.hasOwnProperty('sampleUtterances')) {
                obj['sampleUtterances'] = ApiClient.convertToType(data['sampleUtterances'], Array);
            }
            if (data.hasOwnProperty('dialogCodeHook')) {
                obj['dialogCodeHook'] = CreateIntentResponseDialogCodeHook.constructFromObject(data['dialogCodeHook']);
            }
            if (data.hasOwnProperty('fulfillmentCodeHook')) {
                obj['fulfillmentCodeHook'] = CreateIntentResponseFulfillmentCodeHook.constructFromObject(data['fulfillmentCodeHook']);
            }
            if (data.hasOwnProperty('intentConfirmationSetting')) {
                obj['intentConfirmationSetting'] = CreateIntentResponseIntentConfirmationSetting.constructFromObject(data['intentConfirmationSetting']);
            }
            if (data.hasOwnProperty('intentClosingSetting')) {
                obj['intentClosingSetting'] = CreateIntentResponseIntentClosingSetting.constructFromObject(data['intentClosingSetting']);
            }
            if (data.hasOwnProperty('inputContexts')) {
                obj['inputContexts'] = ApiClient.convertToType(data['inputContexts'], Array);
            }
            if (data.hasOwnProperty('outputContexts')) {
                obj['outputContexts'] = ApiClient.convertToType(data['outputContexts'], Array);
            }
            if (data.hasOwnProperty('kendraConfiguration')) {
                obj['kendraConfiguration'] = CreateIntentResponseKendraConfiguration.constructFromObject(data['kendraConfiguration']);
            }
            if (data.hasOwnProperty('botId')) {
                obj['botId'] = ApiClient.convertToType(data['botId'], 'String');
            }
            if (data.hasOwnProperty('botVersion')) {
                obj['botVersion'] = ApiClient.convertToType(data['botVersion'], 'String');
            }
            if (data.hasOwnProperty('localeId')) {
                obj['localeId'] = ApiClient.convertToType(data['localeId'], 'String');
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'Date');
            }
            if (data.hasOwnProperty('initialResponseSetting')) {
                obj['initialResponseSetting'] = CreateIntentResponseInitialResponseSetting.constructFromObject(data['initialResponseSetting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateIntentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateIntentResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `intentId`
        if (data['intentId']) { // data not null
          String.validateJSON(data['intentId']);
        }
        // validate the optional field `intentName`
        if (data['intentName']) { // data not null
          String.validateJSON(data['intentName']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `parentIntentSignature`
        if (data['parentIntentSignature']) { // data not null
          String.validateJSON(data['parentIntentSignature']);
        }
        // validate the optional field `sampleUtterances`
        if (data['sampleUtterances']) { // data not null
          Array.validateJSON(data['sampleUtterances']);
        }
        // validate the optional field `dialogCodeHook`
        if (data['dialogCodeHook']) { // data not null
          CreateIntentResponseDialogCodeHook.validateJSON(data['dialogCodeHook']);
        }
        // validate the optional field `fulfillmentCodeHook`
        if (data['fulfillmentCodeHook']) { // data not null
          CreateIntentResponseFulfillmentCodeHook.validateJSON(data['fulfillmentCodeHook']);
        }
        // validate the optional field `intentConfirmationSetting`
        if (data['intentConfirmationSetting']) { // data not null
          CreateIntentResponseIntentConfirmationSetting.validateJSON(data['intentConfirmationSetting']);
        }
        // validate the optional field `intentClosingSetting`
        if (data['intentClosingSetting']) { // data not null
          CreateIntentResponseIntentClosingSetting.validateJSON(data['intentClosingSetting']);
        }
        // validate the optional field `inputContexts`
        if (data['inputContexts']) { // data not null
          Array.validateJSON(data['inputContexts']);
        }
        // validate the optional field `outputContexts`
        if (data['outputContexts']) { // data not null
          Array.validateJSON(data['outputContexts']);
        }
        // validate the optional field `kendraConfiguration`
        if (data['kendraConfiguration']) { // data not null
          CreateIntentResponseKendraConfiguration.validateJSON(data['kendraConfiguration']);
        }
        // validate the optional field `botId`
        if (data['botId']) { // data not null
          String.validateJSON(data['botId']);
        }
        // validate the optional field `botVersion`
        if (data['botVersion']) { // data not null
          String.validateJSON(data['botVersion']);
        }
        // validate the optional field `localeId`
        if (data['localeId']) { // data not null
          String.validateJSON(data['localeId']);
        }
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          Date.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `initialResponseSetting`
        if (data['initialResponseSetting']) { // data not null
          CreateIntentResponseInitialResponseSetting.validateJSON(data['initialResponseSetting']);
        }

        return true;
    }


}



/**
 * @member {String} intentId
 */
CreateIntentResponse.prototype['intentId'] = undefined;

/**
 * @member {String} intentName
 */
CreateIntentResponse.prototype['intentName'] = undefined;

/**
 * @member {String} description
 */
CreateIntentResponse.prototype['description'] = undefined;

/**
 * @member {String} parentIntentSignature
 */
CreateIntentResponse.prototype['parentIntentSignature'] = undefined;

/**
 * @member {Array} sampleUtterances
 */
CreateIntentResponse.prototype['sampleUtterances'] = undefined;

/**
 * @member {module:model/CreateIntentResponseDialogCodeHook} dialogCodeHook
 */
CreateIntentResponse.prototype['dialogCodeHook'] = undefined;

/**
 * @member {module:model/CreateIntentResponseFulfillmentCodeHook} fulfillmentCodeHook
 */
CreateIntentResponse.prototype['fulfillmentCodeHook'] = undefined;

/**
 * @member {module:model/CreateIntentResponseIntentConfirmationSetting} intentConfirmationSetting
 */
CreateIntentResponse.prototype['intentConfirmationSetting'] = undefined;

/**
 * @member {module:model/CreateIntentResponseIntentClosingSetting} intentClosingSetting
 */
CreateIntentResponse.prototype['intentClosingSetting'] = undefined;

/**
 * @member {Array} inputContexts
 */
CreateIntentResponse.prototype['inputContexts'] = undefined;

/**
 * @member {Array} outputContexts
 */
CreateIntentResponse.prototype['outputContexts'] = undefined;

/**
 * @member {module:model/CreateIntentResponseKendraConfiguration} kendraConfiguration
 */
CreateIntentResponse.prototype['kendraConfiguration'] = undefined;

/**
 * @member {String} botId
 */
CreateIntentResponse.prototype['botId'] = undefined;

/**
 * @member {String} botVersion
 */
CreateIntentResponse.prototype['botVersion'] = undefined;

/**
 * @member {String} localeId
 */
CreateIntentResponse.prototype['localeId'] = undefined;

/**
 * @member {Date} creationDateTime
 */
CreateIntentResponse.prototype['creationDateTime'] = undefined;

/**
 * @member {module:model/CreateIntentResponseInitialResponseSetting} initialResponseSetting
 */
CreateIntentResponse.prototype['initialResponseSetting'] = undefined;






export default CreateIntentResponse;

