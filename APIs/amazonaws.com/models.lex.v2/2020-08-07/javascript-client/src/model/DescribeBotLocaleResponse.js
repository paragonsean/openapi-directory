/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BotLocaleStatus from './BotLocaleStatus';
import DescribeBotLocaleResponseVoiceSettings from './DescribeBotLocaleResponseVoiceSettings';

/**
 * The DescribeBotLocaleResponse model module.
 * @module model/DescribeBotLocaleResponse
 * @version 2020-08-07
 */
class DescribeBotLocaleResponse {
    /**
     * Constructs a new <code>DescribeBotLocaleResponse</code>.
     * @alias module:model/DescribeBotLocaleResponse
     */
    constructor() { 
        
        DescribeBotLocaleResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeBotLocaleResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeBotLocaleResponse} obj Optional instance to populate.
     * @return {module:model/DescribeBotLocaleResponse} The populated <code>DescribeBotLocaleResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeBotLocaleResponse();

            if (data.hasOwnProperty('botId')) {
                obj['botId'] = ApiClient.convertToType(data['botId'], 'String');
            }
            if (data.hasOwnProperty('botVersion')) {
                obj['botVersion'] = ApiClient.convertToType(data['botVersion'], 'String');
            }
            if (data.hasOwnProperty('localeId')) {
                obj['localeId'] = ApiClient.convertToType(data['localeId'], 'String');
            }
            if (data.hasOwnProperty('localeName')) {
                obj['localeName'] = ApiClient.convertToType(data['localeName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('nluIntentConfidenceThreshold')) {
                obj['nluIntentConfidenceThreshold'] = ApiClient.convertToType(data['nluIntentConfidenceThreshold'], 'Number');
            }
            if (data.hasOwnProperty('voiceSettings')) {
                obj['voiceSettings'] = DescribeBotLocaleResponseVoiceSettings.constructFromObject(data['voiceSettings']);
            }
            if (data.hasOwnProperty('intentsCount')) {
                obj['intentsCount'] = ApiClient.convertToType(data['intentsCount'], 'Number');
            }
            if (data.hasOwnProperty('slotTypesCount')) {
                obj['slotTypesCount'] = ApiClient.convertToType(data['slotTypesCount'], 'Number');
            }
            if (data.hasOwnProperty('botLocaleStatus')) {
                obj['botLocaleStatus'] = ApiClient.convertToType(data['botLocaleStatus'], BotLocaleStatus);
            }
            if (data.hasOwnProperty('failureReasons')) {
                obj['failureReasons'] = ApiClient.convertToType(data['failureReasons'], Array);
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastBuildSubmittedDateTime')) {
                obj['lastBuildSubmittedDateTime'] = ApiClient.convertToType(data['lastBuildSubmittedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('botLocaleHistoryEvents')) {
                obj['botLocaleHistoryEvents'] = ApiClient.convertToType(data['botLocaleHistoryEvents'], Array);
            }
            if (data.hasOwnProperty('recommendedActions')) {
                obj['recommendedActions'] = ApiClient.convertToType(data['recommendedActions'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeBotLocaleResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeBotLocaleResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `botId`
        if (data['botId']) { // data not null
          String.validateJSON(data['botId']);
        }
        // validate the optional field `botVersion`
        if (data['botVersion']) { // data not null
          String.validateJSON(data['botVersion']);
        }
        // validate the optional field `localeId`
        if (data['localeId']) { // data not null
          String.validateJSON(data['localeId']);
        }
        // validate the optional field `localeName`
        if (data['localeName']) { // data not null
          String.validateJSON(data['localeName']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `nluIntentConfidenceThreshold`
        if (data['nluIntentConfidenceThreshold']) { // data not null
          Number.validateJSON(data['nluIntentConfidenceThreshold']);
        }
        // validate the optional field `voiceSettings`
        if (data['voiceSettings']) { // data not null
          DescribeBotLocaleResponseVoiceSettings.validateJSON(data['voiceSettings']);
        }
        // validate the optional field `intentsCount`
        if (data['intentsCount']) { // data not null
          Number.validateJSON(data['intentsCount']);
        }
        // validate the optional field `slotTypesCount`
        if (data['slotTypesCount']) { // data not null
          Number.validateJSON(data['slotTypesCount']);
        }
        // validate the optional field `botLocaleStatus`
        if (data['botLocaleStatus']) { // data not null
          BotLocaleStatus.validateJSON(data['botLocaleStatus']);
        }
        // validate the optional field `failureReasons`
        if (data['failureReasons']) { // data not null
          Array.validateJSON(data['failureReasons']);
        }
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          Date.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `lastUpdatedDateTime`
        if (data['lastUpdatedDateTime']) { // data not null
          Date.validateJSON(data['lastUpdatedDateTime']);
        }
        // validate the optional field `lastBuildSubmittedDateTime`
        if (data['lastBuildSubmittedDateTime']) { // data not null
          Date.validateJSON(data['lastBuildSubmittedDateTime']);
        }
        // validate the optional field `botLocaleHistoryEvents`
        if (data['botLocaleHistoryEvents']) { // data not null
          Array.validateJSON(data['botLocaleHistoryEvents']);
        }
        // validate the optional field `recommendedActions`
        if (data['recommendedActions']) { // data not null
          Array.validateJSON(data['recommendedActions']);
        }

        return true;
    }


}



/**
 * @member {String} botId
 */
DescribeBotLocaleResponse.prototype['botId'] = undefined;

/**
 * @member {String} botVersion
 */
DescribeBotLocaleResponse.prototype['botVersion'] = undefined;

/**
 * @member {String} localeId
 */
DescribeBotLocaleResponse.prototype['localeId'] = undefined;

/**
 * @member {String} localeName
 */
DescribeBotLocaleResponse.prototype['localeName'] = undefined;

/**
 * @member {String} description
 */
DescribeBotLocaleResponse.prototype['description'] = undefined;

/**
 * @member {Number} nluIntentConfidenceThreshold
 */
DescribeBotLocaleResponse.prototype['nluIntentConfidenceThreshold'] = undefined;

/**
 * @member {module:model/DescribeBotLocaleResponseVoiceSettings} voiceSettings
 */
DescribeBotLocaleResponse.prototype['voiceSettings'] = undefined;

/**
 * @member {Number} intentsCount
 */
DescribeBotLocaleResponse.prototype['intentsCount'] = undefined;

/**
 * @member {Number} slotTypesCount
 */
DescribeBotLocaleResponse.prototype['slotTypesCount'] = undefined;

/**
 * @member {module:model/BotLocaleStatus} botLocaleStatus
 */
DescribeBotLocaleResponse.prototype['botLocaleStatus'] = undefined;

/**
 * @member {Array} failureReasons
 */
DescribeBotLocaleResponse.prototype['failureReasons'] = undefined;

/**
 * @member {Date} creationDateTime
 */
DescribeBotLocaleResponse.prototype['creationDateTime'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
DescribeBotLocaleResponse.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {Date} lastBuildSubmittedDateTime
 */
DescribeBotLocaleResponse.prototype['lastBuildSubmittedDateTime'] = undefined;

/**
 * @member {Array} botLocaleHistoryEvents
 */
DescribeBotLocaleResponse.prototype['botLocaleHistoryEvents'] = undefined;

/**
 * @member {Array} recommendedActions
 */
DescribeBotLocaleResponse.prototype['recommendedActions'] = undefined;






export default DescribeBotLocaleResponse;

