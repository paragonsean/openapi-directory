/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateBotLocaleRequestVoiceSettings from './UpdateBotLocaleRequestVoiceSettings';

/**
 * The CreateBotLocaleRequest model module.
 * @module model/CreateBotLocaleRequest
 * @version 2020-08-07
 */
class CreateBotLocaleRequest {
    /**
     * Constructs a new <code>CreateBotLocaleRequest</code>.
     * @alias module:model/CreateBotLocaleRequest
     * @param localeId {String} The identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\">Supported languages</a>.
     * @param nluIntentConfidenceThreshold {Number} <p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p> <p>For example, suppose a bot is configured with the confidence threshold of 0.80 and the <code>AMAZON.FallbackIntent</code>. Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the <code>RecognizeText</code> operation would be:</p> <ul> <li> <p>AMAZON.FallbackIntent</p> </li> <li> <p>IntentA</p> </li> <li> <p>IntentB</p> </li> <li> <p>IntentC</p> </li> </ul>
     */
    constructor(localeId, nluIntentConfidenceThreshold) { 
        
        CreateBotLocaleRequest.initialize(this, localeId, nluIntentConfidenceThreshold);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, localeId, nluIntentConfidenceThreshold) { 
        obj['localeId'] = localeId;
        obj['nluIntentConfidenceThreshold'] = nluIntentConfidenceThreshold;
    }

    /**
     * Constructs a <code>CreateBotLocaleRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBotLocaleRequest} obj Optional instance to populate.
     * @return {module:model/CreateBotLocaleRequest} The populated <code>CreateBotLocaleRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBotLocaleRequest();

            if (data.hasOwnProperty('localeId')) {
                obj['localeId'] = ApiClient.convertToType(data['localeId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('nluIntentConfidenceThreshold')) {
                obj['nluIntentConfidenceThreshold'] = ApiClient.convertToType(data['nluIntentConfidenceThreshold'], 'Number');
            }
            if (data.hasOwnProperty('voiceSettings')) {
                obj['voiceSettings'] = UpdateBotLocaleRequestVoiceSettings.constructFromObject(data['voiceSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateBotLocaleRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateBotLocaleRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateBotLocaleRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['localeId'] && !(typeof data['localeId'] === 'string' || data['localeId'] instanceof String)) {
            throw new Error("Expected the field `localeId` to be a primitive type in the JSON string but got " + data['localeId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `voiceSettings`
        if (data['voiceSettings']) { // data not null
          UpdateBotLocaleRequestVoiceSettings.validateJSON(data['voiceSettings']);
        }

        return true;
    }


}

CreateBotLocaleRequest.RequiredProperties = ["localeId", "nluIntentConfidenceThreshold"];

/**
 * The identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\">Supported languages</a>.
 * @member {String} localeId
 */
CreateBotLocaleRequest.prototype['localeId'] = undefined;

/**
 * A description of the bot locale. Use this to help identify the bot locale in lists.
 * @member {String} description
 */
CreateBotLocaleRequest.prototype['description'] = undefined;

/**
 * <p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p> <p>For example, suppose a bot is configured with the confidence threshold of 0.80 and the <code>AMAZON.FallbackIntent</code>. Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the <code>RecognizeText</code> operation would be:</p> <ul> <li> <p>AMAZON.FallbackIntent</p> </li> <li> <p>IntentA</p> </li> <li> <p>IntentB</p> </li> <li> <p>IntentC</p> </li> </ul>
 * @member {Number} nluIntentConfidenceThreshold
 */
CreateBotLocaleRequest.prototype['nluIntentConfidenceThreshold'] = undefined;

/**
 * @member {module:model/UpdateBotLocaleRequestVoiceSettings} voiceSettings
 */
CreateBotLocaleRequest.prototype['voiceSettings'] = undefined;






export default CreateBotLocaleRequest;

