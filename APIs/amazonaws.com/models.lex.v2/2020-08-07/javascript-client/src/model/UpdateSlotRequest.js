/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateSlotRequestMultipleValuesSetting from './CreateSlotRequestMultipleValuesSetting';
import CreateSlotRequestObfuscationSetting from './CreateSlotRequestObfuscationSetting';
import CreateSlotRequestSubSlotSetting from './CreateSlotRequestSubSlotSetting';
import CreateSlotRequestValueElicitationSetting from './CreateSlotRequestValueElicitationSetting';

/**
 * The UpdateSlotRequest model module.
 * @module model/UpdateSlotRequest
 * @version 2020-08-07
 */
class UpdateSlotRequest {
    /**
     * Constructs a new <code>UpdateSlotRequest</code>.
     * @alias module:model/UpdateSlotRequest
     * @param slotName {String} The new name for the slot.
     * @param valueElicitationSetting {module:model/CreateSlotRequestValueElicitationSetting} 
     */
    constructor(slotName, valueElicitationSetting) { 
        
        UpdateSlotRequest.initialize(this, slotName, valueElicitationSetting);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, slotName, valueElicitationSetting) { 
        obj['slotName'] = slotName;
        obj['valueElicitationSetting'] = valueElicitationSetting;
    }

    /**
     * Constructs a <code>UpdateSlotRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSlotRequest} obj Optional instance to populate.
     * @return {module:model/UpdateSlotRequest} The populated <code>UpdateSlotRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSlotRequest();

            if (data.hasOwnProperty('slotName')) {
                obj['slotName'] = ApiClient.convertToType(data['slotName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('slotTypeId')) {
                obj['slotTypeId'] = ApiClient.convertToType(data['slotTypeId'], 'String');
            }
            if (data.hasOwnProperty('valueElicitationSetting')) {
                obj['valueElicitationSetting'] = CreateSlotRequestValueElicitationSetting.constructFromObject(data['valueElicitationSetting']);
            }
            if (data.hasOwnProperty('obfuscationSetting')) {
                obj['obfuscationSetting'] = CreateSlotRequestObfuscationSetting.constructFromObject(data['obfuscationSetting']);
            }
            if (data.hasOwnProperty('multipleValuesSetting')) {
                obj['multipleValuesSetting'] = CreateSlotRequestMultipleValuesSetting.constructFromObject(data['multipleValuesSetting']);
            }
            if (data.hasOwnProperty('subSlotSetting')) {
                obj['subSlotSetting'] = CreateSlotRequestSubSlotSetting.constructFromObject(data['subSlotSetting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSlotRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSlotRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateSlotRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['slotName'] && !(typeof data['slotName'] === 'string' || data['slotName'] instanceof String)) {
            throw new Error("Expected the field `slotName` to be a primitive type in the JSON string but got " + data['slotName']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['slotTypeId'] && !(typeof data['slotTypeId'] === 'string' || data['slotTypeId'] instanceof String)) {
            throw new Error("Expected the field `slotTypeId` to be a primitive type in the JSON string but got " + data['slotTypeId']);
        }
        // validate the optional field `valueElicitationSetting`
        if (data['valueElicitationSetting']) { // data not null
          CreateSlotRequestValueElicitationSetting.validateJSON(data['valueElicitationSetting']);
        }
        // validate the optional field `obfuscationSetting`
        if (data['obfuscationSetting']) { // data not null
          CreateSlotRequestObfuscationSetting.validateJSON(data['obfuscationSetting']);
        }
        // validate the optional field `multipleValuesSetting`
        if (data['multipleValuesSetting']) { // data not null
          CreateSlotRequestMultipleValuesSetting.validateJSON(data['multipleValuesSetting']);
        }
        // validate the optional field `subSlotSetting`
        if (data['subSlotSetting']) { // data not null
          CreateSlotRequestSubSlotSetting.validateJSON(data['subSlotSetting']);
        }

        return true;
    }


}

UpdateSlotRequest.RequiredProperties = ["slotName", "valueElicitationSetting"];

/**
 * The new name for the slot.
 * @member {String} slotName
 */
UpdateSlotRequest.prototype['slotName'] = undefined;

/**
 * The new description for the slot.
 * @member {String} description
 */
UpdateSlotRequest.prototype['description'] = undefined;

/**
 * The unique identifier of the new slot type to associate with this slot. 
 * @member {String} slotTypeId
 */
UpdateSlotRequest.prototype['slotTypeId'] = undefined;

/**
 * @member {module:model/CreateSlotRequestValueElicitationSetting} valueElicitationSetting
 */
UpdateSlotRequest.prototype['valueElicitationSetting'] = undefined;

/**
 * @member {module:model/CreateSlotRequestObfuscationSetting} obfuscationSetting
 */
UpdateSlotRequest.prototype['obfuscationSetting'] = undefined;

/**
 * @member {module:model/CreateSlotRequestMultipleValuesSetting} multipleValuesSetting
 */
UpdateSlotRequest.prototype['multipleValuesSetting'] = undefined;

/**
 * @member {module:model/CreateSlotRequestSubSlotSetting} subSlotSetting
 */
UpdateSlotRequest.prototype['subSlotSetting'] = undefined;






export default UpdateSlotRequest;

