/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UtteranceAudioInputSpecification from './UtteranceAudioInputSpecification';

/**
 * The UtteranceInputSpecificationAudioInput model module.
 * @module model/UtteranceInputSpecificationAudioInput
 * @version 2020-08-07
 */
class UtteranceInputSpecificationAudioInput {
    /**
     * Constructs a new <code>UtteranceInputSpecificationAudioInput</code>.
     * @alias module:model/UtteranceInputSpecificationAudioInput
     * @implements module:model/UtteranceAudioInputSpecification
     * @param audioFileS3Location {String} 
     */
    constructor(audioFileS3Location) { 
        UtteranceAudioInputSpecification.initialize(this, audioFileS3Location);
        UtteranceInputSpecificationAudioInput.initialize(this, audioFileS3Location);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, audioFileS3Location) { 
        obj['audioFileS3Location'] = audioFileS3Location;
    }

    /**
     * Constructs a <code>UtteranceInputSpecificationAudioInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UtteranceInputSpecificationAudioInput} obj Optional instance to populate.
     * @return {module:model/UtteranceInputSpecificationAudioInput} The populated <code>UtteranceInputSpecificationAudioInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UtteranceInputSpecificationAudioInput();
            UtteranceAudioInputSpecification.constructFromObject(data, obj);

            if (data.hasOwnProperty('audioFileS3Location')) {
                obj['audioFileS3Location'] = ApiClient.convertToType(data['audioFileS3Location'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UtteranceInputSpecificationAudioInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UtteranceInputSpecificationAudioInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UtteranceInputSpecificationAudioInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `audioFileS3Location`
        if (data['audioFileS3Location']) { // data not null
          String.validateJSON(data['audioFileS3Location']);
        }

        return true;
    }


}

UtteranceInputSpecificationAudioInput.RequiredProperties = ["audioFileS3Location"];

/**
 * @member {String} audioFileS3Location
 */
UtteranceInputSpecificationAudioInput.prototype['audioFileS3Location'] = undefined;


// Implement UtteranceAudioInputSpecification interface:
/**
 * @member {String} audioFileS3Location
 */
UtteranceAudioInputSpecification.prototype['audioFileS3Location'] = undefined;




export default UtteranceInputSpecificationAudioInput;

