/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserTurnInputSpecificationSessionState from './UserTurnInputSpecificationSessionState';
import UserTurnInputSpecificationUtteranceInput from './UserTurnInputSpecificationUtteranceInput';

/**
 * The UserTurnInputSpecification model module.
 * @module model/UserTurnInputSpecification
 * @version 2020-08-07
 */
class UserTurnInputSpecification {
    /**
     * Constructs a new <code>UserTurnInputSpecification</code>.
     * Contains information about the user messages in the turn in the input.
     * @alias module:model/UserTurnInputSpecification
     * @param utteranceInput {module:model/UserTurnInputSpecificationUtteranceInput} 
     */
    constructor(utteranceInput) { 
        
        UserTurnInputSpecification.initialize(this, utteranceInput);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, utteranceInput) { 
        obj['utteranceInput'] = utteranceInput;
    }

    /**
     * Constructs a <code>UserTurnInputSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserTurnInputSpecification} obj Optional instance to populate.
     * @return {module:model/UserTurnInputSpecification} The populated <code>UserTurnInputSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserTurnInputSpecification();

            if (data.hasOwnProperty('utteranceInput')) {
                obj['utteranceInput'] = UserTurnInputSpecificationUtteranceInput.constructFromObject(data['utteranceInput']);
            }
            if (data.hasOwnProperty('requestAttributes')) {
                obj['requestAttributes'] = ApiClient.convertToType(data['requestAttributes'], Object);
            }
            if (data.hasOwnProperty('sessionState')) {
                obj['sessionState'] = UserTurnInputSpecificationSessionState.constructFromObject(data['sessionState']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserTurnInputSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserTurnInputSpecification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserTurnInputSpecification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `utteranceInput`
        if (data['utteranceInput']) { // data not null
          UserTurnInputSpecificationUtteranceInput.validateJSON(data['utteranceInput']);
        }
        // validate the optional field `requestAttributes`
        if (data['requestAttributes']) { // data not null
          Object.validateJSON(data['requestAttributes']);
        }
        // validate the optional field `sessionState`
        if (data['sessionState']) { // data not null
          UserTurnInputSpecificationSessionState.validateJSON(data['sessionState']);
        }

        return true;
    }


}

UserTurnInputSpecification.RequiredProperties = ["utteranceInput"];

/**
 * @member {module:model/UserTurnInputSpecificationUtteranceInput} utteranceInput
 */
UserTurnInputSpecification.prototype['utteranceInput'] = undefined;

/**
 * @member {Object} requestAttributes
 */
UserTurnInputSpecification.prototype['requestAttributes'] = undefined;

/**
 * @member {module:model/UserTurnInputSpecificationSessionState} sessionState
 */
UserTurnInputSpecification.prototype['sessionState'] = undefined;






export default UserTurnInputSpecification;

