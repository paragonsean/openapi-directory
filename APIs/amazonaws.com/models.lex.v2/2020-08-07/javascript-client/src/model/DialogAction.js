/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DialogActionType from './DialogActionType';

/**
 * The DialogAction model module.
 * @module model/DialogAction
 * @version 2020-08-07
 */
class DialogAction {
    /**
     * Constructs a new <code>DialogAction</code>.
     * Defines the action that the bot executes at runtime when the conversation reaches this step.
     * @alias module:model/DialogAction
     * @param type {module:model/DialogActionType} 
     */
    constructor(type) { 
        
        DialogAction.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>DialogAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DialogAction} obj Optional instance to populate.
     * @return {module:model/DialogAction} The populated <code>DialogAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DialogAction();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], DialogActionType);
            }
            if (data.hasOwnProperty('slotToElicit')) {
                obj['slotToElicit'] = ApiClient.convertToType(data['slotToElicit'], 'String');
            }
            if (data.hasOwnProperty('suppressNextMessage')) {
                obj['suppressNextMessage'] = ApiClient.convertToType(data['suppressNextMessage'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DialogAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DialogAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DialogAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          DialogActionType.validateJSON(data['type']);
        }
        // validate the optional field `slotToElicit`
        if (data['slotToElicit']) { // data not null
          String.validateJSON(data['slotToElicit']);
        }
        // validate the optional field `suppressNextMessage`
        if (data['suppressNextMessage']) { // data not null
          Boolean.validateJSON(data['suppressNextMessage']);
        }

        return true;
    }


}

DialogAction.RequiredProperties = ["type"];

/**
 * @member {module:model/DialogActionType} type
 */
DialogAction.prototype['type'] = undefined;

/**
 * @member {String} slotToElicit
 */
DialogAction.prototype['slotToElicit'] = undefined;

/**
 * @member {Boolean} suppressNextMessage
 */
DialogAction.prototype['suppressNextMessage'] = undefined;






export default DialogAction;

