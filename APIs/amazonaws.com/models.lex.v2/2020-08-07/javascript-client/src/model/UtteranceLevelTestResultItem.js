/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UtteranceLevelTestResultItemTurnResult from './UtteranceLevelTestResultItemTurnResult';

/**
 * The UtteranceLevelTestResultItem model module.
 * @module model/UtteranceLevelTestResultItem
 * @version 2020-08-07
 */
class UtteranceLevelTestResultItem {
    /**
     * Constructs a new <code>UtteranceLevelTestResultItem</code>.
     * Contains information about multiple utterances in the results of a test set execution.
     * @alias module:model/UtteranceLevelTestResultItem
     * @param recordNumber {Number} 
     * @param turnResult {module:model/UtteranceLevelTestResultItemTurnResult} 
     */
    constructor(recordNumber, turnResult) { 
        
        UtteranceLevelTestResultItem.initialize(this, recordNumber, turnResult);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, recordNumber, turnResult) { 
        obj['recordNumber'] = recordNumber;
        obj['turnResult'] = turnResult;
    }

    /**
     * Constructs a <code>UtteranceLevelTestResultItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UtteranceLevelTestResultItem} obj Optional instance to populate.
     * @return {module:model/UtteranceLevelTestResultItem} The populated <code>UtteranceLevelTestResultItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UtteranceLevelTestResultItem();

            if (data.hasOwnProperty('recordNumber')) {
                obj['recordNumber'] = ApiClient.convertToType(data['recordNumber'], 'Number');
            }
            if (data.hasOwnProperty('conversationId')) {
                obj['conversationId'] = ApiClient.convertToType(data['conversationId'], 'String');
            }
            if (data.hasOwnProperty('turnResult')) {
                obj['turnResult'] = UtteranceLevelTestResultItemTurnResult.constructFromObject(data['turnResult']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UtteranceLevelTestResultItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UtteranceLevelTestResultItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UtteranceLevelTestResultItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `recordNumber`
        if (data['recordNumber']) { // data not null
          Number.validateJSON(data['recordNumber']);
        }
        // validate the optional field `conversationId`
        if (data['conversationId']) { // data not null
          String.validateJSON(data['conversationId']);
        }
        // validate the optional field `turnResult`
        if (data['turnResult']) { // data not null
          UtteranceLevelTestResultItemTurnResult.validateJSON(data['turnResult']);
        }

        return true;
    }


}

UtteranceLevelTestResultItem.RequiredProperties = ["recordNumber", "turnResult"];

/**
 * @member {Number} recordNumber
 */
UtteranceLevelTestResultItem.prototype['recordNumber'] = undefined;

/**
 * @member {String} conversationId
 */
UtteranceLevelTestResultItem.prototype['conversationId'] = undefined;

/**
 * @member {module:model/UtteranceLevelTestResultItemTurnResult} turnResult
 */
UtteranceLevelTestResultItem.prototype['turnResult'] = undefined;






export default UtteranceLevelTestResultItem;

