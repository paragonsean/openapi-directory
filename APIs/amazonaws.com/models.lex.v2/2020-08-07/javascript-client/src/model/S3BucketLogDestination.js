/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The S3BucketLogDestination model module.
 * @module model/S3BucketLogDestination
 * @version 2020-08-07
 */
class S3BucketLogDestination {
    /**
     * Constructs a new <code>S3BucketLogDestination</code>.
     * Specifies an Amazon S3 bucket for logging audio conversations
     * @alias module:model/S3BucketLogDestination
     * @param s3BucketArn {String} 
     * @param logPrefix {String} 
     */
    constructor(s3BucketArn, logPrefix) { 
        
        S3BucketLogDestination.initialize(this, s3BucketArn, logPrefix);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, s3BucketArn, logPrefix) { 
        obj['s3BucketArn'] = s3BucketArn;
        obj['logPrefix'] = logPrefix;
    }

    /**
     * Constructs a <code>S3BucketLogDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3BucketLogDestination} obj Optional instance to populate.
     * @return {module:model/S3BucketLogDestination} The populated <code>S3BucketLogDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3BucketLogDestination();

            if (data.hasOwnProperty('kmsKeyArn')) {
                obj['kmsKeyArn'] = ApiClient.convertToType(data['kmsKeyArn'], 'String');
            }
            if (data.hasOwnProperty('s3BucketArn')) {
                obj['s3BucketArn'] = ApiClient.convertToType(data['s3BucketArn'], 'String');
            }
            if (data.hasOwnProperty('logPrefix')) {
                obj['logPrefix'] = ApiClient.convertToType(data['logPrefix'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3BucketLogDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3BucketLogDestination</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of S3BucketLogDestination.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `kmsKeyArn`
        if (data['kmsKeyArn']) { // data not null
          String.validateJSON(data['kmsKeyArn']);
        }
        // validate the optional field `s3BucketArn`
        if (data['s3BucketArn']) { // data not null
          String.validateJSON(data['s3BucketArn']);
        }
        // validate the optional field `logPrefix`
        if (data['logPrefix']) { // data not null
          String.validateJSON(data['logPrefix']);
        }

        return true;
    }


}

S3BucketLogDestination.RequiredProperties = ["s3BucketArn", "logPrefix"];

/**
 * @member {String} kmsKeyArn
 */
S3BucketLogDestination.prototype['kmsKeyArn'] = undefined;

/**
 * @member {String} s3BucketArn
 */
S3BucketLogDestination.prototype['s3BucketArn'] = undefined;

/**
 * @member {String} logPrefix
 */
S3BucketLogDestination.prototype['logPrefix'] = undefined;






export default S3BucketLogDestination;

