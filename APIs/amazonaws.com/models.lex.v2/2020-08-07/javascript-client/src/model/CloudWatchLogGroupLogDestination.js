/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CloudWatchLogGroupLogDestination model module.
 * @module model/CloudWatchLogGroupLogDestination
 * @version 2020-08-07
 */
class CloudWatchLogGroupLogDestination {
    /**
     * Constructs a new <code>CloudWatchLogGroupLogDestination</code>.
     * The Amazon CloudWatch Logs log group where the text and metadata logs are delivered. The log group must exist before you enable logging.
     * @alias module:model/CloudWatchLogGroupLogDestination
     * @param cloudWatchLogGroupArn {String} 
     * @param logPrefix {String} 
     */
    constructor(cloudWatchLogGroupArn, logPrefix) { 
        
        CloudWatchLogGroupLogDestination.initialize(this, cloudWatchLogGroupArn, logPrefix);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cloudWatchLogGroupArn, logPrefix) { 
        obj['cloudWatchLogGroupArn'] = cloudWatchLogGroupArn;
        obj['logPrefix'] = logPrefix;
    }

    /**
     * Constructs a <code>CloudWatchLogGroupLogDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudWatchLogGroupLogDestination} obj Optional instance to populate.
     * @return {module:model/CloudWatchLogGroupLogDestination} The populated <code>CloudWatchLogGroupLogDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudWatchLogGroupLogDestination();

            if (data.hasOwnProperty('cloudWatchLogGroupArn')) {
                obj['cloudWatchLogGroupArn'] = ApiClient.convertToType(data['cloudWatchLogGroupArn'], 'String');
            }
            if (data.hasOwnProperty('logPrefix')) {
                obj['logPrefix'] = ApiClient.convertToType(data['logPrefix'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudWatchLogGroupLogDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudWatchLogGroupLogDestination</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CloudWatchLogGroupLogDestination.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `cloudWatchLogGroupArn`
        if (data['cloudWatchLogGroupArn']) { // data not null
          String.validateJSON(data['cloudWatchLogGroupArn']);
        }
        // validate the optional field `logPrefix`
        if (data['logPrefix']) { // data not null
          String.validateJSON(data['logPrefix']);
        }

        return true;
    }


}

CloudWatchLogGroupLogDestination.RequiredProperties = ["cloudWatchLogGroupArn", "logPrefix"];

/**
 * @member {String} cloudWatchLogGroupArn
 */
CloudWatchLogGroupLogDestination.prototype['cloudWatchLogGroupArn'] = undefined;

/**
 * @member {String} logPrefix
 */
CloudWatchLogGroupLogDestination.prototype['logPrefix'] = undefined;






export default CloudWatchLogGroupLogDestination;

