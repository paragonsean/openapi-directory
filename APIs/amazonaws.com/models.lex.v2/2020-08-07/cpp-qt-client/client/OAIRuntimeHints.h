/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuntimeHints.h
 *
 * &lt;p&gt;You can provide Amazon Lex with hints to the phrases that a customer is likely to use for a slot. When a slot with hints is resolved, the phrases in the runtime hints are preferred in the resolution. You can provide hints for a maximum of 100 intents. You can provide a maximum of 100 slots.&lt;/p&gt; &lt;p&gt;Before you can use runtime hints with an existing bot, you must first rebuild the bot.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lexv2/latest/dg/using-hints.html\&quot;&gt;Using runtime hints to improve recognition of slot values&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAIRuntimeHints_H
#define OAIRuntimeHints_H

#include <QJsonObject>

#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRuntimeHints : public OAIObject {
public:
    OAIRuntimeHints();
    OAIRuntimeHints(QString json);
    ~OAIRuntimeHints() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap getSlotHints() const;
    void setSlotHints(const QMap &slot_hints);
    bool is_slot_hints_Set() const;
    bool is_slot_hints_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap m_slot_hints;
    bool m_slot_hints_isSet;
    bool m_slot_hints_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuntimeHints)

#endif // OAIRuntimeHints_H
