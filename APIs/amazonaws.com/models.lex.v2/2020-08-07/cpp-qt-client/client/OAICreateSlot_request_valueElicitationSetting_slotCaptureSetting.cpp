/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting() {
    this->initializeModel();
}

OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::~OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting() {}

void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::initializeModel() {

    m_capture_response_isSet = false;
    m_capture_response_isValid = false;

    m_capture_next_step_isSet = false;
    m_capture_next_step_isValid = false;

    m_capture_conditional_isSet = false;
    m_capture_conditional_isValid = false;

    m_failure_response_isSet = false;
    m_failure_response_isValid = false;

    m_failure_next_step_isSet = false;
    m_failure_next_step_isValid = false;

    m_failure_conditional_isSet = false;
    m_failure_conditional_isValid = false;

    m_code_hook_isSet = false;
    m_code_hook_isValid = false;

    m_elicitation_code_hook_isSet = false;
    m_elicitation_code_hook_isValid = false;
}

void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::fromJsonObject(QJsonObject json) {

    m_capture_response_isValid = ::OpenAPI::fromJsonValue(m_capture_response, json[QString("captureResponse")]);
    m_capture_response_isSet = !json[QString("captureResponse")].isNull() && m_capture_response_isValid;

    m_capture_next_step_isValid = ::OpenAPI::fromJsonValue(m_capture_next_step, json[QString("captureNextStep")]);
    m_capture_next_step_isSet = !json[QString("captureNextStep")].isNull() && m_capture_next_step_isValid;

    m_capture_conditional_isValid = ::OpenAPI::fromJsonValue(m_capture_conditional, json[QString("captureConditional")]);
    m_capture_conditional_isSet = !json[QString("captureConditional")].isNull() && m_capture_conditional_isValid;

    m_failure_response_isValid = ::OpenAPI::fromJsonValue(m_failure_response, json[QString("failureResponse")]);
    m_failure_response_isSet = !json[QString("failureResponse")].isNull() && m_failure_response_isValid;

    m_failure_next_step_isValid = ::OpenAPI::fromJsonValue(m_failure_next_step, json[QString("failureNextStep")]);
    m_failure_next_step_isSet = !json[QString("failureNextStep")].isNull() && m_failure_next_step_isValid;

    m_failure_conditional_isValid = ::OpenAPI::fromJsonValue(m_failure_conditional, json[QString("failureConditional")]);
    m_failure_conditional_isSet = !json[QString("failureConditional")].isNull() && m_failure_conditional_isValid;

    m_code_hook_isValid = ::OpenAPI::fromJsonValue(m_code_hook, json[QString("codeHook")]);
    m_code_hook_isSet = !json[QString("codeHook")].isNull() && m_code_hook_isValid;

    m_elicitation_code_hook_isValid = ::OpenAPI::fromJsonValue(m_elicitation_code_hook, json[QString("elicitationCodeHook")]);
    m_elicitation_code_hook_isSet = !json[QString("elicitationCodeHook")].isNull() && m_elicitation_code_hook_isValid;
}

QString OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_capture_response.isSet()) {
        obj.insert(QString("captureResponse"), ::OpenAPI::toJsonValue(m_capture_response));
    }
    if (m_capture_next_step.isSet()) {
        obj.insert(QString("captureNextStep"), ::OpenAPI::toJsonValue(m_capture_next_step));
    }
    if (m_capture_conditional.isSet()) {
        obj.insert(QString("captureConditional"), ::OpenAPI::toJsonValue(m_capture_conditional));
    }
    if (m_failure_response.isSet()) {
        obj.insert(QString("failureResponse"), ::OpenAPI::toJsonValue(m_failure_response));
    }
    if (m_failure_next_step.isSet()) {
        obj.insert(QString("failureNextStep"), ::OpenAPI::toJsonValue(m_failure_next_step));
    }
    if (m_failure_conditional.isSet()) {
        obj.insert(QString("failureConditional"), ::OpenAPI::toJsonValue(m_failure_conditional));
    }
    if (m_code_hook.isSet()) {
        obj.insert(QString("codeHook"), ::OpenAPI::toJsonValue(m_code_hook));
    }
    if (m_elicitation_code_hook.isSet()) {
        obj.insert(QString("elicitationCodeHook"), ::OpenAPI::toJsonValue(m_elicitation_code_hook));
    }
    return obj;
}

OAIResponseSpecification OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::getCaptureResponse() const {
    return m_capture_response;
}
void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::setCaptureResponse(const OAIResponseSpecification &capture_response) {
    m_capture_response = capture_response;
    m_capture_response_isSet = true;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_capture_response_Set() const{
    return m_capture_response_isSet;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_capture_response_Valid() const{
    return m_capture_response_isValid;
}

OAISlotCaptureSetting_captureNextStep OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::getCaptureNextStep() const {
    return m_capture_next_step;
}
void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::setCaptureNextStep(const OAISlotCaptureSetting_captureNextStep &capture_next_step) {
    m_capture_next_step = capture_next_step;
    m_capture_next_step_isSet = true;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_capture_next_step_Set() const{
    return m_capture_next_step_isSet;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_capture_next_step_Valid() const{
    return m_capture_next_step_isValid;
}

OAISlotCaptureSetting_captureConditional OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::getCaptureConditional() const {
    return m_capture_conditional;
}
void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::setCaptureConditional(const OAISlotCaptureSetting_captureConditional &capture_conditional) {
    m_capture_conditional = capture_conditional;
    m_capture_conditional_isSet = true;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_capture_conditional_Set() const{
    return m_capture_conditional_isSet;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_capture_conditional_Valid() const{
    return m_capture_conditional_isValid;
}

OAIResponseSpecification OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::getFailureResponse() const {
    return m_failure_response;
}
void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::setFailureResponse(const OAIResponseSpecification &failure_response) {
    m_failure_response = failure_response;
    m_failure_response_isSet = true;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_failure_response_Set() const{
    return m_failure_response_isSet;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_failure_response_Valid() const{
    return m_failure_response_isValid;
}

OAISlotCaptureSetting_failureNextStep OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::getFailureNextStep() const {
    return m_failure_next_step;
}
void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::setFailureNextStep(const OAISlotCaptureSetting_failureNextStep &failure_next_step) {
    m_failure_next_step = failure_next_step;
    m_failure_next_step_isSet = true;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_failure_next_step_Set() const{
    return m_failure_next_step_isSet;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_failure_next_step_Valid() const{
    return m_failure_next_step_isValid;
}

OAISlotCaptureSetting_failureConditional OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::getFailureConditional() const {
    return m_failure_conditional;
}
void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::setFailureConditional(const OAISlotCaptureSetting_failureConditional &failure_conditional) {
    m_failure_conditional = failure_conditional;
    m_failure_conditional_isSet = true;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_failure_conditional_Set() const{
    return m_failure_conditional_isSet;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_failure_conditional_Valid() const{
    return m_failure_conditional_isValid;
}

OAISlotCaptureSetting_codeHook OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::getCodeHook() const {
    return m_code_hook;
}
void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::setCodeHook(const OAISlotCaptureSetting_codeHook &code_hook) {
    m_code_hook = code_hook;
    m_code_hook_isSet = true;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_code_hook_Set() const{
    return m_code_hook_isSet;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_code_hook_Valid() const{
    return m_code_hook_isValid;
}

OAISlotCaptureSetting_elicitationCodeHook OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::getElicitationCodeHook() const {
    return m_elicitation_code_hook;
}
void OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::setElicitationCodeHook(const OAISlotCaptureSetting_elicitationCodeHook &elicitation_code_hook) {
    m_elicitation_code_hook = elicitation_code_hook;
    m_elicitation_code_hook_isSet = true;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_elicitation_code_hook_Set() const{
    return m_elicitation_code_hook_isSet;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::is_elicitation_code_hook_Valid() const{
    return m_elicitation_code_hook_isValid;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capture_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_capture_next_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_capture_conditional.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_next_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_conditional.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_hook.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_elicitation_code_hook.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateSlot_request_valueElicitationSetting_slotCaptureSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
