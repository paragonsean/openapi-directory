/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConversationEndState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConversationEndState::OAIConversationEndState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConversationEndState::OAIConversationEndState() {
    this->initializeModel();
}

OAIConversationEndState::~OAIConversationEndState() {}

void OAIConversationEndState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConversationEndState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConversationEndState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Success", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversationEndState::SUCCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failure", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversationEndState::FAILURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Dropped", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversationEndState::DROPPED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConversationEndState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIConversationEndState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConversationEndState::SUCCESS:
            val = "Success";
            break;
        case eOAIConversationEndState::FAILURE:
            val = "Failure";
            break;
        case eOAIConversationEndState::DROPPED:
            val = "Dropped";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConversationEndState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIConversationEndState::eOAIConversationEndState OAIConversationEndState::getValue() const {
    return m_value;
}

void OAIConversationEndState::setValue(const OAIConversationEndState::eOAIConversationEndState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConversationEndState::isSet() const {
    
    return m_value_isSet;
}

bool OAIConversationEndState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
