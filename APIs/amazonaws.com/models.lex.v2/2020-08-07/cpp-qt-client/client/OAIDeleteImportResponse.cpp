/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteImportResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteImportResponse::OAIDeleteImportResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteImportResponse::OAIDeleteImportResponse() {
    this->initializeModel();
}

OAIDeleteImportResponse::~OAIDeleteImportResponse() {}

void OAIDeleteImportResponse::initializeModel() {

    m_import_id_isSet = false;
    m_import_id_isValid = false;

    m_import_status_isSet = false;
    m_import_status_isValid = false;
}

void OAIDeleteImportResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteImportResponse::fromJsonObject(QJsonObject json) {

    m_import_id_isValid = ::OpenAPI::fromJsonValue(m_import_id, json[QString("importId")]);
    m_import_id_isSet = !json[QString("importId")].isNull() && m_import_id_isValid;

    m_import_status_isValid = ::OpenAPI::fromJsonValue(m_import_status, json[QString("importStatus")]);
    m_import_status_isSet = !json[QString("importStatus")].isNull() && m_import_status_isValid;
}

QString OAIDeleteImportResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteImportResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_import_id_isSet) {
        obj.insert(QString("importId"), ::OpenAPI::toJsonValue(m_import_id));
    }
    if (m_import_status.isSet()) {
        obj.insert(QString("importStatus"), ::OpenAPI::toJsonValue(m_import_status));
    }
    return obj;
}

QString OAIDeleteImportResponse::getImportId() const {
    return m_import_id;
}
void OAIDeleteImportResponse::setImportId(const QString &import_id) {
    m_import_id = import_id;
    m_import_id_isSet = true;
}

bool OAIDeleteImportResponse::is_import_id_Set() const{
    return m_import_id_isSet;
}

bool OAIDeleteImportResponse::is_import_id_Valid() const{
    return m_import_id_isValid;
}

OAIImportStatus OAIDeleteImportResponse::getImportStatus() const {
    return m_import_status;
}
void OAIDeleteImportResponse::setImportStatus(const OAIImportStatus &import_status) {
    m_import_status = import_status;
    m_import_status_isSet = true;
}

bool OAIDeleteImportResponse::is_import_status_Set() const{
    return m_import_status_isSet;
}

bool OAIDeleteImportResponse::is_import_status_Valid() const{
    return m_import_status_isValid;
}

bool OAIDeleteImportResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_import_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_import_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteImportResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
