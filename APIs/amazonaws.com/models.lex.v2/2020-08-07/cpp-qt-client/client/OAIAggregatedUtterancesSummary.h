/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAggregatedUtterancesSummary.h
 *
 * Provides summary information for aggregated utterances. The &lt;code&gt;ListAggregatedUtterances&lt;/code&gt; operations combines all instances of the same utterance into a single aggregated summary.
 */

#ifndef OAIAggregatedUtterancesSummary_H
#define OAIAggregatedUtterancesSummary_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAggregatedUtterancesSummary : public OAIObject {
public:
    OAIAggregatedUtterancesSummary();
    OAIAggregatedUtterancesSummary(QString json);
    ~OAIAggregatedUtterancesSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUtterance() const;
    void setUtterance(const QString &utterance);
    bool is_utterance_Set() const;
    bool is_utterance_Valid() const;

    qint32 getHitCount() const;
    void setHitCount(const qint32 &hit_count);
    bool is_hit_count_Set() const;
    bool is_hit_count_Valid() const;

    qint32 getMissedCount() const;
    void setMissedCount(const qint32 &missed_count);
    bool is_missed_count_Set() const;
    bool is_missed_count_Valid() const;

    QDateTime getUtteranceFirstRecordedInAggregationDuration() const;
    void setUtteranceFirstRecordedInAggregationDuration(const QDateTime &utterance_first_recorded_in_aggregation_duration);
    bool is_utterance_first_recorded_in_aggregation_duration_Set() const;
    bool is_utterance_first_recorded_in_aggregation_duration_Valid() const;

    QDateTime getUtteranceLastRecordedInAggregationDuration() const;
    void setUtteranceLastRecordedInAggregationDuration(const QDateTime &utterance_last_recorded_in_aggregation_duration);
    bool is_utterance_last_recorded_in_aggregation_duration_Set() const;
    bool is_utterance_last_recorded_in_aggregation_duration_Valid() const;

    bool getContainsDataFromDeletedResources() const;
    void setContainsDataFromDeletedResources(const bool &contains_data_from_deleted_resources);
    bool is_contains_data_from_deleted_resources_Set() const;
    bool is_contains_data_from_deleted_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_utterance;
    bool m_utterance_isSet;
    bool m_utterance_isValid;

    qint32 m_hit_count;
    bool m_hit_count_isSet;
    bool m_hit_count_isValid;

    qint32 m_missed_count;
    bool m_missed_count_isSet;
    bool m_missed_count_isValid;

    QDateTime m_utterance_first_recorded_in_aggregation_duration;
    bool m_utterance_first_recorded_in_aggregation_duration_isSet;
    bool m_utterance_first_recorded_in_aggregation_duration_isValid;

    QDateTime m_utterance_last_recorded_in_aggregation_duration;
    bool m_utterance_last_recorded_in_aggregation_duration_isSet;
    bool m_utterance_last_recorded_in_aggregation_duration_isValid;

    bool m_contains_data_from_deleted_resources;
    bool m_contains_data_from_deleted_resources_isSet;
    bool m_contains_data_from_deleted_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAggregatedUtterancesSummary)

#endif // OAIAggregatedUtterancesSummary_H
