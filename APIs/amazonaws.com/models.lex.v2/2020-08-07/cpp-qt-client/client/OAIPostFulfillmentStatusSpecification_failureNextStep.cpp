/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostFulfillmentStatusSpecification_failureNextStep.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostFulfillmentStatusSpecification_failureNextStep::OAIPostFulfillmentStatusSpecification_failureNextStep(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostFulfillmentStatusSpecification_failureNextStep::OAIPostFulfillmentStatusSpecification_failureNextStep() {
    this->initializeModel();
}

OAIPostFulfillmentStatusSpecification_failureNextStep::~OAIPostFulfillmentStatusSpecification_failureNextStep() {}

void OAIPostFulfillmentStatusSpecification_failureNextStep::initializeModel() {

    m_dialog_action_isSet = false;
    m_dialog_action_isValid = false;

    m_intent_isSet = false;
    m_intent_isValid = false;

    m_session_attributes_isSet = false;
    m_session_attributes_isValid = false;
}

void OAIPostFulfillmentStatusSpecification_failureNextStep::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostFulfillmentStatusSpecification_failureNextStep::fromJsonObject(QJsonObject json) {

    m_dialog_action_isValid = ::OpenAPI::fromJsonValue(m_dialog_action, json[QString("dialogAction")]);
    m_dialog_action_isSet = !json[QString("dialogAction")].isNull() && m_dialog_action_isValid;

    m_intent_isValid = ::OpenAPI::fromJsonValue(m_intent, json[QString("intent")]);
    m_intent_isSet = !json[QString("intent")].isNull() && m_intent_isValid;

    m_session_attributes_isValid = ::OpenAPI::fromJsonValue(m_session_attributes, json[QString("sessionAttributes")]);
    m_session_attributes_isSet = !json[QString("sessionAttributes")].isNull() && m_session_attributes_isValid;
}

QString OAIPostFulfillmentStatusSpecification_failureNextStep::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostFulfillmentStatusSpecification_failureNextStep::asJsonObject() const {
    QJsonObject obj;
    if (m_dialog_action.isSet()) {
        obj.insert(QString("dialogAction"), ::OpenAPI::toJsonValue(m_dialog_action));
    }
    if (m_intent.isSet()) {
        obj.insert(QString("intent"), ::OpenAPI::toJsonValue(m_intent));
    }
    if (m_session_attributes.isSet()) {
        obj.insert(QString("sessionAttributes"), ::OpenAPI::toJsonValue(m_session_attributes));
    }
    return obj;
}

OAIDialogAction OAIPostFulfillmentStatusSpecification_failureNextStep::getDialogAction() const {
    return m_dialog_action;
}
void OAIPostFulfillmentStatusSpecification_failureNextStep::setDialogAction(const OAIDialogAction &dialog_action) {
    m_dialog_action = dialog_action;
    m_dialog_action_isSet = true;
}

bool OAIPostFulfillmentStatusSpecification_failureNextStep::is_dialog_action_Set() const{
    return m_dialog_action_isSet;
}

bool OAIPostFulfillmentStatusSpecification_failureNextStep::is_dialog_action_Valid() const{
    return m_dialog_action_isValid;
}

OAIIntentOverride OAIPostFulfillmentStatusSpecification_failureNextStep::getIntent() const {
    return m_intent;
}
void OAIPostFulfillmentStatusSpecification_failureNextStep::setIntent(const OAIIntentOverride &intent) {
    m_intent = intent;
    m_intent_isSet = true;
}

bool OAIPostFulfillmentStatusSpecification_failureNextStep::is_intent_Set() const{
    return m_intent_isSet;
}

bool OAIPostFulfillmentStatusSpecification_failureNextStep::is_intent_Valid() const{
    return m_intent_isValid;
}

QMap OAIPostFulfillmentStatusSpecification_failureNextStep::getSessionAttributes() const {
    return m_session_attributes;
}
void OAIPostFulfillmentStatusSpecification_failureNextStep::setSessionAttributes(const QMap &session_attributes) {
    m_session_attributes = session_attributes;
    m_session_attributes_isSet = true;
}

bool OAIPostFulfillmentStatusSpecification_failureNextStep::is_session_attributes_Set() const{
    return m_session_attributes_isSet;
}

bool OAIPostFulfillmentStatusSpecification_failureNextStep::is_session_attributes_Valid() const{
    return m_session_attributes_isValid;
}

bool OAIPostFulfillmentStatusSpecification_failureNextStep::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dialog_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_intent.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostFulfillmentStatusSpecification_failureNextStep::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
