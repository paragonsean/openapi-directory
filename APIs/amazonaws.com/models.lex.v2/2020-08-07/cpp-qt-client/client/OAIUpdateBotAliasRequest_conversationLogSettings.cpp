/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateBotAliasRequest_conversationLogSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateBotAliasRequest_conversationLogSettings::OAIUpdateBotAliasRequest_conversationLogSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateBotAliasRequest_conversationLogSettings::OAIUpdateBotAliasRequest_conversationLogSettings() {
    this->initializeModel();
}

OAIUpdateBotAliasRequest_conversationLogSettings::~OAIUpdateBotAliasRequest_conversationLogSettings() {}

void OAIUpdateBotAliasRequest_conversationLogSettings::initializeModel() {

    m_text_log_settings_isSet = false;
    m_text_log_settings_isValid = false;

    m_audio_log_settings_isSet = false;
    m_audio_log_settings_isValid = false;
}

void OAIUpdateBotAliasRequest_conversationLogSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateBotAliasRequest_conversationLogSettings::fromJsonObject(QJsonObject json) {

    m_text_log_settings_isValid = ::OpenAPI::fromJsonValue(m_text_log_settings, json[QString("textLogSettings")]);
    m_text_log_settings_isSet = !json[QString("textLogSettings")].isNull() && m_text_log_settings_isValid;

    m_audio_log_settings_isValid = ::OpenAPI::fromJsonValue(m_audio_log_settings, json[QString("audioLogSettings")]);
    m_audio_log_settings_isSet = !json[QString("audioLogSettings")].isNull() && m_audio_log_settings_isValid;
}

QString OAIUpdateBotAliasRequest_conversationLogSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateBotAliasRequest_conversationLogSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_text_log_settings.isSet()) {
        obj.insert(QString("textLogSettings"), ::OpenAPI::toJsonValue(m_text_log_settings));
    }
    if (m_audio_log_settings.isSet()) {
        obj.insert(QString("audioLogSettings"), ::OpenAPI::toJsonValue(m_audio_log_settings));
    }
    return obj;
}

QList OAIUpdateBotAliasRequest_conversationLogSettings::getTextLogSettings() const {
    return m_text_log_settings;
}
void OAIUpdateBotAliasRequest_conversationLogSettings::setTextLogSettings(const QList &text_log_settings) {
    m_text_log_settings = text_log_settings;
    m_text_log_settings_isSet = true;
}

bool OAIUpdateBotAliasRequest_conversationLogSettings::is_text_log_settings_Set() const{
    return m_text_log_settings_isSet;
}

bool OAIUpdateBotAliasRequest_conversationLogSettings::is_text_log_settings_Valid() const{
    return m_text_log_settings_isValid;
}

QList OAIUpdateBotAliasRequest_conversationLogSettings::getAudioLogSettings() const {
    return m_audio_log_settings;
}
void OAIUpdateBotAliasRequest_conversationLogSettings::setAudioLogSettings(const QList &audio_log_settings) {
    m_audio_log_settings = audio_log_settings;
    m_audio_log_settings_isSet = true;
}

bool OAIUpdateBotAliasRequest_conversationLogSettings::is_audio_log_settings_Set() const{
    return m_audio_log_settings_isSet;
}

bool OAIUpdateBotAliasRequest_conversationLogSettings::is_audio_log_settings_Valid() const{
    return m_audio_log_settings_isValid;
}

bool OAIUpdateBotAliasRequest_conversationLogSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_text_log_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_audio_log_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateBotAliasRequest_conversationLogSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
