/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserTurnInputSpecification_utteranceInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserTurnInputSpecification_utteranceInput::OAIUserTurnInputSpecification_utteranceInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserTurnInputSpecification_utteranceInput::OAIUserTurnInputSpecification_utteranceInput() {
    this->initializeModel();
}

OAIUserTurnInputSpecification_utteranceInput::~OAIUserTurnInputSpecification_utteranceInput() {}

void OAIUserTurnInputSpecification_utteranceInput::initializeModel() {

    m_text_input_isSet = false;
    m_text_input_isValid = false;

    m_audio_input_isSet = false;
    m_audio_input_isValid = false;
}

void OAIUserTurnInputSpecification_utteranceInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserTurnInputSpecification_utteranceInput::fromJsonObject(QJsonObject json) {

    m_text_input_isValid = ::OpenAPI::fromJsonValue(m_text_input, json[QString("textInput")]);
    m_text_input_isSet = !json[QString("textInput")].isNull() && m_text_input_isValid;

    m_audio_input_isValid = ::OpenAPI::fromJsonValue(m_audio_input, json[QString("audioInput")]);
    m_audio_input_isSet = !json[QString("audioInput")].isNull() && m_audio_input_isValid;
}

QString OAIUserTurnInputSpecification_utteranceInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserTurnInputSpecification_utteranceInput::asJsonObject() const {
    QJsonObject obj;
    if (m_text_input_isSet) {
        obj.insert(QString("textInput"), ::OpenAPI::toJsonValue(m_text_input));
    }
    if (m_audio_input.isSet()) {
        obj.insert(QString("audioInput"), ::OpenAPI::toJsonValue(m_audio_input));
    }
    return obj;
}

QString OAIUserTurnInputSpecification_utteranceInput::getTextInput() const {
    return m_text_input;
}
void OAIUserTurnInputSpecification_utteranceInput::setTextInput(const QString &text_input) {
    m_text_input = text_input;
    m_text_input_isSet = true;
}

bool OAIUserTurnInputSpecification_utteranceInput::is_text_input_Set() const{
    return m_text_input_isSet;
}

bool OAIUserTurnInputSpecification_utteranceInput::is_text_input_Valid() const{
    return m_text_input_isValid;
}

OAIUtteranceInputSpecification_audioInput OAIUserTurnInputSpecification_utteranceInput::getAudioInput() const {
    return m_audio_input;
}
void OAIUserTurnInputSpecification_utteranceInput::setAudioInput(const OAIUtteranceInputSpecification_audioInput &audio_input) {
    m_audio_input = audio_input;
    m_audio_input_isSet = true;
}

bool OAIUserTurnInputSpecification_utteranceInput::is_audio_input_Set() const{
    return m_audio_input_isSet;
}

bool OAIUserTurnInputSpecification_utteranceInput::is_audio_input_Valid() const{
    return m_audio_input_isValid;
}

bool OAIUserTurnInputSpecification_utteranceInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_text_input_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_audio_input.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserTurnInputSpecification_utteranceInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
