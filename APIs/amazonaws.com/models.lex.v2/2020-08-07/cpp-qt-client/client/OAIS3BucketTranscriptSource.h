/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3BucketTranscriptSource.h
 *
 * The object representing the Amazon S3 bucket containing the transcript, as well as the associated metadata.
 */

#ifndef OAIS3BucketTranscriptSource_H
#define OAIS3BucketTranscriptSource_H

#include <QJsonObject>

#include "OAIS3BucketTranscriptSource_pathFormat.h"
#include "OAIS3BucketTranscriptSource_transcriptFilter.h"
#include "OAITranscriptFormat.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3BucketTranscriptSource_pathFormat;
class OAIS3BucketTranscriptSource_transcriptFilter;

class OAIS3BucketTranscriptSource : public OAIObject {
public:
    OAIS3BucketTranscriptSource();
    OAIS3BucketTranscriptSource(QString json);
    ~OAIS3BucketTranscriptSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS3BucketName() const;
    void setS3BucketName(const QString &s3_bucket_name);
    bool is_s3_bucket_name_Set() const;
    bool is_s3_bucket_name_Valid() const;

    OAIS3BucketTranscriptSource_pathFormat getPathFormat() const;
    void setPathFormat(const OAIS3BucketTranscriptSource_pathFormat &path_format);
    bool is_path_format_Set() const;
    bool is_path_format_Valid() const;

    OAITranscriptFormat getTranscriptFormat() const;
    void setTranscriptFormat(const OAITranscriptFormat &transcript_format);
    bool is_transcript_format_Set() const;
    bool is_transcript_format_Valid() const;

    OAIS3BucketTranscriptSource_transcriptFilter getTranscriptFilter() const;
    void setTranscriptFilter(const OAIS3BucketTranscriptSource_transcriptFilter &transcript_filter);
    bool is_transcript_filter_Set() const;
    bool is_transcript_filter_Valid() const;

    QString getKmsKeyArn() const;
    void setKmsKeyArn(const QString &kms_key_arn);
    bool is_kms_key_arn_Set() const;
    bool is_kms_key_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s3_bucket_name;
    bool m_s3_bucket_name_isSet;
    bool m_s3_bucket_name_isValid;

    OAIS3BucketTranscriptSource_pathFormat m_path_format;
    bool m_path_format_isSet;
    bool m_path_format_isValid;

    OAITranscriptFormat m_transcript_format;
    bool m_transcript_format_isSet;
    bool m_transcript_format_isValid;

    OAIS3BucketTranscriptSource_transcriptFilter m_transcript_filter;
    bool m_transcript_filter_isSet;
    bool m_transcript_filter_isValid;

    QString m_kms_key_arn;
    bool m_kms_key_arn_isSet;
    bool m_kms_key_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3BucketTranscriptSource)

#endif // OAIS3BucketTranscriptSource_H
