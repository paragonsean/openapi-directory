/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartImport_request_resourceSpecification.h
 *
 * Provides information about the bot or bot locale that you want to import. You can specify the &lt;code&gt;botImportSpecification&lt;/code&gt; or the &lt;code&gt;botLocaleImportSpecification&lt;/code&gt;, but not both.
 */

#ifndef OAIStartImport_request_resourceSpecification_H
#define OAIStartImport_request_resourceSpecification_H

#include <QJsonObject>

#include "OAICustomVocabularyImportSpecification.h"
#include "OAIStartImport_request_resourceSpecification_botImportSpecification.h"
#include "OAIStartImport_request_resourceSpecification_botLocaleImportSpecification.h"
#include "OAIStartImport_request_resourceSpecification_testSetImportResourceSpecification.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartImport_request_resourceSpecification_botImportSpecification;
class OAIStartImport_request_resourceSpecification_botLocaleImportSpecification;
class OAICustomVocabularyImportSpecification;
class OAIStartImport_request_resourceSpecification_testSetImportResourceSpecification;

class OAIStartImport_request_resourceSpecification : public OAIObject {
public:
    OAIStartImport_request_resourceSpecification();
    OAIStartImport_request_resourceSpecification(QString json);
    ~OAIStartImport_request_resourceSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStartImport_request_resourceSpecification_botImportSpecification getBotImportSpecification() const;
    void setBotImportSpecification(const OAIStartImport_request_resourceSpecification_botImportSpecification &bot_import_specification);
    bool is_bot_import_specification_Set() const;
    bool is_bot_import_specification_Valid() const;

    OAIStartImport_request_resourceSpecification_botLocaleImportSpecification getBotLocaleImportSpecification() const;
    void setBotLocaleImportSpecification(const OAIStartImport_request_resourceSpecification_botLocaleImportSpecification &bot_locale_import_specification);
    bool is_bot_locale_import_specification_Set() const;
    bool is_bot_locale_import_specification_Valid() const;

    OAICustomVocabularyImportSpecification getCustomVocabularyImportSpecification() const;
    void setCustomVocabularyImportSpecification(const OAICustomVocabularyImportSpecification &custom_vocabulary_import_specification);
    bool is_custom_vocabulary_import_specification_Set() const;
    bool is_custom_vocabulary_import_specification_Valid() const;

    OAIStartImport_request_resourceSpecification_testSetImportResourceSpecification getTestSetImportResourceSpecification() const;
    void setTestSetImportResourceSpecification(const OAIStartImport_request_resourceSpecification_testSetImportResourceSpecification &test_set_import_resource_specification);
    bool is_test_set_import_resource_specification_Set() const;
    bool is_test_set_import_resource_specification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStartImport_request_resourceSpecification_botImportSpecification m_bot_import_specification;
    bool m_bot_import_specification_isSet;
    bool m_bot_import_specification_isValid;

    OAIStartImport_request_resourceSpecification_botLocaleImportSpecification m_bot_locale_import_specification;
    bool m_bot_locale_import_specification_isSet;
    bool m_bot_locale_import_specification_isValid;

    OAICustomVocabularyImportSpecification m_custom_vocabulary_import_specification;
    bool m_custom_vocabulary_import_specification_isSet;
    bool m_custom_vocabulary_import_specification_isValid;

    OAIStartImport_request_resourceSpecification_testSetImportResourceSpecification m_test_set_import_resource_specification;
    bool m_test_set_import_resource_specification_isSet;
    bool m_test_set_import_resource_specification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartImport_request_resourceSpecification)

#endif // OAIStartImport_request_resourceSpecification_H
