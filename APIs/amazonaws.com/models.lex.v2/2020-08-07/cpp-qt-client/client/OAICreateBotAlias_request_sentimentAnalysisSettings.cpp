/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateBotAlias_request_sentimentAnalysisSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateBotAlias_request_sentimentAnalysisSettings::OAICreateBotAlias_request_sentimentAnalysisSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateBotAlias_request_sentimentAnalysisSettings::OAICreateBotAlias_request_sentimentAnalysisSettings() {
    this->initializeModel();
}

OAICreateBotAlias_request_sentimentAnalysisSettings::~OAICreateBotAlias_request_sentimentAnalysisSettings() {}

void OAICreateBotAlias_request_sentimentAnalysisSettings::initializeModel() {

    m_detect_sentiment_isSet = false;
    m_detect_sentiment_isValid = false;
}

void OAICreateBotAlias_request_sentimentAnalysisSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateBotAlias_request_sentimentAnalysisSettings::fromJsonObject(QJsonObject json) {

    m_detect_sentiment_isValid = ::OpenAPI::fromJsonValue(m_detect_sentiment, json[QString("detectSentiment")]);
    m_detect_sentiment_isSet = !json[QString("detectSentiment")].isNull() && m_detect_sentiment_isValid;
}

QString OAICreateBotAlias_request_sentimentAnalysisSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateBotAlias_request_sentimentAnalysisSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_detect_sentiment_isSet) {
        obj.insert(QString("detectSentiment"), ::OpenAPI::toJsonValue(m_detect_sentiment));
    }
    return obj;
}

bool OAICreateBotAlias_request_sentimentAnalysisSettings::getDetectSentiment() const {
    return m_detect_sentiment;
}
void OAICreateBotAlias_request_sentimentAnalysisSettings::setDetectSentiment(const bool &detect_sentiment) {
    m_detect_sentiment = detect_sentiment;
    m_detect_sentiment_isSet = true;
}

bool OAICreateBotAlias_request_sentimentAnalysisSettings::is_detect_sentiment_Set() const{
    return m_detect_sentiment_isSet;
}

bool OAICreateBotAlias_request_sentimentAnalysisSettings::is_detect_sentiment_Valid() const{
    return m_detect_sentiment_isValid;
}

bool OAICreateBotAlias_request_sentimentAnalysisSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_detect_sentiment_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateBotAlias_request_sentimentAnalysisSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
