/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoiceSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoiceSettings::OAIVoiceSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoiceSettings::OAIVoiceSettings() {
    this->initializeModel();
}

OAIVoiceSettings::~OAIVoiceSettings() {}

void OAIVoiceSettings::initializeModel() {

    m_voice_id_isSet = false;
    m_voice_id_isValid = false;

    m_engine_isSet = false;
    m_engine_isValid = false;
}

void OAIVoiceSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVoiceSettings::fromJsonObject(QJsonObject json) {

    m_voice_id_isValid = ::OpenAPI::fromJsonValue(m_voice_id, json[QString("voiceId")]);
    m_voice_id_isSet = !json[QString("voiceId")].isNull() && m_voice_id_isValid;

    m_engine_isValid = ::OpenAPI::fromJsonValue(m_engine, json[QString("engine")]);
    m_engine_isSet = !json[QString("engine")].isNull() && m_engine_isValid;
}

QString OAIVoiceSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVoiceSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_voice_id_isSet) {
        obj.insert(QString("voiceId"), ::OpenAPI::toJsonValue(m_voice_id));
    }
    if (m_engine.isSet()) {
        obj.insert(QString("engine"), ::OpenAPI::toJsonValue(m_engine));
    }
    return obj;
}

QString OAIVoiceSettings::getVoiceId() const {
    return m_voice_id;
}
void OAIVoiceSettings::setVoiceId(const QString &voice_id) {
    m_voice_id = voice_id;
    m_voice_id_isSet = true;
}

bool OAIVoiceSettings::is_voice_id_Set() const{
    return m_voice_id_isSet;
}

bool OAIVoiceSettings::is_voice_id_Valid() const{
    return m_voice_id_isValid;
}

OAIVoiceEngine OAIVoiceSettings::getEngine() const {
    return m_engine;
}
void OAIVoiceSettings::setEngine(const OAIVoiceEngine &engine) {
    m_engine = engine;
    m_engine_isSet = true;
}

bool OAIVoiceSettings::is_engine_Set() const{
    return m_engine_isSet;
}

bool OAIVoiceSettings::is_engine_Valid() const{
    return m_engine_isValid;
}

bool OAIVoiceSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_voice_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_engine.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVoiceSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_voice_id_isValid && true;
}

} // namespace OpenAPI
