/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITextInputSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITextInputSpecification::OAITextInputSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITextInputSpecification::OAITextInputSpecification() {
    this->initializeModel();
}

OAITextInputSpecification::~OAITextInputSpecification() {}

void OAITextInputSpecification::initializeModel() {

    m_start_timeout_ms_isSet = false;
    m_start_timeout_ms_isValid = false;
}

void OAITextInputSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITextInputSpecification::fromJsonObject(QJsonObject json) {

    m_start_timeout_ms_isValid = ::OpenAPI::fromJsonValue(m_start_timeout_ms, json[QString("startTimeoutMs")]);
    m_start_timeout_ms_isSet = !json[QString("startTimeoutMs")].isNull() && m_start_timeout_ms_isValid;
}

QString OAITextInputSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITextInputSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_start_timeout_ms_isSet) {
        obj.insert(QString("startTimeoutMs"), ::OpenAPI::toJsonValue(m_start_timeout_ms));
    }
    return obj;
}

qint32 OAITextInputSpecification::getStartTimeoutMs() const {
    return m_start_timeout_ms;
}
void OAITextInputSpecification::setStartTimeoutMs(const qint32 &start_timeout_ms) {
    m_start_timeout_ms = start_timeout_ms;
    m_start_timeout_ms_isSet = true;
}

bool OAITextInputSpecification::is_start_timeout_ms_Set() const{
    return m_start_timeout_ms_isSet;
}

bool OAITextInputSpecification::is_start_timeout_ms_Valid() const{
    return m_start_timeout_ms_isValid;
}

bool OAITextInputSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_start_timeout_ms_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITextInputSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_start_timeout_ms_isValid && true;
}

} // namespace OpenAPI
