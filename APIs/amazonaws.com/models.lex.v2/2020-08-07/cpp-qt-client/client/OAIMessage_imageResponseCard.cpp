/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessage_imageResponseCard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessage_imageResponseCard::OAIMessage_imageResponseCard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessage_imageResponseCard::OAIMessage_imageResponseCard() {
    this->initializeModel();
}

OAIMessage_imageResponseCard::~OAIMessage_imageResponseCard() {}

void OAIMessage_imageResponseCard::initializeModel() {

    m_title_isSet = false;
    m_title_isValid = false;

    m_subtitle_isSet = false;
    m_subtitle_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;

    m_buttons_isSet = false;
    m_buttons_isValid = false;
}

void OAIMessage_imageResponseCard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessage_imageResponseCard::fromJsonObject(QJsonObject json) {

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_subtitle_isValid = ::OpenAPI::fromJsonValue(m_subtitle, json[QString("subtitle")]);
    m_subtitle_isSet = !json[QString("subtitle")].isNull() && m_subtitle_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("imageUrl")]);
    m_image_url_isSet = !json[QString("imageUrl")].isNull() && m_image_url_isValid;

    m_buttons_isValid = ::OpenAPI::fromJsonValue(m_buttons, json[QString("buttons")]);
    m_buttons_isSet = !json[QString("buttons")].isNull() && m_buttons_isValid;
}

QString OAIMessage_imageResponseCard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessage_imageResponseCard::asJsonObject() const {
    QJsonObject obj;
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_subtitle_isSet) {
        obj.insert(QString("subtitle"), ::OpenAPI::toJsonValue(m_subtitle));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("imageUrl"), ::OpenAPI::toJsonValue(m_image_url));
    }
    if (m_buttons.isSet()) {
        obj.insert(QString("buttons"), ::OpenAPI::toJsonValue(m_buttons));
    }
    return obj;
}

QString OAIMessage_imageResponseCard::getTitle() const {
    return m_title;
}
void OAIMessage_imageResponseCard::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIMessage_imageResponseCard::is_title_Set() const{
    return m_title_isSet;
}

bool OAIMessage_imageResponseCard::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIMessage_imageResponseCard::getSubtitle() const {
    return m_subtitle;
}
void OAIMessage_imageResponseCard::setSubtitle(const QString &subtitle) {
    m_subtitle = subtitle;
    m_subtitle_isSet = true;
}

bool OAIMessage_imageResponseCard::is_subtitle_Set() const{
    return m_subtitle_isSet;
}

bool OAIMessage_imageResponseCard::is_subtitle_Valid() const{
    return m_subtitle_isValid;
}

QString OAIMessage_imageResponseCard::getImageUrl() const {
    return m_image_url;
}
void OAIMessage_imageResponseCard::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIMessage_imageResponseCard::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIMessage_imageResponseCard::is_image_url_Valid() const{
    return m_image_url_isValid;
}

QList OAIMessage_imageResponseCard::getButtons() const {
    return m_buttons;
}
void OAIMessage_imageResponseCard::setButtons(const QList &buttons) {
    m_buttons = buttons;
    m_buttons_isSet = true;
}

bool OAIMessage_imageResponseCard::is_buttons_Set() const{
    return m_buttons_isSet;
}

bool OAIMessage_imageResponseCard::is_buttons_Valid() const{
    return m_buttons_isValid;
}

bool OAIMessage_imageResponseCard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtitle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_buttons.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessage_imageResponseCard::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_title_isValid && true;
}

} // namespace OpenAPI
