/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateBotRequest.h
 *
 * 
 */

#ifndef OAIUpdateBotRequest_H
#define OAIUpdateBotRequest_H

#include <QJsonObject>

#include "OAIBotType.h"
#include "OAICreateBotRequest_dataPrivacy.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateBotRequest_dataPrivacy;

class OAIUpdateBotRequest : public OAIObject {
public:
    OAIUpdateBotRequest();
    OAIUpdateBotRequest(QString json);
    ~OAIUpdateBotRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBotName() const;
    void setBotName(const QString &bot_name);
    bool is_bot_name_Set() const;
    bool is_bot_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAICreateBotRequest_dataPrivacy getDataPrivacy() const;
    void setDataPrivacy(const OAICreateBotRequest_dataPrivacy &data_privacy);
    bool is_data_privacy_Set() const;
    bool is_data_privacy_Valid() const;

    qint32 getIdleSessionTtlinSeconds() const;
    void setIdleSessionTtlinSeconds(const qint32 &idle_session_ttlin_seconds);
    bool is_idle_session_ttlin_seconds_Set() const;
    bool is_idle_session_ttlin_seconds_Valid() const;

    OAIBotType getBotType() const;
    void setBotType(const OAIBotType &bot_type);
    bool is_bot_type_Set() const;
    bool is_bot_type_Valid() const;

    QList getBotMembers() const;
    void setBotMembers(const QList &bot_members);
    bool is_bot_members_Set() const;
    bool is_bot_members_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bot_name;
    bool m_bot_name_isSet;
    bool m_bot_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAICreateBotRequest_dataPrivacy m_data_privacy;
    bool m_data_privacy_isSet;
    bool m_data_privacy_isValid;

    qint32 m_idle_session_ttlin_seconds;
    bool m_idle_session_ttlin_seconds_isSet;
    bool m_idle_session_ttlin_seconds_isValid;

    OAIBotType m_bot_type;
    bool m_bot_type_isSet;
    bool m_bot_type_isValid;

    QList m_bot_members;
    bool m_bot_members_isSet;
    bool m_bot_members_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateBotRequest)

#endif // OAIUpdateBotRequest_H
