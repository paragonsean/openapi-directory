/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateSlotResponse_subSlotSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateSlotResponse_subSlotSetting::OAICreateSlotResponse_subSlotSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateSlotResponse_subSlotSetting::OAICreateSlotResponse_subSlotSetting() {
    this->initializeModel();
}

OAICreateSlotResponse_subSlotSetting::~OAICreateSlotResponse_subSlotSetting() {}

void OAICreateSlotResponse_subSlotSetting::initializeModel() {

    m_expression_isSet = false;
    m_expression_isValid = false;

    m_slot_specifications_isSet = false;
    m_slot_specifications_isValid = false;
}

void OAICreateSlotResponse_subSlotSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateSlotResponse_subSlotSetting::fromJsonObject(QJsonObject json) {

    m_expression_isValid = ::OpenAPI::fromJsonValue(m_expression, json[QString("expression")]);
    m_expression_isSet = !json[QString("expression")].isNull() && m_expression_isValid;

    m_slot_specifications_isValid = ::OpenAPI::fromJsonValue(m_slot_specifications, json[QString("slotSpecifications")]);
    m_slot_specifications_isSet = !json[QString("slotSpecifications")].isNull() && m_slot_specifications_isValid;
}

QString OAICreateSlotResponse_subSlotSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateSlotResponse_subSlotSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_expression_isSet) {
        obj.insert(QString("expression"), ::OpenAPI::toJsonValue(m_expression));
    }
    if (m_slot_specifications.isSet()) {
        obj.insert(QString("slotSpecifications"), ::OpenAPI::toJsonValue(m_slot_specifications));
    }
    return obj;
}

QString OAICreateSlotResponse_subSlotSetting::getExpression() const {
    return m_expression;
}
void OAICreateSlotResponse_subSlotSetting::setExpression(const QString &expression) {
    m_expression = expression;
    m_expression_isSet = true;
}

bool OAICreateSlotResponse_subSlotSetting::is_expression_Set() const{
    return m_expression_isSet;
}

bool OAICreateSlotResponse_subSlotSetting::is_expression_Valid() const{
    return m_expression_isValid;
}

QMap OAICreateSlotResponse_subSlotSetting::getSlotSpecifications() const {
    return m_slot_specifications;
}
void OAICreateSlotResponse_subSlotSetting::setSlotSpecifications(const QMap &slot_specifications) {
    m_slot_specifications = slot_specifications;
    m_slot_specifications_isSet = true;
}

bool OAICreateSlotResponse_subSlotSetting::is_slot_specifications_Set() const{
    return m_slot_specifications_isSet;
}

bool OAICreateSlotResponse_subSlotSetting::is_slot_specifications_Valid() const{
    return m_slot_specifications_isValid;
}

bool OAICreateSlotResponse_subSlotSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expression_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slot_specifications.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateSlotResponse_subSlotSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
