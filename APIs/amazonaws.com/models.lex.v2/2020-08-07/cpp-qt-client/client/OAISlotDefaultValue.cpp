/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISlotDefaultValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISlotDefaultValue::OAISlotDefaultValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISlotDefaultValue::OAISlotDefaultValue() {
    this->initializeModel();
}

OAISlotDefaultValue::~OAISlotDefaultValue() {}

void OAISlotDefaultValue::initializeModel() {

    m_default_value_isSet = false;
    m_default_value_isValid = false;
}

void OAISlotDefaultValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISlotDefaultValue::fromJsonObject(QJsonObject json) {

    m_default_value_isValid = ::OpenAPI::fromJsonValue(m_default_value, json[QString("defaultValue")]);
    m_default_value_isSet = !json[QString("defaultValue")].isNull() && m_default_value_isValid;
}

QString OAISlotDefaultValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISlotDefaultValue::asJsonObject() const {
    QJsonObject obj;
    if (m_default_value_isSet) {
        obj.insert(QString("defaultValue"), ::OpenAPI::toJsonValue(m_default_value));
    }
    return obj;
}

QString OAISlotDefaultValue::getDefaultValue() const {
    return m_default_value;
}
void OAISlotDefaultValue::setDefaultValue(const QString &default_value) {
    m_default_value = default_value;
    m_default_value_isSet = true;
}

bool OAISlotDefaultValue::is_default_value_Set() const{
    return m_default_value_isSet;
}

bool OAISlotDefaultValue::is_default_value_Valid() const{
    return m_default_value_isValid;
}

bool OAISlotDefaultValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISlotDefaultValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_default_value_isValid && true;
}

} // namespace OpenAPI
