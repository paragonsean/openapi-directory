/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISlotSummary_valueElicitationPromptSpecification.h
 *
 * 
 */

#ifndef OAISlotSummary_valueElicitationPromptSpecification_H
#define OAISlotSummary_valueElicitationPromptSpecification_H

#include <QJsonObject>

#include "OAIMessageSelectionStrategy.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISlotSummary_valueElicitationPromptSpecification : public OAIObject {
public:
    OAISlotSummary_valueElicitationPromptSpecification();
    OAISlotSummary_valueElicitationPromptSpecification(QString json);
    ~OAISlotSummary_valueElicitationPromptSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getMessageGroups() const;
    void setMessageGroups(const QList &message_groups);
    bool is_message_groups_Set() const;
    bool is_message_groups_Valid() const;

    qint32 getMaxRetries() const;
    void setMaxRetries(const qint32 &max_retries);
    bool is_max_retries_Set() const;
    bool is_max_retries_Valid() const;

    bool getAllowInterrupt() const;
    void setAllowInterrupt(const bool &allow_interrupt);
    bool is_allow_interrupt_Set() const;
    bool is_allow_interrupt_Valid() const;

    OAIMessageSelectionStrategy getMessageSelectionStrategy() const;
    void setMessageSelectionStrategy(const OAIMessageSelectionStrategy &message_selection_strategy);
    bool is_message_selection_strategy_Set() const;
    bool is_message_selection_strategy_Valid() const;

    QMap getPromptAttemptsSpecification() const;
    void setPromptAttemptsSpecification(const QMap &prompt_attempts_specification);
    bool is_prompt_attempts_specification_Set() const;
    bool is_prompt_attempts_specification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_message_groups;
    bool m_message_groups_isSet;
    bool m_message_groups_isValid;

    qint32 m_max_retries;
    bool m_max_retries_isSet;
    bool m_max_retries_isValid;

    bool m_allow_interrupt;
    bool m_allow_interrupt_isSet;
    bool m_allow_interrupt_isValid;

    OAIMessageSelectionStrategy m_message_selection_strategy;
    bool m_message_selection_strategy_isSet;
    bool m_message_selection_strategy_isValid;

    QMap m_prompt_attempts_specification;
    bool m_prompt_attempts_specification_isSet;
    bool m_prompt_attempts_specification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISlotSummary_valueElicitationPromptSpecification)

#endif // OAISlotSummary_valueElicitationPromptSpecification_H
