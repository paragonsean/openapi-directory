/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeIntentResponse_fulfillmentCodeHook.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeIntentResponse_fulfillmentCodeHook::OAIDescribeIntentResponse_fulfillmentCodeHook(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeIntentResponse_fulfillmentCodeHook::OAIDescribeIntentResponse_fulfillmentCodeHook() {
    this->initializeModel();
}

OAIDescribeIntentResponse_fulfillmentCodeHook::~OAIDescribeIntentResponse_fulfillmentCodeHook() {}

void OAIDescribeIntentResponse_fulfillmentCodeHook::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_post_fulfillment_status_specification_isSet = false;
    m_post_fulfillment_status_specification_isValid = false;

    m_fulfillment_updates_specification_isSet = false;
    m_fulfillment_updates_specification_isValid = false;

    m_active_isSet = false;
    m_active_isValid = false;
}

void OAIDescribeIntentResponse_fulfillmentCodeHook::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeIntentResponse_fulfillmentCodeHook::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_post_fulfillment_status_specification_isValid = ::OpenAPI::fromJsonValue(m_post_fulfillment_status_specification, json[QString("postFulfillmentStatusSpecification")]);
    m_post_fulfillment_status_specification_isSet = !json[QString("postFulfillmentStatusSpecification")].isNull() && m_post_fulfillment_status_specification_isValid;

    m_fulfillment_updates_specification_isValid = ::OpenAPI::fromJsonValue(m_fulfillment_updates_specification, json[QString("fulfillmentUpdatesSpecification")]);
    m_fulfillment_updates_specification_isSet = !json[QString("fulfillmentUpdatesSpecification")].isNull() && m_fulfillment_updates_specification_isValid;

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;
}

QString OAIDescribeIntentResponse_fulfillmentCodeHook::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeIntentResponse_fulfillmentCodeHook::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_post_fulfillment_status_specification.isSet()) {
        obj.insert(QString("postFulfillmentStatusSpecification"), ::OpenAPI::toJsonValue(m_post_fulfillment_status_specification));
    }
    if (m_fulfillment_updates_specification.isSet()) {
        obj.insert(QString("fulfillmentUpdatesSpecification"), ::OpenAPI::toJsonValue(m_fulfillment_updates_specification));
    }
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    return obj;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::getEnabled() const {
    return m_enabled;
}
void OAIDescribeIntentResponse_fulfillmentCodeHook::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAICreateIntent_request_fulfillmentCodeHook_postFulfillmentStatusSpecification OAIDescribeIntentResponse_fulfillmentCodeHook::getPostFulfillmentStatusSpecification() const {
    return m_post_fulfillment_status_specification;
}
void OAIDescribeIntentResponse_fulfillmentCodeHook::setPostFulfillmentStatusSpecification(const OAICreateIntent_request_fulfillmentCodeHook_postFulfillmentStatusSpecification &post_fulfillment_status_specification) {
    m_post_fulfillment_status_specification = post_fulfillment_status_specification;
    m_post_fulfillment_status_specification_isSet = true;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::is_post_fulfillment_status_specification_Set() const{
    return m_post_fulfillment_status_specification_isSet;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::is_post_fulfillment_status_specification_Valid() const{
    return m_post_fulfillment_status_specification_isValid;
}

OAICreateIntent_request_fulfillmentCodeHook_fulfillmentUpdatesSpecification OAIDescribeIntentResponse_fulfillmentCodeHook::getFulfillmentUpdatesSpecification() const {
    return m_fulfillment_updates_specification;
}
void OAIDescribeIntentResponse_fulfillmentCodeHook::setFulfillmentUpdatesSpecification(const OAICreateIntent_request_fulfillmentCodeHook_fulfillmentUpdatesSpecification &fulfillment_updates_specification) {
    m_fulfillment_updates_specification = fulfillment_updates_specification;
    m_fulfillment_updates_specification_isSet = true;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::is_fulfillment_updates_specification_Set() const{
    return m_fulfillment_updates_specification_isSet;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::is_fulfillment_updates_specification_Valid() const{
    return m_fulfillment_updates_specification_isValid;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::getActive() const {
    return m_active;
}
void OAIDescribeIntentResponse_fulfillmentCodeHook::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::is_active_Set() const{
    return m_active_isSet;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::is_active_Valid() const{
    return m_active_isValid;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_fulfillment_status_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fulfillment_updates_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeIntentResponse_fulfillmentCodeHook::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && true;
}

} // namespace OpenAPI
