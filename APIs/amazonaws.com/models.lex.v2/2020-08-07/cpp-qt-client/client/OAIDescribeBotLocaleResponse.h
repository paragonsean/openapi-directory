/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeBotLocaleResponse.h
 *
 * 
 */

#ifndef OAIDescribeBotLocaleResponse_H
#define OAIDescribeBotLocaleResponse_H

#include <QJsonObject>

#include "OAIBotLocaleStatus.h"
#include "OAIDescribeBotLocaleResponse_voiceSettings.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeBotLocaleResponse_voiceSettings;

class OAIDescribeBotLocaleResponse : public OAIObject {
public:
    OAIDescribeBotLocaleResponse();
    OAIDescribeBotLocaleResponse(QString json);
    ~OAIDescribeBotLocaleResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBotId() const;
    void setBotId(const QString &bot_id);
    bool is_bot_id_Set() const;
    bool is_bot_id_Valid() const;

    QString getBotVersion() const;
    void setBotVersion(const QString &bot_version);
    bool is_bot_version_Set() const;
    bool is_bot_version_Valid() const;

    QString getLocaleId() const;
    void setLocaleId(const QString &locale_id);
    bool is_locale_id_Set() const;
    bool is_locale_id_Valid() const;

    QString getLocaleName() const;
    void setLocaleName(const QString &locale_name);
    bool is_locale_name_Set() const;
    bool is_locale_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getNluIntentConfidenceThreshold() const;
    void setNluIntentConfidenceThreshold(const double &nlu_intent_confidence_threshold);
    bool is_nlu_intent_confidence_threshold_Set() const;
    bool is_nlu_intent_confidence_threshold_Valid() const;

    OAIDescribeBotLocaleResponse_voiceSettings getVoiceSettings() const;
    void setVoiceSettings(const OAIDescribeBotLocaleResponse_voiceSettings &voice_settings);
    bool is_voice_settings_Set() const;
    bool is_voice_settings_Valid() const;

    qint32 getIntentsCount() const;
    void setIntentsCount(const qint32 &intents_count);
    bool is_intents_count_Set() const;
    bool is_intents_count_Valid() const;

    qint32 getSlotTypesCount() const;
    void setSlotTypesCount(const qint32 &slot_types_count);
    bool is_slot_types_count_Set() const;
    bool is_slot_types_count_Valid() const;

    OAIBotLocaleStatus getBotLocaleStatus() const;
    void setBotLocaleStatus(const OAIBotLocaleStatus &bot_locale_status);
    bool is_bot_locale_status_Set() const;
    bool is_bot_locale_status_Valid() const;

    QList getFailureReasons() const;
    void setFailureReasons(const QList &failure_reasons);
    bool is_failure_reasons_Set() const;
    bool is_failure_reasons_Valid() const;

    QDateTime getCreationDateTime() const;
    void setCreationDateTime(const QDateTime &creation_date_time);
    bool is_creation_date_time_Set() const;
    bool is_creation_date_time_Valid() const;

    QDateTime getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QDateTime &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    QDateTime getLastBuildSubmittedDateTime() const;
    void setLastBuildSubmittedDateTime(const QDateTime &last_build_submitted_date_time);
    bool is_last_build_submitted_date_time_Set() const;
    bool is_last_build_submitted_date_time_Valid() const;

    QList getBotLocaleHistoryEvents() const;
    void setBotLocaleHistoryEvents(const QList &bot_locale_history_events);
    bool is_bot_locale_history_events_Set() const;
    bool is_bot_locale_history_events_Valid() const;

    QList getRecommendedActions() const;
    void setRecommendedActions(const QList &recommended_actions);
    bool is_recommended_actions_Set() const;
    bool is_recommended_actions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bot_id;
    bool m_bot_id_isSet;
    bool m_bot_id_isValid;

    QString m_bot_version;
    bool m_bot_version_isSet;
    bool m_bot_version_isValid;

    QString m_locale_id;
    bool m_locale_id_isSet;
    bool m_locale_id_isValid;

    QString m_locale_name;
    bool m_locale_name_isSet;
    bool m_locale_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_nlu_intent_confidence_threshold;
    bool m_nlu_intent_confidence_threshold_isSet;
    bool m_nlu_intent_confidence_threshold_isValid;

    OAIDescribeBotLocaleResponse_voiceSettings m_voice_settings;
    bool m_voice_settings_isSet;
    bool m_voice_settings_isValid;

    qint32 m_intents_count;
    bool m_intents_count_isSet;
    bool m_intents_count_isValid;

    qint32 m_slot_types_count;
    bool m_slot_types_count_isSet;
    bool m_slot_types_count_isValid;

    OAIBotLocaleStatus m_bot_locale_status;
    bool m_bot_locale_status_isSet;
    bool m_bot_locale_status_isValid;

    QList m_failure_reasons;
    bool m_failure_reasons_isSet;
    bool m_failure_reasons_isValid;

    QDateTime m_creation_date_time;
    bool m_creation_date_time_isSet;
    bool m_creation_date_time_isValid;

    QDateTime m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    QDateTime m_last_build_submitted_date_time;
    bool m_last_build_submitted_date_time_isSet;
    bool m_last_build_submitted_date_time_isValid;

    QList m_bot_locale_history_events;
    bool m_bot_locale_history_events_isSet;
    bool m_bot_locale_history_events_isValid;

    QList m_recommended_actions;
    bool m_recommended_actions_isSet;
    bool m_recommended_actions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeBotLocaleResponse)

#endif // OAIDescribeBotLocaleResponse_H
