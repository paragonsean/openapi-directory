/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateBotAliasRequest.h
 *
 * 
 */

#ifndef OAICreateBotAliasRequest_H
#define OAICreateBotAliasRequest_H

#include <QJsonObject>

#include "OAICreateBotAliasRequest_conversationLogSettings.h"
#include "OAISentimentAnalysisSettings.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateBotAliasRequest_conversationLogSettings;
class OAISentimentAnalysisSettings;

class OAICreateBotAliasRequest : public OAIObject {
public:
    OAICreateBotAliasRequest();
    OAICreateBotAliasRequest(QString json);
    ~OAICreateBotAliasRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBotAliasName() const;
    void setBotAliasName(const QString &bot_alias_name);
    bool is_bot_alias_name_Set() const;
    bool is_bot_alias_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getBotVersion() const;
    void setBotVersion(const QString &bot_version);
    bool is_bot_version_Set() const;
    bool is_bot_version_Valid() const;

    QMap getBotAliasLocaleSettings() const;
    void setBotAliasLocaleSettings(const QMap &bot_alias_locale_settings);
    bool is_bot_alias_locale_settings_Set() const;
    bool is_bot_alias_locale_settings_Valid() const;

    OAICreateBotAliasRequest_conversationLogSettings getConversationLogSettings() const;
    void setConversationLogSettings(const OAICreateBotAliasRequest_conversationLogSettings &conversation_log_settings);
    bool is_conversation_log_settings_Set() const;
    bool is_conversation_log_settings_Valid() const;

    OAISentimentAnalysisSettings getSentimentAnalysisSettings() const;
    void setSentimentAnalysisSettings(const OAISentimentAnalysisSettings &sentiment_analysis_settings);
    bool is_sentiment_analysis_settings_Set() const;
    bool is_sentiment_analysis_settings_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bot_alias_name;
    bool m_bot_alias_name_isSet;
    bool m_bot_alias_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_bot_version;
    bool m_bot_version_isSet;
    bool m_bot_version_isValid;

    QMap m_bot_alias_locale_settings;
    bool m_bot_alias_locale_settings_isSet;
    bool m_bot_alias_locale_settings_isValid;

    OAICreateBotAliasRequest_conversationLogSettings m_conversation_log_settings;
    bool m_conversation_log_settings_isSet;
    bool m_conversation_log_settings_isValid;

    OAISentimentAnalysisSettings m_sentiment_analysis_settings;
    bool m_sentiment_analysis_settings_isSet;
    bool m_sentiment_analysis_settings_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateBotAliasRequest)

#endif // OAICreateBotAliasRequest_H
