/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPromptAttempt.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPromptAttempt::OAIPromptAttempt(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPromptAttempt::OAIPromptAttempt() {
    this->initializeModel();
}

OAIPromptAttempt::~OAIPromptAttempt() {}

void OAIPromptAttempt::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPromptAttempt::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPromptAttempt::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Initial", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPromptAttempt::INITIAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Retry1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPromptAttempt::RETRY1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Retry2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPromptAttempt::RETRY2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Retry3", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPromptAttempt::RETRY3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Retry4", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPromptAttempt::RETRY4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Retry5", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPromptAttempt::RETRY5;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPromptAttempt::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPromptAttempt::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPromptAttempt::INITIAL:
            val = "Initial";
            break;
        case eOAIPromptAttempt::RETRY1:
            val = "Retry1";
            break;
        case eOAIPromptAttempt::RETRY2:
            val = "Retry2";
            break;
        case eOAIPromptAttempt::RETRY3:
            val = "Retry3";
            break;
        case eOAIPromptAttempt::RETRY4:
            val = "Retry4";
            break;
        case eOAIPromptAttempt::RETRY5:
            val = "Retry5";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPromptAttempt::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPromptAttempt::eOAIPromptAttempt OAIPromptAttempt::getValue() const {
    return m_value;
}

void OAIPromptAttempt::setValue(const OAIPromptAttempt::eOAIPromptAttempt& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPromptAttempt::isSet() const {
    
    return m_value_isSet;
}

bool OAIPromptAttempt::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
