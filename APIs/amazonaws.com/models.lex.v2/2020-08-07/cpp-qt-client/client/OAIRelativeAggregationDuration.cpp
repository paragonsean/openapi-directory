/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelativeAggregationDuration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelativeAggregationDuration::OAIRelativeAggregationDuration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelativeAggregationDuration::OAIRelativeAggregationDuration() {
    this->initializeModel();
}

OAIRelativeAggregationDuration::~OAIRelativeAggregationDuration() {}

void OAIRelativeAggregationDuration::initializeModel() {

    m_time_dimension_isSet = false;
    m_time_dimension_isValid = false;

    m_time_value_isSet = false;
    m_time_value_isValid = false;
}

void OAIRelativeAggregationDuration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelativeAggregationDuration::fromJsonObject(QJsonObject json) {

    m_time_dimension_isValid = ::OpenAPI::fromJsonValue(m_time_dimension, json[QString("timeDimension")]);
    m_time_dimension_isSet = !json[QString("timeDimension")].isNull() && m_time_dimension_isValid;

    m_time_value_isValid = ::OpenAPI::fromJsonValue(m_time_value, json[QString("timeValue")]);
    m_time_value_isSet = !json[QString("timeValue")].isNull() && m_time_value_isValid;
}

QString OAIRelativeAggregationDuration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelativeAggregationDuration::asJsonObject() const {
    QJsonObject obj;
    if (m_time_dimension.isSet()) {
        obj.insert(QString("timeDimension"), ::OpenAPI::toJsonValue(m_time_dimension));
    }
    if (m_time_value_isSet) {
        obj.insert(QString("timeValue"), ::OpenAPI::toJsonValue(m_time_value));
    }
    return obj;
}

OAITimeDimension OAIRelativeAggregationDuration::getTimeDimension() const {
    return m_time_dimension;
}
void OAIRelativeAggregationDuration::setTimeDimension(const OAITimeDimension &time_dimension) {
    m_time_dimension = time_dimension;
    m_time_dimension_isSet = true;
}

bool OAIRelativeAggregationDuration::is_time_dimension_Set() const{
    return m_time_dimension_isSet;
}

bool OAIRelativeAggregationDuration::is_time_dimension_Valid() const{
    return m_time_dimension_isValid;
}

qint32 OAIRelativeAggregationDuration::getTimeValue() const {
    return m_time_value;
}
void OAIRelativeAggregationDuration::setTimeValue(const qint32 &time_value) {
    m_time_value = time_value;
    m_time_value_isSet = true;
}

bool OAIRelativeAggregationDuration::is_time_value_Set() const{
    return m_time_value_isSet;
}

bool OAIRelativeAggregationDuration::is_time_value_Valid() const{
    return m_time_value_isValid;
}

bool OAIRelativeAggregationDuration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_time_dimension.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelativeAggregationDuration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_time_dimension_isValid && m_time_value_isValid && true;
}

} // namespace OpenAPI
