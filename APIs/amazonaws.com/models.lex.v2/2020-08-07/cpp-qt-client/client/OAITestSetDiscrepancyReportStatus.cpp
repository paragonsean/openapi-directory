/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITestSetDiscrepancyReportStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITestSetDiscrepancyReportStatus::OAITestSetDiscrepancyReportStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITestSetDiscrepancyReportStatus::OAITestSetDiscrepancyReportStatus() {
    this->initializeModel();
}

OAITestSetDiscrepancyReportStatus::~OAITestSetDiscrepancyReportStatus() {}

void OAITestSetDiscrepancyReportStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITestSetDiscrepancyReportStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITestSetDiscrepancyReportStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("InProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAITestSetDiscrepancyReportStatus::INPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAITestSetDiscrepancyReportStatus::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAITestSetDiscrepancyReportStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITestSetDiscrepancyReportStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITestSetDiscrepancyReportStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITestSetDiscrepancyReportStatus::INPROGRESS:
            val = "InProgress";
            break;
        case eOAITestSetDiscrepancyReportStatus::COMPLETED:
            val = "Completed";
            break;
        case eOAITestSetDiscrepancyReportStatus::FAILED:
            val = "Failed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITestSetDiscrepancyReportStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITestSetDiscrepancyReportStatus::eOAITestSetDiscrepancyReportStatus OAITestSetDiscrepancyReportStatus::getValue() const {
    return m_value;
}

void OAITestSetDiscrepancyReportStatus::setValue(const OAITestSetDiscrepancyReportStatus::eOAITestSetDiscrepancyReportStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITestSetDiscrepancyReportStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAITestSetDiscrepancyReportStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
