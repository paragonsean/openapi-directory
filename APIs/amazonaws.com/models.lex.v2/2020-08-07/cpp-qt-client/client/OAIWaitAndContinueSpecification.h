/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWaitAndContinueSpecification.h
 *
 * Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input. 
 */

#ifndef OAIWaitAndContinueSpecification_H
#define OAIWaitAndContinueSpecification_H

#include <QJsonObject>

#include "OAIWaitAndContinueSpecification_continueResponse.h"
#include "OAIWaitAndContinueSpecification_stillWaitingResponse.h"
#include "OAIWaitAndContinueSpecification_waitingResponse.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWaitAndContinueSpecification_waitingResponse;
class OAIWaitAndContinueSpecification_continueResponse;
class OAIWaitAndContinueSpecification_stillWaitingResponse;

class OAIWaitAndContinueSpecification : public OAIObject {
public:
    OAIWaitAndContinueSpecification();
    OAIWaitAndContinueSpecification(QString json);
    ~OAIWaitAndContinueSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIWaitAndContinueSpecification_waitingResponse getWaitingResponse() const;
    void setWaitingResponse(const OAIWaitAndContinueSpecification_waitingResponse &waiting_response);
    bool is_waiting_response_Set() const;
    bool is_waiting_response_Valid() const;

    OAIWaitAndContinueSpecification_continueResponse getContinueResponse() const;
    void setContinueResponse(const OAIWaitAndContinueSpecification_continueResponse &continue_response);
    bool is_continue_response_Set() const;
    bool is_continue_response_Valid() const;

    OAIWaitAndContinueSpecification_stillWaitingResponse getStillWaitingResponse() const;
    void setStillWaitingResponse(const OAIWaitAndContinueSpecification_stillWaitingResponse &still_waiting_response);
    bool is_still_waiting_response_Set() const;
    bool is_still_waiting_response_Valid() const;

    bool getActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIWaitAndContinueSpecification_waitingResponse m_waiting_response;
    bool m_waiting_response_isSet;
    bool m_waiting_response_isValid;

    OAIWaitAndContinueSpecification_continueResponse m_continue_response;
    bool m_continue_response_isSet;
    bool m_continue_response_isValid;

    OAIWaitAndContinueSpecification_stillWaitingResponse m_still_waiting_response;
    bool m_still_waiting_response_isSet;
    bool m_still_waiting_response_isValid;

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWaitAndContinueSpecification)

#endif // OAIWaitAndContinueSpecification_H
