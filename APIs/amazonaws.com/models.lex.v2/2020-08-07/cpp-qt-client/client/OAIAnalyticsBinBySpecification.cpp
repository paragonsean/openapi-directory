/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalyticsBinBySpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalyticsBinBySpecification::OAIAnalyticsBinBySpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalyticsBinBySpecification::OAIAnalyticsBinBySpecification() {
    this->initializeModel();
}

OAIAnalyticsBinBySpecification::~OAIAnalyticsBinBySpecification() {}

void OAIAnalyticsBinBySpecification::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_interval_isSet = false;
    m_interval_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;
}

void OAIAnalyticsBinBySpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnalyticsBinBySpecification::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_interval_isValid = ::OpenAPI::fromJsonValue(m_interval, json[QString("interval")]);
    m_interval_isSet = !json[QString("interval")].isNull() && m_interval_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;
}

QString OAIAnalyticsBinBySpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnalyticsBinBySpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_name.isSet()) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_interval.isSet()) {
        obj.insert(QString("interval"), ::OpenAPI::toJsonValue(m_interval));
    }
    if (m_order.isSet()) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    return obj;
}

OAIAnalyticsBinByName OAIAnalyticsBinBySpecification::getName() const {
    return m_name;
}
void OAIAnalyticsBinBySpecification::setName(const OAIAnalyticsBinByName &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAnalyticsBinBySpecification::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAnalyticsBinBySpecification::is_name_Valid() const{
    return m_name_isValid;
}

OAIAnalyticsInterval OAIAnalyticsBinBySpecification::getInterval() const {
    return m_interval;
}
void OAIAnalyticsBinBySpecification::setInterval(const OAIAnalyticsInterval &interval) {
    m_interval = interval;
    m_interval_isSet = true;
}

bool OAIAnalyticsBinBySpecification::is_interval_Set() const{
    return m_interval_isSet;
}

bool OAIAnalyticsBinBySpecification::is_interval_Valid() const{
    return m_interval_isValid;
}

OAIAnalyticsSortOrder OAIAnalyticsBinBySpecification::getOrder() const {
    return m_order;
}
void OAIAnalyticsBinBySpecification::setOrder(const OAIAnalyticsSortOrder &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAIAnalyticsBinBySpecification::is_order_Set() const{
    return m_order_isSet;
}

bool OAIAnalyticsBinBySpecification::is_order_Valid() const{
    return m_order_isValid;
}

bool OAIAnalyticsBinBySpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_interval.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnalyticsBinBySpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_interval_isValid && true;
}

} // namespace OpenAPI
