/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessageGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessageGroup::OAIMessageGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessageGroup::OAIMessageGroup() {
    this->initializeModel();
}

OAIMessageGroup::~OAIMessageGroup() {}

void OAIMessageGroup::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_variations_isSet = false;
    m_variations_isValid = false;
}

void OAIMessageGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessageGroup::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_variations_isValid = ::OpenAPI::fromJsonValue(m_variations, json[QString("variations")]);
    m_variations_isSet = !json[QString("variations")].isNull() && m_variations_isValid;
}

QString OAIMessageGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessageGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_message.isSet()) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_variations.isSet()) {
        obj.insert(QString("variations"), ::OpenAPI::toJsonValue(m_variations));
    }
    return obj;
}

OAIMessageGroup_message OAIMessageGroup::getMessage() const {
    return m_message;
}
void OAIMessageGroup::setMessage(const OAIMessageGroup_message &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIMessageGroup::is_message_Set() const{
    return m_message_isSet;
}

bool OAIMessageGroup::is_message_Valid() const{
    return m_message_isValid;
}

QList OAIMessageGroup::getVariations() const {
    return m_variations;
}
void OAIMessageGroup::setVariations(const QList &variations) {
    m_variations = variations;
    m_variations_isSet = true;
}

bool OAIMessageGroup::is_variations_Set() const{
    return m_variations_isSet;
}

bool OAIMessageGroup::is_variations_Valid() const{
    return m_variations_isValid;
}

bool OAIMessageGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_variations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessageGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_message_isValid && true;
}

} // namespace OpenAPI
