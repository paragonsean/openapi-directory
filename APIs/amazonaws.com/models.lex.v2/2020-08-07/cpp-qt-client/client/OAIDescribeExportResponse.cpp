/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeExportResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeExportResponse::OAIDescribeExportResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeExportResponse::OAIDescribeExportResponse() {
    this->initializeModel();
}

OAIDescribeExportResponse::~OAIDescribeExportResponse() {}

void OAIDescribeExportResponse::initializeModel() {

    m_export_id_isSet = false;
    m_export_id_isValid = false;

    m_resource_specification_isSet = false;
    m_resource_specification_isValid = false;

    m_file_format_isSet = false;
    m_file_format_isValid = false;

    m_export_status_isSet = false;
    m_export_status_isValid = false;

    m_failure_reasons_isSet = false;
    m_failure_reasons_isValid = false;

    m_download_url_isSet = false;
    m_download_url_isValid = false;

    m_creation_date_time_isSet = false;
    m_creation_date_time_isValid = false;

    m_last_updated_date_time_isSet = false;
    m_last_updated_date_time_isValid = false;
}

void OAIDescribeExportResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeExportResponse::fromJsonObject(QJsonObject json) {

    m_export_id_isValid = ::OpenAPI::fromJsonValue(m_export_id, json[QString("exportId")]);
    m_export_id_isSet = !json[QString("exportId")].isNull() && m_export_id_isValid;

    m_resource_specification_isValid = ::OpenAPI::fromJsonValue(m_resource_specification, json[QString("resourceSpecification")]);
    m_resource_specification_isSet = !json[QString("resourceSpecification")].isNull() && m_resource_specification_isValid;

    m_file_format_isValid = ::OpenAPI::fromJsonValue(m_file_format, json[QString("fileFormat")]);
    m_file_format_isSet = !json[QString("fileFormat")].isNull() && m_file_format_isValid;

    m_export_status_isValid = ::OpenAPI::fromJsonValue(m_export_status, json[QString("exportStatus")]);
    m_export_status_isSet = !json[QString("exportStatus")].isNull() && m_export_status_isValid;

    m_failure_reasons_isValid = ::OpenAPI::fromJsonValue(m_failure_reasons, json[QString("failureReasons")]);
    m_failure_reasons_isSet = !json[QString("failureReasons")].isNull() && m_failure_reasons_isValid;

    m_download_url_isValid = ::OpenAPI::fromJsonValue(m_download_url, json[QString("downloadUrl")]);
    m_download_url_isSet = !json[QString("downloadUrl")].isNull() && m_download_url_isValid;

    m_creation_date_time_isValid = ::OpenAPI::fromJsonValue(m_creation_date_time, json[QString("creationDateTime")]);
    m_creation_date_time_isSet = !json[QString("creationDateTime")].isNull() && m_creation_date_time_isValid;

    m_last_updated_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_date_time, json[QString("lastUpdatedDateTime")]);
    m_last_updated_date_time_isSet = !json[QString("lastUpdatedDateTime")].isNull() && m_last_updated_date_time_isValid;
}

QString OAIDescribeExportResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeExportResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_export_id_isSet) {
        obj.insert(QString("exportId"), ::OpenAPI::toJsonValue(m_export_id));
    }
    if (m_resource_specification.isSet()) {
        obj.insert(QString("resourceSpecification"), ::OpenAPI::toJsonValue(m_resource_specification));
    }
    if (m_file_format.isSet()) {
        obj.insert(QString("fileFormat"), ::OpenAPI::toJsonValue(m_file_format));
    }
    if (m_export_status.isSet()) {
        obj.insert(QString("exportStatus"), ::OpenAPI::toJsonValue(m_export_status));
    }
    if (m_failure_reasons.isSet()) {
        obj.insert(QString("failureReasons"), ::OpenAPI::toJsonValue(m_failure_reasons));
    }
    if (m_download_url_isSet) {
        obj.insert(QString("downloadUrl"), ::OpenAPI::toJsonValue(m_download_url));
    }
    if (m_creation_date_time_isSet) {
        obj.insert(QString("creationDateTime"), ::OpenAPI::toJsonValue(m_creation_date_time));
    }
    if (m_last_updated_date_time_isSet) {
        obj.insert(QString("lastUpdatedDateTime"), ::OpenAPI::toJsonValue(m_last_updated_date_time));
    }
    return obj;
}

QString OAIDescribeExportResponse::getExportId() const {
    return m_export_id;
}
void OAIDescribeExportResponse::setExportId(const QString &export_id) {
    m_export_id = export_id;
    m_export_id_isSet = true;
}

bool OAIDescribeExportResponse::is_export_id_Set() const{
    return m_export_id_isSet;
}

bool OAIDescribeExportResponse::is_export_id_Valid() const{
    return m_export_id_isValid;
}

OAIDescribeExportResponse_resourceSpecification OAIDescribeExportResponse::getResourceSpecification() const {
    return m_resource_specification;
}
void OAIDescribeExportResponse::setResourceSpecification(const OAIDescribeExportResponse_resourceSpecification &resource_specification) {
    m_resource_specification = resource_specification;
    m_resource_specification_isSet = true;
}

bool OAIDescribeExportResponse::is_resource_specification_Set() const{
    return m_resource_specification_isSet;
}

bool OAIDescribeExportResponse::is_resource_specification_Valid() const{
    return m_resource_specification_isValid;
}

OAIImportExportFileFormat OAIDescribeExportResponse::getFileFormat() const {
    return m_file_format;
}
void OAIDescribeExportResponse::setFileFormat(const OAIImportExportFileFormat &file_format) {
    m_file_format = file_format;
    m_file_format_isSet = true;
}

bool OAIDescribeExportResponse::is_file_format_Set() const{
    return m_file_format_isSet;
}

bool OAIDescribeExportResponse::is_file_format_Valid() const{
    return m_file_format_isValid;
}

OAIExportStatus OAIDescribeExportResponse::getExportStatus() const {
    return m_export_status;
}
void OAIDescribeExportResponse::setExportStatus(const OAIExportStatus &export_status) {
    m_export_status = export_status;
    m_export_status_isSet = true;
}

bool OAIDescribeExportResponse::is_export_status_Set() const{
    return m_export_status_isSet;
}

bool OAIDescribeExportResponse::is_export_status_Valid() const{
    return m_export_status_isValid;
}

QList OAIDescribeExportResponse::getFailureReasons() const {
    return m_failure_reasons;
}
void OAIDescribeExportResponse::setFailureReasons(const QList &failure_reasons) {
    m_failure_reasons = failure_reasons;
    m_failure_reasons_isSet = true;
}

bool OAIDescribeExportResponse::is_failure_reasons_Set() const{
    return m_failure_reasons_isSet;
}

bool OAIDescribeExportResponse::is_failure_reasons_Valid() const{
    return m_failure_reasons_isValid;
}

QString OAIDescribeExportResponse::getDownloadUrl() const {
    return m_download_url;
}
void OAIDescribeExportResponse::setDownloadUrl(const QString &download_url) {
    m_download_url = download_url;
    m_download_url_isSet = true;
}

bool OAIDescribeExportResponse::is_download_url_Set() const{
    return m_download_url_isSet;
}

bool OAIDescribeExportResponse::is_download_url_Valid() const{
    return m_download_url_isValid;
}

QDateTime OAIDescribeExportResponse::getCreationDateTime() const {
    return m_creation_date_time;
}
void OAIDescribeExportResponse::setCreationDateTime(const QDateTime &creation_date_time) {
    m_creation_date_time = creation_date_time;
    m_creation_date_time_isSet = true;
}

bool OAIDescribeExportResponse::is_creation_date_time_Set() const{
    return m_creation_date_time_isSet;
}

bool OAIDescribeExportResponse::is_creation_date_time_Valid() const{
    return m_creation_date_time_isValid;
}

QDateTime OAIDescribeExportResponse::getLastUpdatedDateTime() const {
    return m_last_updated_date_time;
}
void OAIDescribeExportResponse::setLastUpdatedDateTime(const QDateTime &last_updated_date_time) {
    m_last_updated_date_time = last_updated_date_time;
    m_last_updated_date_time_isSet = true;
}

bool OAIDescribeExportResponse::is_last_updated_date_time_Set() const{
    return m_last_updated_date_time_isSet;
}

bool OAIDescribeExportResponse::is_last_updated_date_time_Valid() const{
    return m_last_updated_date_time_isValid;
}

bool OAIDescribeExportResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_export_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reasons.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeExportResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
