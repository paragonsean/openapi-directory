/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeResourcePolicyResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeResourcePolicyResponse::OAIDescribeResourcePolicyResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeResourcePolicyResponse::OAIDescribeResourcePolicyResponse() {
    this->initializeModel();
}

OAIDescribeResourcePolicyResponse::~OAIDescribeResourcePolicyResponse() {}

void OAIDescribeResourcePolicyResponse::initializeModel() {

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;

    m_policy_isSet = false;
    m_policy_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;
}

void OAIDescribeResourcePolicyResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeResourcePolicyResponse::fromJsonObject(QJsonObject json) {

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("resourceArn")]);
    m_resource_arn_isSet = !json[QString("resourceArn")].isNull() && m_resource_arn_isValid;

    m_policy_isValid = ::OpenAPI::fromJsonValue(m_policy, json[QString("policy")]);
    m_policy_isSet = !json[QString("policy")].isNull() && m_policy_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;
}

QString OAIDescribeResourcePolicyResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeResourcePolicyResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_arn_isSet) {
        obj.insert(QString("resourceArn"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    if (m_policy_isSet) {
        obj.insert(QString("policy"), ::OpenAPI::toJsonValue(m_policy));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    return obj;
}

QString OAIDescribeResourcePolicyResponse::getResourceArn() const {
    return m_resource_arn;
}
void OAIDescribeResourcePolicyResponse::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAIDescribeResourcePolicyResponse::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAIDescribeResourcePolicyResponse::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

QString OAIDescribeResourcePolicyResponse::getPolicy() const {
    return m_policy;
}
void OAIDescribeResourcePolicyResponse::setPolicy(const QString &policy) {
    m_policy = policy;
    m_policy_isSet = true;
}

bool OAIDescribeResourcePolicyResponse::is_policy_Set() const{
    return m_policy_isSet;
}

bool OAIDescribeResourcePolicyResponse::is_policy_Valid() const{
    return m_policy_isValid;
}

QString OAIDescribeResourcePolicyResponse::getRevisionId() const {
    return m_revision_id;
}
void OAIDescribeResourcePolicyResponse::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIDescribeResourcePolicyResponse::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIDescribeResourcePolicyResponse::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

bool OAIDescribeResourcePolicyResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeResourcePolicyResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
