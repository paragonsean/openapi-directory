/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalyticsIntentResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalyticsIntentResult::OAIAnalyticsIntentResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalyticsIntentResult::OAIAnalyticsIntentResult() {
    this->initializeModel();
}

OAIAnalyticsIntentResult::~OAIAnalyticsIntentResult() {}

void OAIAnalyticsIntentResult::initializeModel() {

    m_bin_keys_isSet = false;
    m_bin_keys_isValid = false;

    m_group_by_keys_isSet = false;
    m_group_by_keys_isValid = false;

    m_metrics_results_isSet = false;
    m_metrics_results_isValid = false;
}

void OAIAnalyticsIntentResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnalyticsIntentResult::fromJsonObject(QJsonObject json) {

    m_bin_keys_isValid = ::OpenAPI::fromJsonValue(m_bin_keys, json[QString("binKeys")]);
    m_bin_keys_isSet = !json[QString("binKeys")].isNull() && m_bin_keys_isValid;

    m_group_by_keys_isValid = ::OpenAPI::fromJsonValue(m_group_by_keys, json[QString("groupByKeys")]);
    m_group_by_keys_isSet = !json[QString("groupByKeys")].isNull() && m_group_by_keys_isValid;

    m_metrics_results_isValid = ::OpenAPI::fromJsonValue(m_metrics_results, json[QString("metricsResults")]);
    m_metrics_results_isSet = !json[QString("metricsResults")].isNull() && m_metrics_results_isValid;
}

QString OAIAnalyticsIntentResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnalyticsIntentResult::asJsonObject() const {
    QJsonObject obj;
    if (m_bin_keys.isSet()) {
        obj.insert(QString("binKeys"), ::OpenAPI::toJsonValue(m_bin_keys));
    }
    if (m_group_by_keys.isSet()) {
        obj.insert(QString("groupByKeys"), ::OpenAPI::toJsonValue(m_group_by_keys));
    }
    if (m_metrics_results.isSet()) {
        obj.insert(QString("metricsResults"), ::OpenAPI::toJsonValue(m_metrics_results));
    }
    return obj;
}

QList OAIAnalyticsIntentResult::getBinKeys() const {
    return m_bin_keys;
}
void OAIAnalyticsIntentResult::setBinKeys(const QList &bin_keys) {
    m_bin_keys = bin_keys;
    m_bin_keys_isSet = true;
}

bool OAIAnalyticsIntentResult::is_bin_keys_Set() const{
    return m_bin_keys_isSet;
}

bool OAIAnalyticsIntentResult::is_bin_keys_Valid() const{
    return m_bin_keys_isValid;
}

QList OAIAnalyticsIntentResult::getGroupByKeys() const {
    return m_group_by_keys;
}
void OAIAnalyticsIntentResult::setGroupByKeys(const QList &group_by_keys) {
    m_group_by_keys = group_by_keys;
    m_group_by_keys_isSet = true;
}

bool OAIAnalyticsIntentResult::is_group_by_keys_Set() const{
    return m_group_by_keys_isSet;
}

bool OAIAnalyticsIntentResult::is_group_by_keys_Valid() const{
    return m_group_by_keys_isValid;
}

QList OAIAnalyticsIntentResult::getMetricsResults() const {
    return m_metrics_results;
}
void OAIAnalyticsIntentResult::setMetricsResults(const QList &metrics_results) {
    m_metrics_results = metrics_results;
    m_metrics_results_isSet = true;
}

bool OAIAnalyticsIntentResult::is_metrics_results_Set() const{
    return m_metrics_results_isSet;
}

bool OAIAnalyticsIntentResult::is_metrics_results_Valid() const{
    return m_metrics_results_isValid;
}

bool OAIAnalyticsIntentResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bin_keys.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_by_keys.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics_results.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnalyticsIntentResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
