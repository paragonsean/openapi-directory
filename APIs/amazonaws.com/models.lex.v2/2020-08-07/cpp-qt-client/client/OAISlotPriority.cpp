/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISlotPriority.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISlotPriority::OAISlotPriority(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISlotPriority::OAISlotPriority() {
    this->initializeModel();
}

OAISlotPriority::~OAISlotPriority() {}

void OAISlotPriority::initializeModel() {

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_slot_id_isSet = false;
    m_slot_id_isValid = false;
}

void OAISlotPriority::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISlotPriority::fromJsonObject(QJsonObject json) {

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_slot_id_isValid = ::OpenAPI::fromJsonValue(m_slot_id, json[QString("slotId")]);
    m_slot_id_isSet = !json[QString("slotId")].isNull() && m_slot_id_isValid;
}

QString OAISlotPriority::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISlotPriority::asJsonObject() const {
    QJsonObject obj;
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_slot_id_isSet) {
        obj.insert(QString("slotId"), ::OpenAPI::toJsonValue(m_slot_id));
    }
    return obj;
}

qint32 OAISlotPriority::getPriority() const {
    return m_priority;
}
void OAISlotPriority::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAISlotPriority::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAISlotPriority::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAISlotPriority::getSlotId() const {
    return m_slot_id;
}
void OAISlotPriority::setSlotId(const QString &slot_id) {
    m_slot_id = slot_id;
    m_slot_id_isSet = true;
}

bool OAISlotPriority::is_slot_id_Set() const{
    return m_slot_id_isSet;
}

bool OAISlotPriority::is_slot_id_Valid() const{
    return m_slot_id_isValid;
}

bool OAISlotPriority::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slot_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISlotPriority::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_priority_isValid && m_slot_id_isValid && true;
}

} // namespace OpenAPI
