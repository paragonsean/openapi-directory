/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILambdaCodeHook.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILambdaCodeHook::OAILambdaCodeHook(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILambdaCodeHook::OAILambdaCodeHook() {
    this->initializeModel();
}

OAILambdaCodeHook::~OAILambdaCodeHook() {}

void OAILambdaCodeHook::initializeModel() {

    m_lambda_arn_isSet = false;
    m_lambda_arn_isValid = false;

    m_code_hook_interface_version_isSet = false;
    m_code_hook_interface_version_isValid = false;
}

void OAILambdaCodeHook::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILambdaCodeHook::fromJsonObject(QJsonObject json) {

    m_lambda_arn_isValid = ::OpenAPI::fromJsonValue(m_lambda_arn, json[QString("lambdaARN")]);
    m_lambda_arn_isSet = !json[QString("lambdaARN")].isNull() && m_lambda_arn_isValid;

    m_code_hook_interface_version_isValid = ::OpenAPI::fromJsonValue(m_code_hook_interface_version, json[QString("codeHookInterfaceVersion")]);
    m_code_hook_interface_version_isSet = !json[QString("codeHookInterfaceVersion")].isNull() && m_code_hook_interface_version_isValid;
}

QString OAILambdaCodeHook::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILambdaCodeHook::asJsonObject() const {
    QJsonObject obj;
    if (m_lambda_arn_isSet) {
        obj.insert(QString("lambdaARN"), ::OpenAPI::toJsonValue(m_lambda_arn));
    }
    if (m_code_hook_interface_version_isSet) {
        obj.insert(QString("codeHookInterfaceVersion"), ::OpenAPI::toJsonValue(m_code_hook_interface_version));
    }
    return obj;
}

QString OAILambdaCodeHook::getLambdaArn() const {
    return m_lambda_arn;
}
void OAILambdaCodeHook::setLambdaArn(const QString &lambda_arn) {
    m_lambda_arn = lambda_arn;
    m_lambda_arn_isSet = true;
}

bool OAILambdaCodeHook::is_lambda_arn_Set() const{
    return m_lambda_arn_isSet;
}

bool OAILambdaCodeHook::is_lambda_arn_Valid() const{
    return m_lambda_arn_isValid;
}

QString OAILambdaCodeHook::getCodeHookInterfaceVersion() const {
    return m_code_hook_interface_version;
}
void OAILambdaCodeHook::setCodeHookInterfaceVersion(const QString &code_hook_interface_version) {
    m_code_hook_interface_version = code_hook_interface_version;
    m_code_hook_interface_version_isSet = true;
}

bool OAILambdaCodeHook::is_code_hook_interface_version_Set() const{
    return m_code_hook_interface_version_isSet;
}

bool OAILambdaCodeHook::is_code_hook_interface_version_Valid() const{
    return m_code_hook_interface_version_isValid;
}

bool OAILambdaCodeHook::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lambda_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_hook_interface_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILambdaCodeHook::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_lambda_arn_isValid && m_code_hook_interface_version_isValid && true;
}

} // namespace OpenAPI
