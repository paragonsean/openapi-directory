/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateIntentRequest_intentClosingSetting.h
 *
 * 
 */

#ifndef OAIUpdateIntentRequest_intentClosingSetting_H
#define OAIUpdateIntentRequest_intentClosingSetting_H

#include <QJsonObject>

#include "OAICreateIntent_request_intentClosingSetting_closingResponse.h"
#include "OAICreateIntent_request_intentClosingSetting_conditional.h"
#include "OAICreateIntent_request_intentClosingSetting_nextStep.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateIntent_request_intentClosingSetting_closingResponse;
class OAICreateIntent_request_intentClosingSetting_nextStep;
class OAICreateIntent_request_intentClosingSetting_conditional;

class OAIUpdateIntentRequest_intentClosingSetting : public OAIObject {
public:
    OAIUpdateIntentRequest_intentClosingSetting();
    OAIUpdateIntentRequest_intentClosingSetting(QString json);
    ~OAIUpdateIntentRequest_intentClosingSetting() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateIntent_request_intentClosingSetting_closingResponse getClosingResponse() const;
    void setClosingResponse(const OAICreateIntent_request_intentClosingSetting_closingResponse &closing_response);
    bool is_closing_response_Set() const;
    bool is_closing_response_Valid() const;

    bool getActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    OAICreateIntent_request_intentClosingSetting_nextStep getNextStep() const;
    void setNextStep(const OAICreateIntent_request_intentClosingSetting_nextStep &next_step);
    bool is_next_step_Set() const;
    bool is_next_step_Valid() const;

    OAICreateIntent_request_intentClosingSetting_conditional getConditional() const;
    void setConditional(const OAICreateIntent_request_intentClosingSetting_conditional &conditional);
    bool is_conditional_Set() const;
    bool is_conditional_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateIntent_request_intentClosingSetting_closingResponse m_closing_response;
    bool m_closing_response_isSet;
    bool m_closing_response_isValid;

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    OAICreateIntent_request_intentClosingSetting_nextStep m_next_step;
    bool m_next_step_isSet;
    bool m_next_step_isValid;

    OAICreateIntent_request_intentClosingSetting_conditional m_conditional;
    bool m_conditional_isSet;
    bool m_conditional_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateIntentRequest_intentClosingSetting)

#endif // OAIUpdateIntentRequest_intentClosingSetting_H
