/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBotSummary.h
 *
 * Summary information about a bot returned by the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lexv2/latest/APIReference/API_ListBots.html\&quot;&gt;ListBots&lt;/a&gt; operation.
 */

#ifndef OAIBotSummary_H
#define OAIBotSummary_H

#include <QJsonObject>

#include "OAIBotStatus.h"
#include "OAIBotType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBotSummary : public OAIObject {
public:
    OAIBotSummary();
    OAIBotSummary(QString json);
    ~OAIBotSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBotId() const;
    void setBotId(const QString &bot_id);
    bool is_bot_id_Set() const;
    bool is_bot_id_Valid() const;

    QString getBotName() const;
    void setBotName(const QString &bot_name);
    bool is_bot_name_Set() const;
    bool is_bot_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIBotStatus getBotStatus() const;
    void setBotStatus(const OAIBotStatus &bot_status);
    bool is_bot_status_Set() const;
    bool is_bot_status_Valid() const;

    QString getLatestBotVersion() const;
    void setLatestBotVersion(const QString &latest_bot_version);
    bool is_latest_bot_version_Set() const;
    bool is_latest_bot_version_Valid() const;

    QDateTime getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QDateTime &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    OAIBotType getBotType() const;
    void setBotType(const OAIBotType &bot_type);
    bool is_bot_type_Set() const;
    bool is_bot_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bot_id;
    bool m_bot_id_isSet;
    bool m_bot_id_isValid;

    QString m_bot_name;
    bool m_bot_name_isSet;
    bool m_bot_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIBotStatus m_bot_status;
    bool m_bot_status_isSet;
    bool m_bot_status_isValid;

    QString m_latest_bot_version;
    bool m_latest_bot_version_isSet;
    bool m_latest_bot_version_isValid;

    QDateTime m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    OAIBotType m_bot_type;
    bool m_bot_type_isSet;
    bool m_bot_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBotSummary)

#endif // OAIBotSummary_H
