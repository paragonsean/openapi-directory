/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPromptAttemptSpecification.h
 *
 * Specifies the settings on a prompt attempt.
 */

#ifndef OAIPromptAttemptSpecification_H
#define OAIPromptAttemptSpecification_H

#include <QJsonObject>

#include "OAIPromptAttemptSpecification_allowedInputTypes.h"
#include "OAIPromptAttemptSpecification_audioAndDTMFInputSpecification.h"
#include "OAIPromptAttemptSpecification_textInputSpecification.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPromptAttemptSpecification_allowedInputTypes;
class OAIPromptAttemptSpecification_audioAndDTMFInputSpecification;
class OAIPromptAttemptSpecification_textInputSpecification;

class OAIPromptAttemptSpecification : public OAIObject {
public:
    OAIPromptAttemptSpecification();
    OAIPromptAttemptSpecification(QString json);
    ~OAIPromptAttemptSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getAllowInterrupt() const;
    void setAllowInterrupt(const bool &allow_interrupt);
    bool is_allow_interrupt_Set() const;
    bool is_allow_interrupt_Valid() const;

    OAIPromptAttemptSpecification_allowedInputTypes getAllowedInputTypes() const;
    void setAllowedInputTypes(const OAIPromptAttemptSpecification_allowedInputTypes &allowed_input_types);
    bool is_allowed_input_types_Set() const;
    bool is_allowed_input_types_Valid() const;

    OAIPromptAttemptSpecification_audioAndDTMFInputSpecification getAudioAndDtmfInputSpecification() const;
    void setAudioAndDtmfInputSpecification(const OAIPromptAttemptSpecification_audioAndDTMFInputSpecification &audio_and_dtmf_input_specification);
    bool is_audio_and_dtmf_input_specification_Set() const;
    bool is_audio_and_dtmf_input_specification_Valid() const;

    OAIPromptAttemptSpecification_textInputSpecification getTextInputSpecification() const;
    void setTextInputSpecification(const OAIPromptAttemptSpecification_textInputSpecification &text_input_specification);
    bool is_text_input_specification_Set() const;
    bool is_text_input_specification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_interrupt;
    bool m_allow_interrupt_isSet;
    bool m_allow_interrupt_isValid;

    OAIPromptAttemptSpecification_allowedInputTypes m_allowed_input_types;
    bool m_allowed_input_types_isSet;
    bool m_allowed_input_types_isValid;

    OAIPromptAttemptSpecification_audioAndDTMFInputSpecification m_audio_and_dtmf_input_specification;
    bool m_audio_and_dtmf_input_specification_isSet;
    bool m_audio_and_dtmf_input_specification_isValid;

    OAIPromptAttemptSpecification_textInputSpecification m_text_input_specification;
    bool m_text_input_specification_isSet;
    bool m_text_input_specification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPromptAttemptSpecification)

#endif // OAIPromptAttemptSpecification_H
