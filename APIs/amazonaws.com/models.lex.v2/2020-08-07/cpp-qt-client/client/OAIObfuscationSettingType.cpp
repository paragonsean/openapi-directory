/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObfuscationSettingType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObfuscationSettingType::OAIObfuscationSettingType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObfuscationSettingType::OAIObfuscationSettingType() {
    this->initializeModel();
}

OAIObfuscationSettingType::~OAIObfuscationSettingType() {}

void OAIObfuscationSettingType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIObfuscationSettingType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIObfuscationSettingType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObfuscationSettingType::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DefaultObfuscation", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObfuscationSettingType::DEFAULTOBFUSCATION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIObfuscationSettingType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIObfuscationSettingType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIObfuscationSettingType::NONE:
            val = "None";
            break;
        case eOAIObfuscationSettingType::DEFAULTOBFUSCATION:
            val = "DefaultObfuscation";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIObfuscationSettingType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIObfuscationSettingType::eOAIObfuscationSettingType OAIObfuscationSettingType::getValue() const {
    return m_value;
}

void OAIObfuscationSettingType::setValue(const OAIObfuscationSettingType::eOAIObfuscationSettingType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIObfuscationSettingType::isSet() const {
    
    return m_value_isSet;
}

bool OAIObfuscationSettingType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
