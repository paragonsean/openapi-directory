/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateUploadUrlResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateUploadUrlResponse::OAICreateUploadUrlResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateUploadUrlResponse::OAICreateUploadUrlResponse() {
    this->initializeModel();
}

OAICreateUploadUrlResponse::~OAICreateUploadUrlResponse() {}

void OAICreateUploadUrlResponse::initializeModel() {

    m_import_id_isSet = false;
    m_import_id_isValid = false;

    m_upload_url_isSet = false;
    m_upload_url_isValid = false;
}

void OAICreateUploadUrlResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateUploadUrlResponse::fromJsonObject(QJsonObject json) {

    m_import_id_isValid = ::OpenAPI::fromJsonValue(m_import_id, json[QString("importId")]);
    m_import_id_isSet = !json[QString("importId")].isNull() && m_import_id_isValid;

    m_upload_url_isValid = ::OpenAPI::fromJsonValue(m_upload_url, json[QString("uploadUrl")]);
    m_upload_url_isSet = !json[QString("uploadUrl")].isNull() && m_upload_url_isValid;
}

QString OAICreateUploadUrlResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateUploadUrlResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_import_id_isSet) {
        obj.insert(QString("importId"), ::OpenAPI::toJsonValue(m_import_id));
    }
    if (m_upload_url_isSet) {
        obj.insert(QString("uploadUrl"), ::OpenAPI::toJsonValue(m_upload_url));
    }
    return obj;
}

QString OAICreateUploadUrlResponse::getImportId() const {
    return m_import_id;
}
void OAICreateUploadUrlResponse::setImportId(const QString &import_id) {
    m_import_id = import_id;
    m_import_id_isSet = true;
}

bool OAICreateUploadUrlResponse::is_import_id_Set() const{
    return m_import_id_isSet;
}

bool OAICreateUploadUrlResponse::is_import_id_Valid() const{
    return m_import_id_isValid;
}

QString OAICreateUploadUrlResponse::getUploadUrl() const {
    return m_upload_url;
}
void OAICreateUploadUrlResponse::setUploadUrl(const QString &upload_url) {
    m_upload_url = upload_url;
    m_upload_url_isSet = true;
}

bool OAICreateUploadUrlResponse::is_upload_url_Set() const{
    return m_upload_url_isSet;
}

bool OAICreateUploadUrlResponse::is_upload_url_Valid() const{
    return m_upload_url_isValid;
}

bool OAICreateUploadUrlResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_import_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upload_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateUploadUrlResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
