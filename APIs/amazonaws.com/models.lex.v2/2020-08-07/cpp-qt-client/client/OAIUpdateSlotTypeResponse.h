/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSlotTypeResponse.h
 *
 * 
 */

#ifndef OAIUpdateSlotTypeResponse_H
#define OAIUpdateSlotTypeResponse_H

#include <QJsonObject>

#include "OAICreateSlotTypeResponse_compositeSlotTypeSetting.h"
#include "OAIExternalSourceSetting.h"
#include "OAIUpdateSlotTypeResponse_valueSelectionSetting.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateSlotTypeResponse_valueSelectionSetting;
class OAIExternalSourceSetting;
class OAICreateSlotTypeResponse_compositeSlotTypeSetting;

class OAIUpdateSlotTypeResponse : public OAIObject {
public:
    OAIUpdateSlotTypeResponse();
    OAIUpdateSlotTypeResponse(QString json);
    ~OAIUpdateSlotTypeResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSlotTypeId() const;
    void setSlotTypeId(const QString &slot_type_id);
    bool is_slot_type_id_Set() const;
    bool is_slot_type_id_Valid() const;

    QString getSlotTypeName() const;
    void setSlotTypeName(const QString &slot_type_name);
    bool is_slot_type_name_Set() const;
    bool is_slot_type_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getSlotTypeValues() const;
    void setSlotTypeValues(const QList &slot_type_values);
    bool is_slot_type_values_Set() const;
    bool is_slot_type_values_Valid() const;

    OAIUpdateSlotTypeResponse_valueSelectionSetting getValueSelectionSetting() const;
    void setValueSelectionSetting(const OAIUpdateSlotTypeResponse_valueSelectionSetting &value_selection_setting);
    bool is_value_selection_setting_Set() const;
    bool is_value_selection_setting_Valid() const;

    QString getParentSlotTypeSignature() const;
    void setParentSlotTypeSignature(const QString &parent_slot_type_signature);
    bool is_parent_slot_type_signature_Set() const;
    bool is_parent_slot_type_signature_Valid() const;

    QString getBotId() const;
    void setBotId(const QString &bot_id);
    bool is_bot_id_Set() const;
    bool is_bot_id_Valid() const;

    QString getBotVersion() const;
    void setBotVersion(const QString &bot_version);
    bool is_bot_version_Set() const;
    bool is_bot_version_Valid() const;

    QString getLocaleId() const;
    void setLocaleId(const QString &locale_id);
    bool is_locale_id_Set() const;
    bool is_locale_id_Valid() const;

    QDateTime getCreationDateTime() const;
    void setCreationDateTime(const QDateTime &creation_date_time);
    bool is_creation_date_time_Set() const;
    bool is_creation_date_time_Valid() const;

    QDateTime getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QDateTime &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    OAIExternalSourceSetting getExternalSourceSetting() const;
    void setExternalSourceSetting(const OAIExternalSourceSetting &external_source_setting);
    bool is_external_source_setting_Set() const;
    bool is_external_source_setting_Valid() const;

    OAICreateSlotTypeResponse_compositeSlotTypeSetting getCompositeSlotTypeSetting() const;
    void setCompositeSlotTypeSetting(const OAICreateSlotTypeResponse_compositeSlotTypeSetting &composite_slot_type_setting);
    bool is_composite_slot_type_setting_Set() const;
    bool is_composite_slot_type_setting_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_slot_type_id;
    bool m_slot_type_id_isSet;
    bool m_slot_type_id_isValid;

    QString m_slot_type_name;
    bool m_slot_type_name_isSet;
    bool m_slot_type_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_slot_type_values;
    bool m_slot_type_values_isSet;
    bool m_slot_type_values_isValid;

    OAIUpdateSlotTypeResponse_valueSelectionSetting m_value_selection_setting;
    bool m_value_selection_setting_isSet;
    bool m_value_selection_setting_isValid;

    QString m_parent_slot_type_signature;
    bool m_parent_slot_type_signature_isSet;
    bool m_parent_slot_type_signature_isValid;

    QString m_bot_id;
    bool m_bot_id_isSet;
    bool m_bot_id_isValid;

    QString m_bot_version;
    bool m_bot_version_isSet;
    bool m_bot_version_isValid;

    QString m_locale_id;
    bool m_locale_id_isSet;
    bool m_locale_id_isValid;

    QDateTime m_creation_date_time;
    bool m_creation_date_time_isSet;
    bool m_creation_date_time_isValid;

    QDateTime m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    OAIExternalSourceSetting m_external_source_setting;
    bool m_external_source_setting_isSet;
    bool m_external_source_setting_isValid;

    OAICreateSlotTypeResponse_compositeSlotTypeSetting m_composite_slot_type_setting;
    bool m_composite_slot_type_setting_isSet;
    bool m_composite_slot_type_setting_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSlotTypeResponse)

#endif // OAIUpdateSlotTypeResponse_H
