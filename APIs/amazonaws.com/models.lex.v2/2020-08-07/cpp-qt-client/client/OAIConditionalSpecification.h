/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConditionalSpecification.h
 *
 * Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.
 */

#ifndef OAIConditionalSpecification_H
#define OAIConditionalSpecification_H

#include <QJsonObject>

#include "OAIConditionalSpecification_defaultBranch.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConditionalSpecification_defaultBranch;

class OAIConditionalSpecification : public OAIObject {
public:
    OAIConditionalSpecification();
    OAIConditionalSpecification(QString json);
    ~OAIConditionalSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QList getConditionalBranches() const;
    void setConditionalBranches(const QList &conditional_branches);
    bool is_conditional_branches_Set() const;
    bool is_conditional_branches_Valid() const;

    OAIConditionalSpecification_defaultBranch getDefaultBranch() const;
    void setDefaultBranch(const OAIConditionalSpecification_defaultBranch &default_branch);
    bool is_default_branch_Set() const;
    bool is_default_branch_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QList m_conditional_branches;
    bool m_conditional_branches_isSet;
    bool m_conditional_branches_isValid;

    OAIConditionalSpecification_defaultBranch m_default_branch;
    bool m_default_branch_isSet;
    bool m_default_branch_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConditionalSpecification)

#endif // OAIConditionalSpecification_H
