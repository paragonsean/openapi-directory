/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateBotLocaleRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateBotLocaleRequest::OAIUpdateBotLocaleRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateBotLocaleRequest::OAIUpdateBotLocaleRequest() {
    this->initializeModel();
}

OAIUpdateBotLocaleRequest::~OAIUpdateBotLocaleRequest() {}

void OAIUpdateBotLocaleRequest::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_nlu_intent_confidence_threshold_isSet = false;
    m_nlu_intent_confidence_threshold_isValid = false;

    m_voice_settings_isSet = false;
    m_voice_settings_isValid = false;
}

void OAIUpdateBotLocaleRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateBotLocaleRequest::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_nlu_intent_confidence_threshold_isValid = ::OpenAPI::fromJsonValue(m_nlu_intent_confidence_threshold, json[QString("nluIntentConfidenceThreshold")]);
    m_nlu_intent_confidence_threshold_isSet = !json[QString("nluIntentConfidenceThreshold")].isNull() && m_nlu_intent_confidence_threshold_isValid;

    m_voice_settings_isValid = ::OpenAPI::fromJsonValue(m_voice_settings, json[QString("voiceSettings")]);
    m_voice_settings_isSet = !json[QString("voiceSettings")].isNull() && m_voice_settings_isValid;
}

QString OAIUpdateBotLocaleRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateBotLocaleRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_nlu_intent_confidence_threshold_isSet) {
        obj.insert(QString("nluIntentConfidenceThreshold"), ::OpenAPI::toJsonValue(m_nlu_intent_confidence_threshold));
    }
    if (m_voice_settings.isSet()) {
        obj.insert(QString("voiceSettings"), ::OpenAPI::toJsonValue(m_voice_settings));
    }
    return obj;
}

QString OAIUpdateBotLocaleRequest::getDescription() const {
    return m_description;
}
void OAIUpdateBotLocaleRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateBotLocaleRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateBotLocaleRequest::is_description_Valid() const{
    return m_description_isValid;
}

double OAIUpdateBotLocaleRequest::getNluIntentConfidenceThreshold() const {
    return m_nlu_intent_confidence_threshold;
}
void OAIUpdateBotLocaleRequest::setNluIntentConfidenceThreshold(const double &nlu_intent_confidence_threshold) {
    m_nlu_intent_confidence_threshold = nlu_intent_confidence_threshold;
    m_nlu_intent_confidence_threshold_isSet = true;
}

bool OAIUpdateBotLocaleRequest::is_nlu_intent_confidence_threshold_Set() const{
    return m_nlu_intent_confidence_threshold_isSet;
}

bool OAIUpdateBotLocaleRequest::is_nlu_intent_confidence_threshold_Valid() const{
    return m_nlu_intent_confidence_threshold_isValid;
}

OAIUpdateBotLocaleRequest_voiceSettings OAIUpdateBotLocaleRequest::getVoiceSettings() const {
    return m_voice_settings;
}
void OAIUpdateBotLocaleRequest::setVoiceSettings(const OAIUpdateBotLocaleRequest_voiceSettings &voice_settings) {
    m_voice_settings = voice_settings;
    m_voice_settings_isSet = true;
}

bool OAIUpdateBotLocaleRequest::is_voice_settings_Set() const{
    return m_voice_settings_isSet;
}

bool OAIUpdateBotLocaleRequest::is_voice_settings_Valid() const{
    return m_voice_settings_isValid;
}

bool OAIUpdateBotLocaleRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nlu_intent_confidence_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateBotLocaleRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_nlu_intent_confidence_threshold_isValid && true;
}

} // namespace OpenAPI
