/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserTurnInputSpecification.h
 *
 * Contains information about the user messages in the turn in the input.
 */

#ifndef OAIUserTurnInputSpecification_H
#define OAIUserTurnInputSpecification_H

#include <QJsonObject>

#include "OAIUserTurnInputSpecification_sessionState.h"
#include "OAIUserTurnInputSpecification_utteranceInput.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserTurnInputSpecification_utteranceInput;
class OAIUserTurnInputSpecification_sessionState;

class OAIUserTurnInputSpecification : public OAIObject {
public:
    OAIUserTurnInputSpecification();
    OAIUserTurnInputSpecification(QString json);
    ~OAIUserTurnInputSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserTurnInputSpecification_utteranceInput getUtteranceInput() const;
    void setUtteranceInput(const OAIUserTurnInputSpecification_utteranceInput &utterance_input);
    bool is_utterance_input_Set() const;
    bool is_utterance_input_Valid() const;

    QMap getRequestAttributes() const;
    void setRequestAttributes(const QMap &request_attributes);
    bool is_request_attributes_Set() const;
    bool is_request_attributes_Valid() const;

    OAIUserTurnInputSpecification_sessionState getSessionState() const;
    void setSessionState(const OAIUserTurnInputSpecification_sessionState &session_state);
    bool is_session_state_Set() const;
    bool is_session_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserTurnInputSpecification_utteranceInput m_utterance_input;
    bool m_utterance_input_isSet;
    bool m_utterance_input_isValid;

    QMap m_request_attributes;
    bool m_request_attributes_isSet;
    bool m_request_attributes_isValid;

    OAIUserTurnInputSpecification_sessionState m_session_state;
    bool m_session_state_isSet;
    bool m_session_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserTurnInputSpecification)

#endif // OAIUserTurnInputSpecification_H
