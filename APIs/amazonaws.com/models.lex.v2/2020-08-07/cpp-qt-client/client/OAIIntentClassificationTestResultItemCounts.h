/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntentClassificationTestResultItemCounts.h
 *
 * The number of items in the intent classification test.
 */

#ifndef OAIIntentClassificationTestResultItemCounts_H
#define OAIIntentClassificationTestResultItemCounts_H

#include <QJsonObject>

#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntentClassificationTestResultItemCounts : public OAIObject {
public:
    OAIIntentClassificationTestResultItemCounts();
    OAIIntentClassificationTestResultItemCounts(QString json);
    ~OAIIntentClassificationTestResultItemCounts() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTotalResultCount() const;
    void setTotalResultCount(const qint32 &total_result_count);
    bool is_total_result_count_Set() const;
    bool is_total_result_count_Valid() const;

    QMap getSpeechTranscriptionResultCounts() const;
    void setSpeechTranscriptionResultCounts(const QMap &speech_transcription_result_counts);
    bool is_speech_transcription_result_counts_Set() const;
    bool is_speech_transcription_result_counts_Valid() const;

    QMap getIntentMatchResultCounts() const;
    void setIntentMatchResultCounts(const QMap &intent_match_result_counts);
    bool is_intent_match_result_counts_Set() const;
    bool is_intent_match_result_counts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_total_result_count;
    bool m_total_result_count_isSet;
    bool m_total_result_count_isValid;

    QMap m_speech_transcription_result_counts;
    bool m_speech_transcription_result_counts_isSet;
    bool m_speech_transcription_result_counts_isValid;

    QMap m_intent_match_result_counts;
    bool m_intent_match_result_counts_isSet;
    bool m_intent_match_result_counts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntentClassificationTestResultItemCounts)

#endif // OAIIntentClassificationTestResultItemCounts_H
