/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateIntent_request_intentConfirmationSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateIntent_request_intentConfirmationSetting::OAICreateIntent_request_intentConfirmationSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateIntent_request_intentConfirmationSetting::OAICreateIntent_request_intentConfirmationSetting() {
    this->initializeModel();
}

OAICreateIntent_request_intentConfirmationSetting::~OAICreateIntent_request_intentConfirmationSetting() {}

void OAICreateIntent_request_intentConfirmationSetting::initializeModel() {

    m_prompt_specification_isSet = false;
    m_prompt_specification_isValid = false;

    m_declination_response_isSet = false;
    m_declination_response_isValid = false;

    m_active_isSet = false;
    m_active_isValid = false;

    m_confirmation_response_isSet = false;
    m_confirmation_response_isValid = false;

    m_confirmation_next_step_isSet = false;
    m_confirmation_next_step_isValid = false;

    m_confirmation_conditional_isSet = false;
    m_confirmation_conditional_isValid = false;

    m_declination_next_step_isSet = false;
    m_declination_next_step_isValid = false;

    m_declination_conditional_isSet = false;
    m_declination_conditional_isValid = false;

    m_failure_response_isSet = false;
    m_failure_response_isValid = false;

    m_failure_next_step_isSet = false;
    m_failure_next_step_isValid = false;

    m_failure_conditional_isSet = false;
    m_failure_conditional_isValid = false;

    m_code_hook_isSet = false;
    m_code_hook_isValid = false;

    m_elicitation_code_hook_isSet = false;
    m_elicitation_code_hook_isValid = false;
}

void OAICreateIntent_request_intentConfirmationSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateIntent_request_intentConfirmationSetting::fromJsonObject(QJsonObject json) {

    m_prompt_specification_isValid = ::OpenAPI::fromJsonValue(m_prompt_specification, json[QString("promptSpecification")]);
    m_prompt_specification_isSet = !json[QString("promptSpecification")].isNull() && m_prompt_specification_isValid;

    m_declination_response_isValid = ::OpenAPI::fromJsonValue(m_declination_response, json[QString("declinationResponse")]);
    m_declination_response_isSet = !json[QString("declinationResponse")].isNull() && m_declination_response_isValid;

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_confirmation_response_isValid = ::OpenAPI::fromJsonValue(m_confirmation_response, json[QString("confirmationResponse")]);
    m_confirmation_response_isSet = !json[QString("confirmationResponse")].isNull() && m_confirmation_response_isValid;

    m_confirmation_next_step_isValid = ::OpenAPI::fromJsonValue(m_confirmation_next_step, json[QString("confirmationNextStep")]);
    m_confirmation_next_step_isSet = !json[QString("confirmationNextStep")].isNull() && m_confirmation_next_step_isValid;

    m_confirmation_conditional_isValid = ::OpenAPI::fromJsonValue(m_confirmation_conditional, json[QString("confirmationConditional")]);
    m_confirmation_conditional_isSet = !json[QString("confirmationConditional")].isNull() && m_confirmation_conditional_isValid;

    m_declination_next_step_isValid = ::OpenAPI::fromJsonValue(m_declination_next_step, json[QString("declinationNextStep")]);
    m_declination_next_step_isSet = !json[QString("declinationNextStep")].isNull() && m_declination_next_step_isValid;

    m_declination_conditional_isValid = ::OpenAPI::fromJsonValue(m_declination_conditional, json[QString("declinationConditional")]);
    m_declination_conditional_isSet = !json[QString("declinationConditional")].isNull() && m_declination_conditional_isValid;

    m_failure_response_isValid = ::OpenAPI::fromJsonValue(m_failure_response, json[QString("failureResponse")]);
    m_failure_response_isSet = !json[QString("failureResponse")].isNull() && m_failure_response_isValid;

    m_failure_next_step_isValid = ::OpenAPI::fromJsonValue(m_failure_next_step, json[QString("failureNextStep")]);
    m_failure_next_step_isSet = !json[QString("failureNextStep")].isNull() && m_failure_next_step_isValid;

    m_failure_conditional_isValid = ::OpenAPI::fromJsonValue(m_failure_conditional, json[QString("failureConditional")]);
    m_failure_conditional_isSet = !json[QString("failureConditional")].isNull() && m_failure_conditional_isValid;

    m_code_hook_isValid = ::OpenAPI::fromJsonValue(m_code_hook, json[QString("codeHook")]);
    m_code_hook_isSet = !json[QString("codeHook")].isNull() && m_code_hook_isValid;

    m_elicitation_code_hook_isValid = ::OpenAPI::fromJsonValue(m_elicitation_code_hook, json[QString("elicitationCodeHook")]);
    m_elicitation_code_hook_isSet = !json[QString("elicitationCodeHook")].isNull() && m_elicitation_code_hook_isValid;
}

QString OAICreateIntent_request_intentConfirmationSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateIntent_request_intentConfirmationSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_prompt_specification.isSet()) {
        obj.insert(QString("promptSpecification"), ::OpenAPI::toJsonValue(m_prompt_specification));
    }
    if (m_declination_response.isSet()) {
        obj.insert(QString("declinationResponse"), ::OpenAPI::toJsonValue(m_declination_response));
    }
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_confirmation_response.isSet()) {
        obj.insert(QString("confirmationResponse"), ::OpenAPI::toJsonValue(m_confirmation_response));
    }
    if (m_confirmation_next_step.isSet()) {
        obj.insert(QString("confirmationNextStep"), ::OpenAPI::toJsonValue(m_confirmation_next_step));
    }
    if (m_confirmation_conditional.isSet()) {
        obj.insert(QString("confirmationConditional"), ::OpenAPI::toJsonValue(m_confirmation_conditional));
    }
    if (m_declination_next_step.isSet()) {
        obj.insert(QString("declinationNextStep"), ::OpenAPI::toJsonValue(m_declination_next_step));
    }
    if (m_declination_conditional.isSet()) {
        obj.insert(QString("declinationConditional"), ::OpenAPI::toJsonValue(m_declination_conditional));
    }
    if (m_failure_response.isSet()) {
        obj.insert(QString("failureResponse"), ::OpenAPI::toJsonValue(m_failure_response));
    }
    if (m_failure_next_step.isSet()) {
        obj.insert(QString("failureNextStep"), ::OpenAPI::toJsonValue(m_failure_next_step));
    }
    if (m_failure_conditional.isSet()) {
        obj.insert(QString("failureConditional"), ::OpenAPI::toJsonValue(m_failure_conditional));
    }
    if (m_code_hook.isSet()) {
        obj.insert(QString("codeHook"), ::OpenAPI::toJsonValue(m_code_hook));
    }
    if (m_elicitation_code_hook.isSet()) {
        obj.insert(QString("elicitationCodeHook"), ::OpenAPI::toJsonValue(m_elicitation_code_hook));
    }
    return obj;
}

OAICreateIntent_request_intentConfirmationSetting_promptSpecification OAICreateIntent_request_intentConfirmationSetting::getPromptSpecification() const {
    return m_prompt_specification;
}
void OAICreateIntent_request_intentConfirmationSetting::setPromptSpecification(const OAICreateIntent_request_intentConfirmationSetting_promptSpecification &prompt_specification) {
    m_prompt_specification = prompt_specification;
    m_prompt_specification_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_prompt_specification_Set() const{
    return m_prompt_specification_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_prompt_specification_Valid() const{
    return m_prompt_specification_isValid;
}

OAICreateIntent_request_intentConfirmationSetting_declinationResponse OAICreateIntent_request_intentConfirmationSetting::getDeclinationResponse() const {
    return m_declination_response;
}
void OAICreateIntent_request_intentConfirmationSetting::setDeclinationResponse(const OAICreateIntent_request_intentConfirmationSetting_declinationResponse &declination_response) {
    m_declination_response = declination_response;
    m_declination_response_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_declination_response_Set() const{
    return m_declination_response_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_declination_response_Valid() const{
    return m_declination_response_isValid;
}

bool OAICreateIntent_request_intentConfirmationSetting::getActive() const {
    return m_active;
}
void OAICreateIntent_request_intentConfirmationSetting::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_active_Set() const{
    return m_active_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_active_Valid() const{
    return m_active_isValid;
}

OAIResponseSpecification OAICreateIntent_request_intentConfirmationSetting::getConfirmationResponse() const {
    return m_confirmation_response;
}
void OAICreateIntent_request_intentConfirmationSetting::setConfirmationResponse(const OAIResponseSpecification &confirmation_response) {
    m_confirmation_response = confirmation_response;
    m_confirmation_response_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_confirmation_response_Set() const{
    return m_confirmation_response_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_confirmation_response_Valid() const{
    return m_confirmation_response_isValid;
}

OAICreateIntent_request_intentConfirmationSetting_confirmationNextStep OAICreateIntent_request_intentConfirmationSetting::getConfirmationNextStep() const {
    return m_confirmation_next_step;
}
void OAICreateIntent_request_intentConfirmationSetting::setConfirmationNextStep(const OAICreateIntent_request_intentConfirmationSetting_confirmationNextStep &confirmation_next_step) {
    m_confirmation_next_step = confirmation_next_step;
    m_confirmation_next_step_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_confirmation_next_step_Set() const{
    return m_confirmation_next_step_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_confirmation_next_step_Valid() const{
    return m_confirmation_next_step_isValid;
}

OAICreateIntent_request_intentConfirmationSetting_confirmationConditional OAICreateIntent_request_intentConfirmationSetting::getConfirmationConditional() const {
    return m_confirmation_conditional;
}
void OAICreateIntent_request_intentConfirmationSetting::setConfirmationConditional(const OAICreateIntent_request_intentConfirmationSetting_confirmationConditional &confirmation_conditional) {
    m_confirmation_conditional = confirmation_conditional;
    m_confirmation_conditional_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_confirmation_conditional_Set() const{
    return m_confirmation_conditional_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_confirmation_conditional_Valid() const{
    return m_confirmation_conditional_isValid;
}

OAICreateIntent_request_intentConfirmationSetting_declinationNextStep OAICreateIntent_request_intentConfirmationSetting::getDeclinationNextStep() const {
    return m_declination_next_step;
}
void OAICreateIntent_request_intentConfirmationSetting::setDeclinationNextStep(const OAICreateIntent_request_intentConfirmationSetting_declinationNextStep &declination_next_step) {
    m_declination_next_step = declination_next_step;
    m_declination_next_step_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_declination_next_step_Set() const{
    return m_declination_next_step_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_declination_next_step_Valid() const{
    return m_declination_next_step_isValid;
}

OAICreateIntent_request_intentConfirmationSetting_declinationConditional OAICreateIntent_request_intentConfirmationSetting::getDeclinationConditional() const {
    return m_declination_conditional;
}
void OAICreateIntent_request_intentConfirmationSetting::setDeclinationConditional(const OAICreateIntent_request_intentConfirmationSetting_declinationConditional &declination_conditional) {
    m_declination_conditional = declination_conditional;
    m_declination_conditional_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_declination_conditional_Set() const{
    return m_declination_conditional_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_declination_conditional_Valid() const{
    return m_declination_conditional_isValid;
}

OAIResponseSpecification OAICreateIntent_request_intentConfirmationSetting::getFailureResponse() const {
    return m_failure_response;
}
void OAICreateIntent_request_intentConfirmationSetting::setFailureResponse(const OAIResponseSpecification &failure_response) {
    m_failure_response = failure_response;
    m_failure_response_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_failure_response_Set() const{
    return m_failure_response_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_failure_response_Valid() const{
    return m_failure_response_isValid;
}

OAICreateIntent_request_intentConfirmationSetting_failureNextStep OAICreateIntent_request_intentConfirmationSetting::getFailureNextStep() const {
    return m_failure_next_step;
}
void OAICreateIntent_request_intentConfirmationSetting::setFailureNextStep(const OAICreateIntent_request_intentConfirmationSetting_failureNextStep &failure_next_step) {
    m_failure_next_step = failure_next_step;
    m_failure_next_step_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_failure_next_step_Set() const{
    return m_failure_next_step_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_failure_next_step_Valid() const{
    return m_failure_next_step_isValid;
}

OAIConditionalSpecification OAICreateIntent_request_intentConfirmationSetting::getFailureConditional() const {
    return m_failure_conditional;
}
void OAICreateIntent_request_intentConfirmationSetting::setFailureConditional(const OAIConditionalSpecification &failure_conditional) {
    m_failure_conditional = failure_conditional;
    m_failure_conditional_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_failure_conditional_Set() const{
    return m_failure_conditional_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_failure_conditional_Valid() const{
    return m_failure_conditional_isValid;
}

OAICreateIntent_request_intentConfirmationSetting_codeHook OAICreateIntent_request_intentConfirmationSetting::getCodeHook() const {
    return m_code_hook;
}
void OAICreateIntent_request_intentConfirmationSetting::setCodeHook(const OAICreateIntent_request_intentConfirmationSetting_codeHook &code_hook) {
    m_code_hook = code_hook;
    m_code_hook_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_code_hook_Set() const{
    return m_code_hook_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_code_hook_Valid() const{
    return m_code_hook_isValid;
}

OAICreateIntent_request_intentConfirmationSetting_elicitationCodeHook OAICreateIntent_request_intentConfirmationSetting::getElicitationCodeHook() const {
    return m_elicitation_code_hook;
}
void OAICreateIntent_request_intentConfirmationSetting::setElicitationCodeHook(const OAICreateIntent_request_intentConfirmationSetting_elicitationCodeHook &elicitation_code_hook) {
    m_elicitation_code_hook = elicitation_code_hook;
    m_elicitation_code_hook_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_elicitation_code_hook_Set() const{
    return m_elicitation_code_hook_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting::is_elicitation_code_hook_Valid() const{
    return m_elicitation_code_hook_isValid;
}

bool OAICreateIntent_request_intentConfirmationSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_prompt_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_declination_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmation_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmation_next_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmation_conditional.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_declination_next_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_declination_conditional.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_next_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_conditional.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_hook.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_elicitation_code_hook.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateIntent_request_intentConfirmationSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
