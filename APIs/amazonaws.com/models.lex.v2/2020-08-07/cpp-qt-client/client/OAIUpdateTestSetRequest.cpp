/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTestSetRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTestSetRequest::OAIUpdateTestSetRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTestSetRequest::OAIUpdateTestSetRequest() {
    this->initializeModel();
}

OAIUpdateTestSetRequest::~OAIUpdateTestSetRequest() {}

void OAIUpdateTestSetRequest::initializeModel() {

    m_test_set_name_isSet = false;
    m_test_set_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIUpdateTestSetRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTestSetRequest::fromJsonObject(QJsonObject json) {

    m_test_set_name_isValid = ::OpenAPI::fromJsonValue(m_test_set_name, json[QString("testSetName")]);
    m_test_set_name_isSet = !json[QString("testSetName")].isNull() && m_test_set_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIUpdateTestSetRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTestSetRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_test_set_name_isSet) {
        obj.insert(QString("testSetName"), ::OpenAPI::toJsonValue(m_test_set_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

QString OAIUpdateTestSetRequest::getTestSetName() const {
    return m_test_set_name;
}
void OAIUpdateTestSetRequest::setTestSetName(const QString &test_set_name) {
    m_test_set_name = test_set_name;
    m_test_set_name_isSet = true;
}

bool OAIUpdateTestSetRequest::is_test_set_name_Set() const{
    return m_test_set_name_isSet;
}

bool OAIUpdateTestSetRequest::is_test_set_name_Valid() const{
    return m_test_set_name_isValid;
}

QString OAIUpdateTestSetRequest::getDescription() const {
    return m_description;
}
void OAIUpdateTestSetRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateTestSetRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateTestSetRequest::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIUpdateTestSetRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_test_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTestSetRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_test_set_name_isValid && true;
}

} // namespace OpenAPI
