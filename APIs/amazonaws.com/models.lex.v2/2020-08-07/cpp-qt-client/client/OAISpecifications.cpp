/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISpecifications.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISpecifications::OAISpecifications(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISpecifications::OAISpecifications() {
    this->initializeModel();
}

OAISpecifications::~OAISpecifications() {}

void OAISpecifications::initializeModel() {

    m_slot_type_id_isSet = false;
    m_slot_type_id_isValid = false;

    m_value_elicitation_setting_isSet = false;
    m_value_elicitation_setting_isValid = false;
}

void OAISpecifications::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISpecifications::fromJsonObject(QJsonObject json) {

    m_slot_type_id_isValid = ::OpenAPI::fromJsonValue(m_slot_type_id, json[QString("slotTypeId")]);
    m_slot_type_id_isSet = !json[QString("slotTypeId")].isNull() && m_slot_type_id_isValid;

    m_value_elicitation_setting_isValid = ::OpenAPI::fromJsonValue(m_value_elicitation_setting, json[QString("valueElicitationSetting")]);
    m_value_elicitation_setting_isSet = !json[QString("valueElicitationSetting")].isNull() && m_value_elicitation_setting_isValid;
}

QString OAISpecifications::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISpecifications::asJsonObject() const {
    QJsonObject obj;
    if (m_slot_type_id_isSet) {
        obj.insert(QString("slotTypeId"), ::OpenAPI::toJsonValue(m_slot_type_id));
    }
    if (m_value_elicitation_setting.isSet()) {
        obj.insert(QString("valueElicitationSetting"), ::OpenAPI::toJsonValue(m_value_elicitation_setting));
    }
    return obj;
}

QString OAISpecifications::getSlotTypeId() const {
    return m_slot_type_id;
}
void OAISpecifications::setSlotTypeId(const QString &slot_type_id) {
    m_slot_type_id = slot_type_id;
    m_slot_type_id_isSet = true;
}

bool OAISpecifications::is_slot_type_id_Set() const{
    return m_slot_type_id_isSet;
}

bool OAISpecifications::is_slot_type_id_Valid() const{
    return m_slot_type_id_isValid;
}

OAISpecifications_valueElicitationSetting OAISpecifications::getValueElicitationSetting() const {
    return m_value_elicitation_setting;
}
void OAISpecifications::setValueElicitationSetting(const OAISpecifications_valueElicitationSetting &value_elicitation_setting) {
    m_value_elicitation_setting = value_elicitation_setting;
    m_value_elicitation_setting_isSet = true;
}

bool OAISpecifications::is_value_elicitation_setting_Set() const{
    return m_value_elicitation_setting_isSet;
}

bool OAISpecifications::is_value_elicitation_setting_Valid() const{
    return m_value_elicitation_setting_isValid;
}

bool OAISpecifications::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_slot_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_elicitation_setting.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISpecifications::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_slot_type_id_isValid && m_value_elicitation_setting_isValid && true;
}

} // namespace OpenAPI
