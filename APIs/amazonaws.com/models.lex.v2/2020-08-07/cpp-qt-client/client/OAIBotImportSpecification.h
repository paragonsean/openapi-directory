/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBotImportSpecification.h
 *
 * Provides the bot parameters required for importing a bot.
 */

#ifndef OAIBotImportSpecification_H
#define OAIBotImportSpecification_H

#include <QJsonObject>

#include "OAIDataPrivacy.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataPrivacy;

class OAIBotImportSpecification : public OAIObject {
public:
    OAIBotImportSpecification();
    OAIBotImportSpecification(QString json);
    ~OAIBotImportSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBotName() const;
    void setBotName(const QString &bot_name);
    bool is_bot_name_Set() const;
    bool is_bot_name_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIDataPrivacy getDataPrivacy() const;
    void setDataPrivacy(const OAIDataPrivacy &data_privacy);
    bool is_data_privacy_Set() const;
    bool is_data_privacy_Valid() const;

    qint32 getIdleSessionTtlinSeconds() const;
    void setIdleSessionTtlinSeconds(const qint32 &idle_session_ttlin_seconds);
    bool is_idle_session_ttlin_seconds_Set() const;
    bool is_idle_session_ttlin_seconds_Valid() const;

    QMap getBotTags() const;
    void setBotTags(const QMap &bot_tags);
    bool is_bot_tags_Set() const;
    bool is_bot_tags_Valid() const;

    QMap getTestBotAliasTags() const;
    void setTestBotAliasTags(const QMap &test_bot_alias_tags);
    bool is_test_bot_alias_tags_Set() const;
    bool is_test_bot_alias_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bot_name;
    bool m_bot_name_isSet;
    bool m_bot_name_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIDataPrivacy m_data_privacy;
    bool m_data_privacy_isSet;
    bool m_data_privacy_isValid;

    qint32 m_idle_session_ttlin_seconds;
    bool m_idle_session_ttlin_seconds_isSet;
    bool m_idle_session_ttlin_seconds_isValid;

    QMap m_bot_tags;
    bool m_bot_tags_isSet;
    bool m_bot_tags_isValid;

    QMap m_test_bot_alias_tags;
    bool m_test_bot_alias_tags_isSet;
    bool m_test_bot_alias_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBotImportSpecification)

#endif // OAIBotImportSpecification_H
