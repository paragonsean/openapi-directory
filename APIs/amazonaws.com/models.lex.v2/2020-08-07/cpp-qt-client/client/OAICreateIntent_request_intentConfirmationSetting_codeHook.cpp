/**
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateIntent_request_intentConfirmationSetting_codeHook.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateIntent_request_intentConfirmationSetting_codeHook::OAICreateIntent_request_intentConfirmationSetting_codeHook(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateIntent_request_intentConfirmationSetting_codeHook::OAICreateIntent_request_intentConfirmationSetting_codeHook() {
    this->initializeModel();
}

OAICreateIntent_request_intentConfirmationSetting_codeHook::~OAICreateIntent_request_intentConfirmationSetting_codeHook() {}

void OAICreateIntent_request_intentConfirmationSetting_codeHook::initializeModel() {

    m_enable_code_hook_invocation_isSet = false;
    m_enable_code_hook_invocation_isValid = false;

    m_active_isSet = false;
    m_active_isValid = false;

    m_invocation_label_isSet = false;
    m_invocation_label_isValid = false;

    m_post_code_hook_specification_isSet = false;
    m_post_code_hook_specification_isValid = false;
}

void OAICreateIntent_request_intentConfirmationSetting_codeHook::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateIntent_request_intentConfirmationSetting_codeHook::fromJsonObject(QJsonObject json) {

    m_enable_code_hook_invocation_isValid = ::OpenAPI::fromJsonValue(m_enable_code_hook_invocation, json[QString("enableCodeHookInvocation")]);
    m_enable_code_hook_invocation_isSet = !json[QString("enableCodeHookInvocation")].isNull() && m_enable_code_hook_invocation_isValid;

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_invocation_label_isValid = ::OpenAPI::fromJsonValue(m_invocation_label, json[QString("invocationLabel")]);
    m_invocation_label_isSet = !json[QString("invocationLabel")].isNull() && m_invocation_label_isValid;

    m_post_code_hook_specification_isValid = ::OpenAPI::fromJsonValue(m_post_code_hook_specification, json[QString("postCodeHookSpecification")]);
    m_post_code_hook_specification_isSet = !json[QString("postCodeHookSpecification")].isNull() && m_post_code_hook_specification_isValid;
}

QString OAICreateIntent_request_intentConfirmationSetting_codeHook::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateIntent_request_intentConfirmationSetting_codeHook::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_code_hook_invocation_isSet) {
        obj.insert(QString("enableCodeHookInvocation"), ::OpenAPI::toJsonValue(m_enable_code_hook_invocation));
    }
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_invocation_label_isSet) {
        obj.insert(QString("invocationLabel"), ::OpenAPI::toJsonValue(m_invocation_label));
    }
    if (m_post_code_hook_specification.isSet()) {
        obj.insert(QString("postCodeHookSpecification"), ::OpenAPI::toJsonValue(m_post_code_hook_specification));
    }
    return obj;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::getEnableCodeHookInvocation() const {
    return m_enable_code_hook_invocation;
}
void OAICreateIntent_request_intentConfirmationSetting_codeHook::setEnableCodeHookInvocation(const bool &enable_code_hook_invocation) {
    m_enable_code_hook_invocation = enable_code_hook_invocation;
    m_enable_code_hook_invocation_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::is_enable_code_hook_invocation_Set() const{
    return m_enable_code_hook_invocation_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::is_enable_code_hook_invocation_Valid() const{
    return m_enable_code_hook_invocation_isValid;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::getActive() const {
    return m_active;
}
void OAICreateIntent_request_intentConfirmationSetting_codeHook::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::is_active_Set() const{
    return m_active_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::is_active_Valid() const{
    return m_active_isValid;
}

QString OAICreateIntent_request_intentConfirmationSetting_codeHook::getInvocationLabel() const {
    return m_invocation_label;
}
void OAICreateIntent_request_intentConfirmationSetting_codeHook::setInvocationLabel(const QString &invocation_label) {
    m_invocation_label = invocation_label;
    m_invocation_label_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::is_invocation_label_Set() const{
    return m_invocation_label_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::is_invocation_label_Valid() const{
    return m_invocation_label_isValid;
}

OAIDialogCodeHookInvocationSetting_postCodeHookSpecification OAICreateIntent_request_intentConfirmationSetting_codeHook::getPostCodeHookSpecification() const {
    return m_post_code_hook_specification;
}
void OAICreateIntent_request_intentConfirmationSetting_codeHook::setPostCodeHookSpecification(const OAIDialogCodeHookInvocationSetting_postCodeHookSpecification &post_code_hook_specification) {
    m_post_code_hook_specification = post_code_hook_specification;
    m_post_code_hook_specification_isSet = true;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::is_post_code_hook_specification_Set() const{
    return m_post_code_hook_specification_isSet;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::is_post_code_hook_specification_Valid() const{
    return m_post_code_hook_specification_isValid;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_code_hook_invocation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invocation_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_code_hook_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateIntent_request_intentConfirmationSetting_codeHook::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enable_code_hook_invocation_isValid && m_active_isValid && m_post_code_hook_specification_isValid && true;
}

} // namespace OpenAPI
