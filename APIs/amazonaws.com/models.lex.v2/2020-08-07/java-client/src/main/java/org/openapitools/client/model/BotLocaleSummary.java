/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.BotLocaleStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Summary information about bot locales returned by the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lexv2/latest/APIReference/API_ListBotLocales.html\&quot;&gt;ListBotLocales&lt;/a&gt; operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BotLocaleSummary {
  public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_LOCALE_NAME = "localeName";
  @SerializedName(SERIALIZED_NAME_LOCALE_NAME)
  private String localeName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_BOT_LOCALE_STATUS = "botLocaleStatus";
  @SerializedName(SERIALIZED_NAME_BOT_LOCALE_STATUS)
  private BotLocaleStatus botLocaleStatus;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_LAST_BUILD_SUBMITTED_DATE_TIME = "lastBuildSubmittedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_BUILD_SUBMITTED_DATE_TIME)
  private OffsetDateTime lastBuildSubmittedDateTime;

  public BotLocaleSummary() {
  }

  public BotLocaleSummary localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * Get localeId
   * @return localeId
   */
  @javax.annotation.Nullable
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public BotLocaleSummary localeName(String localeName) {
    this.localeName = localeName;
    return this;
  }

  /**
   * Get localeName
   * @return localeName
   */
  @javax.annotation.Nullable
  public String getLocaleName() {
    return localeName;
  }

  public void setLocaleName(String localeName) {
    this.localeName = localeName;
  }


  public BotLocaleSummary description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public BotLocaleSummary botLocaleStatus(BotLocaleStatus botLocaleStatus) {
    this.botLocaleStatus = botLocaleStatus;
    return this;
  }

  /**
   * Get botLocaleStatus
   * @return botLocaleStatus
   */
  @javax.annotation.Nullable
  public BotLocaleStatus getBotLocaleStatus() {
    return botLocaleStatus;
  }

  public void setBotLocaleStatus(BotLocaleStatus botLocaleStatus) {
    this.botLocaleStatus = botLocaleStatus;
  }


  public BotLocaleSummary lastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
    return this;
  }

  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }

  public void setLastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }


  public BotLocaleSummary lastBuildSubmittedDateTime(OffsetDateTime lastBuildSubmittedDateTime) {
    this.lastBuildSubmittedDateTime = lastBuildSubmittedDateTime;
    return this;
  }

  /**
   * Get lastBuildSubmittedDateTime
   * @return lastBuildSubmittedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastBuildSubmittedDateTime() {
    return lastBuildSubmittedDateTime;
  }

  public void setLastBuildSubmittedDateTime(OffsetDateTime lastBuildSubmittedDateTime) {
    this.lastBuildSubmittedDateTime = lastBuildSubmittedDateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BotLocaleSummary botLocaleSummary = (BotLocaleSummary) o;
    return Objects.equals(this.localeId, botLocaleSummary.localeId) &&
        Objects.equals(this.localeName, botLocaleSummary.localeName) &&
        Objects.equals(this.description, botLocaleSummary.description) &&
        Objects.equals(this.botLocaleStatus, botLocaleSummary.botLocaleStatus) &&
        Objects.equals(this.lastUpdatedDateTime, botLocaleSummary.lastUpdatedDateTime) &&
        Objects.equals(this.lastBuildSubmittedDateTime, botLocaleSummary.lastBuildSubmittedDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localeId, localeName, description, botLocaleStatus, lastUpdatedDateTime, lastBuildSubmittedDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BotLocaleSummary {\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    localeName: ").append(toIndentedString(localeName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    botLocaleStatus: ").append(toIndentedString(botLocaleStatus)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    lastBuildSubmittedDateTime: ").append(toIndentedString(lastBuildSubmittedDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("localeId");
    openapiFields.add("localeName");
    openapiFields.add("description");
    openapiFields.add("botLocaleStatus");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("lastBuildSubmittedDateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BotLocaleSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BotLocaleSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BotLocaleSummary is not found in the empty JSON string", BotLocaleSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BotLocaleSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BotLocaleSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `localeId`
      if (jsonObj.get("localeId") != null && !jsonObj.get("localeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("localeId"));
      }
      // validate the optional field `localeName`
      if (jsonObj.get("localeName") != null && !jsonObj.get("localeName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("localeName"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `botLocaleStatus`
      if (jsonObj.get("botLocaleStatus") != null && !jsonObj.get("botLocaleStatus").isJsonNull()) {
        BotLocaleStatus.validateJsonElement(jsonObj.get("botLocaleStatus"));
      }
      // validate the optional field `lastUpdatedDateTime`
      if (jsonObj.get("lastUpdatedDateTime") != null && !jsonObj.get("lastUpdatedDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedDateTime"));
      }
      // validate the optional field `lastBuildSubmittedDateTime`
      if (jsonObj.get("lastBuildSubmittedDateTime") != null && !jsonObj.get("lastBuildSubmittedDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastBuildSubmittedDateTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BotLocaleSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BotLocaleSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BotLocaleSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BotLocaleSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<BotLocaleSummary>() {
           @Override
           public void write(JsonWriter out, BotLocaleSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BotLocaleSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BotLocaleSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BotLocaleSummary
   * @throws IOException if the JSON string is invalid with respect to BotLocaleSummary
   */
  public static BotLocaleSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BotLocaleSummary.class);
  }

  /**
   * Convert an instance of BotLocaleSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

