/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.FulfillmentUpdatesSpecificationStartResponse;
import org.openapitools.client.model.FulfillmentUpdatesSpecificationUpdateResponse;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_START_RESPONSE = "startResponse";
  @SerializedName(SERIALIZED_NAME_START_RESPONSE)
  private FulfillmentUpdatesSpecificationStartResponse startResponse;

  public static final String SERIALIZED_NAME_UPDATE_RESPONSE = "updateResponse";
  @SerializedName(SERIALIZED_NAME_UPDATE_RESPONSE)
  private FulfillmentUpdatesSpecificationUpdateResponse updateResponse;

  public static final String SERIALIZED_NAME_TIMEOUT_IN_SECONDS = "timeoutInSeconds";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_IN_SECONDS)
  private Integer timeoutInSeconds;

  public CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification() {
  }

  public CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Get active
   * @return active
   */
  @javax.annotation.Nonnull
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification startResponse(FulfillmentUpdatesSpecificationStartResponse startResponse) {
    this.startResponse = startResponse;
    return this;
  }

  /**
   * Get startResponse
   * @return startResponse
   */
  @javax.annotation.Nullable
  public FulfillmentUpdatesSpecificationStartResponse getStartResponse() {
    return startResponse;
  }

  public void setStartResponse(FulfillmentUpdatesSpecificationStartResponse startResponse) {
    this.startResponse = startResponse;
  }


  public CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification updateResponse(FulfillmentUpdatesSpecificationUpdateResponse updateResponse) {
    this.updateResponse = updateResponse;
    return this;
  }

  /**
   * Get updateResponse
   * @return updateResponse
   */
  @javax.annotation.Nullable
  public FulfillmentUpdatesSpecificationUpdateResponse getUpdateResponse() {
    return updateResponse;
  }

  public void setUpdateResponse(FulfillmentUpdatesSpecificationUpdateResponse updateResponse) {
    this.updateResponse = updateResponse;
  }


  public CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification timeoutInSeconds(Integer timeoutInSeconds) {
    this.timeoutInSeconds = timeoutInSeconds;
    return this;
  }

  /**
   * Get timeoutInSeconds
   * @return timeoutInSeconds
   */
  @javax.annotation.Nullable
  public Integer getTimeoutInSeconds() {
    return timeoutInSeconds;
  }

  public void setTimeoutInSeconds(Integer timeoutInSeconds) {
    this.timeoutInSeconds = timeoutInSeconds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification createIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification = (CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification) o;
    return Objects.equals(this.active, createIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.active) &&
        Objects.equals(this.startResponse, createIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.startResponse) &&
        Objects.equals(this.updateResponse, createIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.updateResponse) &&
        Objects.equals(this.timeoutInSeconds, createIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.timeoutInSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, startResponse, updateResponse, timeoutInSeconds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    startResponse: ").append(toIndentedString(startResponse)).append("\n");
    sb.append("    updateResponse: ").append(toIndentedString(updateResponse)).append("\n");
    sb.append("    timeoutInSeconds: ").append(toIndentedString(timeoutInSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("startResponse");
    openapiFields.add("updateResponse");
    openapiFields.add("timeoutInSeconds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("active");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification is not found in the empty JSON string", CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `active`
      Boolean.validateJsonElement(jsonObj.get("active"));
      // validate the optional field `startResponse`
      if (jsonObj.get("startResponse") != null && !jsonObj.get("startResponse").isJsonNull()) {
        FulfillmentUpdatesSpecificationStartResponse.validateJsonElement(jsonObj.get("startResponse"));
      }
      // validate the optional field `updateResponse`
      if (jsonObj.get("updateResponse") != null && !jsonObj.get("updateResponse").isJsonNull()) {
        FulfillmentUpdatesSpecificationUpdateResponse.validateJsonElement(jsonObj.get("updateResponse"));
      }
      // validate the optional field `timeoutInSeconds`
      if (jsonObj.get("timeoutInSeconds") != null && !jsonObj.get("timeoutInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("timeoutInSeconds"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification>() {
           @Override
           public void write(JsonWriter out, CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification
   * @throws IOException if the JSON string is invalid with respect to CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification
   */
  public static CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.class);
  }

  /**
   * Convert an instance of CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

