/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AggregatedUtterancesFilter;
import org.openapitools.client.model.ListAggregatedUtterancesRequestAggregationDuration;
import org.openapitools.client.model.ListAggregatedUtterancesRequestSortBy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListAggregatedUtterancesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListAggregatedUtterancesRequest {
  public static final String SERIALIZED_NAME_BOT_ALIAS_ID = "botAliasId";
  @SerializedName(SERIALIZED_NAME_BOT_ALIAS_ID)
  private String botAliasId;

  public static final String SERIALIZED_NAME_BOT_VERSION = "botVersion";
  @SerializedName(SERIALIZED_NAME_BOT_VERSION)
  private String botVersion;

  public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_AGGREGATION_DURATION = "aggregationDuration";
  @SerializedName(SERIALIZED_NAME_AGGREGATION_DURATION)
  private ListAggregatedUtterancesRequestAggregationDuration aggregationDuration;

  public static final String SERIALIZED_NAME_SORT_BY = "sortBy";
  @SerializedName(SERIALIZED_NAME_SORT_BY)
  private ListAggregatedUtterancesRequestSortBy sortBy;

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<AggregatedUtterancesFilter> filters = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_RESULTS = "maxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "nextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public ListAggregatedUtterancesRequest() {
  }

  public ListAggregatedUtterancesRequest botAliasId(String botAliasId) {
    this.botAliasId = botAliasId;
    return this;
  }

  /**
   * The identifier of the bot alias associated with this request. If you specify the bot alias, you can&#39;t specify the bot version.
   * @return botAliasId
   */
  @javax.annotation.Nullable
  public String getBotAliasId() {
    return botAliasId;
  }

  public void setBotAliasId(String botAliasId) {
    this.botAliasId = botAliasId;
  }


  public ListAggregatedUtterancesRequest botVersion(String botVersion) {
    this.botVersion = botVersion;
    return this;
  }

  /**
   * The identifier of the bot version associated with this request. If you specify the bot version, you can&#39;t specify the bot alias.
   * @return botVersion
   */
  @javax.annotation.Nullable
  public String getBotVersion() {
    return botVersion;
  }

  public void setBotVersion(String botVersion) {
    this.botVersion = botVersion;
  }


  public ListAggregatedUtterancesRequest localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * The identifier of the language and locale where the utterances were collected. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\&quot;&gt;Supported languages&lt;/a&gt;.
   * @return localeId
   */
  @javax.annotation.Nonnull
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public ListAggregatedUtterancesRequest aggregationDuration(ListAggregatedUtterancesRequestAggregationDuration aggregationDuration) {
    this.aggregationDuration = aggregationDuration;
    return this;
  }

  /**
   * Get aggregationDuration
   * @return aggregationDuration
   */
  @javax.annotation.Nonnull
  public ListAggregatedUtterancesRequestAggregationDuration getAggregationDuration() {
    return aggregationDuration;
  }

  public void setAggregationDuration(ListAggregatedUtterancesRequestAggregationDuration aggregationDuration) {
    this.aggregationDuration = aggregationDuration;
  }


  public ListAggregatedUtterancesRequest sortBy(ListAggregatedUtterancesRequestSortBy sortBy) {
    this.sortBy = sortBy;
    return this;
  }

  /**
   * Get sortBy
   * @return sortBy
   */
  @javax.annotation.Nullable
  public ListAggregatedUtterancesRequestSortBy getSortBy() {
    return sortBy;
  }

  public void setSortBy(ListAggregatedUtterancesRequestSortBy sortBy) {
    this.sortBy = sortBy;
  }


  public ListAggregatedUtterancesRequest filters(List<AggregatedUtterancesFilter> filters) {
    this.filters = filters;
    return this;
  }

  public ListAggregatedUtterancesRequest addFiltersItem(AggregatedUtterancesFilter filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

  /**
   * Provides the specification of a filter used to limit the utterances in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.
   * @return filters
   */
  @javax.annotation.Nullable
  public List<AggregatedUtterancesFilter> getFilters() {
    return filters;
  }

  public void setFilters(List<AggregatedUtterancesFilter> filters) {
    this.filters = filters;
  }


  public ListAggregatedUtterancesRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * The maximum number of utterances to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned. If you don&#39;t specify the &lt;code&gt;maxResults&lt;/code&gt; parameter, 1,000 results are returned.
   * minimum: 1
   * maximum: 1000
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public ListAggregatedUtterancesRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * If the response from the &lt;code&gt;ListAggregatedUtterances&lt;/code&gt; operation contains more results that specified in the &lt;code&gt;maxResults&lt;/code&gt; parameter, a token is returned in the response. Use that token in the &lt;code&gt;nextToken&lt;/code&gt; parameter to return the next page of results.
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListAggregatedUtterancesRequest listAggregatedUtterancesRequest = (ListAggregatedUtterancesRequest) o;
    return Objects.equals(this.botAliasId, listAggregatedUtterancesRequest.botAliasId) &&
        Objects.equals(this.botVersion, listAggregatedUtterancesRequest.botVersion) &&
        Objects.equals(this.localeId, listAggregatedUtterancesRequest.localeId) &&
        Objects.equals(this.aggregationDuration, listAggregatedUtterancesRequest.aggregationDuration) &&
        Objects.equals(this.sortBy, listAggregatedUtterancesRequest.sortBy) &&
        Objects.equals(this.filters, listAggregatedUtterancesRequest.filters) &&
        Objects.equals(this.maxResults, listAggregatedUtterancesRequest.maxResults) &&
        Objects.equals(this.nextToken, listAggregatedUtterancesRequest.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(botAliasId, botVersion, localeId, aggregationDuration, sortBy, filters, maxResults, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListAggregatedUtterancesRequest {\n");
    sb.append("    botAliasId: ").append(toIndentedString(botAliasId)).append("\n");
    sb.append("    botVersion: ").append(toIndentedString(botVersion)).append("\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    aggregationDuration: ").append(toIndentedString(aggregationDuration)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("botAliasId");
    openapiFields.add("botVersion");
    openapiFields.add("localeId");
    openapiFields.add("aggregationDuration");
    openapiFields.add("sortBy");
    openapiFields.add("filters");
    openapiFields.add("maxResults");
    openapiFields.add("nextToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("localeId");
    openapiRequiredFields.add("aggregationDuration");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListAggregatedUtterancesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListAggregatedUtterancesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListAggregatedUtterancesRequest is not found in the empty JSON string", ListAggregatedUtterancesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListAggregatedUtterancesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListAggregatedUtterancesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListAggregatedUtterancesRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("botAliasId") != null && !jsonObj.get("botAliasId").isJsonNull()) && !jsonObj.get("botAliasId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `botAliasId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("botAliasId").toString()));
      }
      if ((jsonObj.get("botVersion") != null && !jsonObj.get("botVersion").isJsonNull()) && !jsonObj.get("botVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `botVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("botVersion").toString()));
      }
      if (!jsonObj.get("localeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localeId").toString()));
      }
      // validate the required field `aggregationDuration`
      ListAggregatedUtterancesRequestAggregationDuration.validateJsonElement(jsonObj.get("aggregationDuration"));
      // validate the optional field `sortBy`
      if (jsonObj.get("sortBy") != null && !jsonObj.get("sortBy").isJsonNull()) {
        ListAggregatedUtterancesRequestSortBy.validateJsonElement(jsonObj.get("sortBy"));
      }
      if (jsonObj.get("filters") != null && !jsonObj.get("filters").isJsonNull()) {
        JsonArray jsonArrayfilters = jsonObj.getAsJsonArray("filters");
        if (jsonArrayfilters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("filters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `filters` to be an array in the JSON string but got `%s`", jsonObj.get("filters").toString()));
          }

          // validate the optional field `filters` (array)
          for (int i = 0; i < jsonArrayfilters.size(); i++) {
            AggregatedUtterancesFilter.validateJsonElement(jsonArrayfilters.get(i));
          };
        }
      }
      if ((jsonObj.get("nextToken") != null && !jsonObj.get("nextToken").isJsonNull()) && !jsonObj.get("nextToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListAggregatedUtterancesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListAggregatedUtterancesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListAggregatedUtterancesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListAggregatedUtterancesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ListAggregatedUtterancesRequest>() {
           @Override
           public void write(JsonWriter out, ListAggregatedUtterancesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListAggregatedUtterancesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListAggregatedUtterancesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListAggregatedUtterancesRequest
   * @throws IOException if the JSON string is invalid with respect to ListAggregatedUtterancesRequest
   */
  public static ListAggregatedUtterancesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListAggregatedUtterancesRequest.class);
  }

  /**
   * Convert an instance of ListAggregatedUtterancesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

