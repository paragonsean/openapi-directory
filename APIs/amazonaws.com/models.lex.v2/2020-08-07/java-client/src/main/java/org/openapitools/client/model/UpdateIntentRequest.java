/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateIntentRequestDialogCodeHook;
import org.openapitools.client.model.CreateIntentRequestFulfillmentCodeHook;
import org.openapitools.client.model.CreateIntentRequestInitialResponseSetting;
import org.openapitools.client.model.CreateIntentRequestIntentClosingSetting;
import org.openapitools.client.model.CreateIntentRequestIntentConfirmationSetting;
import org.openapitools.client.model.CreateIntentRequestKendraConfiguration;
import org.openapitools.client.model.InputContext;
import org.openapitools.client.model.OutputContext;
import org.openapitools.client.model.SampleUtterance;
import org.openapitools.client.model.SlotPriority;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateIntentRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateIntentRequest {
  public static final String SERIALIZED_NAME_INTENT_NAME = "intentName";
  @SerializedName(SERIALIZED_NAME_INTENT_NAME)
  private String intentName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PARENT_INTENT_SIGNATURE = "parentIntentSignature";
  @SerializedName(SERIALIZED_NAME_PARENT_INTENT_SIGNATURE)
  private String parentIntentSignature;

  public static final String SERIALIZED_NAME_SAMPLE_UTTERANCES = "sampleUtterances";
  @SerializedName(SERIALIZED_NAME_SAMPLE_UTTERANCES)
  private List<SampleUtterance> sampleUtterances = new ArrayList<>();

  public static final String SERIALIZED_NAME_DIALOG_CODE_HOOK = "dialogCodeHook";
  @SerializedName(SERIALIZED_NAME_DIALOG_CODE_HOOK)
  private CreateIntentRequestDialogCodeHook dialogCodeHook;

  public static final String SERIALIZED_NAME_FULFILLMENT_CODE_HOOK = "fulfillmentCodeHook";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_CODE_HOOK)
  private CreateIntentRequestFulfillmentCodeHook fulfillmentCodeHook;

  public static final String SERIALIZED_NAME_SLOT_PRIORITIES = "slotPriorities";
  @SerializedName(SERIALIZED_NAME_SLOT_PRIORITIES)
  private List<SlotPriority> slotPriorities = new ArrayList<>();

  public static final String SERIALIZED_NAME_INTENT_CONFIRMATION_SETTING = "intentConfirmationSetting";
  @SerializedName(SERIALIZED_NAME_INTENT_CONFIRMATION_SETTING)
  private CreateIntentRequestIntentConfirmationSetting intentConfirmationSetting;

  public static final String SERIALIZED_NAME_INTENT_CLOSING_SETTING = "intentClosingSetting";
  @SerializedName(SERIALIZED_NAME_INTENT_CLOSING_SETTING)
  private CreateIntentRequestIntentClosingSetting intentClosingSetting;

  public static final String SERIALIZED_NAME_INPUT_CONTEXTS = "inputContexts";
  @SerializedName(SERIALIZED_NAME_INPUT_CONTEXTS)
  private List<InputContext> inputContexts = new ArrayList<>();

  public static final String SERIALIZED_NAME_OUTPUT_CONTEXTS = "outputContexts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONTEXTS)
  private List<OutputContext> outputContexts = new ArrayList<>();

  public static final String SERIALIZED_NAME_KENDRA_CONFIGURATION = "kendraConfiguration";
  @SerializedName(SERIALIZED_NAME_KENDRA_CONFIGURATION)
  private CreateIntentRequestKendraConfiguration kendraConfiguration;

  public static final String SERIALIZED_NAME_INITIAL_RESPONSE_SETTING = "initialResponseSetting";
  @SerializedName(SERIALIZED_NAME_INITIAL_RESPONSE_SETTING)
  private CreateIntentRequestInitialResponseSetting initialResponseSetting;

  public UpdateIntentRequest() {
  }

  public UpdateIntentRequest intentName(String intentName) {
    this.intentName = intentName;
    return this;
  }

  /**
   * The new name for the intent.
   * @return intentName
   */
  @javax.annotation.Nonnull
  public String getIntentName() {
    return intentName;
  }

  public void setIntentName(String intentName) {
    this.intentName = intentName;
  }


  public UpdateIntentRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The new description of the intent.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateIntentRequest parentIntentSignature(String parentIntentSignature) {
    this.parentIntentSignature = parentIntentSignature;
    return this;
  }

  /**
   * The signature of the new built-in intent to use as the parent of this intent.
   * @return parentIntentSignature
   */
  @javax.annotation.Nullable
  public String getParentIntentSignature() {
    return parentIntentSignature;
  }

  public void setParentIntentSignature(String parentIntentSignature) {
    this.parentIntentSignature = parentIntentSignature;
  }


  public UpdateIntentRequest sampleUtterances(List<SampleUtterance> sampleUtterances) {
    this.sampleUtterances = sampleUtterances;
    return this;
  }

  public UpdateIntentRequest addSampleUtterancesItem(SampleUtterance sampleUtterancesItem) {
    if (this.sampleUtterances == null) {
      this.sampleUtterances = new ArrayList<>();
    }
    this.sampleUtterances.add(sampleUtterancesItem);
    return this;
  }

  /**
   * New utterances used to invoke the intent.
   * @return sampleUtterances
   */
  @javax.annotation.Nullable
  public List<SampleUtterance> getSampleUtterances() {
    return sampleUtterances;
  }

  public void setSampleUtterances(List<SampleUtterance> sampleUtterances) {
    this.sampleUtterances = sampleUtterances;
  }


  public UpdateIntentRequest dialogCodeHook(CreateIntentRequestDialogCodeHook dialogCodeHook) {
    this.dialogCodeHook = dialogCodeHook;
    return this;
  }

  /**
   * Get dialogCodeHook
   * @return dialogCodeHook
   */
  @javax.annotation.Nullable
  public CreateIntentRequestDialogCodeHook getDialogCodeHook() {
    return dialogCodeHook;
  }

  public void setDialogCodeHook(CreateIntentRequestDialogCodeHook dialogCodeHook) {
    this.dialogCodeHook = dialogCodeHook;
  }


  public UpdateIntentRequest fulfillmentCodeHook(CreateIntentRequestFulfillmentCodeHook fulfillmentCodeHook) {
    this.fulfillmentCodeHook = fulfillmentCodeHook;
    return this;
  }

  /**
   * Get fulfillmentCodeHook
   * @return fulfillmentCodeHook
   */
  @javax.annotation.Nullable
  public CreateIntentRequestFulfillmentCodeHook getFulfillmentCodeHook() {
    return fulfillmentCodeHook;
  }

  public void setFulfillmentCodeHook(CreateIntentRequestFulfillmentCodeHook fulfillmentCodeHook) {
    this.fulfillmentCodeHook = fulfillmentCodeHook;
  }


  public UpdateIntentRequest slotPriorities(List<SlotPriority> slotPriorities) {
    this.slotPriorities = slotPriorities;
    return this;
  }

  public UpdateIntentRequest addSlotPrioritiesItem(SlotPriority slotPrioritiesItem) {
    if (this.slotPriorities == null) {
      this.slotPriorities = new ArrayList<>();
    }
    this.slotPriorities.add(slotPrioritiesItem);
    return this;
  }

  /**
   * A new list of slots and their priorities that are contained by the intent.
   * @return slotPriorities
   */
  @javax.annotation.Nullable
  public List<SlotPriority> getSlotPriorities() {
    return slotPriorities;
  }

  public void setSlotPriorities(List<SlotPriority> slotPriorities) {
    this.slotPriorities = slotPriorities;
  }


  public UpdateIntentRequest intentConfirmationSetting(CreateIntentRequestIntentConfirmationSetting intentConfirmationSetting) {
    this.intentConfirmationSetting = intentConfirmationSetting;
    return this;
  }

  /**
   * Get intentConfirmationSetting
   * @return intentConfirmationSetting
   */
  @javax.annotation.Nullable
  public CreateIntentRequestIntentConfirmationSetting getIntentConfirmationSetting() {
    return intentConfirmationSetting;
  }

  public void setIntentConfirmationSetting(CreateIntentRequestIntentConfirmationSetting intentConfirmationSetting) {
    this.intentConfirmationSetting = intentConfirmationSetting;
  }


  public UpdateIntentRequest intentClosingSetting(CreateIntentRequestIntentClosingSetting intentClosingSetting) {
    this.intentClosingSetting = intentClosingSetting;
    return this;
  }

  /**
   * Get intentClosingSetting
   * @return intentClosingSetting
   */
  @javax.annotation.Nullable
  public CreateIntentRequestIntentClosingSetting getIntentClosingSetting() {
    return intentClosingSetting;
  }

  public void setIntentClosingSetting(CreateIntentRequestIntentClosingSetting intentClosingSetting) {
    this.intentClosingSetting = intentClosingSetting;
  }


  public UpdateIntentRequest inputContexts(List<InputContext> inputContexts) {
    this.inputContexts = inputContexts;
    return this;
  }

  public UpdateIntentRequest addInputContextsItem(InputContext inputContextsItem) {
    if (this.inputContexts == null) {
      this.inputContexts = new ArrayList<>();
    }
    this.inputContexts.add(inputContextsItem);
    return this;
  }

  /**
   * A new list of contexts that must be active in order for Amazon Lex to consider the intent.
   * @return inputContexts
   */
  @javax.annotation.Nullable
  public List<InputContext> getInputContexts() {
    return inputContexts;
  }

  public void setInputContexts(List<InputContext> inputContexts) {
    this.inputContexts = inputContexts;
  }


  public UpdateIntentRequest outputContexts(List<OutputContext> outputContexts) {
    this.outputContexts = outputContexts;
    return this;
  }

  public UpdateIntentRequest addOutputContextsItem(OutputContext outputContextsItem) {
    if (this.outputContexts == null) {
      this.outputContexts = new ArrayList<>();
    }
    this.outputContexts.add(outputContextsItem);
    return this;
  }

  /**
   * A new list of contexts that Amazon Lex activates when the intent is fulfilled.
   * @return outputContexts
   */
  @javax.annotation.Nullable
  public List<OutputContext> getOutputContexts() {
    return outputContexts;
  }

  public void setOutputContexts(List<OutputContext> outputContexts) {
    this.outputContexts = outputContexts;
  }


  public UpdateIntentRequest kendraConfiguration(CreateIntentRequestKendraConfiguration kendraConfiguration) {
    this.kendraConfiguration = kendraConfiguration;
    return this;
  }

  /**
   * Get kendraConfiguration
   * @return kendraConfiguration
   */
  @javax.annotation.Nullable
  public CreateIntentRequestKendraConfiguration getKendraConfiguration() {
    return kendraConfiguration;
  }

  public void setKendraConfiguration(CreateIntentRequestKendraConfiguration kendraConfiguration) {
    this.kendraConfiguration = kendraConfiguration;
  }


  public UpdateIntentRequest initialResponseSetting(CreateIntentRequestInitialResponseSetting initialResponseSetting) {
    this.initialResponseSetting = initialResponseSetting;
    return this;
  }

  /**
   * Get initialResponseSetting
   * @return initialResponseSetting
   */
  @javax.annotation.Nullable
  public CreateIntentRequestInitialResponseSetting getInitialResponseSetting() {
    return initialResponseSetting;
  }

  public void setInitialResponseSetting(CreateIntentRequestInitialResponseSetting initialResponseSetting) {
    this.initialResponseSetting = initialResponseSetting;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateIntentRequest updateIntentRequest = (UpdateIntentRequest) o;
    return Objects.equals(this.intentName, updateIntentRequest.intentName) &&
        Objects.equals(this.description, updateIntentRequest.description) &&
        Objects.equals(this.parentIntentSignature, updateIntentRequest.parentIntentSignature) &&
        Objects.equals(this.sampleUtterances, updateIntentRequest.sampleUtterances) &&
        Objects.equals(this.dialogCodeHook, updateIntentRequest.dialogCodeHook) &&
        Objects.equals(this.fulfillmentCodeHook, updateIntentRequest.fulfillmentCodeHook) &&
        Objects.equals(this.slotPriorities, updateIntentRequest.slotPriorities) &&
        Objects.equals(this.intentConfirmationSetting, updateIntentRequest.intentConfirmationSetting) &&
        Objects.equals(this.intentClosingSetting, updateIntentRequest.intentClosingSetting) &&
        Objects.equals(this.inputContexts, updateIntentRequest.inputContexts) &&
        Objects.equals(this.outputContexts, updateIntentRequest.outputContexts) &&
        Objects.equals(this.kendraConfiguration, updateIntentRequest.kendraConfiguration) &&
        Objects.equals(this.initialResponseSetting, updateIntentRequest.initialResponseSetting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(intentName, description, parentIntentSignature, sampleUtterances, dialogCodeHook, fulfillmentCodeHook, slotPriorities, intentConfirmationSetting, intentClosingSetting, inputContexts, outputContexts, kendraConfiguration, initialResponseSetting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateIntentRequest {\n");
    sb.append("    intentName: ").append(toIndentedString(intentName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    parentIntentSignature: ").append(toIndentedString(parentIntentSignature)).append("\n");
    sb.append("    sampleUtterances: ").append(toIndentedString(sampleUtterances)).append("\n");
    sb.append("    dialogCodeHook: ").append(toIndentedString(dialogCodeHook)).append("\n");
    sb.append("    fulfillmentCodeHook: ").append(toIndentedString(fulfillmentCodeHook)).append("\n");
    sb.append("    slotPriorities: ").append(toIndentedString(slotPriorities)).append("\n");
    sb.append("    intentConfirmationSetting: ").append(toIndentedString(intentConfirmationSetting)).append("\n");
    sb.append("    intentClosingSetting: ").append(toIndentedString(intentClosingSetting)).append("\n");
    sb.append("    inputContexts: ").append(toIndentedString(inputContexts)).append("\n");
    sb.append("    outputContexts: ").append(toIndentedString(outputContexts)).append("\n");
    sb.append("    kendraConfiguration: ").append(toIndentedString(kendraConfiguration)).append("\n");
    sb.append("    initialResponseSetting: ").append(toIndentedString(initialResponseSetting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("intentName");
    openapiFields.add("description");
    openapiFields.add("parentIntentSignature");
    openapiFields.add("sampleUtterances");
    openapiFields.add("dialogCodeHook");
    openapiFields.add("fulfillmentCodeHook");
    openapiFields.add("slotPriorities");
    openapiFields.add("intentConfirmationSetting");
    openapiFields.add("intentClosingSetting");
    openapiFields.add("inputContexts");
    openapiFields.add("outputContexts");
    openapiFields.add("kendraConfiguration");
    openapiFields.add("initialResponseSetting");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("intentName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateIntentRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateIntentRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateIntentRequest is not found in the empty JSON string", UpdateIntentRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateIntentRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateIntentRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateIntentRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("intentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intentName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("parentIntentSignature") != null && !jsonObj.get("parentIntentSignature").isJsonNull()) && !jsonObj.get("parentIntentSignature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentIntentSignature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentIntentSignature").toString()));
      }
      if (jsonObj.get("sampleUtterances") != null && !jsonObj.get("sampleUtterances").isJsonNull()) {
        JsonArray jsonArraysampleUtterances = jsonObj.getAsJsonArray("sampleUtterances");
        if (jsonArraysampleUtterances != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sampleUtterances").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sampleUtterances` to be an array in the JSON string but got `%s`", jsonObj.get("sampleUtterances").toString()));
          }

          // validate the optional field `sampleUtterances` (array)
          for (int i = 0; i < jsonArraysampleUtterances.size(); i++) {
            SampleUtterance.validateJsonElement(jsonArraysampleUtterances.get(i));
          };
        }
      }
      // validate the optional field `dialogCodeHook`
      if (jsonObj.get("dialogCodeHook") != null && !jsonObj.get("dialogCodeHook").isJsonNull()) {
        CreateIntentRequestDialogCodeHook.validateJsonElement(jsonObj.get("dialogCodeHook"));
      }
      // validate the optional field `fulfillmentCodeHook`
      if (jsonObj.get("fulfillmentCodeHook") != null && !jsonObj.get("fulfillmentCodeHook").isJsonNull()) {
        CreateIntentRequestFulfillmentCodeHook.validateJsonElement(jsonObj.get("fulfillmentCodeHook"));
      }
      if (jsonObj.get("slotPriorities") != null && !jsonObj.get("slotPriorities").isJsonNull()) {
        JsonArray jsonArrayslotPriorities = jsonObj.getAsJsonArray("slotPriorities");
        if (jsonArrayslotPriorities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("slotPriorities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `slotPriorities` to be an array in the JSON string but got `%s`", jsonObj.get("slotPriorities").toString()));
          }

          // validate the optional field `slotPriorities` (array)
          for (int i = 0; i < jsonArrayslotPriorities.size(); i++) {
            SlotPriority.validateJsonElement(jsonArrayslotPriorities.get(i));
          };
        }
      }
      // validate the optional field `intentConfirmationSetting`
      if (jsonObj.get("intentConfirmationSetting") != null && !jsonObj.get("intentConfirmationSetting").isJsonNull()) {
        CreateIntentRequestIntentConfirmationSetting.validateJsonElement(jsonObj.get("intentConfirmationSetting"));
      }
      // validate the optional field `intentClosingSetting`
      if (jsonObj.get("intentClosingSetting") != null && !jsonObj.get("intentClosingSetting").isJsonNull()) {
        CreateIntentRequestIntentClosingSetting.validateJsonElement(jsonObj.get("intentClosingSetting"));
      }
      if (jsonObj.get("inputContexts") != null && !jsonObj.get("inputContexts").isJsonNull()) {
        JsonArray jsonArrayinputContexts = jsonObj.getAsJsonArray("inputContexts");
        if (jsonArrayinputContexts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inputContexts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inputContexts` to be an array in the JSON string but got `%s`", jsonObj.get("inputContexts").toString()));
          }

          // validate the optional field `inputContexts` (array)
          for (int i = 0; i < jsonArrayinputContexts.size(); i++) {
            InputContext.validateJsonElement(jsonArrayinputContexts.get(i));
          };
        }
      }
      if (jsonObj.get("outputContexts") != null && !jsonObj.get("outputContexts").isJsonNull()) {
        JsonArray jsonArrayoutputContexts = jsonObj.getAsJsonArray("outputContexts");
        if (jsonArrayoutputContexts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("outputContexts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `outputContexts` to be an array in the JSON string but got `%s`", jsonObj.get("outputContexts").toString()));
          }

          // validate the optional field `outputContexts` (array)
          for (int i = 0; i < jsonArrayoutputContexts.size(); i++) {
            OutputContext.validateJsonElement(jsonArrayoutputContexts.get(i));
          };
        }
      }
      // validate the optional field `kendraConfiguration`
      if (jsonObj.get("kendraConfiguration") != null && !jsonObj.get("kendraConfiguration").isJsonNull()) {
        CreateIntentRequestKendraConfiguration.validateJsonElement(jsonObj.get("kendraConfiguration"));
      }
      // validate the optional field `initialResponseSetting`
      if (jsonObj.get("initialResponseSetting") != null && !jsonObj.get("initialResponseSetting").isJsonNull()) {
        CreateIntentRequestInitialResponseSetting.validateJsonElement(jsonObj.get("initialResponseSetting"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateIntentRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateIntentRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateIntentRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateIntentRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateIntentRequest>() {
           @Override
           public void write(JsonWriter out, UpdateIntentRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateIntentRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateIntentRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateIntentRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateIntentRequest
   */
  public static UpdateIntentRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateIntentRequest.class);
  }

  /**
   * Convert an instance of UpdateIntentRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

