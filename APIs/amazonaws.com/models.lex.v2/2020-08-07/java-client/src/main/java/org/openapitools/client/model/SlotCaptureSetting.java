/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ResponseSpecification;
import org.openapitools.client.model.SlotCaptureSettingCaptureConditional;
import org.openapitools.client.model.SlotCaptureSettingCaptureNextStep;
import org.openapitools.client.model.SlotCaptureSettingCodeHook;
import org.openapitools.client.model.SlotCaptureSettingElicitationCodeHook;
import org.openapitools.client.model.SlotCaptureSettingFailureConditional;
import org.openapitools.client.model.SlotCaptureSettingFailureNextStep;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Settings used when Amazon Lex successfully captures a slot value from a user.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SlotCaptureSetting {
  public static final String SERIALIZED_NAME_CAPTURE_RESPONSE = "captureResponse";
  @SerializedName(SERIALIZED_NAME_CAPTURE_RESPONSE)
  private ResponseSpecification captureResponse;

  public static final String SERIALIZED_NAME_CAPTURE_NEXT_STEP = "captureNextStep";
  @SerializedName(SERIALIZED_NAME_CAPTURE_NEXT_STEP)
  private SlotCaptureSettingCaptureNextStep captureNextStep;

  public static final String SERIALIZED_NAME_CAPTURE_CONDITIONAL = "captureConditional";
  @SerializedName(SERIALIZED_NAME_CAPTURE_CONDITIONAL)
  private SlotCaptureSettingCaptureConditional captureConditional;

  public static final String SERIALIZED_NAME_FAILURE_RESPONSE = "failureResponse";
  @SerializedName(SERIALIZED_NAME_FAILURE_RESPONSE)
  private ResponseSpecification failureResponse;

  public static final String SERIALIZED_NAME_FAILURE_NEXT_STEP = "failureNextStep";
  @SerializedName(SERIALIZED_NAME_FAILURE_NEXT_STEP)
  private SlotCaptureSettingFailureNextStep failureNextStep;

  public static final String SERIALIZED_NAME_FAILURE_CONDITIONAL = "failureConditional";
  @SerializedName(SERIALIZED_NAME_FAILURE_CONDITIONAL)
  private SlotCaptureSettingFailureConditional failureConditional;

  public static final String SERIALIZED_NAME_CODE_HOOK = "codeHook";
  @SerializedName(SERIALIZED_NAME_CODE_HOOK)
  private SlotCaptureSettingCodeHook codeHook;

  public static final String SERIALIZED_NAME_ELICITATION_CODE_HOOK = "elicitationCodeHook";
  @SerializedName(SERIALIZED_NAME_ELICITATION_CODE_HOOK)
  private SlotCaptureSettingElicitationCodeHook elicitationCodeHook;

  public SlotCaptureSetting() {
  }

  public SlotCaptureSetting captureResponse(ResponseSpecification captureResponse) {
    this.captureResponse = captureResponse;
    return this;
  }

  /**
   * Get captureResponse
   * @return captureResponse
   */
  @javax.annotation.Nullable
  public ResponseSpecification getCaptureResponse() {
    return captureResponse;
  }

  public void setCaptureResponse(ResponseSpecification captureResponse) {
    this.captureResponse = captureResponse;
  }


  public SlotCaptureSetting captureNextStep(SlotCaptureSettingCaptureNextStep captureNextStep) {
    this.captureNextStep = captureNextStep;
    return this;
  }

  /**
   * Get captureNextStep
   * @return captureNextStep
   */
  @javax.annotation.Nullable
  public SlotCaptureSettingCaptureNextStep getCaptureNextStep() {
    return captureNextStep;
  }

  public void setCaptureNextStep(SlotCaptureSettingCaptureNextStep captureNextStep) {
    this.captureNextStep = captureNextStep;
  }


  public SlotCaptureSetting captureConditional(SlotCaptureSettingCaptureConditional captureConditional) {
    this.captureConditional = captureConditional;
    return this;
  }

  /**
   * Get captureConditional
   * @return captureConditional
   */
  @javax.annotation.Nullable
  public SlotCaptureSettingCaptureConditional getCaptureConditional() {
    return captureConditional;
  }

  public void setCaptureConditional(SlotCaptureSettingCaptureConditional captureConditional) {
    this.captureConditional = captureConditional;
  }


  public SlotCaptureSetting failureResponse(ResponseSpecification failureResponse) {
    this.failureResponse = failureResponse;
    return this;
  }

  /**
   * Get failureResponse
   * @return failureResponse
   */
  @javax.annotation.Nullable
  public ResponseSpecification getFailureResponse() {
    return failureResponse;
  }

  public void setFailureResponse(ResponseSpecification failureResponse) {
    this.failureResponse = failureResponse;
  }


  public SlotCaptureSetting failureNextStep(SlotCaptureSettingFailureNextStep failureNextStep) {
    this.failureNextStep = failureNextStep;
    return this;
  }

  /**
   * Get failureNextStep
   * @return failureNextStep
   */
  @javax.annotation.Nullable
  public SlotCaptureSettingFailureNextStep getFailureNextStep() {
    return failureNextStep;
  }

  public void setFailureNextStep(SlotCaptureSettingFailureNextStep failureNextStep) {
    this.failureNextStep = failureNextStep;
  }


  public SlotCaptureSetting failureConditional(SlotCaptureSettingFailureConditional failureConditional) {
    this.failureConditional = failureConditional;
    return this;
  }

  /**
   * Get failureConditional
   * @return failureConditional
   */
  @javax.annotation.Nullable
  public SlotCaptureSettingFailureConditional getFailureConditional() {
    return failureConditional;
  }

  public void setFailureConditional(SlotCaptureSettingFailureConditional failureConditional) {
    this.failureConditional = failureConditional;
  }


  public SlotCaptureSetting codeHook(SlotCaptureSettingCodeHook codeHook) {
    this.codeHook = codeHook;
    return this;
  }

  /**
   * Get codeHook
   * @return codeHook
   */
  @javax.annotation.Nullable
  public SlotCaptureSettingCodeHook getCodeHook() {
    return codeHook;
  }

  public void setCodeHook(SlotCaptureSettingCodeHook codeHook) {
    this.codeHook = codeHook;
  }


  public SlotCaptureSetting elicitationCodeHook(SlotCaptureSettingElicitationCodeHook elicitationCodeHook) {
    this.elicitationCodeHook = elicitationCodeHook;
    return this;
  }

  /**
   * Get elicitationCodeHook
   * @return elicitationCodeHook
   */
  @javax.annotation.Nullable
  public SlotCaptureSettingElicitationCodeHook getElicitationCodeHook() {
    return elicitationCodeHook;
  }

  public void setElicitationCodeHook(SlotCaptureSettingElicitationCodeHook elicitationCodeHook) {
    this.elicitationCodeHook = elicitationCodeHook;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SlotCaptureSetting slotCaptureSetting = (SlotCaptureSetting) o;
    return Objects.equals(this.captureResponse, slotCaptureSetting.captureResponse) &&
        Objects.equals(this.captureNextStep, slotCaptureSetting.captureNextStep) &&
        Objects.equals(this.captureConditional, slotCaptureSetting.captureConditional) &&
        Objects.equals(this.failureResponse, slotCaptureSetting.failureResponse) &&
        Objects.equals(this.failureNextStep, slotCaptureSetting.failureNextStep) &&
        Objects.equals(this.failureConditional, slotCaptureSetting.failureConditional) &&
        Objects.equals(this.codeHook, slotCaptureSetting.codeHook) &&
        Objects.equals(this.elicitationCodeHook, slotCaptureSetting.elicitationCodeHook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(captureResponse, captureNextStep, captureConditional, failureResponse, failureNextStep, failureConditional, codeHook, elicitationCodeHook);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SlotCaptureSetting {\n");
    sb.append("    captureResponse: ").append(toIndentedString(captureResponse)).append("\n");
    sb.append("    captureNextStep: ").append(toIndentedString(captureNextStep)).append("\n");
    sb.append("    captureConditional: ").append(toIndentedString(captureConditional)).append("\n");
    sb.append("    failureResponse: ").append(toIndentedString(failureResponse)).append("\n");
    sb.append("    failureNextStep: ").append(toIndentedString(failureNextStep)).append("\n");
    sb.append("    failureConditional: ").append(toIndentedString(failureConditional)).append("\n");
    sb.append("    codeHook: ").append(toIndentedString(codeHook)).append("\n");
    sb.append("    elicitationCodeHook: ").append(toIndentedString(elicitationCodeHook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("captureResponse");
    openapiFields.add("captureNextStep");
    openapiFields.add("captureConditional");
    openapiFields.add("failureResponse");
    openapiFields.add("failureNextStep");
    openapiFields.add("failureConditional");
    openapiFields.add("codeHook");
    openapiFields.add("elicitationCodeHook");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SlotCaptureSetting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SlotCaptureSetting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SlotCaptureSetting is not found in the empty JSON string", SlotCaptureSetting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SlotCaptureSetting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SlotCaptureSetting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `captureResponse`
      if (jsonObj.get("captureResponse") != null && !jsonObj.get("captureResponse").isJsonNull()) {
        ResponseSpecification.validateJsonElement(jsonObj.get("captureResponse"));
      }
      // validate the optional field `captureNextStep`
      if (jsonObj.get("captureNextStep") != null && !jsonObj.get("captureNextStep").isJsonNull()) {
        SlotCaptureSettingCaptureNextStep.validateJsonElement(jsonObj.get("captureNextStep"));
      }
      // validate the optional field `captureConditional`
      if (jsonObj.get("captureConditional") != null && !jsonObj.get("captureConditional").isJsonNull()) {
        SlotCaptureSettingCaptureConditional.validateJsonElement(jsonObj.get("captureConditional"));
      }
      // validate the optional field `failureResponse`
      if (jsonObj.get("failureResponse") != null && !jsonObj.get("failureResponse").isJsonNull()) {
        ResponseSpecification.validateJsonElement(jsonObj.get("failureResponse"));
      }
      // validate the optional field `failureNextStep`
      if (jsonObj.get("failureNextStep") != null && !jsonObj.get("failureNextStep").isJsonNull()) {
        SlotCaptureSettingFailureNextStep.validateJsonElement(jsonObj.get("failureNextStep"));
      }
      // validate the optional field `failureConditional`
      if (jsonObj.get("failureConditional") != null && !jsonObj.get("failureConditional").isJsonNull()) {
        SlotCaptureSettingFailureConditional.validateJsonElement(jsonObj.get("failureConditional"));
      }
      // validate the optional field `codeHook`
      if (jsonObj.get("codeHook") != null && !jsonObj.get("codeHook").isJsonNull()) {
        SlotCaptureSettingCodeHook.validateJsonElement(jsonObj.get("codeHook"));
      }
      // validate the optional field `elicitationCodeHook`
      if (jsonObj.get("elicitationCodeHook") != null && !jsonObj.get("elicitationCodeHook").isJsonNull()) {
        SlotCaptureSettingElicitationCodeHook.validateJsonElement(jsonObj.get("elicitationCodeHook"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SlotCaptureSetting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SlotCaptureSetting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SlotCaptureSetting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SlotCaptureSetting.class));

       return (TypeAdapter<T>) new TypeAdapter<SlotCaptureSetting>() {
           @Override
           public void write(JsonWriter out, SlotCaptureSetting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SlotCaptureSetting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SlotCaptureSetting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SlotCaptureSetting
   * @throws IOException if the JSON string is invalid with respect to SlotCaptureSetting
   */
  public static SlotCaptureSetting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SlotCaptureSetting.class);
  }

  /**
   * Convert an instance of SlotCaptureSetting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

