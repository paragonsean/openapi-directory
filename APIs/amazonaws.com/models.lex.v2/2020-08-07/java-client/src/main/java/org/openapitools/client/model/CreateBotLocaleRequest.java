/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.UpdateBotLocaleRequestVoiceSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateBotLocaleRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateBotLocaleRequest {
  public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NLU_INTENT_CONFIDENCE_THRESHOLD = "nluIntentConfidenceThreshold";
  @SerializedName(SERIALIZED_NAME_NLU_INTENT_CONFIDENCE_THRESHOLD)
  private Double nluIntentConfidenceThreshold;

  public static final String SERIALIZED_NAME_VOICE_SETTINGS = "voiceSettings";
  @SerializedName(SERIALIZED_NAME_VOICE_SETTINGS)
  private UpdateBotLocaleRequestVoiceSettings voiceSettings;

  public CreateBotLocaleRequest() {
  }

  public CreateBotLocaleRequest localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * The identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\&quot;&gt;Supported languages&lt;/a&gt;.
   * @return localeId
   */
  @javax.annotation.Nonnull
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public CreateBotLocaleRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A description of the bot locale. Use this to help identify the bot locale in lists.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateBotLocaleRequest nluIntentConfidenceThreshold(Double nluIntentConfidenceThreshold) {
    this.nluIntentConfidenceThreshold = nluIntentConfidenceThreshold;
    return this;
  }

  /**
   * &lt;p&gt;Determines the threshold where Amazon Lex will insert the &lt;code&gt;AMAZON.FallbackIntent&lt;/code&gt;, &lt;code&gt;AMAZON.KendraSearchIntent&lt;/code&gt;, or both when returning alternative intents. &lt;code&gt;AMAZON.FallbackIntent&lt;/code&gt; and &lt;code&gt;AMAZON.KendraSearchIntent&lt;/code&gt; are only inserted if they are configured for the bot.&lt;/p&gt; &lt;p&gt;For example, suppose a bot is configured with the confidence threshold of 0.80 and the &lt;code&gt;AMAZON.FallbackIntent&lt;/code&gt;. Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the &lt;code&gt;RecognizeText&lt;/code&gt; operation would be:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;AMAZON.FallbackIntent&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;IntentA&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;IntentB&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;IntentC&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * minimum: 0
   * maximum: 1
   * @return nluIntentConfidenceThreshold
   */
  @javax.annotation.Nonnull
  public Double getNluIntentConfidenceThreshold() {
    return nluIntentConfidenceThreshold;
  }

  public void setNluIntentConfidenceThreshold(Double nluIntentConfidenceThreshold) {
    this.nluIntentConfidenceThreshold = nluIntentConfidenceThreshold;
  }


  public CreateBotLocaleRequest voiceSettings(UpdateBotLocaleRequestVoiceSettings voiceSettings) {
    this.voiceSettings = voiceSettings;
    return this;
  }

  /**
   * Get voiceSettings
   * @return voiceSettings
   */
  @javax.annotation.Nullable
  public UpdateBotLocaleRequestVoiceSettings getVoiceSettings() {
    return voiceSettings;
  }

  public void setVoiceSettings(UpdateBotLocaleRequestVoiceSettings voiceSettings) {
    this.voiceSettings = voiceSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBotLocaleRequest createBotLocaleRequest = (CreateBotLocaleRequest) o;
    return Objects.equals(this.localeId, createBotLocaleRequest.localeId) &&
        Objects.equals(this.description, createBotLocaleRequest.description) &&
        Objects.equals(this.nluIntentConfidenceThreshold, createBotLocaleRequest.nluIntentConfidenceThreshold) &&
        Objects.equals(this.voiceSettings, createBotLocaleRequest.voiceSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localeId, description, nluIntentConfidenceThreshold, voiceSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBotLocaleRequest {\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    nluIntentConfidenceThreshold: ").append(toIndentedString(nluIntentConfidenceThreshold)).append("\n");
    sb.append("    voiceSettings: ").append(toIndentedString(voiceSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("localeId");
    openapiFields.add("description");
    openapiFields.add("nluIntentConfidenceThreshold");
    openapiFields.add("voiceSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("localeId");
    openapiRequiredFields.add("nluIntentConfidenceThreshold");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateBotLocaleRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateBotLocaleRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateBotLocaleRequest is not found in the empty JSON string", CreateBotLocaleRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateBotLocaleRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateBotLocaleRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateBotLocaleRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("localeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localeId").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `voiceSettings`
      if (jsonObj.get("voiceSettings") != null && !jsonObj.get("voiceSettings").isJsonNull()) {
        UpdateBotLocaleRequestVoiceSettings.validateJsonElement(jsonObj.get("voiceSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateBotLocaleRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateBotLocaleRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateBotLocaleRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateBotLocaleRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateBotLocaleRequest>() {
           @Override
           public void write(JsonWriter out, CreateBotLocaleRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateBotLocaleRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateBotLocaleRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateBotLocaleRequest
   * @throws IOException if the JSON string is invalid with respect to CreateBotLocaleRequest
   */
  public static CreateBotLocaleRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateBotLocaleRequest.class);
  }

  /**
   * Convert an instance of CreateBotLocaleRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

