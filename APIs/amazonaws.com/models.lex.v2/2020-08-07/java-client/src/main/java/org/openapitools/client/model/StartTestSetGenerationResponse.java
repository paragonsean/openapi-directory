/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.DescribeTestSetGenerationResponseStorageLocation;
import org.openapitools.client.model.StartTestSetGenerationResponseGenerationDataSource;
import org.openapitools.client.model.TestSetGenerationStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartTestSetGenerationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartTestSetGenerationResponse {
  public static final String SERIALIZED_NAME_TEST_SET_GENERATION_ID = "testSetGenerationId";
  @SerializedName(SERIALIZED_NAME_TEST_SET_GENERATION_ID)
  private String testSetGenerationId;

  public static final String SERIALIZED_NAME_CREATION_DATE_TIME = "creationDateTime";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE_TIME)
  private OffsetDateTime creationDateTime;

  public static final String SERIALIZED_NAME_TEST_SET_GENERATION_STATUS = "testSetGenerationStatus";
  @SerializedName(SERIALIZED_NAME_TEST_SET_GENERATION_STATUS)
  private TestSetGenerationStatus testSetGenerationStatus;

  public static final String SERIALIZED_NAME_TEST_SET_NAME = "testSetName";
  @SerializedName(SERIALIZED_NAME_TEST_SET_NAME)
  private String testSetName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_STORAGE_LOCATION = "storageLocation";
  @SerializedName(SERIALIZED_NAME_STORAGE_LOCATION)
  private DescribeTestSetGenerationResponseStorageLocation storageLocation;

  public static final String SERIALIZED_NAME_GENERATION_DATA_SOURCE = "generationDataSource";
  @SerializedName(SERIALIZED_NAME_GENERATION_DATA_SOURCE)
  private StartTestSetGenerationResponseGenerationDataSource generationDataSource;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_TEST_SET_TAGS = "testSetTags";
  @SerializedName(SERIALIZED_NAME_TEST_SET_TAGS)
  private Map testSetTags;

  public StartTestSetGenerationResponse() {
  }

  public StartTestSetGenerationResponse testSetGenerationId(String testSetGenerationId) {
    this.testSetGenerationId = testSetGenerationId;
    return this;
  }

  /**
   * Get testSetGenerationId
   * @return testSetGenerationId
   */
  @javax.annotation.Nullable
  public String getTestSetGenerationId() {
    return testSetGenerationId;
  }

  public void setTestSetGenerationId(String testSetGenerationId) {
    this.testSetGenerationId = testSetGenerationId;
  }


  public StartTestSetGenerationResponse creationDateTime(OffsetDateTime creationDateTime) {
    this.creationDateTime = creationDateTime;
    return this;
  }

  /**
   * Get creationDateTime
   * @return creationDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDateTime() {
    return creationDateTime;
  }

  public void setCreationDateTime(OffsetDateTime creationDateTime) {
    this.creationDateTime = creationDateTime;
  }


  public StartTestSetGenerationResponse testSetGenerationStatus(TestSetGenerationStatus testSetGenerationStatus) {
    this.testSetGenerationStatus = testSetGenerationStatus;
    return this;
  }

  /**
   * Get testSetGenerationStatus
   * @return testSetGenerationStatus
   */
  @javax.annotation.Nullable
  public TestSetGenerationStatus getTestSetGenerationStatus() {
    return testSetGenerationStatus;
  }

  public void setTestSetGenerationStatus(TestSetGenerationStatus testSetGenerationStatus) {
    this.testSetGenerationStatus = testSetGenerationStatus;
  }


  public StartTestSetGenerationResponse testSetName(String testSetName) {
    this.testSetName = testSetName;
    return this;
  }

  /**
   * Get testSetName
   * @return testSetName
   */
  @javax.annotation.Nullable
  public String getTestSetName() {
    return testSetName;
  }

  public void setTestSetName(String testSetName) {
    this.testSetName = testSetName;
  }


  public StartTestSetGenerationResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public StartTestSetGenerationResponse storageLocation(DescribeTestSetGenerationResponseStorageLocation storageLocation) {
    this.storageLocation = storageLocation;
    return this;
  }

  /**
   * Get storageLocation
   * @return storageLocation
   */
  @javax.annotation.Nullable
  public DescribeTestSetGenerationResponseStorageLocation getStorageLocation() {
    return storageLocation;
  }

  public void setStorageLocation(DescribeTestSetGenerationResponseStorageLocation storageLocation) {
    this.storageLocation = storageLocation;
  }


  public StartTestSetGenerationResponse generationDataSource(StartTestSetGenerationResponseGenerationDataSource generationDataSource) {
    this.generationDataSource = generationDataSource;
    return this;
  }

  /**
   * Get generationDataSource
   * @return generationDataSource
   */
  @javax.annotation.Nullable
  public StartTestSetGenerationResponseGenerationDataSource getGenerationDataSource() {
    return generationDataSource;
  }

  public void setGenerationDataSource(StartTestSetGenerationResponseGenerationDataSource generationDataSource) {
    this.generationDataSource = generationDataSource;
  }


  public StartTestSetGenerationResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public StartTestSetGenerationResponse testSetTags(Map testSetTags) {
    this.testSetTags = testSetTags;
    return this;
  }

  /**
   * Get testSetTags
   * @return testSetTags
   */
  @javax.annotation.Nullable
  public Map getTestSetTags() {
    return testSetTags;
  }

  public void setTestSetTags(Map testSetTags) {
    this.testSetTags = testSetTags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartTestSetGenerationResponse startTestSetGenerationResponse = (StartTestSetGenerationResponse) o;
    return Objects.equals(this.testSetGenerationId, startTestSetGenerationResponse.testSetGenerationId) &&
        Objects.equals(this.creationDateTime, startTestSetGenerationResponse.creationDateTime) &&
        Objects.equals(this.testSetGenerationStatus, startTestSetGenerationResponse.testSetGenerationStatus) &&
        Objects.equals(this.testSetName, startTestSetGenerationResponse.testSetName) &&
        Objects.equals(this.description, startTestSetGenerationResponse.description) &&
        Objects.equals(this.storageLocation, startTestSetGenerationResponse.storageLocation) &&
        Objects.equals(this.generationDataSource, startTestSetGenerationResponse.generationDataSource) &&
        Objects.equals(this.roleArn, startTestSetGenerationResponse.roleArn) &&
        Objects.equals(this.testSetTags, startTestSetGenerationResponse.testSetTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testSetGenerationId, creationDateTime, testSetGenerationStatus, testSetName, description, storageLocation, generationDataSource, roleArn, testSetTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartTestSetGenerationResponse {\n");
    sb.append("    testSetGenerationId: ").append(toIndentedString(testSetGenerationId)).append("\n");
    sb.append("    creationDateTime: ").append(toIndentedString(creationDateTime)).append("\n");
    sb.append("    testSetGenerationStatus: ").append(toIndentedString(testSetGenerationStatus)).append("\n");
    sb.append("    testSetName: ").append(toIndentedString(testSetName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    storageLocation: ").append(toIndentedString(storageLocation)).append("\n");
    sb.append("    generationDataSource: ").append(toIndentedString(generationDataSource)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    testSetTags: ").append(toIndentedString(testSetTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("testSetGenerationId");
    openapiFields.add("creationDateTime");
    openapiFields.add("testSetGenerationStatus");
    openapiFields.add("testSetName");
    openapiFields.add("description");
    openapiFields.add("storageLocation");
    openapiFields.add("generationDataSource");
    openapiFields.add("roleArn");
    openapiFields.add("testSetTags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartTestSetGenerationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartTestSetGenerationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartTestSetGenerationResponse is not found in the empty JSON string", StartTestSetGenerationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartTestSetGenerationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartTestSetGenerationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `testSetGenerationId`
      if (jsonObj.get("testSetGenerationId") != null && !jsonObj.get("testSetGenerationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("testSetGenerationId"));
      }
      // validate the optional field `creationDateTime`
      if (jsonObj.get("creationDateTime") != null && !jsonObj.get("creationDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationDateTime"));
      }
      // validate the optional field `testSetGenerationStatus`
      if (jsonObj.get("testSetGenerationStatus") != null && !jsonObj.get("testSetGenerationStatus").isJsonNull()) {
        TestSetGenerationStatus.validateJsonElement(jsonObj.get("testSetGenerationStatus"));
      }
      // validate the optional field `testSetName`
      if (jsonObj.get("testSetName") != null && !jsonObj.get("testSetName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("testSetName"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `storageLocation`
      if (jsonObj.get("storageLocation") != null && !jsonObj.get("storageLocation").isJsonNull()) {
        DescribeTestSetGenerationResponseStorageLocation.validateJsonElement(jsonObj.get("storageLocation"));
      }
      // validate the optional field `generationDataSource`
      if (jsonObj.get("generationDataSource") != null && !jsonObj.get("generationDataSource").isJsonNull()) {
        StartTestSetGenerationResponseGenerationDataSource.validateJsonElement(jsonObj.get("generationDataSource"));
      }
      // validate the optional field `roleArn`
      if (jsonObj.get("roleArn") != null && !jsonObj.get("roleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("roleArn"));
      }
      // validate the optional field `testSetTags`
      if (jsonObj.get("testSetTags") != null && !jsonObj.get("testSetTags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("testSetTags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartTestSetGenerationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartTestSetGenerationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartTestSetGenerationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartTestSetGenerationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<StartTestSetGenerationResponse>() {
           @Override
           public void write(JsonWriter out, StartTestSetGenerationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartTestSetGenerationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartTestSetGenerationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartTestSetGenerationResponse
   * @throws IOException if the JSON string is invalid with respect to StartTestSetGenerationResponse
   */
  public static StartTestSetGenerationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartTestSetGenerationResponse.class);
  }

  /**
   * Convert an instance of StartTestSetGenerationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

