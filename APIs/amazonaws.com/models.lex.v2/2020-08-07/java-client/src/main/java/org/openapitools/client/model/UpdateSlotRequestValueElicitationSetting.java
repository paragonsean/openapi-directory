/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateSlotRequestValueElicitationSettingDefaultValueSpecification;
import org.openapitools.client.model.CreateSlotRequestValueElicitationSettingPromptSpecification;
import org.openapitools.client.model.CreateSlotRequestValueElicitationSettingSlotCaptureSetting;
import org.openapitools.client.model.SlotConstraint;
import org.openapitools.client.model.WaitAndContinueSpecification;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSlotRequestValueElicitationSetting
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSlotRequestValueElicitationSetting {
  public static final String SERIALIZED_NAME_DEFAULT_VALUE_SPECIFICATION = "defaultValueSpecification";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE_SPECIFICATION)
  private CreateSlotRequestValueElicitationSettingDefaultValueSpecification defaultValueSpecification;

  public static final String SERIALIZED_NAME_SLOT_CONSTRAINT = "slotConstraint";
  @SerializedName(SERIALIZED_NAME_SLOT_CONSTRAINT)
  private SlotConstraint slotConstraint;

  public static final String SERIALIZED_NAME_PROMPT_SPECIFICATION = "promptSpecification";
  @SerializedName(SERIALIZED_NAME_PROMPT_SPECIFICATION)
  private CreateSlotRequestValueElicitationSettingPromptSpecification promptSpecification;

  public static final String SERIALIZED_NAME_SAMPLE_UTTERANCES = "sampleUtterances";
  @SerializedName(SERIALIZED_NAME_SAMPLE_UTTERANCES)
  private List sampleUtterances;

  public static final String SERIALIZED_NAME_WAIT_AND_CONTINUE_SPECIFICATION = "waitAndContinueSpecification";
  @SerializedName(SERIALIZED_NAME_WAIT_AND_CONTINUE_SPECIFICATION)
  private WaitAndContinueSpecification waitAndContinueSpecification;

  public static final String SERIALIZED_NAME_SLOT_CAPTURE_SETTING = "slotCaptureSetting";
  @SerializedName(SERIALIZED_NAME_SLOT_CAPTURE_SETTING)
  private CreateSlotRequestValueElicitationSettingSlotCaptureSetting slotCaptureSetting;

  public UpdateSlotRequestValueElicitationSetting() {
  }

  public UpdateSlotRequestValueElicitationSetting defaultValueSpecification(CreateSlotRequestValueElicitationSettingDefaultValueSpecification defaultValueSpecification) {
    this.defaultValueSpecification = defaultValueSpecification;
    return this;
  }

  /**
   * Get defaultValueSpecification
   * @return defaultValueSpecification
   */
  @javax.annotation.Nullable
  public CreateSlotRequestValueElicitationSettingDefaultValueSpecification getDefaultValueSpecification() {
    return defaultValueSpecification;
  }

  public void setDefaultValueSpecification(CreateSlotRequestValueElicitationSettingDefaultValueSpecification defaultValueSpecification) {
    this.defaultValueSpecification = defaultValueSpecification;
  }


  public UpdateSlotRequestValueElicitationSetting slotConstraint(SlotConstraint slotConstraint) {
    this.slotConstraint = slotConstraint;
    return this;
  }

  /**
   * Get slotConstraint
   * @return slotConstraint
   */
  @javax.annotation.Nonnull
  public SlotConstraint getSlotConstraint() {
    return slotConstraint;
  }

  public void setSlotConstraint(SlotConstraint slotConstraint) {
    this.slotConstraint = slotConstraint;
  }


  public UpdateSlotRequestValueElicitationSetting promptSpecification(CreateSlotRequestValueElicitationSettingPromptSpecification promptSpecification) {
    this.promptSpecification = promptSpecification;
    return this;
  }

  /**
   * Get promptSpecification
   * @return promptSpecification
   */
  @javax.annotation.Nullable
  public CreateSlotRequestValueElicitationSettingPromptSpecification getPromptSpecification() {
    return promptSpecification;
  }

  public void setPromptSpecification(CreateSlotRequestValueElicitationSettingPromptSpecification promptSpecification) {
    this.promptSpecification = promptSpecification;
  }


  public UpdateSlotRequestValueElicitationSetting sampleUtterances(List sampleUtterances) {
    this.sampleUtterances = sampleUtterances;
    return this;
  }

  /**
   * Get sampleUtterances
   * @return sampleUtterances
   */
  @javax.annotation.Nullable
  public List getSampleUtterances() {
    return sampleUtterances;
  }

  public void setSampleUtterances(List sampleUtterances) {
    this.sampleUtterances = sampleUtterances;
  }


  public UpdateSlotRequestValueElicitationSetting waitAndContinueSpecification(WaitAndContinueSpecification waitAndContinueSpecification) {
    this.waitAndContinueSpecification = waitAndContinueSpecification;
    return this;
  }

  /**
   * Get waitAndContinueSpecification
   * @return waitAndContinueSpecification
   */
  @javax.annotation.Nullable
  public WaitAndContinueSpecification getWaitAndContinueSpecification() {
    return waitAndContinueSpecification;
  }

  public void setWaitAndContinueSpecification(WaitAndContinueSpecification waitAndContinueSpecification) {
    this.waitAndContinueSpecification = waitAndContinueSpecification;
  }


  public UpdateSlotRequestValueElicitationSetting slotCaptureSetting(CreateSlotRequestValueElicitationSettingSlotCaptureSetting slotCaptureSetting) {
    this.slotCaptureSetting = slotCaptureSetting;
    return this;
  }

  /**
   * Get slotCaptureSetting
   * @return slotCaptureSetting
   */
  @javax.annotation.Nullable
  public CreateSlotRequestValueElicitationSettingSlotCaptureSetting getSlotCaptureSetting() {
    return slotCaptureSetting;
  }

  public void setSlotCaptureSetting(CreateSlotRequestValueElicitationSettingSlotCaptureSetting slotCaptureSetting) {
    this.slotCaptureSetting = slotCaptureSetting;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSlotRequestValueElicitationSetting updateSlotRequestValueElicitationSetting = (UpdateSlotRequestValueElicitationSetting) o;
    return Objects.equals(this.defaultValueSpecification, updateSlotRequestValueElicitationSetting.defaultValueSpecification) &&
        Objects.equals(this.slotConstraint, updateSlotRequestValueElicitationSetting.slotConstraint) &&
        Objects.equals(this.promptSpecification, updateSlotRequestValueElicitationSetting.promptSpecification) &&
        Objects.equals(this.sampleUtterances, updateSlotRequestValueElicitationSetting.sampleUtterances) &&
        Objects.equals(this.waitAndContinueSpecification, updateSlotRequestValueElicitationSetting.waitAndContinueSpecification) &&
        Objects.equals(this.slotCaptureSetting, updateSlotRequestValueElicitationSetting.slotCaptureSetting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultValueSpecification, slotConstraint, promptSpecification, sampleUtterances, waitAndContinueSpecification, slotCaptureSetting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSlotRequestValueElicitationSetting {\n");
    sb.append("    defaultValueSpecification: ").append(toIndentedString(defaultValueSpecification)).append("\n");
    sb.append("    slotConstraint: ").append(toIndentedString(slotConstraint)).append("\n");
    sb.append("    promptSpecification: ").append(toIndentedString(promptSpecification)).append("\n");
    sb.append("    sampleUtterances: ").append(toIndentedString(sampleUtterances)).append("\n");
    sb.append("    waitAndContinueSpecification: ").append(toIndentedString(waitAndContinueSpecification)).append("\n");
    sb.append("    slotCaptureSetting: ").append(toIndentedString(slotCaptureSetting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultValueSpecification");
    openapiFields.add("slotConstraint");
    openapiFields.add("promptSpecification");
    openapiFields.add("sampleUtterances");
    openapiFields.add("waitAndContinueSpecification");
    openapiFields.add("slotCaptureSetting");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("slotConstraint");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSlotRequestValueElicitationSetting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSlotRequestValueElicitationSetting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSlotRequestValueElicitationSetting is not found in the empty JSON string", UpdateSlotRequestValueElicitationSetting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSlotRequestValueElicitationSetting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSlotRequestValueElicitationSetting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateSlotRequestValueElicitationSetting.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `defaultValueSpecification`
      if (jsonObj.get("defaultValueSpecification") != null && !jsonObj.get("defaultValueSpecification").isJsonNull()) {
        CreateSlotRequestValueElicitationSettingDefaultValueSpecification.validateJsonElement(jsonObj.get("defaultValueSpecification"));
      }
      // validate the required field `slotConstraint`
      SlotConstraint.validateJsonElement(jsonObj.get("slotConstraint"));
      // validate the optional field `promptSpecification`
      if (jsonObj.get("promptSpecification") != null && !jsonObj.get("promptSpecification").isJsonNull()) {
        CreateSlotRequestValueElicitationSettingPromptSpecification.validateJsonElement(jsonObj.get("promptSpecification"));
      }
      // validate the optional field `sampleUtterances`
      if (jsonObj.get("sampleUtterances") != null && !jsonObj.get("sampleUtterances").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("sampleUtterances"));
      }
      // validate the optional field `waitAndContinueSpecification`
      if (jsonObj.get("waitAndContinueSpecification") != null && !jsonObj.get("waitAndContinueSpecification").isJsonNull()) {
        WaitAndContinueSpecification.validateJsonElement(jsonObj.get("waitAndContinueSpecification"));
      }
      // validate the optional field `slotCaptureSetting`
      if (jsonObj.get("slotCaptureSetting") != null && !jsonObj.get("slotCaptureSetting").isJsonNull()) {
        CreateSlotRequestValueElicitationSettingSlotCaptureSetting.validateJsonElement(jsonObj.get("slotCaptureSetting"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSlotRequestValueElicitationSetting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSlotRequestValueElicitationSetting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSlotRequestValueElicitationSetting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSlotRequestValueElicitationSetting.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSlotRequestValueElicitationSetting>() {
           @Override
           public void write(JsonWriter out, UpdateSlotRequestValueElicitationSetting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSlotRequestValueElicitationSetting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSlotRequestValueElicitationSetting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSlotRequestValueElicitationSetting
   * @throws IOException if the JSON string is invalid with respect to UpdateSlotRequestValueElicitationSetting
   */
  public static UpdateSlotRequestValueElicitationSetting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSlotRequestValueElicitationSetting.class);
  }

  /**
   * Convert an instance of UpdateSlotRequestValueElicitationSetting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

