/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UpdateIntentResponseDialogCodeHook;
import org.openapitools.client.model.UpdateIntentResponseFulfillmentCodeHook;
import org.openapitools.client.model.UpdateIntentResponseInitialResponseSetting;
import org.openapitools.client.model.UpdateIntentResponseIntentClosingSetting;
import org.openapitools.client.model.UpdateIntentResponseIntentConfirmationSetting;
import org.openapitools.client.model.UpdateIntentResponseKendraConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateIntentResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateIntentResponse {
  public static final String SERIALIZED_NAME_INTENT_ID = "intentId";
  @SerializedName(SERIALIZED_NAME_INTENT_ID)
  private String intentId;

  public static final String SERIALIZED_NAME_INTENT_NAME = "intentName";
  @SerializedName(SERIALIZED_NAME_INTENT_NAME)
  private String intentName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PARENT_INTENT_SIGNATURE = "parentIntentSignature";
  @SerializedName(SERIALIZED_NAME_PARENT_INTENT_SIGNATURE)
  private String parentIntentSignature;

  public static final String SERIALIZED_NAME_SAMPLE_UTTERANCES = "sampleUtterances";
  @SerializedName(SERIALIZED_NAME_SAMPLE_UTTERANCES)
  private List sampleUtterances;

  public static final String SERIALIZED_NAME_DIALOG_CODE_HOOK = "dialogCodeHook";
  @SerializedName(SERIALIZED_NAME_DIALOG_CODE_HOOK)
  private UpdateIntentResponseDialogCodeHook dialogCodeHook;

  public static final String SERIALIZED_NAME_FULFILLMENT_CODE_HOOK = "fulfillmentCodeHook";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_CODE_HOOK)
  private UpdateIntentResponseFulfillmentCodeHook fulfillmentCodeHook;

  public static final String SERIALIZED_NAME_SLOT_PRIORITIES = "slotPriorities";
  @SerializedName(SERIALIZED_NAME_SLOT_PRIORITIES)
  private List slotPriorities;

  public static final String SERIALIZED_NAME_INTENT_CONFIRMATION_SETTING = "intentConfirmationSetting";
  @SerializedName(SERIALIZED_NAME_INTENT_CONFIRMATION_SETTING)
  private UpdateIntentResponseIntentConfirmationSetting intentConfirmationSetting;

  public static final String SERIALIZED_NAME_INTENT_CLOSING_SETTING = "intentClosingSetting";
  @SerializedName(SERIALIZED_NAME_INTENT_CLOSING_SETTING)
  private UpdateIntentResponseIntentClosingSetting intentClosingSetting;

  public static final String SERIALIZED_NAME_INPUT_CONTEXTS = "inputContexts";
  @SerializedName(SERIALIZED_NAME_INPUT_CONTEXTS)
  private List inputContexts;

  public static final String SERIALIZED_NAME_OUTPUT_CONTEXTS = "outputContexts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONTEXTS)
  private List outputContexts;

  public static final String SERIALIZED_NAME_KENDRA_CONFIGURATION = "kendraConfiguration";
  @SerializedName(SERIALIZED_NAME_KENDRA_CONFIGURATION)
  private UpdateIntentResponseKendraConfiguration kendraConfiguration;

  public static final String SERIALIZED_NAME_BOT_ID = "botId";
  @SerializedName(SERIALIZED_NAME_BOT_ID)
  private String botId;

  public static final String SERIALIZED_NAME_BOT_VERSION = "botVersion";
  @SerializedName(SERIALIZED_NAME_BOT_VERSION)
  private String botVersion;

  public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_CREATION_DATE_TIME = "creationDateTime";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE_TIME)
  private OffsetDateTime creationDateTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_INITIAL_RESPONSE_SETTING = "initialResponseSetting";
  @SerializedName(SERIALIZED_NAME_INITIAL_RESPONSE_SETTING)
  private UpdateIntentResponseInitialResponseSetting initialResponseSetting;

  public UpdateIntentResponse() {
  }

  public UpdateIntentResponse intentId(String intentId) {
    this.intentId = intentId;
    return this;
  }

  /**
   * Get intentId
   * @return intentId
   */
  @javax.annotation.Nullable
  public String getIntentId() {
    return intentId;
  }

  public void setIntentId(String intentId) {
    this.intentId = intentId;
  }


  public UpdateIntentResponse intentName(String intentName) {
    this.intentName = intentName;
    return this;
  }

  /**
   * Get intentName
   * @return intentName
   */
  @javax.annotation.Nullable
  public String getIntentName() {
    return intentName;
  }

  public void setIntentName(String intentName) {
    this.intentName = intentName;
  }


  public UpdateIntentResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateIntentResponse parentIntentSignature(String parentIntentSignature) {
    this.parentIntentSignature = parentIntentSignature;
    return this;
  }

  /**
   * Get parentIntentSignature
   * @return parentIntentSignature
   */
  @javax.annotation.Nullable
  public String getParentIntentSignature() {
    return parentIntentSignature;
  }

  public void setParentIntentSignature(String parentIntentSignature) {
    this.parentIntentSignature = parentIntentSignature;
  }


  public UpdateIntentResponse sampleUtterances(List sampleUtterances) {
    this.sampleUtterances = sampleUtterances;
    return this;
  }

  /**
   * Get sampleUtterances
   * @return sampleUtterances
   */
  @javax.annotation.Nullable
  public List getSampleUtterances() {
    return sampleUtterances;
  }

  public void setSampleUtterances(List sampleUtterances) {
    this.sampleUtterances = sampleUtterances;
  }


  public UpdateIntentResponse dialogCodeHook(UpdateIntentResponseDialogCodeHook dialogCodeHook) {
    this.dialogCodeHook = dialogCodeHook;
    return this;
  }

  /**
   * Get dialogCodeHook
   * @return dialogCodeHook
   */
  @javax.annotation.Nullable
  public UpdateIntentResponseDialogCodeHook getDialogCodeHook() {
    return dialogCodeHook;
  }

  public void setDialogCodeHook(UpdateIntentResponseDialogCodeHook dialogCodeHook) {
    this.dialogCodeHook = dialogCodeHook;
  }


  public UpdateIntentResponse fulfillmentCodeHook(UpdateIntentResponseFulfillmentCodeHook fulfillmentCodeHook) {
    this.fulfillmentCodeHook = fulfillmentCodeHook;
    return this;
  }

  /**
   * Get fulfillmentCodeHook
   * @return fulfillmentCodeHook
   */
  @javax.annotation.Nullable
  public UpdateIntentResponseFulfillmentCodeHook getFulfillmentCodeHook() {
    return fulfillmentCodeHook;
  }

  public void setFulfillmentCodeHook(UpdateIntentResponseFulfillmentCodeHook fulfillmentCodeHook) {
    this.fulfillmentCodeHook = fulfillmentCodeHook;
  }


  public UpdateIntentResponse slotPriorities(List slotPriorities) {
    this.slotPriorities = slotPriorities;
    return this;
  }

  /**
   * Get slotPriorities
   * @return slotPriorities
   */
  @javax.annotation.Nullable
  public List getSlotPriorities() {
    return slotPriorities;
  }

  public void setSlotPriorities(List slotPriorities) {
    this.slotPriorities = slotPriorities;
  }


  public UpdateIntentResponse intentConfirmationSetting(UpdateIntentResponseIntentConfirmationSetting intentConfirmationSetting) {
    this.intentConfirmationSetting = intentConfirmationSetting;
    return this;
  }

  /**
   * Get intentConfirmationSetting
   * @return intentConfirmationSetting
   */
  @javax.annotation.Nullable
  public UpdateIntentResponseIntentConfirmationSetting getIntentConfirmationSetting() {
    return intentConfirmationSetting;
  }

  public void setIntentConfirmationSetting(UpdateIntentResponseIntentConfirmationSetting intentConfirmationSetting) {
    this.intentConfirmationSetting = intentConfirmationSetting;
  }


  public UpdateIntentResponse intentClosingSetting(UpdateIntentResponseIntentClosingSetting intentClosingSetting) {
    this.intentClosingSetting = intentClosingSetting;
    return this;
  }

  /**
   * Get intentClosingSetting
   * @return intentClosingSetting
   */
  @javax.annotation.Nullable
  public UpdateIntentResponseIntentClosingSetting getIntentClosingSetting() {
    return intentClosingSetting;
  }

  public void setIntentClosingSetting(UpdateIntentResponseIntentClosingSetting intentClosingSetting) {
    this.intentClosingSetting = intentClosingSetting;
  }


  public UpdateIntentResponse inputContexts(List inputContexts) {
    this.inputContexts = inputContexts;
    return this;
  }

  /**
   * Get inputContexts
   * @return inputContexts
   */
  @javax.annotation.Nullable
  public List getInputContexts() {
    return inputContexts;
  }

  public void setInputContexts(List inputContexts) {
    this.inputContexts = inputContexts;
  }


  public UpdateIntentResponse outputContexts(List outputContexts) {
    this.outputContexts = outputContexts;
    return this;
  }

  /**
   * Get outputContexts
   * @return outputContexts
   */
  @javax.annotation.Nullable
  public List getOutputContexts() {
    return outputContexts;
  }

  public void setOutputContexts(List outputContexts) {
    this.outputContexts = outputContexts;
  }


  public UpdateIntentResponse kendraConfiguration(UpdateIntentResponseKendraConfiguration kendraConfiguration) {
    this.kendraConfiguration = kendraConfiguration;
    return this;
  }

  /**
   * Get kendraConfiguration
   * @return kendraConfiguration
   */
  @javax.annotation.Nullable
  public UpdateIntentResponseKendraConfiguration getKendraConfiguration() {
    return kendraConfiguration;
  }

  public void setKendraConfiguration(UpdateIntentResponseKendraConfiguration kendraConfiguration) {
    this.kendraConfiguration = kendraConfiguration;
  }


  public UpdateIntentResponse botId(String botId) {
    this.botId = botId;
    return this;
  }

  /**
   * Get botId
   * @return botId
   */
  @javax.annotation.Nullable
  public String getBotId() {
    return botId;
  }

  public void setBotId(String botId) {
    this.botId = botId;
  }


  public UpdateIntentResponse botVersion(String botVersion) {
    this.botVersion = botVersion;
    return this;
  }

  /**
   * Get botVersion
   * @return botVersion
   */
  @javax.annotation.Nullable
  public String getBotVersion() {
    return botVersion;
  }

  public void setBotVersion(String botVersion) {
    this.botVersion = botVersion;
  }


  public UpdateIntentResponse localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * Get localeId
   * @return localeId
   */
  @javax.annotation.Nullable
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public UpdateIntentResponse creationDateTime(OffsetDateTime creationDateTime) {
    this.creationDateTime = creationDateTime;
    return this;
  }

  /**
   * Get creationDateTime
   * @return creationDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDateTime() {
    return creationDateTime;
  }

  public void setCreationDateTime(OffsetDateTime creationDateTime) {
    this.creationDateTime = creationDateTime;
  }


  public UpdateIntentResponse lastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
    return this;
  }

  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }

  public void setLastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }


  public UpdateIntentResponse initialResponseSetting(UpdateIntentResponseInitialResponseSetting initialResponseSetting) {
    this.initialResponseSetting = initialResponseSetting;
    return this;
  }

  /**
   * Get initialResponseSetting
   * @return initialResponseSetting
   */
  @javax.annotation.Nullable
  public UpdateIntentResponseInitialResponseSetting getInitialResponseSetting() {
    return initialResponseSetting;
  }

  public void setInitialResponseSetting(UpdateIntentResponseInitialResponseSetting initialResponseSetting) {
    this.initialResponseSetting = initialResponseSetting;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateIntentResponse updateIntentResponse = (UpdateIntentResponse) o;
    return Objects.equals(this.intentId, updateIntentResponse.intentId) &&
        Objects.equals(this.intentName, updateIntentResponse.intentName) &&
        Objects.equals(this.description, updateIntentResponse.description) &&
        Objects.equals(this.parentIntentSignature, updateIntentResponse.parentIntentSignature) &&
        Objects.equals(this.sampleUtterances, updateIntentResponse.sampleUtterances) &&
        Objects.equals(this.dialogCodeHook, updateIntentResponse.dialogCodeHook) &&
        Objects.equals(this.fulfillmentCodeHook, updateIntentResponse.fulfillmentCodeHook) &&
        Objects.equals(this.slotPriorities, updateIntentResponse.slotPriorities) &&
        Objects.equals(this.intentConfirmationSetting, updateIntentResponse.intentConfirmationSetting) &&
        Objects.equals(this.intentClosingSetting, updateIntentResponse.intentClosingSetting) &&
        Objects.equals(this.inputContexts, updateIntentResponse.inputContexts) &&
        Objects.equals(this.outputContexts, updateIntentResponse.outputContexts) &&
        Objects.equals(this.kendraConfiguration, updateIntentResponse.kendraConfiguration) &&
        Objects.equals(this.botId, updateIntentResponse.botId) &&
        Objects.equals(this.botVersion, updateIntentResponse.botVersion) &&
        Objects.equals(this.localeId, updateIntentResponse.localeId) &&
        Objects.equals(this.creationDateTime, updateIntentResponse.creationDateTime) &&
        Objects.equals(this.lastUpdatedDateTime, updateIntentResponse.lastUpdatedDateTime) &&
        Objects.equals(this.initialResponseSetting, updateIntentResponse.initialResponseSetting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(intentId, intentName, description, parentIntentSignature, sampleUtterances, dialogCodeHook, fulfillmentCodeHook, slotPriorities, intentConfirmationSetting, intentClosingSetting, inputContexts, outputContexts, kendraConfiguration, botId, botVersion, localeId, creationDateTime, lastUpdatedDateTime, initialResponseSetting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateIntentResponse {\n");
    sb.append("    intentId: ").append(toIndentedString(intentId)).append("\n");
    sb.append("    intentName: ").append(toIndentedString(intentName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    parentIntentSignature: ").append(toIndentedString(parentIntentSignature)).append("\n");
    sb.append("    sampleUtterances: ").append(toIndentedString(sampleUtterances)).append("\n");
    sb.append("    dialogCodeHook: ").append(toIndentedString(dialogCodeHook)).append("\n");
    sb.append("    fulfillmentCodeHook: ").append(toIndentedString(fulfillmentCodeHook)).append("\n");
    sb.append("    slotPriorities: ").append(toIndentedString(slotPriorities)).append("\n");
    sb.append("    intentConfirmationSetting: ").append(toIndentedString(intentConfirmationSetting)).append("\n");
    sb.append("    intentClosingSetting: ").append(toIndentedString(intentClosingSetting)).append("\n");
    sb.append("    inputContexts: ").append(toIndentedString(inputContexts)).append("\n");
    sb.append("    outputContexts: ").append(toIndentedString(outputContexts)).append("\n");
    sb.append("    kendraConfiguration: ").append(toIndentedString(kendraConfiguration)).append("\n");
    sb.append("    botId: ").append(toIndentedString(botId)).append("\n");
    sb.append("    botVersion: ").append(toIndentedString(botVersion)).append("\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    creationDateTime: ").append(toIndentedString(creationDateTime)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    initialResponseSetting: ").append(toIndentedString(initialResponseSetting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("intentId");
    openapiFields.add("intentName");
    openapiFields.add("description");
    openapiFields.add("parentIntentSignature");
    openapiFields.add("sampleUtterances");
    openapiFields.add("dialogCodeHook");
    openapiFields.add("fulfillmentCodeHook");
    openapiFields.add("slotPriorities");
    openapiFields.add("intentConfirmationSetting");
    openapiFields.add("intentClosingSetting");
    openapiFields.add("inputContexts");
    openapiFields.add("outputContexts");
    openapiFields.add("kendraConfiguration");
    openapiFields.add("botId");
    openapiFields.add("botVersion");
    openapiFields.add("localeId");
    openapiFields.add("creationDateTime");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("initialResponseSetting");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateIntentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateIntentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateIntentResponse is not found in the empty JSON string", UpdateIntentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateIntentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateIntentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `intentId`
      if (jsonObj.get("intentId") != null && !jsonObj.get("intentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("intentId"));
      }
      // validate the optional field `intentName`
      if (jsonObj.get("intentName") != null && !jsonObj.get("intentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("intentName"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `parentIntentSignature`
      if (jsonObj.get("parentIntentSignature") != null && !jsonObj.get("parentIntentSignature").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("parentIntentSignature"));
      }
      // validate the optional field `sampleUtterances`
      if (jsonObj.get("sampleUtterances") != null && !jsonObj.get("sampleUtterances").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("sampleUtterances"));
      }
      // validate the optional field `dialogCodeHook`
      if (jsonObj.get("dialogCodeHook") != null && !jsonObj.get("dialogCodeHook").isJsonNull()) {
        UpdateIntentResponseDialogCodeHook.validateJsonElement(jsonObj.get("dialogCodeHook"));
      }
      // validate the optional field `fulfillmentCodeHook`
      if (jsonObj.get("fulfillmentCodeHook") != null && !jsonObj.get("fulfillmentCodeHook").isJsonNull()) {
        UpdateIntentResponseFulfillmentCodeHook.validateJsonElement(jsonObj.get("fulfillmentCodeHook"));
      }
      // validate the optional field `slotPriorities`
      if (jsonObj.get("slotPriorities") != null && !jsonObj.get("slotPriorities").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("slotPriorities"));
      }
      // validate the optional field `intentConfirmationSetting`
      if (jsonObj.get("intentConfirmationSetting") != null && !jsonObj.get("intentConfirmationSetting").isJsonNull()) {
        UpdateIntentResponseIntentConfirmationSetting.validateJsonElement(jsonObj.get("intentConfirmationSetting"));
      }
      // validate the optional field `intentClosingSetting`
      if (jsonObj.get("intentClosingSetting") != null && !jsonObj.get("intentClosingSetting").isJsonNull()) {
        UpdateIntentResponseIntentClosingSetting.validateJsonElement(jsonObj.get("intentClosingSetting"));
      }
      // validate the optional field `inputContexts`
      if (jsonObj.get("inputContexts") != null && !jsonObj.get("inputContexts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("inputContexts"));
      }
      // validate the optional field `outputContexts`
      if (jsonObj.get("outputContexts") != null && !jsonObj.get("outputContexts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("outputContexts"));
      }
      // validate the optional field `kendraConfiguration`
      if (jsonObj.get("kendraConfiguration") != null && !jsonObj.get("kendraConfiguration").isJsonNull()) {
        UpdateIntentResponseKendraConfiguration.validateJsonElement(jsonObj.get("kendraConfiguration"));
      }
      // validate the optional field `botId`
      if (jsonObj.get("botId") != null && !jsonObj.get("botId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botId"));
      }
      // validate the optional field `botVersion`
      if (jsonObj.get("botVersion") != null && !jsonObj.get("botVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botVersion"));
      }
      // validate the optional field `localeId`
      if (jsonObj.get("localeId") != null && !jsonObj.get("localeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("localeId"));
      }
      // validate the optional field `creationDateTime`
      if (jsonObj.get("creationDateTime") != null && !jsonObj.get("creationDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationDateTime"));
      }
      // validate the optional field `lastUpdatedDateTime`
      if (jsonObj.get("lastUpdatedDateTime") != null && !jsonObj.get("lastUpdatedDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedDateTime"));
      }
      // validate the optional field `initialResponseSetting`
      if (jsonObj.get("initialResponseSetting") != null && !jsonObj.get("initialResponseSetting").isJsonNull()) {
        UpdateIntentResponseInitialResponseSetting.validateJsonElement(jsonObj.get("initialResponseSetting"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateIntentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateIntentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateIntentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateIntentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateIntentResponse>() {
           @Override
           public void write(JsonWriter out, UpdateIntentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateIntentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateIntentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateIntentResponse
   * @throws IOException if the JSON string is invalid with respect to UpdateIntentResponse
   */
  public static UpdateIntentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateIntentResponse.class);
  }

  /**
   * Convert an instance of UpdateIntentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

