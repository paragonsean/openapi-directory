/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AnalyticsModality;
import org.openapitools.client.model.ConversationEndState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An object containing information about a specific session.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SessionSpecification {
  public static final String SERIALIZED_NAME_BOT_ALIAS_ID = "botAliasId";
  @SerializedName(SERIALIZED_NAME_BOT_ALIAS_ID)
  private String botAliasId;

  public static final String SERIALIZED_NAME_BOT_VERSION = "botVersion";
  @SerializedName(SERIALIZED_NAME_BOT_VERSION)
  private String botVersion;

  public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_SESSION_ID = "sessionId";
  @SerializedName(SERIALIZED_NAME_SESSION_ID)
  private String sessionId;

  public static final String SERIALIZED_NAME_CONVERSATION_START_TIME = "conversationStartTime";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_START_TIME)
  private OffsetDateTime conversationStartTime;

  public static final String SERIALIZED_NAME_CONVERSATION_END_TIME = "conversationEndTime";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_END_TIME)
  private OffsetDateTime conversationEndTime;

  public static final String SERIALIZED_NAME_CONVERSATION_DURATION_SECONDS = "conversationDurationSeconds";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_DURATION_SECONDS)
  private Integer conversationDurationSeconds;

  public static final String SERIALIZED_NAME_CONVERSATION_END_STATE = "conversationEndState";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_END_STATE)
  private ConversationEndState conversationEndState;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private AnalyticsModality mode;

  public static final String SERIALIZED_NAME_NUMBER_OF_TURNS = "numberOfTurns";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_TURNS)
  private Integer numberOfTurns;

  public static final String SERIALIZED_NAME_INVOKED_INTENT_SAMPLES = "invokedIntentSamples";
  @SerializedName(SERIALIZED_NAME_INVOKED_INTENT_SAMPLES)
  private List invokedIntentSamples;

  public static final String SERIALIZED_NAME_ORIGINATING_REQUEST_ID = "originatingRequestId";
  @SerializedName(SERIALIZED_NAME_ORIGINATING_REQUEST_ID)
  private String originatingRequestId;

  public SessionSpecification() {
  }

  public SessionSpecification botAliasId(String botAliasId) {
    this.botAliasId = botAliasId;
    return this;
  }

  /**
   * Get botAliasId
   * @return botAliasId
   */
  @javax.annotation.Nullable
  public String getBotAliasId() {
    return botAliasId;
  }

  public void setBotAliasId(String botAliasId) {
    this.botAliasId = botAliasId;
  }


  public SessionSpecification botVersion(String botVersion) {
    this.botVersion = botVersion;
    return this;
  }

  /**
   * Get botVersion
   * @return botVersion
   */
  @javax.annotation.Nullable
  public String getBotVersion() {
    return botVersion;
  }

  public void setBotVersion(String botVersion) {
    this.botVersion = botVersion;
  }


  public SessionSpecification localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * Get localeId
   * @return localeId
   */
  @javax.annotation.Nullable
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public SessionSpecification channel(String channel) {
    this.channel = channel;
    return this;
  }

  /**
   * Get channel
   * @return channel
   */
  @javax.annotation.Nullable
  public String getChannel() {
    return channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }


  public SessionSpecification sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nullable
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }


  public SessionSpecification conversationStartTime(OffsetDateTime conversationStartTime) {
    this.conversationStartTime = conversationStartTime;
    return this;
  }

  /**
   * Get conversationStartTime
   * @return conversationStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getConversationStartTime() {
    return conversationStartTime;
  }

  public void setConversationStartTime(OffsetDateTime conversationStartTime) {
    this.conversationStartTime = conversationStartTime;
  }


  public SessionSpecification conversationEndTime(OffsetDateTime conversationEndTime) {
    this.conversationEndTime = conversationEndTime;
    return this;
  }

  /**
   * Get conversationEndTime
   * @return conversationEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getConversationEndTime() {
    return conversationEndTime;
  }

  public void setConversationEndTime(OffsetDateTime conversationEndTime) {
    this.conversationEndTime = conversationEndTime;
  }


  public SessionSpecification conversationDurationSeconds(Integer conversationDurationSeconds) {
    this.conversationDurationSeconds = conversationDurationSeconds;
    return this;
  }

  /**
   * Get conversationDurationSeconds
   * @return conversationDurationSeconds
   */
  @javax.annotation.Nullable
  public Integer getConversationDurationSeconds() {
    return conversationDurationSeconds;
  }

  public void setConversationDurationSeconds(Integer conversationDurationSeconds) {
    this.conversationDurationSeconds = conversationDurationSeconds;
  }


  public SessionSpecification conversationEndState(ConversationEndState conversationEndState) {
    this.conversationEndState = conversationEndState;
    return this;
  }

  /**
   * Get conversationEndState
   * @return conversationEndState
   */
  @javax.annotation.Nullable
  public ConversationEndState getConversationEndState() {
    return conversationEndState;
  }

  public void setConversationEndState(ConversationEndState conversationEndState) {
    this.conversationEndState = conversationEndState;
  }


  public SessionSpecification mode(AnalyticsModality mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public AnalyticsModality getMode() {
    return mode;
  }

  public void setMode(AnalyticsModality mode) {
    this.mode = mode;
  }


  public SessionSpecification numberOfTurns(Integer numberOfTurns) {
    this.numberOfTurns = numberOfTurns;
    return this;
  }

  /**
   * Get numberOfTurns
   * @return numberOfTurns
   */
  @javax.annotation.Nullable
  public Integer getNumberOfTurns() {
    return numberOfTurns;
  }

  public void setNumberOfTurns(Integer numberOfTurns) {
    this.numberOfTurns = numberOfTurns;
  }


  public SessionSpecification invokedIntentSamples(List invokedIntentSamples) {
    this.invokedIntentSamples = invokedIntentSamples;
    return this;
  }

  /**
   * Get invokedIntentSamples
   * @return invokedIntentSamples
   */
  @javax.annotation.Nullable
  public List getInvokedIntentSamples() {
    return invokedIntentSamples;
  }

  public void setInvokedIntentSamples(List invokedIntentSamples) {
    this.invokedIntentSamples = invokedIntentSamples;
  }


  public SessionSpecification originatingRequestId(String originatingRequestId) {
    this.originatingRequestId = originatingRequestId;
    return this;
  }

  /**
   * Get originatingRequestId
   * @return originatingRequestId
   */
  @javax.annotation.Nullable
  public String getOriginatingRequestId() {
    return originatingRequestId;
  }

  public void setOriginatingRequestId(String originatingRequestId) {
    this.originatingRequestId = originatingRequestId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionSpecification sessionSpecification = (SessionSpecification) o;
    return Objects.equals(this.botAliasId, sessionSpecification.botAliasId) &&
        Objects.equals(this.botVersion, sessionSpecification.botVersion) &&
        Objects.equals(this.localeId, sessionSpecification.localeId) &&
        Objects.equals(this.channel, sessionSpecification.channel) &&
        Objects.equals(this.sessionId, sessionSpecification.sessionId) &&
        Objects.equals(this.conversationStartTime, sessionSpecification.conversationStartTime) &&
        Objects.equals(this.conversationEndTime, sessionSpecification.conversationEndTime) &&
        Objects.equals(this.conversationDurationSeconds, sessionSpecification.conversationDurationSeconds) &&
        Objects.equals(this.conversationEndState, sessionSpecification.conversationEndState) &&
        Objects.equals(this.mode, sessionSpecification.mode) &&
        Objects.equals(this.numberOfTurns, sessionSpecification.numberOfTurns) &&
        Objects.equals(this.invokedIntentSamples, sessionSpecification.invokedIntentSamples) &&
        Objects.equals(this.originatingRequestId, sessionSpecification.originatingRequestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(botAliasId, botVersion, localeId, channel, sessionId, conversationStartTime, conversationEndTime, conversationDurationSeconds, conversationEndState, mode, numberOfTurns, invokedIntentSamples, originatingRequestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionSpecification {\n");
    sb.append("    botAliasId: ").append(toIndentedString(botAliasId)).append("\n");
    sb.append("    botVersion: ").append(toIndentedString(botVersion)).append("\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    conversationStartTime: ").append(toIndentedString(conversationStartTime)).append("\n");
    sb.append("    conversationEndTime: ").append(toIndentedString(conversationEndTime)).append("\n");
    sb.append("    conversationDurationSeconds: ").append(toIndentedString(conversationDurationSeconds)).append("\n");
    sb.append("    conversationEndState: ").append(toIndentedString(conversationEndState)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    numberOfTurns: ").append(toIndentedString(numberOfTurns)).append("\n");
    sb.append("    invokedIntentSamples: ").append(toIndentedString(invokedIntentSamples)).append("\n");
    sb.append("    originatingRequestId: ").append(toIndentedString(originatingRequestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("botAliasId");
    openapiFields.add("botVersion");
    openapiFields.add("localeId");
    openapiFields.add("channel");
    openapiFields.add("sessionId");
    openapiFields.add("conversationStartTime");
    openapiFields.add("conversationEndTime");
    openapiFields.add("conversationDurationSeconds");
    openapiFields.add("conversationEndState");
    openapiFields.add("mode");
    openapiFields.add("numberOfTurns");
    openapiFields.add("invokedIntentSamples");
    openapiFields.add("originatingRequestId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SessionSpecification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SessionSpecification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SessionSpecification is not found in the empty JSON string", SessionSpecification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SessionSpecification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SessionSpecification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `botAliasId`
      if (jsonObj.get("botAliasId") != null && !jsonObj.get("botAliasId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botAliasId"));
      }
      // validate the optional field `botVersion`
      if (jsonObj.get("botVersion") != null && !jsonObj.get("botVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botVersion"));
      }
      // validate the optional field `localeId`
      if (jsonObj.get("localeId") != null && !jsonObj.get("localeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("localeId"));
      }
      // validate the optional field `channel`
      if (jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("channel"));
      }
      // validate the optional field `sessionId`
      if (jsonObj.get("sessionId") != null && !jsonObj.get("sessionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("sessionId"));
      }
      // validate the optional field `conversationStartTime`
      if (jsonObj.get("conversationStartTime") != null && !jsonObj.get("conversationStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("conversationStartTime"));
      }
      // validate the optional field `conversationEndTime`
      if (jsonObj.get("conversationEndTime") != null && !jsonObj.get("conversationEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("conversationEndTime"));
      }
      // validate the optional field `conversationDurationSeconds`
      if (jsonObj.get("conversationDurationSeconds") != null && !jsonObj.get("conversationDurationSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("conversationDurationSeconds"));
      }
      // validate the optional field `conversationEndState`
      if (jsonObj.get("conversationEndState") != null && !jsonObj.get("conversationEndState").isJsonNull()) {
        ConversationEndState.validateJsonElement(jsonObj.get("conversationEndState"));
      }
      // validate the optional field `mode`
      if (jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) {
        AnalyticsModality.validateJsonElement(jsonObj.get("mode"));
      }
      // validate the optional field `numberOfTurns`
      if (jsonObj.get("numberOfTurns") != null && !jsonObj.get("numberOfTurns").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("numberOfTurns"));
      }
      // validate the optional field `invokedIntentSamples`
      if (jsonObj.get("invokedIntentSamples") != null && !jsonObj.get("invokedIntentSamples").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("invokedIntentSamples"));
      }
      // validate the optional field `originatingRequestId`
      if (jsonObj.get("originatingRequestId") != null && !jsonObj.get("originatingRequestId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("originatingRequestId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SessionSpecification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SessionSpecification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SessionSpecification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SessionSpecification.class));

       return (TypeAdapter<T>) new TypeAdapter<SessionSpecification>() {
           @Override
           public void write(JsonWriter out, SessionSpecification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SessionSpecification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SessionSpecification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SessionSpecification
   * @throws IOException if the JSON string is invalid with respect to SessionSpecification
   */
  public static SessionSpecification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SessionSpecification.class);
  }

  /**
   * Convert an instance of SessionSpecification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

