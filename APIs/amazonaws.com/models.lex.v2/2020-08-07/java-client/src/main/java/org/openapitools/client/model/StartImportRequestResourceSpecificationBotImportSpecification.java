/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.DataPrivacy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartImportRequestResourceSpecificationBotImportSpecification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartImportRequestResourceSpecificationBotImportSpecification {
  public static final String SERIALIZED_NAME_BOT_NAME = "botName";
  @SerializedName(SERIALIZED_NAME_BOT_NAME)
  private String botName;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_DATA_PRIVACY = "dataPrivacy";
  @SerializedName(SERIALIZED_NAME_DATA_PRIVACY)
  private DataPrivacy dataPrivacy;

  public static final String SERIALIZED_NAME_IDLE_SESSION_T_T_L_IN_SECONDS = "idleSessionTTLInSeconds";
  @SerializedName(SERIALIZED_NAME_IDLE_SESSION_T_T_L_IN_SECONDS)
  private Integer idleSessionTTLInSeconds;

  public static final String SERIALIZED_NAME_BOT_TAGS = "botTags";
  @SerializedName(SERIALIZED_NAME_BOT_TAGS)
  private Map botTags;

  public static final String SERIALIZED_NAME_TEST_BOT_ALIAS_TAGS = "testBotAliasTags";
  @SerializedName(SERIALIZED_NAME_TEST_BOT_ALIAS_TAGS)
  private Map testBotAliasTags;

  public StartImportRequestResourceSpecificationBotImportSpecification() {
  }

  public StartImportRequestResourceSpecificationBotImportSpecification botName(String botName) {
    this.botName = botName;
    return this;
  }

  /**
   * Get botName
   * @return botName
   */
  @javax.annotation.Nonnull
  public String getBotName() {
    return botName;
  }

  public void setBotName(String botName) {
    this.botName = botName;
  }


  public StartImportRequestResourceSpecificationBotImportSpecification roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public StartImportRequestResourceSpecificationBotImportSpecification dataPrivacy(DataPrivacy dataPrivacy) {
    this.dataPrivacy = dataPrivacy;
    return this;
  }

  /**
   * Get dataPrivacy
   * @return dataPrivacy
   */
  @javax.annotation.Nonnull
  public DataPrivacy getDataPrivacy() {
    return dataPrivacy;
  }

  public void setDataPrivacy(DataPrivacy dataPrivacy) {
    this.dataPrivacy = dataPrivacy;
  }


  public StartImportRequestResourceSpecificationBotImportSpecification idleSessionTTLInSeconds(Integer idleSessionTTLInSeconds) {
    this.idleSessionTTLInSeconds = idleSessionTTLInSeconds;
    return this;
  }

  /**
   * Get idleSessionTTLInSeconds
   * @return idleSessionTTLInSeconds
   */
  @javax.annotation.Nullable
  public Integer getIdleSessionTTLInSeconds() {
    return idleSessionTTLInSeconds;
  }

  public void setIdleSessionTTLInSeconds(Integer idleSessionTTLInSeconds) {
    this.idleSessionTTLInSeconds = idleSessionTTLInSeconds;
  }


  public StartImportRequestResourceSpecificationBotImportSpecification botTags(Map botTags) {
    this.botTags = botTags;
    return this;
  }

  /**
   * Get botTags
   * @return botTags
   */
  @javax.annotation.Nullable
  public Map getBotTags() {
    return botTags;
  }

  public void setBotTags(Map botTags) {
    this.botTags = botTags;
  }


  public StartImportRequestResourceSpecificationBotImportSpecification testBotAliasTags(Map testBotAliasTags) {
    this.testBotAliasTags = testBotAliasTags;
    return this;
  }

  /**
   * Get testBotAliasTags
   * @return testBotAliasTags
   */
  @javax.annotation.Nullable
  public Map getTestBotAliasTags() {
    return testBotAliasTags;
  }

  public void setTestBotAliasTags(Map testBotAliasTags) {
    this.testBotAliasTags = testBotAliasTags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartImportRequestResourceSpecificationBotImportSpecification startImportRequestResourceSpecificationBotImportSpecification = (StartImportRequestResourceSpecificationBotImportSpecification) o;
    return Objects.equals(this.botName, startImportRequestResourceSpecificationBotImportSpecification.botName) &&
        Objects.equals(this.roleArn, startImportRequestResourceSpecificationBotImportSpecification.roleArn) &&
        Objects.equals(this.dataPrivacy, startImportRequestResourceSpecificationBotImportSpecification.dataPrivacy) &&
        Objects.equals(this.idleSessionTTLInSeconds, startImportRequestResourceSpecificationBotImportSpecification.idleSessionTTLInSeconds) &&
        Objects.equals(this.botTags, startImportRequestResourceSpecificationBotImportSpecification.botTags) &&
        Objects.equals(this.testBotAliasTags, startImportRequestResourceSpecificationBotImportSpecification.testBotAliasTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(botName, roleArn, dataPrivacy, idleSessionTTLInSeconds, botTags, testBotAliasTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartImportRequestResourceSpecificationBotImportSpecification {\n");
    sb.append("    botName: ").append(toIndentedString(botName)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    dataPrivacy: ").append(toIndentedString(dataPrivacy)).append("\n");
    sb.append("    idleSessionTTLInSeconds: ").append(toIndentedString(idleSessionTTLInSeconds)).append("\n");
    sb.append("    botTags: ").append(toIndentedString(botTags)).append("\n");
    sb.append("    testBotAliasTags: ").append(toIndentedString(testBotAliasTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("botName");
    openapiFields.add("roleArn");
    openapiFields.add("dataPrivacy");
    openapiFields.add("idleSessionTTLInSeconds");
    openapiFields.add("botTags");
    openapiFields.add("testBotAliasTags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("botName");
    openapiRequiredFields.add("roleArn");
    openapiRequiredFields.add("dataPrivacy");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartImportRequestResourceSpecificationBotImportSpecification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartImportRequestResourceSpecificationBotImportSpecification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartImportRequestResourceSpecificationBotImportSpecification is not found in the empty JSON string", StartImportRequestResourceSpecificationBotImportSpecification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartImportRequestResourceSpecificationBotImportSpecification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartImportRequestResourceSpecificationBotImportSpecification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartImportRequestResourceSpecificationBotImportSpecification.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `botName`
      String.validateJsonElement(jsonObj.get("botName"));
      // validate the required field `roleArn`
      String.validateJsonElement(jsonObj.get("roleArn"));
      // validate the required field `dataPrivacy`
      DataPrivacy.validateJsonElement(jsonObj.get("dataPrivacy"));
      // validate the optional field `idleSessionTTLInSeconds`
      if (jsonObj.get("idleSessionTTLInSeconds") != null && !jsonObj.get("idleSessionTTLInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("idleSessionTTLInSeconds"));
      }
      // validate the optional field `botTags`
      if (jsonObj.get("botTags") != null && !jsonObj.get("botTags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("botTags"));
      }
      // validate the optional field `testBotAliasTags`
      if (jsonObj.get("testBotAliasTags") != null && !jsonObj.get("testBotAliasTags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("testBotAliasTags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartImportRequestResourceSpecificationBotImportSpecification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartImportRequestResourceSpecificationBotImportSpecification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartImportRequestResourceSpecificationBotImportSpecification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartImportRequestResourceSpecificationBotImportSpecification.class));

       return (TypeAdapter<T>) new TypeAdapter<StartImportRequestResourceSpecificationBotImportSpecification>() {
           @Override
           public void write(JsonWriter out, StartImportRequestResourceSpecificationBotImportSpecification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartImportRequestResourceSpecificationBotImportSpecification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartImportRequestResourceSpecificationBotImportSpecification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartImportRequestResourceSpecificationBotImportSpecification
   * @throws IOException if the JSON string is invalid with respect to StartImportRequestResourceSpecificationBotImportSpecification
   */
  public static StartImportRequestResourceSpecificationBotImportSpecification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartImportRequestResourceSpecificationBotImportSpecification.class);
  }

  /**
   * Convert an instance of StartImportRequestResourceSpecificationBotImportSpecification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

