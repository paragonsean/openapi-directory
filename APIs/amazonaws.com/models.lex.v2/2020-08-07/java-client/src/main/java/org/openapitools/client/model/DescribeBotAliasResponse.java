/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.BotAliasStatus;
import org.openapitools.client.model.DescribeBotAliasResponseConversationLogSettings;
import org.openapitools.client.model.SentimentAnalysisSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeBotAliasResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeBotAliasResponse {
  public static final String SERIALIZED_NAME_BOT_ALIAS_ID = "botAliasId";
  @SerializedName(SERIALIZED_NAME_BOT_ALIAS_ID)
  private String botAliasId;

  public static final String SERIALIZED_NAME_BOT_ALIAS_NAME = "botAliasName";
  @SerializedName(SERIALIZED_NAME_BOT_ALIAS_NAME)
  private String botAliasName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_BOT_VERSION = "botVersion";
  @SerializedName(SERIALIZED_NAME_BOT_VERSION)
  private String botVersion;

  public static final String SERIALIZED_NAME_BOT_ALIAS_LOCALE_SETTINGS = "botAliasLocaleSettings";
  @SerializedName(SERIALIZED_NAME_BOT_ALIAS_LOCALE_SETTINGS)
  private Map botAliasLocaleSettings;

  public static final String SERIALIZED_NAME_CONVERSATION_LOG_SETTINGS = "conversationLogSettings";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_LOG_SETTINGS)
  private DescribeBotAliasResponseConversationLogSettings conversationLogSettings;

  public static final String SERIALIZED_NAME_SENTIMENT_ANALYSIS_SETTINGS = "sentimentAnalysisSettings";
  @SerializedName(SERIALIZED_NAME_SENTIMENT_ANALYSIS_SETTINGS)
  private SentimentAnalysisSettings sentimentAnalysisSettings;

  public static final String SERIALIZED_NAME_BOT_ALIAS_HISTORY_EVENTS = "botAliasHistoryEvents";
  @SerializedName(SERIALIZED_NAME_BOT_ALIAS_HISTORY_EVENTS)
  private List botAliasHistoryEvents;

  public static final String SERIALIZED_NAME_BOT_ALIAS_STATUS = "botAliasStatus";
  @SerializedName(SERIALIZED_NAME_BOT_ALIAS_STATUS)
  private BotAliasStatus botAliasStatus;

  public static final String SERIALIZED_NAME_BOT_ID = "botId";
  @SerializedName(SERIALIZED_NAME_BOT_ID)
  private String botId;

  public static final String SERIALIZED_NAME_CREATION_DATE_TIME = "creationDateTime";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE_TIME)
  private OffsetDateTime creationDateTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_PARENT_BOT_NETWORKS = "parentBotNetworks";
  @SerializedName(SERIALIZED_NAME_PARENT_BOT_NETWORKS)
  private List parentBotNetworks;

  public DescribeBotAliasResponse() {
  }

  public DescribeBotAliasResponse botAliasId(String botAliasId) {
    this.botAliasId = botAliasId;
    return this;
  }

  /**
   * Get botAliasId
   * @return botAliasId
   */
  @javax.annotation.Nullable
  public String getBotAliasId() {
    return botAliasId;
  }

  public void setBotAliasId(String botAliasId) {
    this.botAliasId = botAliasId;
  }


  public DescribeBotAliasResponse botAliasName(String botAliasName) {
    this.botAliasName = botAliasName;
    return this;
  }

  /**
   * Get botAliasName
   * @return botAliasName
   */
  @javax.annotation.Nullable
  public String getBotAliasName() {
    return botAliasName;
  }

  public void setBotAliasName(String botAliasName) {
    this.botAliasName = botAliasName;
  }


  public DescribeBotAliasResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DescribeBotAliasResponse botVersion(String botVersion) {
    this.botVersion = botVersion;
    return this;
  }

  /**
   * Get botVersion
   * @return botVersion
   */
  @javax.annotation.Nullable
  public String getBotVersion() {
    return botVersion;
  }

  public void setBotVersion(String botVersion) {
    this.botVersion = botVersion;
  }


  public DescribeBotAliasResponse botAliasLocaleSettings(Map botAliasLocaleSettings) {
    this.botAliasLocaleSettings = botAliasLocaleSettings;
    return this;
  }

  /**
   * Get botAliasLocaleSettings
   * @return botAliasLocaleSettings
   */
  @javax.annotation.Nullable
  public Map getBotAliasLocaleSettings() {
    return botAliasLocaleSettings;
  }

  public void setBotAliasLocaleSettings(Map botAliasLocaleSettings) {
    this.botAliasLocaleSettings = botAliasLocaleSettings;
  }


  public DescribeBotAliasResponse conversationLogSettings(DescribeBotAliasResponseConversationLogSettings conversationLogSettings) {
    this.conversationLogSettings = conversationLogSettings;
    return this;
  }

  /**
   * Get conversationLogSettings
   * @return conversationLogSettings
   */
  @javax.annotation.Nullable
  public DescribeBotAliasResponseConversationLogSettings getConversationLogSettings() {
    return conversationLogSettings;
  }

  public void setConversationLogSettings(DescribeBotAliasResponseConversationLogSettings conversationLogSettings) {
    this.conversationLogSettings = conversationLogSettings;
  }


  public DescribeBotAliasResponse sentimentAnalysisSettings(SentimentAnalysisSettings sentimentAnalysisSettings) {
    this.sentimentAnalysisSettings = sentimentAnalysisSettings;
    return this;
  }

  /**
   * Get sentimentAnalysisSettings
   * @return sentimentAnalysisSettings
   */
  @javax.annotation.Nullable
  public SentimentAnalysisSettings getSentimentAnalysisSettings() {
    return sentimentAnalysisSettings;
  }

  public void setSentimentAnalysisSettings(SentimentAnalysisSettings sentimentAnalysisSettings) {
    this.sentimentAnalysisSettings = sentimentAnalysisSettings;
  }


  public DescribeBotAliasResponse botAliasHistoryEvents(List botAliasHistoryEvents) {
    this.botAliasHistoryEvents = botAliasHistoryEvents;
    return this;
  }

  /**
   * Get botAliasHistoryEvents
   * @return botAliasHistoryEvents
   */
  @javax.annotation.Nullable
  public List getBotAliasHistoryEvents() {
    return botAliasHistoryEvents;
  }

  public void setBotAliasHistoryEvents(List botAliasHistoryEvents) {
    this.botAliasHistoryEvents = botAliasHistoryEvents;
  }


  public DescribeBotAliasResponse botAliasStatus(BotAliasStatus botAliasStatus) {
    this.botAliasStatus = botAliasStatus;
    return this;
  }

  /**
   * Get botAliasStatus
   * @return botAliasStatus
   */
  @javax.annotation.Nullable
  public BotAliasStatus getBotAliasStatus() {
    return botAliasStatus;
  }

  public void setBotAliasStatus(BotAliasStatus botAliasStatus) {
    this.botAliasStatus = botAliasStatus;
  }


  public DescribeBotAliasResponse botId(String botId) {
    this.botId = botId;
    return this;
  }

  /**
   * Get botId
   * @return botId
   */
  @javax.annotation.Nullable
  public String getBotId() {
    return botId;
  }

  public void setBotId(String botId) {
    this.botId = botId;
  }


  public DescribeBotAliasResponse creationDateTime(OffsetDateTime creationDateTime) {
    this.creationDateTime = creationDateTime;
    return this;
  }

  /**
   * Get creationDateTime
   * @return creationDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDateTime() {
    return creationDateTime;
  }

  public void setCreationDateTime(OffsetDateTime creationDateTime) {
    this.creationDateTime = creationDateTime;
  }


  public DescribeBotAliasResponse lastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
    return this;
  }

  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }

  public void setLastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }


  public DescribeBotAliasResponse parentBotNetworks(List parentBotNetworks) {
    this.parentBotNetworks = parentBotNetworks;
    return this;
  }

  /**
   * Get parentBotNetworks
   * @return parentBotNetworks
   */
  @javax.annotation.Nullable
  public List getParentBotNetworks() {
    return parentBotNetworks;
  }

  public void setParentBotNetworks(List parentBotNetworks) {
    this.parentBotNetworks = parentBotNetworks;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeBotAliasResponse describeBotAliasResponse = (DescribeBotAliasResponse) o;
    return Objects.equals(this.botAliasId, describeBotAliasResponse.botAliasId) &&
        Objects.equals(this.botAliasName, describeBotAliasResponse.botAliasName) &&
        Objects.equals(this.description, describeBotAliasResponse.description) &&
        Objects.equals(this.botVersion, describeBotAliasResponse.botVersion) &&
        Objects.equals(this.botAliasLocaleSettings, describeBotAliasResponse.botAliasLocaleSettings) &&
        Objects.equals(this.conversationLogSettings, describeBotAliasResponse.conversationLogSettings) &&
        Objects.equals(this.sentimentAnalysisSettings, describeBotAliasResponse.sentimentAnalysisSettings) &&
        Objects.equals(this.botAliasHistoryEvents, describeBotAliasResponse.botAliasHistoryEvents) &&
        Objects.equals(this.botAliasStatus, describeBotAliasResponse.botAliasStatus) &&
        Objects.equals(this.botId, describeBotAliasResponse.botId) &&
        Objects.equals(this.creationDateTime, describeBotAliasResponse.creationDateTime) &&
        Objects.equals(this.lastUpdatedDateTime, describeBotAliasResponse.lastUpdatedDateTime) &&
        Objects.equals(this.parentBotNetworks, describeBotAliasResponse.parentBotNetworks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(botAliasId, botAliasName, description, botVersion, botAliasLocaleSettings, conversationLogSettings, sentimentAnalysisSettings, botAliasHistoryEvents, botAliasStatus, botId, creationDateTime, lastUpdatedDateTime, parentBotNetworks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeBotAliasResponse {\n");
    sb.append("    botAliasId: ").append(toIndentedString(botAliasId)).append("\n");
    sb.append("    botAliasName: ").append(toIndentedString(botAliasName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    botVersion: ").append(toIndentedString(botVersion)).append("\n");
    sb.append("    botAliasLocaleSettings: ").append(toIndentedString(botAliasLocaleSettings)).append("\n");
    sb.append("    conversationLogSettings: ").append(toIndentedString(conversationLogSettings)).append("\n");
    sb.append("    sentimentAnalysisSettings: ").append(toIndentedString(sentimentAnalysisSettings)).append("\n");
    sb.append("    botAliasHistoryEvents: ").append(toIndentedString(botAliasHistoryEvents)).append("\n");
    sb.append("    botAliasStatus: ").append(toIndentedString(botAliasStatus)).append("\n");
    sb.append("    botId: ").append(toIndentedString(botId)).append("\n");
    sb.append("    creationDateTime: ").append(toIndentedString(creationDateTime)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    parentBotNetworks: ").append(toIndentedString(parentBotNetworks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("botAliasId");
    openapiFields.add("botAliasName");
    openapiFields.add("description");
    openapiFields.add("botVersion");
    openapiFields.add("botAliasLocaleSettings");
    openapiFields.add("conversationLogSettings");
    openapiFields.add("sentimentAnalysisSettings");
    openapiFields.add("botAliasHistoryEvents");
    openapiFields.add("botAliasStatus");
    openapiFields.add("botId");
    openapiFields.add("creationDateTime");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("parentBotNetworks");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeBotAliasResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeBotAliasResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeBotAliasResponse is not found in the empty JSON string", DescribeBotAliasResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeBotAliasResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeBotAliasResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `botAliasId`
      if (jsonObj.get("botAliasId") != null && !jsonObj.get("botAliasId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botAliasId"));
      }
      // validate the optional field `botAliasName`
      if (jsonObj.get("botAliasName") != null && !jsonObj.get("botAliasName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botAliasName"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `botVersion`
      if (jsonObj.get("botVersion") != null && !jsonObj.get("botVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botVersion"));
      }
      // validate the optional field `botAliasLocaleSettings`
      if (jsonObj.get("botAliasLocaleSettings") != null && !jsonObj.get("botAliasLocaleSettings").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("botAliasLocaleSettings"));
      }
      // validate the optional field `conversationLogSettings`
      if (jsonObj.get("conversationLogSettings") != null && !jsonObj.get("conversationLogSettings").isJsonNull()) {
        DescribeBotAliasResponseConversationLogSettings.validateJsonElement(jsonObj.get("conversationLogSettings"));
      }
      // validate the optional field `sentimentAnalysisSettings`
      if (jsonObj.get("sentimentAnalysisSettings") != null && !jsonObj.get("sentimentAnalysisSettings").isJsonNull()) {
        SentimentAnalysisSettings.validateJsonElement(jsonObj.get("sentimentAnalysisSettings"));
      }
      // validate the optional field `botAliasHistoryEvents`
      if (jsonObj.get("botAliasHistoryEvents") != null && !jsonObj.get("botAliasHistoryEvents").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("botAliasHistoryEvents"));
      }
      // validate the optional field `botAliasStatus`
      if (jsonObj.get("botAliasStatus") != null && !jsonObj.get("botAliasStatus").isJsonNull()) {
        BotAliasStatus.validateJsonElement(jsonObj.get("botAliasStatus"));
      }
      // validate the optional field `botId`
      if (jsonObj.get("botId") != null && !jsonObj.get("botId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botId"));
      }
      // validate the optional field `creationDateTime`
      if (jsonObj.get("creationDateTime") != null && !jsonObj.get("creationDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationDateTime"));
      }
      // validate the optional field `lastUpdatedDateTime`
      if (jsonObj.get("lastUpdatedDateTime") != null && !jsonObj.get("lastUpdatedDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedDateTime"));
      }
      // validate the optional field `parentBotNetworks`
      if (jsonObj.get("parentBotNetworks") != null && !jsonObj.get("parentBotNetworks").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("parentBotNetworks"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeBotAliasResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeBotAliasResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeBotAliasResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeBotAliasResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeBotAliasResponse>() {
           @Override
           public void write(JsonWriter out, DescribeBotAliasResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeBotAliasResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeBotAliasResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeBotAliasResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeBotAliasResponse
   */
  public static DescribeBotAliasResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeBotAliasResponse.class);
  }

  /**
   * Convert an instance of DescribeBotAliasResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

