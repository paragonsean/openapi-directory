/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AnalyticsModality;
import org.openapitools.client.model.IntentState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An object containing information about a specific utterance.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UtteranceSpecification {
  public static final String SERIALIZED_NAME_BOT_ALIAS_ID = "botAliasId";
  @SerializedName(SERIALIZED_NAME_BOT_ALIAS_ID)
  private String botAliasId;

  public static final String SERIALIZED_NAME_BOT_VERSION = "botVersion";
  @SerializedName(SERIALIZED_NAME_BOT_VERSION)
  private String botVersion;

  public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_SESSION_ID = "sessionId";
  @SerializedName(SERIALIZED_NAME_SESSION_ID)
  private String sessionId;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private AnalyticsModality mode;

  public static final String SERIALIZED_NAME_CONVERSATION_START_TIME = "conversationStartTime";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_START_TIME)
  private OffsetDateTime conversationStartTime;

  public static final String SERIALIZED_NAME_CONVERSATION_END_TIME = "conversationEndTime";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_END_TIME)
  private OffsetDateTime conversationEndTime;

  public static final String SERIALIZED_NAME_UTTERANCE = "utterance";
  @SerializedName(SERIALIZED_NAME_UTTERANCE)
  private String utterance;

  public static final String SERIALIZED_NAME_UTTERANCE_TIMESTAMP = "utteranceTimestamp";
  @SerializedName(SERIALIZED_NAME_UTTERANCE_TIMESTAMP)
  private OffsetDateTime utteranceTimestamp;

  public static final String SERIALIZED_NAME_AUDIO_VOICE_DURATION_MILLIS = "audioVoiceDurationMillis";
  @SerializedName(SERIALIZED_NAME_AUDIO_VOICE_DURATION_MILLIS)
  private Integer audioVoiceDurationMillis;

  public static final String SERIALIZED_NAME_UTTERANCE_UNDERSTOOD = "utteranceUnderstood";
  @SerializedName(SERIALIZED_NAME_UTTERANCE_UNDERSTOOD)
  private Boolean utteranceUnderstood;

  public static final String SERIALIZED_NAME_INPUT_TYPE = "inputType";
  @SerializedName(SERIALIZED_NAME_INPUT_TYPE)
  private String inputType;

  public static final String SERIALIZED_NAME_OUTPUT_TYPE = "outputType";
  @SerializedName(SERIALIZED_NAME_OUTPUT_TYPE)
  private String outputType;

  public static final String SERIALIZED_NAME_ASSOCIATED_INTENT_NAME = "associatedIntentName";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_INTENT_NAME)
  private String associatedIntentName;

  public static final String SERIALIZED_NAME_ASSOCIATED_SLOT_NAME = "associatedSlotName";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_SLOT_NAME)
  private String associatedSlotName;

  public static final String SERIALIZED_NAME_INTENT_STATE = "intentState";
  @SerializedName(SERIALIZED_NAME_INTENT_STATE)
  private IntentState intentState;

  public static final String SERIALIZED_NAME_DIALOG_ACTION_TYPE = "dialogActionType";
  @SerializedName(SERIALIZED_NAME_DIALOG_ACTION_TYPE)
  private String dialogActionType;

  public static final String SERIALIZED_NAME_BOT_RESPONSE_AUDIO_VOICE_ID = "botResponseAudioVoiceId";
  @SerializedName(SERIALIZED_NAME_BOT_RESPONSE_AUDIO_VOICE_ID)
  private String botResponseAudioVoiceId;

  public static final String SERIALIZED_NAME_SLOTS_FILLED_IN_SESSION = "slotsFilledInSession";
  @SerializedName(SERIALIZED_NAME_SLOTS_FILLED_IN_SESSION)
  private String slotsFilledInSession;

  public static final String SERIALIZED_NAME_UTTERANCE_REQUEST_ID = "utteranceRequestId";
  @SerializedName(SERIALIZED_NAME_UTTERANCE_REQUEST_ID)
  private String utteranceRequestId;

  public static final String SERIALIZED_NAME_BOT_RESPONSES = "botResponses";
  @SerializedName(SERIALIZED_NAME_BOT_RESPONSES)
  private List botResponses;

  public UtteranceSpecification() {
  }

  public UtteranceSpecification botAliasId(String botAliasId) {
    this.botAliasId = botAliasId;
    return this;
  }

  /**
   * Get botAliasId
   * @return botAliasId
   */
  @javax.annotation.Nullable
  public String getBotAliasId() {
    return botAliasId;
  }

  public void setBotAliasId(String botAliasId) {
    this.botAliasId = botAliasId;
  }


  public UtteranceSpecification botVersion(String botVersion) {
    this.botVersion = botVersion;
    return this;
  }

  /**
   * Get botVersion
   * @return botVersion
   */
  @javax.annotation.Nullable
  public String getBotVersion() {
    return botVersion;
  }

  public void setBotVersion(String botVersion) {
    this.botVersion = botVersion;
  }


  public UtteranceSpecification localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * Get localeId
   * @return localeId
   */
  @javax.annotation.Nullable
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public UtteranceSpecification sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * Get sessionId
   * @return sessionId
   */
  @javax.annotation.Nullable
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }


  public UtteranceSpecification channel(String channel) {
    this.channel = channel;
    return this;
  }

  /**
   * Get channel
   * @return channel
   */
  @javax.annotation.Nullable
  public String getChannel() {
    return channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }


  public UtteranceSpecification mode(AnalyticsModality mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public AnalyticsModality getMode() {
    return mode;
  }

  public void setMode(AnalyticsModality mode) {
    this.mode = mode;
  }


  public UtteranceSpecification conversationStartTime(OffsetDateTime conversationStartTime) {
    this.conversationStartTime = conversationStartTime;
    return this;
  }

  /**
   * Get conversationStartTime
   * @return conversationStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getConversationStartTime() {
    return conversationStartTime;
  }

  public void setConversationStartTime(OffsetDateTime conversationStartTime) {
    this.conversationStartTime = conversationStartTime;
  }


  public UtteranceSpecification conversationEndTime(OffsetDateTime conversationEndTime) {
    this.conversationEndTime = conversationEndTime;
    return this;
  }

  /**
   * Get conversationEndTime
   * @return conversationEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getConversationEndTime() {
    return conversationEndTime;
  }

  public void setConversationEndTime(OffsetDateTime conversationEndTime) {
    this.conversationEndTime = conversationEndTime;
  }


  public UtteranceSpecification utterance(String utterance) {
    this.utterance = utterance;
    return this;
  }

  /**
   * Get utterance
   * @return utterance
   */
  @javax.annotation.Nullable
  public String getUtterance() {
    return utterance;
  }

  public void setUtterance(String utterance) {
    this.utterance = utterance;
  }


  public UtteranceSpecification utteranceTimestamp(OffsetDateTime utteranceTimestamp) {
    this.utteranceTimestamp = utteranceTimestamp;
    return this;
  }

  /**
   * Get utteranceTimestamp
   * @return utteranceTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUtteranceTimestamp() {
    return utteranceTimestamp;
  }

  public void setUtteranceTimestamp(OffsetDateTime utteranceTimestamp) {
    this.utteranceTimestamp = utteranceTimestamp;
  }


  public UtteranceSpecification audioVoiceDurationMillis(Integer audioVoiceDurationMillis) {
    this.audioVoiceDurationMillis = audioVoiceDurationMillis;
    return this;
  }

  /**
   * Get audioVoiceDurationMillis
   * @return audioVoiceDurationMillis
   */
  @javax.annotation.Nullable
  public Integer getAudioVoiceDurationMillis() {
    return audioVoiceDurationMillis;
  }

  public void setAudioVoiceDurationMillis(Integer audioVoiceDurationMillis) {
    this.audioVoiceDurationMillis = audioVoiceDurationMillis;
  }


  public UtteranceSpecification utteranceUnderstood(Boolean utteranceUnderstood) {
    this.utteranceUnderstood = utteranceUnderstood;
    return this;
  }

  /**
   * Get utteranceUnderstood
   * @return utteranceUnderstood
   */
  @javax.annotation.Nullable
  public Boolean getUtteranceUnderstood() {
    return utteranceUnderstood;
  }

  public void setUtteranceUnderstood(Boolean utteranceUnderstood) {
    this.utteranceUnderstood = utteranceUnderstood;
  }


  public UtteranceSpecification inputType(String inputType) {
    this.inputType = inputType;
    return this;
  }

  /**
   * Get inputType
   * @return inputType
   */
  @javax.annotation.Nullable
  public String getInputType() {
    return inputType;
  }

  public void setInputType(String inputType) {
    this.inputType = inputType;
  }


  public UtteranceSpecification outputType(String outputType) {
    this.outputType = outputType;
    return this;
  }

  /**
   * Get outputType
   * @return outputType
   */
  @javax.annotation.Nullable
  public String getOutputType() {
    return outputType;
  }

  public void setOutputType(String outputType) {
    this.outputType = outputType;
  }


  public UtteranceSpecification associatedIntentName(String associatedIntentName) {
    this.associatedIntentName = associatedIntentName;
    return this;
  }

  /**
   * Get associatedIntentName
   * @return associatedIntentName
   */
  @javax.annotation.Nullable
  public String getAssociatedIntentName() {
    return associatedIntentName;
  }

  public void setAssociatedIntentName(String associatedIntentName) {
    this.associatedIntentName = associatedIntentName;
  }


  public UtteranceSpecification associatedSlotName(String associatedSlotName) {
    this.associatedSlotName = associatedSlotName;
    return this;
  }

  /**
   * Get associatedSlotName
   * @return associatedSlotName
   */
  @javax.annotation.Nullable
  public String getAssociatedSlotName() {
    return associatedSlotName;
  }

  public void setAssociatedSlotName(String associatedSlotName) {
    this.associatedSlotName = associatedSlotName;
  }


  public UtteranceSpecification intentState(IntentState intentState) {
    this.intentState = intentState;
    return this;
  }

  /**
   * Get intentState
   * @return intentState
   */
  @javax.annotation.Nullable
  public IntentState getIntentState() {
    return intentState;
  }

  public void setIntentState(IntentState intentState) {
    this.intentState = intentState;
  }


  public UtteranceSpecification dialogActionType(String dialogActionType) {
    this.dialogActionType = dialogActionType;
    return this;
  }

  /**
   * Get dialogActionType
   * @return dialogActionType
   */
  @javax.annotation.Nullable
  public String getDialogActionType() {
    return dialogActionType;
  }

  public void setDialogActionType(String dialogActionType) {
    this.dialogActionType = dialogActionType;
  }


  public UtteranceSpecification botResponseAudioVoiceId(String botResponseAudioVoiceId) {
    this.botResponseAudioVoiceId = botResponseAudioVoiceId;
    return this;
  }

  /**
   * Get botResponseAudioVoiceId
   * @return botResponseAudioVoiceId
   */
  @javax.annotation.Nullable
  public String getBotResponseAudioVoiceId() {
    return botResponseAudioVoiceId;
  }

  public void setBotResponseAudioVoiceId(String botResponseAudioVoiceId) {
    this.botResponseAudioVoiceId = botResponseAudioVoiceId;
  }


  public UtteranceSpecification slotsFilledInSession(String slotsFilledInSession) {
    this.slotsFilledInSession = slotsFilledInSession;
    return this;
  }

  /**
   * Get slotsFilledInSession
   * @return slotsFilledInSession
   */
  @javax.annotation.Nullable
  public String getSlotsFilledInSession() {
    return slotsFilledInSession;
  }

  public void setSlotsFilledInSession(String slotsFilledInSession) {
    this.slotsFilledInSession = slotsFilledInSession;
  }


  public UtteranceSpecification utteranceRequestId(String utteranceRequestId) {
    this.utteranceRequestId = utteranceRequestId;
    return this;
  }

  /**
   * Get utteranceRequestId
   * @return utteranceRequestId
   */
  @javax.annotation.Nullable
  public String getUtteranceRequestId() {
    return utteranceRequestId;
  }

  public void setUtteranceRequestId(String utteranceRequestId) {
    this.utteranceRequestId = utteranceRequestId;
  }


  public UtteranceSpecification botResponses(List botResponses) {
    this.botResponses = botResponses;
    return this;
  }

  /**
   * Get botResponses
   * @return botResponses
   */
  @javax.annotation.Nullable
  public List getBotResponses() {
    return botResponses;
  }

  public void setBotResponses(List botResponses) {
    this.botResponses = botResponses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UtteranceSpecification utteranceSpecification = (UtteranceSpecification) o;
    return Objects.equals(this.botAliasId, utteranceSpecification.botAliasId) &&
        Objects.equals(this.botVersion, utteranceSpecification.botVersion) &&
        Objects.equals(this.localeId, utteranceSpecification.localeId) &&
        Objects.equals(this.sessionId, utteranceSpecification.sessionId) &&
        Objects.equals(this.channel, utteranceSpecification.channel) &&
        Objects.equals(this.mode, utteranceSpecification.mode) &&
        Objects.equals(this.conversationStartTime, utteranceSpecification.conversationStartTime) &&
        Objects.equals(this.conversationEndTime, utteranceSpecification.conversationEndTime) &&
        Objects.equals(this.utterance, utteranceSpecification.utterance) &&
        Objects.equals(this.utteranceTimestamp, utteranceSpecification.utteranceTimestamp) &&
        Objects.equals(this.audioVoiceDurationMillis, utteranceSpecification.audioVoiceDurationMillis) &&
        Objects.equals(this.utteranceUnderstood, utteranceSpecification.utteranceUnderstood) &&
        Objects.equals(this.inputType, utteranceSpecification.inputType) &&
        Objects.equals(this.outputType, utteranceSpecification.outputType) &&
        Objects.equals(this.associatedIntentName, utteranceSpecification.associatedIntentName) &&
        Objects.equals(this.associatedSlotName, utteranceSpecification.associatedSlotName) &&
        Objects.equals(this.intentState, utteranceSpecification.intentState) &&
        Objects.equals(this.dialogActionType, utteranceSpecification.dialogActionType) &&
        Objects.equals(this.botResponseAudioVoiceId, utteranceSpecification.botResponseAudioVoiceId) &&
        Objects.equals(this.slotsFilledInSession, utteranceSpecification.slotsFilledInSession) &&
        Objects.equals(this.utteranceRequestId, utteranceSpecification.utteranceRequestId) &&
        Objects.equals(this.botResponses, utteranceSpecification.botResponses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(botAliasId, botVersion, localeId, sessionId, channel, mode, conversationStartTime, conversationEndTime, utterance, utteranceTimestamp, audioVoiceDurationMillis, utteranceUnderstood, inputType, outputType, associatedIntentName, associatedSlotName, intentState, dialogActionType, botResponseAudioVoiceId, slotsFilledInSession, utteranceRequestId, botResponses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UtteranceSpecification {\n");
    sb.append("    botAliasId: ").append(toIndentedString(botAliasId)).append("\n");
    sb.append("    botVersion: ").append(toIndentedString(botVersion)).append("\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    conversationStartTime: ").append(toIndentedString(conversationStartTime)).append("\n");
    sb.append("    conversationEndTime: ").append(toIndentedString(conversationEndTime)).append("\n");
    sb.append("    utterance: ").append(toIndentedString(utterance)).append("\n");
    sb.append("    utteranceTimestamp: ").append(toIndentedString(utteranceTimestamp)).append("\n");
    sb.append("    audioVoiceDurationMillis: ").append(toIndentedString(audioVoiceDurationMillis)).append("\n");
    sb.append("    utteranceUnderstood: ").append(toIndentedString(utteranceUnderstood)).append("\n");
    sb.append("    inputType: ").append(toIndentedString(inputType)).append("\n");
    sb.append("    outputType: ").append(toIndentedString(outputType)).append("\n");
    sb.append("    associatedIntentName: ").append(toIndentedString(associatedIntentName)).append("\n");
    sb.append("    associatedSlotName: ").append(toIndentedString(associatedSlotName)).append("\n");
    sb.append("    intentState: ").append(toIndentedString(intentState)).append("\n");
    sb.append("    dialogActionType: ").append(toIndentedString(dialogActionType)).append("\n");
    sb.append("    botResponseAudioVoiceId: ").append(toIndentedString(botResponseAudioVoiceId)).append("\n");
    sb.append("    slotsFilledInSession: ").append(toIndentedString(slotsFilledInSession)).append("\n");
    sb.append("    utteranceRequestId: ").append(toIndentedString(utteranceRequestId)).append("\n");
    sb.append("    botResponses: ").append(toIndentedString(botResponses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("botAliasId");
    openapiFields.add("botVersion");
    openapiFields.add("localeId");
    openapiFields.add("sessionId");
    openapiFields.add("channel");
    openapiFields.add("mode");
    openapiFields.add("conversationStartTime");
    openapiFields.add("conversationEndTime");
    openapiFields.add("utterance");
    openapiFields.add("utteranceTimestamp");
    openapiFields.add("audioVoiceDurationMillis");
    openapiFields.add("utteranceUnderstood");
    openapiFields.add("inputType");
    openapiFields.add("outputType");
    openapiFields.add("associatedIntentName");
    openapiFields.add("associatedSlotName");
    openapiFields.add("intentState");
    openapiFields.add("dialogActionType");
    openapiFields.add("botResponseAudioVoiceId");
    openapiFields.add("slotsFilledInSession");
    openapiFields.add("utteranceRequestId");
    openapiFields.add("botResponses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UtteranceSpecification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UtteranceSpecification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UtteranceSpecification is not found in the empty JSON string", UtteranceSpecification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UtteranceSpecification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UtteranceSpecification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `botAliasId`
      if (jsonObj.get("botAliasId") != null && !jsonObj.get("botAliasId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botAliasId"));
      }
      // validate the optional field `botVersion`
      if (jsonObj.get("botVersion") != null && !jsonObj.get("botVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botVersion"));
      }
      // validate the optional field `localeId`
      if (jsonObj.get("localeId") != null && !jsonObj.get("localeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("localeId"));
      }
      // validate the optional field `sessionId`
      if (jsonObj.get("sessionId") != null && !jsonObj.get("sessionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("sessionId"));
      }
      // validate the optional field `channel`
      if (jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("channel"));
      }
      // validate the optional field `mode`
      if (jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) {
        AnalyticsModality.validateJsonElement(jsonObj.get("mode"));
      }
      // validate the optional field `conversationStartTime`
      if (jsonObj.get("conversationStartTime") != null && !jsonObj.get("conversationStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("conversationStartTime"));
      }
      // validate the optional field `conversationEndTime`
      if (jsonObj.get("conversationEndTime") != null && !jsonObj.get("conversationEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("conversationEndTime"));
      }
      // validate the optional field `utterance`
      if (jsonObj.get("utterance") != null && !jsonObj.get("utterance").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("utterance"));
      }
      // validate the optional field `utteranceTimestamp`
      if (jsonObj.get("utteranceTimestamp") != null && !jsonObj.get("utteranceTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("utteranceTimestamp"));
      }
      // validate the optional field `audioVoiceDurationMillis`
      if (jsonObj.get("audioVoiceDurationMillis") != null && !jsonObj.get("audioVoiceDurationMillis").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("audioVoiceDurationMillis"));
      }
      // validate the optional field `utteranceUnderstood`
      if (jsonObj.get("utteranceUnderstood") != null && !jsonObj.get("utteranceUnderstood").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("utteranceUnderstood"));
      }
      // validate the optional field `inputType`
      if (jsonObj.get("inputType") != null && !jsonObj.get("inputType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("inputType"));
      }
      // validate the optional field `outputType`
      if (jsonObj.get("outputType") != null && !jsonObj.get("outputType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("outputType"));
      }
      // validate the optional field `associatedIntentName`
      if (jsonObj.get("associatedIntentName") != null && !jsonObj.get("associatedIntentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("associatedIntentName"));
      }
      // validate the optional field `associatedSlotName`
      if (jsonObj.get("associatedSlotName") != null && !jsonObj.get("associatedSlotName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("associatedSlotName"));
      }
      // validate the optional field `intentState`
      if (jsonObj.get("intentState") != null && !jsonObj.get("intentState").isJsonNull()) {
        IntentState.validateJsonElement(jsonObj.get("intentState"));
      }
      // validate the optional field `dialogActionType`
      if (jsonObj.get("dialogActionType") != null && !jsonObj.get("dialogActionType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("dialogActionType"));
      }
      // validate the optional field `botResponseAudioVoiceId`
      if (jsonObj.get("botResponseAudioVoiceId") != null && !jsonObj.get("botResponseAudioVoiceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botResponseAudioVoiceId"));
      }
      // validate the optional field `slotsFilledInSession`
      if (jsonObj.get("slotsFilledInSession") != null && !jsonObj.get("slotsFilledInSession").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("slotsFilledInSession"));
      }
      // validate the optional field `utteranceRequestId`
      if (jsonObj.get("utteranceRequestId") != null && !jsonObj.get("utteranceRequestId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("utteranceRequestId"));
      }
      // validate the optional field `botResponses`
      if (jsonObj.get("botResponses") != null && !jsonObj.get("botResponses").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("botResponses"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UtteranceSpecification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UtteranceSpecification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UtteranceSpecification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UtteranceSpecification.class));

       return (TypeAdapter<T>) new TypeAdapter<UtteranceSpecification>() {
           @Override
           public void write(JsonWriter out, UtteranceSpecification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UtteranceSpecification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UtteranceSpecification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UtteranceSpecification
   * @throws IOException if the JSON string is invalid with respect to UtteranceSpecification
   */
  public static UtteranceSpecification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UtteranceSpecification.class);
  }

  /**
   * Convert an instance of UtteranceSpecification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

