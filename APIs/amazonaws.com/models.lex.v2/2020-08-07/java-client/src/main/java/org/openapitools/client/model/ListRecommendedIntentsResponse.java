/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListRecommendedIntentsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListRecommendedIntentsResponse {
  public static final String SERIALIZED_NAME_BOT_ID = "botId";
  @SerializedName(SERIALIZED_NAME_BOT_ID)
  private String botId;

  public static final String SERIALIZED_NAME_BOT_VERSION = "botVersion";
  @SerializedName(SERIALIZED_NAME_BOT_VERSION)
  private String botVersion;

  public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_BOT_RECOMMENDATION_ID = "botRecommendationId";
  @SerializedName(SERIALIZED_NAME_BOT_RECOMMENDATION_ID)
  private String botRecommendationId;

  public static final String SERIALIZED_NAME_SUMMARY_LIST = "summaryList";
  @SerializedName(SERIALIZED_NAME_SUMMARY_LIST)
  private List summaryList;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "nextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public ListRecommendedIntentsResponse() {
  }

  public ListRecommendedIntentsResponse botId(String botId) {
    this.botId = botId;
    return this;
  }

  /**
   * Get botId
   * @return botId
   */
  @javax.annotation.Nullable
  public String getBotId() {
    return botId;
  }

  public void setBotId(String botId) {
    this.botId = botId;
  }


  public ListRecommendedIntentsResponse botVersion(String botVersion) {
    this.botVersion = botVersion;
    return this;
  }

  /**
   * Get botVersion
   * @return botVersion
   */
  @javax.annotation.Nullable
  public String getBotVersion() {
    return botVersion;
  }

  public void setBotVersion(String botVersion) {
    this.botVersion = botVersion;
  }


  public ListRecommendedIntentsResponse localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * Get localeId
   * @return localeId
   */
  @javax.annotation.Nullable
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public ListRecommendedIntentsResponse botRecommendationId(String botRecommendationId) {
    this.botRecommendationId = botRecommendationId;
    return this;
  }

  /**
   * Get botRecommendationId
   * @return botRecommendationId
   */
  @javax.annotation.Nullable
  public String getBotRecommendationId() {
    return botRecommendationId;
  }

  public void setBotRecommendationId(String botRecommendationId) {
    this.botRecommendationId = botRecommendationId;
  }


  public ListRecommendedIntentsResponse summaryList(List summaryList) {
    this.summaryList = summaryList;
    return this;
  }

  /**
   * Get summaryList
   * @return summaryList
   */
  @javax.annotation.Nullable
  public List getSummaryList() {
    return summaryList;
  }

  public void setSummaryList(List summaryList) {
    this.summaryList = summaryList;
  }


  public ListRecommendedIntentsResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListRecommendedIntentsResponse listRecommendedIntentsResponse = (ListRecommendedIntentsResponse) o;
    return Objects.equals(this.botId, listRecommendedIntentsResponse.botId) &&
        Objects.equals(this.botVersion, listRecommendedIntentsResponse.botVersion) &&
        Objects.equals(this.localeId, listRecommendedIntentsResponse.localeId) &&
        Objects.equals(this.botRecommendationId, listRecommendedIntentsResponse.botRecommendationId) &&
        Objects.equals(this.summaryList, listRecommendedIntentsResponse.summaryList) &&
        Objects.equals(this.nextToken, listRecommendedIntentsResponse.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(botId, botVersion, localeId, botRecommendationId, summaryList, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListRecommendedIntentsResponse {\n");
    sb.append("    botId: ").append(toIndentedString(botId)).append("\n");
    sb.append("    botVersion: ").append(toIndentedString(botVersion)).append("\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    botRecommendationId: ").append(toIndentedString(botRecommendationId)).append("\n");
    sb.append("    summaryList: ").append(toIndentedString(summaryList)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("botId");
    openapiFields.add("botVersion");
    openapiFields.add("localeId");
    openapiFields.add("botRecommendationId");
    openapiFields.add("summaryList");
    openapiFields.add("nextToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListRecommendedIntentsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListRecommendedIntentsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListRecommendedIntentsResponse is not found in the empty JSON string", ListRecommendedIntentsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListRecommendedIntentsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListRecommendedIntentsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `botId`
      if (jsonObj.get("botId") != null && !jsonObj.get("botId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botId"));
      }
      // validate the optional field `botVersion`
      if (jsonObj.get("botVersion") != null && !jsonObj.get("botVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botVersion"));
      }
      // validate the optional field `localeId`
      if (jsonObj.get("localeId") != null && !jsonObj.get("localeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("localeId"));
      }
      // validate the optional field `botRecommendationId`
      if (jsonObj.get("botRecommendationId") != null && !jsonObj.get("botRecommendationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botRecommendationId"));
      }
      // validate the optional field `summaryList`
      if (jsonObj.get("summaryList") != null && !jsonObj.get("summaryList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("summaryList"));
      }
      // validate the optional field `nextToken`
      if (jsonObj.get("nextToken") != null && !jsonObj.get("nextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nextToken"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListRecommendedIntentsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListRecommendedIntentsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListRecommendedIntentsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListRecommendedIntentsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListRecommendedIntentsResponse>() {
           @Override
           public void write(JsonWriter out, ListRecommendedIntentsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListRecommendedIntentsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListRecommendedIntentsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListRecommendedIntentsResponse
   * @throws IOException if the JSON string is invalid with respect to ListRecommendedIntentsResponse
   */
  public static ListRecommendedIntentsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListRecommendedIntentsResponse.class);
  }

  /**
   * Convert an instance of ListRecommendedIntentsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

