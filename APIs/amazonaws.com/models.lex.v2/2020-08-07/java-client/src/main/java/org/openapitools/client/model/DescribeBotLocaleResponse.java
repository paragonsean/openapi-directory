/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BotLocaleStatus;
import org.openapitools.client.model.DescribeBotLocaleResponseVoiceSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeBotLocaleResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeBotLocaleResponse {
  public static final String SERIALIZED_NAME_BOT_ID = "botId";
  @SerializedName(SERIALIZED_NAME_BOT_ID)
  private String botId;

  public static final String SERIALIZED_NAME_BOT_VERSION = "botVersion";
  @SerializedName(SERIALIZED_NAME_BOT_VERSION)
  private String botVersion;

  public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_LOCALE_NAME = "localeName";
  @SerializedName(SERIALIZED_NAME_LOCALE_NAME)
  private String localeName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NLU_INTENT_CONFIDENCE_THRESHOLD = "nluIntentConfidenceThreshold";
  @SerializedName(SERIALIZED_NAME_NLU_INTENT_CONFIDENCE_THRESHOLD)
  private Double nluIntentConfidenceThreshold;

  public static final String SERIALIZED_NAME_VOICE_SETTINGS = "voiceSettings";
  @SerializedName(SERIALIZED_NAME_VOICE_SETTINGS)
  private DescribeBotLocaleResponseVoiceSettings voiceSettings;

  public static final String SERIALIZED_NAME_INTENTS_COUNT = "intentsCount";
  @SerializedName(SERIALIZED_NAME_INTENTS_COUNT)
  private Integer intentsCount;

  public static final String SERIALIZED_NAME_SLOT_TYPES_COUNT = "slotTypesCount";
  @SerializedName(SERIALIZED_NAME_SLOT_TYPES_COUNT)
  private Integer slotTypesCount;

  public static final String SERIALIZED_NAME_BOT_LOCALE_STATUS = "botLocaleStatus";
  @SerializedName(SERIALIZED_NAME_BOT_LOCALE_STATUS)
  private BotLocaleStatus botLocaleStatus;

  public static final String SERIALIZED_NAME_FAILURE_REASONS = "failureReasons";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASONS)
  private List failureReasons;

  public static final String SERIALIZED_NAME_CREATION_DATE_TIME = "creationDateTime";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE_TIME)
  private OffsetDateTime creationDateTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE_TIME = "lastUpdatedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE_TIME)
  private OffsetDateTime lastUpdatedDateTime;

  public static final String SERIALIZED_NAME_LAST_BUILD_SUBMITTED_DATE_TIME = "lastBuildSubmittedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_BUILD_SUBMITTED_DATE_TIME)
  private OffsetDateTime lastBuildSubmittedDateTime;

  public static final String SERIALIZED_NAME_BOT_LOCALE_HISTORY_EVENTS = "botLocaleHistoryEvents";
  @SerializedName(SERIALIZED_NAME_BOT_LOCALE_HISTORY_EVENTS)
  private List botLocaleHistoryEvents;

  public static final String SERIALIZED_NAME_RECOMMENDED_ACTIONS = "recommendedActions";
  @SerializedName(SERIALIZED_NAME_RECOMMENDED_ACTIONS)
  private List recommendedActions;

  public DescribeBotLocaleResponse() {
  }

  public DescribeBotLocaleResponse botId(String botId) {
    this.botId = botId;
    return this;
  }

  /**
   * Get botId
   * @return botId
   */
  @javax.annotation.Nullable
  public String getBotId() {
    return botId;
  }

  public void setBotId(String botId) {
    this.botId = botId;
  }


  public DescribeBotLocaleResponse botVersion(String botVersion) {
    this.botVersion = botVersion;
    return this;
  }

  /**
   * Get botVersion
   * @return botVersion
   */
  @javax.annotation.Nullable
  public String getBotVersion() {
    return botVersion;
  }

  public void setBotVersion(String botVersion) {
    this.botVersion = botVersion;
  }


  public DescribeBotLocaleResponse localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * Get localeId
   * @return localeId
   */
  @javax.annotation.Nullable
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public DescribeBotLocaleResponse localeName(String localeName) {
    this.localeName = localeName;
    return this;
  }

  /**
   * Get localeName
   * @return localeName
   */
  @javax.annotation.Nullable
  public String getLocaleName() {
    return localeName;
  }

  public void setLocaleName(String localeName) {
    this.localeName = localeName;
  }


  public DescribeBotLocaleResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DescribeBotLocaleResponse nluIntentConfidenceThreshold(Double nluIntentConfidenceThreshold) {
    this.nluIntentConfidenceThreshold = nluIntentConfidenceThreshold;
    return this;
  }

  /**
   * Get nluIntentConfidenceThreshold
   * @return nluIntentConfidenceThreshold
   */
  @javax.annotation.Nullable
  public Double getNluIntentConfidenceThreshold() {
    return nluIntentConfidenceThreshold;
  }

  public void setNluIntentConfidenceThreshold(Double nluIntentConfidenceThreshold) {
    this.nluIntentConfidenceThreshold = nluIntentConfidenceThreshold;
  }


  public DescribeBotLocaleResponse voiceSettings(DescribeBotLocaleResponseVoiceSettings voiceSettings) {
    this.voiceSettings = voiceSettings;
    return this;
  }

  /**
   * Get voiceSettings
   * @return voiceSettings
   */
  @javax.annotation.Nullable
  public DescribeBotLocaleResponseVoiceSettings getVoiceSettings() {
    return voiceSettings;
  }

  public void setVoiceSettings(DescribeBotLocaleResponseVoiceSettings voiceSettings) {
    this.voiceSettings = voiceSettings;
  }


  public DescribeBotLocaleResponse intentsCount(Integer intentsCount) {
    this.intentsCount = intentsCount;
    return this;
  }

  /**
   * Get intentsCount
   * @return intentsCount
   */
  @javax.annotation.Nullable
  public Integer getIntentsCount() {
    return intentsCount;
  }

  public void setIntentsCount(Integer intentsCount) {
    this.intentsCount = intentsCount;
  }


  public DescribeBotLocaleResponse slotTypesCount(Integer slotTypesCount) {
    this.slotTypesCount = slotTypesCount;
    return this;
  }

  /**
   * Get slotTypesCount
   * @return slotTypesCount
   */
  @javax.annotation.Nullable
  public Integer getSlotTypesCount() {
    return slotTypesCount;
  }

  public void setSlotTypesCount(Integer slotTypesCount) {
    this.slotTypesCount = slotTypesCount;
  }


  public DescribeBotLocaleResponse botLocaleStatus(BotLocaleStatus botLocaleStatus) {
    this.botLocaleStatus = botLocaleStatus;
    return this;
  }

  /**
   * Get botLocaleStatus
   * @return botLocaleStatus
   */
  @javax.annotation.Nullable
  public BotLocaleStatus getBotLocaleStatus() {
    return botLocaleStatus;
  }

  public void setBotLocaleStatus(BotLocaleStatus botLocaleStatus) {
    this.botLocaleStatus = botLocaleStatus;
  }


  public DescribeBotLocaleResponse failureReasons(List failureReasons) {
    this.failureReasons = failureReasons;
    return this;
  }

  /**
   * Get failureReasons
   * @return failureReasons
   */
  @javax.annotation.Nullable
  public List getFailureReasons() {
    return failureReasons;
  }

  public void setFailureReasons(List failureReasons) {
    this.failureReasons = failureReasons;
  }


  public DescribeBotLocaleResponse creationDateTime(OffsetDateTime creationDateTime) {
    this.creationDateTime = creationDateTime;
    return this;
  }

  /**
   * Get creationDateTime
   * @return creationDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDateTime() {
    return creationDateTime;
  }

  public void setCreationDateTime(OffsetDateTime creationDateTime) {
    this.creationDateTime = creationDateTime;
  }


  public DescribeBotLocaleResponse lastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
    return this;
  }

  /**
   * Get lastUpdatedDateTime
   * @return lastUpdatedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDateTime() {
    return lastUpdatedDateTime;
  }

  public void setLastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
    this.lastUpdatedDateTime = lastUpdatedDateTime;
  }


  public DescribeBotLocaleResponse lastBuildSubmittedDateTime(OffsetDateTime lastBuildSubmittedDateTime) {
    this.lastBuildSubmittedDateTime = lastBuildSubmittedDateTime;
    return this;
  }

  /**
   * Get lastBuildSubmittedDateTime
   * @return lastBuildSubmittedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastBuildSubmittedDateTime() {
    return lastBuildSubmittedDateTime;
  }

  public void setLastBuildSubmittedDateTime(OffsetDateTime lastBuildSubmittedDateTime) {
    this.lastBuildSubmittedDateTime = lastBuildSubmittedDateTime;
  }


  public DescribeBotLocaleResponse botLocaleHistoryEvents(List botLocaleHistoryEvents) {
    this.botLocaleHistoryEvents = botLocaleHistoryEvents;
    return this;
  }

  /**
   * Get botLocaleHistoryEvents
   * @return botLocaleHistoryEvents
   */
  @javax.annotation.Nullable
  public List getBotLocaleHistoryEvents() {
    return botLocaleHistoryEvents;
  }

  public void setBotLocaleHistoryEvents(List botLocaleHistoryEvents) {
    this.botLocaleHistoryEvents = botLocaleHistoryEvents;
  }


  public DescribeBotLocaleResponse recommendedActions(List recommendedActions) {
    this.recommendedActions = recommendedActions;
    return this;
  }

  /**
   * Get recommendedActions
   * @return recommendedActions
   */
  @javax.annotation.Nullable
  public List getRecommendedActions() {
    return recommendedActions;
  }

  public void setRecommendedActions(List recommendedActions) {
    this.recommendedActions = recommendedActions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeBotLocaleResponse describeBotLocaleResponse = (DescribeBotLocaleResponse) o;
    return Objects.equals(this.botId, describeBotLocaleResponse.botId) &&
        Objects.equals(this.botVersion, describeBotLocaleResponse.botVersion) &&
        Objects.equals(this.localeId, describeBotLocaleResponse.localeId) &&
        Objects.equals(this.localeName, describeBotLocaleResponse.localeName) &&
        Objects.equals(this.description, describeBotLocaleResponse.description) &&
        Objects.equals(this.nluIntentConfidenceThreshold, describeBotLocaleResponse.nluIntentConfidenceThreshold) &&
        Objects.equals(this.voiceSettings, describeBotLocaleResponse.voiceSettings) &&
        Objects.equals(this.intentsCount, describeBotLocaleResponse.intentsCount) &&
        Objects.equals(this.slotTypesCount, describeBotLocaleResponse.slotTypesCount) &&
        Objects.equals(this.botLocaleStatus, describeBotLocaleResponse.botLocaleStatus) &&
        Objects.equals(this.failureReasons, describeBotLocaleResponse.failureReasons) &&
        Objects.equals(this.creationDateTime, describeBotLocaleResponse.creationDateTime) &&
        Objects.equals(this.lastUpdatedDateTime, describeBotLocaleResponse.lastUpdatedDateTime) &&
        Objects.equals(this.lastBuildSubmittedDateTime, describeBotLocaleResponse.lastBuildSubmittedDateTime) &&
        Objects.equals(this.botLocaleHistoryEvents, describeBotLocaleResponse.botLocaleHistoryEvents) &&
        Objects.equals(this.recommendedActions, describeBotLocaleResponse.recommendedActions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(botId, botVersion, localeId, localeName, description, nluIntentConfidenceThreshold, voiceSettings, intentsCount, slotTypesCount, botLocaleStatus, failureReasons, creationDateTime, lastUpdatedDateTime, lastBuildSubmittedDateTime, botLocaleHistoryEvents, recommendedActions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeBotLocaleResponse {\n");
    sb.append("    botId: ").append(toIndentedString(botId)).append("\n");
    sb.append("    botVersion: ").append(toIndentedString(botVersion)).append("\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    localeName: ").append(toIndentedString(localeName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    nluIntentConfidenceThreshold: ").append(toIndentedString(nluIntentConfidenceThreshold)).append("\n");
    sb.append("    voiceSettings: ").append(toIndentedString(voiceSettings)).append("\n");
    sb.append("    intentsCount: ").append(toIndentedString(intentsCount)).append("\n");
    sb.append("    slotTypesCount: ").append(toIndentedString(slotTypesCount)).append("\n");
    sb.append("    botLocaleStatus: ").append(toIndentedString(botLocaleStatus)).append("\n");
    sb.append("    failureReasons: ").append(toIndentedString(failureReasons)).append("\n");
    sb.append("    creationDateTime: ").append(toIndentedString(creationDateTime)).append("\n");
    sb.append("    lastUpdatedDateTime: ").append(toIndentedString(lastUpdatedDateTime)).append("\n");
    sb.append("    lastBuildSubmittedDateTime: ").append(toIndentedString(lastBuildSubmittedDateTime)).append("\n");
    sb.append("    botLocaleHistoryEvents: ").append(toIndentedString(botLocaleHistoryEvents)).append("\n");
    sb.append("    recommendedActions: ").append(toIndentedString(recommendedActions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("botId");
    openapiFields.add("botVersion");
    openapiFields.add("localeId");
    openapiFields.add("localeName");
    openapiFields.add("description");
    openapiFields.add("nluIntentConfidenceThreshold");
    openapiFields.add("voiceSettings");
    openapiFields.add("intentsCount");
    openapiFields.add("slotTypesCount");
    openapiFields.add("botLocaleStatus");
    openapiFields.add("failureReasons");
    openapiFields.add("creationDateTime");
    openapiFields.add("lastUpdatedDateTime");
    openapiFields.add("lastBuildSubmittedDateTime");
    openapiFields.add("botLocaleHistoryEvents");
    openapiFields.add("recommendedActions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeBotLocaleResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeBotLocaleResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeBotLocaleResponse is not found in the empty JSON string", DescribeBotLocaleResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeBotLocaleResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeBotLocaleResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `botId`
      if (jsonObj.get("botId") != null && !jsonObj.get("botId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botId"));
      }
      // validate the optional field `botVersion`
      if (jsonObj.get("botVersion") != null && !jsonObj.get("botVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botVersion"));
      }
      // validate the optional field `localeId`
      if (jsonObj.get("localeId") != null && !jsonObj.get("localeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("localeId"));
      }
      // validate the optional field `localeName`
      if (jsonObj.get("localeName") != null && !jsonObj.get("localeName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("localeName"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `nluIntentConfidenceThreshold`
      if (jsonObj.get("nluIntentConfidenceThreshold") != null && !jsonObj.get("nluIntentConfidenceThreshold").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("nluIntentConfidenceThreshold"));
      }
      // validate the optional field `voiceSettings`
      if (jsonObj.get("voiceSettings") != null && !jsonObj.get("voiceSettings").isJsonNull()) {
        DescribeBotLocaleResponseVoiceSettings.validateJsonElement(jsonObj.get("voiceSettings"));
      }
      // validate the optional field `intentsCount`
      if (jsonObj.get("intentsCount") != null && !jsonObj.get("intentsCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("intentsCount"));
      }
      // validate the optional field `slotTypesCount`
      if (jsonObj.get("slotTypesCount") != null && !jsonObj.get("slotTypesCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("slotTypesCount"));
      }
      // validate the optional field `botLocaleStatus`
      if (jsonObj.get("botLocaleStatus") != null && !jsonObj.get("botLocaleStatus").isJsonNull()) {
        BotLocaleStatus.validateJsonElement(jsonObj.get("botLocaleStatus"));
      }
      // validate the optional field `failureReasons`
      if (jsonObj.get("failureReasons") != null && !jsonObj.get("failureReasons").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("failureReasons"));
      }
      // validate the optional field `creationDateTime`
      if (jsonObj.get("creationDateTime") != null && !jsonObj.get("creationDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationDateTime"));
      }
      // validate the optional field `lastUpdatedDateTime`
      if (jsonObj.get("lastUpdatedDateTime") != null && !jsonObj.get("lastUpdatedDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedDateTime"));
      }
      // validate the optional field `lastBuildSubmittedDateTime`
      if (jsonObj.get("lastBuildSubmittedDateTime") != null && !jsonObj.get("lastBuildSubmittedDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastBuildSubmittedDateTime"));
      }
      // validate the optional field `botLocaleHistoryEvents`
      if (jsonObj.get("botLocaleHistoryEvents") != null && !jsonObj.get("botLocaleHistoryEvents").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("botLocaleHistoryEvents"));
      }
      // validate the optional field `recommendedActions`
      if (jsonObj.get("recommendedActions") != null && !jsonObj.get("recommendedActions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("recommendedActions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeBotLocaleResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeBotLocaleResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeBotLocaleResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeBotLocaleResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeBotLocaleResponse>() {
           @Override
           public void write(JsonWriter out, DescribeBotLocaleResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeBotLocaleResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeBotLocaleResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeBotLocaleResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeBotLocaleResponse
   */
  public static DescribeBotLocaleResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeBotLocaleResponse.class);
  }

  /**
   * Convert an instance of DescribeBotLocaleResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

