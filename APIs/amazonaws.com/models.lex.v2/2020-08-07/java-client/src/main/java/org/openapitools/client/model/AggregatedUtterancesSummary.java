/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides summary information for aggregated utterances. The &lt;code&gt;ListAggregatedUtterances&lt;/code&gt; operations combines all instances of the same utterance into a single aggregated summary.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AggregatedUtterancesSummary {
  public static final String SERIALIZED_NAME_UTTERANCE = "utterance";
  @SerializedName(SERIALIZED_NAME_UTTERANCE)
  private String utterance;

  public static final String SERIALIZED_NAME_HIT_COUNT = "hitCount";
  @SerializedName(SERIALIZED_NAME_HIT_COUNT)
  private Integer hitCount;

  public static final String SERIALIZED_NAME_MISSED_COUNT = "missedCount";
  @SerializedName(SERIALIZED_NAME_MISSED_COUNT)
  private Integer missedCount;

  public static final String SERIALIZED_NAME_UTTERANCE_FIRST_RECORDED_IN_AGGREGATION_DURATION = "utteranceFirstRecordedInAggregationDuration";
  @SerializedName(SERIALIZED_NAME_UTTERANCE_FIRST_RECORDED_IN_AGGREGATION_DURATION)
  private OffsetDateTime utteranceFirstRecordedInAggregationDuration;

  public static final String SERIALIZED_NAME_UTTERANCE_LAST_RECORDED_IN_AGGREGATION_DURATION = "utteranceLastRecordedInAggregationDuration";
  @SerializedName(SERIALIZED_NAME_UTTERANCE_LAST_RECORDED_IN_AGGREGATION_DURATION)
  private OffsetDateTime utteranceLastRecordedInAggregationDuration;

  public static final String SERIALIZED_NAME_CONTAINS_DATA_FROM_DELETED_RESOURCES = "containsDataFromDeletedResources";
  @SerializedName(SERIALIZED_NAME_CONTAINS_DATA_FROM_DELETED_RESOURCES)
  private Boolean containsDataFromDeletedResources;

  public AggregatedUtterancesSummary() {
  }

  public AggregatedUtterancesSummary utterance(String utterance) {
    this.utterance = utterance;
    return this;
  }

  /**
   * Get utterance
   * @return utterance
   */
  @javax.annotation.Nullable
  public String getUtterance() {
    return utterance;
  }

  public void setUtterance(String utterance) {
    this.utterance = utterance;
  }


  public AggregatedUtterancesSummary hitCount(Integer hitCount) {
    this.hitCount = hitCount;
    return this;
  }

  /**
   * Get hitCount
   * @return hitCount
   */
  @javax.annotation.Nullable
  public Integer getHitCount() {
    return hitCount;
  }

  public void setHitCount(Integer hitCount) {
    this.hitCount = hitCount;
  }


  public AggregatedUtterancesSummary missedCount(Integer missedCount) {
    this.missedCount = missedCount;
    return this;
  }

  /**
   * Get missedCount
   * @return missedCount
   */
  @javax.annotation.Nullable
  public Integer getMissedCount() {
    return missedCount;
  }

  public void setMissedCount(Integer missedCount) {
    this.missedCount = missedCount;
  }


  public AggregatedUtterancesSummary utteranceFirstRecordedInAggregationDuration(OffsetDateTime utteranceFirstRecordedInAggregationDuration) {
    this.utteranceFirstRecordedInAggregationDuration = utteranceFirstRecordedInAggregationDuration;
    return this;
  }

  /**
   * Get utteranceFirstRecordedInAggregationDuration
   * @return utteranceFirstRecordedInAggregationDuration
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUtteranceFirstRecordedInAggregationDuration() {
    return utteranceFirstRecordedInAggregationDuration;
  }

  public void setUtteranceFirstRecordedInAggregationDuration(OffsetDateTime utteranceFirstRecordedInAggregationDuration) {
    this.utteranceFirstRecordedInAggregationDuration = utteranceFirstRecordedInAggregationDuration;
  }


  public AggregatedUtterancesSummary utteranceLastRecordedInAggregationDuration(OffsetDateTime utteranceLastRecordedInAggregationDuration) {
    this.utteranceLastRecordedInAggregationDuration = utteranceLastRecordedInAggregationDuration;
    return this;
  }

  /**
   * Get utteranceLastRecordedInAggregationDuration
   * @return utteranceLastRecordedInAggregationDuration
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUtteranceLastRecordedInAggregationDuration() {
    return utteranceLastRecordedInAggregationDuration;
  }

  public void setUtteranceLastRecordedInAggregationDuration(OffsetDateTime utteranceLastRecordedInAggregationDuration) {
    this.utteranceLastRecordedInAggregationDuration = utteranceLastRecordedInAggregationDuration;
  }


  public AggregatedUtterancesSummary containsDataFromDeletedResources(Boolean containsDataFromDeletedResources) {
    this.containsDataFromDeletedResources = containsDataFromDeletedResources;
    return this;
  }

  /**
   * Get containsDataFromDeletedResources
   * @return containsDataFromDeletedResources
   */
  @javax.annotation.Nullable
  public Boolean getContainsDataFromDeletedResources() {
    return containsDataFromDeletedResources;
  }

  public void setContainsDataFromDeletedResources(Boolean containsDataFromDeletedResources) {
    this.containsDataFromDeletedResources = containsDataFromDeletedResources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregatedUtterancesSummary aggregatedUtterancesSummary = (AggregatedUtterancesSummary) o;
    return Objects.equals(this.utterance, aggregatedUtterancesSummary.utterance) &&
        Objects.equals(this.hitCount, aggregatedUtterancesSummary.hitCount) &&
        Objects.equals(this.missedCount, aggregatedUtterancesSummary.missedCount) &&
        Objects.equals(this.utteranceFirstRecordedInAggregationDuration, aggregatedUtterancesSummary.utteranceFirstRecordedInAggregationDuration) &&
        Objects.equals(this.utteranceLastRecordedInAggregationDuration, aggregatedUtterancesSummary.utteranceLastRecordedInAggregationDuration) &&
        Objects.equals(this.containsDataFromDeletedResources, aggregatedUtterancesSummary.containsDataFromDeletedResources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(utterance, hitCount, missedCount, utteranceFirstRecordedInAggregationDuration, utteranceLastRecordedInAggregationDuration, containsDataFromDeletedResources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregatedUtterancesSummary {\n");
    sb.append("    utterance: ").append(toIndentedString(utterance)).append("\n");
    sb.append("    hitCount: ").append(toIndentedString(hitCount)).append("\n");
    sb.append("    missedCount: ").append(toIndentedString(missedCount)).append("\n");
    sb.append("    utteranceFirstRecordedInAggregationDuration: ").append(toIndentedString(utteranceFirstRecordedInAggregationDuration)).append("\n");
    sb.append("    utteranceLastRecordedInAggregationDuration: ").append(toIndentedString(utteranceLastRecordedInAggregationDuration)).append("\n");
    sb.append("    containsDataFromDeletedResources: ").append(toIndentedString(containsDataFromDeletedResources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("utterance");
    openapiFields.add("hitCount");
    openapiFields.add("missedCount");
    openapiFields.add("utteranceFirstRecordedInAggregationDuration");
    openapiFields.add("utteranceLastRecordedInAggregationDuration");
    openapiFields.add("containsDataFromDeletedResources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AggregatedUtterancesSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AggregatedUtterancesSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AggregatedUtterancesSummary is not found in the empty JSON string", AggregatedUtterancesSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AggregatedUtterancesSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AggregatedUtterancesSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `utterance`
      if (jsonObj.get("utterance") != null && !jsonObj.get("utterance").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("utterance"));
      }
      // validate the optional field `hitCount`
      if (jsonObj.get("hitCount") != null && !jsonObj.get("hitCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("hitCount"));
      }
      // validate the optional field `missedCount`
      if (jsonObj.get("missedCount") != null && !jsonObj.get("missedCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("missedCount"));
      }
      // validate the optional field `utteranceFirstRecordedInAggregationDuration`
      if (jsonObj.get("utteranceFirstRecordedInAggregationDuration") != null && !jsonObj.get("utteranceFirstRecordedInAggregationDuration").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("utteranceFirstRecordedInAggregationDuration"));
      }
      // validate the optional field `utteranceLastRecordedInAggregationDuration`
      if (jsonObj.get("utteranceLastRecordedInAggregationDuration") != null && !jsonObj.get("utteranceLastRecordedInAggregationDuration").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("utteranceLastRecordedInAggregationDuration"));
      }
      // validate the optional field `containsDataFromDeletedResources`
      if (jsonObj.get("containsDataFromDeletedResources") != null && !jsonObj.get("containsDataFromDeletedResources").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("containsDataFromDeletedResources"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AggregatedUtterancesSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AggregatedUtterancesSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AggregatedUtterancesSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AggregatedUtterancesSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<AggregatedUtterancesSummary>() {
           @Override
           public void write(JsonWriter out, AggregatedUtterancesSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AggregatedUtterancesSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AggregatedUtterancesSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AggregatedUtterancesSummary
   * @throws IOException if the JSON string is invalid with respect to AggregatedUtterancesSummary
   */
  public static AggregatedUtterancesSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AggregatedUtterancesSummary.class);
  }

  /**
   * Convert an instance of AggregatedUtterancesSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

