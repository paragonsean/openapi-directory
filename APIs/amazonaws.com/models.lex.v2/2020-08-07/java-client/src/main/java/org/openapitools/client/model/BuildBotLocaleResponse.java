/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.BotLocaleStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BuildBotLocaleResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BuildBotLocaleResponse {
  public static final String SERIALIZED_NAME_BOT_ID = "botId";
  @SerializedName(SERIALIZED_NAME_BOT_ID)
  private String botId;

  public static final String SERIALIZED_NAME_BOT_VERSION = "botVersion";
  @SerializedName(SERIALIZED_NAME_BOT_VERSION)
  private String botVersion;

  public static final String SERIALIZED_NAME_LOCALE_ID = "localeId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_BOT_LOCALE_STATUS = "botLocaleStatus";
  @SerializedName(SERIALIZED_NAME_BOT_LOCALE_STATUS)
  private BotLocaleStatus botLocaleStatus;

  public static final String SERIALIZED_NAME_LAST_BUILD_SUBMITTED_DATE_TIME = "lastBuildSubmittedDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_BUILD_SUBMITTED_DATE_TIME)
  private OffsetDateTime lastBuildSubmittedDateTime;

  public BuildBotLocaleResponse() {
  }

  public BuildBotLocaleResponse botId(String botId) {
    this.botId = botId;
    return this;
  }

  /**
   * Get botId
   * @return botId
   */
  @javax.annotation.Nullable
  public String getBotId() {
    return botId;
  }

  public void setBotId(String botId) {
    this.botId = botId;
  }


  public BuildBotLocaleResponse botVersion(String botVersion) {
    this.botVersion = botVersion;
    return this;
  }

  /**
   * Get botVersion
   * @return botVersion
   */
  @javax.annotation.Nullable
  public String getBotVersion() {
    return botVersion;
  }

  public void setBotVersion(String botVersion) {
    this.botVersion = botVersion;
  }


  public BuildBotLocaleResponse localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * Get localeId
   * @return localeId
   */
  @javax.annotation.Nullable
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public BuildBotLocaleResponse botLocaleStatus(BotLocaleStatus botLocaleStatus) {
    this.botLocaleStatus = botLocaleStatus;
    return this;
  }

  /**
   * Get botLocaleStatus
   * @return botLocaleStatus
   */
  @javax.annotation.Nullable
  public BotLocaleStatus getBotLocaleStatus() {
    return botLocaleStatus;
  }

  public void setBotLocaleStatus(BotLocaleStatus botLocaleStatus) {
    this.botLocaleStatus = botLocaleStatus;
  }


  public BuildBotLocaleResponse lastBuildSubmittedDateTime(OffsetDateTime lastBuildSubmittedDateTime) {
    this.lastBuildSubmittedDateTime = lastBuildSubmittedDateTime;
    return this;
  }

  /**
   * Get lastBuildSubmittedDateTime
   * @return lastBuildSubmittedDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastBuildSubmittedDateTime() {
    return lastBuildSubmittedDateTime;
  }

  public void setLastBuildSubmittedDateTime(OffsetDateTime lastBuildSubmittedDateTime) {
    this.lastBuildSubmittedDateTime = lastBuildSubmittedDateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildBotLocaleResponse buildBotLocaleResponse = (BuildBotLocaleResponse) o;
    return Objects.equals(this.botId, buildBotLocaleResponse.botId) &&
        Objects.equals(this.botVersion, buildBotLocaleResponse.botVersion) &&
        Objects.equals(this.localeId, buildBotLocaleResponse.localeId) &&
        Objects.equals(this.botLocaleStatus, buildBotLocaleResponse.botLocaleStatus) &&
        Objects.equals(this.lastBuildSubmittedDateTime, buildBotLocaleResponse.lastBuildSubmittedDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(botId, botVersion, localeId, botLocaleStatus, lastBuildSubmittedDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildBotLocaleResponse {\n");
    sb.append("    botId: ").append(toIndentedString(botId)).append("\n");
    sb.append("    botVersion: ").append(toIndentedString(botVersion)).append("\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    botLocaleStatus: ").append(toIndentedString(botLocaleStatus)).append("\n");
    sb.append("    lastBuildSubmittedDateTime: ").append(toIndentedString(lastBuildSubmittedDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("botId");
    openapiFields.add("botVersion");
    openapiFields.add("localeId");
    openapiFields.add("botLocaleStatus");
    openapiFields.add("lastBuildSubmittedDateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BuildBotLocaleResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BuildBotLocaleResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BuildBotLocaleResponse is not found in the empty JSON string", BuildBotLocaleResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BuildBotLocaleResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BuildBotLocaleResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `botId`
      if (jsonObj.get("botId") != null && !jsonObj.get("botId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botId"));
      }
      // validate the optional field `botVersion`
      if (jsonObj.get("botVersion") != null && !jsonObj.get("botVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botVersion"));
      }
      // validate the optional field `localeId`
      if (jsonObj.get("localeId") != null && !jsonObj.get("localeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("localeId"));
      }
      // validate the optional field `botLocaleStatus`
      if (jsonObj.get("botLocaleStatus") != null && !jsonObj.get("botLocaleStatus").isJsonNull()) {
        BotLocaleStatus.validateJsonElement(jsonObj.get("botLocaleStatus"));
      }
      // validate the optional field `lastBuildSubmittedDateTime`
      if (jsonObj.get("lastBuildSubmittedDateTime") != null && !jsonObj.get("lastBuildSubmittedDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastBuildSubmittedDateTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BuildBotLocaleResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BuildBotLocaleResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BuildBotLocaleResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BuildBotLocaleResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<BuildBotLocaleResponse>() {
           @Override
           public void write(JsonWriter out, BuildBotLocaleResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BuildBotLocaleResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BuildBotLocaleResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BuildBotLocaleResponse
   * @throws IOException if the JSON string is invalid with respect to BuildBotLocaleResponse
   */
  public static BuildBotLocaleResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BuildBotLocaleResponse.class);
  }

  /**
   * Convert an instance of BuildBotLocaleResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

