/*
 * Amazon Lex Model Building V2
 * <p/>
 *
 * The version of the OpenAPI document: 2020-08-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification;
import org.openapitools.client.model.CreateIntentRequestFulfillmentCodeHookPostFulfillmentStatusSpecification;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateIntentRequestFulfillmentCodeHook
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:23.943104-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateIntentRequestFulfillmentCodeHook {
  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_POST_FULFILLMENT_STATUS_SPECIFICATION = "postFulfillmentStatusSpecification";
  @SerializedName(SERIALIZED_NAME_POST_FULFILLMENT_STATUS_SPECIFICATION)
  private CreateIntentRequestFulfillmentCodeHookPostFulfillmentStatusSpecification postFulfillmentStatusSpecification;

  public static final String SERIALIZED_NAME_FULFILLMENT_UPDATES_SPECIFICATION = "fulfillmentUpdatesSpecification";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_UPDATES_SPECIFICATION)
  private CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification fulfillmentUpdatesSpecification;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public UpdateIntentRequestFulfillmentCodeHook() {
  }

  public UpdateIntentRequestFulfillmentCodeHook enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public UpdateIntentRequestFulfillmentCodeHook postFulfillmentStatusSpecification(CreateIntentRequestFulfillmentCodeHookPostFulfillmentStatusSpecification postFulfillmentStatusSpecification) {
    this.postFulfillmentStatusSpecification = postFulfillmentStatusSpecification;
    return this;
  }

  /**
   * Get postFulfillmentStatusSpecification
   * @return postFulfillmentStatusSpecification
   */
  @javax.annotation.Nullable
  public CreateIntentRequestFulfillmentCodeHookPostFulfillmentStatusSpecification getPostFulfillmentStatusSpecification() {
    return postFulfillmentStatusSpecification;
  }

  public void setPostFulfillmentStatusSpecification(CreateIntentRequestFulfillmentCodeHookPostFulfillmentStatusSpecification postFulfillmentStatusSpecification) {
    this.postFulfillmentStatusSpecification = postFulfillmentStatusSpecification;
  }


  public UpdateIntentRequestFulfillmentCodeHook fulfillmentUpdatesSpecification(CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification fulfillmentUpdatesSpecification) {
    this.fulfillmentUpdatesSpecification = fulfillmentUpdatesSpecification;
    return this;
  }

  /**
   * Get fulfillmentUpdatesSpecification
   * @return fulfillmentUpdatesSpecification
   */
  @javax.annotation.Nullable
  public CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification getFulfillmentUpdatesSpecification() {
    return fulfillmentUpdatesSpecification;
  }

  public void setFulfillmentUpdatesSpecification(CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification fulfillmentUpdatesSpecification) {
    this.fulfillmentUpdatesSpecification = fulfillmentUpdatesSpecification;
  }


  public UpdateIntentRequestFulfillmentCodeHook active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Get active
   * @return active
   */
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateIntentRequestFulfillmentCodeHook updateIntentRequestFulfillmentCodeHook = (UpdateIntentRequestFulfillmentCodeHook) o;
    return Objects.equals(this.enabled, updateIntentRequestFulfillmentCodeHook.enabled) &&
        Objects.equals(this.postFulfillmentStatusSpecification, updateIntentRequestFulfillmentCodeHook.postFulfillmentStatusSpecification) &&
        Objects.equals(this.fulfillmentUpdatesSpecification, updateIntentRequestFulfillmentCodeHook.fulfillmentUpdatesSpecification) &&
        Objects.equals(this.active, updateIntentRequestFulfillmentCodeHook.active);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, postFulfillmentStatusSpecification, fulfillmentUpdatesSpecification, active);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateIntentRequestFulfillmentCodeHook {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    postFulfillmentStatusSpecification: ").append(toIndentedString(postFulfillmentStatusSpecification)).append("\n");
    sb.append("    fulfillmentUpdatesSpecification: ").append(toIndentedString(fulfillmentUpdatesSpecification)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enabled");
    openapiFields.add("postFulfillmentStatusSpecification");
    openapiFields.add("fulfillmentUpdatesSpecification");
    openapiFields.add("active");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("enabled");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateIntentRequestFulfillmentCodeHook
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateIntentRequestFulfillmentCodeHook.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateIntentRequestFulfillmentCodeHook is not found in the empty JSON string", UpdateIntentRequestFulfillmentCodeHook.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateIntentRequestFulfillmentCodeHook.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateIntentRequestFulfillmentCodeHook` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateIntentRequestFulfillmentCodeHook.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `enabled`
      Boolean.validateJsonElement(jsonObj.get("enabled"));
      // validate the optional field `postFulfillmentStatusSpecification`
      if (jsonObj.get("postFulfillmentStatusSpecification") != null && !jsonObj.get("postFulfillmentStatusSpecification").isJsonNull()) {
        CreateIntentRequestFulfillmentCodeHookPostFulfillmentStatusSpecification.validateJsonElement(jsonObj.get("postFulfillmentStatusSpecification"));
      }
      // validate the optional field `fulfillmentUpdatesSpecification`
      if (jsonObj.get("fulfillmentUpdatesSpecification") != null && !jsonObj.get("fulfillmentUpdatesSpecification").isJsonNull()) {
        CreateIntentRequestFulfillmentCodeHookFulfillmentUpdatesSpecification.validateJsonElement(jsonObj.get("fulfillmentUpdatesSpecification"));
      }
      // validate the optional field `active`
      if (jsonObj.get("active") != null && !jsonObj.get("active").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("active"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateIntentRequestFulfillmentCodeHook.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateIntentRequestFulfillmentCodeHook' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateIntentRequestFulfillmentCodeHook> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateIntentRequestFulfillmentCodeHook.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateIntentRequestFulfillmentCodeHook>() {
           @Override
           public void write(JsonWriter out, UpdateIntentRequestFulfillmentCodeHook value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateIntentRequestFulfillmentCodeHook read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateIntentRequestFulfillmentCodeHook given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateIntentRequestFulfillmentCodeHook
   * @throws IOException if the JSON string is invalid with respect to UpdateIntentRequestFulfillmentCodeHook
   */
  public static UpdateIntentRequestFulfillmentCodeHook fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateIntentRequestFulfillmentCodeHook.class);
  }

  /**
   * Convert an instance of UpdateIntentRequestFulfillmentCodeHook to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

