# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transcript_filter_lex_transcript_filter import TranscriptFilterLexTranscriptFilter
from openapi_server import util


class TranscriptFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lex_transcript_filter: TranscriptFilterLexTranscriptFilter=None):
        """TranscriptFilter - a model defined in OpenAPI

        :param lex_transcript_filter: The lex_transcript_filter of this TranscriptFilter.
        """
        self.openapi_types = {
            'lex_transcript_filter': TranscriptFilterLexTranscriptFilter
        }

        self.attribute_map = {
            'lex_transcript_filter': 'lexTranscriptFilter'
        }

        self._lex_transcript_filter = lex_transcript_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TranscriptFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TranscriptFilter of this TranscriptFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lex_transcript_filter(self):
        """Gets the lex_transcript_filter of this TranscriptFilter.


        :return: The lex_transcript_filter of this TranscriptFilter.
        :rtype: TranscriptFilterLexTranscriptFilter
        """
        return self._lex_transcript_filter

    @lex_transcript_filter.setter
    def lex_transcript_filter(self, lex_transcript_filter):
        """Sets the lex_transcript_filter of this TranscriptFilter.


        :param lex_transcript_filter: The lex_transcript_filter of this TranscriptFilter.
        :type lex_transcript_filter: TranscriptFilterLexTranscriptFilter
        """

        self._lex_transcript_filter = lex_transcript_filter
