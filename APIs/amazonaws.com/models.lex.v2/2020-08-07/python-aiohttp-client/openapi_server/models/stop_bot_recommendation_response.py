# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bot_recommendation_status import BotRecommendationStatus
from openapi_server import util


class StopBotRecommendationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bot_id: str=None, bot_version: str=None, locale_id: str=None, bot_recommendation_status: BotRecommendationStatus=None, bot_recommendation_id: str=None):
        """StopBotRecommendationResponse - a model defined in OpenAPI

        :param bot_id: The bot_id of this StopBotRecommendationResponse.
        :param bot_version: The bot_version of this StopBotRecommendationResponse.
        :param locale_id: The locale_id of this StopBotRecommendationResponse.
        :param bot_recommendation_status: The bot_recommendation_status of this StopBotRecommendationResponse.
        :param bot_recommendation_id: The bot_recommendation_id of this StopBotRecommendationResponse.
        """
        self.openapi_types = {
            'bot_id': str,
            'bot_version': str,
            'locale_id': str,
            'bot_recommendation_status': BotRecommendationStatus,
            'bot_recommendation_id': str
        }

        self.attribute_map = {
            'bot_id': 'botId',
            'bot_version': 'botVersion',
            'locale_id': 'localeId',
            'bot_recommendation_status': 'botRecommendationStatus',
            'bot_recommendation_id': 'botRecommendationId'
        }

        self._bot_id = bot_id
        self._bot_version = bot_version
        self._locale_id = locale_id
        self._bot_recommendation_status = bot_recommendation_status
        self._bot_recommendation_id = bot_recommendation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StopBotRecommendationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StopBotRecommendationResponse of this StopBotRecommendationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bot_id(self):
        """Gets the bot_id of this StopBotRecommendationResponse.


        :return: The bot_id of this StopBotRecommendationResponse.
        :rtype: str
        """
        return self._bot_id

    @bot_id.setter
    def bot_id(self, bot_id):
        """Sets the bot_id of this StopBotRecommendationResponse.


        :param bot_id: The bot_id of this StopBotRecommendationResponse.
        :type bot_id: str
        """

        self._bot_id = bot_id

    @property
    def bot_version(self):
        """Gets the bot_version of this StopBotRecommendationResponse.


        :return: The bot_version of this StopBotRecommendationResponse.
        :rtype: str
        """
        return self._bot_version

    @bot_version.setter
    def bot_version(self, bot_version):
        """Sets the bot_version of this StopBotRecommendationResponse.


        :param bot_version: The bot_version of this StopBotRecommendationResponse.
        :type bot_version: str
        """

        self._bot_version = bot_version

    @property
    def locale_id(self):
        """Gets the locale_id of this StopBotRecommendationResponse.


        :return: The locale_id of this StopBotRecommendationResponse.
        :rtype: str
        """
        return self._locale_id

    @locale_id.setter
    def locale_id(self, locale_id):
        """Sets the locale_id of this StopBotRecommendationResponse.


        :param locale_id: The locale_id of this StopBotRecommendationResponse.
        :type locale_id: str
        """

        self._locale_id = locale_id

    @property
    def bot_recommendation_status(self):
        """Gets the bot_recommendation_status of this StopBotRecommendationResponse.


        :return: The bot_recommendation_status of this StopBotRecommendationResponse.
        :rtype: BotRecommendationStatus
        """
        return self._bot_recommendation_status

    @bot_recommendation_status.setter
    def bot_recommendation_status(self, bot_recommendation_status):
        """Sets the bot_recommendation_status of this StopBotRecommendationResponse.


        :param bot_recommendation_status: The bot_recommendation_status of this StopBotRecommendationResponse.
        :type bot_recommendation_status: BotRecommendationStatus
        """

        self._bot_recommendation_status = bot_recommendation_status

    @property
    def bot_recommendation_id(self):
        """Gets the bot_recommendation_id of this StopBotRecommendationResponse.


        :return: The bot_recommendation_id of this StopBotRecommendationResponse.
        :rtype: str
        """
        return self._bot_recommendation_id

    @bot_recommendation_id.setter
    def bot_recommendation_id(self, bot_recommendation_id):
        """Sets the bot_recommendation_id of this StopBotRecommendationResponse.


        :param bot_recommendation_id: The bot_recommendation_id of this StopBotRecommendationResponse.
        :type bot_recommendation_id: str
        """

        self._bot_recommendation_id = bot_recommendation_id
