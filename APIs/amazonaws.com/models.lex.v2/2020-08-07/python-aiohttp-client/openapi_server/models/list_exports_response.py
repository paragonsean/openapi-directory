# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListExportsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bot_id: str=None, bot_version: str=None, export_summaries: List=None, next_token: str=None, locale_id: str=None):
        """ListExportsResponse - a model defined in OpenAPI

        :param bot_id: The bot_id of this ListExportsResponse.
        :param bot_version: The bot_version of this ListExportsResponse.
        :param export_summaries: The export_summaries of this ListExportsResponse.
        :param next_token: The next_token of this ListExportsResponse.
        :param locale_id: The locale_id of this ListExportsResponse.
        """
        self.openapi_types = {
            'bot_id': str,
            'bot_version': str,
            'export_summaries': List,
            'next_token': str,
            'locale_id': str
        }

        self.attribute_map = {
            'bot_id': 'botId',
            'bot_version': 'botVersion',
            'export_summaries': 'exportSummaries',
            'next_token': 'nextToken',
            'locale_id': 'localeId'
        }

        self._bot_id = bot_id
        self._bot_version = bot_version
        self._export_summaries = export_summaries
        self._next_token = next_token
        self._locale_id = locale_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListExportsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListExportsResponse of this ListExportsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bot_id(self):
        """Gets the bot_id of this ListExportsResponse.


        :return: The bot_id of this ListExportsResponse.
        :rtype: str
        """
        return self._bot_id

    @bot_id.setter
    def bot_id(self, bot_id):
        """Sets the bot_id of this ListExportsResponse.


        :param bot_id: The bot_id of this ListExportsResponse.
        :type bot_id: str
        """

        self._bot_id = bot_id

    @property
    def bot_version(self):
        """Gets the bot_version of this ListExportsResponse.


        :return: The bot_version of this ListExportsResponse.
        :rtype: str
        """
        return self._bot_version

    @bot_version.setter
    def bot_version(self, bot_version):
        """Sets the bot_version of this ListExportsResponse.


        :param bot_version: The bot_version of this ListExportsResponse.
        :type bot_version: str
        """

        self._bot_version = bot_version

    @property
    def export_summaries(self):
        """Gets the export_summaries of this ListExportsResponse.


        :return: The export_summaries of this ListExportsResponse.
        :rtype: List
        """
        return self._export_summaries

    @export_summaries.setter
    def export_summaries(self, export_summaries):
        """Sets the export_summaries of this ListExportsResponse.


        :param export_summaries: The export_summaries of this ListExportsResponse.
        :type export_summaries: List
        """

        self._export_summaries = export_summaries

    @property
    def next_token(self):
        """Gets the next_token of this ListExportsResponse.


        :return: The next_token of this ListExportsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListExportsResponse.


        :param next_token: The next_token of this ListExportsResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def locale_id(self):
        """Gets the locale_id of this ListExportsResponse.


        :return: The locale_id of this ListExportsResponse.
        :rtype: str
        """
        return self._locale_id

    @locale_id.setter
    def locale_id(self, locale_id):
        """Sets the locale_id of this ListExportsResponse.


        :param locale_id: The locale_id of this ListExportsResponse.
        :type locale_id: str
        """

        self._locale_id = locale_id
