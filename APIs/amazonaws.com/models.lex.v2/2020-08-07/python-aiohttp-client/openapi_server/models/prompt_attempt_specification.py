# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.prompt_attempt_specification_allowed_input_types import PromptAttemptSpecificationAllowedInputTypes
from openapi_server.models.prompt_attempt_specification_audio_and_dtmf_input_specification import PromptAttemptSpecificationAudioAndDTMFInputSpecification
from openapi_server.models.prompt_attempt_specification_text_input_specification import PromptAttemptSpecificationTextInputSpecification
from openapi_server import util


class PromptAttemptSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_interrupt: bool=None, allowed_input_types: PromptAttemptSpecificationAllowedInputTypes=None, audio_and_dtmf_input_specification: PromptAttemptSpecificationAudioAndDTMFInputSpecification=None, text_input_specification: PromptAttemptSpecificationTextInputSpecification=None):
        """PromptAttemptSpecification - a model defined in OpenAPI

        :param allow_interrupt: The allow_interrupt of this PromptAttemptSpecification.
        :param allowed_input_types: The allowed_input_types of this PromptAttemptSpecification.
        :param audio_and_dtmf_input_specification: The audio_and_dtmf_input_specification of this PromptAttemptSpecification.
        :param text_input_specification: The text_input_specification of this PromptAttemptSpecification.
        """
        self.openapi_types = {
            'allow_interrupt': bool,
            'allowed_input_types': PromptAttemptSpecificationAllowedInputTypes,
            'audio_and_dtmf_input_specification': PromptAttemptSpecificationAudioAndDTMFInputSpecification,
            'text_input_specification': PromptAttemptSpecificationTextInputSpecification
        }

        self.attribute_map = {
            'allow_interrupt': 'allowInterrupt',
            'allowed_input_types': 'allowedInputTypes',
            'audio_and_dtmf_input_specification': 'audioAndDTMFInputSpecification',
            'text_input_specification': 'textInputSpecification'
        }

        self._allow_interrupt = allow_interrupt
        self._allowed_input_types = allowed_input_types
        self._audio_and_dtmf_input_specification = audio_and_dtmf_input_specification
        self._text_input_specification = text_input_specification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PromptAttemptSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PromptAttemptSpecification of this PromptAttemptSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_interrupt(self):
        """Gets the allow_interrupt of this PromptAttemptSpecification.


        :return: The allow_interrupt of this PromptAttemptSpecification.
        :rtype: bool
        """
        return self._allow_interrupt

    @allow_interrupt.setter
    def allow_interrupt(self, allow_interrupt):
        """Sets the allow_interrupt of this PromptAttemptSpecification.


        :param allow_interrupt: The allow_interrupt of this PromptAttemptSpecification.
        :type allow_interrupt: bool
        """

        self._allow_interrupt = allow_interrupt

    @property
    def allowed_input_types(self):
        """Gets the allowed_input_types of this PromptAttemptSpecification.


        :return: The allowed_input_types of this PromptAttemptSpecification.
        :rtype: PromptAttemptSpecificationAllowedInputTypes
        """
        return self._allowed_input_types

    @allowed_input_types.setter
    def allowed_input_types(self, allowed_input_types):
        """Sets the allowed_input_types of this PromptAttemptSpecification.


        :param allowed_input_types: The allowed_input_types of this PromptAttemptSpecification.
        :type allowed_input_types: PromptAttemptSpecificationAllowedInputTypes
        """
        if allowed_input_types is None:
            raise ValueError("Invalid value for `allowed_input_types`, must not be `None`")

        self._allowed_input_types = allowed_input_types

    @property
    def audio_and_dtmf_input_specification(self):
        """Gets the audio_and_dtmf_input_specification of this PromptAttemptSpecification.


        :return: The audio_and_dtmf_input_specification of this PromptAttemptSpecification.
        :rtype: PromptAttemptSpecificationAudioAndDTMFInputSpecification
        """
        return self._audio_and_dtmf_input_specification

    @audio_and_dtmf_input_specification.setter
    def audio_and_dtmf_input_specification(self, audio_and_dtmf_input_specification):
        """Sets the audio_and_dtmf_input_specification of this PromptAttemptSpecification.


        :param audio_and_dtmf_input_specification: The audio_and_dtmf_input_specification of this PromptAttemptSpecification.
        :type audio_and_dtmf_input_specification: PromptAttemptSpecificationAudioAndDTMFInputSpecification
        """

        self._audio_and_dtmf_input_specification = audio_and_dtmf_input_specification

    @property
    def text_input_specification(self):
        """Gets the text_input_specification of this PromptAttemptSpecification.


        :return: The text_input_specification of this PromptAttemptSpecification.
        :rtype: PromptAttemptSpecificationTextInputSpecification
        """
        return self._text_input_specification

    @text_input_specification.setter
    def text_input_specification(self, text_input_specification):
        """Sets the text_input_specification of this PromptAttemptSpecification.


        :param text_input_specification: The text_input_specification of this PromptAttemptSpecification.
        :type text_input_specification: PromptAttemptSpecificationTextInputSpecification
        """

        self._text_input_specification = text_input_specification
