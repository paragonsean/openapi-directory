# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateSlotTypeResponseCompositeSlotTypeSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sub_slots: List=None):
        """CreateSlotTypeResponseCompositeSlotTypeSetting - a model defined in OpenAPI

        :param sub_slots: The sub_slots of this CreateSlotTypeResponseCompositeSlotTypeSetting.
        """
        self.openapi_types = {
            'sub_slots': List
        }

        self.attribute_map = {
            'sub_slots': 'subSlots'
        }

        self._sub_slots = sub_slots

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSlotTypeResponseCompositeSlotTypeSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSlotTypeResponse_compositeSlotTypeSetting of this CreateSlotTypeResponseCompositeSlotTypeSetting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sub_slots(self):
        """Gets the sub_slots of this CreateSlotTypeResponseCompositeSlotTypeSetting.


        :return: The sub_slots of this CreateSlotTypeResponseCompositeSlotTypeSetting.
        :rtype: List
        """
        return self._sub_slots

    @sub_slots.setter
    def sub_slots(self, sub_slots):
        """Sets the sub_slots of this CreateSlotTypeResponseCompositeSlotTypeSetting.


        :param sub_slots: The sub_slots of this CreateSlotTypeResponseCompositeSlotTypeSetting.
        :type sub_slots: List
        """

        self._sub_slots = sub_slots
