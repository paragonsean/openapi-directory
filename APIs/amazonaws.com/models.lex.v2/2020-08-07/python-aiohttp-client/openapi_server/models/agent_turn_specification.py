# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AgentTurnSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_prompt: str=None):
        """AgentTurnSpecification - a model defined in OpenAPI

        :param agent_prompt: The agent_prompt of this AgentTurnSpecification.
        """
        self.openapi_types = {
            'agent_prompt': str
        }

        self.attribute_map = {
            'agent_prompt': 'agentPrompt'
        }

        self._agent_prompt = agent_prompt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AgentTurnSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AgentTurnSpecification of this AgentTurnSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_prompt(self):
        """Gets the agent_prompt of this AgentTurnSpecification.


        :return: The agent_prompt of this AgentTurnSpecification.
        :rtype: str
        """
        return self._agent_prompt

    @agent_prompt.setter
    def agent_prompt(self, agent_prompt):
        """Sets the agent_prompt of this AgentTurnSpecification.


        :param agent_prompt: The agent_prompt of this AgentTurnSpecification.
        :type agent_prompt: str
        """
        if agent_prompt is None:
            raise ValueError("Invalid value for `agent_prompt`, must not be `None`")

        self._agent_prompt = agent_prompt
