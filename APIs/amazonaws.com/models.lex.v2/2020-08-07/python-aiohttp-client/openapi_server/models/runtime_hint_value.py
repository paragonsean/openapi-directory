# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RuntimeHintValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phrase: str=None):
        """RuntimeHintValue - a model defined in OpenAPI

        :param phrase: The phrase of this RuntimeHintValue.
        """
        self.openapi_types = {
            'phrase': str
        }

        self.attribute_map = {
            'phrase': 'phrase'
        }

        self._phrase = phrase

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuntimeHintValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuntimeHintValue of this RuntimeHintValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phrase(self):
        """Gets the phrase of this RuntimeHintValue.


        :return: The phrase of this RuntimeHintValue.
        :rtype: str
        """
        return self._phrase

    @phrase.setter
    def phrase(self, phrase):
        """Sets the phrase of this RuntimeHintValue.


        :param phrase: The phrase of this RuntimeHintValue.
        :type phrase: str
        """
        if phrase is None:
            raise ValueError("Invalid value for `phrase`, must not be `None`")

        self._phrase = phrase
