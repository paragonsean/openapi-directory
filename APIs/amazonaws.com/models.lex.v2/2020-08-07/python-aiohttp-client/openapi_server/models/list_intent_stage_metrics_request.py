# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.analytics_bin_by_specification import AnalyticsBinBySpecification
from openapi_server.models.analytics_intent_stage_filter import AnalyticsIntentStageFilter
from openapi_server.models.analytics_intent_stage_group_by_specification import AnalyticsIntentStageGroupBySpecification
from openapi_server.models.analytics_intent_stage_metric import AnalyticsIntentStageMetric
from openapi_server import util


class ListIntentStageMetricsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start_date_time: datetime=None, end_date_time: datetime=None, metrics: List[AnalyticsIntentStageMetric]=None, bin_by: List[AnalyticsBinBySpecification]=None, group_by: List[AnalyticsIntentStageGroupBySpecification]=None, filters: List[AnalyticsIntentStageFilter]=None, max_results: int=None, next_token: str=None):
        """ListIntentStageMetricsRequest - a model defined in OpenAPI

        :param start_date_time: The start_date_time of this ListIntentStageMetricsRequest.
        :param end_date_time: The end_date_time of this ListIntentStageMetricsRequest.
        :param metrics: The metrics of this ListIntentStageMetricsRequest.
        :param bin_by: The bin_by of this ListIntentStageMetricsRequest.
        :param group_by: The group_by of this ListIntentStageMetricsRequest.
        :param filters: The filters of this ListIntentStageMetricsRequest.
        :param max_results: The max_results of this ListIntentStageMetricsRequest.
        :param next_token: The next_token of this ListIntentStageMetricsRequest.
        """
        self.openapi_types = {
            'start_date_time': datetime,
            'end_date_time': datetime,
            'metrics': List[AnalyticsIntentStageMetric],
            'bin_by': List[AnalyticsBinBySpecification],
            'group_by': List[AnalyticsIntentStageGroupBySpecification],
            'filters': List[AnalyticsIntentStageFilter],
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'start_date_time': 'startDateTime',
            'end_date_time': 'endDateTime',
            'metrics': 'metrics',
            'bin_by': 'binBy',
            'group_by': 'groupBy',
            'filters': 'filters',
            'max_results': 'maxResults',
            'next_token': 'nextToken'
        }

        self._start_date_time = start_date_time
        self._end_date_time = end_date_time
        self._metrics = metrics
        self._bin_by = bin_by
        self._group_by = group_by
        self._filters = filters
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListIntentStageMetricsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListIntentStageMetrics_request of this ListIntentStageMetricsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_date_time(self):
        """Gets the start_date_time of this ListIntentStageMetricsRequest.

        The date and time that marks the beginning of the range of time for which you want to see intent stage metrics.

        :return: The start_date_time of this ListIntentStageMetricsRequest.
        :rtype: datetime
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this ListIntentStageMetricsRequest.

        The date and time that marks the beginning of the range of time for which you want to see intent stage metrics.

        :param start_date_time: The start_date_time of this ListIntentStageMetricsRequest.
        :type start_date_time: datetime
        """
        if start_date_time is None:
            raise ValueError("Invalid value for `start_date_time`, must not be `None`")

        self._start_date_time = start_date_time

    @property
    def end_date_time(self):
        """Gets the end_date_time of this ListIntentStageMetricsRequest.

        The date and time that marks the end of the range of time for which you want to see intent stage metrics.

        :return: The end_date_time of this ListIntentStageMetricsRequest.
        :rtype: datetime
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this ListIntentStageMetricsRequest.

        The date and time that marks the end of the range of time for which you want to see intent stage metrics.

        :param end_date_time: The end_date_time of this ListIntentStageMetricsRequest.
        :type end_date_time: datetime
        """
        if end_date_time is None:
            raise ValueError("Invalid value for `end_date_time`, must not be `None`")

        self._end_date_time = end_date_time

    @property
    def metrics(self):
        """Gets the metrics of this ListIntentStageMetricsRequest.

        A list of objects, each of which contains a metric you want to list, the statistic for the metric you want to return, and the method by which to organize the results.

        :return: The metrics of this ListIntentStageMetricsRequest.
        :rtype: List[AnalyticsIntentStageMetric]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this ListIntentStageMetricsRequest.

        A list of objects, each of which contains a metric you want to list, the statistic for the metric you want to return, and the method by which to organize the results.

        :param metrics: The metrics of this ListIntentStageMetricsRequest.
        :type metrics: List[AnalyticsIntentStageMetric]
        """
        if metrics is None:
            raise ValueError("Invalid value for `metrics`, must not be `None`")
        if metrics is not None and len(metrics) > 5:
            raise ValueError("Invalid value for `metrics`, number of items must be less than or equal to `5`")
        if metrics is not None and len(metrics) < 1:
            raise ValueError("Invalid value for `metrics`, number of items must be greater than or equal to `1`")

        self._metrics = metrics

    @property
    def bin_by(self):
        """Gets the bin_by of this ListIntentStageMetricsRequest.

        A list of objects, each of which contains specifications for organizing the results by time.

        :return: The bin_by of this ListIntentStageMetricsRequest.
        :rtype: List[AnalyticsBinBySpecification]
        """
        return self._bin_by

    @bin_by.setter
    def bin_by(self, bin_by):
        """Sets the bin_by of this ListIntentStageMetricsRequest.

        A list of objects, each of which contains specifications for organizing the results by time.

        :param bin_by: The bin_by of this ListIntentStageMetricsRequest.
        :type bin_by: List[AnalyticsBinBySpecification]
        """
        if bin_by is not None and len(bin_by) > 1:
            raise ValueError("Invalid value for `bin_by`, number of items must be less than or equal to `1`")
        if bin_by is not None and len(bin_by) < 1:
            raise ValueError("Invalid value for `bin_by`, number of items must be greater than or equal to `1`")

        self._bin_by = bin_by

    @property
    def group_by(self):
        """Gets the group_by of this ListIntentStageMetricsRequest.

        <p>A list of objects, each of which specifies how to group the results. You can group by the following criteria:</p> <ul> <li> <p> <code>IntentStageName</code> – The name of the intent stage.</p> </li> <li> <p> <code>SwitchedToIntent</code> – The intent to which the conversation was switched (if any).</p> </li> </ul>

        :return: The group_by of this ListIntentStageMetricsRequest.
        :rtype: List[AnalyticsIntentStageGroupBySpecification]
        """
        return self._group_by

    @group_by.setter
    def group_by(self, group_by):
        """Sets the group_by of this ListIntentStageMetricsRequest.

        <p>A list of objects, each of which specifies how to group the results. You can group by the following criteria:</p> <ul> <li> <p> <code>IntentStageName</code> – The name of the intent stage.</p> </li> <li> <p> <code>SwitchedToIntent</code> – The intent to which the conversation was switched (if any).</p> </li> </ul>

        :param group_by: The group_by of this ListIntentStageMetricsRequest.
        :type group_by: List[AnalyticsIntentStageGroupBySpecification]
        """
        if group_by is not None and len(group_by) > 2:
            raise ValueError("Invalid value for `group_by`, number of items must be less than or equal to `2`")
        if group_by is not None and len(group_by) < 1:
            raise ValueError("Invalid value for `group_by`, number of items must be greater than or equal to `1`")

        self._group_by = group_by

    @property
    def filters(self):
        """Gets the filters of this ListIntentStageMetricsRequest.

        A list of objects, each of which describes a condition by which you want to filter the results.

        :return: The filters of this ListIntentStageMetricsRequest.
        :rtype: List[AnalyticsIntentStageFilter]
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this ListIntentStageMetricsRequest.

        A list of objects, each of which describes a condition by which you want to filter the results.

        :param filters: The filters of this ListIntentStageMetricsRequest.
        :type filters: List[AnalyticsIntentStageFilter]
        """
        if filters is not None and len(filters) > 9:
            raise ValueError("Invalid value for `filters`, number of items must be less than or equal to `9`")
        if filters is not None and len(filters) < 1:
            raise ValueError("Invalid value for `filters`, number of items must be greater than or equal to `1`")

        self._filters = filters

    @property
    def max_results(self):
        """Gets the max_results of this ListIntentStageMetricsRequest.

        The maximum number of results to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned.

        :return: The max_results of this ListIntentStageMetricsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListIntentStageMetricsRequest.

        The maximum number of results to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned.

        :param max_results: The max_results of this ListIntentStageMetricsRequest.
        :type max_results: int
        """
        if max_results is not None and max_results > 1000:
            raise ValueError("Invalid value for `max_results`, must be a value less than or equal to `1000`")
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListIntentStageMetricsRequest.

        <p>If the response from the ListIntentStageMetrics operation contains more results than specified in the maxResults parameter, a token is returned in the response.</p> <p>Use the returned token in the nextToken parameter of a ListIntentStageMetrics request to return the next page of results. For a complete set of results, call the ListIntentStageMetrics operation until the nextToken returned in the response is null.</p>

        :return: The next_token of this ListIntentStageMetricsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListIntentStageMetricsRequest.

        <p>If the response from the ListIntentStageMetrics operation contains more results than specified in the maxResults parameter, a token is returned in the response.</p> <p>Use the returned token in the nextToken parameter of a ListIntentStageMetrics request to return the next page of results. For a complete set of results, call the ListIntentStageMetrics operation until the nextToken returned in the response is null.</p>

        :param next_token: The next_token of this ListIntentStageMetricsRequest.
        :type next_token: str
        """

        self._next_token = next_token
