# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.slot_type_category import SlotTypeCategory
from openapi_server import util


class SlotTypeSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, slot_type_id: str=None, slot_type_name: str=None, description: str=None, parent_slot_type_signature: str=None, last_updated_date_time: datetime=None, slot_type_category: SlotTypeCategory=None):
        """SlotTypeSummary - a model defined in OpenAPI

        :param slot_type_id: The slot_type_id of this SlotTypeSummary.
        :param slot_type_name: The slot_type_name of this SlotTypeSummary.
        :param description: The description of this SlotTypeSummary.
        :param parent_slot_type_signature: The parent_slot_type_signature of this SlotTypeSummary.
        :param last_updated_date_time: The last_updated_date_time of this SlotTypeSummary.
        :param slot_type_category: The slot_type_category of this SlotTypeSummary.
        """
        self.openapi_types = {
            'slot_type_id': str,
            'slot_type_name': str,
            'description': str,
            'parent_slot_type_signature': str,
            'last_updated_date_time': datetime,
            'slot_type_category': SlotTypeCategory
        }

        self.attribute_map = {
            'slot_type_id': 'slotTypeId',
            'slot_type_name': 'slotTypeName',
            'description': 'description',
            'parent_slot_type_signature': 'parentSlotTypeSignature',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'slot_type_category': 'slotTypeCategory'
        }

        self._slot_type_id = slot_type_id
        self._slot_type_name = slot_type_name
        self._description = description
        self._parent_slot_type_signature = parent_slot_type_signature
        self._last_updated_date_time = last_updated_date_time
        self._slot_type_category = slot_type_category

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlotTypeSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SlotTypeSummary of this SlotTypeSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def slot_type_id(self):
        """Gets the slot_type_id of this SlotTypeSummary.


        :return: The slot_type_id of this SlotTypeSummary.
        :rtype: str
        """
        return self._slot_type_id

    @slot_type_id.setter
    def slot_type_id(self, slot_type_id):
        """Sets the slot_type_id of this SlotTypeSummary.


        :param slot_type_id: The slot_type_id of this SlotTypeSummary.
        :type slot_type_id: str
        """

        self._slot_type_id = slot_type_id

    @property
    def slot_type_name(self):
        """Gets the slot_type_name of this SlotTypeSummary.


        :return: The slot_type_name of this SlotTypeSummary.
        :rtype: str
        """
        return self._slot_type_name

    @slot_type_name.setter
    def slot_type_name(self, slot_type_name):
        """Sets the slot_type_name of this SlotTypeSummary.


        :param slot_type_name: The slot_type_name of this SlotTypeSummary.
        :type slot_type_name: str
        """

        self._slot_type_name = slot_type_name

    @property
    def description(self):
        """Gets the description of this SlotTypeSummary.


        :return: The description of this SlotTypeSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SlotTypeSummary.


        :param description: The description of this SlotTypeSummary.
        :type description: str
        """

        self._description = description

    @property
    def parent_slot_type_signature(self):
        """Gets the parent_slot_type_signature of this SlotTypeSummary.


        :return: The parent_slot_type_signature of this SlotTypeSummary.
        :rtype: str
        """
        return self._parent_slot_type_signature

    @parent_slot_type_signature.setter
    def parent_slot_type_signature(self, parent_slot_type_signature):
        """Sets the parent_slot_type_signature of this SlotTypeSummary.


        :param parent_slot_type_signature: The parent_slot_type_signature of this SlotTypeSummary.
        :type parent_slot_type_signature: str
        """

        self._parent_slot_type_signature = parent_slot_type_signature

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this SlotTypeSummary.


        :return: The last_updated_date_time of this SlotTypeSummary.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this SlotTypeSummary.


        :param last_updated_date_time: The last_updated_date_time of this SlotTypeSummary.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def slot_type_category(self):
        """Gets the slot_type_category of this SlotTypeSummary.


        :return: The slot_type_category of this SlotTypeSummary.
        :rtype: SlotTypeCategory
        """
        return self._slot_type_category

    @slot_type_category.setter
    def slot_type_category(self, slot_type_category):
        """Sets the slot_type_category of this SlotTypeSummary.


        :param slot_type_category: The slot_type_category of this SlotTypeSummary.
        :type slot_type_category: SlotTypeCategory
        """

        self._slot_type_category = slot_type_category
