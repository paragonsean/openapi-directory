# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AudioAndDTMFInputSpecificationAudioSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_length_ms: int=None, end_timeout_ms: int=None):
        """AudioAndDTMFInputSpecificationAudioSpecification - a model defined in OpenAPI

        :param max_length_ms: The max_length_ms of this AudioAndDTMFInputSpecificationAudioSpecification.
        :param end_timeout_ms: The end_timeout_ms of this AudioAndDTMFInputSpecificationAudioSpecification.
        """
        self.openapi_types = {
            'max_length_ms': int,
            'end_timeout_ms': int
        }

        self.attribute_map = {
            'max_length_ms': 'maxLengthMs',
            'end_timeout_ms': 'endTimeoutMs'
        }

        self._max_length_ms = max_length_ms
        self._end_timeout_ms = end_timeout_ms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioAndDTMFInputSpecificationAudioSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioAndDTMFInputSpecification_audioSpecification of this AudioAndDTMFInputSpecificationAudioSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_length_ms(self):
        """Gets the max_length_ms of this AudioAndDTMFInputSpecificationAudioSpecification.


        :return: The max_length_ms of this AudioAndDTMFInputSpecificationAudioSpecification.
        :rtype: int
        """
        return self._max_length_ms

    @max_length_ms.setter
    def max_length_ms(self, max_length_ms):
        """Sets the max_length_ms of this AudioAndDTMFInputSpecificationAudioSpecification.


        :param max_length_ms: The max_length_ms of this AudioAndDTMFInputSpecificationAudioSpecification.
        :type max_length_ms: int
        """
        if max_length_ms is None:
            raise ValueError("Invalid value for `max_length_ms`, must not be `None`")

        self._max_length_ms = max_length_ms

    @property
    def end_timeout_ms(self):
        """Gets the end_timeout_ms of this AudioAndDTMFInputSpecificationAudioSpecification.


        :return: The end_timeout_ms of this AudioAndDTMFInputSpecificationAudioSpecification.
        :rtype: int
        """
        return self._end_timeout_ms

    @end_timeout_ms.setter
    def end_timeout_ms(self, end_timeout_ms):
        """Sets the end_timeout_ms of this AudioAndDTMFInputSpecificationAudioSpecification.


        :param end_timeout_ms: The end_timeout_ms of this AudioAndDTMFInputSpecificationAudioSpecification.
        :type end_timeout_ms: int
        """
        if end_timeout_ms is None:
            raise ValueError("Invalid value for `end_timeout_ms`, must not be `None`")

        self._end_timeout_ms = end_timeout_ms
