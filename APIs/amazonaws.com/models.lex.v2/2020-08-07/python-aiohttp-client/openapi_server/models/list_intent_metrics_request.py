# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.analytics_bin_by_specification import AnalyticsBinBySpecification
from openapi_server.models.analytics_intent_filter import AnalyticsIntentFilter
from openapi_server.models.analytics_intent_group_by_specification import AnalyticsIntentGroupBySpecification
from openapi_server.models.analytics_intent_metric import AnalyticsIntentMetric
from openapi_server import util


class ListIntentMetricsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start_date_time: datetime=None, end_date_time: datetime=None, metrics: List[AnalyticsIntentMetric]=None, bin_by: List[AnalyticsBinBySpecification]=None, group_by: List[AnalyticsIntentGroupBySpecification]=None, filters: List[AnalyticsIntentFilter]=None, max_results: int=None, next_token: str=None):
        """ListIntentMetricsRequest - a model defined in OpenAPI

        :param start_date_time: The start_date_time of this ListIntentMetricsRequest.
        :param end_date_time: The end_date_time of this ListIntentMetricsRequest.
        :param metrics: The metrics of this ListIntentMetricsRequest.
        :param bin_by: The bin_by of this ListIntentMetricsRequest.
        :param group_by: The group_by of this ListIntentMetricsRequest.
        :param filters: The filters of this ListIntentMetricsRequest.
        :param max_results: The max_results of this ListIntentMetricsRequest.
        :param next_token: The next_token of this ListIntentMetricsRequest.
        """
        self.openapi_types = {
            'start_date_time': datetime,
            'end_date_time': datetime,
            'metrics': List[AnalyticsIntentMetric],
            'bin_by': List[AnalyticsBinBySpecification],
            'group_by': List[AnalyticsIntentGroupBySpecification],
            'filters': List[AnalyticsIntentFilter],
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'start_date_time': 'startDateTime',
            'end_date_time': 'endDateTime',
            'metrics': 'metrics',
            'bin_by': 'binBy',
            'group_by': 'groupBy',
            'filters': 'filters',
            'max_results': 'maxResults',
            'next_token': 'nextToken'
        }

        self._start_date_time = start_date_time
        self._end_date_time = end_date_time
        self._metrics = metrics
        self._bin_by = bin_by
        self._group_by = group_by
        self._filters = filters
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListIntentMetricsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListIntentMetrics_request of this ListIntentMetricsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_date_time(self):
        """Gets the start_date_time of this ListIntentMetricsRequest.

        The timestamp that marks the beginning of the range of time for which you want to see intent metrics.

        :return: The start_date_time of this ListIntentMetricsRequest.
        :rtype: datetime
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this ListIntentMetricsRequest.

        The timestamp that marks the beginning of the range of time for which you want to see intent metrics.

        :param start_date_time: The start_date_time of this ListIntentMetricsRequest.
        :type start_date_time: datetime
        """
        if start_date_time is None:
            raise ValueError("Invalid value for `start_date_time`, must not be `None`")

        self._start_date_time = start_date_time

    @property
    def end_date_time(self):
        """Gets the end_date_time of this ListIntentMetricsRequest.

        The date and time that marks the end of the range of time for which you want to see intent metrics.

        :return: The end_date_time of this ListIntentMetricsRequest.
        :rtype: datetime
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this ListIntentMetricsRequest.

        The date and time that marks the end of the range of time for which you want to see intent metrics.

        :param end_date_time: The end_date_time of this ListIntentMetricsRequest.
        :type end_date_time: datetime
        """
        if end_date_time is None:
            raise ValueError("Invalid value for `end_date_time`, must not be `None`")

        self._end_date_time = end_date_time

    @property
    def metrics(self):
        """Gets the metrics of this ListIntentMetricsRequest.

        A list of objects, each of which contains a metric you want to list, the statistic for the metric you want to return, and the order by which to organize the results.

        :return: The metrics of this ListIntentMetricsRequest.
        :rtype: List[AnalyticsIntentMetric]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this ListIntentMetricsRequest.

        A list of objects, each of which contains a metric you want to list, the statistic for the metric you want to return, and the order by which to organize the results.

        :param metrics: The metrics of this ListIntentMetricsRequest.
        :type metrics: List[AnalyticsIntentMetric]
        """
        if metrics is None:
            raise ValueError("Invalid value for `metrics`, must not be `None`")
        if metrics is not None and len(metrics) > 5:
            raise ValueError("Invalid value for `metrics`, number of items must be less than or equal to `5`")
        if metrics is not None and len(metrics) < 1:
            raise ValueError("Invalid value for `metrics`, number of items must be greater than or equal to `1`")

        self._metrics = metrics

    @property
    def bin_by(self):
        """Gets the bin_by of this ListIntentMetricsRequest.

        A list of objects, each of which contains specifications for organizing the results by time.

        :return: The bin_by of this ListIntentMetricsRequest.
        :rtype: List[AnalyticsBinBySpecification]
        """
        return self._bin_by

    @bin_by.setter
    def bin_by(self, bin_by):
        """Sets the bin_by of this ListIntentMetricsRequest.

        A list of objects, each of which contains specifications for organizing the results by time.

        :param bin_by: The bin_by of this ListIntentMetricsRequest.
        :type bin_by: List[AnalyticsBinBySpecification]
        """
        if bin_by is not None and len(bin_by) > 1:
            raise ValueError("Invalid value for `bin_by`, number of items must be less than or equal to `1`")
        if bin_by is not None and len(bin_by) < 1:
            raise ValueError("Invalid value for `bin_by`, number of items must be greater than or equal to `1`")

        self._bin_by = bin_by

    @property
    def group_by(self):
        """Gets the group_by of this ListIntentMetricsRequest.

        <p>A list of objects, each of which specifies how to group the results. You can group by the following criteria:</p> <ul> <li> <p> <code>IntentName</code> – The name of the intent.</p> </li> <li> <p> <code>IntentEndState</code> – The final state of the intent. The possible end states are detailed in <a href=\"https://docs.aws.amazon.com/analytics-key-definitions-intents\">Key definitions</a> in the user guide.</p> </li> </ul>

        :return: The group_by of this ListIntentMetricsRequest.
        :rtype: List[AnalyticsIntentGroupBySpecification]
        """
        return self._group_by

    @group_by.setter
    def group_by(self, group_by):
        """Sets the group_by of this ListIntentMetricsRequest.

        <p>A list of objects, each of which specifies how to group the results. You can group by the following criteria:</p> <ul> <li> <p> <code>IntentName</code> – The name of the intent.</p> </li> <li> <p> <code>IntentEndState</code> – The final state of the intent. The possible end states are detailed in <a href=\"https://docs.aws.amazon.com/analytics-key-definitions-intents\">Key definitions</a> in the user guide.</p> </li> </ul>

        :param group_by: The group_by of this ListIntentMetricsRequest.
        :type group_by: List[AnalyticsIntentGroupBySpecification]
        """
        if group_by is not None and len(group_by) > 3:
            raise ValueError("Invalid value for `group_by`, number of items must be less than or equal to `3`")
        if group_by is not None and len(group_by) < 1:
            raise ValueError("Invalid value for `group_by`, number of items must be greater than or equal to `1`")

        self._group_by = group_by

    @property
    def filters(self):
        """Gets the filters of this ListIntentMetricsRequest.

        A list of objects, each of which describes a condition by which you want to filter the results.

        :return: The filters of this ListIntentMetricsRequest.
        :rtype: List[AnalyticsIntentFilter]
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this ListIntentMetricsRequest.

        A list of objects, each of which describes a condition by which you want to filter the results.

        :param filters: The filters of this ListIntentMetricsRequest.
        :type filters: List[AnalyticsIntentFilter]
        """
        if filters is not None and len(filters) > 9:
            raise ValueError("Invalid value for `filters`, number of items must be less than or equal to `9`")
        if filters is not None and len(filters) < 1:
            raise ValueError("Invalid value for `filters`, number of items must be greater than or equal to `1`")

        self._filters = filters

    @property
    def max_results(self):
        """Gets the max_results of this ListIntentMetricsRequest.

        The maximum number of results to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned.

        :return: The max_results of this ListIntentMetricsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListIntentMetricsRequest.

        The maximum number of results to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned.

        :param max_results: The max_results of this ListIntentMetricsRequest.
        :type max_results: int
        """
        if max_results is not None and max_results > 1000:
            raise ValueError("Invalid value for `max_results`, must be a value less than or equal to `1000`")
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListIntentMetricsRequest.

        <p>If the response from the ListIntentMetrics operation contains more results than specified in the maxResults parameter, a token is returned in the response.</p> <p>Use the returned token in the nextToken parameter of a ListIntentMetrics request to return the next page of results. For a complete set of results, call the ListIntentMetrics operation until the nextToken returned in the response is null.</p>

        :return: The next_token of this ListIntentMetricsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListIntentMetricsRequest.

        <p>If the response from the ListIntentMetrics operation contains more results than specified in the maxResults parameter, a token is returned in the response.</p> <p>Use the returned token in the nextToken parameter of a ListIntentMetrics request to return the next page of results. For a complete set of results, call the ListIntentMetrics operation until the nextToken returned in the response is null.</p>

        :param next_token: The next_token of this ListIntentMetricsRequest.
        :type next_token: str
        """

        self._next_token = next_token
