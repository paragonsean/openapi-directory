# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BotVersionLocaleDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_bot_version: str=None):
        """BotVersionLocaleDetails - a model defined in OpenAPI

        :param source_bot_version: The source_bot_version of this BotVersionLocaleDetails.
        """
        self.openapi_types = {
            'source_bot_version': str
        }

        self.attribute_map = {
            'source_bot_version': 'sourceBotVersion'
        }

        self._source_bot_version = source_bot_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BotVersionLocaleDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BotVersionLocaleDetails of this BotVersionLocaleDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_bot_version(self):
        """Gets the source_bot_version of this BotVersionLocaleDetails.


        :return: The source_bot_version of this BotVersionLocaleDetails.
        :rtype: str
        """
        return self._source_bot_version

    @source_bot_version.setter
    def source_bot_version(self, source_bot_version):
        """Sets the source_bot_version of this BotVersionLocaleDetails.


        :param source_bot_version: The source_bot_version of this BotVersionLocaleDetails.
        :type source_bot_version: str
        """
        if source_bot_version is None:
            raise ValueError("Invalid value for `source_bot_version`, must not be `None`")

        self._source_bot_version = source_bot_version
