# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnalyticsUtteranceAttributeResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_used_intent: str=None):
        """AnalyticsUtteranceAttributeResult - a model defined in OpenAPI

        :param last_used_intent: The last_used_intent of this AnalyticsUtteranceAttributeResult.
        """
        self.openapi_types = {
            'last_used_intent': str
        }

        self.attribute_map = {
            'last_used_intent': 'lastUsedIntent'
        }

        self._last_used_intent = last_used_intent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyticsUtteranceAttributeResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyticsUtteranceAttributeResult of this AnalyticsUtteranceAttributeResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_used_intent(self):
        """Gets the last_used_intent of this AnalyticsUtteranceAttributeResult.


        :return: The last_used_intent of this AnalyticsUtteranceAttributeResult.
        :rtype: str
        """
        return self._last_used_intent

    @last_used_intent.setter
    def last_used_intent(self, last_used_intent):
        """Sets the last_used_intent of this AnalyticsUtteranceAttributeResult.


        :param last_used_intent: The last_used_intent of this AnalyticsUtteranceAttributeResult.
        :type last_used_intent: str
        """

        self._last_used_intent = last_used_intent
