# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bot_status import BotStatus
from openapi_server.models.bot_type import BotType
from openapi_server import util


class BotSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bot_id: str=None, bot_name: str=None, description: str=None, bot_status: BotStatus=None, latest_bot_version: str=None, last_updated_date_time: datetime=None, bot_type: BotType=None):
        """BotSummary - a model defined in OpenAPI

        :param bot_id: The bot_id of this BotSummary.
        :param bot_name: The bot_name of this BotSummary.
        :param description: The description of this BotSummary.
        :param bot_status: The bot_status of this BotSummary.
        :param latest_bot_version: The latest_bot_version of this BotSummary.
        :param last_updated_date_time: The last_updated_date_time of this BotSummary.
        :param bot_type: The bot_type of this BotSummary.
        """
        self.openapi_types = {
            'bot_id': str,
            'bot_name': str,
            'description': str,
            'bot_status': BotStatus,
            'latest_bot_version': str,
            'last_updated_date_time': datetime,
            'bot_type': BotType
        }

        self.attribute_map = {
            'bot_id': 'botId',
            'bot_name': 'botName',
            'description': 'description',
            'bot_status': 'botStatus',
            'latest_bot_version': 'latestBotVersion',
            'last_updated_date_time': 'lastUpdatedDateTime',
            'bot_type': 'botType'
        }

        self._bot_id = bot_id
        self._bot_name = bot_name
        self._description = description
        self._bot_status = bot_status
        self._latest_bot_version = latest_bot_version
        self._last_updated_date_time = last_updated_date_time
        self._bot_type = bot_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BotSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BotSummary of this BotSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bot_id(self):
        """Gets the bot_id of this BotSummary.


        :return: The bot_id of this BotSummary.
        :rtype: str
        """
        return self._bot_id

    @bot_id.setter
    def bot_id(self, bot_id):
        """Sets the bot_id of this BotSummary.


        :param bot_id: The bot_id of this BotSummary.
        :type bot_id: str
        """

        self._bot_id = bot_id

    @property
    def bot_name(self):
        """Gets the bot_name of this BotSummary.


        :return: The bot_name of this BotSummary.
        :rtype: str
        """
        return self._bot_name

    @bot_name.setter
    def bot_name(self, bot_name):
        """Sets the bot_name of this BotSummary.


        :param bot_name: The bot_name of this BotSummary.
        :type bot_name: str
        """

        self._bot_name = bot_name

    @property
    def description(self):
        """Gets the description of this BotSummary.


        :return: The description of this BotSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BotSummary.


        :param description: The description of this BotSummary.
        :type description: str
        """

        self._description = description

    @property
    def bot_status(self):
        """Gets the bot_status of this BotSummary.


        :return: The bot_status of this BotSummary.
        :rtype: BotStatus
        """
        return self._bot_status

    @bot_status.setter
    def bot_status(self, bot_status):
        """Sets the bot_status of this BotSummary.


        :param bot_status: The bot_status of this BotSummary.
        :type bot_status: BotStatus
        """

        self._bot_status = bot_status

    @property
    def latest_bot_version(self):
        """Gets the latest_bot_version of this BotSummary.


        :return: The latest_bot_version of this BotSummary.
        :rtype: str
        """
        return self._latest_bot_version

    @latest_bot_version.setter
    def latest_bot_version(self, latest_bot_version):
        """Sets the latest_bot_version of this BotSummary.


        :param latest_bot_version: The latest_bot_version of this BotSummary.
        :type latest_bot_version: str
        """

        self._latest_bot_version = latest_bot_version

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this BotSummary.


        :return: The last_updated_date_time of this BotSummary.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this BotSummary.


        :param last_updated_date_time: The last_updated_date_time of this BotSummary.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time

    @property
    def bot_type(self):
        """Gets the bot_type of this BotSummary.


        :return: The bot_type of this BotSummary.
        :rtype: BotType
        """
        return self._bot_type

    @bot_type.setter
    def bot_type(self, bot_type):
        """Sets the bot_type of this BotSummary.


        :param bot_type: The bot_type of this BotSummary.
        :type bot_type: BotType
        """

        self._bot_type = bot_type
