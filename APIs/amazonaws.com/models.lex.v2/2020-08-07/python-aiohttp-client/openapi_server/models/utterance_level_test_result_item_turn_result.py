# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_set_turn_result_agent import TestSetTurnResultAgent
from openapi_server.models.test_set_turn_result_user import TestSetTurnResultUser
from openapi_server import util


class UtteranceLevelTestResultItemTurnResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent: TestSetTurnResultAgent=None, user: TestSetTurnResultUser=None):
        """UtteranceLevelTestResultItemTurnResult - a model defined in OpenAPI

        :param agent: The agent of this UtteranceLevelTestResultItemTurnResult.
        :param user: The user of this UtteranceLevelTestResultItemTurnResult.
        """
        self.openapi_types = {
            'agent': TestSetTurnResultAgent,
            'user': TestSetTurnResultUser
        }

        self.attribute_map = {
            'agent': 'agent',
            'user': 'user'
        }

        self._agent = agent
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UtteranceLevelTestResultItemTurnResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UtteranceLevelTestResultItem_turnResult of this UtteranceLevelTestResultItemTurnResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent(self):
        """Gets the agent of this UtteranceLevelTestResultItemTurnResult.


        :return: The agent of this UtteranceLevelTestResultItemTurnResult.
        :rtype: TestSetTurnResultAgent
        """
        return self._agent

    @agent.setter
    def agent(self, agent):
        """Sets the agent of this UtteranceLevelTestResultItemTurnResult.


        :param agent: The agent of this UtteranceLevelTestResultItemTurnResult.
        :type agent: TestSetTurnResultAgent
        """

        self._agent = agent

    @property
    def user(self):
        """Gets the user of this UtteranceLevelTestResultItemTurnResult.


        :return: The user of this UtteranceLevelTestResultItemTurnResult.
        :rtype: TestSetTurnResultUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this UtteranceLevelTestResultItemTurnResult.


        :param user: The user of this UtteranceLevelTestResultItemTurnResult.
        :type user: TestSetTurnResultUser
        """

        self._user = user
