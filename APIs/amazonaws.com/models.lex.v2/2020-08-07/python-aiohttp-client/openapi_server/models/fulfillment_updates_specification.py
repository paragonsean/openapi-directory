# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fulfillment_updates_specification_start_response import FulfillmentUpdatesSpecificationStartResponse
from openapi_server.models.fulfillment_updates_specification_update_response import FulfillmentUpdatesSpecificationUpdateResponse
from openapi_server import util


class FulfillmentUpdatesSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, start_response: FulfillmentUpdatesSpecificationStartResponse=None, update_response: FulfillmentUpdatesSpecificationUpdateResponse=None, timeout_in_seconds: int=None):
        """FulfillmentUpdatesSpecification - a model defined in OpenAPI

        :param active: The active of this FulfillmentUpdatesSpecification.
        :param start_response: The start_response of this FulfillmentUpdatesSpecification.
        :param update_response: The update_response of this FulfillmentUpdatesSpecification.
        :param timeout_in_seconds: The timeout_in_seconds of this FulfillmentUpdatesSpecification.
        """
        self.openapi_types = {
            'active': bool,
            'start_response': FulfillmentUpdatesSpecificationStartResponse,
            'update_response': FulfillmentUpdatesSpecificationUpdateResponse,
            'timeout_in_seconds': int
        }

        self.attribute_map = {
            'active': 'active',
            'start_response': 'startResponse',
            'update_response': 'updateResponse',
            'timeout_in_seconds': 'timeoutInSeconds'
        }

        self._active = active
        self._start_response = start_response
        self._update_response = update_response
        self._timeout_in_seconds = timeout_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FulfillmentUpdatesSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FulfillmentUpdatesSpecification of this FulfillmentUpdatesSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this FulfillmentUpdatesSpecification.


        :return: The active of this FulfillmentUpdatesSpecification.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this FulfillmentUpdatesSpecification.


        :param active: The active of this FulfillmentUpdatesSpecification.
        :type active: bool
        """
        if active is None:
            raise ValueError("Invalid value for `active`, must not be `None`")

        self._active = active

    @property
    def start_response(self):
        """Gets the start_response of this FulfillmentUpdatesSpecification.


        :return: The start_response of this FulfillmentUpdatesSpecification.
        :rtype: FulfillmentUpdatesSpecificationStartResponse
        """
        return self._start_response

    @start_response.setter
    def start_response(self, start_response):
        """Sets the start_response of this FulfillmentUpdatesSpecification.


        :param start_response: The start_response of this FulfillmentUpdatesSpecification.
        :type start_response: FulfillmentUpdatesSpecificationStartResponse
        """

        self._start_response = start_response

    @property
    def update_response(self):
        """Gets the update_response of this FulfillmentUpdatesSpecification.


        :return: The update_response of this FulfillmentUpdatesSpecification.
        :rtype: FulfillmentUpdatesSpecificationUpdateResponse
        """
        return self._update_response

    @update_response.setter
    def update_response(self, update_response):
        """Sets the update_response of this FulfillmentUpdatesSpecification.


        :param update_response: The update_response of this FulfillmentUpdatesSpecification.
        :type update_response: FulfillmentUpdatesSpecificationUpdateResponse
        """

        self._update_response = update_response

    @property
    def timeout_in_seconds(self):
        """Gets the timeout_in_seconds of this FulfillmentUpdatesSpecification.


        :return: The timeout_in_seconds of this FulfillmentUpdatesSpecification.
        :rtype: int
        """
        return self._timeout_in_seconds

    @timeout_in_seconds.setter
    def timeout_in_seconds(self, timeout_in_seconds):
        """Sets the timeout_in_seconds of this FulfillmentUpdatesSpecification.


        :param timeout_in_seconds: The timeout_in_seconds of this FulfillmentUpdatesSpecification.
        :type timeout_in_seconds: int
        """

        self._timeout_in_seconds = timeout_in_seconds
