# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_intent_request_dialog_code_hook import CreateIntentRequestDialogCodeHook
from openapi_server.models.create_intent_request_fulfillment_code_hook import CreateIntentRequestFulfillmentCodeHook
from openapi_server.models.create_intent_request_initial_response_setting import CreateIntentRequestInitialResponseSetting
from openapi_server.models.create_intent_request_intent_closing_setting import CreateIntentRequestIntentClosingSetting
from openapi_server.models.create_intent_request_intent_confirmation_setting import CreateIntentRequestIntentConfirmationSetting
from openapi_server.models.create_intent_request_kendra_configuration import CreateIntentRequestKendraConfiguration
from openapi_server.models.input_context import InputContext
from openapi_server.models.output_context import OutputContext
from openapi_server.models.sample_utterance import SampleUtterance
from openapi_server.models.slot_priority import SlotPriority
import re
from openapi_server import util


class UpdateIntentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, intent_name: str=None, description: str=None, parent_intent_signature: str=None, sample_utterances: List[SampleUtterance]=None, dialog_code_hook: CreateIntentRequestDialogCodeHook=None, fulfillment_code_hook: CreateIntentRequestFulfillmentCodeHook=None, slot_priorities: List[SlotPriority]=None, intent_confirmation_setting: CreateIntentRequestIntentConfirmationSetting=None, intent_closing_setting: CreateIntentRequestIntentClosingSetting=None, input_contexts: List[InputContext]=None, output_contexts: List[OutputContext]=None, kendra_configuration: CreateIntentRequestKendraConfiguration=None, initial_response_setting: CreateIntentRequestInitialResponseSetting=None):
        """UpdateIntentRequest - a model defined in OpenAPI

        :param intent_name: The intent_name of this UpdateIntentRequest.
        :param description: The description of this UpdateIntentRequest.
        :param parent_intent_signature: The parent_intent_signature of this UpdateIntentRequest.
        :param sample_utterances: The sample_utterances of this UpdateIntentRequest.
        :param dialog_code_hook: The dialog_code_hook of this UpdateIntentRequest.
        :param fulfillment_code_hook: The fulfillment_code_hook of this UpdateIntentRequest.
        :param slot_priorities: The slot_priorities of this UpdateIntentRequest.
        :param intent_confirmation_setting: The intent_confirmation_setting of this UpdateIntentRequest.
        :param intent_closing_setting: The intent_closing_setting of this UpdateIntentRequest.
        :param input_contexts: The input_contexts of this UpdateIntentRequest.
        :param output_contexts: The output_contexts of this UpdateIntentRequest.
        :param kendra_configuration: The kendra_configuration of this UpdateIntentRequest.
        :param initial_response_setting: The initial_response_setting of this UpdateIntentRequest.
        """
        self.openapi_types = {
            'intent_name': str,
            'description': str,
            'parent_intent_signature': str,
            'sample_utterances': List[SampleUtterance],
            'dialog_code_hook': CreateIntentRequestDialogCodeHook,
            'fulfillment_code_hook': CreateIntentRequestFulfillmentCodeHook,
            'slot_priorities': List[SlotPriority],
            'intent_confirmation_setting': CreateIntentRequestIntentConfirmationSetting,
            'intent_closing_setting': CreateIntentRequestIntentClosingSetting,
            'input_contexts': List[InputContext],
            'output_contexts': List[OutputContext],
            'kendra_configuration': CreateIntentRequestKendraConfiguration,
            'initial_response_setting': CreateIntentRequestInitialResponseSetting
        }

        self.attribute_map = {
            'intent_name': 'intentName',
            'description': 'description',
            'parent_intent_signature': 'parentIntentSignature',
            'sample_utterances': 'sampleUtterances',
            'dialog_code_hook': 'dialogCodeHook',
            'fulfillment_code_hook': 'fulfillmentCodeHook',
            'slot_priorities': 'slotPriorities',
            'intent_confirmation_setting': 'intentConfirmationSetting',
            'intent_closing_setting': 'intentClosingSetting',
            'input_contexts': 'inputContexts',
            'output_contexts': 'outputContexts',
            'kendra_configuration': 'kendraConfiguration',
            'initial_response_setting': 'initialResponseSetting'
        }

        self._intent_name = intent_name
        self._description = description
        self._parent_intent_signature = parent_intent_signature
        self._sample_utterances = sample_utterances
        self._dialog_code_hook = dialog_code_hook
        self._fulfillment_code_hook = fulfillment_code_hook
        self._slot_priorities = slot_priorities
        self._intent_confirmation_setting = intent_confirmation_setting
        self._intent_closing_setting = intent_closing_setting
        self._input_contexts = input_contexts
        self._output_contexts = output_contexts
        self._kendra_configuration = kendra_configuration
        self._initial_response_setting = initial_response_setting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateIntentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateIntent_request of this UpdateIntentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intent_name(self):
        """Gets the intent_name of this UpdateIntentRequest.

        The new name for the intent.

        :return: The intent_name of this UpdateIntentRequest.
        :rtype: str
        """
        return self._intent_name

    @intent_name.setter
    def intent_name(self, intent_name):
        """Sets the intent_name of this UpdateIntentRequest.

        The new name for the intent.

        :param intent_name: The intent_name of this UpdateIntentRequest.
        :type intent_name: str
        """
        if intent_name is None:
            raise ValueError("Invalid value for `intent_name`, must not be `None`")
        if intent_name is not None and len(intent_name) > 100:
            raise ValueError("Invalid value for `intent_name`, length must be less than or equal to `100`")
        if intent_name is not None and len(intent_name) < 1:
            raise ValueError("Invalid value for `intent_name`, length must be greater than or equal to `1`")
        if intent_name is not None and not re.search(r'^([0-9a-zA-Z][_-]?){1,100}$', intent_name):
            raise ValueError("Invalid value for `intent_name`, must be a follow pattern or equal to `/^([0-9a-zA-Z][_-]?){1,100}$/`")

        self._intent_name = intent_name

    @property
    def description(self):
        """Gets the description of this UpdateIntentRequest.

        The new description of the intent.

        :return: The description of this UpdateIntentRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateIntentRequest.

        The new description of the intent.

        :param description: The description of this UpdateIntentRequest.
        :type description: str
        """
        if description is not None and len(description) > 200:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `200`")
        if description is not None and len(description) < 0:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")

        self._description = description

    @property
    def parent_intent_signature(self):
        """Gets the parent_intent_signature of this UpdateIntentRequest.

        The signature of the new built-in intent to use as the parent of this intent.

        :return: The parent_intent_signature of this UpdateIntentRequest.
        :rtype: str
        """
        return self._parent_intent_signature

    @parent_intent_signature.setter
    def parent_intent_signature(self, parent_intent_signature):
        """Sets the parent_intent_signature of this UpdateIntentRequest.

        The signature of the new built-in intent to use as the parent of this intent.

        :param parent_intent_signature: The parent_intent_signature of this UpdateIntentRequest.
        :type parent_intent_signature: str
        """

        self._parent_intent_signature = parent_intent_signature

    @property
    def sample_utterances(self):
        """Gets the sample_utterances of this UpdateIntentRequest.

        New utterances used to invoke the intent.

        :return: The sample_utterances of this UpdateIntentRequest.
        :rtype: List[SampleUtterance]
        """
        return self._sample_utterances

    @sample_utterances.setter
    def sample_utterances(self, sample_utterances):
        """Sets the sample_utterances of this UpdateIntentRequest.

        New utterances used to invoke the intent.

        :param sample_utterances: The sample_utterances of this UpdateIntentRequest.
        :type sample_utterances: List[SampleUtterance]
        """

        self._sample_utterances = sample_utterances

    @property
    def dialog_code_hook(self):
        """Gets the dialog_code_hook of this UpdateIntentRequest.


        :return: The dialog_code_hook of this UpdateIntentRequest.
        :rtype: CreateIntentRequestDialogCodeHook
        """
        return self._dialog_code_hook

    @dialog_code_hook.setter
    def dialog_code_hook(self, dialog_code_hook):
        """Sets the dialog_code_hook of this UpdateIntentRequest.


        :param dialog_code_hook: The dialog_code_hook of this UpdateIntentRequest.
        :type dialog_code_hook: CreateIntentRequestDialogCodeHook
        """

        self._dialog_code_hook = dialog_code_hook

    @property
    def fulfillment_code_hook(self):
        """Gets the fulfillment_code_hook of this UpdateIntentRequest.


        :return: The fulfillment_code_hook of this UpdateIntentRequest.
        :rtype: CreateIntentRequestFulfillmentCodeHook
        """
        return self._fulfillment_code_hook

    @fulfillment_code_hook.setter
    def fulfillment_code_hook(self, fulfillment_code_hook):
        """Sets the fulfillment_code_hook of this UpdateIntentRequest.


        :param fulfillment_code_hook: The fulfillment_code_hook of this UpdateIntentRequest.
        :type fulfillment_code_hook: CreateIntentRequestFulfillmentCodeHook
        """

        self._fulfillment_code_hook = fulfillment_code_hook

    @property
    def slot_priorities(self):
        """Gets the slot_priorities of this UpdateIntentRequest.

        A new list of slots and their priorities that are contained by the intent.

        :return: The slot_priorities of this UpdateIntentRequest.
        :rtype: List[SlotPriority]
        """
        return self._slot_priorities

    @slot_priorities.setter
    def slot_priorities(self, slot_priorities):
        """Sets the slot_priorities of this UpdateIntentRequest.

        A new list of slots and their priorities that are contained by the intent.

        :param slot_priorities: The slot_priorities of this UpdateIntentRequest.
        :type slot_priorities: List[SlotPriority]
        """

        self._slot_priorities = slot_priorities

    @property
    def intent_confirmation_setting(self):
        """Gets the intent_confirmation_setting of this UpdateIntentRequest.


        :return: The intent_confirmation_setting of this UpdateIntentRequest.
        :rtype: CreateIntentRequestIntentConfirmationSetting
        """
        return self._intent_confirmation_setting

    @intent_confirmation_setting.setter
    def intent_confirmation_setting(self, intent_confirmation_setting):
        """Sets the intent_confirmation_setting of this UpdateIntentRequest.


        :param intent_confirmation_setting: The intent_confirmation_setting of this UpdateIntentRequest.
        :type intent_confirmation_setting: CreateIntentRequestIntentConfirmationSetting
        """

        self._intent_confirmation_setting = intent_confirmation_setting

    @property
    def intent_closing_setting(self):
        """Gets the intent_closing_setting of this UpdateIntentRequest.


        :return: The intent_closing_setting of this UpdateIntentRequest.
        :rtype: CreateIntentRequestIntentClosingSetting
        """
        return self._intent_closing_setting

    @intent_closing_setting.setter
    def intent_closing_setting(self, intent_closing_setting):
        """Sets the intent_closing_setting of this UpdateIntentRequest.


        :param intent_closing_setting: The intent_closing_setting of this UpdateIntentRequest.
        :type intent_closing_setting: CreateIntentRequestIntentClosingSetting
        """

        self._intent_closing_setting = intent_closing_setting

    @property
    def input_contexts(self):
        """Gets the input_contexts of this UpdateIntentRequest.

        A new list of contexts that must be active in order for Amazon Lex to consider the intent.

        :return: The input_contexts of this UpdateIntentRequest.
        :rtype: List[InputContext]
        """
        return self._input_contexts

    @input_contexts.setter
    def input_contexts(self, input_contexts):
        """Sets the input_contexts of this UpdateIntentRequest.

        A new list of contexts that must be active in order for Amazon Lex to consider the intent.

        :param input_contexts: The input_contexts of this UpdateIntentRequest.
        :type input_contexts: List[InputContext]
        """
        if input_contexts is not None and len(input_contexts) > 5:
            raise ValueError("Invalid value for `input_contexts`, number of items must be less than or equal to `5`")
        if input_contexts is not None and len(input_contexts) < 0:
            raise ValueError("Invalid value for `input_contexts`, number of items must be greater than or equal to `0`")

        self._input_contexts = input_contexts

    @property
    def output_contexts(self):
        """Gets the output_contexts of this UpdateIntentRequest.

        A new list of contexts that Amazon Lex activates when the intent is fulfilled.

        :return: The output_contexts of this UpdateIntentRequest.
        :rtype: List[OutputContext]
        """
        return self._output_contexts

    @output_contexts.setter
    def output_contexts(self, output_contexts):
        """Sets the output_contexts of this UpdateIntentRequest.

        A new list of contexts that Amazon Lex activates when the intent is fulfilled.

        :param output_contexts: The output_contexts of this UpdateIntentRequest.
        :type output_contexts: List[OutputContext]
        """
        if output_contexts is not None and len(output_contexts) > 10:
            raise ValueError("Invalid value for `output_contexts`, number of items must be less than or equal to `10`")
        if output_contexts is not None and len(output_contexts) < 0:
            raise ValueError("Invalid value for `output_contexts`, number of items must be greater than or equal to `0`")

        self._output_contexts = output_contexts

    @property
    def kendra_configuration(self):
        """Gets the kendra_configuration of this UpdateIntentRequest.


        :return: The kendra_configuration of this UpdateIntentRequest.
        :rtype: CreateIntentRequestKendraConfiguration
        """
        return self._kendra_configuration

    @kendra_configuration.setter
    def kendra_configuration(self, kendra_configuration):
        """Sets the kendra_configuration of this UpdateIntentRequest.


        :param kendra_configuration: The kendra_configuration of this UpdateIntentRequest.
        :type kendra_configuration: CreateIntentRequestKendraConfiguration
        """

        self._kendra_configuration = kendra_configuration

    @property
    def initial_response_setting(self):
        """Gets the initial_response_setting of this UpdateIntentRequest.


        :return: The initial_response_setting of this UpdateIntentRequest.
        :rtype: CreateIntentRequestInitialResponseSetting
        """
        return self._initial_response_setting

    @initial_response_setting.setter
    def initial_response_setting(self, initial_response_setting):
        """Sets the initial_response_setting of this UpdateIntentRequest.


        :param initial_response_setting: The initial_response_setting of this UpdateIntentRequest.
        :type initial_response_setting: CreateIntentRequestInitialResponseSetting
        """

        self._initial_response_setting = initial_response_setting
