# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserTurnOutputSpecificationIntent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, slots: Dict=None):
        """UserTurnOutputSpecificationIntent - a model defined in OpenAPI

        :param name: The name of this UserTurnOutputSpecificationIntent.
        :param slots: The slots of this UserTurnOutputSpecificationIntent.
        """
        self.openapi_types = {
            'name': str,
            'slots': Dict
        }

        self.attribute_map = {
            'name': 'name',
            'slots': 'slots'
        }

        self._name = name
        self._slots = slots

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserTurnOutputSpecificationIntent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserTurnOutputSpecification_intent of this UserTurnOutputSpecificationIntent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UserTurnOutputSpecificationIntent.


        :return: The name of this UserTurnOutputSpecificationIntent.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserTurnOutputSpecificationIntent.


        :param name: The name of this UserTurnOutputSpecificationIntent.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def slots(self):
        """Gets the slots of this UserTurnOutputSpecificationIntent.


        :return: The slots of this UserTurnOutputSpecificationIntent.
        :rtype: Dict
        """
        return self._slots

    @slots.setter
    def slots(self, slots):
        """Sets the slots of this UserTurnOutputSpecificationIntent.


        :param slots: The slots of this UserTurnOutputSpecificationIntent.
        :type slots: Dict
        """

        self._slots = slots
