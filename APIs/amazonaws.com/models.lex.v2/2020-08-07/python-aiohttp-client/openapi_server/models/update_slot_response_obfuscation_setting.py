# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.obfuscation_setting_type import ObfuscationSettingType
from openapi_server import util


class UpdateSlotResponseObfuscationSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, obfuscation_setting_type: ObfuscationSettingType=None):
        """UpdateSlotResponseObfuscationSetting - a model defined in OpenAPI

        :param obfuscation_setting_type: The obfuscation_setting_type of this UpdateSlotResponseObfuscationSetting.
        """
        self.openapi_types = {
            'obfuscation_setting_type': ObfuscationSettingType
        }

        self.attribute_map = {
            'obfuscation_setting_type': 'obfuscationSettingType'
        }

        self._obfuscation_setting_type = obfuscation_setting_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSlotResponseObfuscationSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSlotResponse_obfuscationSetting of this UpdateSlotResponseObfuscationSetting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def obfuscation_setting_type(self):
        """Gets the obfuscation_setting_type of this UpdateSlotResponseObfuscationSetting.


        :return: The obfuscation_setting_type of this UpdateSlotResponseObfuscationSetting.
        :rtype: ObfuscationSettingType
        """
        return self._obfuscation_setting_type

    @obfuscation_setting_type.setter
    def obfuscation_setting_type(self, obfuscation_setting_type):
        """Sets the obfuscation_setting_type of this UpdateSlotResponseObfuscationSetting.


        :param obfuscation_setting_type: The obfuscation_setting_type of this UpdateSlotResponseObfuscationSetting.
        :type obfuscation_setting_type: ObfuscationSettingType
        """
        if obfuscation_setting_type is None:
            raise ValueError("Invalid value for `obfuscation_setting_type`, must not be `None`")

        self._obfuscation_setting_type = obfuscation_setting_type
