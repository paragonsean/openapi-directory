# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.turn_specification_agent_turn import TurnSpecificationAgentTurn
from openapi_server.models.turn_specification_user_turn import TurnSpecificationUserTurn
from openapi_server import util


class TestSetTurnRecordTurnSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_turn: TurnSpecificationAgentTurn=None, user_turn: TurnSpecificationUserTurn=None):
        """TestSetTurnRecordTurnSpecification - a model defined in OpenAPI

        :param agent_turn: The agent_turn of this TestSetTurnRecordTurnSpecification.
        :param user_turn: The user_turn of this TestSetTurnRecordTurnSpecification.
        """
        self.openapi_types = {
            'agent_turn': TurnSpecificationAgentTurn,
            'user_turn': TurnSpecificationUserTurn
        }

        self.attribute_map = {
            'agent_turn': 'agentTurn',
            'user_turn': 'userTurn'
        }

        self._agent_turn = agent_turn
        self._user_turn = user_turn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestSetTurnRecordTurnSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestSetTurnRecord_turnSpecification of this TestSetTurnRecordTurnSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_turn(self):
        """Gets the agent_turn of this TestSetTurnRecordTurnSpecification.


        :return: The agent_turn of this TestSetTurnRecordTurnSpecification.
        :rtype: TurnSpecificationAgentTurn
        """
        return self._agent_turn

    @agent_turn.setter
    def agent_turn(self, agent_turn):
        """Sets the agent_turn of this TestSetTurnRecordTurnSpecification.


        :param agent_turn: The agent_turn of this TestSetTurnRecordTurnSpecification.
        :type agent_turn: TurnSpecificationAgentTurn
        """

        self._agent_turn = agent_turn

    @property
    def user_turn(self):
        """Gets the user_turn of this TestSetTurnRecordTurnSpecification.


        :return: The user_turn of this TestSetTurnRecordTurnSpecification.
        :rtype: TurnSpecificationUserTurn
        """
        return self._user_turn

    @user_turn.setter
    def user_turn(self, user_turn):
        """Sets the user_turn of this TestSetTurnRecordTurnSpecification.


        :param user_turn: The user_turn of this TestSetTurnRecordTurnSpecification.
        :type user_turn: TurnSpecificationUserTurn
        """

        self._user_turn = user_turn
