# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FulfillmentUpdatesSpecificationUpdateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frequency_in_seconds: int=None, message_groups: List=None, allow_interrupt: bool=None):
        """FulfillmentUpdatesSpecificationUpdateResponse - a model defined in OpenAPI

        :param frequency_in_seconds: The frequency_in_seconds of this FulfillmentUpdatesSpecificationUpdateResponse.
        :param message_groups: The message_groups of this FulfillmentUpdatesSpecificationUpdateResponse.
        :param allow_interrupt: The allow_interrupt of this FulfillmentUpdatesSpecificationUpdateResponse.
        """
        self.openapi_types = {
            'frequency_in_seconds': int,
            'message_groups': List,
            'allow_interrupt': bool
        }

        self.attribute_map = {
            'frequency_in_seconds': 'frequencyInSeconds',
            'message_groups': 'messageGroups',
            'allow_interrupt': 'allowInterrupt'
        }

        self._frequency_in_seconds = frequency_in_seconds
        self._message_groups = message_groups
        self._allow_interrupt = allow_interrupt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FulfillmentUpdatesSpecificationUpdateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FulfillmentUpdatesSpecification_updateResponse of this FulfillmentUpdatesSpecificationUpdateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frequency_in_seconds(self):
        """Gets the frequency_in_seconds of this FulfillmentUpdatesSpecificationUpdateResponse.


        :return: The frequency_in_seconds of this FulfillmentUpdatesSpecificationUpdateResponse.
        :rtype: int
        """
        return self._frequency_in_seconds

    @frequency_in_seconds.setter
    def frequency_in_seconds(self, frequency_in_seconds):
        """Sets the frequency_in_seconds of this FulfillmentUpdatesSpecificationUpdateResponse.


        :param frequency_in_seconds: The frequency_in_seconds of this FulfillmentUpdatesSpecificationUpdateResponse.
        :type frequency_in_seconds: int
        """
        if frequency_in_seconds is None:
            raise ValueError("Invalid value for `frequency_in_seconds`, must not be `None`")

        self._frequency_in_seconds = frequency_in_seconds

    @property
    def message_groups(self):
        """Gets the message_groups of this FulfillmentUpdatesSpecificationUpdateResponse.


        :return: The message_groups of this FulfillmentUpdatesSpecificationUpdateResponse.
        :rtype: List
        """
        return self._message_groups

    @message_groups.setter
    def message_groups(self, message_groups):
        """Sets the message_groups of this FulfillmentUpdatesSpecificationUpdateResponse.


        :param message_groups: The message_groups of this FulfillmentUpdatesSpecificationUpdateResponse.
        :type message_groups: List
        """
        if message_groups is None:
            raise ValueError("Invalid value for `message_groups`, must not be `None`")

        self._message_groups = message_groups

    @property
    def allow_interrupt(self):
        """Gets the allow_interrupt of this FulfillmentUpdatesSpecificationUpdateResponse.


        :return: The allow_interrupt of this FulfillmentUpdatesSpecificationUpdateResponse.
        :rtype: bool
        """
        return self._allow_interrupt

    @allow_interrupt.setter
    def allow_interrupt(self, allow_interrupt):
        """Sets the allow_interrupt of this FulfillmentUpdatesSpecificationUpdateResponse.


        :param allow_interrupt: The allow_interrupt of this FulfillmentUpdatesSpecificationUpdateResponse.
        :type allow_interrupt: bool
        """

        self._allow_interrupt = allow_interrupt
