# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchAssociatedTranscriptsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bot_id: str=None, bot_version: str=None, locale_id: str=None, bot_recommendation_id: str=None, next_index: int=None, associated_transcripts: List=None, total_results: int=None):
        """SearchAssociatedTranscriptsResponse - a model defined in OpenAPI

        :param bot_id: The bot_id of this SearchAssociatedTranscriptsResponse.
        :param bot_version: The bot_version of this SearchAssociatedTranscriptsResponse.
        :param locale_id: The locale_id of this SearchAssociatedTranscriptsResponse.
        :param bot_recommendation_id: The bot_recommendation_id of this SearchAssociatedTranscriptsResponse.
        :param next_index: The next_index of this SearchAssociatedTranscriptsResponse.
        :param associated_transcripts: The associated_transcripts of this SearchAssociatedTranscriptsResponse.
        :param total_results: The total_results of this SearchAssociatedTranscriptsResponse.
        """
        self.openapi_types = {
            'bot_id': str,
            'bot_version': str,
            'locale_id': str,
            'bot_recommendation_id': str,
            'next_index': int,
            'associated_transcripts': List,
            'total_results': int
        }

        self.attribute_map = {
            'bot_id': 'botId',
            'bot_version': 'botVersion',
            'locale_id': 'localeId',
            'bot_recommendation_id': 'botRecommendationId',
            'next_index': 'nextIndex',
            'associated_transcripts': 'associatedTranscripts',
            'total_results': 'totalResults'
        }

        self._bot_id = bot_id
        self._bot_version = bot_version
        self._locale_id = locale_id
        self._bot_recommendation_id = bot_recommendation_id
        self._next_index = next_index
        self._associated_transcripts = associated_transcripts
        self._total_results = total_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchAssociatedTranscriptsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchAssociatedTranscriptsResponse of this SearchAssociatedTranscriptsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bot_id(self):
        """Gets the bot_id of this SearchAssociatedTranscriptsResponse.


        :return: The bot_id of this SearchAssociatedTranscriptsResponse.
        :rtype: str
        """
        return self._bot_id

    @bot_id.setter
    def bot_id(self, bot_id):
        """Sets the bot_id of this SearchAssociatedTranscriptsResponse.


        :param bot_id: The bot_id of this SearchAssociatedTranscriptsResponse.
        :type bot_id: str
        """

        self._bot_id = bot_id

    @property
    def bot_version(self):
        """Gets the bot_version of this SearchAssociatedTranscriptsResponse.


        :return: The bot_version of this SearchAssociatedTranscriptsResponse.
        :rtype: str
        """
        return self._bot_version

    @bot_version.setter
    def bot_version(self, bot_version):
        """Sets the bot_version of this SearchAssociatedTranscriptsResponse.


        :param bot_version: The bot_version of this SearchAssociatedTranscriptsResponse.
        :type bot_version: str
        """

        self._bot_version = bot_version

    @property
    def locale_id(self):
        """Gets the locale_id of this SearchAssociatedTranscriptsResponse.


        :return: The locale_id of this SearchAssociatedTranscriptsResponse.
        :rtype: str
        """
        return self._locale_id

    @locale_id.setter
    def locale_id(self, locale_id):
        """Sets the locale_id of this SearchAssociatedTranscriptsResponse.


        :param locale_id: The locale_id of this SearchAssociatedTranscriptsResponse.
        :type locale_id: str
        """

        self._locale_id = locale_id

    @property
    def bot_recommendation_id(self):
        """Gets the bot_recommendation_id of this SearchAssociatedTranscriptsResponse.


        :return: The bot_recommendation_id of this SearchAssociatedTranscriptsResponse.
        :rtype: str
        """
        return self._bot_recommendation_id

    @bot_recommendation_id.setter
    def bot_recommendation_id(self, bot_recommendation_id):
        """Sets the bot_recommendation_id of this SearchAssociatedTranscriptsResponse.


        :param bot_recommendation_id: The bot_recommendation_id of this SearchAssociatedTranscriptsResponse.
        :type bot_recommendation_id: str
        """

        self._bot_recommendation_id = bot_recommendation_id

    @property
    def next_index(self):
        """Gets the next_index of this SearchAssociatedTranscriptsResponse.


        :return: The next_index of this SearchAssociatedTranscriptsResponse.
        :rtype: int
        """
        return self._next_index

    @next_index.setter
    def next_index(self, next_index):
        """Sets the next_index of this SearchAssociatedTranscriptsResponse.


        :param next_index: The next_index of this SearchAssociatedTranscriptsResponse.
        :type next_index: int
        """

        self._next_index = next_index

    @property
    def associated_transcripts(self):
        """Gets the associated_transcripts of this SearchAssociatedTranscriptsResponse.


        :return: The associated_transcripts of this SearchAssociatedTranscriptsResponse.
        :rtype: List
        """
        return self._associated_transcripts

    @associated_transcripts.setter
    def associated_transcripts(self, associated_transcripts):
        """Sets the associated_transcripts of this SearchAssociatedTranscriptsResponse.


        :param associated_transcripts: The associated_transcripts of this SearchAssociatedTranscriptsResponse.
        :type associated_transcripts: List
        """

        self._associated_transcripts = associated_transcripts

    @property
    def total_results(self):
        """Gets the total_results of this SearchAssociatedTranscriptsResponse.


        :return: The total_results of this SearchAssociatedTranscriptsResponse.
        :rtype: int
        """
        return self._total_results

    @total_results.setter
    def total_results(self, total_results):
        """Sets the total_results of this SearchAssociatedTranscriptsResponse.


        :param total_results: The total_results of this SearchAssociatedTranscriptsResponse.
        :type total_results: int
        """

        self._total_results = total_results
