# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendedIntentSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, intent_id: str=None, intent_name: str=None, sample_utterances_count: int=None):
        """RecommendedIntentSummary - a model defined in OpenAPI

        :param intent_id: The intent_id of this RecommendedIntentSummary.
        :param intent_name: The intent_name of this RecommendedIntentSummary.
        :param sample_utterances_count: The sample_utterances_count of this RecommendedIntentSummary.
        """
        self.openapi_types = {
            'intent_id': str,
            'intent_name': str,
            'sample_utterances_count': int
        }

        self.attribute_map = {
            'intent_id': 'intentId',
            'intent_name': 'intentName',
            'sample_utterances_count': 'sampleUtterancesCount'
        }

        self._intent_id = intent_id
        self._intent_name = intent_name
        self._sample_utterances_count = sample_utterances_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendedIntentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendedIntentSummary of this RecommendedIntentSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intent_id(self):
        """Gets the intent_id of this RecommendedIntentSummary.


        :return: The intent_id of this RecommendedIntentSummary.
        :rtype: str
        """
        return self._intent_id

    @intent_id.setter
    def intent_id(self, intent_id):
        """Sets the intent_id of this RecommendedIntentSummary.


        :param intent_id: The intent_id of this RecommendedIntentSummary.
        :type intent_id: str
        """

        self._intent_id = intent_id

    @property
    def intent_name(self):
        """Gets the intent_name of this RecommendedIntentSummary.


        :return: The intent_name of this RecommendedIntentSummary.
        :rtype: str
        """
        return self._intent_name

    @intent_name.setter
    def intent_name(self, intent_name):
        """Sets the intent_name of this RecommendedIntentSummary.


        :param intent_name: The intent_name of this RecommendedIntentSummary.
        :type intent_name: str
        """

        self._intent_name = intent_name

    @property
    def sample_utterances_count(self):
        """Gets the sample_utterances_count of this RecommendedIntentSummary.


        :return: The sample_utterances_count of this RecommendedIntentSummary.
        :rtype: int
        """
        return self._sample_utterances_count

    @sample_utterances_count.setter
    def sample_utterances_count(self, sample_utterances_count):
        """Sets the sample_utterances_count of this RecommendedIntentSummary.


        :param sample_utterances_count: The sample_utterances_count of this RecommendedIntentSummary.
        :type sample_utterances_count: int
        """

        self._sample_utterances_count = sample_utterances_count
