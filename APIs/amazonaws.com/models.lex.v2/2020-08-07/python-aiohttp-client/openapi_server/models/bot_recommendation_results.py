# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bot_recommendation_results_statistics import BotRecommendationResultsStatistics
from openapi_server import util


class BotRecommendationResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bot_locale_export_url: str=None, associated_transcripts_url: str=None, statistics: BotRecommendationResultsStatistics=None):
        """BotRecommendationResults - a model defined in OpenAPI

        :param bot_locale_export_url: The bot_locale_export_url of this BotRecommendationResults.
        :param associated_transcripts_url: The associated_transcripts_url of this BotRecommendationResults.
        :param statistics: The statistics of this BotRecommendationResults.
        """
        self.openapi_types = {
            'bot_locale_export_url': str,
            'associated_transcripts_url': str,
            'statistics': BotRecommendationResultsStatistics
        }

        self.attribute_map = {
            'bot_locale_export_url': 'botLocaleExportUrl',
            'associated_transcripts_url': 'associatedTranscriptsUrl',
            'statistics': 'statistics'
        }

        self._bot_locale_export_url = bot_locale_export_url
        self._associated_transcripts_url = associated_transcripts_url
        self._statistics = statistics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BotRecommendationResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BotRecommendationResults of this BotRecommendationResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bot_locale_export_url(self):
        """Gets the bot_locale_export_url of this BotRecommendationResults.


        :return: The bot_locale_export_url of this BotRecommendationResults.
        :rtype: str
        """
        return self._bot_locale_export_url

    @bot_locale_export_url.setter
    def bot_locale_export_url(self, bot_locale_export_url):
        """Sets the bot_locale_export_url of this BotRecommendationResults.


        :param bot_locale_export_url: The bot_locale_export_url of this BotRecommendationResults.
        :type bot_locale_export_url: str
        """

        self._bot_locale_export_url = bot_locale_export_url

    @property
    def associated_transcripts_url(self):
        """Gets the associated_transcripts_url of this BotRecommendationResults.


        :return: The associated_transcripts_url of this BotRecommendationResults.
        :rtype: str
        """
        return self._associated_transcripts_url

    @associated_transcripts_url.setter
    def associated_transcripts_url(self, associated_transcripts_url):
        """Sets the associated_transcripts_url of this BotRecommendationResults.


        :param associated_transcripts_url: The associated_transcripts_url of this BotRecommendationResults.
        :type associated_transcripts_url: str
        """

        self._associated_transcripts_url = associated_transcripts_url

    @property
    def statistics(self):
        """Gets the statistics of this BotRecommendationResults.


        :return: The statistics of this BotRecommendationResults.
        :rtype: BotRecommendationResultsStatistics
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics):
        """Sets the statistics of this BotRecommendationResults.


        :param statistics: The statistics of this BotRecommendationResults.
        :type statistics: BotRecommendationResultsStatistics
        """

        self._statistics = statistics
