# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bot_recommendation_status import BotRecommendationStatus
from openapi_server import util


class BotRecommendationSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bot_recommendation_status: BotRecommendationStatus=None, bot_recommendation_id: str=None, creation_date_time: datetime=None, last_updated_date_time: datetime=None):
        """BotRecommendationSummary - a model defined in OpenAPI

        :param bot_recommendation_status: The bot_recommendation_status of this BotRecommendationSummary.
        :param bot_recommendation_id: The bot_recommendation_id of this BotRecommendationSummary.
        :param creation_date_time: The creation_date_time of this BotRecommendationSummary.
        :param last_updated_date_time: The last_updated_date_time of this BotRecommendationSummary.
        """
        self.openapi_types = {
            'bot_recommendation_status': BotRecommendationStatus,
            'bot_recommendation_id': str,
            'creation_date_time': datetime,
            'last_updated_date_time': datetime
        }

        self.attribute_map = {
            'bot_recommendation_status': 'botRecommendationStatus',
            'bot_recommendation_id': 'botRecommendationId',
            'creation_date_time': 'creationDateTime',
            'last_updated_date_time': 'lastUpdatedDateTime'
        }

        self._bot_recommendation_status = bot_recommendation_status
        self._bot_recommendation_id = bot_recommendation_id
        self._creation_date_time = creation_date_time
        self._last_updated_date_time = last_updated_date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BotRecommendationSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BotRecommendationSummary of this BotRecommendationSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bot_recommendation_status(self):
        """Gets the bot_recommendation_status of this BotRecommendationSummary.


        :return: The bot_recommendation_status of this BotRecommendationSummary.
        :rtype: BotRecommendationStatus
        """
        return self._bot_recommendation_status

    @bot_recommendation_status.setter
    def bot_recommendation_status(self, bot_recommendation_status):
        """Sets the bot_recommendation_status of this BotRecommendationSummary.


        :param bot_recommendation_status: The bot_recommendation_status of this BotRecommendationSummary.
        :type bot_recommendation_status: BotRecommendationStatus
        """
        if bot_recommendation_status is None:
            raise ValueError("Invalid value for `bot_recommendation_status`, must not be `None`")

        self._bot_recommendation_status = bot_recommendation_status

    @property
    def bot_recommendation_id(self):
        """Gets the bot_recommendation_id of this BotRecommendationSummary.


        :return: The bot_recommendation_id of this BotRecommendationSummary.
        :rtype: str
        """
        return self._bot_recommendation_id

    @bot_recommendation_id.setter
    def bot_recommendation_id(self, bot_recommendation_id):
        """Sets the bot_recommendation_id of this BotRecommendationSummary.


        :param bot_recommendation_id: The bot_recommendation_id of this BotRecommendationSummary.
        :type bot_recommendation_id: str
        """
        if bot_recommendation_id is None:
            raise ValueError("Invalid value for `bot_recommendation_id`, must not be `None`")

        self._bot_recommendation_id = bot_recommendation_id

    @property
    def creation_date_time(self):
        """Gets the creation_date_time of this BotRecommendationSummary.


        :return: The creation_date_time of this BotRecommendationSummary.
        :rtype: datetime
        """
        return self._creation_date_time

    @creation_date_time.setter
    def creation_date_time(self, creation_date_time):
        """Sets the creation_date_time of this BotRecommendationSummary.


        :param creation_date_time: The creation_date_time of this BotRecommendationSummary.
        :type creation_date_time: datetime
        """

        self._creation_date_time = creation_date_time

    @property
    def last_updated_date_time(self):
        """Gets the last_updated_date_time of this BotRecommendationSummary.


        :return: The last_updated_date_time of this BotRecommendationSummary.
        :rtype: datetime
        """
        return self._last_updated_date_time

    @last_updated_date_time.setter
    def last_updated_date_time(self, last_updated_date_time):
        """Sets the last_updated_date_time of this BotRecommendationSummary.


        :param last_updated_date_time: The last_updated_date_time of this BotRecommendationSummary.
        :type last_updated_date_time: datetime
        """

        self._last_updated_date_time = last_updated_date_time
