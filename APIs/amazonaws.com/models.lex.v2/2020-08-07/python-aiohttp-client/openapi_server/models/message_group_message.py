# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_custom_payload import MessageCustomPayload
from openapi_server.models.message_image_response_card import MessageImageResponseCard
from openapi_server.models.message_plain_text_message import MessagePlainTextMessage
from openapi_server.models.message_ssml_message import MessageSsmlMessage
from openapi_server import util


class MessageGroupMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plain_text_message: MessagePlainTextMessage=None, custom_payload: MessageCustomPayload=None, ssml_message: MessageSsmlMessage=None, image_response_card: MessageImageResponseCard=None):
        """MessageGroupMessage - a model defined in OpenAPI

        :param plain_text_message: The plain_text_message of this MessageGroupMessage.
        :param custom_payload: The custom_payload of this MessageGroupMessage.
        :param ssml_message: The ssml_message of this MessageGroupMessage.
        :param image_response_card: The image_response_card of this MessageGroupMessage.
        """
        self.openapi_types = {
            'plain_text_message': MessagePlainTextMessage,
            'custom_payload': MessageCustomPayload,
            'ssml_message': MessageSsmlMessage,
            'image_response_card': MessageImageResponseCard
        }

        self.attribute_map = {
            'plain_text_message': 'plainTextMessage',
            'custom_payload': 'customPayload',
            'ssml_message': 'ssmlMessage',
            'image_response_card': 'imageResponseCard'
        }

        self._plain_text_message = plain_text_message
        self._custom_payload = custom_payload
        self._ssml_message = ssml_message
        self._image_response_card = image_response_card

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageGroupMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessageGroup_message of this MessageGroupMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plain_text_message(self):
        """Gets the plain_text_message of this MessageGroupMessage.


        :return: The plain_text_message of this MessageGroupMessage.
        :rtype: MessagePlainTextMessage
        """
        return self._plain_text_message

    @plain_text_message.setter
    def plain_text_message(self, plain_text_message):
        """Sets the plain_text_message of this MessageGroupMessage.


        :param plain_text_message: The plain_text_message of this MessageGroupMessage.
        :type plain_text_message: MessagePlainTextMessage
        """

        self._plain_text_message = plain_text_message

    @property
    def custom_payload(self):
        """Gets the custom_payload of this MessageGroupMessage.


        :return: The custom_payload of this MessageGroupMessage.
        :rtype: MessageCustomPayload
        """
        return self._custom_payload

    @custom_payload.setter
    def custom_payload(self, custom_payload):
        """Sets the custom_payload of this MessageGroupMessage.


        :param custom_payload: The custom_payload of this MessageGroupMessage.
        :type custom_payload: MessageCustomPayload
        """

        self._custom_payload = custom_payload

    @property
    def ssml_message(self):
        """Gets the ssml_message of this MessageGroupMessage.


        :return: The ssml_message of this MessageGroupMessage.
        :rtype: MessageSsmlMessage
        """
        return self._ssml_message

    @ssml_message.setter
    def ssml_message(self, ssml_message):
        """Sets the ssml_message of this MessageGroupMessage.


        :param ssml_message: The ssml_message of this MessageGroupMessage.
        :type ssml_message: MessageSsmlMessage
        """

        self._ssml_message = ssml_message

    @property
    def image_response_card(self):
        """Gets the image_response_card of this MessageGroupMessage.


        :return: The image_response_card of this MessageGroupMessage.
        :rtype: MessageImageResponseCard
        """
        return self._image_response_card

    @image_response_card.setter
    def image_response_card(self, image_response_card):
        """Sets the image_response_card of this MessageGroupMessage.


        :param image_response_card: The image_response_card of this MessageGroupMessage.
        :type image_response_card: MessageImageResponseCard
        """

        self._image_response_card = image_response_card
