# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserTurnSlotOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value: str=None, values: List=None, sub_slots: Dict=None):
        """UserTurnSlotOutput - a model defined in OpenAPI

        :param value: The value of this UserTurnSlotOutput.
        :param values: The values of this UserTurnSlotOutput.
        :param sub_slots: The sub_slots of this UserTurnSlotOutput.
        """
        self.openapi_types = {
            'value': str,
            'values': List,
            'sub_slots': Dict
        }

        self.attribute_map = {
            'value': 'value',
            'values': 'values',
            'sub_slots': 'subSlots'
        }

        self._value = value
        self._values = values
        self._sub_slots = sub_slots

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserTurnSlotOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserTurnSlotOutput of this UserTurnSlotOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this UserTurnSlotOutput.


        :return: The value of this UserTurnSlotOutput.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this UserTurnSlotOutput.


        :param value: The value of this UserTurnSlotOutput.
        :type value: str
        """

        self._value = value

    @property
    def values(self):
        """Gets the values of this UserTurnSlotOutput.


        :return: The values of this UserTurnSlotOutput.
        :rtype: List
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this UserTurnSlotOutput.


        :param values: The values of this UserTurnSlotOutput.
        :type values: List
        """

        self._values = values

    @property
    def sub_slots(self):
        """Gets the sub_slots of this UserTurnSlotOutput.


        :return: The sub_slots of this UserTurnSlotOutput.
        :rtype: Dict
        """
        return self._sub_slots

    @sub_slots.setter
    def sub_slots(self, sub_slots):
        """Sets the sub_slots of this UserTurnSlotOutput.


        :param sub_slots: The sub_slots of this UserTurnSlotOutput.
        :type sub_slots: Dict
        """

        self._sub_slots = sub_slots
