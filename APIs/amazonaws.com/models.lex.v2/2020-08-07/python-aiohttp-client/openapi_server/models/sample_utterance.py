# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SampleUtterance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, utterance: str=None):
        """SampleUtterance - a model defined in OpenAPI

        :param utterance: The utterance of this SampleUtterance.
        """
        self.openapi_types = {
            'utterance': str
        }

        self.attribute_map = {
            'utterance': 'utterance'
        }

        self._utterance = utterance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SampleUtterance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SampleUtterance of this SampleUtterance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def utterance(self):
        """Gets the utterance of this SampleUtterance.


        :return: The utterance of this SampleUtterance.
        :rtype: str
        """
        return self._utterance

    @utterance.setter
    def utterance(self, utterance):
        """Sets the utterance of this SampleUtterance.


        :param utterance: The utterance of this SampleUtterance.
        :type utterance: str
        """
        if utterance is None:
            raise ValueError("Invalid value for `utterance`, must not be `None`")

        self._utterance = utterance
