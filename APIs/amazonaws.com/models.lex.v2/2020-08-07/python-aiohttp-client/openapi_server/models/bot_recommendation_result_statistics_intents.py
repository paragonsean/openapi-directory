# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BotRecommendationResultStatisticsIntents(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, discovered_intent_count: int=None):
        """BotRecommendationResultStatisticsIntents - a model defined in OpenAPI

        :param discovered_intent_count: The discovered_intent_count of this BotRecommendationResultStatisticsIntents.
        """
        self.openapi_types = {
            'discovered_intent_count': int
        }

        self.attribute_map = {
            'discovered_intent_count': 'discoveredIntentCount'
        }

        self._discovered_intent_count = discovered_intent_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BotRecommendationResultStatisticsIntents':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BotRecommendationResultStatistics_intents of this BotRecommendationResultStatisticsIntents.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def discovered_intent_count(self):
        """Gets the discovered_intent_count of this BotRecommendationResultStatisticsIntents.


        :return: The discovered_intent_count of this BotRecommendationResultStatisticsIntents.
        :rtype: int
        """
        return self._discovered_intent_count

    @discovered_intent_count.setter
    def discovered_intent_count(self, discovered_intent_count):
        """Sets the discovered_intent_count of this BotRecommendationResultStatisticsIntents.


        :param discovered_intent_count: The discovered_intent_count of this BotRecommendationResultStatisticsIntents.
        :type discovered_intent_count: int
        """

        self._discovered_intent_count = discovered_intent_count
