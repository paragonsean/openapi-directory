# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListSlotsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bot_id: str=None, bot_version: str=None, locale_id: str=None, intent_id: str=None, slot_summaries: List=None, next_token: str=None):
        """ListSlotsResponse - a model defined in OpenAPI

        :param bot_id: The bot_id of this ListSlotsResponse.
        :param bot_version: The bot_version of this ListSlotsResponse.
        :param locale_id: The locale_id of this ListSlotsResponse.
        :param intent_id: The intent_id of this ListSlotsResponse.
        :param slot_summaries: The slot_summaries of this ListSlotsResponse.
        :param next_token: The next_token of this ListSlotsResponse.
        """
        self.openapi_types = {
            'bot_id': str,
            'bot_version': str,
            'locale_id': str,
            'intent_id': str,
            'slot_summaries': List,
            'next_token': str
        }

        self.attribute_map = {
            'bot_id': 'botId',
            'bot_version': 'botVersion',
            'locale_id': 'localeId',
            'intent_id': 'intentId',
            'slot_summaries': 'slotSummaries',
            'next_token': 'nextToken'
        }

        self._bot_id = bot_id
        self._bot_version = bot_version
        self._locale_id = locale_id
        self._intent_id = intent_id
        self._slot_summaries = slot_summaries
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSlotsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSlotsResponse of this ListSlotsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bot_id(self):
        """Gets the bot_id of this ListSlotsResponse.


        :return: The bot_id of this ListSlotsResponse.
        :rtype: str
        """
        return self._bot_id

    @bot_id.setter
    def bot_id(self, bot_id):
        """Sets the bot_id of this ListSlotsResponse.


        :param bot_id: The bot_id of this ListSlotsResponse.
        :type bot_id: str
        """

        self._bot_id = bot_id

    @property
    def bot_version(self):
        """Gets the bot_version of this ListSlotsResponse.


        :return: The bot_version of this ListSlotsResponse.
        :rtype: str
        """
        return self._bot_version

    @bot_version.setter
    def bot_version(self, bot_version):
        """Sets the bot_version of this ListSlotsResponse.


        :param bot_version: The bot_version of this ListSlotsResponse.
        :type bot_version: str
        """

        self._bot_version = bot_version

    @property
    def locale_id(self):
        """Gets the locale_id of this ListSlotsResponse.


        :return: The locale_id of this ListSlotsResponse.
        :rtype: str
        """
        return self._locale_id

    @locale_id.setter
    def locale_id(self, locale_id):
        """Sets the locale_id of this ListSlotsResponse.


        :param locale_id: The locale_id of this ListSlotsResponse.
        :type locale_id: str
        """

        self._locale_id = locale_id

    @property
    def intent_id(self):
        """Gets the intent_id of this ListSlotsResponse.


        :return: The intent_id of this ListSlotsResponse.
        :rtype: str
        """
        return self._intent_id

    @intent_id.setter
    def intent_id(self, intent_id):
        """Sets the intent_id of this ListSlotsResponse.


        :param intent_id: The intent_id of this ListSlotsResponse.
        :type intent_id: str
        """

        self._intent_id = intent_id

    @property
    def slot_summaries(self):
        """Gets the slot_summaries of this ListSlotsResponse.


        :return: The slot_summaries of this ListSlotsResponse.
        :rtype: List
        """
        return self._slot_summaries

    @slot_summaries.setter
    def slot_summaries(self, slot_summaries):
        """Sets the slot_summaries of this ListSlotsResponse.


        :param slot_summaries: The slot_summaries of this ListSlotsResponse.
        :type slot_summaries: List
        """

        self._slot_summaries = slot_summaries

    @property
    def next_token(self):
        """Gets the next_token of this ListSlotsResponse.


        :return: The next_token of this ListSlotsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListSlotsResponse.


        :param next_token: The next_token of this ListSlotsResponse.
        :type next_token: str
        """

        self._next_token = next_token
