# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MessageImageResponseCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title: str=None, subtitle: str=None, image_url: str=None, buttons: List=None):
        """MessageImageResponseCard - a model defined in OpenAPI

        :param title: The title of this MessageImageResponseCard.
        :param subtitle: The subtitle of this MessageImageResponseCard.
        :param image_url: The image_url of this MessageImageResponseCard.
        :param buttons: The buttons of this MessageImageResponseCard.
        """
        self.openapi_types = {
            'title': str,
            'subtitle': str,
            'image_url': str,
            'buttons': List
        }

        self.attribute_map = {
            'title': 'title',
            'subtitle': 'subtitle',
            'image_url': 'imageUrl',
            'buttons': 'buttons'
        }

        self._title = title
        self._subtitle = subtitle
        self._image_url = image_url
        self._buttons = buttons

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageImageResponseCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Message_imageResponseCard of this MessageImageResponseCard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self):
        """Gets the title of this MessageImageResponseCard.


        :return: The title of this MessageImageResponseCard.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this MessageImageResponseCard.


        :param title: The title of this MessageImageResponseCard.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title

    @property
    def subtitle(self):
        """Gets the subtitle of this MessageImageResponseCard.


        :return: The subtitle of this MessageImageResponseCard.
        :rtype: str
        """
        return self._subtitle

    @subtitle.setter
    def subtitle(self, subtitle):
        """Sets the subtitle of this MessageImageResponseCard.


        :param subtitle: The subtitle of this MessageImageResponseCard.
        :type subtitle: str
        """

        self._subtitle = subtitle

    @property
    def image_url(self):
        """Gets the image_url of this MessageImageResponseCard.


        :return: The image_url of this MessageImageResponseCard.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this MessageImageResponseCard.


        :param image_url: The image_url of this MessageImageResponseCard.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def buttons(self):
        """Gets the buttons of this MessageImageResponseCard.


        :return: The buttons of this MessageImageResponseCard.
        :rtype: List
        """
        return self._buttons

    @buttons.setter
    def buttons(self, buttons):
        """Sets the buttons of this MessageImageResponseCard.


        :param buttons: The buttons of this MessageImageResponseCard.
        :type buttons: List
        """

        self._buttons = buttons
