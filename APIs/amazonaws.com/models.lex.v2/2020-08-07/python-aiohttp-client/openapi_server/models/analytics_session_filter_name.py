# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnalyticsSessionFilterName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    BOTALIASID = 'BotAliasId'
    BOTVERSION = 'BotVersion'
    LOCALEID = 'LocaleId'
    MODALITY = 'Modality'
    CHANNEL = 'Channel'
    DURATION = 'Duration'
    CONVERSATIONENDSTATE = 'ConversationEndState'
    SESSIONID = 'SessionId'
    ORIGINATINGREQUESTID = 'OriginatingRequestId'
    INTENTPATH = 'IntentPath'

    def __init__(self):
        """AnalyticsSessionFilterName - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyticsSessionFilterName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyticsSessionFilterName of this AnalyticsSessionFilterName.
        """
        return util.deserialize_model(dikt, cls)
