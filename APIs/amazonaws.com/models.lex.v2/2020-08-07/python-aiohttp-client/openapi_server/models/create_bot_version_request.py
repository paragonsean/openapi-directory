# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bot_version_locale_details import BotVersionLocaleDetails
from openapi_server import util


class CreateBotVersionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, bot_version_locale_specification: Dict[str, BotVersionLocaleDetails]=None):
        """CreateBotVersionRequest - a model defined in OpenAPI

        :param description: The description of this CreateBotVersionRequest.
        :param bot_version_locale_specification: The bot_version_locale_specification of this CreateBotVersionRequest.
        """
        self.openapi_types = {
            'description': str,
            'bot_version_locale_specification': Dict[str, BotVersionLocaleDetails]
        }

        self.attribute_map = {
            'description': 'description',
            'bot_version_locale_specification': 'botVersionLocaleSpecification'
        }

        self._description = description
        self._bot_version_locale_specification = bot_version_locale_specification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBotVersionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateBotVersion_request of this CreateBotVersionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CreateBotVersionRequest.

        A description of the version. Use the description to help identify the version in lists.

        :return: The description of this CreateBotVersionRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateBotVersionRequest.

        A description of the version. Use the description to help identify the version in lists.

        :param description: The description of this CreateBotVersionRequest.
        :type description: str
        """
        if description is not None and len(description) > 200:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `200`")
        if description is not None and len(description) < 0:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")

        self._description = description

    @property
    def bot_version_locale_specification(self):
        """Gets the bot_version_locale_specification of this CreateBotVersionRequest.

        Specifies the locales that Amazon Lex adds to this version. You can choose the <code>Draft</code> version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.

        :return: The bot_version_locale_specification of this CreateBotVersionRequest.
        :rtype: Dict[str, BotVersionLocaleDetails]
        """
        return self._bot_version_locale_specification

    @bot_version_locale_specification.setter
    def bot_version_locale_specification(self, bot_version_locale_specification):
        """Sets the bot_version_locale_specification of this CreateBotVersionRequest.

        Specifies the locales that Amazon Lex adds to this version. You can choose the <code>Draft</code> version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.

        :param bot_version_locale_specification: The bot_version_locale_specification of this CreateBotVersionRequest.
        :type bot_version_locale_specification: Dict[str, BotVersionLocaleDetails]
        """
        if bot_version_locale_specification is None:
            raise ValueError("Invalid value for `bot_version_locale_specification`, must not be `None`")
        if bot_version_locale_specification is not None and len(bot_version_locale_specification) < 1:
            raise ValueError("Invalid value for `bot_version_locale_specification`, number of items must be greater than or equal to `1`")

        self._bot_version_locale_specification = bot_version_locale_specification
