# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateSlotResponseSubSlotSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expression: str=None, slot_specifications: Dict=None):
        """CreateSlotResponseSubSlotSetting - a model defined in OpenAPI

        :param expression: The expression of this CreateSlotResponseSubSlotSetting.
        :param slot_specifications: The slot_specifications of this CreateSlotResponseSubSlotSetting.
        """
        self.openapi_types = {
            'expression': str,
            'slot_specifications': Dict
        }

        self.attribute_map = {
            'expression': 'expression',
            'slot_specifications': 'slotSpecifications'
        }

        self._expression = expression
        self._slot_specifications = slot_specifications

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSlotResponseSubSlotSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSlotResponse_subSlotSetting of this CreateSlotResponseSubSlotSetting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expression(self):
        """Gets the expression of this CreateSlotResponseSubSlotSetting.


        :return: The expression of this CreateSlotResponseSubSlotSetting.
        :rtype: str
        """
        return self._expression

    @expression.setter
    def expression(self, expression):
        """Sets the expression of this CreateSlotResponseSubSlotSetting.


        :param expression: The expression of this CreateSlotResponseSubSlotSetting.
        :type expression: str
        """

        self._expression = expression

    @property
    def slot_specifications(self):
        """Gets the slot_specifications of this CreateSlotResponseSubSlotSetting.


        :return: The slot_specifications of this CreateSlotResponseSubSlotSetting.
        :rtype: Dict
        """
        return self._slot_specifications

    @slot_specifications.setter
    def slot_specifications(self, slot_specifications):
        """Sets the slot_specifications of this CreateSlotResponseSubSlotSetting.


        :param slot_specifications: The slot_specifications of this CreateSlotResponseSubSlotSetting.
        :type slot_specifications: Dict
        """

        self._slot_specifications = slot_specifications
