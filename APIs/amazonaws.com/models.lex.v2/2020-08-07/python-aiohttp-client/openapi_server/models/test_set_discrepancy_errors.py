# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestSetDiscrepancyErrors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, intent_discrepancies: List=None, slot_discrepancies: List=None):
        """TestSetDiscrepancyErrors - a model defined in OpenAPI

        :param intent_discrepancies: The intent_discrepancies of this TestSetDiscrepancyErrors.
        :param slot_discrepancies: The slot_discrepancies of this TestSetDiscrepancyErrors.
        """
        self.openapi_types = {
            'intent_discrepancies': List,
            'slot_discrepancies': List
        }

        self.attribute_map = {
            'intent_discrepancies': 'intentDiscrepancies',
            'slot_discrepancies': 'slotDiscrepancies'
        }

        self._intent_discrepancies = intent_discrepancies
        self._slot_discrepancies = slot_discrepancies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestSetDiscrepancyErrors':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestSetDiscrepancyErrors of this TestSetDiscrepancyErrors.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intent_discrepancies(self):
        """Gets the intent_discrepancies of this TestSetDiscrepancyErrors.


        :return: The intent_discrepancies of this TestSetDiscrepancyErrors.
        :rtype: List
        """
        return self._intent_discrepancies

    @intent_discrepancies.setter
    def intent_discrepancies(self, intent_discrepancies):
        """Sets the intent_discrepancies of this TestSetDiscrepancyErrors.


        :param intent_discrepancies: The intent_discrepancies of this TestSetDiscrepancyErrors.
        :type intent_discrepancies: List
        """
        if intent_discrepancies is None:
            raise ValueError("Invalid value for `intent_discrepancies`, must not be `None`")

        self._intent_discrepancies = intent_discrepancies

    @property
    def slot_discrepancies(self):
        """Gets the slot_discrepancies of this TestSetDiscrepancyErrors.


        :return: The slot_discrepancies of this TestSetDiscrepancyErrors.
        :rtype: List
        """
        return self._slot_discrepancies

    @slot_discrepancies.setter
    def slot_discrepancies(self, slot_discrepancies):
        """Sets the slot_discrepancies of this TestSetDiscrepancyErrors.


        :param slot_discrepancies: The slot_discrepancies of this TestSetDiscrepancyErrors.
        :type slot_discrepancies: List
        """
        if slot_discrepancies is None:
            raise ValueError("Invalid value for `slot_discrepancies`, must not be `None`")

        self._slot_discrepancies = slot_discrepancies
