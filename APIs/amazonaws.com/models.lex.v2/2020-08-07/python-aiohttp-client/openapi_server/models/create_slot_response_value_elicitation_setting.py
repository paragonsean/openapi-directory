# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_slot_request_value_elicitation_setting_default_value_specification import CreateSlotRequestValueElicitationSettingDefaultValueSpecification
from openapi_server.models.create_slot_request_value_elicitation_setting_prompt_specification import CreateSlotRequestValueElicitationSettingPromptSpecification
from openapi_server.models.create_slot_request_value_elicitation_setting_slot_capture_setting import CreateSlotRequestValueElicitationSettingSlotCaptureSetting
from openapi_server.models.slot_constraint import SlotConstraint
from openapi_server.models.wait_and_continue_specification import WaitAndContinueSpecification
from openapi_server import util


class CreateSlotResponseValueElicitationSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_value_specification: CreateSlotRequestValueElicitationSettingDefaultValueSpecification=None, slot_constraint: SlotConstraint=None, prompt_specification: CreateSlotRequestValueElicitationSettingPromptSpecification=None, sample_utterances: List=None, wait_and_continue_specification: WaitAndContinueSpecification=None, slot_capture_setting: CreateSlotRequestValueElicitationSettingSlotCaptureSetting=None):
        """CreateSlotResponseValueElicitationSetting - a model defined in OpenAPI

        :param default_value_specification: The default_value_specification of this CreateSlotResponseValueElicitationSetting.
        :param slot_constraint: The slot_constraint of this CreateSlotResponseValueElicitationSetting.
        :param prompt_specification: The prompt_specification of this CreateSlotResponseValueElicitationSetting.
        :param sample_utterances: The sample_utterances of this CreateSlotResponseValueElicitationSetting.
        :param wait_and_continue_specification: The wait_and_continue_specification of this CreateSlotResponseValueElicitationSetting.
        :param slot_capture_setting: The slot_capture_setting of this CreateSlotResponseValueElicitationSetting.
        """
        self.openapi_types = {
            'default_value_specification': CreateSlotRequestValueElicitationSettingDefaultValueSpecification,
            'slot_constraint': SlotConstraint,
            'prompt_specification': CreateSlotRequestValueElicitationSettingPromptSpecification,
            'sample_utterances': List,
            'wait_and_continue_specification': WaitAndContinueSpecification,
            'slot_capture_setting': CreateSlotRequestValueElicitationSettingSlotCaptureSetting
        }

        self.attribute_map = {
            'default_value_specification': 'defaultValueSpecification',
            'slot_constraint': 'slotConstraint',
            'prompt_specification': 'promptSpecification',
            'sample_utterances': 'sampleUtterances',
            'wait_and_continue_specification': 'waitAndContinueSpecification',
            'slot_capture_setting': 'slotCaptureSetting'
        }

        self._default_value_specification = default_value_specification
        self._slot_constraint = slot_constraint
        self._prompt_specification = prompt_specification
        self._sample_utterances = sample_utterances
        self._wait_and_continue_specification = wait_and_continue_specification
        self._slot_capture_setting = slot_capture_setting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSlotResponseValueElicitationSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSlotResponse_valueElicitationSetting of this CreateSlotResponseValueElicitationSetting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_value_specification(self):
        """Gets the default_value_specification of this CreateSlotResponseValueElicitationSetting.


        :return: The default_value_specification of this CreateSlotResponseValueElicitationSetting.
        :rtype: CreateSlotRequestValueElicitationSettingDefaultValueSpecification
        """
        return self._default_value_specification

    @default_value_specification.setter
    def default_value_specification(self, default_value_specification):
        """Sets the default_value_specification of this CreateSlotResponseValueElicitationSetting.


        :param default_value_specification: The default_value_specification of this CreateSlotResponseValueElicitationSetting.
        :type default_value_specification: CreateSlotRequestValueElicitationSettingDefaultValueSpecification
        """

        self._default_value_specification = default_value_specification

    @property
    def slot_constraint(self):
        """Gets the slot_constraint of this CreateSlotResponseValueElicitationSetting.


        :return: The slot_constraint of this CreateSlotResponseValueElicitationSetting.
        :rtype: SlotConstraint
        """
        return self._slot_constraint

    @slot_constraint.setter
    def slot_constraint(self, slot_constraint):
        """Sets the slot_constraint of this CreateSlotResponseValueElicitationSetting.


        :param slot_constraint: The slot_constraint of this CreateSlotResponseValueElicitationSetting.
        :type slot_constraint: SlotConstraint
        """
        if slot_constraint is None:
            raise ValueError("Invalid value for `slot_constraint`, must not be `None`")

        self._slot_constraint = slot_constraint

    @property
    def prompt_specification(self):
        """Gets the prompt_specification of this CreateSlotResponseValueElicitationSetting.


        :return: The prompt_specification of this CreateSlotResponseValueElicitationSetting.
        :rtype: CreateSlotRequestValueElicitationSettingPromptSpecification
        """
        return self._prompt_specification

    @prompt_specification.setter
    def prompt_specification(self, prompt_specification):
        """Sets the prompt_specification of this CreateSlotResponseValueElicitationSetting.


        :param prompt_specification: The prompt_specification of this CreateSlotResponseValueElicitationSetting.
        :type prompt_specification: CreateSlotRequestValueElicitationSettingPromptSpecification
        """

        self._prompt_specification = prompt_specification

    @property
    def sample_utterances(self):
        """Gets the sample_utterances of this CreateSlotResponseValueElicitationSetting.


        :return: The sample_utterances of this CreateSlotResponseValueElicitationSetting.
        :rtype: List
        """
        return self._sample_utterances

    @sample_utterances.setter
    def sample_utterances(self, sample_utterances):
        """Sets the sample_utterances of this CreateSlotResponseValueElicitationSetting.


        :param sample_utterances: The sample_utterances of this CreateSlotResponseValueElicitationSetting.
        :type sample_utterances: List
        """

        self._sample_utterances = sample_utterances

    @property
    def wait_and_continue_specification(self):
        """Gets the wait_and_continue_specification of this CreateSlotResponseValueElicitationSetting.


        :return: The wait_and_continue_specification of this CreateSlotResponseValueElicitationSetting.
        :rtype: WaitAndContinueSpecification
        """
        return self._wait_and_continue_specification

    @wait_and_continue_specification.setter
    def wait_and_continue_specification(self, wait_and_continue_specification):
        """Sets the wait_and_continue_specification of this CreateSlotResponseValueElicitationSetting.


        :param wait_and_continue_specification: The wait_and_continue_specification of this CreateSlotResponseValueElicitationSetting.
        :type wait_and_continue_specification: WaitAndContinueSpecification
        """

        self._wait_and_continue_specification = wait_and_continue_specification

    @property
    def slot_capture_setting(self):
        """Gets the slot_capture_setting of this CreateSlotResponseValueElicitationSetting.


        :return: The slot_capture_setting of this CreateSlotResponseValueElicitationSetting.
        :rtype: CreateSlotRequestValueElicitationSettingSlotCaptureSetting
        """
        return self._slot_capture_setting

    @slot_capture_setting.setter
    def slot_capture_setting(self, slot_capture_setting):
        """Sets the slot_capture_setting of this CreateSlotResponseValueElicitationSetting.


        :param slot_capture_setting: The slot_capture_setting of this CreateSlotResponseValueElicitationSetting.
        :type slot_capture_setting: CreateSlotRequestValueElicitationSettingSlotCaptureSetting
        """

        self._slot_capture_setting = slot_capture_setting
