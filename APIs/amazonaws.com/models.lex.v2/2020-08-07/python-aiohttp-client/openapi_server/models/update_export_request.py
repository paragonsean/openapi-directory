# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateExportRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_password: str=None):
        """UpdateExportRequest - a model defined in OpenAPI

        :param file_password: The file_password of this UpdateExportRequest.
        """
        self.openapi_types = {
            'file_password': str
        }

        self.attribute_map = {
            'file_password': 'filePassword'
        }

        self._file_password = file_password

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateExportRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateExport_request of this UpdateExportRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_password(self):
        """Gets the file_password of this UpdateExportRequest.

        The new password to use to encrypt the export zip archive.

        :return: The file_password of this UpdateExportRequest.
        :rtype: str
        """
        return self._file_password

    @file_password.setter
    def file_password(self, file_password):
        """Sets the file_password of this UpdateExportRequest.

        The new password to use to encrypt the export zip archive.

        :param file_password: The file_password of this UpdateExportRequest.
        :type file_password: str
        """
        if file_password is not None and len(file_password) > 1024:
            raise ValueError("Invalid value for `file_password`, length must be less than or equal to `1024`")
        if file_password is not None and len(file_password) < 1:
            raise ValueError("Invalid value for `file_password`, length must be greater than or equal to `1`")

        self._file_password = file_password
