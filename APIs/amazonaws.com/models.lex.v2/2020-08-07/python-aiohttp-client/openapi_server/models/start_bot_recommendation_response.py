# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bot_recommendation_status import BotRecommendationStatus
from openapi_server.models.describe_bot_recommendation_response_encryption_setting import DescribeBotRecommendationResponseEncryptionSetting
from openapi_server.models.describe_bot_recommendation_response_transcript_source_setting import DescribeBotRecommendationResponseTranscriptSourceSetting
from openapi_server import util


class StartBotRecommendationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bot_id: str=None, bot_version: str=None, locale_id: str=None, bot_recommendation_status: BotRecommendationStatus=None, bot_recommendation_id: str=None, creation_date_time: datetime=None, transcript_source_setting: DescribeBotRecommendationResponseTranscriptSourceSetting=None, encryption_setting: DescribeBotRecommendationResponseEncryptionSetting=None):
        """StartBotRecommendationResponse - a model defined in OpenAPI

        :param bot_id: The bot_id of this StartBotRecommendationResponse.
        :param bot_version: The bot_version of this StartBotRecommendationResponse.
        :param locale_id: The locale_id of this StartBotRecommendationResponse.
        :param bot_recommendation_status: The bot_recommendation_status of this StartBotRecommendationResponse.
        :param bot_recommendation_id: The bot_recommendation_id of this StartBotRecommendationResponse.
        :param creation_date_time: The creation_date_time of this StartBotRecommendationResponse.
        :param transcript_source_setting: The transcript_source_setting of this StartBotRecommendationResponse.
        :param encryption_setting: The encryption_setting of this StartBotRecommendationResponse.
        """
        self.openapi_types = {
            'bot_id': str,
            'bot_version': str,
            'locale_id': str,
            'bot_recommendation_status': BotRecommendationStatus,
            'bot_recommendation_id': str,
            'creation_date_time': datetime,
            'transcript_source_setting': DescribeBotRecommendationResponseTranscriptSourceSetting,
            'encryption_setting': DescribeBotRecommendationResponseEncryptionSetting
        }

        self.attribute_map = {
            'bot_id': 'botId',
            'bot_version': 'botVersion',
            'locale_id': 'localeId',
            'bot_recommendation_status': 'botRecommendationStatus',
            'bot_recommendation_id': 'botRecommendationId',
            'creation_date_time': 'creationDateTime',
            'transcript_source_setting': 'transcriptSourceSetting',
            'encryption_setting': 'encryptionSetting'
        }

        self._bot_id = bot_id
        self._bot_version = bot_version
        self._locale_id = locale_id
        self._bot_recommendation_status = bot_recommendation_status
        self._bot_recommendation_id = bot_recommendation_id
        self._creation_date_time = creation_date_time
        self._transcript_source_setting = transcript_source_setting
        self._encryption_setting = encryption_setting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartBotRecommendationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartBotRecommendationResponse of this StartBotRecommendationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bot_id(self):
        """Gets the bot_id of this StartBotRecommendationResponse.


        :return: The bot_id of this StartBotRecommendationResponse.
        :rtype: str
        """
        return self._bot_id

    @bot_id.setter
    def bot_id(self, bot_id):
        """Sets the bot_id of this StartBotRecommendationResponse.


        :param bot_id: The bot_id of this StartBotRecommendationResponse.
        :type bot_id: str
        """

        self._bot_id = bot_id

    @property
    def bot_version(self):
        """Gets the bot_version of this StartBotRecommendationResponse.


        :return: The bot_version of this StartBotRecommendationResponse.
        :rtype: str
        """
        return self._bot_version

    @bot_version.setter
    def bot_version(self, bot_version):
        """Sets the bot_version of this StartBotRecommendationResponse.


        :param bot_version: The bot_version of this StartBotRecommendationResponse.
        :type bot_version: str
        """

        self._bot_version = bot_version

    @property
    def locale_id(self):
        """Gets the locale_id of this StartBotRecommendationResponse.


        :return: The locale_id of this StartBotRecommendationResponse.
        :rtype: str
        """
        return self._locale_id

    @locale_id.setter
    def locale_id(self, locale_id):
        """Sets the locale_id of this StartBotRecommendationResponse.


        :param locale_id: The locale_id of this StartBotRecommendationResponse.
        :type locale_id: str
        """

        self._locale_id = locale_id

    @property
    def bot_recommendation_status(self):
        """Gets the bot_recommendation_status of this StartBotRecommendationResponse.


        :return: The bot_recommendation_status of this StartBotRecommendationResponse.
        :rtype: BotRecommendationStatus
        """
        return self._bot_recommendation_status

    @bot_recommendation_status.setter
    def bot_recommendation_status(self, bot_recommendation_status):
        """Sets the bot_recommendation_status of this StartBotRecommendationResponse.


        :param bot_recommendation_status: The bot_recommendation_status of this StartBotRecommendationResponse.
        :type bot_recommendation_status: BotRecommendationStatus
        """

        self._bot_recommendation_status = bot_recommendation_status

    @property
    def bot_recommendation_id(self):
        """Gets the bot_recommendation_id of this StartBotRecommendationResponse.


        :return: The bot_recommendation_id of this StartBotRecommendationResponse.
        :rtype: str
        """
        return self._bot_recommendation_id

    @bot_recommendation_id.setter
    def bot_recommendation_id(self, bot_recommendation_id):
        """Sets the bot_recommendation_id of this StartBotRecommendationResponse.


        :param bot_recommendation_id: The bot_recommendation_id of this StartBotRecommendationResponse.
        :type bot_recommendation_id: str
        """

        self._bot_recommendation_id = bot_recommendation_id

    @property
    def creation_date_time(self):
        """Gets the creation_date_time of this StartBotRecommendationResponse.


        :return: The creation_date_time of this StartBotRecommendationResponse.
        :rtype: datetime
        """
        return self._creation_date_time

    @creation_date_time.setter
    def creation_date_time(self, creation_date_time):
        """Sets the creation_date_time of this StartBotRecommendationResponse.


        :param creation_date_time: The creation_date_time of this StartBotRecommendationResponse.
        :type creation_date_time: datetime
        """

        self._creation_date_time = creation_date_time

    @property
    def transcript_source_setting(self):
        """Gets the transcript_source_setting of this StartBotRecommendationResponse.


        :return: The transcript_source_setting of this StartBotRecommendationResponse.
        :rtype: DescribeBotRecommendationResponseTranscriptSourceSetting
        """
        return self._transcript_source_setting

    @transcript_source_setting.setter
    def transcript_source_setting(self, transcript_source_setting):
        """Sets the transcript_source_setting of this StartBotRecommendationResponse.


        :param transcript_source_setting: The transcript_source_setting of this StartBotRecommendationResponse.
        :type transcript_source_setting: DescribeBotRecommendationResponseTranscriptSourceSetting
        """

        self._transcript_source_setting = transcript_source_setting

    @property
    def encryption_setting(self):
        """Gets the encryption_setting of this StartBotRecommendationResponse.


        :return: The encryption_setting of this StartBotRecommendationResponse.
        :rtype: DescribeBotRecommendationResponseEncryptionSetting
        """
        return self._encryption_setting

    @encryption_setting.setter
    def encryption_setting(self, encryption_setting):
        """Sets the encryption_setting of this StartBotRecommendationResponse.


        :param encryption_setting: The encryption_setting of this StartBotRecommendationResponse.
        :type encryption_setting: DescribeBotRecommendationResponseEncryptionSetting
        """

        self._encryption_setting = encryption_setting
