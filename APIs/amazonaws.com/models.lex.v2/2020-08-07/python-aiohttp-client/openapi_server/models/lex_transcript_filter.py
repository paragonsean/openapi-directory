# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lex_transcript_filter_date_range_filter import LexTranscriptFilterDateRangeFilter
from openapi_server import util


class LexTranscriptFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_range_filter: LexTranscriptFilterDateRangeFilter=None):
        """LexTranscriptFilter - a model defined in OpenAPI

        :param date_range_filter: The date_range_filter of this LexTranscriptFilter.
        """
        self.openapi_types = {
            'date_range_filter': LexTranscriptFilterDateRangeFilter
        }

        self.attribute_map = {
            'date_range_filter': 'dateRangeFilter'
        }

        self._date_range_filter = date_range_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LexTranscriptFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LexTranscriptFilter of this LexTranscriptFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_range_filter(self):
        """Gets the date_range_filter of this LexTranscriptFilter.


        :return: The date_range_filter of this LexTranscriptFilter.
        :rtype: LexTranscriptFilterDateRangeFilter
        """
        return self._date_range_filter

    @date_range_filter.setter
    def date_range_filter(self, date_range_filter):
        """Sets the date_range_filter of this LexTranscriptFilter.


        :param date_range_filter: The date_range_filter of this LexTranscriptFilter.
        :type date_range_filter: LexTranscriptFilterDateRangeFilter
        """

        self._date_range_filter = date_range_filter
