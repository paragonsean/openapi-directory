# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AudioAndDTMFInputSpecificationDtmfSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_length: int=None, end_timeout_ms: int=None, deletion_character: str=None, end_character: str=None):
        """AudioAndDTMFInputSpecificationDtmfSpecification - a model defined in OpenAPI

        :param max_length: The max_length of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :param end_timeout_ms: The end_timeout_ms of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :param deletion_character: The deletion_character of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :param end_character: The end_character of this AudioAndDTMFInputSpecificationDtmfSpecification.
        """
        self.openapi_types = {
            'max_length': int,
            'end_timeout_ms': int,
            'deletion_character': str,
            'end_character': str
        }

        self.attribute_map = {
            'max_length': 'maxLength',
            'end_timeout_ms': 'endTimeoutMs',
            'deletion_character': 'deletionCharacter',
            'end_character': 'endCharacter'
        }

        self._max_length = max_length
        self._end_timeout_ms = end_timeout_ms
        self._deletion_character = deletion_character
        self._end_character = end_character

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioAndDTMFInputSpecificationDtmfSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioAndDTMFInputSpecification_dtmfSpecification of this AudioAndDTMFInputSpecificationDtmfSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_length(self):
        """Gets the max_length of this AudioAndDTMFInputSpecificationDtmfSpecification.


        :return: The max_length of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :rtype: int
        """
        return self._max_length

    @max_length.setter
    def max_length(self, max_length):
        """Sets the max_length of this AudioAndDTMFInputSpecificationDtmfSpecification.


        :param max_length: The max_length of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :type max_length: int
        """
        if max_length is None:
            raise ValueError("Invalid value for `max_length`, must not be `None`")

        self._max_length = max_length

    @property
    def end_timeout_ms(self):
        """Gets the end_timeout_ms of this AudioAndDTMFInputSpecificationDtmfSpecification.


        :return: The end_timeout_ms of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :rtype: int
        """
        return self._end_timeout_ms

    @end_timeout_ms.setter
    def end_timeout_ms(self, end_timeout_ms):
        """Sets the end_timeout_ms of this AudioAndDTMFInputSpecificationDtmfSpecification.


        :param end_timeout_ms: The end_timeout_ms of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :type end_timeout_ms: int
        """
        if end_timeout_ms is None:
            raise ValueError("Invalid value for `end_timeout_ms`, must not be `None`")

        self._end_timeout_ms = end_timeout_ms

    @property
    def deletion_character(self):
        """Gets the deletion_character of this AudioAndDTMFInputSpecificationDtmfSpecification.


        :return: The deletion_character of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :rtype: str
        """
        return self._deletion_character

    @deletion_character.setter
    def deletion_character(self, deletion_character):
        """Sets the deletion_character of this AudioAndDTMFInputSpecificationDtmfSpecification.


        :param deletion_character: The deletion_character of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :type deletion_character: str
        """
        if deletion_character is None:
            raise ValueError("Invalid value for `deletion_character`, must not be `None`")

        self._deletion_character = deletion_character

    @property
    def end_character(self):
        """Gets the end_character of this AudioAndDTMFInputSpecificationDtmfSpecification.


        :return: The end_character of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :rtype: str
        """
        return self._end_character

    @end_character.setter
    def end_character(self, end_character):
        """Sets the end_character of this AudioAndDTMFInputSpecificationDtmfSpecification.


        :param end_character: The end_character of this AudioAndDTMFInputSpecificationDtmfSpecification.
        :type end_character: str
        """
        if end_character is None:
            raise ValueError("Invalid value for `end_character`, must not be `None`")

        self._end_character = end_character
