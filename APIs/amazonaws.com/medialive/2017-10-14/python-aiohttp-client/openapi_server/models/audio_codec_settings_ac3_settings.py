# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ac3_bitstream_mode import Ac3BitstreamMode
from openapi_server.models.ac3_coding_mode import Ac3CodingMode
from openapi_server.models.ac3_drc_profile import Ac3DrcProfile
from openapi_server.models.ac3_lfe_filter import Ac3LfeFilter
from openapi_server.models.ac3_metadata_control import Ac3MetadataControl
from openapi_server import util


class AudioCodecSettingsAc3Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bitrate: float=None, bitstream_mode: Ac3BitstreamMode=None, coding_mode: Ac3CodingMode=None, dialnorm: int=None, drc_profile: Ac3DrcProfile=None, lfe_filter: Ac3LfeFilter=None, metadata_control: Ac3MetadataControl=None):
        """AudioCodecSettingsAc3Settings - a model defined in OpenAPI

        :param bitrate: The bitrate of this AudioCodecSettingsAc3Settings.
        :param bitstream_mode: The bitstream_mode of this AudioCodecSettingsAc3Settings.
        :param coding_mode: The coding_mode of this AudioCodecSettingsAc3Settings.
        :param dialnorm: The dialnorm of this AudioCodecSettingsAc3Settings.
        :param drc_profile: The drc_profile of this AudioCodecSettingsAc3Settings.
        :param lfe_filter: The lfe_filter of this AudioCodecSettingsAc3Settings.
        :param metadata_control: The metadata_control of this AudioCodecSettingsAc3Settings.
        """
        self.openapi_types = {
            'bitrate': float,
            'bitstream_mode': Ac3BitstreamMode,
            'coding_mode': Ac3CodingMode,
            'dialnorm': int,
            'drc_profile': Ac3DrcProfile,
            'lfe_filter': Ac3LfeFilter,
            'metadata_control': Ac3MetadataControl
        }

        self.attribute_map = {
            'bitrate': 'Bitrate',
            'bitstream_mode': 'BitstreamMode',
            'coding_mode': 'CodingMode',
            'dialnorm': 'Dialnorm',
            'drc_profile': 'DrcProfile',
            'lfe_filter': 'LfeFilter',
            'metadata_control': 'MetadataControl'
        }

        self._bitrate = bitrate
        self._bitstream_mode = bitstream_mode
        self._coding_mode = coding_mode
        self._dialnorm = dialnorm
        self._drc_profile = drc_profile
        self._lfe_filter = lfe_filter
        self._metadata_control = metadata_control

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioCodecSettingsAc3Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioCodecSettings_Ac3Settings of this AudioCodecSettingsAc3Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bitrate(self):
        """Gets the bitrate of this AudioCodecSettingsAc3Settings.


        :return: The bitrate of this AudioCodecSettingsAc3Settings.
        :rtype: float
        """
        return self._bitrate

    @bitrate.setter
    def bitrate(self, bitrate):
        """Sets the bitrate of this AudioCodecSettingsAc3Settings.


        :param bitrate: The bitrate of this AudioCodecSettingsAc3Settings.
        :type bitrate: float
        """

        self._bitrate = bitrate

    @property
    def bitstream_mode(self):
        """Gets the bitstream_mode of this AudioCodecSettingsAc3Settings.


        :return: The bitstream_mode of this AudioCodecSettingsAc3Settings.
        :rtype: Ac3BitstreamMode
        """
        return self._bitstream_mode

    @bitstream_mode.setter
    def bitstream_mode(self, bitstream_mode):
        """Sets the bitstream_mode of this AudioCodecSettingsAc3Settings.


        :param bitstream_mode: The bitstream_mode of this AudioCodecSettingsAc3Settings.
        :type bitstream_mode: Ac3BitstreamMode
        """

        self._bitstream_mode = bitstream_mode

    @property
    def coding_mode(self):
        """Gets the coding_mode of this AudioCodecSettingsAc3Settings.


        :return: The coding_mode of this AudioCodecSettingsAc3Settings.
        :rtype: Ac3CodingMode
        """
        return self._coding_mode

    @coding_mode.setter
    def coding_mode(self, coding_mode):
        """Sets the coding_mode of this AudioCodecSettingsAc3Settings.


        :param coding_mode: The coding_mode of this AudioCodecSettingsAc3Settings.
        :type coding_mode: Ac3CodingMode
        """

        self._coding_mode = coding_mode

    @property
    def dialnorm(self):
        """Gets the dialnorm of this AudioCodecSettingsAc3Settings.


        :return: The dialnorm of this AudioCodecSettingsAc3Settings.
        :rtype: int
        """
        return self._dialnorm

    @dialnorm.setter
    def dialnorm(self, dialnorm):
        """Sets the dialnorm of this AudioCodecSettingsAc3Settings.


        :param dialnorm: The dialnorm of this AudioCodecSettingsAc3Settings.
        :type dialnorm: int
        """

        self._dialnorm = dialnorm

    @property
    def drc_profile(self):
        """Gets the drc_profile of this AudioCodecSettingsAc3Settings.


        :return: The drc_profile of this AudioCodecSettingsAc3Settings.
        :rtype: Ac3DrcProfile
        """
        return self._drc_profile

    @drc_profile.setter
    def drc_profile(self, drc_profile):
        """Sets the drc_profile of this AudioCodecSettingsAc3Settings.


        :param drc_profile: The drc_profile of this AudioCodecSettingsAc3Settings.
        :type drc_profile: Ac3DrcProfile
        """

        self._drc_profile = drc_profile

    @property
    def lfe_filter(self):
        """Gets the lfe_filter of this AudioCodecSettingsAc3Settings.


        :return: The lfe_filter of this AudioCodecSettingsAc3Settings.
        :rtype: Ac3LfeFilter
        """
        return self._lfe_filter

    @lfe_filter.setter
    def lfe_filter(self, lfe_filter):
        """Sets the lfe_filter of this AudioCodecSettingsAc3Settings.


        :param lfe_filter: The lfe_filter of this AudioCodecSettingsAc3Settings.
        :type lfe_filter: Ac3LfeFilter
        """

        self._lfe_filter = lfe_filter

    @property
    def metadata_control(self):
        """Gets the metadata_control of this AudioCodecSettingsAc3Settings.


        :return: The metadata_control of this AudioCodecSettingsAc3Settings.
        :rtype: Ac3MetadataControl
        """
        return self._metadata_control

    @metadata_control.setter
    def metadata_control(self, metadata_control):
        """Sets the metadata_control of this AudioCodecSettingsAc3Settings.


        :param metadata_control: The metadata_control of this AudioCodecSettingsAc3Settings.
        :type metadata_control: Ac3MetadataControl
        """

        self._metadata_control = metadata_control
