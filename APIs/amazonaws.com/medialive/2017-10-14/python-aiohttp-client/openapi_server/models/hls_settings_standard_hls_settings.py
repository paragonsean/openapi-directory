# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.standard_hls_settings_m3u8_settings import StandardHlsSettingsM3u8Settings
from openapi_server import util


class HlsSettingsStandardHlsSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_rendition_sets: str=None, m3u8_settings: StandardHlsSettingsM3u8Settings=None):
        """HlsSettingsStandardHlsSettings - a model defined in OpenAPI

        :param audio_rendition_sets: The audio_rendition_sets of this HlsSettingsStandardHlsSettings.
        :param m3u8_settings: The m3u8_settings of this HlsSettingsStandardHlsSettings.
        """
        self.openapi_types = {
            'audio_rendition_sets': str,
            'm3u8_settings': StandardHlsSettingsM3u8Settings
        }

        self.attribute_map = {
            'audio_rendition_sets': 'AudioRenditionSets',
            'm3u8_settings': 'M3u8Settings'
        }

        self._audio_rendition_sets = audio_rendition_sets
        self._m3u8_settings = m3u8_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HlsSettingsStandardHlsSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HlsSettings_StandardHlsSettings of this HlsSettingsStandardHlsSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_rendition_sets(self):
        """Gets the audio_rendition_sets of this HlsSettingsStandardHlsSettings.


        :return: The audio_rendition_sets of this HlsSettingsStandardHlsSettings.
        :rtype: str
        """
        return self._audio_rendition_sets

    @audio_rendition_sets.setter
    def audio_rendition_sets(self, audio_rendition_sets):
        """Sets the audio_rendition_sets of this HlsSettingsStandardHlsSettings.


        :param audio_rendition_sets: The audio_rendition_sets of this HlsSettingsStandardHlsSettings.
        :type audio_rendition_sets: str
        """

        self._audio_rendition_sets = audio_rendition_sets

    @property
    def m3u8_settings(self):
        """Gets the m3u8_settings of this HlsSettingsStandardHlsSettings.


        :return: The m3u8_settings of this HlsSettingsStandardHlsSettings.
        :rtype: StandardHlsSettingsM3u8Settings
        """
        return self._m3u8_settings

    @m3u8_settings.setter
    def m3u8_settings(self, m3u8_settings):
        """Sets the m3u8_settings of this HlsSettingsStandardHlsSettings.


        :param m3u8_settings: The m3u8_settings of this HlsSettingsStandardHlsSettings.
        :type m3u8_settings: StandardHlsSettingsM3u8Settings
        """
        if m3u8_settings is None:
            raise ValueError("Invalid value for `m3u8_settings`, must not be `None`")

        self._m3u8_settings = m3u8_settings
