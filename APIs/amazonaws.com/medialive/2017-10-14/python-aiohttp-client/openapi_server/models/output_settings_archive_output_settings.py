# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.archive_output_settings_container_settings import ArchiveOutputSettingsContainerSettings
from openapi_server import util


class OutputSettingsArchiveOutputSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_settings: ArchiveOutputSettingsContainerSettings=None, extension: str=None, name_modifier: str=None):
        """OutputSettingsArchiveOutputSettings - a model defined in OpenAPI

        :param container_settings: The container_settings of this OutputSettingsArchiveOutputSettings.
        :param extension: The extension of this OutputSettingsArchiveOutputSettings.
        :param name_modifier: The name_modifier of this OutputSettingsArchiveOutputSettings.
        """
        self.openapi_types = {
            'container_settings': ArchiveOutputSettingsContainerSettings,
            'extension': str,
            'name_modifier': str
        }

        self.attribute_map = {
            'container_settings': 'ContainerSettings',
            'extension': 'Extension',
            'name_modifier': 'NameModifier'
        }

        self._container_settings = container_settings
        self._extension = extension
        self._name_modifier = name_modifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutputSettingsArchiveOutputSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutputSettings_ArchiveOutputSettings of this OutputSettingsArchiveOutputSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_settings(self):
        """Gets the container_settings of this OutputSettingsArchiveOutputSettings.


        :return: The container_settings of this OutputSettingsArchiveOutputSettings.
        :rtype: ArchiveOutputSettingsContainerSettings
        """
        return self._container_settings

    @container_settings.setter
    def container_settings(self, container_settings):
        """Sets the container_settings of this OutputSettingsArchiveOutputSettings.


        :param container_settings: The container_settings of this OutputSettingsArchiveOutputSettings.
        :type container_settings: ArchiveOutputSettingsContainerSettings
        """
        if container_settings is None:
            raise ValueError("Invalid value for `container_settings`, must not be `None`")

        self._container_settings = container_settings

    @property
    def extension(self):
        """Gets the extension of this OutputSettingsArchiveOutputSettings.


        :return: The extension of this OutputSettingsArchiveOutputSettings.
        :rtype: str
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """Sets the extension of this OutputSettingsArchiveOutputSettings.


        :param extension: The extension of this OutputSettingsArchiveOutputSettings.
        :type extension: str
        """

        self._extension = extension

    @property
    def name_modifier(self):
        """Gets the name_modifier of this OutputSettingsArchiveOutputSettings.


        :return: The name_modifier of this OutputSettingsArchiveOutputSettings.
        :rtype: str
        """
        return self._name_modifier

    @name_modifier.setter
    def name_modifier(self, name_modifier):
        """Sets the name_modifier of this OutputSettingsArchiveOutputSettings.


        :param name_modifier: The name_modifier of this OutputSettingsArchiveOutputSettings.
        :type name_modifier: str
        """

        self._name_modifier = name_modifier
