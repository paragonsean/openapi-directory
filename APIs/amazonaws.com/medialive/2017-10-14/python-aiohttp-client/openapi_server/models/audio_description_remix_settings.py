# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AudioDescriptionRemixSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_mappings: List=None, channels_in: int=None, channels_out: int=None):
        """AudioDescriptionRemixSettings - a model defined in OpenAPI

        :param channel_mappings: The channel_mappings of this AudioDescriptionRemixSettings.
        :param channels_in: The channels_in of this AudioDescriptionRemixSettings.
        :param channels_out: The channels_out of this AudioDescriptionRemixSettings.
        """
        self.openapi_types = {
            'channel_mappings': List,
            'channels_in': int,
            'channels_out': int
        }

        self.attribute_map = {
            'channel_mappings': 'ChannelMappings',
            'channels_in': 'ChannelsIn',
            'channels_out': 'ChannelsOut'
        }

        self._channel_mappings = channel_mappings
        self._channels_in = channels_in
        self._channels_out = channels_out

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioDescriptionRemixSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioDescription_RemixSettings of this AudioDescriptionRemixSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_mappings(self):
        """Gets the channel_mappings of this AudioDescriptionRemixSettings.


        :return: The channel_mappings of this AudioDescriptionRemixSettings.
        :rtype: List
        """
        return self._channel_mappings

    @channel_mappings.setter
    def channel_mappings(self, channel_mappings):
        """Sets the channel_mappings of this AudioDescriptionRemixSettings.


        :param channel_mappings: The channel_mappings of this AudioDescriptionRemixSettings.
        :type channel_mappings: List
        """
        if channel_mappings is None:
            raise ValueError("Invalid value for `channel_mappings`, must not be `None`")

        self._channel_mappings = channel_mappings

    @property
    def channels_in(self):
        """Gets the channels_in of this AudioDescriptionRemixSettings.


        :return: The channels_in of this AudioDescriptionRemixSettings.
        :rtype: int
        """
        return self._channels_in

    @channels_in.setter
    def channels_in(self, channels_in):
        """Sets the channels_in of this AudioDescriptionRemixSettings.


        :param channels_in: The channels_in of this AudioDescriptionRemixSettings.
        :type channels_in: int
        """

        self._channels_in = channels_in

    @property
    def channels_out(self):
        """Gets the channels_out of this AudioDescriptionRemixSettings.


        :return: The channels_out of this AudioDescriptionRemixSettings.
        :rtype: int
        """
        return self._channels_out

    @channels_out.setter
    def channels_out(self, channels_out):
        """Sets the channels_out of this AudioDescriptionRemixSettings.


        :param channels_out: The channels_out of this AudioDescriptionRemixSettings.
        :type channels_out: int
        """

        self._channels_out = channels_out
