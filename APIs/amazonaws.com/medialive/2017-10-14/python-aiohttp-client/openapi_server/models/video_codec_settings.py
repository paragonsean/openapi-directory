# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.video_codec_settings_frame_capture_settings import VideoCodecSettingsFrameCaptureSettings
from openapi_server.models.video_codec_settings_h264_settings import VideoCodecSettingsH264Settings
from openapi_server.models.video_codec_settings_h265_settings import VideoCodecSettingsH265Settings
from openapi_server.models.video_codec_settings_mpeg2_settings import VideoCodecSettingsMpeg2Settings
from openapi_server import util


class VideoCodecSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frame_capture_settings: VideoCodecSettingsFrameCaptureSettings=None, h264_settings: VideoCodecSettingsH264Settings=None, h265_settings: VideoCodecSettingsH265Settings=None, mpeg2_settings: VideoCodecSettingsMpeg2Settings=None):
        """VideoCodecSettings - a model defined in OpenAPI

        :param frame_capture_settings: The frame_capture_settings of this VideoCodecSettings.
        :param h264_settings: The h264_settings of this VideoCodecSettings.
        :param h265_settings: The h265_settings of this VideoCodecSettings.
        :param mpeg2_settings: The mpeg2_settings of this VideoCodecSettings.
        """
        self.openapi_types = {
            'frame_capture_settings': VideoCodecSettingsFrameCaptureSettings,
            'h264_settings': VideoCodecSettingsH264Settings,
            'h265_settings': VideoCodecSettingsH265Settings,
            'mpeg2_settings': VideoCodecSettingsMpeg2Settings
        }

        self.attribute_map = {
            'frame_capture_settings': 'FrameCaptureSettings',
            'h264_settings': 'H264Settings',
            'h265_settings': 'H265Settings',
            'mpeg2_settings': 'Mpeg2Settings'
        }

        self._frame_capture_settings = frame_capture_settings
        self._h264_settings = h264_settings
        self._h265_settings = h265_settings
        self._mpeg2_settings = mpeg2_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoCodecSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoCodecSettings of this VideoCodecSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frame_capture_settings(self):
        """Gets the frame_capture_settings of this VideoCodecSettings.


        :return: The frame_capture_settings of this VideoCodecSettings.
        :rtype: VideoCodecSettingsFrameCaptureSettings
        """
        return self._frame_capture_settings

    @frame_capture_settings.setter
    def frame_capture_settings(self, frame_capture_settings):
        """Sets the frame_capture_settings of this VideoCodecSettings.


        :param frame_capture_settings: The frame_capture_settings of this VideoCodecSettings.
        :type frame_capture_settings: VideoCodecSettingsFrameCaptureSettings
        """

        self._frame_capture_settings = frame_capture_settings

    @property
    def h264_settings(self):
        """Gets the h264_settings of this VideoCodecSettings.


        :return: The h264_settings of this VideoCodecSettings.
        :rtype: VideoCodecSettingsH264Settings
        """
        return self._h264_settings

    @h264_settings.setter
    def h264_settings(self, h264_settings):
        """Sets the h264_settings of this VideoCodecSettings.


        :param h264_settings: The h264_settings of this VideoCodecSettings.
        :type h264_settings: VideoCodecSettingsH264Settings
        """

        self._h264_settings = h264_settings

    @property
    def h265_settings(self):
        """Gets the h265_settings of this VideoCodecSettings.


        :return: The h265_settings of this VideoCodecSettings.
        :rtype: VideoCodecSettingsH265Settings
        """
        return self._h265_settings

    @h265_settings.setter
    def h265_settings(self, h265_settings):
        """Sets the h265_settings of this VideoCodecSettings.


        :param h265_settings: The h265_settings of this VideoCodecSettings.
        :type h265_settings: VideoCodecSettingsH265Settings
        """

        self._h265_settings = h265_settings

    @property
    def mpeg2_settings(self):
        """Gets the mpeg2_settings of this VideoCodecSettings.


        :return: The mpeg2_settings of this VideoCodecSettings.
        :rtype: VideoCodecSettingsMpeg2Settings
        """
        return self._mpeg2_settings

    @mpeg2_settings.setter
    def mpeg2_settings(self, mpeg2_settings):
        """Sets the mpeg2_settings of this VideoCodecSettings.


        :param mpeg2_settings: The mpeg2_settings of this VideoCodecSettings.
        :type mpeg2_settings: VideoCodecSettingsMpeg2Settings
        """

        self._mpeg2_settings = mpeg2_settings
