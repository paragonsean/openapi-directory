# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_reservation_response_renewal_settings import DeleteReservationResponseRenewalSettings
from openapi_server.models.delete_reservation_response_resource_specification import DeleteReservationResponseResourceSpecification
from openapi_server.models.offering_duration_units import OfferingDurationUnits
from openapi_server.models.offering_type import OfferingType
from openapi_server.models.reservation_state import ReservationState
from openapi_server import util


class PurchaseOfferingResponseReservation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, count: int=None, currency_code: str=None, duration: int=None, duration_units: OfferingDurationUnits=None, end: str=None, fixed_price: float=None, name: str=None, offering_description: str=None, offering_id: str=None, offering_type: OfferingType=None, region: str=None, renewal_settings: DeleteReservationResponseRenewalSettings=None, reservation_id: str=None, resource_specification: DeleteReservationResponseResourceSpecification=None, start: str=None, state: ReservationState=None, tags: Dict=None, usage_price: float=None):
        """PurchaseOfferingResponseReservation - a model defined in OpenAPI

        :param arn: The arn of this PurchaseOfferingResponseReservation.
        :param count: The count of this PurchaseOfferingResponseReservation.
        :param currency_code: The currency_code of this PurchaseOfferingResponseReservation.
        :param duration: The duration of this PurchaseOfferingResponseReservation.
        :param duration_units: The duration_units of this PurchaseOfferingResponseReservation.
        :param end: The end of this PurchaseOfferingResponseReservation.
        :param fixed_price: The fixed_price of this PurchaseOfferingResponseReservation.
        :param name: The name of this PurchaseOfferingResponseReservation.
        :param offering_description: The offering_description of this PurchaseOfferingResponseReservation.
        :param offering_id: The offering_id of this PurchaseOfferingResponseReservation.
        :param offering_type: The offering_type of this PurchaseOfferingResponseReservation.
        :param region: The region of this PurchaseOfferingResponseReservation.
        :param renewal_settings: The renewal_settings of this PurchaseOfferingResponseReservation.
        :param reservation_id: The reservation_id of this PurchaseOfferingResponseReservation.
        :param resource_specification: The resource_specification of this PurchaseOfferingResponseReservation.
        :param start: The start of this PurchaseOfferingResponseReservation.
        :param state: The state of this PurchaseOfferingResponseReservation.
        :param tags: The tags of this PurchaseOfferingResponseReservation.
        :param usage_price: The usage_price of this PurchaseOfferingResponseReservation.
        """
        self.openapi_types = {
            'arn': str,
            'count': int,
            'currency_code': str,
            'duration': int,
            'duration_units': OfferingDurationUnits,
            'end': str,
            'fixed_price': float,
            'name': str,
            'offering_description': str,
            'offering_id': str,
            'offering_type': OfferingType,
            'region': str,
            'renewal_settings': DeleteReservationResponseRenewalSettings,
            'reservation_id': str,
            'resource_specification': DeleteReservationResponseResourceSpecification,
            'start': str,
            'state': ReservationState,
            'tags': Dict,
            'usage_price': float
        }

        self.attribute_map = {
            'arn': 'Arn',
            'count': 'Count',
            'currency_code': 'CurrencyCode',
            'duration': 'Duration',
            'duration_units': 'DurationUnits',
            'end': 'End',
            'fixed_price': 'FixedPrice',
            'name': 'Name',
            'offering_description': 'OfferingDescription',
            'offering_id': 'OfferingId',
            'offering_type': 'OfferingType',
            'region': 'Region',
            'renewal_settings': 'RenewalSettings',
            'reservation_id': 'ReservationId',
            'resource_specification': 'ResourceSpecification',
            'start': 'Start',
            'state': 'State',
            'tags': 'Tags',
            'usage_price': 'UsagePrice'
        }

        self._arn = arn
        self._count = count
        self._currency_code = currency_code
        self._duration = duration
        self._duration_units = duration_units
        self._end = end
        self._fixed_price = fixed_price
        self._name = name
        self._offering_description = offering_description
        self._offering_id = offering_id
        self._offering_type = offering_type
        self._region = region
        self._renewal_settings = renewal_settings
        self._reservation_id = reservation_id
        self._resource_specification = resource_specification
        self._start = start
        self._state = state
        self._tags = tags
        self._usage_price = usage_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseOfferingResponseReservation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseOfferingResponse_Reservation of this PurchaseOfferingResponseReservation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this PurchaseOfferingResponseReservation.


        :return: The arn of this PurchaseOfferingResponseReservation.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this PurchaseOfferingResponseReservation.


        :param arn: The arn of this PurchaseOfferingResponseReservation.
        :type arn: str
        """

        self._arn = arn

    @property
    def count(self):
        """Gets the count of this PurchaseOfferingResponseReservation.


        :return: The count of this PurchaseOfferingResponseReservation.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this PurchaseOfferingResponseReservation.


        :param count: The count of this PurchaseOfferingResponseReservation.
        :type count: int
        """

        self._count = count

    @property
    def currency_code(self):
        """Gets the currency_code of this PurchaseOfferingResponseReservation.


        :return: The currency_code of this PurchaseOfferingResponseReservation.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this PurchaseOfferingResponseReservation.


        :param currency_code: The currency_code of this PurchaseOfferingResponseReservation.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def duration(self):
        """Gets the duration of this PurchaseOfferingResponseReservation.


        :return: The duration of this PurchaseOfferingResponseReservation.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this PurchaseOfferingResponseReservation.


        :param duration: The duration of this PurchaseOfferingResponseReservation.
        :type duration: int
        """

        self._duration = duration

    @property
    def duration_units(self):
        """Gets the duration_units of this PurchaseOfferingResponseReservation.


        :return: The duration_units of this PurchaseOfferingResponseReservation.
        :rtype: OfferingDurationUnits
        """
        return self._duration_units

    @duration_units.setter
    def duration_units(self, duration_units):
        """Sets the duration_units of this PurchaseOfferingResponseReservation.


        :param duration_units: The duration_units of this PurchaseOfferingResponseReservation.
        :type duration_units: OfferingDurationUnits
        """

        self._duration_units = duration_units

    @property
    def end(self):
        """Gets the end of this PurchaseOfferingResponseReservation.


        :return: The end of this PurchaseOfferingResponseReservation.
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this PurchaseOfferingResponseReservation.


        :param end: The end of this PurchaseOfferingResponseReservation.
        :type end: str
        """

        self._end = end

    @property
    def fixed_price(self):
        """Gets the fixed_price of this PurchaseOfferingResponseReservation.


        :return: The fixed_price of this PurchaseOfferingResponseReservation.
        :rtype: float
        """
        return self._fixed_price

    @fixed_price.setter
    def fixed_price(self, fixed_price):
        """Sets the fixed_price of this PurchaseOfferingResponseReservation.


        :param fixed_price: The fixed_price of this PurchaseOfferingResponseReservation.
        :type fixed_price: float
        """

        self._fixed_price = fixed_price

    @property
    def name(self):
        """Gets the name of this PurchaseOfferingResponseReservation.


        :return: The name of this PurchaseOfferingResponseReservation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PurchaseOfferingResponseReservation.


        :param name: The name of this PurchaseOfferingResponseReservation.
        :type name: str
        """

        self._name = name

    @property
    def offering_description(self):
        """Gets the offering_description of this PurchaseOfferingResponseReservation.


        :return: The offering_description of this PurchaseOfferingResponseReservation.
        :rtype: str
        """
        return self._offering_description

    @offering_description.setter
    def offering_description(self, offering_description):
        """Sets the offering_description of this PurchaseOfferingResponseReservation.


        :param offering_description: The offering_description of this PurchaseOfferingResponseReservation.
        :type offering_description: str
        """

        self._offering_description = offering_description

    @property
    def offering_id(self):
        """Gets the offering_id of this PurchaseOfferingResponseReservation.


        :return: The offering_id of this PurchaseOfferingResponseReservation.
        :rtype: str
        """
        return self._offering_id

    @offering_id.setter
    def offering_id(self, offering_id):
        """Sets the offering_id of this PurchaseOfferingResponseReservation.


        :param offering_id: The offering_id of this PurchaseOfferingResponseReservation.
        :type offering_id: str
        """

        self._offering_id = offering_id

    @property
    def offering_type(self):
        """Gets the offering_type of this PurchaseOfferingResponseReservation.


        :return: The offering_type of this PurchaseOfferingResponseReservation.
        :rtype: OfferingType
        """
        return self._offering_type

    @offering_type.setter
    def offering_type(self, offering_type):
        """Sets the offering_type of this PurchaseOfferingResponseReservation.


        :param offering_type: The offering_type of this PurchaseOfferingResponseReservation.
        :type offering_type: OfferingType
        """

        self._offering_type = offering_type

    @property
    def region(self):
        """Gets the region of this PurchaseOfferingResponseReservation.


        :return: The region of this PurchaseOfferingResponseReservation.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this PurchaseOfferingResponseReservation.


        :param region: The region of this PurchaseOfferingResponseReservation.
        :type region: str
        """

        self._region = region

    @property
    def renewal_settings(self):
        """Gets the renewal_settings of this PurchaseOfferingResponseReservation.


        :return: The renewal_settings of this PurchaseOfferingResponseReservation.
        :rtype: DeleteReservationResponseRenewalSettings
        """
        return self._renewal_settings

    @renewal_settings.setter
    def renewal_settings(self, renewal_settings):
        """Sets the renewal_settings of this PurchaseOfferingResponseReservation.


        :param renewal_settings: The renewal_settings of this PurchaseOfferingResponseReservation.
        :type renewal_settings: DeleteReservationResponseRenewalSettings
        """

        self._renewal_settings = renewal_settings

    @property
    def reservation_id(self):
        """Gets the reservation_id of this PurchaseOfferingResponseReservation.


        :return: The reservation_id of this PurchaseOfferingResponseReservation.
        :rtype: str
        """
        return self._reservation_id

    @reservation_id.setter
    def reservation_id(self, reservation_id):
        """Sets the reservation_id of this PurchaseOfferingResponseReservation.


        :param reservation_id: The reservation_id of this PurchaseOfferingResponseReservation.
        :type reservation_id: str
        """

        self._reservation_id = reservation_id

    @property
    def resource_specification(self):
        """Gets the resource_specification of this PurchaseOfferingResponseReservation.


        :return: The resource_specification of this PurchaseOfferingResponseReservation.
        :rtype: DeleteReservationResponseResourceSpecification
        """
        return self._resource_specification

    @resource_specification.setter
    def resource_specification(self, resource_specification):
        """Sets the resource_specification of this PurchaseOfferingResponseReservation.


        :param resource_specification: The resource_specification of this PurchaseOfferingResponseReservation.
        :type resource_specification: DeleteReservationResponseResourceSpecification
        """

        self._resource_specification = resource_specification

    @property
    def start(self):
        """Gets the start of this PurchaseOfferingResponseReservation.


        :return: The start of this PurchaseOfferingResponseReservation.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this PurchaseOfferingResponseReservation.


        :param start: The start of this PurchaseOfferingResponseReservation.
        :type start: str
        """

        self._start = start

    @property
    def state(self):
        """Gets the state of this PurchaseOfferingResponseReservation.


        :return: The state of this PurchaseOfferingResponseReservation.
        :rtype: ReservationState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this PurchaseOfferingResponseReservation.


        :param state: The state of this PurchaseOfferingResponseReservation.
        :type state: ReservationState
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this PurchaseOfferingResponseReservation.


        :return: The tags of this PurchaseOfferingResponseReservation.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this PurchaseOfferingResponseReservation.


        :param tags: The tags of this PurchaseOfferingResponseReservation.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def usage_price(self):
        """Gets the usage_price of this PurchaseOfferingResponseReservation.


        :return: The usage_price of this PurchaseOfferingResponseReservation.
        :rtype: float
        """
        return self._usage_price

    @usage_price.setter
    def usage_price(self, usage_price):
        """Sets the usage_price of this PurchaseOfferingResponseReservation.


        :param usage_price: The usage_price of this PurchaseOfferingResponseReservation.
        :type usage_price: float
        """

        self._usage_price = usage_price
