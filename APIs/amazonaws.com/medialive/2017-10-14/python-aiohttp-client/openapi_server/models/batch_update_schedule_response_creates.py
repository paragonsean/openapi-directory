# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchUpdateScheduleResponseCreates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule_actions: List=None):
        """BatchUpdateScheduleResponseCreates - a model defined in OpenAPI

        :param schedule_actions: The schedule_actions of this BatchUpdateScheduleResponseCreates.
        """
        self.openapi_types = {
            'schedule_actions': List
        }

        self.attribute_map = {
            'schedule_actions': 'ScheduleActions'
        }

        self._schedule_actions = schedule_actions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchUpdateScheduleResponseCreates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchUpdateScheduleResponse_Creates of this BatchUpdateScheduleResponseCreates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule_actions(self):
        """Gets the schedule_actions of this BatchUpdateScheduleResponseCreates.


        :return: The schedule_actions of this BatchUpdateScheduleResponseCreates.
        :rtype: List
        """
        return self._schedule_actions

    @schedule_actions.setter
    def schedule_actions(self, schedule_actions):
        """Sets the schedule_actions of this BatchUpdateScheduleResponseCreates.


        :param schedule_actions: The schedule_actions of this BatchUpdateScheduleResponseCreates.
        :type schedule_actions: List
        """
        if schedule_actions is None:
            raise ValueError("Invalid value for `schedule_actions`, must not be `None`")

        self._schedule_actions = schedule_actions
