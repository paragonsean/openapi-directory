# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_destination_vpc import InputDestinationVpc
from openapi_server import util


class InputDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip: str=None, port: str=None, url: str=None, vpc: InputDestinationVpc=None):
        """InputDestination - a model defined in OpenAPI

        :param ip: The ip of this InputDestination.
        :param port: The port of this InputDestination.
        :param url: The url of this InputDestination.
        :param vpc: The vpc of this InputDestination.
        """
        self.openapi_types = {
            'ip': str,
            'port': str,
            'url': str,
            'vpc': InputDestinationVpc
        }

        self.attribute_map = {
            'ip': 'Ip',
            'port': 'Port',
            'url': 'Url',
            'vpc': 'Vpc'
        }

        self._ip = ip
        self._port = port
        self._url = url
        self._vpc = vpc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputDestination of this InputDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip(self):
        """Gets the ip of this InputDestination.


        :return: The ip of this InputDestination.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this InputDestination.


        :param ip: The ip of this InputDestination.
        :type ip: str
        """

        self._ip = ip

    @property
    def port(self):
        """Gets the port of this InputDestination.


        :return: The port of this InputDestination.
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this InputDestination.


        :param port: The port of this InputDestination.
        :type port: str
        """

        self._port = port

    @property
    def url(self):
        """Gets the url of this InputDestination.


        :return: The url of this InputDestination.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InputDestination.


        :param url: The url of this InputDestination.
        :type url: str
        """

        self._url = url

    @property
    def vpc(self):
        """Gets the vpc of this InputDestination.


        :return: The vpc of this InputDestination.
        :rtype: InputDestinationVpc
        """
        return self._vpc

    @vpc.setter
    def vpc(self, vpc):
        """Sets the vpc of this InputDestination.


        :param vpc: The vpc of this InputDestination.
        :type vpc: InputDestinationVpc
        """

        self._vpc = vpc
