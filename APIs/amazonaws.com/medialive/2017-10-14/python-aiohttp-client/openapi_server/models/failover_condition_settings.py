# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.failover_condition_settings_audio_silence_settings import FailoverConditionSettingsAudioSilenceSettings
from openapi_server.models.failover_condition_settings_input_loss_settings import FailoverConditionSettingsInputLossSettings
from openapi_server.models.failover_condition_settings_video_black_settings import FailoverConditionSettingsVideoBlackSettings
from openapi_server import util


class FailoverConditionSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_silence_settings: FailoverConditionSettingsAudioSilenceSettings=None, input_loss_settings: FailoverConditionSettingsInputLossSettings=None, video_black_settings: FailoverConditionSettingsVideoBlackSettings=None):
        """FailoverConditionSettings - a model defined in OpenAPI

        :param audio_silence_settings: The audio_silence_settings of this FailoverConditionSettings.
        :param input_loss_settings: The input_loss_settings of this FailoverConditionSettings.
        :param video_black_settings: The video_black_settings of this FailoverConditionSettings.
        """
        self.openapi_types = {
            'audio_silence_settings': FailoverConditionSettingsAudioSilenceSettings,
            'input_loss_settings': FailoverConditionSettingsInputLossSettings,
            'video_black_settings': FailoverConditionSettingsVideoBlackSettings
        }

        self.attribute_map = {
            'audio_silence_settings': 'AudioSilenceSettings',
            'input_loss_settings': 'InputLossSettings',
            'video_black_settings': 'VideoBlackSettings'
        }

        self._audio_silence_settings = audio_silence_settings
        self._input_loss_settings = input_loss_settings
        self._video_black_settings = video_black_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverConditionSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverConditionSettings of this FailoverConditionSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_silence_settings(self):
        """Gets the audio_silence_settings of this FailoverConditionSettings.


        :return: The audio_silence_settings of this FailoverConditionSettings.
        :rtype: FailoverConditionSettingsAudioSilenceSettings
        """
        return self._audio_silence_settings

    @audio_silence_settings.setter
    def audio_silence_settings(self, audio_silence_settings):
        """Sets the audio_silence_settings of this FailoverConditionSettings.


        :param audio_silence_settings: The audio_silence_settings of this FailoverConditionSettings.
        :type audio_silence_settings: FailoverConditionSettingsAudioSilenceSettings
        """

        self._audio_silence_settings = audio_silence_settings

    @property
    def input_loss_settings(self):
        """Gets the input_loss_settings of this FailoverConditionSettings.


        :return: The input_loss_settings of this FailoverConditionSettings.
        :rtype: FailoverConditionSettingsInputLossSettings
        """
        return self._input_loss_settings

    @input_loss_settings.setter
    def input_loss_settings(self, input_loss_settings):
        """Sets the input_loss_settings of this FailoverConditionSettings.


        :param input_loss_settings: The input_loss_settings of this FailoverConditionSettings.
        :type input_loss_settings: FailoverConditionSettingsInputLossSettings
        """

        self._input_loss_settings = input_loss_settings

    @property
    def video_black_settings(self):
        """Gets the video_black_settings of this FailoverConditionSettings.


        :return: The video_black_settings of this FailoverConditionSettings.
        :rtype: FailoverConditionSettingsVideoBlackSettings
        """
        return self._video_black_settings

    @video_black_settings.setter
    def video_black_settings(self, video_black_settings):
        """Sets the video_black_settings of this FailoverConditionSettings.


        :param video_black_settings: The video_black_settings of this FailoverConditionSettings.
        :type video_black_settings: FailoverConditionSettingsVideoBlackSettings
        """

        self._video_black_settings = video_black_settings
