# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.archive_group_settings_archive_cdn_settings import ArchiveGroupSettingsArchiveCdnSettings
from openapi_server.models.archive_group_settings_destination import ArchiveGroupSettingsDestination
from openapi_server import util


class ArchiveGroupSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archive_cdn_settings: ArchiveGroupSettingsArchiveCdnSettings=None, destination: ArchiveGroupSettingsDestination=None, rollover_interval: int=None):
        """ArchiveGroupSettings - a model defined in OpenAPI

        :param archive_cdn_settings: The archive_cdn_settings of this ArchiveGroupSettings.
        :param destination: The destination of this ArchiveGroupSettings.
        :param rollover_interval: The rollover_interval of this ArchiveGroupSettings.
        """
        self.openapi_types = {
            'archive_cdn_settings': ArchiveGroupSettingsArchiveCdnSettings,
            'destination': ArchiveGroupSettingsDestination,
            'rollover_interval': int
        }

        self.attribute_map = {
            'archive_cdn_settings': 'ArchiveCdnSettings',
            'destination': 'Destination',
            'rollover_interval': 'RolloverInterval'
        }

        self._archive_cdn_settings = archive_cdn_settings
        self._destination = destination
        self._rollover_interval = rollover_interval

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArchiveGroupSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArchiveGroupSettings of this ArchiveGroupSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archive_cdn_settings(self):
        """Gets the archive_cdn_settings of this ArchiveGroupSettings.


        :return: The archive_cdn_settings of this ArchiveGroupSettings.
        :rtype: ArchiveGroupSettingsArchiveCdnSettings
        """
        return self._archive_cdn_settings

    @archive_cdn_settings.setter
    def archive_cdn_settings(self, archive_cdn_settings):
        """Sets the archive_cdn_settings of this ArchiveGroupSettings.


        :param archive_cdn_settings: The archive_cdn_settings of this ArchiveGroupSettings.
        :type archive_cdn_settings: ArchiveGroupSettingsArchiveCdnSettings
        """

        self._archive_cdn_settings = archive_cdn_settings

    @property
    def destination(self):
        """Gets the destination of this ArchiveGroupSettings.


        :return: The destination of this ArchiveGroupSettings.
        :rtype: ArchiveGroupSettingsDestination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this ArchiveGroupSettings.


        :param destination: The destination of this ArchiveGroupSettings.
        :type destination: ArchiveGroupSettingsDestination
        """
        if destination is None:
            raise ValueError("Invalid value for `destination`, must not be `None`")

        self._destination = destination

    @property
    def rollover_interval(self):
        """Gets the rollover_interval of this ArchiveGroupSettings.


        :return: The rollover_interval of this ArchiveGroupSettings.
        :rtype: int
        """
        return self._rollover_interval

    @rollover_interval.setter
    def rollover_interval(self, rollover_interval):
        """Sets the rollover_interval of this ArchiveGroupSettings.


        :param rollover_interval: The rollover_interval of this ArchiveGroupSettings.
        :type rollover_interval: int
        """

        self._rollover_interval = rollover_interval
