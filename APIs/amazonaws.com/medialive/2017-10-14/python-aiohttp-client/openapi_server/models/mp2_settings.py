# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mp2_coding_mode import Mp2CodingMode
from openapi_server import util


class Mp2Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bitrate: float=None, coding_mode: Mp2CodingMode=None, sample_rate: float=None):
        """Mp2Settings - a model defined in OpenAPI

        :param bitrate: The bitrate of this Mp2Settings.
        :param coding_mode: The coding_mode of this Mp2Settings.
        :param sample_rate: The sample_rate of this Mp2Settings.
        """
        self.openapi_types = {
            'bitrate': float,
            'coding_mode': Mp2CodingMode,
            'sample_rate': float
        }

        self.attribute_map = {
            'bitrate': 'Bitrate',
            'coding_mode': 'CodingMode',
            'sample_rate': 'SampleRate'
        }

        self._bitrate = bitrate
        self._coding_mode = coding_mode
        self._sample_rate = sample_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Mp2Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Mp2Settings of this Mp2Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bitrate(self):
        """Gets the bitrate of this Mp2Settings.


        :return: The bitrate of this Mp2Settings.
        :rtype: float
        """
        return self._bitrate

    @bitrate.setter
    def bitrate(self, bitrate):
        """Sets the bitrate of this Mp2Settings.


        :param bitrate: The bitrate of this Mp2Settings.
        :type bitrate: float
        """

        self._bitrate = bitrate

    @property
    def coding_mode(self):
        """Gets the coding_mode of this Mp2Settings.


        :return: The coding_mode of this Mp2Settings.
        :rtype: Mp2CodingMode
        """
        return self._coding_mode

    @coding_mode.setter
    def coding_mode(self, coding_mode):
        """Sets the coding_mode of this Mp2Settings.


        :param coding_mode: The coding_mode of this Mp2Settings.
        :type coding_mode: Mp2CodingMode
        """

        self._coding_mode = coding_mode

    @property
    def sample_rate(self):
        """Gets the sample_rate of this Mp2Settings.


        :return: The sample_rate of this Mp2Settings.
        :rtype: float
        """
        return self._sample_rate

    @sample_rate.setter
    def sample_rate(self, sample_rate):
        """Sets the sample_rate of this Mp2Settings.


        :param sample_rate: The sample_rate of this Mp2Settings.
        :type sample_rate: float
        """

        self._sample_rate = sample_rate
