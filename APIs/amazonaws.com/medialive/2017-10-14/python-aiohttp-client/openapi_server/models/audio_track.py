# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AudioTrack(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, track: int=None):
        """AudioTrack - a model defined in OpenAPI

        :param track: The track of this AudioTrack.
        """
        self.openapi_types = {
            'track': int
        }

        self.attribute_map = {
            'track': 'Track'
        }

        self._track = track

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioTrack':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioTrack of this AudioTrack.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def track(self):
        """Gets the track of this AudioTrack.


        :return: The track of this AudioTrack.
        :rtype: int
        """
        return self._track

    @track.setter
    def track(self, track):
        """Sets the track of this AudioTrack.


        :param track: The track of this AudioTrack.
        :type track: int
        """
        if track is None:
            raise ValueError("Invalid value for `track`, must not be `None`")

        self._track = track
