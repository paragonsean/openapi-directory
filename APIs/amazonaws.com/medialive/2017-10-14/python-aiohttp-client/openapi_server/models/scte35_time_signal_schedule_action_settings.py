# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Scte35TimeSignalScheduleActionSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scte35_descriptors: List=None):
        """Scte35TimeSignalScheduleActionSettings - a model defined in OpenAPI

        :param scte35_descriptors: The scte35_descriptors of this Scte35TimeSignalScheduleActionSettings.
        """
        self.openapi_types = {
            'scte35_descriptors': List
        }

        self.attribute_map = {
            'scte35_descriptors': 'Scte35Descriptors'
        }

        self._scte35_descriptors = scte35_descriptors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Scte35TimeSignalScheduleActionSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Scte35TimeSignalScheduleActionSettings of this Scte35TimeSignalScheduleActionSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scte35_descriptors(self):
        """Gets the scte35_descriptors of this Scte35TimeSignalScheduleActionSettings.


        :return: The scte35_descriptors of this Scte35TimeSignalScheduleActionSettings.
        :rtype: List
        """
        return self._scte35_descriptors

    @scte35_descriptors.setter
    def scte35_descriptors(self, scte35_descriptors):
        """Sets the scte35_descriptors of this Scte35TimeSignalScheduleActionSettings.


        :param scte35_descriptors: The scte35_descriptors of this Scte35TimeSignalScheduleActionSettings.
        :type scte35_descriptors: List
        """
        if scte35_descriptors is None:
            raise ValueError("Invalid value for `scte35_descriptors`, must not be `None`")

        self._scte35_descriptors = scte35_descriptors
