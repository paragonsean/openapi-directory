# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_loss_action_for_ms_smooth_out import InputLossActionForMsSmoothOut
from openapi_server.models.ms_smooth_group_settings_destination import MsSmoothGroupSettingsDestination
from openapi_server.models.smooth_group_audio_only_timecode_control import SmoothGroupAudioOnlyTimecodeControl
from openapi_server.models.smooth_group_certificate_mode import SmoothGroupCertificateMode
from openapi_server.models.smooth_group_event_id_mode import SmoothGroupEventIdMode
from openapi_server.models.smooth_group_event_stop_behavior import SmoothGroupEventStopBehavior
from openapi_server.models.smooth_group_segmentation_mode import SmoothGroupSegmentationMode
from openapi_server.models.smooth_group_sparse_track_type import SmoothGroupSparseTrackType
from openapi_server.models.smooth_group_stream_manifest_behavior import SmoothGroupStreamManifestBehavior
from openapi_server.models.smooth_group_timestamp_offset_mode import SmoothGroupTimestampOffsetMode
from openapi_server import util


class OutputGroupSettingsMsSmoothGroupSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acquisition_point_id: str=None, audio_only_timecode_control: SmoothGroupAudioOnlyTimecodeControl=None, certificate_mode: SmoothGroupCertificateMode=None, connection_retry_interval: int=None, destination: MsSmoothGroupSettingsDestination=None, event_id: str=None, event_id_mode: SmoothGroupEventIdMode=None, event_stop_behavior: SmoothGroupEventStopBehavior=None, filecache_duration: int=None, fragment_length: int=None, input_loss_action: InputLossActionForMsSmoothOut=None, num_retries: int=None, restart_delay: int=None, segmentation_mode: SmoothGroupSegmentationMode=None, send_delay_ms: int=None, sparse_track_type: SmoothGroupSparseTrackType=None, stream_manifest_behavior: SmoothGroupStreamManifestBehavior=None, timestamp_offset: str=None, timestamp_offset_mode: SmoothGroupTimestampOffsetMode=None):
        """OutputGroupSettingsMsSmoothGroupSettings - a model defined in OpenAPI

        :param acquisition_point_id: The acquisition_point_id of this OutputGroupSettingsMsSmoothGroupSettings.
        :param audio_only_timecode_control: The audio_only_timecode_control of this OutputGroupSettingsMsSmoothGroupSettings.
        :param certificate_mode: The certificate_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :param connection_retry_interval: The connection_retry_interval of this OutputGroupSettingsMsSmoothGroupSettings.
        :param destination: The destination of this OutputGroupSettingsMsSmoothGroupSettings.
        :param event_id: The event_id of this OutputGroupSettingsMsSmoothGroupSettings.
        :param event_id_mode: The event_id_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :param event_stop_behavior: The event_stop_behavior of this OutputGroupSettingsMsSmoothGroupSettings.
        :param filecache_duration: The filecache_duration of this OutputGroupSettingsMsSmoothGroupSettings.
        :param fragment_length: The fragment_length of this OutputGroupSettingsMsSmoothGroupSettings.
        :param input_loss_action: The input_loss_action of this OutputGroupSettingsMsSmoothGroupSettings.
        :param num_retries: The num_retries of this OutputGroupSettingsMsSmoothGroupSettings.
        :param restart_delay: The restart_delay of this OutputGroupSettingsMsSmoothGroupSettings.
        :param segmentation_mode: The segmentation_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :param send_delay_ms: The send_delay_ms of this OutputGroupSettingsMsSmoothGroupSettings.
        :param sparse_track_type: The sparse_track_type of this OutputGroupSettingsMsSmoothGroupSettings.
        :param stream_manifest_behavior: The stream_manifest_behavior of this OutputGroupSettingsMsSmoothGroupSettings.
        :param timestamp_offset: The timestamp_offset of this OutputGroupSettingsMsSmoothGroupSettings.
        :param timestamp_offset_mode: The timestamp_offset_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        """
        self.openapi_types = {
            'acquisition_point_id': str,
            'audio_only_timecode_control': SmoothGroupAudioOnlyTimecodeControl,
            'certificate_mode': SmoothGroupCertificateMode,
            'connection_retry_interval': int,
            'destination': MsSmoothGroupSettingsDestination,
            'event_id': str,
            'event_id_mode': SmoothGroupEventIdMode,
            'event_stop_behavior': SmoothGroupEventStopBehavior,
            'filecache_duration': int,
            'fragment_length': int,
            'input_loss_action': InputLossActionForMsSmoothOut,
            'num_retries': int,
            'restart_delay': int,
            'segmentation_mode': SmoothGroupSegmentationMode,
            'send_delay_ms': int,
            'sparse_track_type': SmoothGroupSparseTrackType,
            'stream_manifest_behavior': SmoothGroupStreamManifestBehavior,
            'timestamp_offset': str,
            'timestamp_offset_mode': SmoothGroupTimestampOffsetMode
        }

        self.attribute_map = {
            'acquisition_point_id': 'AcquisitionPointId',
            'audio_only_timecode_control': 'AudioOnlyTimecodeControl',
            'certificate_mode': 'CertificateMode',
            'connection_retry_interval': 'ConnectionRetryInterval',
            'destination': 'Destination',
            'event_id': 'EventId',
            'event_id_mode': 'EventIdMode',
            'event_stop_behavior': 'EventStopBehavior',
            'filecache_duration': 'FilecacheDuration',
            'fragment_length': 'FragmentLength',
            'input_loss_action': 'InputLossAction',
            'num_retries': 'NumRetries',
            'restart_delay': 'RestartDelay',
            'segmentation_mode': 'SegmentationMode',
            'send_delay_ms': 'SendDelayMs',
            'sparse_track_type': 'SparseTrackType',
            'stream_manifest_behavior': 'StreamManifestBehavior',
            'timestamp_offset': 'TimestampOffset',
            'timestamp_offset_mode': 'TimestampOffsetMode'
        }

        self._acquisition_point_id = acquisition_point_id
        self._audio_only_timecode_control = audio_only_timecode_control
        self._certificate_mode = certificate_mode
        self._connection_retry_interval = connection_retry_interval
        self._destination = destination
        self._event_id = event_id
        self._event_id_mode = event_id_mode
        self._event_stop_behavior = event_stop_behavior
        self._filecache_duration = filecache_duration
        self._fragment_length = fragment_length
        self._input_loss_action = input_loss_action
        self._num_retries = num_retries
        self._restart_delay = restart_delay
        self._segmentation_mode = segmentation_mode
        self._send_delay_ms = send_delay_ms
        self._sparse_track_type = sparse_track_type
        self._stream_manifest_behavior = stream_manifest_behavior
        self._timestamp_offset = timestamp_offset
        self._timestamp_offset_mode = timestamp_offset_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutputGroupSettingsMsSmoothGroupSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutputGroupSettings_MsSmoothGroupSettings of this OutputGroupSettingsMsSmoothGroupSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acquisition_point_id(self):
        """Gets the acquisition_point_id of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The acquisition_point_id of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: str
        """
        return self._acquisition_point_id

    @acquisition_point_id.setter
    def acquisition_point_id(self, acquisition_point_id):
        """Sets the acquisition_point_id of this OutputGroupSettingsMsSmoothGroupSettings.


        :param acquisition_point_id: The acquisition_point_id of this OutputGroupSettingsMsSmoothGroupSettings.
        :type acquisition_point_id: str
        """

        self._acquisition_point_id = acquisition_point_id

    @property
    def audio_only_timecode_control(self):
        """Gets the audio_only_timecode_control of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The audio_only_timecode_control of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: SmoothGroupAudioOnlyTimecodeControl
        """
        return self._audio_only_timecode_control

    @audio_only_timecode_control.setter
    def audio_only_timecode_control(self, audio_only_timecode_control):
        """Sets the audio_only_timecode_control of this OutputGroupSettingsMsSmoothGroupSettings.


        :param audio_only_timecode_control: The audio_only_timecode_control of this OutputGroupSettingsMsSmoothGroupSettings.
        :type audio_only_timecode_control: SmoothGroupAudioOnlyTimecodeControl
        """

        self._audio_only_timecode_control = audio_only_timecode_control

    @property
    def certificate_mode(self):
        """Gets the certificate_mode of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The certificate_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: SmoothGroupCertificateMode
        """
        return self._certificate_mode

    @certificate_mode.setter
    def certificate_mode(self, certificate_mode):
        """Sets the certificate_mode of this OutputGroupSettingsMsSmoothGroupSettings.


        :param certificate_mode: The certificate_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :type certificate_mode: SmoothGroupCertificateMode
        """

        self._certificate_mode = certificate_mode

    @property
    def connection_retry_interval(self):
        """Gets the connection_retry_interval of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The connection_retry_interval of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: int
        """
        return self._connection_retry_interval

    @connection_retry_interval.setter
    def connection_retry_interval(self, connection_retry_interval):
        """Sets the connection_retry_interval of this OutputGroupSettingsMsSmoothGroupSettings.


        :param connection_retry_interval: The connection_retry_interval of this OutputGroupSettingsMsSmoothGroupSettings.
        :type connection_retry_interval: int
        """

        self._connection_retry_interval = connection_retry_interval

    @property
    def destination(self):
        """Gets the destination of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The destination of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: MsSmoothGroupSettingsDestination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this OutputGroupSettingsMsSmoothGroupSettings.


        :param destination: The destination of this OutputGroupSettingsMsSmoothGroupSettings.
        :type destination: MsSmoothGroupSettingsDestination
        """
        if destination is None:
            raise ValueError("Invalid value for `destination`, must not be `None`")

        self._destination = destination

    @property
    def event_id(self):
        """Gets the event_id of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The event_id of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this OutputGroupSettingsMsSmoothGroupSettings.


        :param event_id: The event_id of this OutputGroupSettingsMsSmoothGroupSettings.
        :type event_id: str
        """

        self._event_id = event_id

    @property
    def event_id_mode(self):
        """Gets the event_id_mode of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The event_id_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: SmoothGroupEventIdMode
        """
        return self._event_id_mode

    @event_id_mode.setter
    def event_id_mode(self, event_id_mode):
        """Sets the event_id_mode of this OutputGroupSettingsMsSmoothGroupSettings.


        :param event_id_mode: The event_id_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :type event_id_mode: SmoothGroupEventIdMode
        """

        self._event_id_mode = event_id_mode

    @property
    def event_stop_behavior(self):
        """Gets the event_stop_behavior of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The event_stop_behavior of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: SmoothGroupEventStopBehavior
        """
        return self._event_stop_behavior

    @event_stop_behavior.setter
    def event_stop_behavior(self, event_stop_behavior):
        """Sets the event_stop_behavior of this OutputGroupSettingsMsSmoothGroupSettings.


        :param event_stop_behavior: The event_stop_behavior of this OutputGroupSettingsMsSmoothGroupSettings.
        :type event_stop_behavior: SmoothGroupEventStopBehavior
        """

        self._event_stop_behavior = event_stop_behavior

    @property
    def filecache_duration(self):
        """Gets the filecache_duration of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The filecache_duration of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: int
        """
        return self._filecache_duration

    @filecache_duration.setter
    def filecache_duration(self, filecache_duration):
        """Sets the filecache_duration of this OutputGroupSettingsMsSmoothGroupSettings.


        :param filecache_duration: The filecache_duration of this OutputGroupSettingsMsSmoothGroupSettings.
        :type filecache_duration: int
        """

        self._filecache_duration = filecache_duration

    @property
    def fragment_length(self):
        """Gets the fragment_length of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The fragment_length of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: int
        """
        return self._fragment_length

    @fragment_length.setter
    def fragment_length(self, fragment_length):
        """Sets the fragment_length of this OutputGroupSettingsMsSmoothGroupSettings.


        :param fragment_length: The fragment_length of this OutputGroupSettingsMsSmoothGroupSettings.
        :type fragment_length: int
        """

        self._fragment_length = fragment_length

    @property
    def input_loss_action(self):
        """Gets the input_loss_action of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The input_loss_action of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: InputLossActionForMsSmoothOut
        """
        return self._input_loss_action

    @input_loss_action.setter
    def input_loss_action(self, input_loss_action):
        """Sets the input_loss_action of this OutputGroupSettingsMsSmoothGroupSettings.


        :param input_loss_action: The input_loss_action of this OutputGroupSettingsMsSmoothGroupSettings.
        :type input_loss_action: InputLossActionForMsSmoothOut
        """

        self._input_loss_action = input_loss_action

    @property
    def num_retries(self):
        """Gets the num_retries of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The num_retries of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: int
        """
        return self._num_retries

    @num_retries.setter
    def num_retries(self, num_retries):
        """Sets the num_retries of this OutputGroupSettingsMsSmoothGroupSettings.


        :param num_retries: The num_retries of this OutputGroupSettingsMsSmoothGroupSettings.
        :type num_retries: int
        """

        self._num_retries = num_retries

    @property
    def restart_delay(self):
        """Gets the restart_delay of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The restart_delay of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: int
        """
        return self._restart_delay

    @restart_delay.setter
    def restart_delay(self, restart_delay):
        """Sets the restart_delay of this OutputGroupSettingsMsSmoothGroupSettings.


        :param restart_delay: The restart_delay of this OutputGroupSettingsMsSmoothGroupSettings.
        :type restart_delay: int
        """

        self._restart_delay = restart_delay

    @property
    def segmentation_mode(self):
        """Gets the segmentation_mode of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The segmentation_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: SmoothGroupSegmentationMode
        """
        return self._segmentation_mode

    @segmentation_mode.setter
    def segmentation_mode(self, segmentation_mode):
        """Sets the segmentation_mode of this OutputGroupSettingsMsSmoothGroupSettings.


        :param segmentation_mode: The segmentation_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :type segmentation_mode: SmoothGroupSegmentationMode
        """

        self._segmentation_mode = segmentation_mode

    @property
    def send_delay_ms(self):
        """Gets the send_delay_ms of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The send_delay_ms of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: int
        """
        return self._send_delay_ms

    @send_delay_ms.setter
    def send_delay_ms(self, send_delay_ms):
        """Sets the send_delay_ms of this OutputGroupSettingsMsSmoothGroupSettings.


        :param send_delay_ms: The send_delay_ms of this OutputGroupSettingsMsSmoothGroupSettings.
        :type send_delay_ms: int
        """

        self._send_delay_ms = send_delay_ms

    @property
    def sparse_track_type(self):
        """Gets the sparse_track_type of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The sparse_track_type of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: SmoothGroupSparseTrackType
        """
        return self._sparse_track_type

    @sparse_track_type.setter
    def sparse_track_type(self, sparse_track_type):
        """Sets the sparse_track_type of this OutputGroupSettingsMsSmoothGroupSettings.


        :param sparse_track_type: The sparse_track_type of this OutputGroupSettingsMsSmoothGroupSettings.
        :type sparse_track_type: SmoothGroupSparseTrackType
        """

        self._sparse_track_type = sparse_track_type

    @property
    def stream_manifest_behavior(self):
        """Gets the stream_manifest_behavior of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The stream_manifest_behavior of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: SmoothGroupStreamManifestBehavior
        """
        return self._stream_manifest_behavior

    @stream_manifest_behavior.setter
    def stream_manifest_behavior(self, stream_manifest_behavior):
        """Sets the stream_manifest_behavior of this OutputGroupSettingsMsSmoothGroupSettings.


        :param stream_manifest_behavior: The stream_manifest_behavior of this OutputGroupSettingsMsSmoothGroupSettings.
        :type stream_manifest_behavior: SmoothGroupStreamManifestBehavior
        """

        self._stream_manifest_behavior = stream_manifest_behavior

    @property
    def timestamp_offset(self):
        """Gets the timestamp_offset of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The timestamp_offset of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: str
        """
        return self._timestamp_offset

    @timestamp_offset.setter
    def timestamp_offset(self, timestamp_offset):
        """Sets the timestamp_offset of this OutputGroupSettingsMsSmoothGroupSettings.


        :param timestamp_offset: The timestamp_offset of this OutputGroupSettingsMsSmoothGroupSettings.
        :type timestamp_offset: str
        """

        self._timestamp_offset = timestamp_offset

    @property
    def timestamp_offset_mode(self):
        """Gets the timestamp_offset_mode of this OutputGroupSettingsMsSmoothGroupSettings.


        :return: The timestamp_offset_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :rtype: SmoothGroupTimestampOffsetMode
        """
        return self._timestamp_offset_mode

    @timestamp_offset_mode.setter
    def timestamp_offset_mode(self, timestamp_offset_mode):
        """Sets the timestamp_offset_mode of this OutputGroupSettingsMsSmoothGroupSettings.


        :param timestamp_offset_mode: The timestamp_offset_mode of this OutputGroupSettingsMsSmoothGroupSettings.
        :type timestamp_offset_mode: SmoothGroupTimestampOffsetMode
        """

        self._timestamp_offset_mode = timestamp_offset_mode
