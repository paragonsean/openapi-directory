# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.multiplex_video_settings_statmux_settings import MultiplexVideoSettingsStatmuxSettings
from openapi_server import util


class CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, constant_bitrate: int=None, statmux_settings: MultiplexVideoSettingsStatmuxSettings=None):
        """CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings - a model defined in OpenAPI

        :param constant_bitrate: The constant_bitrate of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.
        :param statmux_settings: The statmux_settings of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.
        """
        self.openapi_types = {
            'constant_bitrate': int,
            'statmux_settings': MultiplexVideoSettingsStatmuxSettings
        }

        self.attribute_map = {
            'constant_bitrate': 'ConstantBitrate',
            'statmux_settings': 'StatmuxSettings'
        }

        self._constant_bitrate = constant_bitrate
        self._statmux_settings = statmux_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def constant_bitrate(self):
        """Gets the constant_bitrate of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.


        :return: The constant_bitrate of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.
        :rtype: int
        """
        return self._constant_bitrate

    @constant_bitrate.setter
    def constant_bitrate(self, constant_bitrate):
        """Sets the constant_bitrate of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.


        :param constant_bitrate: The constant_bitrate of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.
        :type constant_bitrate: int
        """

        self._constant_bitrate = constant_bitrate

    @property
    def statmux_settings(self):
        """Gets the statmux_settings of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.


        :return: The statmux_settings of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.
        :rtype: MultiplexVideoSettingsStatmuxSettings
        """
        return self._statmux_settings

    @statmux_settings.setter
    def statmux_settings(self, statmux_settings):
        """Sets the statmux_settings of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.


        :param statmux_settings: The statmux_settings of this CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings.
        :type statmux_settings: MultiplexVideoSettingsStatmuxSettings
        """

        self._statmux_settings = statmux_settings
