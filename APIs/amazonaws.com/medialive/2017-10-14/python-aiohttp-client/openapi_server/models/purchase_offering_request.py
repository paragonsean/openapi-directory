# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_reservation_request_renewal_settings import UpdateReservationRequestRenewalSettings
from openapi_server import util


class PurchaseOfferingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, name: str=None, renewal_settings: UpdateReservationRequestRenewalSettings=None, request_id: str=None, start: str=None, tags: Dict[str, str]=None):
        """PurchaseOfferingRequest - a model defined in OpenAPI

        :param count: The count of this PurchaseOfferingRequest.
        :param name: The name of this PurchaseOfferingRequest.
        :param renewal_settings: The renewal_settings of this PurchaseOfferingRequest.
        :param request_id: The request_id of this PurchaseOfferingRequest.
        :param start: The start of this PurchaseOfferingRequest.
        :param tags: The tags of this PurchaseOfferingRequest.
        """
        self.openapi_types = {
            'count': int,
            'name': str,
            'renewal_settings': UpdateReservationRequestRenewalSettings,
            'request_id': str,
            'start': str,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'count': 'count',
            'name': 'name',
            'renewal_settings': 'renewalSettings',
            'request_id': 'requestId',
            'start': 'start',
            'tags': 'tags'
        }

        self._count = count
        self._name = name
        self._renewal_settings = renewal_settings
        self._request_id = request_id
        self._start = start
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseOfferingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseOffering_request of this PurchaseOfferingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this PurchaseOfferingRequest.

        Placeholder documentation for __integerMin1

        :return: The count of this PurchaseOfferingRequest.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this PurchaseOfferingRequest.

        Placeholder documentation for __integerMin1

        :param count: The count of this PurchaseOfferingRequest.
        :type count: int
        """
        if count is None:
            raise ValueError("Invalid value for `count`, must not be `None`")
        if count is not None and count < 1:
            raise ValueError("Invalid value for `count`, must be a value greater than or equal to `1`")

        self._count = count

    @property
    def name(self):
        """Gets the name of this PurchaseOfferingRequest.

        Placeholder documentation for __string

        :return: The name of this PurchaseOfferingRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PurchaseOfferingRequest.

        Placeholder documentation for __string

        :param name: The name of this PurchaseOfferingRequest.
        :type name: str
        """

        self._name = name

    @property
    def renewal_settings(self):
        """Gets the renewal_settings of this PurchaseOfferingRequest.


        :return: The renewal_settings of this PurchaseOfferingRequest.
        :rtype: UpdateReservationRequestRenewalSettings
        """
        return self._renewal_settings

    @renewal_settings.setter
    def renewal_settings(self, renewal_settings):
        """Sets the renewal_settings of this PurchaseOfferingRequest.


        :param renewal_settings: The renewal_settings of this PurchaseOfferingRequest.
        :type renewal_settings: UpdateReservationRequestRenewalSettings
        """

        self._renewal_settings = renewal_settings

    @property
    def request_id(self):
        """Gets the request_id of this PurchaseOfferingRequest.

        Placeholder documentation for __string

        :return: The request_id of this PurchaseOfferingRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this PurchaseOfferingRequest.

        Placeholder documentation for __string

        :param request_id: The request_id of this PurchaseOfferingRequest.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def start(self):
        """Gets the start of this PurchaseOfferingRequest.

        Placeholder documentation for __string

        :return: The start of this PurchaseOfferingRequest.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this PurchaseOfferingRequest.

        Placeholder documentation for __string

        :param start: The start of this PurchaseOfferingRequest.
        :type start: str
        """

        self._start = start

    @property
    def tags(self):
        """Gets the tags of this PurchaseOfferingRequest.

        Placeholder documentation for Tags

        :return: The tags of this PurchaseOfferingRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this PurchaseOfferingRequest.

        Placeholder documentation for Tags

        :param tags: The tags of this PurchaseOfferingRequest.
        :type tags: Dict[str, str]
        """

        self._tags = tags
