# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_channel_request_cdi_input_specification import CreateChannelRequestCdiInputSpecification
from openapi_server.models.create_channel_request_encoder_settings import CreateChannelRequestEncoderSettings
from openapi_server.models.create_channel_request_input_specification import CreateChannelRequestInputSpecification
from openapi_server.models.input_attachment import InputAttachment
from openapi_server.models.output_destination import OutputDestination
from openapi_server.models.update_channel_request_maintenance import UpdateChannelRequestMaintenance
from openapi_server import util


class UpdateChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cdi_input_specification: CreateChannelRequestCdiInputSpecification=None, destinations: List[OutputDestination]=None, encoder_settings: CreateChannelRequestEncoderSettings=None, input_attachments: List[InputAttachment]=None, input_specification: CreateChannelRequestInputSpecification=None, log_level: str=None, maintenance: UpdateChannelRequestMaintenance=None, name: str=None, role_arn: str=None):
        """UpdateChannelRequest - a model defined in OpenAPI

        :param cdi_input_specification: The cdi_input_specification of this UpdateChannelRequest.
        :param destinations: The destinations of this UpdateChannelRequest.
        :param encoder_settings: The encoder_settings of this UpdateChannelRequest.
        :param input_attachments: The input_attachments of this UpdateChannelRequest.
        :param input_specification: The input_specification of this UpdateChannelRequest.
        :param log_level: The log_level of this UpdateChannelRequest.
        :param maintenance: The maintenance of this UpdateChannelRequest.
        :param name: The name of this UpdateChannelRequest.
        :param role_arn: The role_arn of this UpdateChannelRequest.
        """
        self.openapi_types = {
            'cdi_input_specification': CreateChannelRequestCdiInputSpecification,
            'destinations': List[OutputDestination],
            'encoder_settings': CreateChannelRequestEncoderSettings,
            'input_attachments': List[InputAttachment],
            'input_specification': CreateChannelRequestInputSpecification,
            'log_level': str,
            'maintenance': UpdateChannelRequestMaintenance,
            'name': str,
            'role_arn': str
        }

        self.attribute_map = {
            'cdi_input_specification': 'cdiInputSpecification',
            'destinations': 'destinations',
            'encoder_settings': 'encoderSettings',
            'input_attachments': 'inputAttachments',
            'input_specification': 'inputSpecification',
            'log_level': 'logLevel',
            'maintenance': 'maintenance',
            'name': 'name',
            'role_arn': 'roleArn'
        }

        self._cdi_input_specification = cdi_input_specification
        self._destinations = destinations
        self._encoder_settings = encoder_settings
        self._input_attachments = input_attachments
        self._input_specification = input_specification
        self._log_level = log_level
        self._maintenance = maintenance
        self._name = name
        self._role_arn = role_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateChannel_request of this UpdateChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cdi_input_specification(self):
        """Gets the cdi_input_specification of this UpdateChannelRequest.


        :return: The cdi_input_specification of this UpdateChannelRequest.
        :rtype: CreateChannelRequestCdiInputSpecification
        """
        return self._cdi_input_specification

    @cdi_input_specification.setter
    def cdi_input_specification(self, cdi_input_specification):
        """Sets the cdi_input_specification of this UpdateChannelRequest.


        :param cdi_input_specification: The cdi_input_specification of this UpdateChannelRequest.
        :type cdi_input_specification: CreateChannelRequestCdiInputSpecification
        """

        self._cdi_input_specification = cdi_input_specification

    @property
    def destinations(self):
        """Gets the destinations of this UpdateChannelRequest.

        Placeholder documentation for __listOfOutputDestination

        :return: The destinations of this UpdateChannelRequest.
        :rtype: List[OutputDestination]
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this UpdateChannelRequest.

        Placeholder documentation for __listOfOutputDestination

        :param destinations: The destinations of this UpdateChannelRequest.
        :type destinations: List[OutputDestination]
        """

        self._destinations = destinations

    @property
    def encoder_settings(self):
        """Gets the encoder_settings of this UpdateChannelRequest.


        :return: The encoder_settings of this UpdateChannelRequest.
        :rtype: CreateChannelRequestEncoderSettings
        """
        return self._encoder_settings

    @encoder_settings.setter
    def encoder_settings(self, encoder_settings):
        """Sets the encoder_settings of this UpdateChannelRequest.


        :param encoder_settings: The encoder_settings of this UpdateChannelRequest.
        :type encoder_settings: CreateChannelRequestEncoderSettings
        """

        self._encoder_settings = encoder_settings

    @property
    def input_attachments(self):
        """Gets the input_attachments of this UpdateChannelRequest.

        Placeholder documentation for __listOfInputAttachment

        :return: The input_attachments of this UpdateChannelRequest.
        :rtype: List[InputAttachment]
        """
        return self._input_attachments

    @input_attachments.setter
    def input_attachments(self, input_attachments):
        """Sets the input_attachments of this UpdateChannelRequest.

        Placeholder documentation for __listOfInputAttachment

        :param input_attachments: The input_attachments of this UpdateChannelRequest.
        :type input_attachments: List[InputAttachment]
        """

        self._input_attachments = input_attachments

    @property
    def input_specification(self):
        """Gets the input_specification of this UpdateChannelRequest.


        :return: The input_specification of this UpdateChannelRequest.
        :rtype: CreateChannelRequestInputSpecification
        """
        return self._input_specification

    @input_specification.setter
    def input_specification(self, input_specification):
        """Sets the input_specification of this UpdateChannelRequest.


        :param input_specification: The input_specification of this UpdateChannelRequest.
        :type input_specification: CreateChannelRequestInputSpecification
        """

        self._input_specification = input_specification

    @property
    def log_level(self):
        """Gets the log_level of this UpdateChannelRequest.

        The log level the user wants for their channel.

        :return: The log_level of this UpdateChannelRequest.
        :rtype: str
        """
        return self._log_level

    @log_level.setter
    def log_level(self, log_level):
        """Sets the log_level of this UpdateChannelRequest.

        The log level the user wants for their channel.

        :param log_level: The log_level of this UpdateChannelRequest.
        :type log_level: str
        """
        allowed_values = ["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"]  # noqa: E501
        if log_level not in allowed_values:
            raise ValueError(
                "Invalid value for `log_level` ({0}), must be one of {1}"
                .format(log_level, allowed_values)
            )

        self._log_level = log_level

    @property
    def maintenance(self):
        """Gets the maintenance of this UpdateChannelRequest.


        :return: The maintenance of this UpdateChannelRequest.
        :rtype: UpdateChannelRequestMaintenance
        """
        return self._maintenance

    @maintenance.setter
    def maintenance(self, maintenance):
        """Sets the maintenance of this UpdateChannelRequest.


        :param maintenance: The maintenance of this UpdateChannelRequest.
        :type maintenance: UpdateChannelRequestMaintenance
        """

        self._maintenance = maintenance

    @property
    def name(self):
        """Gets the name of this UpdateChannelRequest.

        Placeholder documentation for __string

        :return: The name of this UpdateChannelRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateChannelRequest.

        Placeholder documentation for __string

        :param name: The name of this UpdateChannelRequest.
        :type name: str
        """

        self._name = name

    @property
    def role_arn(self):
        """Gets the role_arn of this UpdateChannelRequest.

        Placeholder documentation for __string

        :return: The role_arn of this UpdateChannelRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this UpdateChannelRequest.

        Placeholder documentation for __string

        :param role_arn: The role_arn of this UpdateChannelRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn
