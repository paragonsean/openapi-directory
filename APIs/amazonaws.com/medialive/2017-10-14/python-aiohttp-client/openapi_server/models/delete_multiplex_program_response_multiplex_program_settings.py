# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_multiplex_program_request_multiplex_program_settings_service_descriptor import CreateMultiplexProgramRequestMultiplexProgramSettingsServiceDescriptor
from openapi_server.models.create_multiplex_program_request_multiplex_program_settings_video_settings import CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings
from openapi_server.models.preferred_channel_pipeline import PreferredChannelPipeline
from openapi_server import util


class DeleteMultiplexProgramResponseMultiplexProgramSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, preferred_channel_pipeline: PreferredChannelPipeline=None, program_number: int=None, service_descriptor: CreateMultiplexProgramRequestMultiplexProgramSettingsServiceDescriptor=None, video_settings: CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings=None):
        """DeleteMultiplexProgramResponseMultiplexProgramSettings - a model defined in OpenAPI

        :param preferred_channel_pipeline: The preferred_channel_pipeline of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :param program_number: The program_number of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :param service_descriptor: The service_descriptor of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :param video_settings: The video_settings of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        """
        self.openapi_types = {
            'preferred_channel_pipeline': PreferredChannelPipeline,
            'program_number': int,
            'service_descriptor': CreateMultiplexProgramRequestMultiplexProgramSettingsServiceDescriptor,
            'video_settings': CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings
        }

        self.attribute_map = {
            'preferred_channel_pipeline': 'PreferredChannelPipeline',
            'program_number': 'ProgramNumber',
            'service_descriptor': 'ServiceDescriptor',
            'video_settings': 'VideoSettings'
        }

        self._preferred_channel_pipeline = preferred_channel_pipeline
        self._program_number = program_number
        self._service_descriptor = service_descriptor
        self._video_settings = video_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteMultiplexProgramResponseMultiplexProgramSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteMultiplexProgramResponse_MultiplexProgramSettings of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def preferred_channel_pipeline(self):
        """Gets the preferred_channel_pipeline of this DeleteMultiplexProgramResponseMultiplexProgramSettings.


        :return: The preferred_channel_pipeline of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :rtype: PreferredChannelPipeline
        """
        return self._preferred_channel_pipeline

    @preferred_channel_pipeline.setter
    def preferred_channel_pipeline(self, preferred_channel_pipeline):
        """Sets the preferred_channel_pipeline of this DeleteMultiplexProgramResponseMultiplexProgramSettings.


        :param preferred_channel_pipeline: The preferred_channel_pipeline of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :type preferred_channel_pipeline: PreferredChannelPipeline
        """

        self._preferred_channel_pipeline = preferred_channel_pipeline

    @property
    def program_number(self):
        """Gets the program_number of this DeleteMultiplexProgramResponseMultiplexProgramSettings.


        :return: The program_number of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :rtype: int
        """
        return self._program_number

    @program_number.setter
    def program_number(self, program_number):
        """Sets the program_number of this DeleteMultiplexProgramResponseMultiplexProgramSettings.


        :param program_number: The program_number of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :type program_number: int
        """
        if program_number is None:
            raise ValueError("Invalid value for `program_number`, must not be `None`")

        self._program_number = program_number

    @property
    def service_descriptor(self):
        """Gets the service_descriptor of this DeleteMultiplexProgramResponseMultiplexProgramSettings.


        :return: The service_descriptor of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :rtype: CreateMultiplexProgramRequestMultiplexProgramSettingsServiceDescriptor
        """
        return self._service_descriptor

    @service_descriptor.setter
    def service_descriptor(self, service_descriptor):
        """Sets the service_descriptor of this DeleteMultiplexProgramResponseMultiplexProgramSettings.


        :param service_descriptor: The service_descriptor of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :type service_descriptor: CreateMultiplexProgramRequestMultiplexProgramSettingsServiceDescriptor
        """

        self._service_descriptor = service_descriptor

    @property
    def video_settings(self):
        """Gets the video_settings of this DeleteMultiplexProgramResponseMultiplexProgramSettings.


        :return: The video_settings of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :rtype: CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings
        """
        return self._video_settings

    @video_settings.setter
    def video_settings(self, video_settings):
        """Sets the video_settings of this DeleteMultiplexProgramResponseMultiplexProgramSettings.


        :param video_settings: The video_settings of this DeleteMultiplexProgramResponseMultiplexProgramSettings.
        :type video_settings: CreateMultiplexProgramRequestMultiplexProgramSettingsVideoSettings
        """

        self._video_settings = video_settings
