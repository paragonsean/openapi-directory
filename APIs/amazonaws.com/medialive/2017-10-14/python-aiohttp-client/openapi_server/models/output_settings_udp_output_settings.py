# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.udp_output_settings_container_settings import UdpOutputSettingsContainerSettings
from openapi_server.models.udp_output_settings_destination import UdpOutputSettingsDestination
from openapi_server.models.udp_output_settings_fec_output_settings import UdpOutputSettingsFecOutputSettings
from openapi_server import util


class OutputSettingsUdpOutputSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buffer_msec: int=None, container_settings: UdpOutputSettingsContainerSettings=None, destination: UdpOutputSettingsDestination=None, fec_output_settings: UdpOutputSettingsFecOutputSettings=None):
        """OutputSettingsUdpOutputSettings - a model defined in OpenAPI

        :param buffer_msec: The buffer_msec of this OutputSettingsUdpOutputSettings.
        :param container_settings: The container_settings of this OutputSettingsUdpOutputSettings.
        :param destination: The destination of this OutputSettingsUdpOutputSettings.
        :param fec_output_settings: The fec_output_settings of this OutputSettingsUdpOutputSettings.
        """
        self.openapi_types = {
            'buffer_msec': int,
            'container_settings': UdpOutputSettingsContainerSettings,
            'destination': UdpOutputSettingsDestination,
            'fec_output_settings': UdpOutputSettingsFecOutputSettings
        }

        self.attribute_map = {
            'buffer_msec': 'BufferMsec',
            'container_settings': 'ContainerSettings',
            'destination': 'Destination',
            'fec_output_settings': 'FecOutputSettings'
        }

        self._buffer_msec = buffer_msec
        self._container_settings = container_settings
        self._destination = destination
        self._fec_output_settings = fec_output_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutputSettingsUdpOutputSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutputSettings_UdpOutputSettings of this OutputSettingsUdpOutputSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buffer_msec(self):
        """Gets the buffer_msec of this OutputSettingsUdpOutputSettings.


        :return: The buffer_msec of this OutputSettingsUdpOutputSettings.
        :rtype: int
        """
        return self._buffer_msec

    @buffer_msec.setter
    def buffer_msec(self, buffer_msec):
        """Sets the buffer_msec of this OutputSettingsUdpOutputSettings.


        :param buffer_msec: The buffer_msec of this OutputSettingsUdpOutputSettings.
        :type buffer_msec: int
        """

        self._buffer_msec = buffer_msec

    @property
    def container_settings(self):
        """Gets the container_settings of this OutputSettingsUdpOutputSettings.


        :return: The container_settings of this OutputSettingsUdpOutputSettings.
        :rtype: UdpOutputSettingsContainerSettings
        """
        return self._container_settings

    @container_settings.setter
    def container_settings(self, container_settings):
        """Sets the container_settings of this OutputSettingsUdpOutputSettings.


        :param container_settings: The container_settings of this OutputSettingsUdpOutputSettings.
        :type container_settings: UdpOutputSettingsContainerSettings
        """
        if container_settings is None:
            raise ValueError("Invalid value for `container_settings`, must not be `None`")

        self._container_settings = container_settings

    @property
    def destination(self):
        """Gets the destination of this OutputSettingsUdpOutputSettings.


        :return: The destination of this OutputSettingsUdpOutputSettings.
        :rtype: UdpOutputSettingsDestination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this OutputSettingsUdpOutputSettings.


        :param destination: The destination of this OutputSettingsUdpOutputSettings.
        :type destination: UdpOutputSettingsDestination
        """
        if destination is None:
            raise ValueError("Invalid value for `destination`, must not be `None`")

        self._destination = destination

    @property
    def fec_output_settings(self):
        """Gets the fec_output_settings of this OutputSettingsUdpOutputSettings.


        :return: The fec_output_settings of this OutputSettingsUdpOutputSettings.
        :rtype: UdpOutputSettingsFecOutputSettings
        """
        return self._fec_output_settings

    @fec_output_settings.setter
    def fec_output_settings(self, fec_output_settings):
        """Sets the fec_output_settings of this OutputSettingsUdpOutputSettings.


        :param fec_output_settings: The fec_output_settings of this OutputSettingsUdpOutputSettings.
        :type fec_output_settings: UdpOutputSettingsFecOutputSettings
        """

        self._fec_output_settings = fec_output_settings
