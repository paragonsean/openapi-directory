# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.m2ts_absent_input_audio_behavior import M2tsAbsentInputAudioBehavior
from openapi_server.models.m2ts_arib import M2tsArib
from openapi_server.models.m2ts_arib_captions_pid_control import M2tsAribCaptionsPidControl
from openapi_server.models.m2ts_audio_buffer_model import M2tsAudioBufferModel
from openapi_server.models.m2ts_audio_interval import M2tsAudioInterval
from openapi_server.models.m2ts_audio_stream_type import M2tsAudioStreamType
from openapi_server.models.m2ts_buffer_model import M2tsBufferModel
from openapi_server.models.m2ts_cc_descriptor import M2tsCcDescriptor
from openapi_server.models.m2ts_ebif_control import M2tsEbifControl
from openapi_server.models.m2ts_ebp_placement import M2tsEbpPlacement
from openapi_server.models.m2ts_es_rate_in_pes import M2tsEsRateInPes
from openapi_server.models.m2ts_klv import M2tsKlv
from openapi_server.models.m2ts_nielsen_id3_behavior import M2tsNielsenId3Behavior
from openapi_server.models.m2ts_pcr_control import M2tsPcrControl
from openapi_server.models.m2ts_rate_mode import M2tsRateMode
from openapi_server.models.m2ts_scte35_control import M2tsScte35Control
from openapi_server.models.m2ts_segmentation_markers import M2tsSegmentationMarkers
from openapi_server.models.m2ts_segmentation_style import M2tsSegmentationStyle
from openapi_server.models.m2ts_settings_dvb_nit_settings import M2tsSettingsDvbNitSettings
from openapi_server.models.m2ts_settings_dvb_sdt_settings import M2tsSettingsDvbSdtSettings
from openapi_server.models.m2ts_settings_dvb_tdt_settings import M2tsSettingsDvbTdtSettings
from openapi_server.models.m2ts_timed_metadata_behavior import M2tsTimedMetadataBehavior
from openapi_server import util


class ArchiveContainerSettingsM2tsSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, absent_input_audio_behavior: M2tsAbsentInputAudioBehavior=None, arib: M2tsArib=None, arib_captions_pid: str=None, arib_captions_pid_control: M2tsAribCaptionsPidControl=None, audio_buffer_model: M2tsAudioBufferModel=None, audio_frames_per_pes: int=None, audio_pids: str=None, audio_stream_type: M2tsAudioStreamType=None, bitrate: int=None, buffer_model: M2tsBufferModel=None, cc_descriptor: M2tsCcDescriptor=None, dvb_nit_settings: M2tsSettingsDvbNitSettings=None, dvb_sdt_settings: M2tsSettingsDvbSdtSettings=None, dvb_sub_pids: str=None, dvb_tdt_settings: M2tsSettingsDvbTdtSettings=None, dvb_teletext_pid: str=None, ebif: M2tsEbifControl=None, ebp_audio_interval: M2tsAudioInterval=None, ebp_lookahead_ms: int=None, ebp_placement: M2tsEbpPlacement=None, ecm_pid: str=None, es_rate_in_pes: M2tsEsRateInPes=None, etv_platform_pid: str=None, etv_signal_pid: str=None, fragment_time: float=None, klv: M2tsKlv=None, klv_data_pids: str=None, nielsen_id3_behavior: M2tsNielsenId3Behavior=None, null_packet_bitrate: float=None, pat_interval: int=None, pcr_control: M2tsPcrControl=None, pcr_period: int=None, pcr_pid: str=None, pmt_interval: int=None, pmt_pid: str=None, program_num: int=None, rate_mode: M2tsRateMode=None, scte27_pids: str=None, scte35_control: M2tsScte35Control=None, scte35_pid: str=None, segmentation_markers: M2tsSegmentationMarkers=None, segmentation_style: M2tsSegmentationStyle=None, segmentation_time: float=None, timed_metadata_behavior: M2tsTimedMetadataBehavior=None, timed_metadata_pid: str=None, transport_stream_id: int=None, video_pid: str=None, scte35_preroll_pullup_milliseconds: float=None):
        """ArchiveContainerSettingsM2tsSettings - a model defined in OpenAPI

        :param absent_input_audio_behavior: The absent_input_audio_behavior of this ArchiveContainerSettingsM2tsSettings.
        :param arib: The arib of this ArchiveContainerSettingsM2tsSettings.
        :param arib_captions_pid: The arib_captions_pid of this ArchiveContainerSettingsM2tsSettings.
        :param arib_captions_pid_control: The arib_captions_pid_control of this ArchiveContainerSettingsM2tsSettings.
        :param audio_buffer_model: The audio_buffer_model of this ArchiveContainerSettingsM2tsSettings.
        :param audio_frames_per_pes: The audio_frames_per_pes of this ArchiveContainerSettingsM2tsSettings.
        :param audio_pids: The audio_pids of this ArchiveContainerSettingsM2tsSettings.
        :param audio_stream_type: The audio_stream_type of this ArchiveContainerSettingsM2tsSettings.
        :param bitrate: The bitrate of this ArchiveContainerSettingsM2tsSettings.
        :param buffer_model: The buffer_model of this ArchiveContainerSettingsM2tsSettings.
        :param cc_descriptor: The cc_descriptor of this ArchiveContainerSettingsM2tsSettings.
        :param dvb_nit_settings: The dvb_nit_settings of this ArchiveContainerSettingsM2tsSettings.
        :param dvb_sdt_settings: The dvb_sdt_settings of this ArchiveContainerSettingsM2tsSettings.
        :param dvb_sub_pids: The dvb_sub_pids of this ArchiveContainerSettingsM2tsSettings.
        :param dvb_tdt_settings: The dvb_tdt_settings of this ArchiveContainerSettingsM2tsSettings.
        :param dvb_teletext_pid: The dvb_teletext_pid of this ArchiveContainerSettingsM2tsSettings.
        :param ebif: The ebif of this ArchiveContainerSettingsM2tsSettings.
        :param ebp_audio_interval: The ebp_audio_interval of this ArchiveContainerSettingsM2tsSettings.
        :param ebp_lookahead_ms: The ebp_lookahead_ms of this ArchiveContainerSettingsM2tsSettings.
        :param ebp_placement: The ebp_placement of this ArchiveContainerSettingsM2tsSettings.
        :param ecm_pid: The ecm_pid of this ArchiveContainerSettingsM2tsSettings.
        :param es_rate_in_pes: The es_rate_in_pes of this ArchiveContainerSettingsM2tsSettings.
        :param etv_platform_pid: The etv_platform_pid of this ArchiveContainerSettingsM2tsSettings.
        :param etv_signal_pid: The etv_signal_pid of this ArchiveContainerSettingsM2tsSettings.
        :param fragment_time: The fragment_time of this ArchiveContainerSettingsM2tsSettings.
        :param klv: The klv of this ArchiveContainerSettingsM2tsSettings.
        :param klv_data_pids: The klv_data_pids of this ArchiveContainerSettingsM2tsSettings.
        :param nielsen_id3_behavior: The nielsen_id3_behavior of this ArchiveContainerSettingsM2tsSettings.
        :param null_packet_bitrate: The null_packet_bitrate of this ArchiveContainerSettingsM2tsSettings.
        :param pat_interval: The pat_interval of this ArchiveContainerSettingsM2tsSettings.
        :param pcr_control: The pcr_control of this ArchiveContainerSettingsM2tsSettings.
        :param pcr_period: The pcr_period of this ArchiveContainerSettingsM2tsSettings.
        :param pcr_pid: The pcr_pid of this ArchiveContainerSettingsM2tsSettings.
        :param pmt_interval: The pmt_interval of this ArchiveContainerSettingsM2tsSettings.
        :param pmt_pid: The pmt_pid of this ArchiveContainerSettingsM2tsSettings.
        :param program_num: The program_num of this ArchiveContainerSettingsM2tsSettings.
        :param rate_mode: The rate_mode of this ArchiveContainerSettingsM2tsSettings.
        :param scte27_pids: The scte27_pids of this ArchiveContainerSettingsM2tsSettings.
        :param scte35_control: The scte35_control of this ArchiveContainerSettingsM2tsSettings.
        :param scte35_pid: The scte35_pid of this ArchiveContainerSettingsM2tsSettings.
        :param segmentation_markers: The segmentation_markers of this ArchiveContainerSettingsM2tsSettings.
        :param segmentation_style: The segmentation_style of this ArchiveContainerSettingsM2tsSettings.
        :param segmentation_time: The segmentation_time of this ArchiveContainerSettingsM2tsSettings.
        :param timed_metadata_behavior: The timed_metadata_behavior of this ArchiveContainerSettingsM2tsSettings.
        :param timed_metadata_pid: The timed_metadata_pid of this ArchiveContainerSettingsM2tsSettings.
        :param transport_stream_id: The transport_stream_id of this ArchiveContainerSettingsM2tsSettings.
        :param video_pid: The video_pid of this ArchiveContainerSettingsM2tsSettings.
        :param scte35_preroll_pullup_milliseconds: The scte35_preroll_pullup_milliseconds of this ArchiveContainerSettingsM2tsSettings.
        """
        self.openapi_types = {
            'absent_input_audio_behavior': M2tsAbsentInputAudioBehavior,
            'arib': M2tsArib,
            'arib_captions_pid': str,
            'arib_captions_pid_control': M2tsAribCaptionsPidControl,
            'audio_buffer_model': M2tsAudioBufferModel,
            'audio_frames_per_pes': int,
            'audio_pids': str,
            'audio_stream_type': M2tsAudioStreamType,
            'bitrate': int,
            'buffer_model': M2tsBufferModel,
            'cc_descriptor': M2tsCcDescriptor,
            'dvb_nit_settings': M2tsSettingsDvbNitSettings,
            'dvb_sdt_settings': M2tsSettingsDvbSdtSettings,
            'dvb_sub_pids': str,
            'dvb_tdt_settings': M2tsSettingsDvbTdtSettings,
            'dvb_teletext_pid': str,
            'ebif': M2tsEbifControl,
            'ebp_audio_interval': M2tsAudioInterval,
            'ebp_lookahead_ms': int,
            'ebp_placement': M2tsEbpPlacement,
            'ecm_pid': str,
            'es_rate_in_pes': M2tsEsRateInPes,
            'etv_platform_pid': str,
            'etv_signal_pid': str,
            'fragment_time': float,
            'klv': M2tsKlv,
            'klv_data_pids': str,
            'nielsen_id3_behavior': M2tsNielsenId3Behavior,
            'null_packet_bitrate': float,
            'pat_interval': int,
            'pcr_control': M2tsPcrControl,
            'pcr_period': int,
            'pcr_pid': str,
            'pmt_interval': int,
            'pmt_pid': str,
            'program_num': int,
            'rate_mode': M2tsRateMode,
            'scte27_pids': str,
            'scte35_control': M2tsScte35Control,
            'scte35_pid': str,
            'segmentation_markers': M2tsSegmentationMarkers,
            'segmentation_style': M2tsSegmentationStyle,
            'segmentation_time': float,
            'timed_metadata_behavior': M2tsTimedMetadataBehavior,
            'timed_metadata_pid': str,
            'transport_stream_id': int,
            'video_pid': str,
            'scte35_preroll_pullup_milliseconds': float
        }

        self.attribute_map = {
            'absent_input_audio_behavior': 'AbsentInputAudioBehavior',
            'arib': 'Arib',
            'arib_captions_pid': 'AribCaptionsPid',
            'arib_captions_pid_control': 'AribCaptionsPidControl',
            'audio_buffer_model': 'AudioBufferModel',
            'audio_frames_per_pes': 'AudioFramesPerPes',
            'audio_pids': 'AudioPids',
            'audio_stream_type': 'AudioStreamType',
            'bitrate': 'Bitrate',
            'buffer_model': 'BufferModel',
            'cc_descriptor': 'CcDescriptor',
            'dvb_nit_settings': 'DvbNitSettings',
            'dvb_sdt_settings': 'DvbSdtSettings',
            'dvb_sub_pids': 'DvbSubPids',
            'dvb_tdt_settings': 'DvbTdtSettings',
            'dvb_teletext_pid': 'DvbTeletextPid',
            'ebif': 'Ebif',
            'ebp_audio_interval': 'EbpAudioInterval',
            'ebp_lookahead_ms': 'EbpLookaheadMs',
            'ebp_placement': 'EbpPlacement',
            'ecm_pid': 'EcmPid',
            'es_rate_in_pes': 'EsRateInPes',
            'etv_platform_pid': 'EtvPlatformPid',
            'etv_signal_pid': 'EtvSignalPid',
            'fragment_time': 'FragmentTime',
            'klv': 'Klv',
            'klv_data_pids': 'KlvDataPids',
            'nielsen_id3_behavior': 'NielsenId3Behavior',
            'null_packet_bitrate': 'NullPacketBitrate',
            'pat_interval': 'PatInterval',
            'pcr_control': 'PcrControl',
            'pcr_period': 'PcrPeriod',
            'pcr_pid': 'PcrPid',
            'pmt_interval': 'PmtInterval',
            'pmt_pid': 'PmtPid',
            'program_num': 'ProgramNum',
            'rate_mode': 'RateMode',
            'scte27_pids': 'Scte27Pids',
            'scte35_control': 'Scte35Control',
            'scte35_pid': 'Scte35Pid',
            'segmentation_markers': 'SegmentationMarkers',
            'segmentation_style': 'SegmentationStyle',
            'segmentation_time': 'SegmentationTime',
            'timed_metadata_behavior': 'TimedMetadataBehavior',
            'timed_metadata_pid': 'TimedMetadataPid',
            'transport_stream_id': 'TransportStreamId',
            'video_pid': 'VideoPid',
            'scte35_preroll_pullup_milliseconds': 'Scte35PrerollPullupMilliseconds'
        }

        self._absent_input_audio_behavior = absent_input_audio_behavior
        self._arib = arib
        self._arib_captions_pid = arib_captions_pid
        self._arib_captions_pid_control = arib_captions_pid_control
        self._audio_buffer_model = audio_buffer_model
        self._audio_frames_per_pes = audio_frames_per_pes
        self._audio_pids = audio_pids
        self._audio_stream_type = audio_stream_type
        self._bitrate = bitrate
        self._buffer_model = buffer_model
        self._cc_descriptor = cc_descriptor
        self._dvb_nit_settings = dvb_nit_settings
        self._dvb_sdt_settings = dvb_sdt_settings
        self._dvb_sub_pids = dvb_sub_pids
        self._dvb_tdt_settings = dvb_tdt_settings
        self._dvb_teletext_pid = dvb_teletext_pid
        self._ebif = ebif
        self._ebp_audio_interval = ebp_audio_interval
        self._ebp_lookahead_ms = ebp_lookahead_ms
        self._ebp_placement = ebp_placement
        self._ecm_pid = ecm_pid
        self._es_rate_in_pes = es_rate_in_pes
        self._etv_platform_pid = etv_platform_pid
        self._etv_signal_pid = etv_signal_pid
        self._fragment_time = fragment_time
        self._klv = klv
        self._klv_data_pids = klv_data_pids
        self._nielsen_id3_behavior = nielsen_id3_behavior
        self._null_packet_bitrate = null_packet_bitrate
        self._pat_interval = pat_interval
        self._pcr_control = pcr_control
        self._pcr_period = pcr_period
        self._pcr_pid = pcr_pid
        self._pmt_interval = pmt_interval
        self._pmt_pid = pmt_pid
        self._program_num = program_num
        self._rate_mode = rate_mode
        self._scte27_pids = scte27_pids
        self._scte35_control = scte35_control
        self._scte35_pid = scte35_pid
        self._segmentation_markers = segmentation_markers
        self._segmentation_style = segmentation_style
        self._segmentation_time = segmentation_time
        self._timed_metadata_behavior = timed_metadata_behavior
        self._timed_metadata_pid = timed_metadata_pid
        self._transport_stream_id = transport_stream_id
        self._video_pid = video_pid
        self._scte35_preroll_pullup_milliseconds = scte35_preroll_pullup_milliseconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArchiveContainerSettingsM2tsSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArchiveContainerSettings_M2tsSettings of this ArchiveContainerSettingsM2tsSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def absent_input_audio_behavior(self):
        """Gets the absent_input_audio_behavior of this ArchiveContainerSettingsM2tsSettings.


        :return: The absent_input_audio_behavior of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsAbsentInputAudioBehavior
        """
        return self._absent_input_audio_behavior

    @absent_input_audio_behavior.setter
    def absent_input_audio_behavior(self, absent_input_audio_behavior):
        """Sets the absent_input_audio_behavior of this ArchiveContainerSettingsM2tsSettings.


        :param absent_input_audio_behavior: The absent_input_audio_behavior of this ArchiveContainerSettingsM2tsSettings.
        :type absent_input_audio_behavior: M2tsAbsentInputAudioBehavior
        """

        self._absent_input_audio_behavior = absent_input_audio_behavior

    @property
    def arib(self):
        """Gets the arib of this ArchiveContainerSettingsM2tsSettings.


        :return: The arib of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsArib
        """
        return self._arib

    @arib.setter
    def arib(self, arib):
        """Sets the arib of this ArchiveContainerSettingsM2tsSettings.


        :param arib: The arib of this ArchiveContainerSettingsM2tsSettings.
        :type arib: M2tsArib
        """

        self._arib = arib

    @property
    def arib_captions_pid(self):
        """Gets the arib_captions_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The arib_captions_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._arib_captions_pid

    @arib_captions_pid.setter
    def arib_captions_pid(self, arib_captions_pid):
        """Sets the arib_captions_pid of this ArchiveContainerSettingsM2tsSettings.


        :param arib_captions_pid: The arib_captions_pid of this ArchiveContainerSettingsM2tsSettings.
        :type arib_captions_pid: str
        """

        self._arib_captions_pid = arib_captions_pid

    @property
    def arib_captions_pid_control(self):
        """Gets the arib_captions_pid_control of this ArchiveContainerSettingsM2tsSettings.


        :return: The arib_captions_pid_control of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsAribCaptionsPidControl
        """
        return self._arib_captions_pid_control

    @arib_captions_pid_control.setter
    def arib_captions_pid_control(self, arib_captions_pid_control):
        """Sets the arib_captions_pid_control of this ArchiveContainerSettingsM2tsSettings.


        :param arib_captions_pid_control: The arib_captions_pid_control of this ArchiveContainerSettingsM2tsSettings.
        :type arib_captions_pid_control: M2tsAribCaptionsPidControl
        """

        self._arib_captions_pid_control = arib_captions_pid_control

    @property
    def audio_buffer_model(self):
        """Gets the audio_buffer_model of this ArchiveContainerSettingsM2tsSettings.


        :return: The audio_buffer_model of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsAudioBufferModel
        """
        return self._audio_buffer_model

    @audio_buffer_model.setter
    def audio_buffer_model(self, audio_buffer_model):
        """Sets the audio_buffer_model of this ArchiveContainerSettingsM2tsSettings.


        :param audio_buffer_model: The audio_buffer_model of this ArchiveContainerSettingsM2tsSettings.
        :type audio_buffer_model: M2tsAudioBufferModel
        """

        self._audio_buffer_model = audio_buffer_model

    @property
    def audio_frames_per_pes(self):
        """Gets the audio_frames_per_pes of this ArchiveContainerSettingsM2tsSettings.


        :return: The audio_frames_per_pes of this ArchiveContainerSettingsM2tsSettings.
        :rtype: int
        """
        return self._audio_frames_per_pes

    @audio_frames_per_pes.setter
    def audio_frames_per_pes(self, audio_frames_per_pes):
        """Sets the audio_frames_per_pes of this ArchiveContainerSettingsM2tsSettings.


        :param audio_frames_per_pes: The audio_frames_per_pes of this ArchiveContainerSettingsM2tsSettings.
        :type audio_frames_per_pes: int
        """

        self._audio_frames_per_pes = audio_frames_per_pes

    @property
    def audio_pids(self):
        """Gets the audio_pids of this ArchiveContainerSettingsM2tsSettings.


        :return: The audio_pids of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._audio_pids

    @audio_pids.setter
    def audio_pids(self, audio_pids):
        """Sets the audio_pids of this ArchiveContainerSettingsM2tsSettings.


        :param audio_pids: The audio_pids of this ArchiveContainerSettingsM2tsSettings.
        :type audio_pids: str
        """

        self._audio_pids = audio_pids

    @property
    def audio_stream_type(self):
        """Gets the audio_stream_type of this ArchiveContainerSettingsM2tsSettings.


        :return: The audio_stream_type of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsAudioStreamType
        """
        return self._audio_stream_type

    @audio_stream_type.setter
    def audio_stream_type(self, audio_stream_type):
        """Sets the audio_stream_type of this ArchiveContainerSettingsM2tsSettings.


        :param audio_stream_type: The audio_stream_type of this ArchiveContainerSettingsM2tsSettings.
        :type audio_stream_type: M2tsAudioStreamType
        """

        self._audio_stream_type = audio_stream_type

    @property
    def bitrate(self):
        """Gets the bitrate of this ArchiveContainerSettingsM2tsSettings.


        :return: The bitrate of this ArchiveContainerSettingsM2tsSettings.
        :rtype: int
        """
        return self._bitrate

    @bitrate.setter
    def bitrate(self, bitrate):
        """Sets the bitrate of this ArchiveContainerSettingsM2tsSettings.


        :param bitrate: The bitrate of this ArchiveContainerSettingsM2tsSettings.
        :type bitrate: int
        """

        self._bitrate = bitrate

    @property
    def buffer_model(self):
        """Gets the buffer_model of this ArchiveContainerSettingsM2tsSettings.


        :return: The buffer_model of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsBufferModel
        """
        return self._buffer_model

    @buffer_model.setter
    def buffer_model(self, buffer_model):
        """Sets the buffer_model of this ArchiveContainerSettingsM2tsSettings.


        :param buffer_model: The buffer_model of this ArchiveContainerSettingsM2tsSettings.
        :type buffer_model: M2tsBufferModel
        """

        self._buffer_model = buffer_model

    @property
    def cc_descriptor(self):
        """Gets the cc_descriptor of this ArchiveContainerSettingsM2tsSettings.


        :return: The cc_descriptor of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsCcDescriptor
        """
        return self._cc_descriptor

    @cc_descriptor.setter
    def cc_descriptor(self, cc_descriptor):
        """Sets the cc_descriptor of this ArchiveContainerSettingsM2tsSettings.


        :param cc_descriptor: The cc_descriptor of this ArchiveContainerSettingsM2tsSettings.
        :type cc_descriptor: M2tsCcDescriptor
        """

        self._cc_descriptor = cc_descriptor

    @property
    def dvb_nit_settings(self):
        """Gets the dvb_nit_settings of this ArchiveContainerSettingsM2tsSettings.


        :return: The dvb_nit_settings of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsSettingsDvbNitSettings
        """
        return self._dvb_nit_settings

    @dvb_nit_settings.setter
    def dvb_nit_settings(self, dvb_nit_settings):
        """Sets the dvb_nit_settings of this ArchiveContainerSettingsM2tsSettings.


        :param dvb_nit_settings: The dvb_nit_settings of this ArchiveContainerSettingsM2tsSettings.
        :type dvb_nit_settings: M2tsSettingsDvbNitSettings
        """

        self._dvb_nit_settings = dvb_nit_settings

    @property
    def dvb_sdt_settings(self):
        """Gets the dvb_sdt_settings of this ArchiveContainerSettingsM2tsSettings.


        :return: The dvb_sdt_settings of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsSettingsDvbSdtSettings
        """
        return self._dvb_sdt_settings

    @dvb_sdt_settings.setter
    def dvb_sdt_settings(self, dvb_sdt_settings):
        """Sets the dvb_sdt_settings of this ArchiveContainerSettingsM2tsSettings.


        :param dvb_sdt_settings: The dvb_sdt_settings of this ArchiveContainerSettingsM2tsSettings.
        :type dvb_sdt_settings: M2tsSettingsDvbSdtSettings
        """

        self._dvb_sdt_settings = dvb_sdt_settings

    @property
    def dvb_sub_pids(self):
        """Gets the dvb_sub_pids of this ArchiveContainerSettingsM2tsSettings.


        :return: The dvb_sub_pids of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._dvb_sub_pids

    @dvb_sub_pids.setter
    def dvb_sub_pids(self, dvb_sub_pids):
        """Sets the dvb_sub_pids of this ArchiveContainerSettingsM2tsSettings.


        :param dvb_sub_pids: The dvb_sub_pids of this ArchiveContainerSettingsM2tsSettings.
        :type dvb_sub_pids: str
        """

        self._dvb_sub_pids = dvb_sub_pids

    @property
    def dvb_tdt_settings(self):
        """Gets the dvb_tdt_settings of this ArchiveContainerSettingsM2tsSettings.


        :return: The dvb_tdt_settings of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsSettingsDvbTdtSettings
        """
        return self._dvb_tdt_settings

    @dvb_tdt_settings.setter
    def dvb_tdt_settings(self, dvb_tdt_settings):
        """Sets the dvb_tdt_settings of this ArchiveContainerSettingsM2tsSettings.


        :param dvb_tdt_settings: The dvb_tdt_settings of this ArchiveContainerSettingsM2tsSettings.
        :type dvb_tdt_settings: M2tsSettingsDvbTdtSettings
        """

        self._dvb_tdt_settings = dvb_tdt_settings

    @property
    def dvb_teletext_pid(self):
        """Gets the dvb_teletext_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The dvb_teletext_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._dvb_teletext_pid

    @dvb_teletext_pid.setter
    def dvb_teletext_pid(self, dvb_teletext_pid):
        """Sets the dvb_teletext_pid of this ArchiveContainerSettingsM2tsSettings.


        :param dvb_teletext_pid: The dvb_teletext_pid of this ArchiveContainerSettingsM2tsSettings.
        :type dvb_teletext_pid: str
        """

        self._dvb_teletext_pid = dvb_teletext_pid

    @property
    def ebif(self):
        """Gets the ebif of this ArchiveContainerSettingsM2tsSettings.


        :return: The ebif of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsEbifControl
        """
        return self._ebif

    @ebif.setter
    def ebif(self, ebif):
        """Sets the ebif of this ArchiveContainerSettingsM2tsSettings.


        :param ebif: The ebif of this ArchiveContainerSettingsM2tsSettings.
        :type ebif: M2tsEbifControl
        """

        self._ebif = ebif

    @property
    def ebp_audio_interval(self):
        """Gets the ebp_audio_interval of this ArchiveContainerSettingsM2tsSettings.


        :return: The ebp_audio_interval of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsAudioInterval
        """
        return self._ebp_audio_interval

    @ebp_audio_interval.setter
    def ebp_audio_interval(self, ebp_audio_interval):
        """Sets the ebp_audio_interval of this ArchiveContainerSettingsM2tsSettings.


        :param ebp_audio_interval: The ebp_audio_interval of this ArchiveContainerSettingsM2tsSettings.
        :type ebp_audio_interval: M2tsAudioInterval
        """

        self._ebp_audio_interval = ebp_audio_interval

    @property
    def ebp_lookahead_ms(self):
        """Gets the ebp_lookahead_ms of this ArchiveContainerSettingsM2tsSettings.


        :return: The ebp_lookahead_ms of this ArchiveContainerSettingsM2tsSettings.
        :rtype: int
        """
        return self._ebp_lookahead_ms

    @ebp_lookahead_ms.setter
    def ebp_lookahead_ms(self, ebp_lookahead_ms):
        """Sets the ebp_lookahead_ms of this ArchiveContainerSettingsM2tsSettings.


        :param ebp_lookahead_ms: The ebp_lookahead_ms of this ArchiveContainerSettingsM2tsSettings.
        :type ebp_lookahead_ms: int
        """

        self._ebp_lookahead_ms = ebp_lookahead_ms

    @property
    def ebp_placement(self):
        """Gets the ebp_placement of this ArchiveContainerSettingsM2tsSettings.


        :return: The ebp_placement of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsEbpPlacement
        """
        return self._ebp_placement

    @ebp_placement.setter
    def ebp_placement(self, ebp_placement):
        """Sets the ebp_placement of this ArchiveContainerSettingsM2tsSettings.


        :param ebp_placement: The ebp_placement of this ArchiveContainerSettingsM2tsSettings.
        :type ebp_placement: M2tsEbpPlacement
        """

        self._ebp_placement = ebp_placement

    @property
    def ecm_pid(self):
        """Gets the ecm_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The ecm_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._ecm_pid

    @ecm_pid.setter
    def ecm_pid(self, ecm_pid):
        """Sets the ecm_pid of this ArchiveContainerSettingsM2tsSettings.


        :param ecm_pid: The ecm_pid of this ArchiveContainerSettingsM2tsSettings.
        :type ecm_pid: str
        """

        self._ecm_pid = ecm_pid

    @property
    def es_rate_in_pes(self):
        """Gets the es_rate_in_pes of this ArchiveContainerSettingsM2tsSettings.


        :return: The es_rate_in_pes of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsEsRateInPes
        """
        return self._es_rate_in_pes

    @es_rate_in_pes.setter
    def es_rate_in_pes(self, es_rate_in_pes):
        """Sets the es_rate_in_pes of this ArchiveContainerSettingsM2tsSettings.


        :param es_rate_in_pes: The es_rate_in_pes of this ArchiveContainerSettingsM2tsSettings.
        :type es_rate_in_pes: M2tsEsRateInPes
        """

        self._es_rate_in_pes = es_rate_in_pes

    @property
    def etv_platform_pid(self):
        """Gets the etv_platform_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The etv_platform_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._etv_platform_pid

    @etv_platform_pid.setter
    def etv_platform_pid(self, etv_platform_pid):
        """Sets the etv_platform_pid of this ArchiveContainerSettingsM2tsSettings.


        :param etv_platform_pid: The etv_platform_pid of this ArchiveContainerSettingsM2tsSettings.
        :type etv_platform_pid: str
        """

        self._etv_platform_pid = etv_platform_pid

    @property
    def etv_signal_pid(self):
        """Gets the etv_signal_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The etv_signal_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._etv_signal_pid

    @etv_signal_pid.setter
    def etv_signal_pid(self, etv_signal_pid):
        """Sets the etv_signal_pid of this ArchiveContainerSettingsM2tsSettings.


        :param etv_signal_pid: The etv_signal_pid of this ArchiveContainerSettingsM2tsSettings.
        :type etv_signal_pid: str
        """

        self._etv_signal_pid = etv_signal_pid

    @property
    def fragment_time(self):
        """Gets the fragment_time of this ArchiveContainerSettingsM2tsSettings.


        :return: The fragment_time of this ArchiveContainerSettingsM2tsSettings.
        :rtype: float
        """
        return self._fragment_time

    @fragment_time.setter
    def fragment_time(self, fragment_time):
        """Sets the fragment_time of this ArchiveContainerSettingsM2tsSettings.


        :param fragment_time: The fragment_time of this ArchiveContainerSettingsM2tsSettings.
        :type fragment_time: float
        """

        self._fragment_time = fragment_time

    @property
    def klv(self):
        """Gets the klv of this ArchiveContainerSettingsM2tsSettings.


        :return: The klv of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsKlv
        """
        return self._klv

    @klv.setter
    def klv(self, klv):
        """Sets the klv of this ArchiveContainerSettingsM2tsSettings.


        :param klv: The klv of this ArchiveContainerSettingsM2tsSettings.
        :type klv: M2tsKlv
        """

        self._klv = klv

    @property
    def klv_data_pids(self):
        """Gets the klv_data_pids of this ArchiveContainerSettingsM2tsSettings.


        :return: The klv_data_pids of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._klv_data_pids

    @klv_data_pids.setter
    def klv_data_pids(self, klv_data_pids):
        """Sets the klv_data_pids of this ArchiveContainerSettingsM2tsSettings.


        :param klv_data_pids: The klv_data_pids of this ArchiveContainerSettingsM2tsSettings.
        :type klv_data_pids: str
        """

        self._klv_data_pids = klv_data_pids

    @property
    def nielsen_id3_behavior(self):
        """Gets the nielsen_id3_behavior of this ArchiveContainerSettingsM2tsSettings.


        :return: The nielsen_id3_behavior of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsNielsenId3Behavior
        """
        return self._nielsen_id3_behavior

    @nielsen_id3_behavior.setter
    def nielsen_id3_behavior(self, nielsen_id3_behavior):
        """Sets the nielsen_id3_behavior of this ArchiveContainerSettingsM2tsSettings.


        :param nielsen_id3_behavior: The nielsen_id3_behavior of this ArchiveContainerSettingsM2tsSettings.
        :type nielsen_id3_behavior: M2tsNielsenId3Behavior
        """

        self._nielsen_id3_behavior = nielsen_id3_behavior

    @property
    def null_packet_bitrate(self):
        """Gets the null_packet_bitrate of this ArchiveContainerSettingsM2tsSettings.


        :return: The null_packet_bitrate of this ArchiveContainerSettingsM2tsSettings.
        :rtype: float
        """
        return self._null_packet_bitrate

    @null_packet_bitrate.setter
    def null_packet_bitrate(self, null_packet_bitrate):
        """Sets the null_packet_bitrate of this ArchiveContainerSettingsM2tsSettings.


        :param null_packet_bitrate: The null_packet_bitrate of this ArchiveContainerSettingsM2tsSettings.
        :type null_packet_bitrate: float
        """

        self._null_packet_bitrate = null_packet_bitrate

    @property
    def pat_interval(self):
        """Gets the pat_interval of this ArchiveContainerSettingsM2tsSettings.


        :return: The pat_interval of this ArchiveContainerSettingsM2tsSettings.
        :rtype: int
        """
        return self._pat_interval

    @pat_interval.setter
    def pat_interval(self, pat_interval):
        """Sets the pat_interval of this ArchiveContainerSettingsM2tsSettings.


        :param pat_interval: The pat_interval of this ArchiveContainerSettingsM2tsSettings.
        :type pat_interval: int
        """

        self._pat_interval = pat_interval

    @property
    def pcr_control(self):
        """Gets the pcr_control of this ArchiveContainerSettingsM2tsSettings.


        :return: The pcr_control of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsPcrControl
        """
        return self._pcr_control

    @pcr_control.setter
    def pcr_control(self, pcr_control):
        """Sets the pcr_control of this ArchiveContainerSettingsM2tsSettings.


        :param pcr_control: The pcr_control of this ArchiveContainerSettingsM2tsSettings.
        :type pcr_control: M2tsPcrControl
        """

        self._pcr_control = pcr_control

    @property
    def pcr_period(self):
        """Gets the pcr_period of this ArchiveContainerSettingsM2tsSettings.


        :return: The pcr_period of this ArchiveContainerSettingsM2tsSettings.
        :rtype: int
        """
        return self._pcr_period

    @pcr_period.setter
    def pcr_period(self, pcr_period):
        """Sets the pcr_period of this ArchiveContainerSettingsM2tsSettings.


        :param pcr_period: The pcr_period of this ArchiveContainerSettingsM2tsSettings.
        :type pcr_period: int
        """

        self._pcr_period = pcr_period

    @property
    def pcr_pid(self):
        """Gets the pcr_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The pcr_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._pcr_pid

    @pcr_pid.setter
    def pcr_pid(self, pcr_pid):
        """Sets the pcr_pid of this ArchiveContainerSettingsM2tsSettings.


        :param pcr_pid: The pcr_pid of this ArchiveContainerSettingsM2tsSettings.
        :type pcr_pid: str
        """

        self._pcr_pid = pcr_pid

    @property
    def pmt_interval(self):
        """Gets the pmt_interval of this ArchiveContainerSettingsM2tsSettings.


        :return: The pmt_interval of this ArchiveContainerSettingsM2tsSettings.
        :rtype: int
        """
        return self._pmt_interval

    @pmt_interval.setter
    def pmt_interval(self, pmt_interval):
        """Sets the pmt_interval of this ArchiveContainerSettingsM2tsSettings.


        :param pmt_interval: The pmt_interval of this ArchiveContainerSettingsM2tsSettings.
        :type pmt_interval: int
        """

        self._pmt_interval = pmt_interval

    @property
    def pmt_pid(self):
        """Gets the pmt_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The pmt_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._pmt_pid

    @pmt_pid.setter
    def pmt_pid(self, pmt_pid):
        """Sets the pmt_pid of this ArchiveContainerSettingsM2tsSettings.


        :param pmt_pid: The pmt_pid of this ArchiveContainerSettingsM2tsSettings.
        :type pmt_pid: str
        """

        self._pmt_pid = pmt_pid

    @property
    def program_num(self):
        """Gets the program_num of this ArchiveContainerSettingsM2tsSettings.


        :return: The program_num of this ArchiveContainerSettingsM2tsSettings.
        :rtype: int
        """
        return self._program_num

    @program_num.setter
    def program_num(self, program_num):
        """Sets the program_num of this ArchiveContainerSettingsM2tsSettings.


        :param program_num: The program_num of this ArchiveContainerSettingsM2tsSettings.
        :type program_num: int
        """

        self._program_num = program_num

    @property
    def rate_mode(self):
        """Gets the rate_mode of this ArchiveContainerSettingsM2tsSettings.


        :return: The rate_mode of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsRateMode
        """
        return self._rate_mode

    @rate_mode.setter
    def rate_mode(self, rate_mode):
        """Sets the rate_mode of this ArchiveContainerSettingsM2tsSettings.


        :param rate_mode: The rate_mode of this ArchiveContainerSettingsM2tsSettings.
        :type rate_mode: M2tsRateMode
        """

        self._rate_mode = rate_mode

    @property
    def scte27_pids(self):
        """Gets the scte27_pids of this ArchiveContainerSettingsM2tsSettings.


        :return: The scte27_pids of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._scte27_pids

    @scte27_pids.setter
    def scte27_pids(self, scte27_pids):
        """Sets the scte27_pids of this ArchiveContainerSettingsM2tsSettings.


        :param scte27_pids: The scte27_pids of this ArchiveContainerSettingsM2tsSettings.
        :type scte27_pids: str
        """

        self._scte27_pids = scte27_pids

    @property
    def scte35_control(self):
        """Gets the scte35_control of this ArchiveContainerSettingsM2tsSettings.


        :return: The scte35_control of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsScte35Control
        """
        return self._scte35_control

    @scte35_control.setter
    def scte35_control(self, scte35_control):
        """Sets the scte35_control of this ArchiveContainerSettingsM2tsSettings.


        :param scte35_control: The scte35_control of this ArchiveContainerSettingsM2tsSettings.
        :type scte35_control: M2tsScte35Control
        """

        self._scte35_control = scte35_control

    @property
    def scte35_pid(self):
        """Gets the scte35_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The scte35_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._scte35_pid

    @scte35_pid.setter
    def scte35_pid(self, scte35_pid):
        """Sets the scte35_pid of this ArchiveContainerSettingsM2tsSettings.


        :param scte35_pid: The scte35_pid of this ArchiveContainerSettingsM2tsSettings.
        :type scte35_pid: str
        """

        self._scte35_pid = scte35_pid

    @property
    def segmentation_markers(self):
        """Gets the segmentation_markers of this ArchiveContainerSettingsM2tsSettings.


        :return: The segmentation_markers of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsSegmentationMarkers
        """
        return self._segmentation_markers

    @segmentation_markers.setter
    def segmentation_markers(self, segmentation_markers):
        """Sets the segmentation_markers of this ArchiveContainerSettingsM2tsSettings.


        :param segmentation_markers: The segmentation_markers of this ArchiveContainerSettingsM2tsSettings.
        :type segmentation_markers: M2tsSegmentationMarkers
        """

        self._segmentation_markers = segmentation_markers

    @property
    def segmentation_style(self):
        """Gets the segmentation_style of this ArchiveContainerSettingsM2tsSettings.


        :return: The segmentation_style of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsSegmentationStyle
        """
        return self._segmentation_style

    @segmentation_style.setter
    def segmentation_style(self, segmentation_style):
        """Sets the segmentation_style of this ArchiveContainerSettingsM2tsSettings.


        :param segmentation_style: The segmentation_style of this ArchiveContainerSettingsM2tsSettings.
        :type segmentation_style: M2tsSegmentationStyle
        """

        self._segmentation_style = segmentation_style

    @property
    def segmentation_time(self):
        """Gets the segmentation_time of this ArchiveContainerSettingsM2tsSettings.


        :return: The segmentation_time of this ArchiveContainerSettingsM2tsSettings.
        :rtype: float
        """
        return self._segmentation_time

    @segmentation_time.setter
    def segmentation_time(self, segmentation_time):
        """Sets the segmentation_time of this ArchiveContainerSettingsM2tsSettings.


        :param segmentation_time: The segmentation_time of this ArchiveContainerSettingsM2tsSettings.
        :type segmentation_time: float
        """

        self._segmentation_time = segmentation_time

    @property
    def timed_metadata_behavior(self):
        """Gets the timed_metadata_behavior of this ArchiveContainerSettingsM2tsSettings.


        :return: The timed_metadata_behavior of this ArchiveContainerSettingsM2tsSettings.
        :rtype: M2tsTimedMetadataBehavior
        """
        return self._timed_metadata_behavior

    @timed_metadata_behavior.setter
    def timed_metadata_behavior(self, timed_metadata_behavior):
        """Sets the timed_metadata_behavior of this ArchiveContainerSettingsM2tsSettings.


        :param timed_metadata_behavior: The timed_metadata_behavior of this ArchiveContainerSettingsM2tsSettings.
        :type timed_metadata_behavior: M2tsTimedMetadataBehavior
        """

        self._timed_metadata_behavior = timed_metadata_behavior

    @property
    def timed_metadata_pid(self):
        """Gets the timed_metadata_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The timed_metadata_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._timed_metadata_pid

    @timed_metadata_pid.setter
    def timed_metadata_pid(self, timed_metadata_pid):
        """Sets the timed_metadata_pid of this ArchiveContainerSettingsM2tsSettings.


        :param timed_metadata_pid: The timed_metadata_pid of this ArchiveContainerSettingsM2tsSettings.
        :type timed_metadata_pid: str
        """

        self._timed_metadata_pid = timed_metadata_pid

    @property
    def transport_stream_id(self):
        """Gets the transport_stream_id of this ArchiveContainerSettingsM2tsSettings.


        :return: The transport_stream_id of this ArchiveContainerSettingsM2tsSettings.
        :rtype: int
        """
        return self._transport_stream_id

    @transport_stream_id.setter
    def transport_stream_id(self, transport_stream_id):
        """Sets the transport_stream_id of this ArchiveContainerSettingsM2tsSettings.


        :param transport_stream_id: The transport_stream_id of this ArchiveContainerSettingsM2tsSettings.
        :type transport_stream_id: int
        """

        self._transport_stream_id = transport_stream_id

    @property
    def video_pid(self):
        """Gets the video_pid of this ArchiveContainerSettingsM2tsSettings.


        :return: The video_pid of this ArchiveContainerSettingsM2tsSettings.
        :rtype: str
        """
        return self._video_pid

    @video_pid.setter
    def video_pid(self, video_pid):
        """Sets the video_pid of this ArchiveContainerSettingsM2tsSettings.


        :param video_pid: The video_pid of this ArchiveContainerSettingsM2tsSettings.
        :type video_pid: str
        """

        self._video_pid = video_pid

    @property
    def scte35_preroll_pullup_milliseconds(self):
        """Gets the scte35_preroll_pullup_milliseconds of this ArchiveContainerSettingsM2tsSettings.


        :return: The scte35_preroll_pullup_milliseconds of this ArchiveContainerSettingsM2tsSettings.
        :rtype: float
        """
        return self._scte35_preroll_pullup_milliseconds

    @scte35_preroll_pullup_milliseconds.setter
    def scte35_preroll_pullup_milliseconds(self, scte35_preroll_pullup_milliseconds):
        """Sets the scte35_preroll_pullup_milliseconds of this ArchiveContainerSettingsM2tsSettings.


        :param scte35_preroll_pullup_milliseconds: The scte35_preroll_pullup_milliseconds of this ArchiveContainerSettingsM2tsSettings.
        :type scte35_preroll_pullup_milliseconds: float
        """

        self._scte35_preroll_pullup_milliseconds = scte35_preroll_pullup_milliseconds
