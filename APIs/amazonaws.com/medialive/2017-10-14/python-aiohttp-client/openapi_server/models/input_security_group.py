# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_security_group_state import InputSecurityGroupState
from openapi_server import util


class InputSecurityGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, id: str=None, inputs: List=None, state: InputSecurityGroupState=None, tags: Dict=None, whitelist_rules: List=None):
        """InputSecurityGroup - a model defined in OpenAPI

        :param arn: The arn of this InputSecurityGroup.
        :param id: The id of this InputSecurityGroup.
        :param inputs: The inputs of this InputSecurityGroup.
        :param state: The state of this InputSecurityGroup.
        :param tags: The tags of this InputSecurityGroup.
        :param whitelist_rules: The whitelist_rules of this InputSecurityGroup.
        """
        self.openapi_types = {
            'arn': str,
            'id': str,
            'inputs': List,
            'state': InputSecurityGroupState,
            'tags': Dict,
            'whitelist_rules': List
        }

        self.attribute_map = {
            'arn': 'Arn',
            'id': 'Id',
            'inputs': 'Inputs',
            'state': 'State',
            'tags': 'Tags',
            'whitelist_rules': 'WhitelistRules'
        }

        self._arn = arn
        self._id = id
        self._inputs = inputs
        self._state = state
        self._tags = tags
        self._whitelist_rules = whitelist_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputSecurityGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputSecurityGroup of this InputSecurityGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this InputSecurityGroup.


        :return: The arn of this InputSecurityGroup.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this InputSecurityGroup.


        :param arn: The arn of this InputSecurityGroup.
        :type arn: str
        """

        self._arn = arn

    @property
    def id(self):
        """Gets the id of this InputSecurityGroup.


        :return: The id of this InputSecurityGroup.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InputSecurityGroup.


        :param id: The id of this InputSecurityGroup.
        :type id: str
        """

        self._id = id

    @property
    def inputs(self):
        """Gets the inputs of this InputSecurityGroup.


        :return: The inputs of this InputSecurityGroup.
        :rtype: List
        """
        return self._inputs

    @inputs.setter
    def inputs(self, inputs):
        """Sets the inputs of this InputSecurityGroup.


        :param inputs: The inputs of this InputSecurityGroup.
        :type inputs: List
        """

        self._inputs = inputs

    @property
    def state(self):
        """Gets the state of this InputSecurityGroup.


        :return: The state of this InputSecurityGroup.
        :rtype: InputSecurityGroupState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this InputSecurityGroup.


        :param state: The state of this InputSecurityGroup.
        :type state: InputSecurityGroupState
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this InputSecurityGroup.


        :return: The tags of this InputSecurityGroup.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this InputSecurityGroup.


        :param tags: The tags of this InputSecurityGroup.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def whitelist_rules(self):
        """Gets the whitelist_rules of this InputSecurityGroup.


        :return: The whitelist_rules of this InputSecurityGroup.
        :rtype: List
        """
        return self._whitelist_rules

    @whitelist_rules.setter
    def whitelist_rules(self, whitelist_rules):
        """Sets the whitelist_rules of this InputSecurityGroup.


        :param whitelist_rules: The whitelist_rules of this InputSecurityGroup.
        :type whitelist_rules: List
        """

        self._whitelist_rules = whitelist_rules
