# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hls_h265_packaging_type import HlsH265PackagingType
from openapi_server.models.hls_output_settings_hls_settings import HlsOutputSettingsHlsSettings
from openapi_server import util


class OutputSettingsHlsOutputSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, h265_packaging_type: HlsH265PackagingType=None, hls_settings: HlsOutputSettingsHlsSettings=None, name_modifier: str=None, segment_modifier: str=None):
        """OutputSettingsHlsOutputSettings - a model defined in OpenAPI

        :param h265_packaging_type: The h265_packaging_type of this OutputSettingsHlsOutputSettings.
        :param hls_settings: The hls_settings of this OutputSettingsHlsOutputSettings.
        :param name_modifier: The name_modifier of this OutputSettingsHlsOutputSettings.
        :param segment_modifier: The segment_modifier of this OutputSettingsHlsOutputSettings.
        """
        self.openapi_types = {
            'h265_packaging_type': HlsH265PackagingType,
            'hls_settings': HlsOutputSettingsHlsSettings,
            'name_modifier': str,
            'segment_modifier': str
        }

        self.attribute_map = {
            'h265_packaging_type': 'H265PackagingType',
            'hls_settings': 'HlsSettings',
            'name_modifier': 'NameModifier',
            'segment_modifier': 'SegmentModifier'
        }

        self._h265_packaging_type = h265_packaging_type
        self._hls_settings = hls_settings
        self._name_modifier = name_modifier
        self._segment_modifier = segment_modifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutputSettingsHlsOutputSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutputSettings_HlsOutputSettings of this OutputSettingsHlsOutputSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def h265_packaging_type(self):
        """Gets the h265_packaging_type of this OutputSettingsHlsOutputSettings.


        :return: The h265_packaging_type of this OutputSettingsHlsOutputSettings.
        :rtype: HlsH265PackagingType
        """
        return self._h265_packaging_type

    @h265_packaging_type.setter
    def h265_packaging_type(self, h265_packaging_type):
        """Sets the h265_packaging_type of this OutputSettingsHlsOutputSettings.


        :param h265_packaging_type: The h265_packaging_type of this OutputSettingsHlsOutputSettings.
        :type h265_packaging_type: HlsH265PackagingType
        """

        self._h265_packaging_type = h265_packaging_type

    @property
    def hls_settings(self):
        """Gets the hls_settings of this OutputSettingsHlsOutputSettings.


        :return: The hls_settings of this OutputSettingsHlsOutputSettings.
        :rtype: HlsOutputSettingsHlsSettings
        """
        return self._hls_settings

    @hls_settings.setter
    def hls_settings(self, hls_settings):
        """Sets the hls_settings of this OutputSettingsHlsOutputSettings.


        :param hls_settings: The hls_settings of this OutputSettingsHlsOutputSettings.
        :type hls_settings: HlsOutputSettingsHlsSettings
        """
        if hls_settings is None:
            raise ValueError("Invalid value for `hls_settings`, must not be `None`")

        self._hls_settings = hls_settings

    @property
    def name_modifier(self):
        """Gets the name_modifier of this OutputSettingsHlsOutputSettings.


        :return: The name_modifier of this OutputSettingsHlsOutputSettings.
        :rtype: str
        """
        return self._name_modifier

    @name_modifier.setter
    def name_modifier(self, name_modifier):
        """Sets the name_modifier of this OutputSettingsHlsOutputSettings.


        :param name_modifier: The name_modifier of this OutputSettingsHlsOutputSettings.
        :type name_modifier: str
        """

        self._name_modifier = name_modifier

    @property
    def segment_modifier(self):
        """Gets the segment_modifier of this OutputSettingsHlsOutputSettings.


        :return: The segment_modifier of this OutputSettingsHlsOutputSettings.
        :rtype: str
        """
        return self._segment_modifier

    @segment_modifier.setter
    def segment_modifier(self, segment_modifier):
        """Sets the segment_modifier of this OutputSettingsHlsOutputSettings.


        :param segment_modifier: The segment_modifier of this OutputSettingsHlsOutputSettings.
        :type segment_modifier: str
        """

        self._segment_modifier = segment_modifier
