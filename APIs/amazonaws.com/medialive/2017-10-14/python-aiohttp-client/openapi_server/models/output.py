# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.output_output_settings import OutputOutputSettings
from openapi_server import util


class Output(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_description_names: List=None, caption_description_names: List=None, output_name: str=None, output_settings: OutputOutputSettings=None, video_description_name: str=None):
        """Output - a model defined in OpenAPI

        :param audio_description_names: The audio_description_names of this Output.
        :param caption_description_names: The caption_description_names of this Output.
        :param output_name: The output_name of this Output.
        :param output_settings: The output_settings of this Output.
        :param video_description_name: The video_description_name of this Output.
        """
        self.openapi_types = {
            'audio_description_names': List,
            'caption_description_names': List,
            'output_name': str,
            'output_settings': OutputOutputSettings,
            'video_description_name': str
        }

        self.attribute_map = {
            'audio_description_names': 'AudioDescriptionNames',
            'caption_description_names': 'CaptionDescriptionNames',
            'output_name': 'OutputName',
            'output_settings': 'OutputSettings',
            'video_description_name': 'VideoDescriptionName'
        }

        self._audio_description_names = audio_description_names
        self._caption_description_names = caption_description_names
        self._output_name = output_name
        self._output_settings = output_settings
        self._video_description_name = video_description_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Output':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Output of this Output.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_description_names(self):
        """Gets the audio_description_names of this Output.


        :return: The audio_description_names of this Output.
        :rtype: List
        """
        return self._audio_description_names

    @audio_description_names.setter
    def audio_description_names(self, audio_description_names):
        """Sets the audio_description_names of this Output.


        :param audio_description_names: The audio_description_names of this Output.
        :type audio_description_names: List
        """

        self._audio_description_names = audio_description_names

    @property
    def caption_description_names(self):
        """Gets the caption_description_names of this Output.


        :return: The caption_description_names of this Output.
        :rtype: List
        """
        return self._caption_description_names

    @caption_description_names.setter
    def caption_description_names(self, caption_description_names):
        """Sets the caption_description_names of this Output.


        :param caption_description_names: The caption_description_names of this Output.
        :type caption_description_names: List
        """

        self._caption_description_names = caption_description_names

    @property
    def output_name(self):
        """Gets the output_name of this Output.


        :return: The output_name of this Output.
        :rtype: str
        """
        return self._output_name

    @output_name.setter
    def output_name(self, output_name):
        """Sets the output_name of this Output.


        :param output_name: The output_name of this Output.
        :type output_name: str
        """

        self._output_name = output_name

    @property
    def output_settings(self):
        """Gets the output_settings of this Output.


        :return: The output_settings of this Output.
        :rtype: OutputOutputSettings
        """
        return self._output_settings

    @output_settings.setter
    def output_settings(self, output_settings):
        """Sets the output_settings of this Output.


        :param output_settings: The output_settings of this Output.
        :type output_settings: OutputOutputSettings
        """
        if output_settings is None:
            raise ValueError("Invalid value for `output_settings`, must not be `None`")

        self._output_settings = output_settings

    @property
    def video_description_name(self):
        """Gets the video_description_name of this Output.


        :return: The video_description_name of this Output.
        :rtype: str
        """
        return self._video_description_name

    @video_description_name.setter
    def video_description_name(self, video_description_name):
        """Sets the video_description_name of this Output.


        :param video_description_name: The video_description_name of this Output.
        :type video_description_name: str
        """

        self._video_description_name = video_description_name
