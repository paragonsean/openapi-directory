# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule_action_schedule_action_settings import ScheduleActionScheduleActionSettings
from openapi_server.models.schedule_action_schedule_action_start_settings import ScheduleActionScheduleActionStartSettings
from openapi_server import util


class ScheduleAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_name: str=None, schedule_action_settings: ScheduleActionScheduleActionSettings=None, schedule_action_start_settings: ScheduleActionScheduleActionStartSettings=None):
        """ScheduleAction - a model defined in OpenAPI

        :param action_name: The action_name of this ScheduleAction.
        :param schedule_action_settings: The schedule_action_settings of this ScheduleAction.
        :param schedule_action_start_settings: The schedule_action_start_settings of this ScheduleAction.
        """
        self.openapi_types = {
            'action_name': str,
            'schedule_action_settings': ScheduleActionScheduleActionSettings,
            'schedule_action_start_settings': ScheduleActionScheduleActionStartSettings
        }

        self.attribute_map = {
            'action_name': 'ActionName',
            'schedule_action_settings': 'ScheduleActionSettings',
            'schedule_action_start_settings': 'ScheduleActionStartSettings'
        }

        self._action_name = action_name
        self._schedule_action_settings = schedule_action_settings
        self._schedule_action_start_settings = schedule_action_start_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduleAction of this ScheduleAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_name(self):
        """Gets the action_name of this ScheduleAction.


        :return: The action_name of this ScheduleAction.
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this ScheduleAction.


        :param action_name: The action_name of this ScheduleAction.
        :type action_name: str
        """
        if action_name is None:
            raise ValueError("Invalid value for `action_name`, must not be `None`")

        self._action_name = action_name

    @property
    def schedule_action_settings(self):
        """Gets the schedule_action_settings of this ScheduleAction.


        :return: The schedule_action_settings of this ScheduleAction.
        :rtype: ScheduleActionScheduleActionSettings
        """
        return self._schedule_action_settings

    @schedule_action_settings.setter
    def schedule_action_settings(self, schedule_action_settings):
        """Sets the schedule_action_settings of this ScheduleAction.


        :param schedule_action_settings: The schedule_action_settings of this ScheduleAction.
        :type schedule_action_settings: ScheduleActionScheduleActionSettings
        """
        if schedule_action_settings is None:
            raise ValueError("Invalid value for `schedule_action_settings`, must not be `None`")

        self._schedule_action_settings = schedule_action_settings

    @property
    def schedule_action_start_settings(self):
        """Gets the schedule_action_start_settings of this ScheduleAction.


        :return: The schedule_action_start_settings of this ScheduleAction.
        :rtype: ScheduleActionScheduleActionStartSettings
        """
        return self._schedule_action_start_settings

    @schedule_action_start_settings.setter
    def schedule_action_start_settings(self, schedule_action_start_settings):
        """Sets the schedule_action_start_settings of this ScheduleAction.


        :param schedule_action_start_settings: The schedule_action_start_settings of this ScheduleAction.
        :type schedule_action_start_settings: ScheduleActionScheduleActionStartSettings
        """
        if schedule_action_start_settings is None:
            raise ValueError("Invalid value for `schedule_action_start_settings`, must not be `None`")

        self._schedule_action_start_settings = schedule_action_start_settings
