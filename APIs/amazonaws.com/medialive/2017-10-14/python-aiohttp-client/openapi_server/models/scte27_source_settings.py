# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scte27_ocr_language import Scte27OcrLanguage
from openapi_server import util


class Scte27SourceSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ocr_language: Scte27OcrLanguage=None, pid: int=None):
        """Scte27SourceSettings - a model defined in OpenAPI

        :param ocr_language: The ocr_language of this Scte27SourceSettings.
        :param pid: The pid of this Scte27SourceSettings.
        """
        self.openapi_types = {
            'ocr_language': Scte27OcrLanguage,
            'pid': int
        }

        self.attribute_map = {
            'ocr_language': 'OcrLanguage',
            'pid': 'Pid'
        }

        self._ocr_language = ocr_language
        self._pid = pid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Scte27SourceSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Scte27SourceSettings of this Scte27SourceSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ocr_language(self):
        """Gets the ocr_language of this Scte27SourceSettings.


        :return: The ocr_language of this Scte27SourceSettings.
        :rtype: Scte27OcrLanguage
        """
        return self._ocr_language

    @ocr_language.setter
    def ocr_language(self, ocr_language):
        """Sets the ocr_language of this Scte27SourceSettings.


        :param ocr_language: The ocr_language of this Scte27SourceSettings.
        :type ocr_language: Scte27OcrLanguage
        """

        self._ocr_language = ocr_language

    @property
    def pid(self):
        """Gets the pid of this Scte27SourceSettings.


        :return: The pid of this Scte27SourceSettings.
        :rtype: int
        """
        return self._pid

    @pid.setter
    def pid(self, pid):
        """Sets the pid of this Scte27SourceSettings.


        :param pid: The pid of this Scte27SourceSettings.
        :type pid: int
        """

        self._pid = pid
