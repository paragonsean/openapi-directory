# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TeletextSourceSettingsOutputRectangle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, height: float=None, left_offset: float=None, top_offset: float=None, width: float=None):
        """TeletextSourceSettingsOutputRectangle - a model defined in OpenAPI

        :param height: The height of this TeletextSourceSettingsOutputRectangle.
        :param left_offset: The left_offset of this TeletextSourceSettingsOutputRectangle.
        :param top_offset: The top_offset of this TeletextSourceSettingsOutputRectangle.
        :param width: The width of this TeletextSourceSettingsOutputRectangle.
        """
        self.openapi_types = {
            'height': float,
            'left_offset': float,
            'top_offset': float,
            'width': float
        }

        self.attribute_map = {
            'height': 'Height',
            'left_offset': 'LeftOffset',
            'top_offset': 'TopOffset',
            'width': 'Width'
        }

        self._height = height
        self._left_offset = left_offset
        self._top_offset = top_offset
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeletextSourceSettingsOutputRectangle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeletextSourceSettings_OutputRectangle of this TeletextSourceSettingsOutputRectangle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def height(self):
        """Gets the height of this TeletextSourceSettingsOutputRectangle.


        :return: The height of this TeletextSourceSettingsOutputRectangle.
        :rtype: float
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this TeletextSourceSettingsOutputRectangle.


        :param height: The height of this TeletextSourceSettingsOutputRectangle.
        :type height: float
        """
        if height is None:
            raise ValueError("Invalid value for `height`, must not be `None`")

        self._height = height

    @property
    def left_offset(self):
        """Gets the left_offset of this TeletextSourceSettingsOutputRectangle.


        :return: The left_offset of this TeletextSourceSettingsOutputRectangle.
        :rtype: float
        """
        return self._left_offset

    @left_offset.setter
    def left_offset(self, left_offset):
        """Sets the left_offset of this TeletextSourceSettingsOutputRectangle.


        :param left_offset: The left_offset of this TeletextSourceSettingsOutputRectangle.
        :type left_offset: float
        """
        if left_offset is None:
            raise ValueError("Invalid value for `left_offset`, must not be `None`")

        self._left_offset = left_offset

    @property
    def top_offset(self):
        """Gets the top_offset of this TeletextSourceSettingsOutputRectangle.


        :return: The top_offset of this TeletextSourceSettingsOutputRectangle.
        :rtype: float
        """
        return self._top_offset

    @top_offset.setter
    def top_offset(self, top_offset):
        """Sets the top_offset of this TeletextSourceSettingsOutputRectangle.


        :param top_offset: The top_offset of this TeletextSourceSettingsOutputRectangle.
        :type top_offset: float
        """
        if top_offset is None:
            raise ValueError("Invalid value for `top_offset`, must not be `None`")

        self._top_offset = top_offset

    @property
    def width(self):
        """Gets the width of this TeletextSourceSettingsOutputRectangle.


        :return: The width of this TeletextSourceSettingsOutputRectangle.
        :rtype: float
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this TeletextSourceSettingsOutputRectangle.


        :param width: The width of this TeletextSourceSettingsOutputRectangle.
        :type width: float
        """
        if width is None:
            raise ValueError("Invalid value for `width`, must not be `None`")

        self._width = width
