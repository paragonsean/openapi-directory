# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_class import InputClass
from openapi_server.models.input_source_type import InputSourceType
from openapi_server.models.input_state import InputState
from openapi_server.models.input_type import InputType
from openapi_server import util


class DescribeInputResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, attached_channels: List=None, destinations: List=None, id: str=None, input_class: InputClass=None, input_devices: List=None, input_partner_ids: List=None, input_source_type: InputSourceType=None, media_connect_flows: List=None, name: str=None, role_arn: str=None, security_groups: List=None, sources: List=None, state: InputState=None, tags: Dict=None, type: InputType=None):
        """DescribeInputResponse - a model defined in OpenAPI

        :param arn: The arn of this DescribeInputResponse.
        :param attached_channels: The attached_channels of this DescribeInputResponse.
        :param destinations: The destinations of this DescribeInputResponse.
        :param id: The id of this DescribeInputResponse.
        :param input_class: The input_class of this DescribeInputResponse.
        :param input_devices: The input_devices of this DescribeInputResponse.
        :param input_partner_ids: The input_partner_ids of this DescribeInputResponse.
        :param input_source_type: The input_source_type of this DescribeInputResponse.
        :param media_connect_flows: The media_connect_flows of this DescribeInputResponse.
        :param name: The name of this DescribeInputResponse.
        :param role_arn: The role_arn of this DescribeInputResponse.
        :param security_groups: The security_groups of this DescribeInputResponse.
        :param sources: The sources of this DescribeInputResponse.
        :param state: The state of this DescribeInputResponse.
        :param tags: The tags of this DescribeInputResponse.
        :param type: The type of this DescribeInputResponse.
        """
        self.openapi_types = {
            'arn': str,
            'attached_channels': List,
            'destinations': List,
            'id': str,
            'input_class': InputClass,
            'input_devices': List,
            'input_partner_ids': List,
            'input_source_type': InputSourceType,
            'media_connect_flows': List,
            'name': str,
            'role_arn': str,
            'security_groups': List,
            'sources': List,
            'state': InputState,
            'tags': Dict,
            'type': InputType
        }

        self.attribute_map = {
            'arn': 'Arn',
            'attached_channels': 'AttachedChannels',
            'destinations': 'Destinations',
            'id': 'Id',
            'input_class': 'InputClass',
            'input_devices': 'InputDevices',
            'input_partner_ids': 'InputPartnerIds',
            'input_source_type': 'InputSourceType',
            'media_connect_flows': 'MediaConnectFlows',
            'name': 'Name',
            'role_arn': 'RoleArn',
            'security_groups': 'SecurityGroups',
            'sources': 'Sources',
            'state': 'State',
            'tags': 'Tags',
            'type': 'Type'
        }

        self._arn = arn
        self._attached_channels = attached_channels
        self._destinations = destinations
        self._id = id
        self._input_class = input_class
        self._input_devices = input_devices
        self._input_partner_ids = input_partner_ids
        self._input_source_type = input_source_type
        self._media_connect_flows = media_connect_flows
        self._name = name
        self._role_arn = role_arn
        self._security_groups = security_groups
        self._sources = sources
        self._state = state
        self._tags = tags
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeInputResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeInputResponse of this DescribeInputResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this DescribeInputResponse.


        :return: The arn of this DescribeInputResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DescribeInputResponse.


        :param arn: The arn of this DescribeInputResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def attached_channels(self):
        """Gets the attached_channels of this DescribeInputResponse.


        :return: The attached_channels of this DescribeInputResponse.
        :rtype: List
        """
        return self._attached_channels

    @attached_channels.setter
    def attached_channels(self, attached_channels):
        """Sets the attached_channels of this DescribeInputResponse.


        :param attached_channels: The attached_channels of this DescribeInputResponse.
        :type attached_channels: List
        """

        self._attached_channels = attached_channels

    @property
    def destinations(self):
        """Gets the destinations of this DescribeInputResponse.


        :return: The destinations of this DescribeInputResponse.
        :rtype: List
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this DescribeInputResponse.


        :param destinations: The destinations of this DescribeInputResponse.
        :type destinations: List
        """

        self._destinations = destinations

    @property
    def id(self):
        """Gets the id of this DescribeInputResponse.


        :return: The id of this DescribeInputResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DescribeInputResponse.


        :param id: The id of this DescribeInputResponse.
        :type id: str
        """

        self._id = id

    @property
    def input_class(self):
        """Gets the input_class of this DescribeInputResponse.


        :return: The input_class of this DescribeInputResponse.
        :rtype: InputClass
        """
        return self._input_class

    @input_class.setter
    def input_class(self, input_class):
        """Sets the input_class of this DescribeInputResponse.


        :param input_class: The input_class of this DescribeInputResponse.
        :type input_class: InputClass
        """

        self._input_class = input_class

    @property
    def input_devices(self):
        """Gets the input_devices of this DescribeInputResponse.


        :return: The input_devices of this DescribeInputResponse.
        :rtype: List
        """
        return self._input_devices

    @input_devices.setter
    def input_devices(self, input_devices):
        """Sets the input_devices of this DescribeInputResponse.


        :param input_devices: The input_devices of this DescribeInputResponse.
        :type input_devices: List
        """

        self._input_devices = input_devices

    @property
    def input_partner_ids(self):
        """Gets the input_partner_ids of this DescribeInputResponse.


        :return: The input_partner_ids of this DescribeInputResponse.
        :rtype: List
        """
        return self._input_partner_ids

    @input_partner_ids.setter
    def input_partner_ids(self, input_partner_ids):
        """Sets the input_partner_ids of this DescribeInputResponse.


        :param input_partner_ids: The input_partner_ids of this DescribeInputResponse.
        :type input_partner_ids: List
        """

        self._input_partner_ids = input_partner_ids

    @property
    def input_source_type(self):
        """Gets the input_source_type of this DescribeInputResponse.


        :return: The input_source_type of this DescribeInputResponse.
        :rtype: InputSourceType
        """
        return self._input_source_type

    @input_source_type.setter
    def input_source_type(self, input_source_type):
        """Sets the input_source_type of this DescribeInputResponse.


        :param input_source_type: The input_source_type of this DescribeInputResponse.
        :type input_source_type: InputSourceType
        """

        self._input_source_type = input_source_type

    @property
    def media_connect_flows(self):
        """Gets the media_connect_flows of this DescribeInputResponse.


        :return: The media_connect_flows of this DescribeInputResponse.
        :rtype: List
        """
        return self._media_connect_flows

    @media_connect_flows.setter
    def media_connect_flows(self, media_connect_flows):
        """Sets the media_connect_flows of this DescribeInputResponse.


        :param media_connect_flows: The media_connect_flows of this DescribeInputResponse.
        :type media_connect_flows: List
        """

        self._media_connect_flows = media_connect_flows

    @property
    def name(self):
        """Gets the name of this DescribeInputResponse.


        :return: The name of this DescribeInputResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeInputResponse.


        :param name: The name of this DescribeInputResponse.
        :type name: str
        """

        self._name = name

    @property
    def role_arn(self):
        """Gets the role_arn of this DescribeInputResponse.


        :return: The role_arn of this DescribeInputResponse.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this DescribeInputResponse.


        :param role_arn: The role_arn of this DescribeInputResponse.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def security_groups(self):
        """Gets the security_groups of this DescribeInputResponse.


        :return: The security_groups of this DescribeInputResponse.
        :rtype: List
        """
        return self._security_groups

    @security_groups.setter
    def security_groups(self, security_groups):
        """Sets the security_groups of this DescribeInputResponse.


        :param security_groups: The security_groups of this DescribeInputResponse.
        :type security_groups: List
        """

        self._security_groups = security_groups

    @property
    def sources(self):
        """Gets the sources of this DescribeInputResponse.


        :return: The sources of this DescribeInputResponse.
        :rtype: List
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this DescribeInputResponse.


        :param sources: The sources of this DescribeInputResponse.
        :type sources: List
        """

        self._sources = sources

    @property
    def state(self):
        """Gets the state of this DescribeInputResponse.


        :return: The state of this DescribeInputResponse.
        :rtype: InputState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DescribeInputResponse.


        :param state: The state of this DescribeInputResponse.
        :type state: InputState
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this DescribeInputResponse.


        :return: The tags of this DescribeInputResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeInputResponse.


        :param tags: The tags of this DescribeInputResponse.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def type(self):
        """Gets the type of this DescribeInputResponse.


        :return: The type of this DescribeInputResponse.
        :rtype: InputType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DescribeInputResponse.


        :param type: The type of this DescribeInputResponse.
        :type type: InputType
        """

        self._type = type
