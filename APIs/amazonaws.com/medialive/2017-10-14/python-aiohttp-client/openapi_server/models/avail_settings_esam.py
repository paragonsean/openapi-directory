# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AvailSettingsEsam(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acquisition_point_id: str=None, ad_avail_offset: int=None, password_param: str=None, pois_endpoint: str=None, username: str=None, zone_identity: str=None):
        """AvailSettingsEsam - a model defined in OpenAPI

        :param acquisition_point_id: The acquisition_point_id of this AvailSettingsEsam.
        :param ad_avail_offset: The ad_avail_offset of this AvailSettingsEsam.
        :param password_param: The password_param of this AvailSettingsEsam.
        :param pois_endpoint: The pois_endpoint of this AvailSettingsEsam.
        :param username: The username of this AvailSettingsEsam.
        :param zone_identity: The zone_identity of this AvailSettingsEsam.
        """
        self.openapi_types = {
            'acquisition_point_id': str,
            'ad_avail_offset': int,
            'password_param': str,
            'pois_endpoint': str,
            'username': str,
            'zone_identity': str
        }

        self.attribute_map = {
            'acquisition_point_id': 'AcquisitionPointId',
            'ad_avail_offset': 'AdAvailOffset',
            'password_param': 'PasswordParam',
            'pois_endpoint': 'PoisEndpoint',
            'username': 'Username',
            'zone_identity': 'ZoneIdentity'
        }

        self._acquisition_point_id = acquisition_point_id
        self._ad_avail_offset = ad_avail_offset
        self._password_param = password_param
        self._pois_endpoint = pois_endpoint
        self._username = username
        self._zone_identity = zone_identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailSettingsEsam':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailSettings_Esam of this AvailSettingsEsam.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acquisition_point_id(self):
        """Gets the acquisition_point_id of this AvailSettingsEsam.


        :return: The acquisition_point_id of this AvailSettingsEsam.
        :rtype: str
        """
        return self._acquisition_point_id

    @acquisition_point_id.setter
    def acquisition_point_id(self, acquisition_point_id):
        """Sets the acquisition_point_id of this AvailSettingsEsam.


        :param acquisition_point_id: The acquisition_point_id of this AvailSettingsEsam.
        :type acquisition_point_id: str
        """
        if acquisition_point_id is None:
            raise ValueError("Invalid value for `acquisition_point_id`, must not be `None`")

        self._acquisition_point_id = acquisition_point_id

    @property
    def ad_avail_offset(self):
        """Gets the ad_avail_offset of this AvailSettingsEsam.


        :return: The ad_avail_offset of this AvailSettingsEsam.
        :rtype: int
        """
        return self._ad_avail_offset

    @ad_avail_offset.setter
    def ad_avail_offset(self, ad_avail_offset):
        """Sets the ad_avail_offset of this AvailSettingsEsam.


        :param ad_avail_offset: The ad_avail_offset of this AvailSettingsEsam.
        :type ad_avail_offset: int
        """

        self._ad_avail_offset = ad_avail_offset

    @property
    def password_param(self):
        """Gets the password_param of this AvailSettingsEsam.


        :return: The password_param of this AvailSettingsEsam.
        :rtype: str
        """
        return self._password_param

    @password_param.setter
    def password_param(self, password_param):
        """Sets the password_param of this AvailSettingsEsam.


        :param password_param: The password_param of this AvailSettingsEsam.
        :type password_param: str
        """

        self._password_param = password_param

    @property
    def pois_endpoint(self):
        """Gets the pois_endpoint of this AvailSettingsEsam.


        :return: The pois_endpoint of this AvailSettingsEsam.
        :rtype: str
        """
        return self._pois_endpoint

    @pois_endpoint.setter
    def pois_endpoint(self, pois_endpoint):
        """Sets the pois_endpoint of this AvailSettingsEsam.


        :param pois_endpoint: The pois_endpoint of this AvailSettingsEsam.
        :type pois_endpoint: str
        """
        if pois_endpoint is None:
            raise ValueError("Invalid value for `pois_endpoint`, must not be `None`")

        self._pois_endpoint = pois_endpoint

    @property
    def username(self):
        """Gets the username of this AvailSettingsEsam.


        :return: The username of this AvailSettingsEsam.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this AvailSettingsEsam.


        :param username: The username of this AvailSettingsEsam.
        :type username: str
        """

        self._username = username

    @property
    def zone_identity(self):
        """Gets the zone_identity of this AvailSettingsEsam.


        :return: The zone_identity of this AvailSettingsEsam.
        :rtype: str
        """
        return self._zone_identity

    @zone_identity.setter
    def zone_identity(self, zone_identity):
        """Sets the zone_identity of this AvailSettingsEsam.


        :param zone_identity: The zone_identity of this AvailSettingsEsam.
        :type zone_identity: str
        """

        self._zone_identity = zone_identity
