# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dolby_e_program_selection import DolbyEProgramSelection
from openapi_server import util


class AudioDolbyEDecode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, program_selection: DolbyEProgramSelection=None):
        """AudioDolbyEDecode - a model defined in OpenAPI

        :param program_selection: The program_selection of this AudioDolbyEDecode.
        """
        self.openapi_types = {
            'program_selection': DolbyEProgramSelection
        }

        self.attribute_map = {
            'program_selection': 'ProgramSelection'
        }

        self._program_selection = program_selection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioDolbyEDecode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioDolbyEDecode of this AudioDolbyEDecode.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def program_selection(self):
        """Gets the program_selection of this AudioDolbyEDecode.


        :return: The program_selection of this AudioDolbyEDecode.
        :rtype: DolbyEProgramSelection
        """
        return self._program_selection

    @program_selection.setter
    def program_selection(self, program_selection):
        """Sets the program_selection of this AudioDolbyEDecode.


        :param program_selection: The program_selection of this AudioDolbyEDecode.
        :type program_selection: DolbyEProgramSelection
        """
        if program_selection is None:
            raise ValueError("Invalid value for `program_selection`, must not be `None`")

        self._program_selection = program_selection
