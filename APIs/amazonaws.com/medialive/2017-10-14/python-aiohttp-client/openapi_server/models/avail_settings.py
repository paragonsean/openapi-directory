# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.avail_settings_esam import AvailSettingsEsam
from openapi_server.models.avail_settings_scte35_splice_insert import AvailSettingsScte35SpliceInsert
from openapi_server.models.avail_settings_scte35_time_signal_apos import AvailSettingsScte35TimeSignalApos
from openapi_server import util


class AvailSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, esam: AvailSettingsEsam=None, scte35_splice_insert: AvailSettingsScte35SpliceInsert=None, scte35_time_signal_apos: AvailSettingsScte35TimeSignalApos=None):
        """AvailSettings - a model defined in OpenAPI

        :param esam: The esam of this AvailSettings.
        :param scte35_splice_insert: The scte35_splice_insert of this AvailSettings.
        :param scte35_time_signal_apos: The scte35_time_signal_apos of this AvailSettings.
        """
        self.openapi_types = {
            'esam': AvailSettingsEsam,
            'scte35_splice_insert': AvailSettingsScte35SpliceInsert,
            'scte35_time_signal_apos': AvailSettingsScte35TimeSignalApos
        }

        self.attribute_map = {
            'esam': 'Esam',
            'scte35_splice_insert': 'Scte35SpliceInsert',
            'scte35_time_signal_apos': 'Scte35TimeSignalApos'
        }

        self._esam = esam
        self._scte35_splice_insert = scte35_splice_insert
        self._scte35_time_signal_apos = scte35_time_signal_apos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailSettings of this AvailSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def esam(self):
        """Gets the esam of this AvailSettings.


        :return: The esam of this AvailSettings.
        :rtype: AvailSettingsEsam
        """
        return self._esam

    @esam.setter
    def esam(self, esam):
        """Sets the esam of this AvailSettings.


        :param esam: The esam of this AvailSettings.
        :type esam: AvailSettingsEsam
        """

        self._esam = esam

    @property
    def scte35_splice_insert(self):
        """Gets the scte35_splice_insert of this AvailSettings.


        :return: The scte35_splice_insert of this AvailSettings.
        :rtype: AvailSettingsScte35SpliceInsert
        """
        return self._scte35_splice_insert

    @scte35_splice_insert.setter
    def scte35_splice_insert(self, scte35_splice_insert):
        """Sets the scte35_splice_insert of this AvailSettings.


        :param scte35_splice_insert: The scte35_splice_insert of this AvailSettings.
        :type scte35_splice_insert: AvailSettingsScte35SpliceInsert
        """

        self._scte35_splice_insert = scte35_splice_insert

    @property
    def scte35_time_signal_apos(self):
        """Gets the scte35_time_signal_apos of this AvailSettings.


        :return: The scte35_time_signal_apos of this AvailSettings.
        :rtype: AvailSettingsScte35TimeSignalApos
        """
        return self._scte35_time_signal_apos

    @scte35_time_signal_apos.setter
    def scte35_time_signal_apos(self, scte35_time_signal_apos):
        """Sets the scte35_time_signal_apos of this AvailSettings.


        :param scte35_time_signal_apos: The scte35_time_signal_apos of this AvailSettings.
        :type scte35_time_signal_apos: AvailSettingsScte35TimeSignalApos
        """

        self._scte35_time_signal_apos = scte35_time_signal_apos
