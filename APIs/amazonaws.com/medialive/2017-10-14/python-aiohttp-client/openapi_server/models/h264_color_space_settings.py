# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class H264ColorSpaceSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color_space_passthrough_settings: object=None, rec601_settings: object=None, rec709_settings: object=None):
        """H264ColorSpaceSettings - a model defined in OpenAPI

        :param color_space_passthrough_settings: The color_space_passthrough_settings of this H264ColorSpaceSettings.
        :param rec601_settings: The rec601_settings of this H264ColorSpaceSettings.
        :param rec709_settings: The rec709_settings of this H264ColorSpaceSettings.
        """
        self.openapi_types = {
            'color_space_passthrough_settings': object,
            'rec601_settings': object,
            'rec709_settings': object
        }

        self.attribute_map = {
            'color_space_passthrough_settings': 'ColorSpacePassthroughSettings',
            'rec601_settings': 'Rec601Settings',
            'rec709_settings': 'Rec709Settings'
        }

        self._color_space_passthrough_settings = color_space_passthrough_settings
        self._rec601_settings = rec601_settings
        self._rec709_settings = rec709_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'H264ColorSpaceSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The H264ColorSpaceSettings of this H264ColorSpaceSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color_space_passthrough_settings(self):
        """Gets the color_space_passthrough_settings of this H264ColorSpaceSettings.


        :return: The color_space_passthrough_settings of this H264ColorSpaceSettings.
        :rtype: object
        """
        return self._color_space_passthrough_settings

    @color_space_passthrough_settings.setter
    def color_space_passthrough_settings(self, color_space_passthrough_settings):
        """Sets the color_space_passthrough_settings of this H264ColorSpaceSettings.


        :param color_space_passthrough_settings: The color_space_passthrough_settings of this H264ColorSpaceSettings.
        :type color_space_passthrough_settings: object
        """

        self._color_space_passthrough_settings = color_space_passthrough_settings

    @property
    def rec601_settings(self):
        """Gets the rec601_settings of this H264ColorSpaceSettings.


        :return: The rec601_settings of this H264ColorSpaceSettings.
        :rtype: object
        """
        return self._rec601_settings

    @rec601_settings.setter
    def rec601_settings(self, rec601_settings):
        """Sets the rec601_settings of this H264ColorSpaceSettings.


        :param rec601_settings: The rec601_settings of this H264ColorSpaceSettings.
        :type rec601_settings: object
        """

        self._rec601_settings = rec601_settings

    @property
    def rec709_settings(self):
        """Gets the rec709_settings of this H264ColorSpaceSettings.


        :return: The rec709_settings of this H264ColorSpaceSettings.
        :rtype: object
        """
        return self._rec709_settings

    @rec709_settings.setter
    def rec709_settings(self, rec709_settings):
        """Sets the rec709_settings of this H264ColorSpaceSettings.


        :param rec709_settings: The rec709_settings of this H264ColorSpaceSettings.
        :type rec709_settings: object
        """

        self._rec709_settings = rec709_settings
