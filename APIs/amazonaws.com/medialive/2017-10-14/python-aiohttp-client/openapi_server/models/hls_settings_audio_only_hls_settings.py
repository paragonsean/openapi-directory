# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_only_hls_segment_type import AudioOnlyHlsSegmentType
from openapi_server.models.audio_only_hls_settings_audio_only_image import AudioOnlyHlsSettingsAudioOnlyImage
from openapi_server.models.audio_only_hls_track_type import AudioOnlyHlsTrackType
from openapi_server import util


class HlsSettingsAudioOnlyHlsSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_group_id: str=None, audio_only_image: AudioOnlyHlsSettingsAudioOnlyImage=None, audio_track_type: AudioOnlyHlsTrackType=None, segment_type: AudioOnlyHlsSegmentType=None):
        """HlsSettingsAudioOnlyHlsSettings - a model defined in OpenAPI

        :param audio_group_id: The audio_group_id of this HlsSettingsAudioOnlyHlsSettings.
        :param audio_only_image: The audio_only_image of this HlsSettingsAudioOnlyHlsSettings.
        :param audio_track_type: The audio_track_type of this HlsSettingsAudioOnlyHlsSettings.
        :param segment_type: The segment_type of this HlsSettingsAudioOnlyHlsSettings.
        """
        self.openapi_types = {
            'audio_group_id': str,
            'audio_only_image': AudioOnlyHlsSettingsAudioOnlyImage,
            'audio_track_type': AudioOnlyHlsTrackType,
            'segment_type': AudioOnlyHlsSegmentType
        }

        self.attribute_map = {
            'audio_group_id': 'AudioGroupId',
            'audio_only_image': 'AudioOnlyImage',
            'audio_track_type': 'AudioTrackType',
            'segment_type': 'SegmentType'
        }

        self._audio_group_id = audio_group_id
        self._audio_only_image = audio_only_image
        self._audio_track_type = audio_track_type
        self._segment_type = segment_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HlsSettingsAudioOnlyHlsSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HlsSettings_AudioOnlyHlsSettings of this HlsSettingsAudioOnlyHlsSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_group_id(self):
        """Gets the audio_group_id of this HlsSettingsAudioOnlyHlsSettings.


        :return: The audio_group_id of this HlsSettingsAudioOnlyHlsSettings.
        :rtype: str
        """
        return self._audio_group_id

    @audio_group_id.setter
    def audio_group_id(self, audio_group_id):
        """Sets the audio_group_id of this HlsSettingsAudioOnlyHlsSettings.


        :param audio_group_id: The audio_group_id of this HlsSettingsAudioOnlyHlsSettings.
        :type audio_group_id: str
        """

        self._audio_group_id = audio_group_id

    @property
    def audio_only_image(self):
        """Gets the audio_only_image of this HlsSettingsAudioOnlyHlsSettings.


        :return: The audio_only_image of this HlsSettingsAudioOnlyHlsSettings.
        :rtype: AudioOnlyHlsSettingsAudioOnlyImage
        """
        return self._audio_only_image

    @audio_only_image.setter
    def audio_only_image(self, audio_only_image):
        """Sets the audio_only_image of this HlsSettingsAudioOnlyHlsSettings.


        :param audio_only_image: The audio_only_image of this HlsSettingsAudioOnlyHlsSettings.
        :type audio_only_image: AudioOnlyHlsSettingsAudioOnlyImage
        """

        self._audio_only_image = audio_only_image

    @property
    def audio_track_type(self):
        """Gets the audio_track_type of this HlsSettingsAudioOnlyHlsSettings.


        :return: The audio_track_type of this HlsSettingsAudioOnlyHlsSettings.
        :rtype: AudioOnlyHlsTrackType
        """
        return self._audio_track_type

    @audio_track_type.setter
    def audio_track_type(self, audio_track_type):
        """Sets the audio_track_type of this HlsSettingsAudioOnlyHlsSettings.


        :param audio_track_type: The audio_track_type of this HlsSettingsAudioOnlyHlsSettings.
        :type audio_track_type: AudioOnlyHlsTrackType
        """

        self._audio_track_type = audio_track_type

    @property
    def segment_type(self):
        """Gets the segment_type of this HlsSettingsAudioOnlyHlsSettings.


        :return: The segment_type of this HlsSettingsAudioOnlyHlsSettings.
        :rtype: AudioOnlyHlsSegmentType
        """
        return self._segment_type

    @segment_type.setter
    def segment_type(self, segment_type):
        """Sets the segment_type of this HlsSettingsAudioOnlyHlsSettings.


        :param segment_type: The segment_type of this HlsSettingsAudioOnlyHlsSettings.
        :type segment_type: AudioOnlyHlsSegmentType
        """

        self._segment_type = segment_type
