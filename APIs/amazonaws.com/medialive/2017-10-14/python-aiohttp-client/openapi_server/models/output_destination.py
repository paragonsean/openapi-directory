# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.output_destination_multiplex_settings import OutputDestinationMultiplexSettings
from openapi_server import util


class OutputDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, media_package_settings: List=None, multiplex_settings: OutputDestinationMultiplexSettings=None, settings: List=None):
        """OutputDestination - a model defined in OpenAPI

        :param id: The id of this OutputDestination.
        :param media_package_settings: The media_package_settings of this OutputDestination.
        :param multiplex_settings: The multiplex_settings of this OutputDestination.
        :param settings: The settings of this OutputDestination.
        """
        self.openapi_types = {
            'id': str,
            'media_package_settings': List,
            'multiplex_settings': OutputDestinationMultiplexSettings,
            'settings': List
        }

        self.attribute_map = {
            'id': 'Id',
            'media_package_settings': 'MediaPackageSettings',
            'multiplex_settings': 'MultiplexSettings',
            'settings': 'Settings'
        }

        self._id = id
        self._media_package_settings = media_package_settings
        self._multiplex_settings = multiplex_settings
        self._settings = settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutputDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutputDestination of this OutputDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this OutputDestination.


        :return: The id of this OutputDestination.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OutputDestination.


        :param id: The id of this OutputDestination.
        :type id: str
        """

        self._id = id

    @property
    def media_package_settings(self):
        """Gets the media_package_settings of this OutputDestination.


        :return: The media_package_settings of this OutputDestination.
        :rtype: List
        """
        return self._media_package_settings

    @media_package_settings.setter
    def media_package_settings(self, media_package_settings):
        """Sets the media_package_settings of this OutputDestination.


        :param media_package_settings: The media_package_settings of this OutputDestination.
        :type media_package_settings: List
        """

        self._media_package_settings = media_package_settings

    @property
    def multiplex_settings(self):
        """Gets the multiplex_settings of this OutputDestination.


        :return: The multiplex_settings of this OutputDestination.
        :rtype: OutputDestinationMultiplexSettings
        """
        return self._multiplex_settings

    @multiplex_settings.setter
    def multiplex_settings(self, multiplex_settings):
        """Sets the multiplex_settings of this OutputDestination.


        :param multiplex_settings: The multiplex_settings of this OutputDestination.
        :type multiplex_settings: OutputDestinationMultiplexSettings
        """

        self._multiplex_settings = multiplex_settings

    @property
    def settings(self):
        """Gets the settings of this OutputDestination.


        :return: The settings of this OutputDestination.
        :rtype: List
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this OutputDestination.


        :param settings: The settings of this OutputDestination.
        :type settings: List
        """

        self._settings = settings
