# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.burn_in_alignment import BurnInAlignment
from openapi_server.models.burn_in_background_color import BurnInBackgroundColor
from openapi_server.models.burn_in_destination_settings_font import BurnInDestinationSettingsFont
from openapi_server.models.burn_in_font_color import BurnInFontColor
from openapi_server.models.burn_in_outline_color import BurnInOutlineColor
from openapi_server.models.burn_in_shadow_color import BurnInShadowColor
from openapi_server.models.burn_in_teletext_grid_control import BurnInTeletextGridControl
from openapi_server import util


class CaptionDestinationSettingsBurnInDestinationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alignment: BurnInAlignment=None, background_color: BurnInBackgroundColor=None, background_opacity: int=None, font: BurnInDestinationSettingsFont=None, font_color: BurnInFontColor=None, font_opacity: int=None, font_resolution: int=None, font_size: str=None, outline_color: BurnInOutlineColor=None, outline_size: int=None, shadow_color: BurnInShadowColor=None, shadow_opacity: int=None, shadow_x_offset: int=None, shadow_y_offset: int=None, teletext_grid_control: BurnInTeletextGridControl=None, x_position: int=None, y_position: int=None):
        """CaptionDestinationSettingsBurnInDestinationSettings - a model defined in OpenAPI

        :param alignment: The alignment of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param background_color: The background_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param background_opacity: The background_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param font: The font of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param font_color: The font_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param font_opacity: The font_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param font_resolution: The font_resolution of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param font_size: The font_size of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param outline_color: The outline_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param outline_size: The outline_size of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param shadow_color: The shadow_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param shadow_opacity: The shadow_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param shadow_x_offset: The shadow_x_offset of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param shadow_y_offset: The shadow_y_offset of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param teletext_grid_control: The teletext_grid_control of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param x_position: The x_position of this CaptionDestinationSettingsBurnInDestinationSettings.
        :param y_position: The y_position of this CaptionDestinationSettingsBurnInDestinationSettings.
        """
        self.openapi_types = {
            'alignment': BurnInAlignment,
            'background_color': BurnInBackgroundColor,
            'background_opacity': int,
            'font': BurnInDestinationSettingsFont,
            'font_color': BurnInFontColor,
            'font_opacity': int,
            'font_resolution': int,
            'font_size': str,
            'outline_color': BurnInOutlineColor,
            'outline_size': int,
            'shadow_color': BurnInShadowColor,
            'shadow_opacity': int,
            'shadow_x_offset': int,
            'shadow_y_offset': int,
            'teletext_grid_control': BurnInTeletextGridControl,
            'x_position': int,
            'y_position': int
        }

        self.attribute_map = {
            'alignment': 'Alignment',
            'background_color': 'BackgroundColor',
            'background_opacity': 'BackgroundOpacity',
            'font': 'Font',
            'font_color': 'FontColor',
            'font_opacity': 'FontOpacity',
            'font_resolution': 'FontResolution',
            'font_size': 'FontSize',
            'outline_color': 'OutlineColor',
            'outline_size': 'OutlineSize',
            'shadow_color': 'ShadowColor',
            'shadow_opacity': 'ShadowOpacity',
            'shadow_x_offset': 'ShadowXOffset',
            'shadow_y_offset': 'ShadowYOffset',
            'teletext_grid_control': 'TeletextGridControl',
            'x_position': 'XPosition',
            'y_position': 'YPosition'
        }

        self._alignment = alignment
        self._background_color = background_color
        self._background_opacity = background_opacity
        self._font = font
        self._font_color = font_color
        self._font_opacity = font_opacity
        self._font_resolution = font_resolution
        self._font_size = font_size
        self._outline_color = outline_color
        self._outline_size = outline_size
        self._shadow_color = shadow_color
        self._shadow_opacity = shadow_opacity
        self._shadow_x_offset = shadow_x_offset
        self._shadow_y_offset = shadow_y_offset
        self._teletext_grid_control = teletext_grid_control
        self._x_position = x_position
        self._y_position = y_position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CaptionDestinationSettingsBurnInDestinationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CaptionDestinationSettings_BurnInDestinationSettings of this CaptionDestinationSettingsBurnInDestinationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alignment(self):
        """Gets the alignment of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The alignment of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: BurnInAlignment
        """
        return self._alignment

    @alignment.setter
    def alignment(self, alignment):
        """Sets the alignment of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param alignment: The alignment of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type alignment: BurnInAlignment
        """

        self._alignment = alignment

    @property
    def background_color(self):
        """Gets the background_color of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The background_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: BurnInBackgroundColor
        """
        return self._background_color

    @background_color.setter
    def background_color(self, background_color):
        """Sets the background_color of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param background_color: The background_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type background_color: BurnInBackgroundColor
        """

        self._background_color = background_color

    @property
    def background_opacity(self):
        """Gets the background_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The background_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: int
        """
        return self._background_opacity

    @background_opacity.setter
    def background_opacity(self, background_opacity):
        """Sets the background_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param background_opacity: The background_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type background_opacity: int
        """

        self._background_opacity = background_opacity

    @property
    def font(self):
        """Gets the font of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The font of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: BurnInDestinationSettingsFont
        """
        return self._font

    @font.setter
    def font(self, font):
        """Sets the font of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param font: The font of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type font: BurnInDestinationSettingsFont
        """

        self._font = font

    @property
    def font_color(self):
        """Gets the font_color of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The font_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: BurnInFontColor
        """
        return self._font_color

    @font_color.setter
    def font_color(self, font_color):
        """Sets the font_color of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param font_color: The font_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type font_color: BurnInFontColor
        """

        self._font_color = font_color

    @property
    def font_opacity(self):
        """Gets the font_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The font_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: int
        """
        return self._font_opacity

    @font_opacity.setter
    def font_opacity(self, font_opacity):
        """Sets the font_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param font_opacity: The font_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type font_opacity: int
        """

        self._font_opacity = font_opacity

    @property
    def font_resolution(self):
        """Gets the font_resolution of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The font_resolution of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: int
        """
        return self._font_resolution

    @font_resolution.setter
    def font_resolution(self, font_resolution):
        """Sets the font_resolution of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param font_resolution: The font_resolution of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type font_resolution: int
        """

        self._font_resolution = font_resolution

    @property
    def font_size(self):
        """Gets the font_size of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The font_size of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: str
        """
        return self._font_size

    @font_size.setter
    def font_size(self, font_size):
        """Sets the font_size of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param font_size: The font_size of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type font_size: str
        """

        self._font_size = font_size

    @property
    def outline_color(self):
        """Gets the outline_color of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The outline_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: BurnInOutlineColor
        """
        return self._outline_color

    @outline_color.setter
    def outline_color(self, outline_color):
        """Sets the outline_color of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param outline_color: The outline_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type outline_color: BurnInOutlineColor
        """

        self._outline_color = outline_color

    @property
    def outline_size(self):
        """Gets the outline_size of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The outline_size of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: int
        """
        return self._outline_size

    @outline_size.setter
    def outline_size(self, outline_size):
        """Sets the outline_size of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param outline_size: The outline_size of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type outline_size: int
        """

        self._outline_size = outline_size

    @property
    def shadow_color(self):
        """Gets the shadow_color of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The shadow_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: BurnInShadowColor
        """
        return self._shadow_color

    @shadow_color.setter
    def shadow_color(self, shadow_color):
        """Sets the shadow_color of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param shadow_color: The shadow_color of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type shadow_color: BurnInShadowColor
        """

        self._shadow_color = shadow_color

    @property
    def shadow_opacity(self):
        """Gets the shadow_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The shadow_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: int
        """
        return self._shadow_opacity

    @shadow_opacity.setter
    def shadow_opacity(self, shadow_opacity):
        """Sets the shadow_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param shadow_opacity: The shadow_opacity of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type shadow_opacity: int
        """

        self._shadow_opacity = shadow_opacity

    @property
    def shadow_x_offset(self):
        """Gets the shadow_x_offset of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The shadow_x_offset of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: int
        """
        return self._shadow_x_offset

    @shadow_x_offset.setter
    def shadow_x_offset(self, shadow_x_offset):
        """Sets the shadow_x_offset of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param shadow_x_offset: The shadow_x_offset of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type shadow_x_offset: int
        """

        self._shadow_x_offset = shadow_x_offset

    @property
    def shadow_y_offset(self):
        """Gets the shadow_y_offset of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The shadow_y_offset of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: int
        """
        return self._shadow_y_offset

    @shadow_y_offset.setter
    def shadow_y_offset(self, shadow_y_offset):
        """Sets the shadow_y_offset of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param shadow_y_offset: The shadow_y_offset of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type shadow_y_offset: int
        """

        self._shadow_y_offset = shadow_y_offset

    @property
    def teletext_grid_control(self):
        """Gets the teletext_grid_control of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The teletext_grid_control of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: BurnInTeletextGridControl
        """
        return self._teletext_grid_control

    @teletext_grid_control.setter
    def teletext_grid_control(self, teletext_grid_control):
        """Sets the teletext_grid_control of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param teletext_grid_control: The teletext_grid_control of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type teletext_grid_control: BurnInTeletextGridControl
        """

        self._teletext_grid_control = teletext_grid_control

    @property
    def x_position(self):
        """Gets the x_position of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The x_position of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: int
        """
        return self._x_position

    @x_position.setter
    def x_position(self, x_position):
        """Sets the x_position of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param x_position: The x_position of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type x_position: int
        """

        self._x_position = x_position

    @property
    def y_position(self):
        """Gets the y_position of this CaptionDestinationSettingsBurnInDestinationSettings.


        :return: The y_position of this CaptionDestinationSettingsBurnInDestinationSettings.
        :rtype: int
        """
        return self._y_position

    @y_position.setter
    def y_position(self, y_position):
        """Sets the y_position of this CaptionDestinationSettingsBurnInDestinationSettings.


        :param y_position: The y_position of this CaptionDestinationSettingsBurnInDestinationSettings.
        :type y_position: int
        """

        self._y_position = y_position
