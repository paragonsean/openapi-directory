# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.static_key_settings_key_provider_server import StaticKeySettingsKeyProviderServer
from openapi_server import util


class KeyProviderSettingsStaticKeySettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_provider_server: StaticKeySettingsKeyProviderServer=None, static_key_value: str=None):
        """KeyProviderSettingsStaticKeySettings - a model defined in OpenAPI

        :param key_provider_server: The key_provider_server of this KeyProviderSettingsStaticKeySettings.
        :param static_key_value: The static_key_value of this KeyProviderSettingsStaticKeySettings.
        """
        self.openapi_types = {
            'key_provider_server': StaticKeySettingsKeyProviderServer,
            'static_key_value': str
        }

        self.attribute_map = {
            'key_provider_server': 'KeyProviderServer',
            'static_key_value': 'StaticKeyValue'
        }

        self._key_provider_server = key_provider_server
        self._static_key_value = static_key_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyProviderSettingsStaticKeySettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyProviderSettings_StaticKeySettings of this KeyProviderSettingsStaticKeySettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_provider_server(self):
        """Gets the key_provider_server of this KeyProviderSettingsStaticKeySettings.


        :return: The key_provider_server of this KeyProviderSettingsStaticKeySettings.
        :rtype: StaticKeySettingsKeyProviderServer
        """
        return self._key_provider_server

    @key_provider_server.setter
    def key_provider_server(self, key_provider_server):
        """Sets the key_provider_server of this KeyProviderSettingsStaticKeySettings.


        :param key_provider_server: The key_provider_server of this KeyProviderSettingsStaticKeySettings.
        :type key_provider_server: StaticKeySettingsKeyProviderServer
        """

        self._key_provider_server = key_provider_server

    @property
    def static_key_value(self):
        """Gets the static_key_value of this KeyProviderSettingsStaticKeySettings.


        :return: The static_key_value of this KeyProviderSettingsStaticKeySettings.
        :rtype: str
        """
        return self._static_key_value

    @static_key_value.setter
    def static_key_value(self, static_key_value):
        """Sets the static_key_value of this KeyProviderSettingsStaticKeySettings.


        :param static_key_value: The static_key_value of this KeyProviderSettingsStaticKeySettings.
        :type static_key_value: str
        """
        if static_key_value is None:
            raise ValueError("Invalid value for `static_key_value`, must not be `None`")

        self._static_key_value = static_key_value
