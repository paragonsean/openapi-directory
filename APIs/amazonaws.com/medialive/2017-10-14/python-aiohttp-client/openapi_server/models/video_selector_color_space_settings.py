# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.h265_color_space_settings_hdr10_settings import H265ColorSpaceSettingsHdr10Settings
from openapi_server import util


class VideoSelectorColorSpaceSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hdr10_settings: H265ColorSpaceSettingsHdr10Settings=None):
        """VideoSelectorColorSpaceSettings - a model defined in OpenAPI

        :param hdr10_settings: The hdr10_settings of this VideoSelectorColorSpaceSettings.
        """
        self.openapi_types = {
            'hdr10_settings': H265ColorSpaceSettingsHdr10Settings
        }

        self.attribute_map = {
            'hdr10_settings': 'Hdr10Settings'
        }

        self._hdr10_settings = hdr10_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoSelectorColorSpaceSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoSelector_ColorSpaceSettings of this VideoSelectorColorSpaceSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hdr10_settings(self):
        """Gets the hdr10_settings of this VideoSelectorColorSpaceSettings.


        :return: The hdr10_settings of this VideoSelectorColorSpaceSettings.
        :rtype: H265ColorSpaceSettingsHdr10Settings
        """
        return self._hdr10_settings

    @hdr10_settings.setter
    def hdr10_settings(self, hdr10_settings):
        """Sets the hdr10_settings of this VideoSelectorColorSpaceSettings.


        :param hdr10_settings: The hdr10_settings of this VideoSelectorColorSpaceSettings.
        :type hdr10_settings: H265ColorSpaceSettingsHdr10Settings
        """

        self._hdr10_settings = hdr10_settings
