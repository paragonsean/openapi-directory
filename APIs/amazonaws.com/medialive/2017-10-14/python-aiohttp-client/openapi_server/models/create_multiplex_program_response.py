# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_multiplex_program_response_multiplex_program import CreateMultiplexProgramResponseMultiplexProgram
from openapi_server import util


class CreateMultiplexProgramResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, multiplex_program: CreateMultiplexProgramResponseMultiplexProgram=None):
        """CreateMultiplexProgramResponse - a model defined in OpenAPI

        :param multiplex_program: The multiplex_program of this CreateMultiplexProgramResponse.
        """
        self.openapi_types = {
            'multiplex_program': CreateMultiplexProgramResponseMultiplexProgram
        }

        self.attribute_map = {
            'multiplex_program': 'MultiplexProgram'
        }

        self._multiplex_program = multiplex_program

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMultiplexProgramResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMultiplexProgramResponse of this CreateMultiplexProgramResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def multiplex_program(self):
        """Gets the multiplex_program of this CreateMultiplexProgramResponse.


        :return: The multiplex_program of this CreateMultiplexProgramResponse.
        :rtype: CreateMultiplexProgramResponseMultiplexProgram
        """
        return self._multiplex_program

    @multiplex_program.setter
    def multiplex_program(self, multiplex_program):
        """Sets the multiplex_program of this CreateMultiplexProgramResponse.


        :param multiplex_program: The multiplex_program of this CreateMultiplexProgramResponse.
        :type multiplex_program: CreateMultiplexProgramResponseMultiplexProgram
        """

        self._multiplex_program = multiplex_program
