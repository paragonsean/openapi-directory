# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_attachment_automatic_input_failover_settings import InputAttachmentAutomaticInputFailoverSettings
from openapi_server.models.input_attachment_input_settings import InputAttachmentInputSettings
from openapi_server import util


class InputAttachment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automatic_input_failover_settings: InputAttachmentAutomaticInputFailoverSettings=None, input_attachment_name: str=None, input_id: str=None, input_settings: InputAttachmentInputSettings=None):
        """InputAttachment - a model defined in OpenAPI

        :param automatic_input_failover_settings: The automatic_input_failover_settings of this InputAttachment.
        :param input_attachment_name: The input_attachment_name of this InputAttachment.
        :param input_id: The input_id of this InputAttachment.
        :param input_settings: The input_settings of this InputAttachment.
        """
        self.openapi_types = {
            'automatic_input_failover_settings': InputAttachmentAutomaticInputFailoverSettings,
            'input_attachment_name': str,
            'input_id': str,
            'input_settings': InputAttachmentInputSettings
        }

        self.attribute_map = {
            'automatic_input_failover_settings': 'AutomaticInputFailoverSettings',
            'input_attachment_name': 'InputAttachmentName',
            'input_id': 'InputId',
            'input_settings': 'InputSettings'
        }

        self._automatic_input_failover_settings = automatic_input_failover_settings
        self._input_attachment_name = input_attachment_name
        self._input_id = input_id
        self._input_settings = input_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputAttachment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputAttachment of this InputAttachment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automatic_input_failover_settings(self):
        """Gets the automatic_input_failover_settings of this InputAttachment.


        :return: The automatic_input_failover_settings of this InputAttachment.
        :rtype: InputAttachmentAutomaticInputFailoverSettings
        """
        return self._automatic_input_failover_settings

    @automatic_input_failover_settings.setter
    def automatic_input_failover_settings(self, automatic_input_failover_settings):
        """Sets the automatic_input_failover_settings of this InputAttachment.


        :param automatic_input_failover_settings: The automatic_input_failover_settings of this InputAttachment.
        :type automatic_input_failover_settings: InputAttachmentAutomaticInputFailoverSettings
        """

        self._automatic_input_failover_settings = automatic_input_failover_settings

    @property
    def input_attachment_name(self):
        """Gets the input_attachment_name of this InputAttachment.


        :return: The input_attachment_name of this InputAttachment.
        :rtype: str
        """
        return self._input_attachment_name

    @input_attachment_name.setter
    def input_attachment_name(self, input_attachment_name):
        """Sets the input_attachment_name of this InputAttachment.


        :param input_attachment_name: The input_attachment_name of this InputAttachment.
        :type input_attachment_name: str
        """

        self._input_attachment_name = input_attachment_name

    @property
    def input_id(self):
        """Gets the input_id of this InputAttachment.


        :return: The input_id of this InputAttachment.
        :rtype: str
        """
        return self._input_id

    @input_id.setter
    def input_id(self, input_id):
        """Sets the input_id of this InputAttachment.


        :param input_id: The input_id of this InputAttachment.
        :type input_id: str
        """

        self._input_id = input_id

    @property
    def input_settings(self):
        """Gets the input_settings of this InputAttachment.


        :return: The input_settings of this InputAttachment.
        :rtype: InputAttachmentInputSettings
        """
        return self._input_settings

    @input_settings.setter
    def input_settings(self, input_settings):
        """Sets the input_settings of this InputAttachment.


        :param input_settings: The input_settings of this InputAttachment.
        :type input_settings: InputAttachmentInputSettings
        """

        self._input_settings = input_settings
