# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FailoverConditionSettingsAudioSilenceSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_selector_name: str=None, audio_silence_threshold_msec: int=None):
        """FailoverConditionSettingsAudioSilenceSettings - a model defined in OpenAPI

        :param audio_selector_name: The audio_selector_name of this FailoverConditionSettingsAudioSilenceSettings.
        :param audio_silence_threshold_msec: The audio_silence_threshold_msec of this FailoverConditionSettingsAudioSilenceSettings.
        """
        self.openapi_types = {
            'audio_selector_name': str,
            'audio_silence_threshold_msec': int
        }

        self.attribute_map = {
            'audio_selector_name': 'AudioSelectorName',
            'audio_silence_threshold_msec': 'AudioSilenceThresholdMsec'
        }

        self._audio_selector_name = audio_selector_name
        self._audio_silence_threshold_msec = audio_silence_threshold_msec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailoverConditionSettingsAudioSilenceSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailoverConditionSettings_AudioSilenceSettings of this FailoverConditionSettingsAudioSilenceSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_selector_name(self):
        """Gets the audio_selector_name of this FailoverConditionSettingsAudioSilenceSettings.


        :return: The audio_selector_name of this FailoverConditionSettingsAudioSilenceSettings.
        :rtype: str
        """
        return self._audio_selector_name

    @audio_selector_name.setter
    def audio_selector_name(self, audio_selector_name):
        """Sets the audio_selector_name of this FailoverConditionSettingsAudioSilenceSettings.


        :param audio_selector_name: The audio_selector_name of this FailoverConditionSettingsAudioSilenceSettings.
        :type audio_selector_name: str
        """
        if audio_selector_name is None:
            raise ValueError("Invalid value for `audio_selector_name`, must not be `None`")

        self._audio_selector_name = audio_selector_name

    @property
    def audio_silence_threshold_msec(self):
        """Gets the audio_silence_threshold_msec of this FailoverConditionSettingsAudioSilenceSettings.


        :return: The audio_silence_threshold_msec of this FailoverConditionSettingsAudioSilenceSettings.
        :rtype: int
        """
        return self._audio_silence_threshold_msec

    @audio_silence_threshold_msec.setter
    def audio_silence_threshold_msec(self, audio_silence_threshold_msec):
        """Sets the audio_silence_threshold_msec of this FailoverConditionSettingsAudioSilenceSettings.


        :param audio_silence_threshold_msec: The audio_silence_threshold_msec of this FailoverConditionSettingsAudioSilenceSettings.
        :type audio_silence_threshold_msec: int
        """

        self._audio_silence_threshold_msec = audio_silence_threshold_msec
