# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_deblock_filter import InputDeblockFilter
from openapi_server.models.input_denoise_filter import InputDenoiseFilter
from openapi_server.models.input_filter import InputFilter
from openapi_server.models.input_settings_network_input_settings import InputSettingsNetworkInputSettings
from openapi_server.models.input_settings_video_selector import InputSettingsVideoSelector
from openapi_server.models.input_source_end_behavior import InputSourceEndBehavior
from openapi_server.models.smpte2038_data_preference import Smpte2038DataPreference
from openapi_server import util


class InputSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_selectors: List=None, caption_selectors: List=None, deblock_filter: InputDeblockFilter=None, denoise_filter: InputDenoiseFilter=None, filter_strength: int=None, input_filter: InputFilter=None, network_input_settings: InputSettingsNetworkInputSettings=None, scte35_pid: int=None, smpte2038_data_preference: Smpte2038DataPreference=None, source_end_behavior: InputSourceEndBehavior=None, video_selector: InputSettingsVideoSelector=None):
        """InputSettings - a model defined in OpenAPI

        :param audio_selectors: The audio_selectors of this InputSettings.
        :param caption_selectors: The caption_selectors of this InputSettings.
        :param deblock_filter: The deblock_filter of this InputSettings.
        :param denoise_filter: The denoise_filter of this InputSettings.
        :param filter_strength: The filter_strength of this InputSettings.
        :param input_filter: The input_filter of this InputSettings.
        :param network_input_settings: The network_input_settings of this InputSettings.
        :param scte35_pid: The scte35_pid of this InputSettings.
        :param smpte2038_data_preference: The smpte2038_data_preference of this InputSettings.
        :param source_end_behavior: The source_end_behavior of this InputSettings.
        :param video_selector: The video_selector of this InputSettings.
        """
        self.openapi_types = {
            'audio_selectors': List,
            'caption_selectors': List,
            'deblock_filter': InputDeblockFilter,
            'denoise_filter': InputDenoiseFilter,
            'filter_strength': int,
            'input_filter': InputFilter,
            'network_input_settings': InputSettingsNetworkInputSettings,
            'scte35_pid': int,
            'smpte2038_data_preference': Smpte2038DataPreference,
            'source_end_behavior': InputSourceEndBehavior,
            'video_selector': InputSettingsVideoSelector
        }

        self.attribute_map = {
            'audio_selectors': 'AudioSelectors',
            'caption_selectors': 'CaptionSelectors',
            'deblock_filter': 'DeblockFilter',
            'denoise_filter': 'DenoiseFilter',
            'filter_strength': 'FilterStrength',
            'input_filter': 'InputFilter',
            'network_input_settings': 'NetworkInputSettings',
            'scte35_pid': 'Scte35Pid',
            'smpte2038_data_preference': 'Smpte2038DataPreference',
            'source_end_behavior': 'SourceEndBehavior',
            'video_selector': 'VideoSelector'
        }

        self._audio_selectors = audio_selectors
        self._caption_selectors = caption_selectors
        self._deblock_filter = deblock_filter
        self._denoise_filter = denoise_filter
        self._filter_strength = filter_strength
        self._input_filter = input_filter
        self._network_input_settings = network_input_settings
        self._scte35_pid = scte35_pid
        self._smpte2038_data_preference = smpte2038_data_preference
        self._source_end_behavior = source_end_behavior
        self._video_selector = video_selector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputSettings of this InputSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_selectors(self):
        """Gets the audio_selectors of this InputSettings.


        :return: The audio_selectors of this InputSettings.
        :rtype: List
        """
        return self._audio_selectors

    @audio_selectors.setter
    def audio_selectors(self, audio_selectors):
        """Sets the audio_selectors of this InputSettings.


        :param audio_selectors: The audio_selectors of this InputSettings.
        :type audio_selectors: List
        """

        self._audio_selectors = audio_selectors

    @property
    def caption_selectors(self):
        """Gets the caption_selectors of this InputSettings.


        :return: The caption_selectors of this InputSettings.
        :rtype: List
        """
        return self._caption_selectors

    @caption_selectors.setter
    def caption_selectors(self, caption_selectors):
        """Sets the caption_selectors of this InputSettings.


        :param caption_selectors: The caption_selectors of this InputSettings.
        :type caption_selectors: List
        """

        self._caption_selectors = caption_selectors

    @property
    def deblock_filter(self):
        """Gets the deblock_filter of this InputSettings.


        :return: The deblock_filter of this InputSettings.
        :rtype: InputDeblockFilter
        """
        return self._deblock_filter

    @deblock_filter.setter
    def deblock_filter(self, deblock_filter):
        """Sets the deblock_filter of this InputSettings.


        :param deblock_filter: The deblock_filter of this InputSettings.
        :type deblock_filter: InputDeblockFilter
        """

        self._deblock_filter = deblock_filter

    @property
    def denoise_filter(self):
        """Gets the denoise_filter of this InputSettings.


        :return: The denoise_filter of this InputSettings.
        :rtype: InputDenoiseFilter
        """
        return self._denoise_filter

    @denoise_filter.setter
    def denoise_filter(self, denoise_filter):
        """Sets the denoise_filter of this InputSettings.


        :param denoise_filter: The denoise_filter of this InputSettings.
        :type denoise_filter: InputDenoiseFilter
        """

        self._denoise_filter = denoise_filter

    @property
    def filter_strength(self):
        """Gets the filter_strength of this InputSettings.


        :return: The filter_strength of this InputSettings.
        :rtype: int
        """
        return self._filter_strength

    @filter_strength.setter
    def filter_strength(self, filter_strength):
        """Sets the filter_strength of this InputSettings.


        :param filter_strength: The filter_strength of this InputSettings.
        :type filter_strength: int
        """

        self._filter_strength = filter_strength

    @property
    def input_filter(self):
        """Gets the input_filter of this InputSettings.


        :return: The input_filter of this InputSettings.
        :rtype: InputFilter
        """
        return self._input_filter

    @input_filter.setter
    def input_filter(self, input_filter):
        """Sets the input_filter of this InputSettings.


        :param input_filter: The input_filter of this InputSettings.
        :type input_filter: InputFilter
        """

        self._input_filter = input_filter

    @property
    def network_input_settings(self):
        """Gets the network_input_settings of this InputSettings.


        :return: The network_input_settings of this InputSettings.
        :rtype: InputSettingsNetworkInputSettings
        """
        return self._network_input_settings

    @network_input_settings.setter
    def network_input_settings(self, network_input_settings):
        """Sets the network_input_settings of this InputSettings.


        :param network_input_settings: The network_input_settings of this InputSettings.
        :type network_input_settings: InputSettingsNetworkInputSettings
        """

        self._network_input_settings = network_input_settings

    @property
    def scte35_pid(self):
        """Gets the scte35_pid of this InputSettings.


        :return: The scte35_pid of this InputSettings.
        :rtype: int
        """
        return self._scte35_pid

    @scte35_pid.setter
    def scte35_pid(self, scte35_pid):
        """Sets the scte35_pid of this InputSettings.


        :param scte35_pid: The scte35_pid of this InputSettings.
        :type scte35_pid: int
        """

        self._scte35_pid = scte35_pid

    @property
    def smpte2038_data_preference(self):
        """Gets the smpte2038_data_preference of this InputSettings.


        :return: The smpte2038_data_preference of this InputSettings.
        :rtype: Smpte2038DataPreference
        """
        return self._smpte2038_data_preference

    @smpte2038_data_preference.setter
    def smpte2038_data_preference(self, smpte2038_data_preference):
        """Sets the smpte2038_data_preference of this InputSettings.


        :param smpte2038_data_preference: The smpte2038_data_preference of this InputSettings.
        :type smpte2038_data_preference: Smpte2038DataPreference
        """

        self._smpte2038_data_preference = smpte2038_data_preference

    @property
    def source_end_behavior(self):
        """Gets the source_end_behavior of this InputSettings.


        :return: The source_end_behavior of this InputSettings.
        :rtype: InputSourceEndBehavior
        """
        return self._source_end_behavior

    @source_end_behavior.setter
    def source_end_behavior(self, source_end_behavior):
        """Sets the source_end_behavior of this InputSettings.


        :param source_end_behavior: The source_end_behavior of this InputSettings.
        :type source_end_behavior: InputSourceEndBehavior
        """

        self._source_end_behavior = source_end_behavior

    @property
    def video_selector(self):
        """Gets the video_selector of this InputSettings.


        :return: The video_selector of this InputSettings.
        :rtype: InputSettingsVideoSelector
        """
        return self._video_selector

    @video_selector.setter
    def video_selector(self, video_selector):
        """Sets the video_selector of this InputSettings.


        :param video_selector: The video_selector of this InputSettings.
        :type video_selector: InputSettingsVideoSelector
        """

        self._video_selector = video_selector
