# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_selector_settings_audio_hls_rendition_selection import AudioSelectorSettingsAudioHlsRenditionSelection
from openapi_server.models.audio_selector_settings_audio_language_selection import AudioSelectorSettingsAudioLanguageSelection
from openapi_server.models.audio_selector_settings_audio_pid_selection import AudioSelectorSettingsAudioPidSelection
from openapi_server.models.audio_selector_settings_audio_track_selection import AudioSelectorSettingsAudioTrackSelection
from openapi_server import util


class AudioSelectorSelectorSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_hls_rendition_selection: AudioSelectorSettingsAudioHlsRenditionSelection=None, audio_language_selection: AudioSelectorSettingsAudioLanguageSelection=None, audio_pid_selection: AudioSelectorSettingsAudioPidSelection=None, audio_track_selection: AudioSelectorSettingsAudioTrackSelection=None):
        """AudioSelectorSelectorSettings - a model defined in OpenAPI

        :param audio_hls_rendition_selection: The audio_hls_rendition_selection of this AudioSelectorSelectorSettings.
        :param audio_language_selection: The audio_language_selection of this AudioSelectorSelectorSettings.
        :param audio_pid_selection: The audio_pid_selection of this AudioSelectorSelectorSettings.
        :param audio_track_selection: The audio_track_selection of this AudioSelectorSelectorSettings.
        """
        self.openapi_types = {
            'audio_hls_rendition_selection': AudioSelectorSettingsAudioHlsRenditionSelection,
            'audio_language_selection': AudioSelectorSettingsAudioLanguageSelection,
            'audio_pid_selection': AudioSelectorSettingsAudioPidSelection,
            'audio_track_selection': AudioSelectorSettingsAudioTrackSelection
        }

        self.attribute_map = {
            'audio_hls_rendition_selection': 'AudioHlsRenditionSelection',
            'audio_language_selection': 'AudioLanguageSelection',
            'audio_pid_selection': 'AudioPidSelection',
            'audio_track_selection': 'AudioTrackSelection'
        }

        self._audio_hls_rendition_selection = audio_hls_rendition_selection
        self._audio_language_selection = audio_language_selection
        self._audio_pid_selection = audio_pid_selection
        self._audio_track_selection = audio_track_selection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioSelectorSelectorSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioSelector_SelectorSettings of this AudioSelectorSelectorSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_hls_rendition_selection(self):
        """Gets the audio_hls_rendition_selection of this AudioSelectorSelectorSettings.


        :return: The audio_hls_rendition_selection of this AudioSelectorSelectorSettings.
        :rtype: AudioSelectorSettingsAudioHlsRenditionSelection
        """
        return self._audio_hls_rendition_selection

    @audio_hls_rendition_selection.setter
    def audio_hls_rendition_selection(self, audio_hls_rendition_selection):
        """Sets the audio_hls_rendition_selection of this AudioSelectorSelectorSettings.


        :param audio_hls_rendition_selection: The audio_hls_rendition_selection of this AudioSelectorSelectorSettings.
        :type audio_hls_rendition_selection: AudioSelectorSettingsAudioHlsRenditionSelection
        """

        self._audio_hls_rendition_selection = audio_hls_rendition_selection

    @property
    def audio_language_selection(self):
        """Gets the audio_language_selection of this AudioSelectorSelectorSettings.


        :return: The audio_language_selection of this AudioSelectorSelectorSettings.
        :rtype: AudioSelectorSettingsAudioLanguageSelection
        """
        return self._audio_language_selection

    @audio_language_selection.setter
    def audio_language_selection(self, audio_language_selection):
        """Sets the audio_language_selection of this AudioSelectorSelectorSettings.


        :param audio_language_selection: The audio_language_selection of this AudioSelectorSelectorSettings.
        :type audio_language_selection: AudioSelectorSettingsAudioLanguageSelection
        """

        self._audio_language_selection = audio_language_selection

    @property
    def audio_pid_selection(self):
        """Gets the audio_pid_selection of this AudioSelectorSelectorSettings.


        :return: The audio_pid_selection of this AudioSelectorSelectorSettings.
        :rtype: AudioSelectorSettingsAudioPidSelection
        """
        return self._audio_pid_selection

    @audio_pid_selection.setter
    def audio_pid_selection(self, audio_pid_selection):
        """Sets the audio_pid_selection of this AudioSelectorSelectorSettings.


        :param audio_pid_selection: The audio_pid_selection of this AudioSelectorSelectorSettings.
        :type audio_pid_selection: AudioSelectorSettingsAudioPidSelection
        """

        self._audio_pid_selection = audio_pid_selection

    @property
    def audio_track_selection(self):
        """Gets the audio_track_selection of this AudioSelectorSelectorSettings.


        :return: The audio_track_selection of this AudioSelectorSelectorSettings.
        :rtype: AudioSelectorSettingsAudioTrackSelection
        """
        return self._audio_track_selection

    @audio_track_selection.setter
    def audio_track_selection(self, audio_track_selection):
        """Sets the audio_track_selection of this AudioSelectorSelectorSettings.


        :param audio_track_selection: The audio_track_selection of this AudioSelectorSelectorSettings.
        :type audio_track_selection: AudioSelectorSettingsAudioTrackSelection
        """

        self._audio_track_selection = audio_track_selection
