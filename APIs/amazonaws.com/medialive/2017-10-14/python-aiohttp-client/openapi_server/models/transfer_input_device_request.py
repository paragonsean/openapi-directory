# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TransferInputDeviceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_customer_id: str=None, target_region: str=None, transfer_message: str=None):
        """TransferInputDeviceRequest - a model defined in OpenAPI

        :param target_customer_id: The target_customer_id of this TransferInputDeviceRequest.
        :param target_region: The target_region of this TransferInputDeviceRequest.
        :param transfer_message: The transfer_message of this TransferInputDeviceRequest.
        """
        self.openapi_types = {
            'target_customer_id': str,
            'target_region': str,
            'transfer_message': str
        }

        self.attribute_map = {
            'target_customer_id': 'targetCustomerId',
            'target_region': 'targetRegion',
            'transfer_message': 'transferMessage'
        }

        self._target_customer_id = target_customer_id
        self._target_region = target_region
        self._transfer_message = transfer_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransferInputDeviceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransferInputDevice_request of this TransferInputDeviceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_customer_id(self):
        """Gets the target_customer_id of this TransferInputDeviceRequest.

        Placeholder documentation for __string

        :return: The target_customer_id of this TransferInputDeviceRequest.
        :rtype: str
        """
        return self._target_customer_id

    @target_customer_id.setter
    def target_customer_id(self, target_customer_id):
        """Sets the target_customer_id of this TransferInputDeviceRequest.

        Placeholder documentation for __string

        :param target_customer_id: The target_customer_id of this TransferInputDeviceRequest.
        :type target_customer_id: str
        """

        self._target_customer_id = target_customer_id

    @property
    def target_region(self):
        """Gets the target_region of this TransferInputDeviceRequest.

        Placeholder documentation for __string

        :return: The target_region of this TransferInputDeviceRequest.
        :rtype: str
        """
        return self._target_region

    @target_region.setter
    def target_region(self, target_region):
        """Sets the target_region of this TransferInputDeviceRequest.

        Placeholder documentation for __string

        :param target_region: The target_region of this TransferInputDeviceRequest.
        :type target_region: str
        """

        self._target_region = target_region

    @property
    def transfer_message(self):
        """Gets the transfer_message of this TransferInputDeviceRequest.

        Placeholder documentation for __string

        :return: The transfer_message of this TransferInputDeviceRequest.
        :rtype: str
        """
        return self._transfer_message

    @transfer_message.setter
    def transfer_message(self, transfer_message):
        """Sets the transfer_message of this TransferInputDeviceRequest.

        Placeholder documentation for __string

        :param transfer_message: The transfer_message of this TransferInputDeviceRequest.
        :type transfer_message: str
        """

        self._transfer_message = transfer_message
