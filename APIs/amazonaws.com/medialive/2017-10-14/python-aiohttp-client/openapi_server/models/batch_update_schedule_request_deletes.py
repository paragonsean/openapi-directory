# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchUpdateScheduleRequestDeletes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_names: List=None):
        """BatchUpdateScheduleRequestDeletes - a model defined in OpenAPI

        :param action_names: The action_names of this BatchUpdateScheduleRequestDeletes.
        """
        self.openapi_types = {
            'action_names': List
        }

        self.attribute_map = {
            'action_names': 'ActionNames'
        }

        self._action_names = action_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchUpdateScheduleRequestDeletes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchUpdateScheduleRequest_Deletes of this BatchUpdateScheduleRequestDeletes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_names(self):
        """Gets the action_names of this BatchUpdateScheduleRequestDeletes.


        :return: The action_names of this BatchUpdateScheduleRequestDeletes.
        :rtype: List
        """
        return self._action_names

    @action_names.setter
    def action_names(self, action_names):
        """Sets the action_names of this BatchUpdateScheduleRequestDeletes.


        :param action_names: The action_names of this BatchUpdateScheduleRequestDeletes.
        :type action_names: List
        """
        if action_names is None:
            raise ValueError("Invalid value for `action_names`, must not be `None`")

        self._action_names = action_names
