# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ebu_tt_d_destination_style_control import EbuTtDDestinationStyleControl
from openapi_server.models.ebu_tt_d_fill_line_gap_control import EbuTtDFillLineGapControl
from openapi_server import util


class CaptionDestinationSettingsEbuTtDDestinationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copyright_holder: str=None, fill_line_gap: EbuTtDFillLineGapControl=None, font_family: str=None, style_control: EbuTtDDestinationStyleControl=None):
        """CaptionDestinationSettingsEbuTtDDestinationSettings - a model defined in OpenAPI

        :param copyright_holder: The copyright_holder of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :param fill_line_gap: The fill_line_gap of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :param font_family: The font_family of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :param style_control: The style_control of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        """
        self.openapi_types = {
            'copyright_holder': str,
            'fill_line_gap': EbuTtDFillLineGapControl,
            'font_family': str,
            'style_control': EbuTtDDestinationStyleControl
        }

        self.attribute_map = {
            'copyright_holder': 'CopyrightHolder',
            'fill_line_gap': 'FillLineGap',
            'font_family': 'FontFamily',
            'style_control': 'StyleControl'
        }

        self._copyright_holder = copyright_holder
        self._fill_line_gap = fill_line_gap
        self._font_family = font_family
        self._style_control = style_control

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CaptionDestinationSettingsEbuTtDDestinationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CaptionDestinationSettings_EbuTtDDestinationSettings of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copyright_holder(self):
        """Gets the copyright_holder of this CaptionDestinationSettingsEbuTtDDestinationSettings.


        :return: The copyright_holder of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :rtype: str
        """
        return self._copyright_holder

    @copyright_holder.setter
    def copyright_holder(self, copyright_holder):
        """Sets the copyright_holder of this CaptionDestinationSettingsEbuTtDDestinationSettings.


        :param copyright_holder: The copyright_holder of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :type copyright_holder: str
        """

        self._copyright_holder = copyright_holder

    @property
    def fill_line_gap(self):
        """Gets the fill_line_gap of this CaptionDestinationSettingsEbuTtDDestinationSettings.


        :return: The fill_line_gap of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :rtype: EbuTtDFillLineGapControl
        """
        return self._fill_line_gap

    @fill_line_gap.setter
    def fill_line_gap(self, fill_line_gap):
        """Sets the fill_line_gap of this CaptionDestinationSettingsEbuTtDDestinationSettings.


        :param fill_line_gap: The fill_line_gap of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :type fill_line_gap: EbuTtDFillLineGapControl
        """

        self._fill_line_gap = fill_line_gap

    @property
    def font_family(self):
        """Gets the font_family of this CaptionDestinationSettingsEbuTtDDestinationSettings.


        :return: The font_family of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :rtype: str
        """
        return self._font_family

    @font_family.setter
    def font_family(self, font_family):
        """Sets the font_family of this CaptionDestinationSettingsEbuTtDDestinationSettings.


        :param font_family: The font_family of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :type font_family: str
        """

        self._font_family = font_family

    @property
    def style_control(self):
        """Gets the style_control of this CaptionDestinationSettingsEbuTtDDestinationSettings.


        :return: The style_control of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :rtype: EbuTtDDestinationStyleControl
        """
        return self._style_control

    @style_control.setter
    def style_control(self, style_control):
        """Sets the style_control of this CaptionDestinationSettingsEbuTtDDestinationSettings.


        :param style_control: The style_control of this CaptionDestinationSettingsEbuTtDDestinationSettings.
        :type style_control: EbuTtDDestinationStyleControl
        """

        self._style_control = style_control
