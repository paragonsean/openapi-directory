# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InputDestinationVpc(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_zone: str=None, network_interface_id: str=None):
        """InputDestinationVpc - a model defined in OpenAPI

        :param availability_zone: The availability_zone of this InputDestinationVpc.
        :param network_interface_id: The network_interface_id of this InputDestinationVpc.
        """
        self.openapi_types = {
            'availability_zone': str,
            'network_interface_id': str
        }

        self.attribute_map = {
            'availability_zone': 'AvailabilityZone',
            'network_interface_id': 'NetworkInterfaceId'
        }

        self._availability_zone = availability_zone
        self._network_interface_id = network_interface_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputDestinationVpc':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputDestination_Vpc of this InputDestinationVpc.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_zone(self):
        """Gets the availability_zone of this InputDestinationVpc.


        :return: The availability_zone of this InputDestinationVpc.
        :rtype: str
        """
        return self._availability_zone

    @availability_zone.setter
    def availability_zone(self, availability_zone):
        """Sets the availability_zone of this InputDestinationVpc.


        :param availability_zone: The availability_zone of this InputDestinationVpc.
        :type availability_zone: str
        """

        self._availability_zone = availability_zone

    @property
    def network_interface_id(self):
        """Gets the network_interface_id of this InputDestinationVpc.


        :return: The network_interface_id of this InputDestinationVpc.
        :rtype: str
        """
        return self._network_interface_id

    @network_interface_id.setter
    def network_interface_id(self, network_interface_id):
        """Sets the network_interface_id of this InputDestinationVpc.


        :param network_interface_id: The network_interface_id of this InputDestinationVpc.
        :type network_interface_id: str
        """

        self._network_interface_id = network_interface_id
