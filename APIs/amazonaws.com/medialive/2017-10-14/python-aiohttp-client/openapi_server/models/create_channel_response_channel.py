# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_class import ChannelClass
from openapi_server.models.channel_state import ChannelState
from openapi_server.models.delete_channel_response_cdi_input_specification import DeleteChannelResponseCdiInputSpecification
from openapi_server.models.delete_channel_response_encoder_settings import DeleteChannelResponseEncoderSettings
from openapi_server.models.delete_channel_response_input_specification import DeleteChannelResponseInputSpecification
from openapi_server.models.delete_channel_response_maintenance import DeleteChannelResponseMaintenance
from openapi_server.models.delete_channel_response_vpc import DeleteChannelResponseVpc
from openapi_server.models.log_level import LogLevel
from openapi_server import util


class CreateChannelResponseChannel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, cdi_input_specification: DeleteChannelResponseCdiInputSpecification=None, channel_class: ChannelClass=None, destinations: List=None, egress_endpoints: List=None, encoder_settings: DeleteChannelResponseEncoderSettings=None, id: str=None, input_attachments: List=None, input_specification: DeleteChannelResponseInputSpecification=None, log_level: LogLevel=None, maintenance: DeleteChannelResponseMaintenance=None, name: str=None, pipeline_details: List=None, pipelines_running_count: int=None, role_arn: str=None, state: ChannelState=None, tags: Dict=None, vpc: DeleteChannelResponseVpc=None):
        """CreateChannelResponseChannel - a model defined in OpenAPI

        :param arn: The arn of this CreateChannelResponseChannel.
        :param cdi_input_specification: The cdi_input_specification of this CreateChannelResponseChannel.
        :param channel_class: The channel_class of this CreateChannelResponseChannel.
        :param destinations: The destinations of this CreateChannelResponseChannel.
        :param egress_endpoints: The egress_endpoints of this CreateChannelResponseChannel.
        :param encoder_settings: The encoder_settings of this CreateChannelResponseChannel.
        :param id: The id of this CreateChannelResponseChannel.
        :param input_attachments: The input_attachments of this CreateChannelResponseChannel.
        :param input_specification: The input_specification of this CreateChannelResponseChannel.
        :param log_level: The log_level of this CreateChannelResponseChannel.
        :param maintenance: The maintenance of this CreateChannelResponseChannel.
        :param name: The name of this CreateChannelResponseChannel.
        :param pipeline_details: The pipeline_details of this CreateChannelResponseChannel.
        :param pipelines_running_count: The pipelines_running_count of this CreateChannelResponseChannel.
        :param role_arn: The role_arn of this CreateChannelResponseChannel.
        :param state: The state of this CreateChannelResponseChannel.
        :param tags: The tags of this CreateChannelResponseChannel.
        :param vpc: The vpc of this CreateChannelResponseChannel.
        """
        self.openapi_types = {
            'arn': str,
            'cdi_input_specification': DeleteChannelResponseCdiInputSpecification,
            'channel_class': ChannelClass,
            'destinations': List,
            'egress_endpoints': List,
            'encoder_settings': DeleteChannelResponseEncoderSettings,
            'id': str,
            'input_attachments': List,
            'input_specification': DeleteChannelResponseInputSpecification,
            'log_level': LogLevel,
            'maintenance': DeleteChannelResponseMaintenance,
            'name': str,
            'pipeline_details': List,
            'pipelines_running_count': int,
            'role_arn': str,
            'state': ChannelState,
            'tags': Dict,
            'vpc': DeleteChannelResponseVpc
        }

        self.attribute_map = {
            'arn': 'Arn',
            'cdi_input_specification': 'CdiInputSpecification',
            'channel_class': 'ChannelClass',
            'destinations': 'Destinations',
            'egress_endpoints': 'EgressEndpoints',
            'encoder_settings': 'EncoderSettings',
            'id': 'Id',
            'input_attachments': 'InputAttachments',
            'input_specification': 'InputSpecification',
            'log_level': 'LogLevel',
            'maintenance': 'Maintenance',
            'name': 'Name',
            'pipeline_details': 'PipelineDetails',
            'pipelines_running_count': 'PipelinesRunningCount',
            'role_arn': 'RoleArn',
            'state': 'State',
            'tags': 'Tags',
            'vpc': 'Vpc'
        }

        self._arn = arn
        self._cdi_input_specification = cdi_input_specification
        self._channel_class = channel_class
        self._destinations = destinations
        self._egress_endpoints = egress_endpoints
        self._encoder_settings = encoder_settings
        self._id = id
        self._input_attachments = input_attachments
        self._input_specification = input_specification
        self._log_level = log_level
        self._maintenance = maintenance
        self._name = name
        self._pipeline_details = pipeline_details
        self._pipelines_running_count = pipelines_running_count
        self._role_arn = role_arn
        self._state = state
        self._tags = tags
        self._vpc = vpc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateChannelResponseChannel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateChannelResponse_Channel of this CreateChannelResponseChannel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this CreateChannelResponseChannel.


        :return: The arn of this CreateChannelResponseChannel.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this CreateChannelResponseChannel.


        :param arn: The arn of this CreateChannelResponseChannel.
        :type arn: str
        """

        self._arn = arn

    @property
    def cdi_input_specification(self):
        """Gets the cdi_input_specification of this CreateChannelResponseChannel.


        :return: The cdi_input_specification of this CreateChannelResponseChannel.
        :rtype: DeleteChannelResponseCdiInputSpecification
        """
        return self._cdi_input_specification

    @cdi_input_specification.setter
    def cdi_input_specification(self, cdi_input_specification):
        """Sets the cdi_input_specification of this CreateChannelResponseChannel.


        :param cdi_input_specification: The cdi_input_specification of this CreateChannelResponseChannel.
        :type cdi_input_specification: DeleteChannelResponseCdiInputSpecification
        """

        self._cdi_input_specification = cdi_input_specification

    @property
    def channel_class(self):
        """Gets the channel_class of this CreateChannelResponseChannel.


        :return: The channel_class of this CreateChannelResponseChannel.
        :rtype: ChannelClass
        """
        return self._channel_class

    @channel_class.setter
    def channel_class(self, channel_class):
        """Sets the channel_class of this CreateChannelResponseChannel.


        :param channel_class: The channel_class of this CreateChannelResponseChannel.
        :type channel_class: ChannelClass
        """

        self._channel_class = channel_class

    @property
    def destinations(self):
        """Gets the destinations of this CreateChannelResponseChannel.


        :return: The destinations of this CreateChannelResponseChannel.
        :rtype: List
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this CreateChannelResponseChannel.


        :param destinations: The destinations of this CreateChannelResponseChannel.
        :type destinations: List
        """

        self._destinations = destinations

    @property
    def egress_endpoints(self):
        """Gets the egress_endpoints of this CreateChannelResponseChannel.


        :return: The egress_endpoints of this CreateChannelResponseChannel.
        :rtype: List
        """
        return self._egress_endpoints

    @egress_endpoints.setter
    def egress_endpoints(self, egress_endpoints):
        """Sets the egress_endpoints of this CreateChannelResponseChannel.


        :param egress_endpoints: The egress_endpoints of this CreateChannelResponseChannel.
        :type egress_endpoints: List
        """

        self._egress_endpoints = egress_endpoints

    @property
    def encoder_settings(self):
        """Gets the encoder_settings of this CreateChannelResponseChannel.


        :return: The encoder_settings of this CreateChannelResponseChannel.
        :rtype: DeleteChannelResponseEncoderSettings
        """
        return self._encoder_settings

    @encoder_settings.setter
    def encoder_settings(self, encoder_settings):
        """Sets the encoder_settings of this CreateChannelResponseChannel.


        :param encoder_settings: The encoder_settings of this CreateChannelResponseChannel.
        :type encoder_settings: DeleteChannelResponseEncoderSettings
        """

        self._encoder_settings = encoder_settings

    @property
    def id(self):
        """Gets the id of this CreateChannelResponseChannel.


        :return: The id of this CreateChannelResponseChannel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateChannelResponseChannel.


        :param id: The id of this CreateChannelResponseChannel.
        :type id: str
        """

        self._id = id

    @property
    def input_attachments(self):
        """Gets the input_attachments of this CreateChannelResponseChannel.


        :return: The input_attachments of this CreateChannelResponseChannel.
        :rtype: List
        """
        return self._input_attachments

    @input_attachments.setter
    def input_attachments(self, input_attachments):
        """Sets the input_attachments of this CreateChannelResponseChannel.


        :param input_attachments: The input_attachments of this CreateChannelResponseChannel.
        :type input_attachments: List
        """

        self._input_attachments = input_attachments

    @property
    def input_specification(self):
        """Gets the input_specification of this CreateChannelResponseChannel.


        :return: The input_specification of this CreateChannelResponseChannel.
        :rtype: DeleteChannelResponseInputSpecification
        """
        return self._input_specification

    @input_specification.setter
    def input_specification(self, input_specification):
        """Sets the input_specification of this CreateChannelResponseChannel.


        :param input_specification: The input_specification of this CreateChannelResponseChannel.
        :type input_specification: DeleteChannelResponseInputSpecification
        """

        self._input_specification = input_specification

    @property
    def log_level(self):
        """Gets the log_level of this CreateChannelResponseChannel.


        :return: The log_level of this CreateChannelResponseChannel.
        :rtype: LogLevel
        """
        return self._log_level

    @log_level.setter
    def log_level(self, log_level):
        """Sets the log_level of this CreateChannelResponseChannel.


        :param log_level: The log_level of this CreateChannelResponseChannel.
        :type log_level: LogLevel
        """

        self._log_level = log_level

    @property
    def maintenance(self):
        """Gets the maintenance of this CreateChannelResponseChannel.


        :return: The maintenance of this CreateChannelResponseChannel.
        :rtype: DeleteChannelResponseMaintenance
        """
        return self._maintenance

    @maintenance.setter
    def maintenance(self, maintenance):
        """Sets the maintenance of this CreateChannelResponseChannel.


        :param maintenance: The maintenance of this CreateChannelResponseChannel.
        :type maintenance: DeleteChannelResponseMaintenance
        """

        self._maintenance = maintenance

    @property
    def name(self):
        """Gets the name of this CreateChannelResponseChannel.


        :return: The name of this CreateChannelResponseChannel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateChannelResponseChannel.


        :param name: The name of this CreateChannelResponseChannel.
        :type name: str
        """

        self._name = name

    @property
    def pipeline_details(self):
        """Gets the pipeline_details of this CreateChannelResponseChannel.


        :return: The pipeline_details of this CreateChannelResponseChannel.
        :rtype: List
        """
        return self._pipeline_details

    @pipeline_details.setter
    def pipeline_details(self, pipeline_details):
        """Sets the pipeline_details of this CreateChannelResponseChannel.


        :param pipeline_details: The pipeline_details of this CreateChannelResponseChannel.
        :type pipeline_details: List
        """

        self._pipeline_details = pipeline_details

    @property
    def pipelines_running_count(self):
        """Gets the pipelines_running_count of this CreateChannelResponseChannel.


        :return: The pipelines_running_count of this CreateChannelResponseChannel.
        :rtype: int
        """
        return self._pipelines_running_count

    @pipelines_running_count.setter
    def pipelines_running_count(self, pipelines_running_count):
        """Sets the pipelines_running_count of this CreateChannelResponseChannel.


        :param pipelines_running_count: The pipelines_running_count of this CreateChannelResponseChannel.
        :type pipelines_running_count: int
        """

        self._pipelines_running_count = pipelines_running_count

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateChannelResponseChannel.


        :return: The role_arn of this CreateChannelResponseChannel.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateChannelResponseChannel.


        :param role_arn: The role_arn of this CreateChannelResponseChannel.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def state(self):
        """Gets the state of this CreateChannelResponseChannel.


        :return: The state of this CreateChannelResponseChannel.
        :rtype: ChannelState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CreateChannelResponseChannel.


        :param state: The state of this CreateChannelResponseChannel.
        :type state: ChannelState
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this CreateChannelResponseChannel.


        :return: The tags of this CreateChannelResponseChannel.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateChannelResponseChannel.


        :param tags: The tags of this CreateChannelResponseChannel.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def vpc(self):
        """Gets the vpc of this CreateChannelResponseChannel.


        :return: The vpc of this CreateChannelResponseChannel.
        :rtype: DeleteChannelResponseVpc
        """
        return self._vpc

    @vpc.setter
    def vpc(self, vpc):
        """Sets the vpc of this CreateChannelResponseChannel.


        :param vpc: The vpc of this CreateChannelResponseChannel.
        :type vpc: DeleteChannelResponseVpc
        """

        self._vpc = vpc
