# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nielsen_watermarks_distribution_types import NielsenWatermarksDistributionTypes
from openapi_server.models.nielsen_watermarks_settings_nielsen_cbet_settings import NielsenWatermarksSettingsNielsenCbetSettings
from openapi_server.models.nielsen_watermarks_settings_nielsen_naes_ii_nw_settings import NielsenWatermarksSettingsNielsenNaesIiNwSettings
from openapi_server import util


class AudioWatermarkSettingsNielsenWatermarksSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nielsen_cbet_settings: NielsenWatermarksSettingsNielsenCbetSettings=None, nielsen_distribution_type: NielsenWatermarksDistributionTypes=None, nielsen_naes_ii_nw_settings: NielsenWatermarksSettingsNielsenNaesIiNwSettings=None):
        """AudioWatermarkSettingsNielsenWatermarksSettings - a model defined in OpenAPI

        :param nielsen_cbet_settings: The nielsen_cbet_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.
        :param nielsen_distribution_type: The nielsen_distribution_type of this AudioWatermarkSettingsNielsenWatermarksSettings.
        :param nielsen_naes_ii_nw_settings: The nielsen_naes_ii_nw_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.
        """
        self.openapi_types = {
            'nielsen_cbet_settings': NielsenWatermarksSettingsNielsenCbetSettings,
            'nielsen_distribution_type': NielsenWatermarksDistributionTypes,
            'nielsen_naes_ii_nw_settings': NielsenWatermarksSettingsNielsenNaesIiNwSettings
        }

        self.attribute_map = {
            'nielsen_cbet_settings': 'NielsenCbetSettings',
            'nielsen_distribution_type': 'NielsenDistributionType',
            'nielsen_naes_ii_nw_settings': 'NielsenNaesIiNwSettings'
        }

        self._nielsen_cbet_settings = nielsen_cbet_settings
        self._nielsen_distribution_type = nielsen_distribution_type
        self._nielsen_naes_ii_nw_settings = nielsen_naes_ii_nw_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioWatermarkSettingsNielsenWatermarksSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioWatermarkSettings_NielsenWatermarksSettings of this AudioWatermarkSettingsNielsenWatermarksSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nielsen_cbet_settings(self):
        """Gets the nielsen_cbet_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.


        :return: The nielsen_cbet_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.
        :rtype: NielsenWatermarksSettingsNielsenCbetSettings
        """
        return self._nielsen_cbet_settings

    @nielsen_cbet_settings.setter
    def nielsen_cbet_settings(self, nielsen_cbet_settings):
        """Sets the nielsen_cbet_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.


        :param nielsen_cbet_settings: The nielsen_cbet_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.
        :type nielsen_cbet_settings: NielsenWatermarksSettingsNielsenCbetSettings
        """

        self._nielsen_cbet_settings = nielsen_cbet_settings

    @property
    def nielsen_distribution_type(self):
        """Gets the nielsen_distribution_type of this AudioWatermarkSettingsNielsenWatermarksSettings.


        :return: The nielsen_distribution_type of this AudioWatermarkSettingsNielsenWatermarksSettings.
        :rtype: NielsenWatermarksDistributionTypes
        """
        return self._nielsen_distribution_type

    @nielsen_distribution_type.setter
    def nielsen_distribution_type(self, nielsen_distribution_type):
        """Sets the nielsen_distribution_type of this AudioWatermarkSettingsNielsenWatermarksSettings.


        :param nielsen_distribution_type: The nielsen_distribution_type of this AudioWatermarkSettingsNielsenWatermarksSettings.
        :type nielsen_distribution_type: NielsenWatermarksDistributionTypes
        """

        self._nielsen_distribution_type = nielsen_distribution_type

    @property
    def nielsen_naes_ii_nw_settings(self):
        """Gets the nielsen_naes_ii_nw_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.


        :return: The nielsen_naes_ii_nw_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.
        :rtype: NielsenWatermarksSettingsNielsenNaesIiNwSettings
        """
        return self._nielsen_naes_ii_nw_settings

    @nielsen_naes_ii_nw_settings.setter
    def nielsen_naes_ii_nw_settings(self, nielsen_naes_ii_nw_settings):
        """Sets the nielsen_naes_ii_nw_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.


        :param nielsen_naes_ii_nw_settings: The nielsen_naes_ii_nw_settings of this AudioWatermarkSettingsNielsenWatermarksSettings.
        :type nielsen_naes_ii_nw_settings: NielsenWatermarksSettingsNielsenNaesIiNwSettings
        """

        self._nielsen_naes_ii_nw_settings = nielsen_naes_ii_nw_settings
