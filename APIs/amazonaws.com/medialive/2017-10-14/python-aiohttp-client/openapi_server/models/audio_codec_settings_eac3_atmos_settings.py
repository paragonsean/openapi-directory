# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.eac3_atmos_coding_mode import Eac3AtmosCodingMode
from openapi_server.models.eac3_atmos_drc_line import Eac3AtmosDrcLine
from openapi_server.models.eac3_atmos_drc_rf import Eac3AtmosDrcRf
from openapi_server import util


class AudioCodecSettingsEac3AtmosSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bitrate: float=None, coding_mode: Eac3AtmosCodingMode=None, dialnorm: int=None, drc_line: Eac3AtmosDrcLine=None, drc_rf: Eac3AtmosDrcRf=None, height_trim: float=None, surround_trim: float=None):
        """AudioCodecSettingsEac3AtmosSettings - a model defined in OpenAPI

        :param bitrate: The bitrate of this AudioCodecSettingsEac3AtmosSettings.
        :param coding_mode: The coding_mode of this AudioCodecSettingsEac3AtmosSettings.
        :param dialnorm: The dialnorm of this AudioCodecSettingsEac3AtmosSettings.
        :param drc_line: The drc_line of this AudioCodecSettingsEac3AtmosSettings.
        :param drc_rf: The drc_rf of this AudioCodecSettingsEac3AtmosSettings.
        :param height_trim: The height_trim of this AudioCodecSettingsEac3AtmosSettings.
        :param surround_trim: The surround_trim of this AudioCodecSettingsEac3AtmosSettings.
        """
        self.openapi_types = {
            'bitrate': float,
            'coding_mode': Eac3AtmosCodingMode,
            'dialnorm': int,
            'drc_line': Eac3AtmosDrcLine,
            'drc_rf': Eac3AtmosDrcRf,
            'height_trim': float,
            'surround_trim': float
        }

        self.attribute_map = {
            'bitrate': 'Bitrate',
            'coding_mode': 'CodingMode',
            'dialnorm': 'Dialnorm',
            'drc_line': 'DrcLine',
            'drc_rf': 'DrcRf',
            'height_trim': 'HeightTrim',
            'surround_trim': 'SurroundTrim'
        }

        self._bitrate = bitrate
        self._coding_mode = coding_mode
        self._dialnorm = dialnorm
        self._drc_line = drc_line
        self._drc_rf = drc_rf
        self._height_trim = height_trim
        self._surround_trim = surround_trim

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioCodecSettingsEac3AtmosSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioCodecSettings_Eac3AtmosSettings of this AudioCodecSettingsEac3AtmosSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bitrate(self):
        """Gets the bitrate of this AudioCodecSettingsEac3AtmosSettings.


        :return: The bitrate of this AudioCodecSettingsEac3AtmosSettings.
        :rtype: float
        """
        return self._bitrate

    @bitrate.setter
    def bitrate(self, bitrate):
        """Sets the bitrate of this AudioCodecSettingsEac3AtmosSettings.


        :param bitrate: The bitrate of this AudioCodecSettingsEac3AtmosSettings.
        :type bitrate: float
        """

        self._bitrate = bitrate

    @property
    def coding_mode(self):
        """Gets the coding_mode of this AudioCodecSettingsEac3AtmosSettings.


        :return: The coding_mode of this AudioCodecSettingsEac3AtmosSettings.
        :rtype: Eac3AtmosCodingMode
        """
        return self._coding_mode

    @coding_mode.setter
    def coding_mode(self, coding_mode):
        """Sets the coding_mode of this AudioCodecSettingsEac3AtmosSettings.


        :param coding_mode: The coding_mode of this AudioCodecSettingsEac3AtmosSettings.
        :type coding_mode: Eac3AtmosCodingMode
        """

        self._coding_mode = coding_mode

    @property
    def dialnorm(self):
        """Gets the dialnorm of this AudioCodecSettingsEac3AtmosSettings.


        :return: The dialnorm of this AudioCodecSettingsEac3AtmosSettings.
        :rtype: int
        """
        return self._dialnorm

    @dialnorm.setter
    def dialnorm(self, dialnorm):
        """Sets the dialnorm of this AudioCodecSettingsEac3AtmosSettings.


        :param dialnorm: The dialnorm of this AudioCodecSettingsEac3AtmosSettings.
        :type dialnorm: int
        """

        self._dialnorm = dialnorm

    @property
    def drc_line(self):
        """Gets the drc_line of this AudioCodecSettingsEac3AtmosSettings.


        :return: The drc_line of this AudioCodecSettingsEac3AtmosSettings.
        :rtype: Eac3AtmosDrcLine
        """
        return self._drc_line

    @drc_line.setter
    def drc_line(self, drc_line):
        """Sets the drc_line of this AudioCodecSettingsEac3AtmosSettings.


        :param drc_line: The drc_line of this AudioCodecSettingsEac3AtmosSettings.
        :type drc_line: Eac3AtmosDrcLine
        """

        self._drc_line = drc_line

    @property
    def drc_rf(self):
        """Gets the drc_rf of this AudioCodecSettingsEac3AtmosSettings.


        :return: The drc_rf of this AudioCodecSettingsEac3AtmosSettings.
        :rtype: Eac3AtmosDrcRf
        """
        return self._drc_rf

    @drc_rf.setter
    def drc_rf(self, drc_rf):
        """Sets the drc_rf of this AudioCodecSettingsEac3AtmosSettings.


        :param drc_rf: The drc_rf of this AudioCodecSettingsEac3AtmosSettings.
        :type drc_rf: Eac3AtmosDrcRf
        """

        self._drc_rf = drc_rf

    @property
    def height_trim(self):
        """Gets the height_trim of this AudioCodecSettingsEac3AtmosSettings.


        :return: The height_trim of this AudioCodecSettingsEac3AtmosSettings.
        :rtype: float
        """
        return self._height_trim

    @height_trim.setter
    def height_trim(self, height_trim):
        """Sets the height_trim of this AudioCodecSettingsEac3AtmosSettings.


        :param height_trim: The height_trim of this AudioCodecSettingsEac3AtmosSettings.
        :type height_trim: float
        """

        self._height_trim = height_trim

    @property
    def surround_trim(self):
        """Gets the surround_trim of this AudioCodecSettingsEac3AtmosSettings.


        :return: The surround_trim of this AudioCodecSettingsEac3AtmosSettings.
        :rtype: float
        """
        return self._surround_trim

    @surround_trim.setter
    def surround_trim(self, surround_trim):
        """Sets the surround_trim of this AudioCodecSettingsEac3AtmosSettings.


        :param surround_trim: The surround_trim of this AudioCodecSettingsEac3AtmosSettings.
        :type surround_trim: float
        """

        self._surround_trim = surround_trim
