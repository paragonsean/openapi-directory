/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateMultiplexRequest.h
 *
 * A request to create a multiplex.
 */

#ifndef OAICreateMultiplexRequest_H
#define OAICreateMultiplexRequest_H

#include <QJsonObject>

#include "OAIDeleteMultiplexResponse_MultiplexSettings.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeleteMultiplexResponse_MultiplexSettings;

class OAICreateMultiplexRequest : public OAIObject {
public:
    OAICreateMultiplexRequest();
    OAICreateMultiplexRequest(QString json);
    ~OAICreateMultiplexRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAvailabilityZones() const;
    void setAvailabilityZones(const QList &availability_zones);
    bool is_availability_zones_Set() const;
    bool is_availability_zones_Valid() const;

    OAIDeleteMultiplexResponse_MultiplexSettings getMultiplexSettings() const;
    void setMultiplexSettings(const OAIDeleteMultiplexResponse_MultiplexSettings &multiplex_settings);
    bool is_multiplex_settings_Set() const;
    bool is_multiplex_settings_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_availability_zones;
    bool m_availability_zones_isSet;
    bool m_availability_zones_isValid;

    OAIDeleteMultiplexResponse_MultiplexSettings m_multiplex_settings;
    bool m_multiplex_settings_isSet;
    bool m_multiplex_settings_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateMultiplexRequest)

#endif // OAICreateMultiplexRequest_H
