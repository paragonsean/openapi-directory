/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchStopResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchStopResponse::OAIBatchStopResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchStopResponse::OAIBatchStopResponse() {
    this->initializeModel();
}

OAIBatchStopResponse::~OAIBatchStopResponse() {}

void OAIBatchStopResponse::initializeModel() {

    m_failed_isSet = false;
    m_failed_isValid = false;

    m_successful_isSet = false;
    m_successful_isValid = false;
}

void OAIBatchStopResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchStopResponse::fromJsonObject(QJsonObject json) {

    m_failed_isValid = ::OpenAPI::fromJsonValue(m_failed, json[QString("Failed")]);
    m_failed_isSet = !json[QString("Failed")].isNull() && m_failed_isValid;

    m_successful_isValid = ::OpenAPI::fromJsonValue(m_successful, json[QString("Successful")]);
    m_successful_isSet = !json[QString("Successful")].isNull() && m_successful_isValid;
}

QString OAIBatchStopResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchStopResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_failed.isSet()) {
        obj.insert(QString("Failed"), ::OpenAPI::toJsonValue(m_failed));
    }
    if (m_successful.isSet()) {
        obj.insert(QString("Successful"), ::OpenAPI::toJsonValue(m_successful));
    }
    return obj;
}

QList OAIBatchStopResponse::getFailed() const {
    return m_failed;
}
void OAIBatchStopResponse::setFailed(const QList &failed) {
    m_failed = failed;
    m_failed_isSet = true;
}

bool OAIBatchStopResponse::is_failed_Set() const{
    return m_failed_isSet;
}

bool OAIBatchStopResponse::is_failed_Valid() const{
    return m_failed_isValid;
}

QList OAIBatchStopResponse::getSuccessful() const {
    return m_successful;
}
void OAIBatchStopResponse::setSuccessful(const QList &successful) {
    m_successful = successful;
    m_successful_isSet = true;
}

bool OAIBatchStopResponse::is_successful_Set() const{
    return m_successful_isSet;
}

bool OAIBatchStopResponse::is_successful_Valid() const{
    return m_successful_isValid;
}

bool OAIBatchStopResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failed.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_successful.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchStopResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
