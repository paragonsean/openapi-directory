/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputAttachment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputAttachment::OAIInputAttachment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputAttachment::OAIInputAttachment() {
    this->initializeModel();
}

OAIInputAttachment::~OAIInputAttachment() {}

void OAIInputAttachment::initializeModel() {

    m_automatic_input_failover_settings_isSet = false;
    m_automatic_input_failover_settings_isValid = false;

    m_input_attachment_name_isSet = false;
    m_input_attachment_name_isValid = false;

    m_input_id_isSet = false;
    m_input_id_isValid = false;

    m_input_settings_isSet = false;
    m_input_settings_isValid = false;
}

void OAIInputAttachment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputAttachment::fromJsonObject(QJsonObject json) {

    m_automatic_input_failover_settings_isValid = ::OpenAPI::fromJsonValue(m_automatic_input_failover_settings, json[QString("AutomaticInputFailoverSettings")]);
    m_automatic_input_failover_settings_isSet = !json[QString("AutomaticInputFailoverSettings")].isNull() && m_automatic_input_failover_settings_isValid;

    m_input_attachment_name_isValid = ::OpenAPI::fromJsonValue(m_input_attachment_name, json[QString("InputAttachmentName")]);
    m_input_attachment_name_isSet = !json[QString("InputAttachmentName")].isNull() && m_input_attachment_name_isValid;

    m_input_id_isValid = ::OpenAPI::fromJsonValue(m_input_id, json[QString("InputId")]);
    m_input_id_isSet = !json[QString("InputId")].isNull() && m_input_id_isValid;

    m_input_settings_isValid = ::OpenAPI::fromJsonValue(m_input_settings, json[QString("InputSettings")]);
    m_input_settings_isSet = !json[QString("InputSettings")].isNull() && m_input_settings_isValid;
}

QString OAIInputAttachment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputAttachment::asJsonObject() const {
    QJsonObject obj;
    if (m_automatic_input_failover_settings.isSet()) {
        obj.insert(QString("AutomaticInputFailoverSettings"), ::OpenAPI::toJsonValue(m_automatic_input_failover_settings));
    }
    if (m_input_attachment_name_isSet) {
        obj.insert(QString("InputAttachmentName"), ::OpenAPI::toJsonValue(m_input_attachment_name));
    }
    if (m_input_id_isSet) {
        obj.insert(QString("InputId"), ::OpenAPI::toJsonValue(m_input_id));
    }
    if (m_input_settings.isSet()) {
        obj.insert(QString("InputSettings"), ::OpenAPI::toJsonValue(m_input_settings));
    }
    return obj;
}

OAIInputAttachment_AutomaticInputFailoverSettings OAIInputAttachment::getAutomaticInputFailoverSettings() const {
    return m_automatic_input_failover_settings;
}
void OAIInputAttachment::setAutomaticInputFailoverSettings(const OAIInputAttachment_AutomaticInputFailoverSettings &automatic_input_failover_settings) {
    m_automatic_input_failover_settings = automatic_input_failover_settings;
    m_automatic_input_failover_settings_isSet = true;
}

bool OAIInputAttachment::is_automatic_input_failover_settings_Set() const{
    return m_automatic_input_failover_settings_isSet;
}

bool OAIInputAttachment::is_automatic_input_failover_settings_Valid() const{
    return m_automatic_input_failover_settings_isValid;
}

QString OAIInputAttachment::getInputAttachmentName() const {
    return m_input_attachment_name;
}
void OAIInputAttachment::setInputAttachmentName(const QString &input_attachment_name) {
    m_input_attachment_name = input_attachment_name;
    m_input_attachment_name_isSet = true;
}

bool OAIInputAttachment::is_input_attachment_name_Set() const{
    return m_input_attachment_name_isSet;
}

bool OAIInputAttachment::is_input_attachment_name_Valid() const{
    return m_input_attachment_name_isValid;
}

QString OAIInputAttachment::getInputId() const {
    return m_input_id;
}
void OAIInputAttachment::setInputId(const QString &input_id) {
    m_input_id = input_id;
    m_input_id_isSet = true;
}

bool OAIInputAttachment::is_input_id_Set() const{
    return m_input_id_isSet;
}

bool OAIInputAttachment::is_input_id_Valid() const{
    return m_input_id_isValid;
}

OAIInputAttachment_InputSettings OAIInputAttachment::getInputSettings() const {
    return m_input_settings;
}
void OAIInputAttachment::setInputSettings(const OAIInputAttachment_InputSettings &input_settings) {
    m_input_settings = input_settings;
    m_input_settings_isSet = true;
}

bool OAIInputAttachment::is_input_settings_Set() const{
    return m_input_settings_isSet;
}

bool OAIInputAttachment::is_input_settings_Valid() const{
    return m_input_settings_isValid;
}

bool OAIInputAttachment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automatic_input_failover_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_attachment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputAttachment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
