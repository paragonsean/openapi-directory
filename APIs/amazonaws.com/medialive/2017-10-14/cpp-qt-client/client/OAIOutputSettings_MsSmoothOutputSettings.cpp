/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputSettings_MsSmoothOutputSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputSettings_MsSmoothOutputSettings::OAIOutputSettings_MsSmoothOutputSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputSettings_MsSmoothOutputSettings::OAIOutputSettings_MsSmoothOutputSettings() {
    this->initializeModel();
}

OAIOutputSettings_MsSmoothOutputSettings::~OAIOutputSettings_MsSmoothOutputSettings() {}

void OAIOutputSettings_MsSmoothOutputSettings::initializeModel() {

    m_h265_packaging_type_isSet = false;
    m_h265_packaging_type_isValid = false;

    m_name_modifier_isSet = false;
    m_name_modifier_isValid = false;
}

void OAIOutputSettings_MsSmoothOutputSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutputSettings_MsSmoothOutputSettings::fromJsonObject(QJsonObject json) {

    m_h265_packaging_type_isValid = ::OpenAPI::fromJsonValue(m_h265_packaging_type, json[QString("H265PackagingType")]);
    m_h265_packaging_type_isSet = !json[QString("H265PackagingType")].isNull() && m_h265_packaging_type_isValid;

    m_name_modifier_isValid = ::OpenAPI::fromJsonValue(m_name_modifier, json[QString("NameModifier")]);
    m_name_modifier_isSet = !json[QString("NameModifier")].isNull() && m_name_modifier_isValid;
}

QString OAIOutputSettings_MsSmoothOutputSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutputSettings_MsSmoothOutputSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_h265_packaging_type.isSet()) {
        obj.insert(QString("H265PackagingType"), ::OpenAPI::toJsonValue(m_h265_packaging_type));
    }
    if (m_name_modifier_isSet) {
        obj.insert(QString("NameModifier"), ::OpenAPI::toJsonValue(m_name_modifier));
    }
    return obj;
}

OAIMsSmoothH265PackagingType OAIOutputSettings_MsSmoothOutputSettings::getH265PackagingType() const {
    return m_h265_packaging_type;
}
void OAIOutputSettings_MsSmoothOutputSettings::setH265PackagingType(const OAIMsSmoothH265PackagingType &h265_packaging_type) {
    m_h265_packaging_type = h265_packaging_type;
    m_h265_packaging_type_isSet = true;
}

bool OAIOutputSettings_MsSmoothOutputSettings::is_h265_packaging_type_Set() const{
    return m_h265_packaging_type_isSet;
}

bool OAIOutputSettings_MsSmoothOutputSettings::is_h265_packaging_type_Valid() const{
    return m_h265_packaging_type_isValid;
}

QString OAIOutputSettings_MsSmoothOutputSettings::getNameModifier() const {
    return m_name_modifier;
}
void OAIOutputSettings_MsSmoothOutputSettings::setNameModifier(const QString &name_modifier) {
    m_name_modifier = name_modifier;
    m_name_modifier_isSet = true;
}

bool OAIOutputSettings_MsSmoothOutputSettings::is_name_modifier_Set() const{
    return m_name_modifier_isSet;
}

bool OAIOutputSettings_MsSmoothOutputSettings::is_name_modifier_Valid() const{
    return m_name_modifier_isValid;
}

bool OAIOutputSettings_MsSmoothOutputSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_h265_packaging_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_modifier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutputSettings_MsSmoothOutputSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
