/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideoSelectorSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideoSelectorSettings::OAIVideoSelectorSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideoSelectorSettings::OAIVideoSelectorSettings() {
    this->initializeModel();
}

OAIVideoSelectorSettings::~OAIVideoSelectorSettings() {}

void OAIVideoSelectorSettings::initializeModel() {

    m_video_selector_pid_isSet = false;
    m_video_selector_pid_isValid = false;

    m_video_selector_program_id_isSet = false;
    m_video_selector_program_id_isValid = false;
}

void OAIVideoSelectorSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVideoSelectorSettings::fromJsonObject(QJsonObject json) {

    m_video_selector_pid_isValid = ::OpenAPI::fromJsonValue(m_video_selector_pid, json[QString("VideoSelectorPid")]);
    m_video_selector_pid_isSet = !json[QString("VideoSelectorPid")].isNull() && m_video_selector_pid_isValid;

    m_video_selector_program_id_isValid = ::OpenAPI::fromJsonValue(m_video_selector_program_id, json[QString("VideoSelectorProgramId")]);
    m_video_selector_program_id_isSet = !json[QString("VideoSelectorProgramId")].isNull() && m_video_selector_program_id_isValid;
}

QString OAIVideoSelectorSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVideoSelectorSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_video_selector_pid.isSet()) {
        obj.insert(QString("VideoSelectorPid"), ::OpenAPI::toJsonValue(m_video_selector_pid));
    }
    if (m_video_selector_program_id.isSet()) {
        obj.insert(QString("VideoSelectorProgramId"), ::OpenAPI::toJsonValue(m_video_selector_program_id));
    }
    return obj;
}

OAIVideoSelectorSettings_VideoSelectorPid OAIVideoSelectorSettings::getVideoSelectorPid() const {
    return m_video_selector_pid;
}
void OAIVideoSelectorSettings::setVideoSelectorPid(const OAIVideoSelectorSettings_VideoSelectorPid &video_selector_pid) {
    m_video_selector_pid = video_selector_pid;
    m_video_selector_pid_isSet = true;
}

bool OAIVideoSelectorSettings::is_video_selector_pid_Set() const{
    return m_video_selector_pid_isSet;
}

bool OAIVideoSelectorSettings::is_video_selector_pid_Valid() const{
    return m_video_selector_pid_isValid;
}

OAIVideoSelectorSettings_VideoSelectorProgramId OAIVideoSelectorSettings::getVideoSelectorProgramId() const {
    return m_video_selector_program_id;
}
void OAIVideoSelectorSettings::setVideoSelectorProgramId(const OAIVideoSelectorSettings_VideoSelectorProgramId &video_selector_program_id) {
    m_video_selector_program_id = video_selector_program_id;
    m_video_selector_program_id_isSet = true;
}

bool OAIVideoSelectorSettings::is_video_selector_program_id_Set() const{
    return m_video_selector_program_id_isSet;
}

bool OAIVideoSelectorSettings::is_video_selector_program_id_Valid() const{
    return m_video_selector_program_id_isValid;
}

bool OAIVideoSelectorSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_video_selector_pid.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_selector_program_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVideoSelectorSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
