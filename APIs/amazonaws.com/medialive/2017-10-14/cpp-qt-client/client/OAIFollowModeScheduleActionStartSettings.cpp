/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFollowModeScheduleActionStartSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFollowModeScheduleActionStartSettings::OAIFollowModeScheduleActionStartSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFollowModeScheduleActionStartSettings::OAIFollowModeScheduleActionStartSettings() {
    this->initializeModel();
}

OAIFollowModeScheduleActionStartSettings::~OAIFollowModeScheduleActionStartSettings() {}

void OAIFollowModeScheduleActionStartSettings::initializeModel() {

    m_follow_point_isSet = false;
    m_follow_point_isValid = false;

    m_reference_action_name_isSet = false;
    m_reference_action_name_isValid = false;
}

void OAIFollowModeScheduleActionStartSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFollowModeScheduleActionStartSettings::fromJsonObject(QJsonObject json) {

    m_follow_point_isValid = ::OpenAPI::fromJsonValue(m_follow_point, json[QString("FollowPoint")]);
    m_follow_point_isSet = !json[QString("FollowPoint")].isNull() && m_follow_point_isValid;

    m_reference_action_name_isValid = ::OpenAPI::fromJsonValue(m_reference_action_name, json[QString("ReferenceActionName")]);
    m_reference_action_name_isSet = !json[QString("ReferenceActionName")].isNull() && m_reference_action_name_isValid;
}

QString OAIFollowModeScheduleActionStartSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFollowModeScheduleActionStartSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_follow_point.isSet()) {
        obj.insert(QString("FollowPoint"), ::OpenAPI::toJsonValue(m_follow_point));
    }
    if (m_reference_action_name_isSet) {
        obj.insert(QString("ReferenceActionName"), ::OpenAPI::toJsonValue(m_reference_action_name));
    }
    return obj;
}

OAIFollowPoint OAIFollowModeScheduleActionStartSettings::getFollowPoint() const {
    return m_follow_point;
}
void OAIFollowModeScheduleActionStartSettings::setFollowPoint(const OAIFollowPoint &follow_point) {
    m_follow_point = follow_point;
    m_follow_point_isSet = true;
}

bool OAIFollowModeScheduleActionStartSettings::is_follow_point_Set() const{
    return m_follow_point_isSet;
}

bool OAIFollowModeScheduleActionStartSettings::is_follow_point_Valid() const{
    return m_follow_point_isValid;
}

QString OAIFollowModeScheduleActionStartSettings::getReferenceActionName() const {
    return m_reference_action_name;
}
void OAIFollowModeScheduleActionStartSettings::setReferenceActionName(const QString &reference_action_name) {
    m_reference_action_name = reference_action_name;
    m_reference_action_name_isSet = true;
}

bool OAIFollowModeScheduleActionStartSettings::is_reference_action_name_Set() const{
    return m_reference_action_name_isSet;
}

bool OAIFollowModeScheduleActionStartSettings::is_reference_action_name_Valid() const{
    return m_reference_action_name_isValid;
}

bool OAIFollowModeScheduleActionStartSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_follow_point.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_action_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFollowModeScheduleActionStartSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_follow_point_isValid && m_reference_action_name_isValid && true;
}

} // namespace OpenAPI
