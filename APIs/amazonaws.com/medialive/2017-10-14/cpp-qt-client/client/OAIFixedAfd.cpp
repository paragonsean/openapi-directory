/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFixedAfd.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFixedAfd::OAIFixedAfd(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFixedAfd::OAIFixedAfd() {
    this->initializeModel();
}

OAIFixedAfd::~OAIFixedAfd() {}

void OAIFixedAfd::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFixedAfd::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFixedAfd::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AFD_0000", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_0000;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_0010", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_0010;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_0011", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_0011;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_0100", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_0100;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_1000", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_1000;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_1001", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_1001;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_1010", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_1010;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_1011", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_1011;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_1101", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_1101;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_1110", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_1110;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFD_1111", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFixedAfd::_1111;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFixedAfd::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFixedAfd::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFixedAfd::_0000:
            val = "AFD_0000";
            break;
        case eOAIFixedAfd::_0010:
            val = "AFD_0010";
            break;
        case eOAIFixedAfd::_0011:
            val = "AFD_0011";
            break;
        case eOAIFixedAfd::_0100:
            val = "AFD_0100";
            break;
        case eOAIFixedAfd::_1000:
            val = "AFD_1000";
            break;
        case eOAIFixedAfd::_1001:
            val = "AFD_1001";
            break;
        case eOAIFixedAfd::_1010:
            val = "AFD_1010";
            break;
        case eOAIFixedAfd::_1011:
            val = "AFD_1011";
            break;
        case eOAIFixedAfd::_1101:
            val = "AFD_1101";
            break;
        case eOAIFixedAfd::_1110:
            val = "AFD_1110";
            break;
        case eOAIFixedAfd::_1111:
            val = "AFD_1111";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFixedAfd::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFixedAfd::eOAIFixedAfd OAIFixedAfd::getValue() const {
    return m_value;
}

void OAIFixedAfd::setValue(const OAIFixedAfd::eOAIFixedAfd& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFixedAfd::isSet() const {
    
    return m_value_isSet;
}

bool OAIFixedAfd::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
