/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHlsOutputSettings_HlsSettings.h
 *
 * 
 */

#ifndef OAIHlsOutputSettings_HlsSettings_H
#define OAIHlsOutputSettings_HlsSettings_H

#include <QJsonObject>

#include "OAIHlsSettings_AudioOnlyHlsSettings.h"
#include "OAIHlsSettings_Fmp4HlsSettings.h"
#include "OAIHlsSettings_StandardHlsSettings.h"
#include "OAIObject.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHlsSettings_AudioOnlyHlsSettings;
class OAIHlsSettings_Fmp4HlsSettings;
class OAIHlsSettings_StandardHlsSettings;

class OAIHlsOutputSettings_HlsSettings : public OAIObject {
public:
    OAIHlsOutputSettings_HlsSettings();
    OAIHlsOutputSettings_HlsSettings(QString json);
    ~OAIHlsOutputSettings_HlsSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHlsSettings_AudioOnlyHlsSettings getAudioOnlyHlsSettings() const;
    void setAudioOnlyHlsSettings(const OAIHlsSettings_AudioOnlyHlsSettings &audio_only_hls_settings);
    bool is_audio_only_hls_settings_Set() const;
    bool is_audio_only_hls_settings_Valid() const;

    OAIHlsSettings_Fmp4HlsSettings getFmp4HlsSettings() const;
    void setFmp4HlsSettings(const OAIHlsSettings_Fmp4HlsSettings &fmp4_hls_settings);
    bool is_fmp4_hls_settings_Set() const;
    bool is_fmp4_hls_settings_Valid() const;

    OAIObject getFrameCaptureHlsSettings() const;
    void setFrameCaptureHlsSettings(const OAIObject &frame_capture_hls_settings);
    bool is_frame_capture_hls_settings_Set() const;
    bool is_frame_capture_hls_settings_Valid() const;

    OAIHlsSettings_StandardHlsSettings getStandardHlsSettings() const;
    void setStandardHlsSettings(const OAIHlsSettings_StandardHlsSettings &standard_hls_settings);
    bool is_standard_hls_settings_Set() const;
    bool is_standard_hls_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHlsSettings_AudioOnlyHlsSettings m_audio_only_hls_settings;
    bool m_audio_only_hls_settings_isSet;
    bool m_audio_only_hls_settings_isValid;

    OAIHlsSettings_Fmp4HlsSettings m_fmp4_hls_settings;
    bool m_fmp4_hls_settings_isSet;
    bool m_fmp4_hls_settings_isValid;

    OAIObject m_frame_capture_hls_settings;
    bool m_frame_capture_hls_settings_isSet;
    bool m_frame_capture_hls_settings_isValid;

    OAIHlsSettings_StandardHlsSettings m_standard_hls_settings;
    bool m_standard_hls_settings_isSet;
    bool m_standard_hls_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHlsOutputSettings_HlsSettings)

#endif // OAIHlsOutputSettings_HlsSettings_H
