/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateChannel_request_encoderSettings_NielsenConfiguration.h
 *
 * 
 */

#ifndef OAICreateChannel_request_encoderSettings_NielsenConfiguration_H
#define OAICreateChannel_request_encoderSettings_NielsenConfiguration_H

#include <QJsonObject>

#include "OAINielsenPcmToId3TaggingState.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateChannel_request_encoderSettings_NielsenConfiguration : public OAIObject {
public:
    OAICreateChannel_request_encoderSettings_NielsenConfiguration();
    OAICreateChannel_request_encoderSettings_NielsenConfiguration(QString json);
    ~OAICreateChannel_request_encoderSettings_NielsenConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDistributorId() const;
    void setDistributorId(const QString &distributor_id);
    bool is_distributor_id_Set() const;
    bool is_distributor_id_Valid() const;

    OAINielsenPcmToId3TaggingState getNielsenPcmToId3Tagging() const;
    void setNielsenPcmToId3Tagging(const OAINielsenPcmToId3TaggingState &nielsen_pcm_to_id3_tagging);
    bool is_nielsen_pcm_to_id3_tagging_Set() const;
    bool is_nielsen_pcm_to_id3_tagging_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_distributor_id;
    bool m_distributor_id_isSet;
    bool m_distributor_id_isValid;

    OAINielsenPcmToId3TaggingState m_nielsen_pcm_to_id3_tagging;
    bool m_nielsen_pcm_to_id3_tagging_isSet;
    bool m_nielsen_pcm_to_id3_tagging_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateChannel_request_encoderSettings_NielsenConfiguration)

#endif // OAICreateChannel_request_encoderSettings_NielsenConfiguration_H
