/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateInputDeviceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateInputDeviceRequest::OAIUpdateInputDeviceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateInputDeviceRequest::OAIUpdateInputDeviceRequest() {
    this->initializeModel();
}

OAIUpdateInputDeviceRequest::~OAIUpdateInputDeviceRequest() {}

void OAIUpdateInputDeviceRequest::initializeModel() {

    m_hd_device_settings_isSet = false;
    m_hd_device_settings_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_uhd_device_settings_isSet = false;
    m_uhd_device_settings_isValid = false;

    m_availability_zone_isSet = false;
    m_availability_zone_isValid = false;
}

void OAIUpdateInputDeviceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateInputDeviceRequest::fromJsonObject(QJsonObject json) {

    m_hd_device_settings_isValid = ::OpenAPI::fromJsonValue(m_hd_device_settings, json[QString("HdDeviceSettings")]);
    m_hd_device_settings_isSet = !json[QString("HdDeviceSettings")].isNull() && m_hd_device_settings_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_uhd_device_settings_isValid = ::OpenAPI::fromJsonValue(m_uhd_device_settings, json[QString("UhdDeviceSettings")]);
    m_uhd_device_settings_isSet = !json[QString("UhdDeviceSettings")].isNull() && m_uhd_device_settings_isValid;

    m_availability_zone_isValid = ::OpenAPI::fromJsonValue(m_availability_zone, json[QString("AvailabilityZone")]);
    m_availability_zone_isSet = !json[QString("AvailabilityZone")].isNull() && m_availability_zone_isValid;
}

QString OAIUpdateInputDeviceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateInputDeviceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_hd_device_settings.isSet()) {
        obj.insert(QString("HdDeviceSettings"), ::OpenAPI::toJsonValue(m_hd_device_settings));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_uhd_device_settings.isSet()) {
        obj.insert(QString("UhdDeviceSettings"), ::OpenAPI::toJsonValue(m_uhd_device_settings));
    }
    if (m_availability_zone_isSet) {
        obj.insert(QString("AvailabilityZone"), ::OpenAPI::toJsonValue(m_availability_zone));
    }
    return obj;
}

OAIUpdateInputDeviceRequest_HdDeviceSettings OAIUpdateInputDeviceRequest::getHdDeviceSettings() const {
    return m_hd_device_settings;
}
void OAIUpdateInputDeviceRequest::setHdDeviceSettings(const OAIUpdateInputDeviceRequest_HdDeviceSettings &hd_device_settings) {
    m_hd_device_settings = hd_device_settings;
    m_hd_device_settings_isSet = true;
}

bool OAIUpdateInputDeviceRequest::is_hd_device_settings_Set() const{
    return m_hd_device_settings_isSet;
}

bool OAIUpdateInputDeviceRequest::is_hd_device_settings_Valid() const{
    return m_hd_device_settings_isValid;
}

QString OAIUpdateInputDeviceRequest::getName() const {
    return m_name;
}
void OAIUpdateInputDeviceRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateInputDeviceRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateInputDeviceRequest::is_name_Valid() const{
    return m_name_isValid;
}

OAIUpdateInputDeviceRequest_UhdDeviceSettings OAIUpdateInputDeviceRequest::getUhdDeviceSettings() const {
    return m_uhd_device_settings;
}
void OAIUpdateInputDeviceRequest::setUhdDeviceSettings(const OAIUpdateInputDeviceRequest_UhdDeviceSettings &uhd_device_settings) {
    m_uhd_device_settings = uhd_device_settings;
    m_uhd_device_settings_isSet = true;
}

bool OAIUpdateInputDeviceRequest::is_uhd_device_settings_Set() const{
    return m_uhd_device_settings_isSet;
}

bool OAIUpdateInputDeviceRequest::is_uhd_device_settings_Valid() const{
    return m_uhd_device_settings_isValid;
}

QString OAIUpdateInputDeviceRequest::getAvailabilityZone() const {
    return m_availability_zone;
}
void OAIUpdateInputDeviceRequest::setAvailabilityZone(const QString &availability_zone) {
    m_availability_zone = availability_zone;
    m_availability_zone_isSet = true;
}

bool OAIUpdateInputDeviceRequest::is_availability_zone_Set() const{
    return m_availability_zone_isSet;
}

bool OAIUpdateInputDeviceRequest::is_availability_zone_Valid() const{
    return m_availability_zone_isValid;
}

bool OAIUpdateInputDeviceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hd_device_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uhd_device_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_availability_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateInputDeviceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
