/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEac3StereoDownmix.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEac3StereoDownmix::OAIEac3StereoDownmix(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEac3StereoDownmix::OAIEac3StereoDownmix() {
    this->initializeModel();
}

OAIEac3StereoDownmix::~OAIEac3StereoDownmix() {}

void OAIEac3StereoDownmix::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEac3StereoDownmix::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEac3StereoDownmix::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DPL2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3StereoDownmix::DPL2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LO_RO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3StereoDownmix::LO_RO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LT_RT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3StereoDownmix::LT_RT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOT_INDICATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3StereoDownmix::NOT_INDICATED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEac3StereoDownmix::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEac3StereoDownmix::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEac3StereoDownmix::DPL2:
            val = "DPL2";
            break;
        case eOAIEac3StereoDownmix::LO_RO:
            val = "LO_RO";
            break;
        case eOAIEac3StereoDownmix::LT_RT:
            val = "LT_RT";
            break;
        case eOAIEac3StereoDownmix::NOT_INDICATED:
            val = "NOT_INDICATED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEac3StereoDownmix::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEac3StereoDownmix::eOAIEac3StereoDownmix OAIEac3StereoDownmix::getValue() const {
    return m_value;
}

void OAIEac3StereoDownmix::setValue(const OAIEac3StereoDownmix::eOAIEac3StereoDownmix& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEac3StereoDownmix::isSet() const {
    
    return m_value_isSet;
}

bool OAIEac3StereoDownmix::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
