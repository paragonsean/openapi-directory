/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHdr10Settings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHdr10Settings::OAIHdr10Settings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHdr10Settings::OAIHdr10Settings() {
    this->initializeModel();
}

OAIHdr10Settings::~OAIHdr10Settings() {}

void OAIHdr10Settings::initializeModel() {

    m_max_cll_isSet = false;
    m_max_cll_isValid = false;

    m_max_fall_isSet = false;
    m_max_fall_isValid = false;
}

void OAIHdr10Settings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHdr10Settings::fromJsonObject(QJsonObject json) {

    m_max_cll_isValid = ::OpenAPI::fromJsonValue(m_max_cll, json[QString("MaxCll")]);
    m_max_cll_isSet = !json[QString("MaxCll")].isNull() && m_max_cll_isValid;

    m_max_fall_isValid = ::OpenAPI::fromJsonValue(m_max_fall, json[QString("MaxFall")]);
    m_max_fall_isSet = !json[QString("MaxFall")].isNull() && m_max_fall_isValid;
}

QString OAIHdr10Settings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHdr10Settings::asJsonObject() const {
    QJsonObject obj;
    if (m_max_cll_isSet) {
        obj.insert(QString("MaxCll"), ::OpenAPI::toJsonValue(m_max_cll));
    }
    if (m_max_fall_isSet) {
        obj.insert(QString("MaxFall"), ::OpenAPI::toJsonValue(m_max_fall));
    }
    return obj;
}

qint32 OAIHdr10Settings::getMaxCll() const {
    return m_max_cll;
}
void OAIHdr10Settings::setMaxCll(const qint32 &max_cll) {
    m_max_cll = max_cll;
    m_max_cll_isSet = true;
}

bool OAIHdr10Settings::is_max_cll_Set() const{
    return m_max_cll_isSet;
}

bool OAIHdr10Settings::is_max_cll_Valid() const{
    return m_max_cll_isValid;
}

qint32 OAIHdr10Settings::getMaxFall() const {
    return m_max_fall;
}
void OAIHdr10Settings::setMaxFall(const qint32 &max_fall) {
    m_max_fall = max_fall;
    m_max_fall_isSet = true;
}

bool OAIHdr10Settings::is_max_fall_Set() const{
    return m_max_fall_isSet;
}

bool OAIHdr10Settings::is_max_fall_Valid() const{
    return m_max_fall_isValid;
}

bool OAIHdr10Settings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_cll_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_fall_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHdr10Settings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
