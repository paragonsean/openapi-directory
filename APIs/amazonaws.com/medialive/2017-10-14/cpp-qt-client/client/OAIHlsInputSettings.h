/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHlsInputSettings.h
 *
 * Hls Input Settings
 */

#ifndef OAIHlsInputSettings_H
#define OAIHlsInputSettings_H

#include <QJsonObject>

#include "OAIHlsScte35SourceType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHlsInputSettings : public OAIObject {
public:
    OAIHlsInputSettings();
    OAIHlsInputSettings(QString json);
    ~OAIHlsInputSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBandwidth() const;
    void setBandwidth(const qint32 &bandwidth);
    bool is_bandwidth_Set() const;
    bool is_bandwidth_Valid() const;

    qint32 getBufferSegments() const;
    void setBufferSegments(const qint32 &buffer_segments);
    bool is_buffer_segments_Set() const;
    bool is_buffer_segments_Valid() const;

    qint32 getRetries() const;
    void setRetries(const qint32 &retries);
    bool is_retries_Set() const;
    bool is_retries_Valid() const;

    qint32 getRetryInterval() const;
    void setRetryInterval(const qint32 &retry_interval);
    bool is_retry_interval_Set() const;
    bool is_retry_interval_Valid() const;

    OAIHlsScte35SourceType getScte35Source() const;
    void setScte35Source(const OAIHlsScte35SourceType &scte35_source);
    bool is_scte35_source_Set() const;
    bool is_scte35_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_bandwidth;
    bool m_bandwidth_isSet;
    bool m_bandwidth_isValid;

    qint32 m_buffer_segments;
    bool m_buffer_segments_isSet;
    bool m_buffer_segments_isValid;

    qint32 m_retries;
    bool m_retries_isSet;
    bool m_retries_isValid;

    qint32 m_retry_interval;
    bool m_retry_interval_isSet;
    bool m_retry_interval_isValid;

    OAIHlsScte35SourceType m_scte35_source;
    bool m_scte35_source_isSet;
    bool m_scte35_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHlsInputSettings)

#endif // OAIHlsInputSettings_H
