/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScheduleActionStartSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScheduleActionStartSettings::OAIScheduleActionStartSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScheduleActionStartSettings::OAIScheduleActionStartSettings() {
    this->initializeModel();
}

OAIScheduleActionStartSettings::~OAIScheduleActionStartSettings() {}

void OAIScheduleActionStartSettings::initializeModel() {

    m_fixed_mode_schedule_action_start_settings_isSet = false;
    m_fixed_mode_schedule_action_start_settings_isValid = false;

    m_follow_mode_schedule_action_start_settings_isSet = false;
    m_follow_mode_schedule_action_start_settings_isValid = false;

    m_immediate_mode_schedule_action_start_settings_isSet = false;
    m_immediate_mode_schedule_action_start_settings_isValid = false;
}

void OAIScheduleActionStartSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScheduleActionStartSettings::fromJsonObject(QJsonObject json) {

    m_fixed_mode_schedule_action_start_settings_isValid = ::OpenAPI::fromJsonValue(m_fixed_mode_schedule_action_start_settings, json[QString("FixedModeScheduleActionStartSettings")]);
    m_fixed_mode_schedule_action_start_settings_isSet = !json[QString("FixedModeScheduleActionStartSettings")].isNull() && m_fixed_mode_schedule_action_start_settings_isValid;

    m_follow_mode_schedule_action_start_settings_isValid = ::OpenAPI::fromJsonValue(m_follow_mode_schedule_action_start_settings, json[QString("FollowModeScheduleActionStartSettings")]);
    m_follow_mode_schedule_action_start_settings_isSet = !json[QString("FollowModeScheduleActionStartSettings")].isNull() && m_follow_mode_schedule_action_start_settings_isValid;

    m_immediate_mode_schedule_action_start_settings_isValid = ::OpenAPI::fromJsonValue(m_immediate_mode_schedule_action_start_settings, json[QString("ImmediateModeScheduleActionStartSettings")]);
    m_immediate_mode_schedule_action_start_settings_isSet = !json[QString("ImmediateModeScheduleActionStartSettings")].isNull() && m_immediate_mode_schedule_action_start_settings_isValid;
}

QString OAIScheduleActionStartSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScheduleActionStartSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_fixed_mode_schedule_action_start_settings.isSet()) {
        obj.insert(QString("FixedModeScheduleActionStartSettings"), ::OpenAPI::toJsonValue(m_fixed_mode_schedule_action_start_settings));
    }
    if (m_follow_mode_schedule_action_start_settings.isSet()) {
        obj.insert(QString("FollowModeScheduleActionStartSettings"), ::OpenAPI::toJsonValue(m_follow_mode_schedule_action_start_settings));
    }
    if (m_immediate_mode_schedule_action_start_settings.isSet()) {
        obj.insert(QString("ImmediateModeScheduleActionStartSettings"), ::OpenAPI::toJsonValue(m_immediate_mode_schedule_action_start_settings));
    }
    return obj;
}

OAIScheduleActionStartSettings_FixedModeScheduleActionStartSettings OAIScheduleActionStartSettings::getFixedModeScheduleActionStartSettings() const {
    return m_fixed_mode_schedule_action_start_settings;
}
void OAIScheduleActionStartSettings::setFixedModeScheduleActionStartSettings(const OAIScheduleActionStartSettings_FixedModeScheduleActionStartSettings &fixed_mode_schedule_action_start_settings) {
    m_fixed_mode_schedule_action_start_settings = fixed_mode_schedule_action_start_settings;
    m_fixed_mode_schedule_action_start_settings_isSet = true;
}

bool OAIScheduleActionStartSettings::is_fixed_mode_schedule_action_start_settings_Set() const{
    return m_fixed_mode_schedule_action_start_settings_isSet;
}

bool OAIScheduleActionStartSettings::is_fixed_mode_schedule_action_start_settings_Valid() const{
    return m_fixed_mode_schedule_action_start_settings_isValid;
}

OAIScheduleActionStartSettings_FollowModeScheduleActionStartSettings OAIScheduleActionStartSettings::getFollowModeScheduleActionStartSettings() const {
    return m_follow_mode_schedule_action_start_settings;
}
void OAIScheduleActionStartSettings::setFollowModeScheduleActionStartSettings(const OAIScheduleActionStartSettings_FollowModeScheduleActionStartSettings &follow_mode_schedule_action_start_settings) {
    m_follow_mode_schedule_action_start_settings = follow_mode_schedule_action_start_settings;
    m_follow_mode_schedule_action_start_settings_isSet = true;
}

bool OAIScheduleActionStartSettings::is_follow_mode_schedule_action_start_settings_Set() const{
    return m_follow_mode_schedule_action_start_settings_isSet;
}

bool OAIScheduleActionStartSettings::is_follow_mode_schedule_action_start_settings_Valid() const{
    return m_follow_mode_schedule_action_start_settings_isValid;
}

OAIObject OAIScheduleActionStartSettings::getImmediateModeScheduleActionStartSettings() const {
    return m_immediate_mode_schedule_action_start_settings;
}
void OAIScheduleActionStartSettings::setImmediateModeScheduleActionStartSettings(const OAIObject &immediate_mode_schedule_action_start_settings) {
    m_immediate_mode_schedule_action_start_settings = immediate_mode_schedule_action_start_settings;
    m_immediate_mode_schedule_action_start_settings_isSet = true;
}

bool OAIScheduleActionStartSettings::is_immediate_mode_schedule_action_start_settings_Set() const{
    return m_immediate_mode_schedule_action_start_settings_isSet;
}

bool OAIScheduleActionStartSettings::is_immediate_mode_schedule_action_start_settings_Valid() const{
    return m_immediate_mode_schedule_action_start_settings_isValid;
}

bool OAIScheduleActionStartSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fixed_mode_schedule_action_start_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_follow_mode_schedule_action_start_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_immediate_mode_schedule_action_start_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScheduleActionStartSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
