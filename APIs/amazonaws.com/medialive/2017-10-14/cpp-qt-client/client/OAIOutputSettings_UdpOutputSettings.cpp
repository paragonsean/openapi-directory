/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputSettings_UdpOutputSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputSettings_UdpOutputSettings::OAIOutputSettings_UdpOutputSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputSettings_UdpOutputSettings::OAIOutputSettings_UdpOutputSettings() {
    this->initializeModel();
}

OAIOutputSettings_UdpOutputSettings::~OAIOutputSettings_UdpOutputSettings() {}

void OAIOutputSettings_UdpOutputSettings::initializeModel() {

    m_buffer_msec_isSet = false;
    m_buffer_msec_isValid = false;

    m_container_settings_isSet = false;
    m_container_settings_isValid = false;

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_fec_output_settings_isSet = false;
    m_fec_output_settings_isValid = false;
}

void OAIOutputSettings_UdpOutputSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutputSettings_UdpOutputSettings::fromJsonObject(QJsonObject json) {

    m_buffer_msec_isValid = ::OpenAPI::fromJsonValue(m_buffer_msec, json[QString("BufferMsec")]);
    m_buffer_msec_isSet = !json[QString("BufferMsec")].isNull() && m_buffer_msec_isValid;

    m_container_settings_isValid = ::OpenAPI::fromJsonValue(m_container_settings, json[QString("ContainerSettings")]);
    m_container_settings_isSet = !json[QString("ContainerSettings")].isNull() && m_container_settings_isValid;

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("Destination")]);
    m_destination_isSet = !json[QString("Destination")].isNull() && m_destination_isValid;

    m_fec_output_settings_isValid = ::OpenAPI::fromJsonValue(m_fec_output_settings, json[QString("FecOutputSettings")]);
    m_fec_output_settings_isSet = !json[QString("FecOutputSettings")].isNull() && m_fec_output_settings_isValid;
}

QString OAIOutputSettings_UdpOutputSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutputSettings_UdpOutputSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_buffer_msec_isSet) {
        obj.insert(QString("BufferMsec"), ::OpenAPI::toJsonValue(m_buffer_msec));
    }
    if (m_container_settings.isSet()) {
        obj.insert(QString("ContainerSettings"), ::OpenAPI::toJsonValue(m_container_settings));
    }
    if (m_destination.isSet()) {
        obj.insert(QString("Destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_fec_output_settings.isSet()) {
        obj.insert(QString("FecOutputSettings"), ::OpenAPI::toJsonValue(m_fec_output_settings));
    }
    return obj;
}

qint32 OAIOutputSettings_UdpOutputSettings::getBufferMsec() const {
    return m_buffer_msec;
}
void OAIOutputSettings_UdpOutputSettings::setBufferMsec(const qint32 &buffer_msec) {
    m_buffer_msec = buffer_msec;
    m_buffer_msec_isSet = true;
}

bool OAIOutputSettings_UdpOutputSettings::is_buffer_msec_Set() const{
    return m_buffer_msec_isSet;
}

bool OAIOutputSettings_UdpOutputSettings::is_buffer_msec_Valid() const{
    return m_buffer_msec_isValid;
}

OAIUdpOutputSettings_ContainerSettings OAIOutputSettings_UdpOutputSettings::getContainerSettings() const {
    return m_container_settings;
}
void OAIOutputSettings_UdpOutputSettings::setContainerSettings(const OAIUdpOutputSettings_ContainerSettings &container_settings) {
    m_container_settings = container_settings;
    m_container_settings_isSet = true;
}

bool OAIOutputSettings_UdpOutputSettings::is_container_settings_Set() const{
    return m_container_settings_isSet;
}

bool OAIOutputSettings_UdpOutputSettings::is_container_settings_Valid() const{
    return m_container_settings_isValid;
}

OAIUdpOutputSettings_Destination OAIOutputSettings_UdpOutputSettings::getDestination() const {
    return m_destination;
}
void OAIOutputSettings_UdpOutputSettings::setDestination(const OAIUdpOutputSettings_Destination &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAIOutputSettings_UdpOutputSettings::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAIOutputSettings_UdpOutputSettings::is_destination_Valid() const{
    return m_destination_isValid;
}

OAIUdpOutputSettings_FecOutputSettings OAIOutputSettings_UdpOutputSettings::getFecOutputSettings() const {
    return m_fec_output_settings;
}
void OAIOutputSettings_UdpOutputSettings::setFecOutputSettings(const OAIUdpOutputSettings_FecOutputSettings &fec_output_settings) {
    m_fec_output_settings = fec_output_settings;
    m_fec_output_settings_isSet = true;
}

bool OAIOutputSettings_UdpOutputSettings::is_fec_output_settings_Set() const{
    return m_fec_output_settings_isSet;
}

bool OAIOutputSettings_UdpOutputSettings::is_fec_output_settings_Valid() const{
    return m_fec_output_settings_isValid;
}

bool OAIOutputSettings_UdpOutputSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_buffer_msec_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fec_output_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutputSettings_UdpOutputSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_container_settings_isValid && m_destination_isValid && true;
}

} // namespace OpenAPI
