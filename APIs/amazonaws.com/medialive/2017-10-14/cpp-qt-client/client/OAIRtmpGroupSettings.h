/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRtmpGroupSettings.h
 *
 * Rtmp Group Settings
 */

#ifndef OAIRtmpGroupSettings_H
#define OAIRtmpGroupSettings_H

#include <QJsonObject>

#include "OAIAuthenticationScheme.h"
#include "OAIInputLossActionForRtmpOut.h"
#include "OAIRtmpCacheFullBehavior.h"
#include "OAIRtmpCaptionData.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRtmpGroupSettings : public OAIObject {
public:
    OAIRtmpGroupSettings();
    OAIRtmpGroupSettings(QString json);
    ~OAIRtmpGroupSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAdMarkers() const;
    void setAdMarkers(const QList &ad_markers);
    bool is_ad_markers_Set() const;
    bool is_ad_markers_Valid() const;

    OAIAuthenticationScheme getAuthenticationScheme() const;
    void setAuthenticationScheme(const OAIAuthenticationScheme &authentication_scheme);
    bool is_authentication_scheme_Set() const;
    bool is_authentication_scheme_Valid() const;

    OAIRtmpCacheFullBehavior getCacheFullBehavior() const;
    void setCacheFullBehavior(const OAIRtmpCacheFullBehavior &cache_full_behavior);
    bool is_cache_full_behavior_Set() const;
    bool is_cache_full_behavior_Valid() const;

    qint32 getCacheLength() const;
    void setCacheLength(const qint32 &cache_length);
    bool is_cache_length_Set() const;
    bool is_cache_length_Valid() const;

    OAIRtmpCaptionData getCaptionData() const;
    void setCaptionData(const OAIRtmpCaptionData &caption_data);
    bool is_caption_data_Set() const;
    bool is_caption_data_Valid() const;

    OAIInputLossActionForRtmpOut getInputLossAction() const;
    void setInputLossAction(const OAIInputLossActionForRtmpOut &input_loss_action);
    bool is_input_loss_action_Set() const;
    bool is_input_loss_action_Valid() const;

    qint32 getRestartDelay() const;
    void setRestartDelay(const qint32 &restart_delay);
    bool is_restart_delay_Set() const;
    bool is_restart_delay_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_ad_markers;
    bool m_ad_markers_isSet;
    bool m_ad_markers_isValid;

    OAIAuthenticationScheme m_authentication_scheme;
    bool m_authentication_scheme_isSet;
    bool m_authentication_scheme_isValid;

    OAIRtmpCacheFullBehavior m_cache_full_behavior;
    bool m_cache_full_behavior_isSet;
    bool m_cache_full_behavior_isValid;

    qint32 m_cache_length;
    bool m_cache_length_isSet;
    bool m_cache_length_isValid;

    OAIRtmpCaptionData m_caption_data;
    bool m_caption_data_isSet;
    bool m_caption_data_isValid;

    OAIInputLossActionForRtmpOut m_input_loss_action;
    bool m_input_loss_action_isSet;
    bool m_input_loss_action_isValid;

    qint32 m_restart_delay;
    bool m_restart_delay_isSet;
    bool m_restart_delay_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRtmpGroupSettings)

#endif // OAIRtmpGroupSettings_H
