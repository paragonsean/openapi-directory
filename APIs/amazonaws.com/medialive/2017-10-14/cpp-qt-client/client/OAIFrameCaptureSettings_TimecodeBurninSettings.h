/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFrameCaptureSettings_TimecodeBurninSettings.h
 *
 * 
 */

#ifndef OAIFrameCaptureSettings_TimecodeBurninSettings_H
#define OAIFrameCaptureSettings_TimecodeBurninSettings_H

#include <QJsonObject>

#include "OAITimecodeBurninFontSize.h"
#include "OAITimecodeBurninPosition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFrameCaptureSettings_TimecodeBurninSettings : public OAIObject {
public:
    OAIFrameCaptureSettings_TimecodeBurninSettings();
    OAIFrameCaptureSettings_TimecodeBurninSettings(QString json);
    ~OAIFrameCaptureSettings_TimecodeBurninSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITimecodeBurninFontSize getFontSize() const;
    void setFontSize(const OAITimecodeBurninFontSize &font_size);
    bool is_font_size_Set() const;
    bool is_font_size_Valid() const;

    OAITimecodeBurninPosition getPosition() const;
    void setPosition(const OAITimecodeBurninPosition &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITimecodeBurninFontSize m_font_size;
    bool m_font_size_isSet;
    bool m_font_size_isValid;

    OAITimecodeBurninPosition m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFrameCaptureSettings_TimecodeBurninSettings)

#endif // OAIFrameCaptureSettings_TimecodeBurninSettings_H
