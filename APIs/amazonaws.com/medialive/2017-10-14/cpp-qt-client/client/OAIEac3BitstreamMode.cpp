/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEac3BitstreamMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEac3BitstreamMode::OAIEac3BitstreamMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEac3BitstreamMode::OAIEac3BitstreamMode() {
    this->initializeModel();
}

OAIEac3BitstreamMode::~OAIEac3BitstreamMode() {}

void OAIEac3BitstreamMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEac3BitstreamMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEac3BitstreamMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("COMMENTARY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3BitstreamMode::COMMENTARY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETE_MAIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3BitstreamMode::COMPLETE_MAIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EMERGENCY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3BitstreamMode::EMERGENCY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HEARING_IMPAIRED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3BitstreamMode::HEARING_IMPAIRED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VISUALLY_IMPAIRED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3BitstreamMode::VISUALLY_IMPAIRED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEac3BitstreamMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEac3BitstreamMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEac3BitstreamMode::COMMENTARY:
            val = "COMMENTARY";
            break;
        case eOAIEac3BitstreamMode::COMPLETE_MAIN:
            val = "COMPLETE_MAIN";
            break;
        case eOAIEac3BitstreamMode::EMERGENCY:
            val = "EMERGENCY";
            break;
        case eOAIEac3BitstreamMode::HEARING_IMPAIRED:
            val = "HEARING_IMPAIRED";
            break;
        case eOAIEac3BitstreamMode::VISUALLY_IMPAIRED:
            val = "VISUALLY_IMPAIRED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEac3BitstreamMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEac3BitstreamMode::eOAIEac3BitstreamMode OAIEac3BitstreamMode::getValue() const {
    return m_value;
}

void OAIEac3BitstreamMode::setValue(const OAIEac3BitstreamMode::eOAIEac3BitstreamMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEac3BitstreamMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIEac3BitstreamMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
