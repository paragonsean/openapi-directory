/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStopTimecode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStopTimecode::OAIStopTimecode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStopTimecode::OAIStopTimecode() {
    this->initializeModel();
}

OAIStopTimecode::~OAIStopTimecode() {}

void OAIStopTimecode::initializeModel() {

    m_last_frame_clipping_behavior_isSet = false;
    m_last_frame_clipping_behavior_isValid = false;

    m_timecode_isSet = false;
    m_timecode_isValid = false;
}

void OAIStopTimecode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStopTimecode::fromJsonObject(QJsonObject json) {

    m_last_frame_clipping_behavior_isValid = ::OpenAPI::fromJsonValue(m_last_frame_clipping_behavior, json[QString("LastFrameClippingBehavior")]);
    m_last_frame_clipping_behavior_isSet = !json[QString("LastFrameClippingBehavior")].isNull() && m_last_frame_clipping_behavior_isValid;

    m_timecode_isValid = ::OpenAPI::fromJsonValue(m_timecode, json[QString("Timecode")]);
    m_timecode_isSet = !json[QString("Timecode")].isNull() && m_timecode_isValid;
}

QString OAIStopTimecode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStopTimecode::asJsonObject() const {
    QJsonObject obj;
    if (m_last_frame_clipping_behavior.isSet()) {
        obj.insert(QString("LastFrameClippingBehavior"), ::OpenAPI::toJsonValue(m_last_frame_clipping_behavior));
    }
    if (m_timecode_isSet) {
        obj.insert(QString("Timecode"), ::OpenAPI::toJsonValue(m_timecode));
    }
    return obj;
}

OAILastFrameClippingBehavior OAIStopTimecode::getLastFrameClippingBehavior() const {
    return m_last_frame_clipping_behavior;
}
void OAIStopTimecode::setLastFrameClippingBehavior(const OAILastFrameClippingBehavior &last_frame_clipping_behavior) {
    m_last_frame_clipping_behavior = last_frame_clipping_behavior;
    m_last_frame_clipping_behavior_isSet = true;
}

bool OAIStopTimecode::is_last_frame_clipping_behavior_Set() const{
    return m_last_frame_clipping_behavior_isSet;
}

bool OAIStopTimecode::is_last_frame_clipping_behavior_Valid() const{
    return m_last_frame_clipping_behavior_isValid;
}

QString OAIStopTimecode::getTimecode() const {
    return m_timecode;
}
void OAIStopTimecode::setTimecode(const QString &timecode) {
    m_timecode = timecode;
    m_timecode_isSet = true;
}

bool OAIStopTimecode::is_timecode_Set() const{
    return m_timecode_isSet;
}

bool OAIStopTimecode::is_timecode_Valid() const{
    return m_timecode_isValid;
}

bool OAIStopTimecode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_frame_clipping_behavior.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_timecode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStopTimecode::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
