/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIM3u8Settings.h
 *
 * Settings information for the .m3u8 container
 */

#ifndef OAIM3u8Settings_H
#define OAIM3u8Settings_H

#include <QJsonObject>

#include "OAIM3u8NielsenId3Behavior.h"
#include "OAIM3u8PcrControl.h"
#include "OAIM3u8Scte35Behavior.h"
#include "OAIM3u8TimedMetadataBehavior.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIM3u8Settings : public OAIObject {
public:
    OAIM3u8Settings();
    OAIM3u8Settings(QString json);
    ~OAIM3u8Settings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAudioFramesPerPes() const;
    void setAudioFramesPerPes(const qint32 &audio_frames_per_pes);
    bool is_audio_frames_per_pes_Set() const;
    bool is_audio_frames_per_pes_Valid() const;

    QString getAudioPids() const;
    void setAudioPids(const QString &audio_pids);
    bool is_audio_pids_Set() const;
    bool is_audio_pids_Valid() const;

    QString getEcmPid() const;
    void setEcmPid(const QString &ecm_pid);
    bool is_ecm_pid_Set() const;
    bool is_ecm_pid_Valid() const;

    OAIM3u8NielsenId3Behavior getNielsenId3Behavior() const;
    void setNielsenId3Behavior(const OAIM3u8NielsenId3Behavior &nielsen_id3_behavior);
    bool is_nielsen_id3_behavior_Set() const;
    bool is_nielsen_id3_behavior_Valid() const;

    qint32 getPatInterval() const;
    void setPatInterval(const qint32 &pat_interval);
    bool is_pat_interval_Set() const;
    bool is_pat_interval_Valid() const;

    OAIM3u8PcrControl getPcrControl() const;
    void setPcrControl(const OAIM3u8PcrControl &pcr_control);
    bool is_pcr_control_Set() const;
    bool is_pcr_control_Valid() const;

    qint32 getPcrPeriod() const;
    void setPcrPeriod(const qint32 &pcr_period);
    bool is_pcr_period_Set() const;
    bool is_pcr_period_Valid() const;

    QString getPcrPid() const;
    void setPcrPid(const QString &pcr_pid);
    bool is_pcr_pid_Set() const;
    bool is_pcr_pid_Valid() const;

    qint32 getPmtInterval() const;
    void setPmtInterval(const qint32 &pmt_interval);
    bool is_pmt_interval_Set() const;
    bool is_pmt_interval_Valid() const;

    QString getPmtPid() const;
    void setPmtPid(const QString &pmt_pid);
    bool is_pmt_pid_Set() const;
    bool is_pmt_pid_Valid() const;

    qint32 getProgramNum() const;
    void setProgramNum(const qint32 &program_num);
    bool is_program_num_Set() const;
    bool is_program_num_Valid() const;

    OAIM3u8Scte35Behavior getScte35Behavior() const;
    void setScte35Behavior(const OAIM3u8Scte35Behavior &scte35_behavior);
    bool is_scte35_behavior_Set() const;
    bool is_scte35_behavior_Valid() const;

    QString getScte35Pid() const;
    void setScte35Pid(const QString &scte35_pid);
    bool is_scte35_pid_Set() const;
    bool is_scte35_pid_Valid() const;

    OAIM3u8TimedMetadataBehavior getTimedMetadataBehavior() const;
    void setTimedMetadataBehavior(const OAIM3u8TimedMetadataBehavior &timed_metadata_behavior);
    bool is_timed_metadata_behavior_Set() const;
    bool is_timed_metadata_behavior_Valid() const;

    QString getTimedMetadataPid() const;
    void setTimedMetadataPid(const QString &timed_metadata_pid);
    bool is_timed_metadata_pid_Set() const;
    bool is_timed_metadata_pid_Valid() const;

    qint32 getTransportStreamId() const;
    void setTransportStreamId(const qint32 &transport_stream_id);
    bool is_transport_stream_id_Set() const;
    bool is_transport_stream_id_Valid() const;

    QString getVideoPid() const;
    void setVideoPid(const QString &video_pid);
    bool is_video_pid_Set() const;
    bool is_video_pid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_audio_frames_per_pes;
    bool m_audio_frames_per_pes_isSet;
    bool m_audio_frames_per_pes_isValid;

    QString m_audio_pids;
    bool m_audio_pids_isSet;
    bool m_audio_pids_isValid;

    QString m_ecm_pid;
    bool m_ecm_pid_isSet;
    bool m_ecm_pid_isValid;

    OAIM3u8NielsenId3Behavior m_nielsen_id3_behavior;
    bool m_nielsen_id3_behavior_isSet;
    bool m_nielsen_id3_behavior_isValid;

    qint32 m_pat_interval;
    bool m_pat_interval_isSet;
    bool m_pat_interval_isValid;

    OAIM3u8PcrControl m_pcr_control;
    bool m_pcr_control_isSet;
    bool m_pcr_control_isValid;

    qint32 m_pcr_period;
    bool m_pcr_period_isSet;
    bool m_pcr_period_isValid;

    QString m_pcr_pid;
    bool m_pcr_pid_isSet;
    bool m_pcr_pid_isValid;

    qint32 m_pmt_interval;
    bool m_pmt_interval_isSet;
    bool m_pmt_interval_isValid;

    QString m_pmt_pid;
    bool m_pmt_pid_isSet;
    bool m_pmt_pid_isValid;

    qint32 m_program_num;
    bool m_program_num_isSet;
    bool m_program_num_isValid;

    OAIM3u8Scte35Behavior m_scte35_behavior;
    bool m_scte35_behavior_isSet;
    bool m_scte35_behavior_isValid;

    QString m_scte35_pid;
    bool m_scte35_pid_isSet;
    bool m_scte35_pid_isValid;

    OAIM3u8TimedMetadataBehavior m_timed_metadata_behavior;
    bool m_timed_metadata_behavior_isSet;
    bool m_timed_metadata_behavior_isValid;

    QString m_timed_metadata_pid;
    bool m_timed_metadata_pid_isSet;
    bool m_timed_metadata_pid_isValid;

    qint32 m_transport_stream_id;
    bool m_transport_stream_id_isSet;
    bool m_transport_stream_id_isValid;

    QString m_video_pid;
    bool m_video_pid_isSet;
    bool m_video_pid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIM3u8Settings)

#endif // OAIM3u8Settings_H
