/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICaptionSelectorSettings_TeletextSourceSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICaptionSelectorSettings_TeletextSourceSettings::OAICaptionSelectorSettings_TeletextSourceSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICaptionSelectorSettings_TeletextSourceSettings::OAICaptionSelectorSettings_TeletextSourceSettings() {
    this->initializeModel();
}

OAICaptionSelectorSettings_TeletextSourceSettings::~OAICaptionSelectorSettings_TeletextSourceSettings() {}

void OAICaptionSelectorSettings_TeletextSourceSettings::initializeModel() {

    m_output_rectangle_isSet = false;
    m_output_rectangle_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;
}

void OAICaptionSelectorSettings_TeletextSourceSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICaptionSelectorSettings_TeletextSourceSettings::fromJsonObject(QJsonObject json) {

    m_output_rectangle_isValid = ::OpenAPI::fromJsonValue(m_output_rectangle, json[QString("OutputRectangle")]);
    m_output_rectangle_isSet = !json[QString("OutputRectangle")].isNull() && m_output_rectangle_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("PageNumber")]);
    m_page_number_isSet = !json[QString("PageNumber")].isNull() && m_page_number_isValid;
}

QString OAICaptionSelectorSettings_TeletextSourceSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICaptionSelectorSettings_TeletextSourceSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_output_rectangle.isSet()) {
        obj.insert(QString("OutputRectangle"), ::OpenAPI::toJsonValue(m_output_rectangle));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("PageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    return obj;
}

OAITeletextSourceSettings_OutputRectangle OAICaptionSelectorSettings_TeletextSourceSettings::getOutputRectangle() const {
    return m_output_rectangle;
}
void OAICaptionSelectorSettings_TeletextSourceSettings::setOutputRectangle(const OAITeletextSourceSettings_OutputRectangle &output_rectangle) {
    m_output_rectangle = output_rectangle;
    m_output_rectangle_isSet = true;
}

bool OAICaptionSelectorSettings_TeletextSourceSettings::is_output_rectangle_Set() const{
    return m_output_rectangle_isSet;
}

bool OAICaptionSelectorSettings_TeletextSourceSettings::is_output_rectangle_Valid() const{
    return m_output_rectangle_isValid;
}

QString OAICaptionSelectorSettings_TeletextSourceSettings::getPageNumber() const {
    return m_page_number;
}
void OAICaptionSelectorSettings_TeletextSourceSettings::setPageNumber(const QString &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAICaptionSelectorSettings_TeletextSourceSettings::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAICaptionSelectorSettings_TeletextSourceSettings::is_page_number_Valid() const{
    return m_page_number_isValid;
}

bool OAICaptionSelectorSettings_TeletextSourceSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_rectangle.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICaptionSelectorSettings_TeletextSourceSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
