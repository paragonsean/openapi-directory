/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputSettings_VideoSelector.h
 *
 * 
 */

#ifndef OAIInputSettings_VideoSelector_H
#define OAIInputSettings_VideoSelector_H

#include <QJsonObject>

#include "OAIVideoSelectorColorSpace.h"
#include "OAIVideoSelectorColorSpaceUsage.h"
#include "OAIVideoSelector_ColorSpaceSettings.h"
#include "OAIVideoSelector_SelectorSettings.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVideoSelector_ColorSpaceSettings;
class OAIVideoSelector_SelectorSettings;

class OAIInputSettings_VideoSelector : public OAIObject {
public:
    OAIInputSettings_VideoSelector();
    OAIInputSettings_VideoSelector(QString json);
    ~OAIInputSettings_VideoSelector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVideoSelectorColorSpace getColorSpace() const;
    void setColorSpace(const OAIVideoSelectorColorSpace &color_space);
    bool is_color_space_Set() const;
    bool is_color_space_Valid() const;

    OAIVideoSelector_ColorSpaceSettings getColorSpaceSettings() const;
    void setColorSpaceSettings(const OAIVideoSelector_ColorSpaceSettings &color_space_settings);
    bool is_color_space_settings_Set() const;
    bool is_color_space_settings_Valid() const;

    OAIVideoSelectorColorSpaceUsage getColorSpaceUsage() const;
    void setColorSpaceUsage(const OAIVideoSelectorColorSpaceUsage &color_space_usage);
    bool is_color_space_usage_Set() const;
    bool is_color_space_usage_Valid() const;

    OAIVideoSelector_SelectorSettings getSelectorSettings() const;
    void setSelectorSettings(const OAIVideoSelector_SelectorSettings &selector_settings);
    bool is_selector_settings_Set() const;
    bool is_selector_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVideoSelectorColorSpace m_color_space;
    bool m_color_space_isSet;
    bool m_color_space_isValid;

    OAIVideoSelector_ColorSpaceSettings m_color_space_settings;
    bool m_color_space_settings_isSet;
    bool m_color_space_settings_isValid;

    OAIVideoSelectorColorSpaceUsage m_color_space_usage;
    bool m_color_space_usage_isSet;
    bool m_color_space_usage_isValid;

    OAIVideoSelector_SelectorSettings m_selector_settings;
    bool m_selector_settings_isSet;
    bool m_selector_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputSettings_VideoSelector)

#endif // OAIInputSettings_VideoSelector_H
