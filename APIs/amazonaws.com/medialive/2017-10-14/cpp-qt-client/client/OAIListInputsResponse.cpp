/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListInputsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListInputsResponse::OAIListInputsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListInputsResponse::OAIListInputsResponse() {
    this->initializeModel();
}

OAIListInputsResponse::~OAIListInputsResponse() {}

void OAIListInputsResponse::initializeModel() {

    m_inputs_isSet = false;
    m_inputs_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListInputsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListInputsResponse::fromJsonObject(QJsonObject json) {

    m_inputs_isValid = ::OpenAPI::fromJsonValue(m_inputs, json[QString("Inputs")]);
    m_inputs_isSet = !json[QString("Inputs")].isNull() && m_inputs_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListInputsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListInputsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_inputs.isSet()) {
        obj.insert(QString("Inputs"), ::OpenAPI::toJsonValue(m_inputs));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListInputsResponse::getInputs() const {
    return m_inputs;
}
void OAIListInputsResponse::setInputs(const QList &inputs) {
    m_inputs = inputs;
    m_inputs_isSet = true;
}

bool OAIListInputsResponse::is_inputs_Set() const{
    return m_inputs_isSet;
}

bool OAIListInputsResponse::is_inputs_Valid() const{
    return m_inputs_isValid;
}

QString OAIListInputsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListInputsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListInputsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListInputsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListInputsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inputs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListInputsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
