/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings() {
    this->initializeModel();
}

OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::~OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings() {}

void OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::initializeModel() {

    m_constant_bitrate_isSet = false;
    m_constant_bitrate_isValid = false;

    m_statmux_settings_isSet = false;
    m_statmux_settings_isValid = false;
}

void OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::fromJsonObject(QJsonObject json) {

    m_constant_bitrate_isValid = ::OpenAPI::fromJsonValue(m_constant_bitrate, json[QString("ConstantBitrate")]);
    m_constant_bitrate_isSet = !json[QString("ConstantBitrate")].isNull() && m_constant_bitrate_isValid;

    m_statmux_settings_isValid = ::OpenAPI::fromJsonValue(m_statmux_settings, json[QString("StatmuxSettings")]);
    m_statmux_settings_isSet = !json[QString("StatmuxSettings")].isNull() && m_statmux_settings_isValid;
}

QString OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_constant_bitrate_isSet) {
        obj.insert(QString("ConstantBitrate"), ::OpenAPI::toJsonValue(m_constant_bitrate));
    }
    if (m_statmux_settings.isSet()) {
        obj.insert(QString("StatmuxSettings"), ::OpenAPI::toJsonValue(m_statmux_settings));
    }
    return obj;
}

qint32 OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::getConstantBitrate() const {
    return m_constant_bitrate;
}
void OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::setConstantBitrate(const qint32 &constant_bitrate) {
    m_constant_bitrate = constant_bitrate;
    m_constant_bitrate_isSet = true;
}

bool OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::is_constant_bitrate_Set() const{
    return m_constant_bitrate_isSet;
}

bool OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::is_constant_bitrate_Valid() const{
    return m_constant_bitrate_isValid;
}

OAIMultiplexVideoSettings_StatmuxSettings OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::getStatmuxSettings() const {
    return m_statmux_settings;
}
void OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::setStatmuxSettings(const OAIMultiplexVideoSettings_StatmuxSettings &statmux_settings) {
    m_statmux_settings = statmux_settings;
    m_statmux_settings_isSet = true;
}

bool OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::is_statmux_settings_Set() const{
    return m_statmux_settings_isSet;
}

bool OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::is_statmux_settings_Valid() const{
    return m_statmux_settings_isValid;
}

bool OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constant_bitrate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_statmux_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateMultiplexProgram_request_multiplexProgramSettings_VideoSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
