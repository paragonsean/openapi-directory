/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeInputResponse.h
 *
 * Placeholder documentation for DescribeInputResponse
 */

#ifndef OAIDescribeInputResponse_H
#define OAIDescribeInputResponse_H

#include <QJsonObject>

#include "OAIInputClass.h"
#include "OAIInputSourceType.h"
#include "OAIInputState.h"
#include "OAIInputType.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeInputResponse : public OAIObject {
public:
    OAIDescribeInputResponse();
    OAIDescribeInputResponse(QString json);
    ~OAIDescribeInputResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QList getAttachedChannels() const;
    void setAttachedChannels(const QList &attached_channels);
    bool is_attached_channels_Set() const;
    bool is_attached_channels_Valid() const;

    QList getDestinations() const;
    void setDestinations(const QList &destinations);
    bool is_destinations_Set() const;
    bool is_destinations_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIInputClass getInputClass() const;
    void setInputClass(const OAIInputClass &input_class);
    bool is_input_class_Set() const;
    bool is_input_class_Valid() const;

    QList getInputDevices() const;
    void setInputDevices(const QList &input_devices);
    bool is_input_devices_Set() const;
    bool is_input_devices_Valid() const;

    QList getInputPartnerIds() const;
    void setInputPartnerIds(const QList &input_partner_ids);
    bool is_input_partner_ids_Set() const;
    bool is_input_partner_ids_Valid() const;

    OAIInputSourceType getInputSourceType() const;
    void setInputSourceType(const OAIInputSourceType &input_source_type);
    bool is_input_source_type_Set() const;
    bool is_input_source_type_Valid() const;

    QList getMediaConnectFlows() const;
    void setMediaConnectFlows(const QList &media_connect_flows);
    bool is_media_connect_flows_Set() const;
    bool is_media_connect_flows_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QList getSecurityGroups() const;
    void setSecurityGroups(const QList &security_groups);
    bool is_security_groups_Set() const;
    bool is_security_groups_Valid() const;

    QList getSources() const;
    void setSources(const QList &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    OAIInputState getState() const;
    void setState(const OAIInputState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIInputType getType() const;
    void setType(const OAIInputType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QList m_attached_channels;
    bool m_attached_channels_isSet;
    bool m_attached_channels_isValid;

    QList m_destinations;
    bool m_destinations_isSet;
    bool m_destinations_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIInputClass m_input_class;
    bool m_input_class_isSet;
    bool m_input_class_isValid;

    QList m_input_devices;
    bool m_input_devices_isSet;
    bool m_input_devices_isValid;

    QList m_input_partner_ids;
    bool m_input_partner_ids_isSet;
    bool m_input_partner_ids_isValid;

    OAIInputSourceType m_input_source_type;
    bool m_input_source_type_isSet;
    bool m_input_source_type_isValid;

    QList m_media_connect_flows;
    bool m_media_connect_flows_isSet;
    bool m_media_connect_flows_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QList m_security_groups;
    bool m_security_groups_isSet;
    bool m_security_groups_isValid;

    QList m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;

    OAIInputState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIInputType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeInputResponse)

#endif // OAIDescribeInputResponse_H
