/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScte35DeliveryRestrictions.h
 *
 * Corresponds to SCTE-35 delivery_not_restricted_flag parameter. To declare delivery restrictions, include this element and its four \&quot;restriction\&quot; flags. To declare that there are no restrictions, omit this element.
 */

#ifndef OAIScte35DeliveryRestrictions_H
#define OAIScte35DeliveryRestrictions_H

#include <QJsonObject>

#include "OAIScte35ArchiveAllowedFlag.h"
#include "OAIScte35DeviceRestrictions.h"
#include "OAIScte35NoRegionalBlackoutFlag.h"
#include "OAIScte35WebDeliveryAllowedFlag.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScte35DeliveryRestrictions : public OAIObject {
public:
    OAIScte35DeliveryRestrictions();
    OAIScte35DeliveryRestrictions(QString json);
    ~OAIScte35DeliveryRestrictions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIScte35ArchiveAllowedFlag getArchiveAllowedFlag() const;
    void setArchiveAllowedFlag(const OAIScte35ArchiveAllowedFlag &archive_allowed_flag);
    bool is_archive_allowed_flag_Set() const;
    bool is_archive_allowed_flag_Valid() const;

    OAIScte35DeviceRestrictions getDeviceRestrictions() const;
    void setDeviceRestrictions(const OAIScte35DeviceRestrictions &device_restrictions);
    bool is_device_restrictions_Set() const;
    bool is_device_restrictions_Valid() const;

    OAIScte35NoRegionalBlackoutFlag getNoRegionalBlackoutFlag() const;
    void setNoRegionalBlackoutFlag(const OAIScte35NoRegionalBlackoutFlag &no_regional_blackout_flag);
    bool is_no_regional_blackout_flag_Set() const;
    bool is_no_regional_blackout_flag_Valid() const;

    OAIScte35WebDeliveryAllowedFlag getWebDeliveryAllowedFlag() const;
    void setWebDeliveryAllowedFlag(const OAIScte35WebDeliveryAllowedFlag &web_delivery_allowed_flag);
    bool is_web_delivery_allowed_flag_Set() const;
    bool is_web_delivery_allowed_flag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIScte35ArchiveAllowedFlag m_archive_allowed_flag;
    bool m_archive_allowed_flag_isSet;
    bool m_archive_allowed_flag_isValid;

    OAIScte35DeviceRestrictions m_device_restrictions;
    bool m_device_restrictions_isSet;
    bool m_device_restrictions_isValid;

    OAIScte35NoRegionalBlackoutFlag m_no_regional_blackout_flag;
    bool m_no_regional_blackout_flag_isSet;
    bool m_no_regional_blackout_flag_isValid;

    OAIScte35WebDeliveryAllowedFlag m_web_delivery_allowed_flag;
    bool m_web_delivery_allowed_flag_isSet;
    bool m_web_delivery_allowed_flag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScte35DeliveryRestrictions)

#endif // OAIScte35DeliveryRestrictions_H
