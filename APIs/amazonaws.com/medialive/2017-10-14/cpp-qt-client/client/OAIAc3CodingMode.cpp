/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAc3CodingMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAc3CodingMode::OAIAc3CodingMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAc3CodingMode::OAIAc3CodingMode() {
    this->initializeModel();
}

OAIAc3CodingMode::~OAIAc3CodingMode() {}

void OAIAc3CodingMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAc3CodingMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAc3CodingMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CODING_MODE_1_0", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAc3CodingMode::_1_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CODING_MODE_1_1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAc3CodingMode::_1_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CODING_MODE_2_0", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAc3CodingMode::_2_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CODING_MODE_3_2_LFE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAc3CodingMode::_3_2_LFE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAc3CodingMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAc3CodingMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAc3CodingMode::_1_0:
            val = "CODING_MODE_1_0";
            break;
        case eOAIAc3CodingMode::_1_1:
            val = "CODING_MODE_1_1";
            break;
        case eOAIAc3CodingMode::_2_0:
            val = "CODING_MODE_2_0";
            break;
        case eOAIAc3CodingMode::_3_2_LFE:
            val = "CODING_MODE_3_2_LFE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAc3CodingMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAc3CodingMode::eOAIAc3CodingMode OAIAc3CodingMode::getValue() const {
    return m_value;
}

void OAIAc3CodingMode::setValue(const OAIAc3CodingMode::eOAIAc3CodingMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAc3CodingMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIAc3CodingMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
