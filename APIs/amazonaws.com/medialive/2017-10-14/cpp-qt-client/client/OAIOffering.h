/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOffering.h
 *
 * Reserved resources available for purchase
 */

#ifndef OAIOffering_H
#define OAIOffering_H

#include <QJsonObject>

#include "OAIDeleteReservationResponse_ResourceSpecification.h"
#include "OAIOfferingDurationUnits.h"
#include "OAIOfferingType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeleteReservationResponse_ResourceSpecification;

class OAIOffering : public OAIObject {
public:
    OAIOffering();
    OAIOffering(QString json);
    ~OAIOffering() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    OAIOfferingDurationUnits getDurationUnits() const;
    void setDurationUnits(const OAIOfferingDurationUnits &duration_units);
    bool is_duration_units_Set() const;
    bool is_duration_units_Valid() const;

    double getFixedPrice() const;
    void setFixedPrice(const double &fixed_price);
    bool is_fixed_price_Set() const;
    bool is_fixed_price_Valid() const;

    QString getOfferingDescription() const;
    void setOfferingDescription(const QString &offering_description);
    bool is_offering_description_Set() const;
    bool is_offering_description_Valid() const;

    QString getOfferingId() const;
    void setOfferingId(const QString &offering_id);
    bool is_offering_id_Set() const;
    bool is_offering_id_Valid() const;

    OAIOfferingType getOfferingType() const;
    void setOfferingType(const OAIOfferingType &offering_type);
    bool is_offering_type_Set() const;
    bool is_offering_type_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    OAIDeleteReservationResponse_ResourceSpecification getResourceSpecification() const;
    void setResourceSpecification(const OAIDeleteReservationResponse_ResourceSpecification &resource_specification);
    bool is_resource_specification_Set() const;
    bool is_resource_specification_Valid() const;

    double getUsagePrice() const;
    void setUsagePrice(const double &usage_price);
    bool is_usage_price_Set() const;
    bool is_usage_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    OAIOfferingDurationUnits m_duration_units;
    bool m_duration_units_isSet;
    bool m_duration_units_isValid;

    double m_fixed_price;
    bool m_fixed_price_isSet;
    bool m_fixed_price_isValid;

    QString m_offering_description;
    bool m_offering_description_isSet;
    bool m_offering_description_isValid;

    QString m_offering_id;
    bool m_offering_id_isSet;
    bool m_offering_id_isValid;

    OAIOfferingType m_offering_type;
    bool m_offering_type_isSet;
    bool m_offering_type_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    OAIDeleteReservationResponse_ResourceSpecification m_resource_specification;
    bool m_resource_specification_isSet;
    bool m_resource_specification_isValid;

    double m_usage_price;
    bool m_usage_price_isSet;
    bool m_usage_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOffering)

#endif // OAIOffering_H
