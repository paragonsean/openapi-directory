/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMultiplexSummary.h
 *
 * Placeholder documentation for MultiplexSummary
 */

#ifndef OAIMultiplexSummary_H
#define OAIMultiplexSummary_H

#include <QJsonObject>

#include "OAIMultiplexState.h"
#include "OAIMultiplexSummary_MultiplexSettings.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMultiplexSummary_MultiplexSettings;

class OAIMultiplexSummary : public OAIObject {
public:
    OAIMultiplexSummary();
    OAIMultiplexSummary(QString json);
    ~OAIMultiplexSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QList getAvailabilityZones() const;
    void setAvailabilityZones(const QList &availability_zones);
    bool is_availability_zones_Set() const;
    bool is_availability_zones_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIMultiplexSummary_MultiplexSettings getMultiplexSettings() const;
    void setMultiplexSettings(const OAIMultiplexSummary_MultiplexSettings &multiplex_settings);
    bool is_multiplex_settings_Set() const;
    bool is_multiplex_settings_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPipelinesRunningCount() const;
    void setPipelinesRunningCount(const qint32 &pipelines_running_count);
    bool is_pipelines_running_count_Set() const;
    bool is_pipelines_running_count_Valid() const;

    qint32 getProgramCount() const;
    void setProgramCount(const qint32 &program_count);
    bool is_program_count_Set() const;
    bool is_program_count_Valid() const;

    OAIMultiplexState getState() const;
    void setState(const OAIMultiplexState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QList m_availability_zones;
    bool m_availability_zones_isSet;
    bool m_availability_zones_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIMultiplexSummary_MultiplexSettings m_multiplex_settings;
    bool m_multiplex_settings_isSet;
    bool m_multiplex_settings_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_pipelines_running_count;
    bool m_pipelines_running_count_isSet;
    bool m_pipelines_running_count_isValid;

    qint32 m_program_count;
    bool m_program_count_isSet;
    bool m_program_count_isValid;

    OAIMultiplexState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMultiplexSummary)

#endif // OAIMultiplexSummary_H
