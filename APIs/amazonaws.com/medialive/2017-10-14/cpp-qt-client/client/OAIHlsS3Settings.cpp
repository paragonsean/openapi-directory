/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHlsS3Settings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHlsS3Settings::OAIHlsS3Settings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHlsS3Settings::OAIHlsS3Settings() {
    this->initializeModel();
}

OAIHlsS3Settings::~OAIHlsS3Settings() {}

void OAIHlsS3Settings::initializeModel() {

    m_canned_acl_isSet = false;
    m_canned_acl_isValid = false;
}

void OAIHlsS3Settings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHlsS3Settings::fromJsonObject(QJsonObject json) {

    m_canned_acl_isValid = ::OpenAPI::fromJsonValue(m_canned_acl, json[QString("CannedAcl")]);
    m_canned_acl_isSet = !json[QString("CannedAcl")].isNull() && m_canned_acl_isValid;
}

QString OAIHlsS3Settings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHlsS3Settings::asJsonObject() const {
    QJsonObject obj;
    if (m_canned_acl.isSet()) {
        obj.insert(QString("CannedAcl"), ::OpenAPI::toJsonValue(m_canned_acl));
    }
    return obj;
}

OAIS3CannedAcl OAIHlsS3Settings::getCannedAcl() const {
    return m_canned_acl;
}
void OAIHlsS3Settings::setCannedAcl(const OAIS3CannedAcl &canned_acl) {
    m_canned_acl = canned_acl;
    m_canned_acl_isSet = true;
}

bool OAIHlsS3Settings::is_canned_acl_Set() const{
    return m_canned_acl_isSet;
}

bool OAIHlsS3Settings::is_canned_acl_Valid() const{
    return m_canned_acl_isValid;
}

bool OAIHlsS3Settings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_canned_acl.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHlsS3Settings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
