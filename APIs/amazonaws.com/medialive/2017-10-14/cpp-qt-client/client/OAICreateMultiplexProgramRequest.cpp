/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateMultiplexProgramRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateMultiplexProgramRequest::OAICreateMultiplexProgramRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateMultiplexProgramRequest::OAICreateMultiplexProgramRequest() {
    this->initializeModel();
}

OAICreateMultiplexProgramRequest::~OAICreateMultiplexProgramRequest() {}

void OAICreateMultiplexProgramRequest::initializeModel() {

    m_multiplex_program_settings_isSet = false;
    m_multiplex_program_settings_isValid = false;

    m_program_name_isSet = false;
    m_program_name_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAICreateMultiplexProgramRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateMultiplexProgramRequest::fromJsonObject(QJsonObject json) {

    m_multiplex_program_settings_isValid = ::OpenAPI::fromJsonValue(m_multiplex_program_settings, json[QString("MultiplexProgramSettings")]);
    m_multiplex_program_settings_isSet = !json[QString("MultiplexProgramSettings")].isNull() && m_multiplex_program_settings_isValid;

    m_program_name_isValid = ::OpenAPI::fromJsonValue(m_program_name, json[QString("ProgramName")]);
    m_program_name_isSet = !json[QString("ProgramName")].isNull() && m_program_name_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;
}

QString OAICreateMultiplexProgramRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateMultiplexProgramRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_multiplex_program_settings.isSet()) {
        obj.insert(QString("MultiplexProgramSettings"), ::OpenAPI::toJsonValue(m_multiplex_program_settings));
    }
    if (m_program_name_isSet) {
        obj.insert(QString("ProgramName"), ::OpenAPI::toJsonValue(m_program_name));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

OAIDeleteMultiplexProgramResponse_MultiplexProgramSettings OAICreateMultiplexProgramRequest::getMultiplexProgramSettings() const {
    return m_multiplex_program_settings;
}
void OAICreateMultiplexProgramRequest::setMultiplexProgramSettings(const OAIDeleteMultiplexProgramResponse_MultiplexProgramSettings &multiplex_program_settings) {
    m_multiplex_program_settings = multiplex_program_settings;
    m_multiplex_program_settings_isSet = true;
}

bool OAICreateMultiplexProgramRequest::is_multiplex_program_settings_Set() const{
    return m_multiplex_program_settings_isSet;
}

bool OAICreateMultiplexProgramRequest::is_multiplex_program_settings_Valid() const{
    return m_multiplex_program_settings_isValid;
}

QString OAICreateMultiplexProgramRequest::getProgramName() const {
    return m_program_name;
}
void OAICreateMultiplexProgramRequest::setProgramName(const QString &program_name) {
    m_program_name = program_name;
    m_program_name_isSet = true;
}

bool OAICreateMultiplexProgramRequest::is_program_name_Set() const{
    return m_program_name_isSet;
}

bool OAICreateMultiplexProgramRequest::is_program_name_Valid() const{
    return m_program_name_isValid;
}

QString OAICreateMultiplexProgramRequest::getRequestId() const {
    return m_request_id;
}
void OAICreateMultiplexProgramRequest::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAICreateMultiplexProgramRequest::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAICreateMultiplexProgramRequest::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAICreateMultiplexProgramRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_multiplex_program_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_program_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateMultiplexProgramRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_multiplex_program_settings_isValid && m_program_name_isValid && m_request_id_isValid && true;
}

} // namespace OpenAPI
