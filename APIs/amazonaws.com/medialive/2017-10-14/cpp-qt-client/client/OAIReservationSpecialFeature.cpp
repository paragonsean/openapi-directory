/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReservationSpecialFeature.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReservationSpecialFeature::OAIReservationSpecialFeature(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReservationSpecialFeature::OAIReservationSpecialFeature() {
    this->initializeModel();
}

OAIReservationSpecialFeature::~OAIReservationSpecialFeature() {}

void OAIReservationSpecialFeature::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReservationSpecialFeature::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReservationSpecialFeature::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ADVANCED_AUDIO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationSpecialFeature::ADVANCED_AUDIO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUDIO_NORMALIZATION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationSpecialFeature::AUDIO_NORMALIZATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MGHD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationSpecialFeature::MGHD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MGUHD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReservationSpecialFeature::MGUHD;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReservationSpecialFeature::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReservationSpecialFeature::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReservationSpecialFeature::ADVANCED_AUDIO:
            val = "ADVANCED_AUDIO";
            break;
        case eOAIReservationSpecialFeature::AUDIO_NORMALIZATION:
            val = "AUDIO_NORMALIZATION";
            break;
        case eOAIReservationSpecialFeature::MGHD:
            val = "MGHD";
            break;
        case eOAIReservationSpecialFeature::MGUHD:
            val = "MGUHD";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReservationSpecialFeature::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReservationSpecialFeature::eOAIReservationSpecialFeature OAIReservationSpecialFeature::getValue() const {
    return m_value;
}

void OAIReservationSpecialFeature::setValue(const OAIReservationSpecialFeature::eOAIReservationSpecialFeature& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReservationSpecialFeature::isSet() const {
    
    return m_value_isSet;
}

bool OAIReservationSpecialFeature::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
