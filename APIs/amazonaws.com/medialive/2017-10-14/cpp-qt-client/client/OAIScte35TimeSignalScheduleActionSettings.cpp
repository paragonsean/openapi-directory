/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScte35TimeSignalScheduleActionSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScte35TimeSignalScheduleActionSettings::OAIScte35TimeSignalScheduleActionSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScte35TimeSignalScheduleActionSettings::OAIScte35TimeSignalScheduleActionSettings() {
    this->initializeModel();
}

OAIScte35TimeSignalScheduleActionSettings::~OAIScte35TimeSignalScheduleActionSettings() {}

void OAIScte35TimeSignalScheduleActionSettings::initializeModel() {

    m_scte35_descriptors_isSet = false;
    m_scte35_descriptors_isValid = false;
}

void OAIScte35TimeSignalScheduleActionSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScte35TimeSignalScheduleActionSettings::fromJsonObject(QJsonObject json) {

    m_scte35_descriptors_isValid = ::OpenAPI::fromJsonValue(m_scte35_descriptors, json[QString("Scte35Descriptors")]);
    m_scte35_descriptors_isSet = !json[QString("Scte35Descriptors")].isNull() && m_scte35_descriptors_isValid;
}

QString OAIScte35TimeSignalScheduleActionSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScte35TimeSignalScheduleActionSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_scte35_descriptors.isSet()) {
        obj.insert(QString("Scte35Descriptors"), ::OpenAPI::toJsonValue(m_scte35_descriptors));
    }
    return obj;
}

QList OAIScte35TimeSignalScheduleActionSettings::getScte35Descriptors() const {
    return m_scte35_descriptors;
}
void OAIScte35TimeSignalScheduleActionSettings::setScte35Descriptors(const QList &scte35_descriptors) {
    m_scte35_descriptors = scte35_descriptors;
    m_scte35_descriptors_isSet = true;
}

bool OAIScte35TimeSignalScheduleActionSettings::is_scte35_descriptors_Set() const{
    return m_scte35_descriptors_isSet;
}

bool OAIScte35TimeSignalScheduleActionSettings::is_scte35_descriptors_Valid() const{
    return m_scte35_descriptors_isValid;
}

bool OAIScte35TimeSignalScheduleActionSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scte35_descriptors.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScte35TimeSignalScheduleActionSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_scte35_descriptors_isValid && true;
}

} // namespace OpenAPI
