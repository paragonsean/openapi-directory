/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioWatermarkSettings_NielsenWatermarksSettings.h
 *
 * 
 */

#ifndef OAIAudioWatermarkSettings_NielsenWatermarksSettings_H
#define OAIAudioWatermarkSettings_NielsenWatermarksSettings_H

#include <QJsonObject>

#include "OAINielsenWatermarksDistributionTypes.h"
#include "OAINielsenWatermarksSettings_NielsenCbetSettings.h"
#include "OAINielsenWatermarksSettings_NielsenNaesIiNwSettings.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINielsenWatermarksSettings_NielsenCbetSettings;
class OAINielsenWatermarksSettings_NielsenNaesIiNwSettings;

class OAIAudioWatermarkSettings_NielsenWatermarksSettings : public OAIObject {
public:
    OAIAudioWatermarkSettings_NielsenWatermarksSettings();
    OAIAudioWatermarkSettings_NielsenWatermarksSettings(QString json);
    ~OAIAudioWatermarkSettings_NielsenWatermarksSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINielsenWatermarksSettings_NielsenCbetSettings getNielsenCbetSettings() const;
    void setNielsenCbetSettings(const OAINielsenWatermarksSettings_NielsenCbetSettings &nielsen_cbet_settings);
    bool is_nielsen_cbet_settings_Set() const;
    bool is_nielsen_cbet_settings_Valid() const;

    OAINielsenWatermarksDistributionTypes getNielsenDistributionType() const;
    void setNielsenDistributionType(const OAINielsenWatermarksDistributionTypes &nielsen_distribution_type);
    bool is_nielsen_distribution_type_Set() const;
    bool is_nielsen_distribution_type_Valid() const;

    OAINielsenWatermarksSettings_NielsenNaesIiNwSettings getNielsenNaesIiNwSettings() const;
    void setNielsenNaesIiNwSettings(const OAINielsenWatermarksSettings_NielsenNaesIiNwSettings &nielsen_naes_ii_nw_settings);
    bool is_nielsen_naes_ii_nw_settings_Set() const;
    bool is_nielsen_naes_ii_nw_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINielsenWatermarksSettings_NielsenCbetSettings m_nielsen_cbet_settings;
    bool m_nielsen_cbet_settings_isSet;
    bool m_nielsen_cbet_settings_isValid;

    OAINielsenWatermarksDistributionTypes m_nielsen_distribution_type;
    bool m_nielsen_distribution_type_isSet;
    bool m_nielsen_distribution_type_isValid;

    OAINielsenWatermarksSettings_NielsenNaesIiNwSettings m_nielsen_naes_ii_nw_settings;
    bool m_nielsen_naes_ii_nw_settings_isSet;
    bool m_nielsen_naes_ii_nw_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioWatermarkSettings_NielsenWatermarksSettings)

#endif // OAIAudioWatermarkSettings_NielsenWatermarksSettings_H
