/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIM2tsSettings.h
 *
 * M2ts Settings
 */

#ifndef OAIM2tsSettings_H
#define OAIM2tsSettings_H

#include <QJsonObject>

#include "OAIM2tsAbsentInputAudioBehavior.h"
#include "OAIM2tsArib.h"
#include "OAIM2tsAribCaptionsPidControl.h"
#include "OAIM2tsAudioBufferModel.h"
#include "OAIM2tsAudioInterval.h"
#include "OAIM2tsAudioStreamType.h"
#include "OAIM2tsBufferModel.h"
#include "OAIM2tsCcDescriptor.h"
#include "OAIM2tsEbifControl.h"
#include "OAIM2tsEbpPlacement.h"
#include "OAIM2tsEsRateInPes.h"
#include "OAIM2tsKlv.h"
#include "OAIM2tsNielsenId3Behavior.h"
#include "OAIM2tsPcrControl.h"
#include "OAIM2tsRateMode.h"
#include "OAIM2tsScte35Control.h"
#include "OAIM2tsSegmentationMarkers.h"
#include "OAIM2tsSegmentationStyle.h"
#include "OAIM2tsSettings_DvbNitSettings.h"
#include "OAIM2tsSettings_DvbSdtSettings.h"
#include "OAIM2tsSettings_DvbTdtSettings.h"
#include "OAIM2tsTimedMetadataBehavior.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIM2tsSettings_DvbNitSettings;
class OAIM2tsSettings_DvbSdtSettings;
class OAIM2tsSettings_DvbTdtSettings;

class OAIM2tsSettings : public OAIObject {
public:
    OAIM2tsSettings();
    OAIM2tsSettings(QString json);
    ~OAIM2tsSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIM2tsAbsentInputAudioBehavior getAbsentInputAudioBehavior() const;
    void setAbsentInputAudioBehavior(const OAIM2tsAbsentInputAudioBehavior &absent_input_audio_behavior);
    bool is_absent_input_audio_behavior_Set() const;
    bool is_absent_input_audio_behavior_Valid() const;

    OAIM2tsArib getArib() const;
    void setArib(const OAIM2tsArib &arib);
    bool is_arib_Set() const;
    bool is_arib_Valid() const;

    QString getAribCaptionsPid() const;
    void setAribCaptionsPid(const QString &arib_captions_pid);
    bool is_arib_captions_pid_Set() const;
    bool is_arib_captions_pid_Valid() const;

    OAIM2tsAribCaptionsPidControl getAribCaptionsPidControl() const;
    void setAribCaptionsPidControl(const OAIM2tsAribCaptionsPidControl &arib_captions_pid_control);
    bool is_arib_captions_pid_control_Set() const;
    bool is_arib_captions_pid_control_Valid() const;

    OAIM2tsAudioBufferModel getAudioBufferModel() const;
    void setAudioBufferModel(const OAIM2tsAudioBufferModel &audio_buffer_model);
    bool is_audio_buffer_model_Set() const;
    bool is_audio_buffer_model_Valid() const;

    qint32 getAudioFramesPerPes() const;
    void setAudioFramesPerPes(const qint32 &audio_frames_per_pes);
    bool is_audio_frames_per_pes_Set() const;
    bool is_audio_frames_per_pes_Valid() const;

    QString getAudioPids() const;
    void setAudioPids(const QString &audio_pids);
    bool is_audio_pids_Set() const;
    bool is_audio_pids_Valid() const;

    OAIM2tsAudioStreamType getAudioStreamType() const;
    void setAudioStreamType(const OAIM2tsAudioStreamType &audio_stream_type);
    bool is_audio_stream_type_Set() const;
    bool is_audio_stream_type_Valid() const;

    qint32 getBitrate() const;
    void setBitrate(const qint32 &bitrate);
    bool is_bitrate_Set() const;
    bool is_bitrate_Valid() const;

    OAIM2tsBufferModel getBufferModel() const;
    void setBufferModel(const OAIM2tsBufferModel &buffer_model);
    bool is_buffer_model_Set() const;
    bool is_buffer_model_Valid() const;

    OAIM2tsCcDescriptor getCcDescriptor() const;
    void setCcDescriptor(const OAIM2tsCcDescriptor &cc_descriptor);
    bool is_cc_descriptor_Set() const;
    bool is_cc_descriptor_Valid() const;

    OAIM2tsSettings_DvbNitSettings getDvbNitSettings() const;
    void setDvbNitSettings(const OAIM2tsSettings_DvbNitSettings &dvb_nit_settings);
    bool is_dvb_nit_settings_Set() const;
    bool is_dvb_nit_settings_Valid() const;

    OAIM2tsSettings_DvbSdtSettings getDvbSdtSettings() const;
    void setDvbSdtSettings(const OAIM2tsSettings_DvbSdtSettings &dvb_sdt_settings);
    bool is_dvb_sdt_settings_Set() const;
    bool is_dvb_sdt_settings_Valid() const;

    QString getDvbSubPids() const;
    void setDvbSubPids(const QString &dvb_sub_pids);
    bool is_dvb_sub_pids_Set() const;
    bool is_dvb_sub_pids_Valid() const;

    OAIM2tsSettings_DvbTdtSettings getDvbTdtSettings() const;
    void setDvbTdtSettings(const OAIM2tsSettings_DvbTdtSettings &dvb_tdt_settings);
    bool is_dvb_tdt_settings_Set() const;
    bool is_dvb_tdt_settings_Valid() const;

    QString getDvbTeletextPid() const;
    void setDvbTeletextPid(const QString &dvb_teletext_pid);
    bool is_dvb_teletext_pid_Set() const;
    bool is_dvb_teletext_pid_Valid() const;

    OAIM2tsEbifControl getEbif() const;
    void setEbif(const OAIM2tsEbifControl &ebif);
    bool is_ebif_Set() const;
    bool is_ebif_Valid() const;

    OAIM2tsAudioInterval getEbpAudioInterval() const;
    void setEbpAudioInterval(const OAIM2tsAudioInterval &ebp_audio_interval);
    bool is_ebp_audio_interval_Set() const;
    bool is_ebp_audio_interval_Valid() const;

    qint32 getEbpLookaheadMs() const;
    void setEbpLookaheadMs(const qint32 &ebp_lookahead_ms);
    bool is_ebp_lookahead_ms_Set() const;
    bool is_ebp_lookahead_ms_Valid() const;

    OAIM2tsEbpPlacement getEbpPlacement() const;
    void setEbpPlacement(const OAIM2tsEbpPlacement &ebp_placement);
    bool is_ebp_placement_Set() const;
    bool is_ebp_placement_Valid() const;

    QString getEcmPid() const;
    void setEcmPid(const QString &ecm_pid);
    bool is_ecm_pid_Set() const;
    bool is_ecm_pid_Valid() const;

    OAIM2tsEsRateInPes getEsRateInPes() const;
    void setEsRateInPes(const OAIM2tsEsRateInPes &es_rate_in_pes);
    bool is_es_rate_in_pes_Set() const;
    bool is_es_rate_in_pes_Valid() const;

    QString getEtvPlatformPid() const;
    void setEtvPlatformPid(const QString &etv_platform_pid);
    bool is_etv_platform_pid_Set() const;
    bool is_etv_platform_pid_Valid() const;

    QString getEtvSignalPid() const;
    void setEtvSignalPid(const QString &etv_signal_pid);
    bool is_etv_signal_pid_Set() const;
    bool is_etv_signal_pid_Valid() const;

    double getFragmentTime() const;
    void setFragmentTime(const double &fragment_time);
    bool is_fragment_time_Set() const;
    bool is_fragment_time_Valid() const;

    OAIM2tsKlv getKlv() const;
    void setKlv(const OAIM2tsKlv &klv);
    bool is_klv_Set() const;
    bool is_klv_Valid() const;

    QString getKlvDataPids() const;
    void setKlvDataPids(const QString &klv_data_pids);
    bool is_klv_data_pids_Set() const;
    bool is_klv_data_pids_Valid() const;

    OAIM2tsNielsenId3Behavior getNielsenId3Behavior() const;
    void setNielsenId3Behavior(const OAIM2tsNielsenId3Behavior &nielsen_id3_behavior);
    bool is_nielsen_id3_behavior_Set() const;
    bool is_nielsen_id3_behavior_Valid() const;

    double getNullPacketBitrate() const;
    void setNullPacketBitrate(const double &null_packet_bitrate);
    bool is_null_packet_bitrate_Set() const;
    bool is_null_packet_bitrate_Valid() const;

    qint32 getPatInterval() const;
    void setPatInterval(const qint32 &pat_interval);
    bool is_pat_interval_Set() const;
    bool is_pat_interval_Valid() const;

    OAIM2tsPcrControl getPcrControl() const;
    void setPcrControl(const OAIM2tsPcrControl &pcr_control);
    bool is_pcr_control_Set() const;
    bool is_pcr_control_Valid() const;

    qint32 getPcrPeriod() const;
    void setPcrPeriod(const qint32 &pcr_period);
    bool is_pcr_period_Set() const;
    bool is_pcr_period_Valid() const;

    QString getPcrPid() const;
    void setPcrPid(const QString &pcr_pid);
    bool is_pcr_pid_Set() const;
    bool is_pcr_pid_Valid() const;

    qint32 getPmtInterval() const;
    void setPmtInterval(const qint32 &pmt_interval);
    bool is_pmt_interval_Set() const;
    bool is_pmt_interval_Valid() const;

    QString getPmtPid() const;
    void setPmtPid(const QString &pmt_pid);
    bool is_pmt_pid_Set() const;
    bool is_pmt_pid_Valid() const;

    qint32 getProgramNum() const;
    void setProgramNum(const qint32 &program_num);
    bool is_program_num_Set() const;
    bool is_program_num_Valid() const;

    OAIM2tsRateMode getRateMode() const;
    void setRateMode(const OAIM2tsRateMode &rate_mode);
    bool is_rate_mode_Set() const;
    bool is_rate_mode_Valid() const;

    QString getScte27Pids() const;
    void setScte27Pids(const QString &scte27_pids);
    bool is_scte27_pids_Set() const;
    bool is_scte27_pids_Valid() const;

    OAIM2tsScte35Control getScte35Control() const;
    void setScte35Control(const OAIM2tsScte35Control &scte35_control);
    bool is_scte35_control_Set() const;
    bool is_scte35_control_Valid() const;

    QString getScte35Pid() const;
    void setScte35Pid(const QString &scte35_pid);
    bool is_scte35_pid_Set() const;
    bool is_scte35_pid_Valid() const;

    OAIM2tsSegmentationMarkers getSegmentationMarkers() const;
    void setSegmentationMarkers(const OAIM2tsSegmentationMarkers &segmentation_markers);
    bool is_segmentation_markers_Set() const;
    bool is_segmentation_markers_Valid() const;

    OAIM2tsSegmentationStyle getSegmentationStyle() const;
    void setSegmentationStyle(const OAIM2tsSegmentationStyle &segmentation_style);
    bool is_segmentation_style_Set() const;
    bool is_segmentation_style_Valid() const;

    double getSegmentationTime() const;
    void setSegmentationTime(const double &segmentation_time);
    bool is_segmentation_time_Set() const;
    bool is_segmentation_time_Valid() const;

    OAIM2tsTimedMetadataBehavior getTimedMetadataBehavior() const;
    void setTimedMetadataBehavior(const OAIM2tsTimedMetadataBehavior &timed_metadata_behavior);
    bool is_timed_metadata_behavior_Set() const;
    bool is_timed_metadata_behavior_Valid() const;

    QString getTimedMetadataPid() const;
    void setTimedMetadataPid(const QString &timed_metadata_pid);
    bool is_timed_metadata_pid_Set() const;
    bool is_timed_metadata_pid_Valid() const;

    qint32 getTransportStreamId() const;
    void setTransportStreamId(const qint32 &transport_stream_id);
    bool is_transport_stream_id_Set() const;
    bool is_transport_stream_id_Valid() const;

    QString getVideoPid() const;
    void setVideoPid(const QString &video_pid);
    bool is_video_pid_Set() const;
    bool is_video_pid_Valid() const;

    double getScte35PrerollPullupMilliseconds() const;
    void setScte35PrerollPullupMilliseconds(const double &scte35_preroll_pullup_milliseconds);
    bool is_scte35_preroll_pullup_milliseconds_Set() const;
    bool is_scte35_preroll_pullup_milliseconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIM2tsAbsentInputAudioBehavior m_absent_input_audio_behavior;
    bool m_absent_input_audio_behavior_isSet;
    bool m_absent_input_audio_behavior_isValid;

    OAIM2tsArib m_arib;
    bool m_arib_isSet;
    bool m_arib_isValid;

    QString m_arib_captions_pid;
    bool m_arib_captions_pid_isSet;
    bool m_arib_captions_pid_isValid;

    OAIM2tsAribCaptionsPidControl m_arib_captions_pid_control;
    bool m_arib_captions_pid_control_isSet;
    bool m_arib_captions_pid_control_isValid;

    OAIM2tsAudioBufferModel m_audio_buffer_model;
    bool m_audio_buffer_model_isSet;
    bool m_audio_buffer_model_isValid;

    qint32 m_audio_frames_per_pes;
    bool m_audio_frames_per_pes_isSet;
    bool m_audio_frames_per_pes_isValid;

    QString m_audio_pids;
    bool m_audio_pids_isSet;
    bool m_audio_pids_isValid;

    OAIM2tsAudioStreamType m_audio_stream_type;
    bool m_audio_stream_type_isSet;
    bool m_audio_stream_type_isValid;

    qint32 m_bitrate;
    bool m_bitrate_isSet;
    bool m_bitrate_isValid;

    OAIM2tsBufferModel m_buffer_model;
    bool m_buffer_model_isSet;
    bool m_buffer_model_isValid;

    OAIM2tsCcDescriptor m_cc_descriptor;
    bool m_cc_descriptor_isSet;
    bool m_cc_descriptor_isValid;

    OAIM2tsSettings_DvbNitSettings m_dvb_nit_settings;
    bool m_dvb_nit_settings_isSet;
    bool m_dvb_nit_settings_isValid;

    OAIM2tsSettings_DvbSdtSettings m_dvb_sdt_settings;
    bool m_dvb_sdt_settings_isSet;
    bool m_dvb_sdt_settings_isValid;

    QString m_dvb_sub_pids;
    bool m_dvb_sub_pids_isSet;
    bool m_dvb_sub_pids_isValid;

    OAIM2tsSettings_DvbTdtSettings m_dvb_tdt_settings;
    bool m_dvb_tdt_settings_isSet;
    bool m_dvb_tdt_settings_isValid;

    QString m_dvb_teletext_pid;
    bool m_dvb_teletext_pid_isSet;
    bool m_dvb_teletext_pid_isValid;

    OAIM2tsEbifControl m_ebif;
    bool m_ebif_isSet;
    bool m_ebif_isValid;

    OAIM2tsAudioInterval m_ebp_audio_interval;
    bool m_ebp_audio_interval_isSet;
    bool m_ebp_audio_interval_isValid;

    qint32 m_ebp_lookahead_ms;
    bool m_ebp_lookahead_ms_isSet;
    bool m_ebp_lookahead_ms_isValid;

    OAIM2tsEbpPlacement m_ebp_placement;
    bool m_ebp_placement_isSet;
    bool m_ebp_placement_isValid;

    QString m_ecm_pid;
    bool m_ecm_pid_isSet;
    bool m_ecm_pid_isValid;

    OAIM2tsEsRateInPes m_es_rate_in_pes;
    bool m_es_rate_in_pes_isSet;
    bool m_es_rate_in_pes_isValid;

    QString m_etv_platform_pid;
    bool m_etv_platform_pid_isSet;
    bool m_etv_platform_pid_isValid;

    QString m_etv_signal_pid;
    bool m_etv_signal_pid_isSet;
    bool m_etv_signal_pid_isValid;

    double m_fragment_time;
    bool m_fragment_time_isSet;
    bool m_fragment_time_isValid;

    OAIM2tsKlv m_klv;
    bool m_klv_isSet;
    bool m_klv_isValid;

    QString m_klv_data_pids;
    bool m_klv_data_pids_isSet;
    bool m_klv_data_pids_isValid;

    OAIM2tsNielsenId3Behavior m_nielsen_id3_behavior;
    bool m_nielsen_id3_behavior_isSet;
    bool m_nielsen_id3_behavior_isValid;

    double m_null_packet_bitrate;
    bool m_null_packet_bitrate_isSet;
    bool m_null_packet_bitrate_isValid;

    qint32 m_pat_interval;
    bool m_pat_interval_isSet;
    bool m_pat_interval_isValid;

    OAIM2tsPcrControl m_pcr_control;
    bool m_pcr_control_isSet;
    bool m_pcr_control_isValid;

    qint32 m_pcr_period;
    bool m_pcr_period_isSet;
    bool m_pcr_period_isValid;

    QString m_pcr_pid;
    bool m_pcr_pid_isSet;
    bool m_pcr_pid_isValid;

    qint32 m_pmt_interval;
    bool m_pmt_interval_isSet;
    bool m_pmt_interval_isValid;

    QString m_pmt_pid;
    bool m_pmt_pid_isSet;
    bool m_pmt_pid_isValid;

    qint32 m_program_num;
    bool m_program_num_isSet;
    bool m_program_num_isValid;

    OAIM2tsRateMode m_rate_mode;
    bool m_rate_mode_isSet;
    bool m_rate_mode_isValid;

    QString m_scte27_pids;
    bool m_scte27_pids_isSet;
    bool m_scte27_pids_isValid;

    OAIM2tsScte35Control m_scte35_control;
    bool m_scte35_control_isSet;
    bool m_scte35_control_isValid;

    QString m_scte35_pid;
    bool m_scte35_pid_isSet;
    bool m_scte35_pid_isValid;

    OAIM2tsSegmentationMarkers m_segmentation_markers;
    bool m_segmentation_markers_isSet;
    bool m_segmentation_markers_isValid;

    OAIM2tsSegmentationStyle m_segmentation_style;
    bool m_segmentation_style_isSet;
    bool m_segmentation_style_isValid;

    double m_segmentation_time;
    bool m_segmentation_time_isSet;
    bool m_segmentation_time_isValid;

    OAIM2tsTimedMetadataBehavior m_timed_metadata_behavior;
    bool m_timed_metadata_behavior_isSet;
    bool m_timed_metadata_behavior_isValid;

    QString m_timed_metadata_pid;
    bool m_timed_metadata_pid_isSet;
    bool m_timed_metadata_pid_isValid;

    qint32 m_transport_stream_id;
    bool m_transport_stream_id_isSet;
    bool m_transport_stream_id_isValid;

    QString m_video_pid;
    bool m_video_pid_isSet;
    bool m_video_pid_isValid;

    double m_scte35_preroll_pullup_milliseconds;
    bool m_scte35_preroll_pullup_milliseconds_isSet;
    bool m_scte35_preroll_pullup_milliseconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIM2tsSettings)

#endif // OAIM2tsSettings_H
