/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMultiplexOutputDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMultiplexOutputDestination::OAIMultiplexOutputDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMultiplexOutputDestination::OAIMultiplexOutputDestination() {
    this->initializeModel();
}

OAIMultiplexOutputDestination::~OAIMultiplexOutputDestination() {}

void OAIMultiplexOutputDestination::initializeModel() {

    m_media_connect_settings_isSet = false;
    m_media_connect_settings_isValid = false;
}

void OAIMultiplexOutputDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMultiplexOutputDestination::fromJsonObject(QJsonObject json) {

    m_media_connect_settings_isValid = ::OpenAPI::fromJsonValue(m_media_connect_settings, json[QString("MediaConnectSettings")]);
    m_media_connect_settings_isSet = !json[QString("MediaConnectSettings")].isNull() && m_media_connect_settings_isValid;
}

QString OAIMultiplexOutputDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMultiplexOutputDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_media_connect_settings.isSet()) {
        obj.insert(QString("MediaConnectSettings"), ::OpenAPI::toJsonValue(m_media_connect_settings));
    }
    return obj;
}

OAIMultiplexOutputDestination_MediaConnectSettings OAIMultiplexOutputDestination::getMediaConnectSettings() const {
    return m_media_connect_settings;
}
void OAIMultiplexOutputDestination::setMediaConnectSettings(const OAIMultiplexOutputDestination_MediaConnectSettings &media_connect_settings) {
    m_media_connect_settings = media_connect_settings;
    m_media_connect_settings_isSet = true;
}

bool OAIMultiplexOutputDestination::is_media_connect_settings_Set() const{
    return m_media_connect_settings_isSet;
}

bool OAIMultiplexOutputDestination::is_media_connect_settings_Valid() const{
    return m_media_connect_settings_isValid;
}

bool OAIMultiplexOutputDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_media_connect_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMultiplexOutputDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
