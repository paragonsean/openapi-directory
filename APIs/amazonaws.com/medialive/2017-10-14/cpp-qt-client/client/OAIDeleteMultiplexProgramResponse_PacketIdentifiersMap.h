/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteMultiplexProgramResponse_PacketIdentifiersMap.h
 *
 * 
 */

#ifndef OAIDeleteMultiplexProgramResponse_PacketIdentifiersMap_H
#define OAIDeleteMultiplexProgramResponse_PacketIdentifiersMap_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteMultiplexProgramResponse_PacketIdentifiersMap : public OAIObject {
public:
    OAIDeleteMultiplexProgramResponse_PacketIdentifiersMap();
    OAIDeleteMultiplexProgramResponse_PacketIdentifiersMap(QString json);
    ~OAIDeleteMultiplexProgramResponse_PacketIdentifiersMap() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAudioPids() const;
    void setAudioPids(const QList &audio_pids);
    bool is_audio_pids_Set() const;
    bool is_audio_pids_Valid() const;

    QList getDvbSubPids() const;
    void setDvbSubPids(const QList &dvb_sub_pids);
    bool is_dvb_sub_pids_Set() const;
    bool is_dvb_sub_pids_Valid() const;

    qint32 getDvbTeletextPid() const;
    void setDvbTeletextPid(const qint32 &dvb_teletext_pid);
    bool is_dvb_teletext_pid_Set() const;
    bool is_dvb_teletext_pid_Valid() const;

    qint32 getEtvPlatformPid() const;
    void setEtvPlatformPid(const qint32 &etv_platform_pid);
    bool is_etv_platform_pid_Set() const;
    bool is_etv_platform_pid_Valid() const;

    qint32 getEtvSignalPid() const;
    void setEtvSignalPid(const qint32 &etv_signal_pid);
    bool is_etv_signal_pid_Set() const;
    bool is_etv_signal_pid_Valid() const;

    QList getKlvDataPids() const;
    void setKlvDataPids(const QList &klv_data_pids);
    bool is_klv_data_pids_Set() const;
    bool is_klv_data_pids_Valid() const;

    qint32 getPcrPid() const;
    void setPcrPid(const qint32 &pcr_pid);
    bool is_pcr_pid_Set() const;
    bool is_pcr_pid_Valid() const;

    qint32 getPmtPid() const;
    void setPmtPid(const qint32 &pmt_pid);
    bool is_pmt_pid_Set() const;
    bool is_pmt_pid_Valid() const;

    qint32 getPrivateMetadataPid() const;
    void setPrivateMetadataPid(const qint32 &private_metadata_pid);
    bool is_private_metadata_pid_Set() const;
    bool is_private_metadata_pid_Valid() const;

    QList getScte27Pids() const;
    void setScte27Pids(const QList &scte27_pids);
    bool is_scte27_pids_Set() const;
    bool is_scte27_pids_Valid() const;

    qint32 getScte35Pid() const;
    void setScte35Pid(const qint32 &scte35_pid);
    bool is_scte35_pid_Set() const;
    bool is_scte35_pid_Valid() const;

    qint32 getTimedMetadataPid() const;
    void setTimedMetadataPid(const qint32 &timed_metadata_pid);
    bool is_timed_metadata_pid_Set() const;
    bool is_timed_metadata_pid_Valid() const;

    qint32 getVideoPid() const;
    void setVideoPid(const qint32 &video_pid);
    bool is_video_pid_Set() const;
    bool is_video_pid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_audio_pids;
    bool m_audio_pids_isSet;
    bool m_audio_pids_isValid;

    QList m_dvb_sub_pids;
    bool m_dvb_sub_pids_isSet;
    bool m_dvb_sub_pids_isValid;

    qint32 m_dvb_teletext_pid;
    bool m_dvb_teletext_pid_isSet;
    bool m_dvb_teletext_pid_isValid;

    qint32 m_etv_platform_pid;
    bool m_etv_platform_pid_isSet;
    bool m_etv_platform_pid_isValid;

    qint32 m_etv_signal_pid;
    bool m_etv_signal_pid_isSet;
    bool m_etv_signal_pid_isValid;

    QList m_klv_data_pids;
    bool m_klv_data_pids_isSet;
    bool m_klv_data_pids_isValid;

    qint32 m_pcr_pid;
    bool m_pcr_pid_isSet;
    bool m_pcr_pid_isValid;

    qint32 m_pmt_pid;
    bool m_pmt_pid_isSet;
    bool m_pmt_pid_isValid;

    qint32 m_private_metadata_pid;
    bool m_private_metadata_pid_isSet;
    bool m_private_metadata_pid_isValid;

    QList m_scte27_pids;
    bool m_scte27_pids_isSet;
    bool m_scte27_pids_isValid;

    qint32 m_scte35_pid;
    bool m_scte35_pid_isSet;
    bool m_scte35_pid_isValid;

    qint32 m_timed_metadata_pid;
    bool m_timed_metadata_pid_isSet;
    bool m_timed_metadata_pid_isValid;

    qint32 m_video_pid;
    bool m_video_pid_isSet;
    bool m_video_pid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteMultiplexProgramResponse_PacketIdentifiersMap)

#endif // OAIDeleteMultiplexProgramResponse_PacketIdentifiersMap_H
