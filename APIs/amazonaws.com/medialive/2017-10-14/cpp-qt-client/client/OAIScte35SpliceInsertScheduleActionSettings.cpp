/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScte35SpliceInsertScheduleActionSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScte35SpliceInsertScheduleActionSettings::OAIScte35SpliceInsertScheduleActionSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScte35SpliceInsertScheduleActionSettings::OAIScte35SpliceInsertScheduleActionSettings() {
    this->initializeModel();
}

OAIScte35SpliceInsertScheduleActionSettings::~OAIScte35SpliceInsertScheduleActionSettings() {}

void OAIScte35SpliceInsertScheduleActionSettings::initializeModel() {

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_splice_event_id_isSet = false;
    m_splice_event_id_isValid = false;
}

void OAIScte35SpliceInsertScheduleActionSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScte35SpliceInsertScheduleActionSettings::fromJsonObject(QJsonObject json) {

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("Duration")]);
    m_duration_isSet = !json[QString("Duration")].isNull() && m_duration_isValid;

    m_splice_event_id_isValid = ::OpenAPI::fromJsonValue(m_splice_event_id, json[QString("SpliceEventId")]);
    m_splice_event_id_isSet = !json[QString("SpliceEventId")].isNull() && m_splice_event_id_isValid;
}

QString OAIScte35SpliceInsertScheduleActionSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScte35SpliceInsertScheduleActionSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_isSet) {
        obj.insert(QString("Duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_splice_event_id_isSet) {
        obj.insert(QString("SpliceEventId"), ::OpenAPI::toJsonValue(m_splice_event_id));
    }
    return obj;
}

qint32 OAIScte35SpliceInsertScheduleActionSettings::getDuration() const {
    return m_duration;
}
void OAIScte35SpliceInsertScheduleActionSettings::setDuration(const qint32 &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIScte35SpliceInsertScheduleActionSettings::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIScte35SpliceInsertScheduleActionSettings::is_duration_Valid() const{
    return m_duration_isValid;
}

qint32 OAIScte35SpliceInsertScheduleActionSettings::getSpliceEventId() const {
    return m_splice_event_id;
}
void OAIScte35SpliceInsertScheduleActionSettings::setSpliceEventId(const qint32 &splice_event_id) {
    m_splice_event_id = splice_event_id;
    m_splice_event_id_isSet = true;
}

bool OAIScte35SpliceInsertScheduleActionSettings::is_splice_event_id_Set() const{
    return m_splice_event_id_isSet;
}

bool OAIScte35SpliceInsertScheduleActionSettings::is_splice_event_id_Valid() const{
    return m_splice_event_id_isValid;
}

bool OAIScte35SpliceInsertScheduleActionSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_splice_event_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScte35SpliceInsertScheduleActionSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_splice_event_id_isValid && true;
}

} // namespace OpenAPI
