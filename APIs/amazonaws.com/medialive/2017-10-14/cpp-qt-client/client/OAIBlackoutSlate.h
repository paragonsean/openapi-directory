/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBlackoutSlate.h
 *
 * Blackout Slate
 */

#ifndef OAIBlackoutSlate_H
#define OAIBlackoutSlate_H

#include <QJsonObject>

#include "OAIBlackoutSlateNetworkEndBlackout.h"
#include "OAIBlackoutSlateState.h"
#include "OAIBlackoutSlate_BlackoutSlateImage.h"
#include "OAIBlackoutSlate_NetworkEndBlackoutImage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBlackoutSlate_BlackoutSlateImage;
class OAIBlackoutSlate_NetworkEndBlackoutImage;

class OAIBlackoutSlate : public OAIObject {
public:
    OAIBlackoutSlate();
    OAIBlackoutSlate(QString json);
    ~OAIBlackoutSlate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBlackoutSlate_BlackoutSlateImage getBlackoutSlateImage() const;
    void setBlackoutSlateImage(const OAIBlackoutSlate_BlackoutSlateImage &blackout_slate_image);
    bool is_blackout_slate_image_Set() const;
    bool is_blackout_slate_image_Valid() const;

    OAIBlackoutSlateNetworkEndBlackout getNetworkEndBlackout() const;
    void setNetworkEndBlackout(const OAIBlackoutSlateNetworkEndBlackout &network_end_blackout);
    bool is_network_end_blackout_Set() const;
    bool is_network_end_blackout_Valid() const;

    OAIBlackoutSlate_NetworkEndBlackoutImage getNetworkEndBlackoutImage() const;
    void setNetworkEndBlackoutImage(const OAIBlackoutSlate_NetworkEndBlackoutImage &network_end_blackout_image);
    bool is_network_end_blackout_image_Set() const;
    bool is_network_end_blackout_image_Valid() const;

    QString getNetworkId() const;
    void setNetworkId(const QString &network_id);
    bool is_network_id_Set() const;
    bool is_network_id_Valid() const;

    OAIBlackoutSlateState getState() const;
    void setState(const OAIBlackoutSlateState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBlackoutSlate_BlackoutSlateImage m_blackout_slate_image;
    bool m_blackout_slate_image_isSet;
    bool m_blackout_slate_image_isValid;

    OAIBlackoutSlateNetworkEndBlackout m_network_end_blackout;
    bool m_network_end_blackout_isSet;
    bool m_network_end_blackout_isValid;

    OAIBlackoutSlate_NetworkEndBlackoutImage m_network_end_blackout_image;
    bool m_network_end_blackout_image_isSet;
    bool m_network_end_blackout_image_isValid;

    QString m_network_id;
    bool m_network_id_isSet;
    bool m_network_id_isValid;

    OAIBlackoutSlateState m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBlackoutSlate)

#endif // OAIBlackoutSlate_H
