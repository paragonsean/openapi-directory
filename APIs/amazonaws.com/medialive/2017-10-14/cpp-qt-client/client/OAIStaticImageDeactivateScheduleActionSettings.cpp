/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStaticImageDeactivateScheduleActionSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStaticImageDeactivateScheduleActionSettings::OAIStaticImageDeactivateScheduleActionSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStaticImageDeactivateScheduleActionSettings::OAIStaticImageDeactivateScheduleActionSettings() {
    this->initializeModel();
}

OAIStaticImageDeactivateScheduleActionSettings::~OAIStaticImageDeactivateScheduleActionSettings() {}

void OAIStaticImageDeactivateScheduleActionSettings::initializeModel() {

    m_fade_out_isSet = false;
    m_fade_out_isValid = false;

    m_layer_isSet = false;
    m_layer_isValid = false;
}

void OAIStaticImageDeactivateScheduleActionSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStaticImageDeactivateScheduleActionSettings::fromJsonObject(QJsonObject json) {

    m_fade_out_isValid = ::OpenAPI::fromJsonValue(m_fade_out, json[QString("FadeOut")]);
    m_fade_out_isSet = !json[QString("FadeOut")].isNull() && m_fade_out_isValid;

    m_layer_isValid = ::OpenAPI::fromJsonValue(m_layer, json[QString("Layer")]);
    m_layer_isSet = !json[QString("Layer")].isNull() && m_layer_isValid;
}

QString OAIStaticImageDeactivateScheduleActionSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStaticImageDeactivateScheduleActionSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_fade_out_isSet) {
        obj.insert(QString("FadeOut"), ::OpenAPI::toJsonValue(m_fade_out));
    }
    if (m_layer_isSet) {
        obj.insert(QString("Layer"), ::OpenAPI::toJsonValue(m_layer));
    }
    return obj;
}

qint32 OAIStaticImageDeactivateScheduleActionSettings::getFadeOut() const {
    return m_fade_out;
}
void OAIStaticImageDeactivateScheduleActionSettings::setFadeOut(const qint32 &fade_out) {
    m_fade_out = fade_out;
    m_fade_out_isSet = true;
}

bool OAIStaticImageDeactivateScheduleActionSettings::is_fade_out_Set() const{
    return m_fade_out_isSet;
}

bool OAIStaticImageDeactivateScheduleActionSettings::is_fade_out_Valid() const{
    return m_fade_out_isValid;
}

qint32 OAIStaticImageDeactivateScheduleActionSettings::getLayer() const {
    return m_layer;
}
void OAIStaticImageDeactivateScheduleActionSettings::setLayer(const qint32 &layer) {
    m_layer = layer;
    m_layer_isSet = true;
}

bool OAIStaticImageDeactivateScheduleActionSettings::is_layer_Set() const{
    return m_layer_isSet;
}

bool OAIStaticImageDeactivateScheduleActionSettings::is_layer_Valid() const{
    return m_layer_isValid;
}

bool OAIStaticImageDeactivateScheduleActionSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fade_out_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_layer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStaticImageDeactivateScheduleActionSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
