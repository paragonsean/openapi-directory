/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISmoothGroupTimestampOffsetMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISmoothGroupTimestampOffsetMode::OAISmoothGroupTimestampOffsetMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISmoothGroupTimestampOffsetMode::OAISmoothGroupTimestampOffsetMode() {
    this->initializeModel();
}

OAISmoothGroupTimestampOffsetMode::~OAISmoothGroupTimestampOffsetMode() {}

void OAISmoothGroupTimestampOffsetMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISmoothGroupTimestampOffsetMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISmoothGroupTimestampOffsetMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("USE_CONFIGURED_OFFSET", Qt::CaseInsensitive) == 0) {
        m_value = eOAISmoothGroupTimestampOffsetMode::CONFIGURED_OFFSET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("USE_EVENT_START_DATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAISmoothGroupTimestampOffsetMode::EVENT_START_DATE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISmoothGroupTimestampOffsetMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISmoothGroupTimestampOffsetMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISmoothGroupTimestampOffsetMode::CONFIGURED_OFFSET:
            val = "USE_CONFIGURED_OFFSET";
            break;
        case eOAISmoothGroupTimestampOffsetMode::EVENT_START_DATE:
            val = "USE_EVENT_START_DATE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISmoothGroupTimestampOffsetMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISmoothGroupTimestampOffsetMode::eOAISmoothGroupTimestampOffsetMode OAISmoothGroupTimestampOffsetMode::getValue() const {
    return m_value;
}

void OAISmoothGroupTimestampOffsetMode::setValue(const OAISmoothGroupTimestampOffsetMode::eOAISmoothGroupTimestampOffsetMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISmoothGroupTimestampOffsetMode::isSet() const {
    
    return m_value_isSet;
}

bool OAISmoothGroupTimestampOffsetMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
