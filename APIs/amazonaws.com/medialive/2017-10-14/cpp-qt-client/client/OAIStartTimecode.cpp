/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartTimecode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartTimecode::OAIStartTimecode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartTimecode::OAIStartTimecode() {
    this->initializeModel();
}

OAIStartTimecode::~OAIStartTimecode() {}

void OAIStartTimecode::initializeModel() {

    m_timecode_isSet = false;
    m_timecode_isValid = false;
}

void OAIStartTimecode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartTimecode::fromJsonObject(QJsonObject json) {

    m_timecode_isValid = ::OpenAPI::fromJsonValue(m_timecode, json[QString("Timecode")]);
    m_timecode_isSet = !json[QString("Timecode")].isNull() && m_timecode_isValid;
}

QString OAIStartTimecode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartTimecode::asJsonObject() const {
    QJsonObject obj;
    if (m_timecode_isSet) {
        obj.insert(QString("Timecode"), ::OpenAPI::toJsonValue(m_timecode));
    }
    return obj;
}

QString OAIStartTimecode::getTimecode() const {
    return m_timecode;
}
void OAIStartTimecode::setTimecode(const QString &timecode) {
    m_timecode = timecode;
    m_timecode_isSet = true;
}

bool OAIStartTimecode::is_timecode_Set() const{
    return m_timecode_isSet;
}

bool OAIStartTimecode::is_timecode_Valid() const{
    return m_timecode_isValid;
}

bool OAIStartTimecode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_timecode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartTimecode::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
