/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputSettings_ArchiveOutputSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputSettings_ArchiveOutputSettings::OAIOutputSettings_ArchiveOutputSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputSettings_ArchiveOutputSettings::OAIOutputSettings_ArchiveOutputSettings() {
    this->initializeModel();
}

OAIOutputSettings_ArchiveOutputSettings::~OAIOutputSettings_ArchiveOutputSettings() {}

void OAIOutputSettings_ArchiveOutputSettings::initializeModel() {

    m_container_settings_isSet = false;
    m_container_settings_isValid = false;

    m_extension_isSet = false;
    m_extension_isValid = false;

    m_name_modifier_isSet = false;
    m_name_modifier_isValid = false;
}

void OAIOutputSettings_ArchiveOutputSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutputSettings_ArchiveOutputSettings::fromJsonObject(QJsonObject json) {

    m_container_settings_isValid = ::OpenAPI::fromJsonValue(m_container_settings, json[QString("ContainerSettings")]);
    m_container_settings_isSet = !json[QString("ContainerSettings")].isNull() && m_container_settings_isValid;

    m_extension_isValid = ::OpenAPI::fromJsonValue(m_extension, json[QString("Extension")]);
    m_extension_isSet = !json[QString("Extension")].isNull() && m_extension_isValid;

    m_name_modifier_isValid = ::OpenAPI::fromJsonValue(m_name_modifier, json[QString("NameModifier")]);
    m_name_modifier_isSet = !json[QString("NameModifier")].isNull() && m_name_modifier_isValid;
}

QString OAIOutputSettings_ArchiveOutputSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutputSettings_ArchiveOutputSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_container_settings.isSet()) {
        obj.insert(QString("ContainerSettings"), ::OpenAPI::toJsonValue(m_container_settings));
    }
    if (m_extension_isSet) {
        obj.insert(QString("Extension"), ::OpenAPI::toJsonValue(m_extension));
    }
    if (m_name_modifier_isSet) {
        obj.insert(QString("NameModifier"), ::OpenAPI::toJsonValue(m_name_modifier));
    }
    return obj;
}

OAIArchiveOutputSettings_ContainerSettings OAIOutputSettings_ArchiveOutputSettings::getContainerSettings() const {
    return m_container_settings;
}
void OAIOutputSettings_ArchiveOutputSettings::setContainerSettings(const OAIArchiveOutputSettings_ContainerSettings &container_settings) {
    m_container_settings = container_settings;
    m_container_settings_isSet = true;
}

bool OAIOutputSettings_ArchiveOutputSettings::is_container_settings_Set() const{
    return m_container_settings_isSet;
}

bool OAIOutputSettings_ArchiveOutputSettings::is_container_settings_Valid() const{
    return m_container_settings_isValid;
}

QString OAIOutputSettings_ArchiveOutputSettings::getExtension() const {
    return m_extension;
}
void OAIOutputSettings_ArchiveOutputSettings::setExtension(const QString &extension) {
    m_extension = extension;
    m_extension_isSet = true;
}

bool OAIOutputSettings_ArchiveOutputSettings::is_extension_Set() const{
    return m_extension_isSet;
}

bool OAIOutputSettings_ArchiveOutputSettings::is_extension_Valid() const{
    return m_extension_isValid;
}

QString OAIOutputSettings_ArchiveOutputSettings::getNameModifier() const {
    return m_name_modifier;
}
void OAIOutputSettings_ArchiveOutputSettings::setNameModifier(const QString &name_modifier) {
    m_name_modifier = name_modifier;
    m_name_modifier_isSet = true;
}

bool OAIOutputSettings_ArchiveOutputSettings::is_name_modifier_Set() const{
    return m_name_modifier_isSet;
}

bool OAIOutputSettings_ArchiveOutputSettings::is_name_modifier_Valid() const{
    return m_name_modifier_isValid;
}

bool OAIOutputSettings_ArchiveOutputSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_container_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_modifier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutputSettings_ArchiveOutputSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_container_settings_isValid && true;
}

} // namespace OpenAPI
