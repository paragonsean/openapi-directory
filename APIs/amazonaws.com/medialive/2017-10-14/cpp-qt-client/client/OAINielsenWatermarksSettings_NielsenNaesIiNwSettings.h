/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINielsenWatermarksSettings_NielsenNaesIiNwSettings.h
 *
 * 
 */

#ifndef OAINielsenWatermarksSettings_NielsenNaesIiNwSettings_H
#define OAINielsenWatermarksSettings_NielsenNaesIiNwSettings_H

#include <QJsonObject>

#include "OAINielsenWatermarkTimezones.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINielsenWatermarksSettings_NielsenNaesIiNwSettings : public OAIObject {
public:
    OAINielsenWatermarksSettings_NielsenNaesIiNwSettings();
    OAINielsenWatermarksSettings_NielsenNaesIiNwSettings(QString json);
    ~OAINielsenWatermarksSettings_NielsenNaesIiNwSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCheckDigitString() const;
    void setCheckDigitString(const QString &check_digit_string);
    bool is_check_digit_string_Set() const;
    bool is_check_digit_string_Valid() const;

    double getSid() const;
    void setSid(const double &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    OAINielsenWatermarkTimezones getTimezone() const;
    void setTimezone(const OAINielsenWatermarkTimezones &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_check_digit_string;
    bool m_check_digit_string_isSet;
    bool m_check_digit_string_isValid;

    double m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    OAINielsenWatermarkTimezones m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINielsenWatermarksSettings_NielsenNaesIiNwSettings)

#endif // OAINielsenWatermarksSettings_NielsenNaesIiNwSettings_H
