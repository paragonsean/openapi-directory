/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDvbSdtOutputSdt.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDvbSdtOutputSdt::OAIDvbSdtOutputSdt(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDvbSdtOutputSdt::OAIDvbSdtOutputSdt() {
    this->initializeModel();
}

OAIDvbSdtOutputSdt::~OAIDvbSdtOutputSdt() {}

void OAIDvbSdtOutputSdt::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDvbSdtOutputSdt::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDvbSdtOutputSdt::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SDT_FOLLOW", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSdtOutputSdt::FOLLOW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SDT_FOLLOW_IF_PRESENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSdtOutputSdt::FOLLOW_IF_PRESENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SDT_MANUAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSdtOutputSdt::MANUAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SDT_NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSdtOutputSdt::NONE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDvbSdtOutputSdt::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDvbSdtOutputSdt::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDvbSdtOutputSdt::FOLLOW:
            val = "SDT_FOLLOW";
            break;
        case eOAIDvbSdtOutputSdt::FOLLOW_IF_PRESENT:
            val = "SDT_FOLLOW_IF_PRESENT";
            break;
        case eOAIDvbSdtOutputSdt::MANUAL:
            val = "SDT_MANUAL";
            break;
        case eOAIDvbSdtOutputSdt::NONE:
            val = "SDT_NONE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDvbSdtOutputSdt::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDvbSdtOutputSdt::eOAIDvbSdtOutputSdt OAIDvbSdtOutputSdt::getValue() const {
    return m_value;
}

void OAIDvbSdtOutputSdt::setValue(const OAIDvbSdtOutputSdt::eOAIDvbSdtOutputSdt& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDvbSdtOutputSdt::isSet() const {
    
    return m_value_isSet;
}

bool OAIDvbSdtOutputSdt::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
