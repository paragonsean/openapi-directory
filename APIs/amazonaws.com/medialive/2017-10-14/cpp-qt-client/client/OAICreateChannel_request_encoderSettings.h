/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateChannel_request_encoderSettings.h
 *
 * Encoder Settings
 */

#ifndef OAICreateChannel_request_encoderSettings_H
#define OAICreateChannel_request_encoderSettings_H

#include <QJsonObject>

#include "OAICreateChannel_request_encoderSettings_AvailBlanking.h"
#include "OAICreateChannel_request_encoderSettings_AvailConfiguration.h"
#include "OAICreateChannel_request_encoderSettings_BlackoutSlate.h"
#include "OAICreateChannel_request_encoderSettings_FeatureActivations.h"
#include "OAICreateChannel_request_encoderSettings_GlobalConfiguration.h"
#include "OAICreateChannel_request_encoderSettings_MotionGraphicsConfiguration.h"
#include "OAICreateChannel_request_encoderSettings_NielsenConfiguration.h"
#include "OAICreateChannel_request_encoderSettings_ThumbnailConfiguration.h"
#include "OAICreateChannel_request_encoderSettings_TimecodeConfig.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateChannel_request_encoderSettings_AvailBlanking;
class OAICreateChannel_request_encoderSettings_AvailConfiguration;
class OAICreateChannel_request_encoderSettings_BlackoutSlate;
class OAICreateChannel_request_encoderSettings_FeatureActivations;
class OAICreateChannel_request_encoderSettings_GlobalConfiguration;
class OAICreateChannel_request_encoderSettings_MotionGraphicsConfiguration;
class OAICreateChannel_request_encoderSettings_NielsenConfiguration;
class OAICreateChannel_request_encoderSettings_TimecodeConfig;
class OAICreateChannel_request_encoderSettings_ThumbnailConfiguration;

class OAICreateChannel_request_encoderSettings : public OAIObject {
public:
    OAICreateChannel_request_encoderSettings();
    OAICreateChannel_request_encoderSettings(QString json);
    ~OAICreateChannel_request_encoderSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAudioDescriptions() const;
    void setAudioDescriptions(const QList &audio_descriptions);
    bool is_audio_descriptions_Set() const;
    bool is_audio_descriptions_Valid() const;

    OAICreateChannel_request_encoderSettings_AvailBlanking getAvailBlanking() const;
    void setAvailBlanking(const OAICreateChannel_request_encoderSettings_AvailBlanking &avail_blanking);
    bool is_avail_blanking_Set() const;
    bool is_avail_blanking_Valid() const;

    OAICreateChannel_request_encoderSettings_AvailConfiguration getAvailConfiguration() const;
    void setAvailConfiguration(const OAICreateChannel_request_encoderSettings_AvailConfiguration &avail_configuration);
    bool is_avail_configuration_Set() const;
    bool is_avail_configuration_Valid() const;

    OAICreateChannel_request_encoderSettings_BlackoutSlate getBlackoutSlate() const;
    void setBlackoutSlate(const OAICreateChannel_request_encoderSettings_BlackoutSlate &blackout_slate);
    bool is_blackout_slate_Set() const;
    bool is_blackout_slate_Valid() const;

    QList getCaptionDescriptions() const;
    void setCaptionDescriptions(const QList &caption_descriptions);
    bool is_caption_descriptions_Set() const;
    bool is_caption_descriptions_Valid() const;

    OAICreateChannel_request_encoderSettings_FeatureActivations getFeatureActivations() const;
    void setFeatureActivations(const OAICreateChannel_request_encoderSettings_FeatureActivations &feature_activations);
    bool is_feature_activations_Set() const;
    bool is_feature_activations_Valid() const;

    OAICreateChannel_request_encoderSettings_GlobalConfiguration getGlobalConfiguration() const;
    void setGlobalConfiguration(const OAICreateChannel_request_encoderSettings_GlobalConfiguration &global_configuration);
    bool is_global_configuration_Set() const;
    bool is_global_configuration_Valid() const;

    OAICreateChannel_request_encoderSettings_MotionGraphicsConfiguration getMotionGraphicsConfiguration() const;
    void setMotionGraphicsConfiguration(const OAICreateChannel_request_encoderSettings_MotionGraphicsConfiguration &motion_graphics_configuration);
    bool is_motion_graphics_configuration_Set() const;
    bool is_motion_graphics_configuration_Valid() const;

    OAICreateChannel_request_encoderSettings_NielsenConfiguration getNielsenConfiguration() const;
    void setNielsenConfiguration(const OAICreateChannel_request_encoderSettings_NielsenConfiguration &nielsen_configuration);
    bool is_nielsen_configuration_Set() const;
    bool is_nielsen_configuration_Valid() const;

    QList getOutputGroups() const;
    void setOutputGroups(const QList &output_groups);
    bool is_output_groups_Set() const;
    bool is_output_groups_Valid() const;

    OAICreateChannel_request_encoderSettings_TimecodeConfig getTimecodeConfig() const;
    void setTimecodeConfig(const OAICreateChannel_request_encoderSettings_TimecodeConfig &timecode_config);
    bool is_timecode_config_Set() const;
    bool is_timecode_config_Valid() const;

    QList getVideoDescriptions() const;
    void setVideoDescriptions(const QList &video_descriptions);
    bool is_video_descriptions_Set() const;
    bool is_video_descriptions_Valid() const;

    OAICreateChannel_request_encoderSettings_ThumbnailConfiguration getThumbnailConfiguration() const;
    void setThumbnailConfiguration(const OAICreateChannel_request_encoderSettings_ThumbnailConfiguration &thumbnail_configuration);
    bool is_thumbnail_configuration_Set() const;
    bool is_thumbnail_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_audio_descriptions;
    bool m_audio_descriptions_isSet;
    bool m_audio_descriptions_isValid;

    OAICreateChannel_request_encoderSettings_AvailBlanking m_avail_blanking;
    bool m_avail_blanking_isSet;
    bool m_avail_blanking_isValid;

    OAICreateChannel_request_encoderSettings_AvailConfiguration m_avail_configuration;
    bool m_avail_configuration_isSet;
    bool m_avail_configuration_isValid;

    OAICreateChannel_request_encoderSettings_BlackoutSlate m_blackout_slate;
    bool m_blackout_slate_isSet;
    bool m_blackout_slate_isValid;

    QList m_caption_descriptions;
    bool m_caption_descriptions_isSet;
    bool m_caption_descriptions_isValid;

    OAICreateChannel_request_encoderSettings_FeatureActivations m_feature_activations;
    bool m_feature_activations_isSet;
    bool m_feature_activations_isValid;

    OAICreateChannel_request_encoderSettings_GlobalConfiguration m_global_configuration;
    bool m_global_configuration_isSet;
    bool m_global_configuration_isValid;

    OAICreateChannel_request_encoderSettings_MotionGraphicsConfiguration m_motion_graphics_configuration;
    bool m_motion_graphics_configuration_isSet;
    bool m_motion_graphics_configuration_isValid;

    OAICreateChannel_request_encoderSettings_NielsenConfiguration m_nielsen_configuration;
    bool m_nielsen_configuration_isSet;
    bool m_nielsen_configuration_isValid;

    QList m_output_groups;
    bool m_output_groups_isSet;
    bool m_output_groups_isValid;

    OAICreateChannel_request_encoderSettings_TimecodeConfig m_timecode_config;
    bool m_timecode_config_isSet;
    bool m_timecode_config_isValid;

    QList m_video_descriptions;
    bool m_video_descriptions_isSet;
    bool m_video_descriptions_isValid;

    OAICreateChannel_request_encoderSettings_ThumbnailConfiguration m_thumbnail_configuration;
    bool m_thumbnail_configuration_isSet;
    bool m_thumbnail_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateChannel_request_encoderSettings)

#endif // OAICreateChannel_request_encoderSettings_H
