/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIThumbnailDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIThumbnailDetail::OAIThumbnailDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIThumbnailDetail::OAIThumbnailDetail() {
    this->initializeModel();
}

OAIThumbnailDetail::~OAIThumbnailDetail() {}

void OAIThumbnailDetail::initializeModel() {

    m_pipeline_id_isSet = false;
    m_pipeline_id_isValid = false;

    m_thumbnails_isSet = false;
    m_thumbnails_isValid = false;
}

void OAIThumbnailDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIThumbnailDetail::fromJsonObject(QJsonObject json) {

    m_pipeline_id_isValid = ::OpenAPI::fromJsonValue(m_pipeline_id, json[QString("PipelineId")]);
    m_pipeline_id_isSet = !json[QString("PipelineId")].isNull() && m_pipeline_id_isValid;

    m_thumbnails_isValid = ::OpenAPI::fromJsonValue(m_thumbnails, json[QString("Thumbnails")]);
    m_thumbnails_isSet = !json[QString("Thumbnails")].isNull() && m_thumbnails_isValid;
}

QString OAIThumbnailDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIThumbnailDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_pipeline_id_isSet) {
        obj.insert(QString("PipelineId"), ::OpenAPI::toJsonValue(m_pipeline_id));
    }
    if (m_thumbnails.isSet()) {
        obj.insert(QString("Thumbnails"), ::OpenAPI::toJsonValue(m_thumbnails));
    }
    return obj;
}

QString OAIThumbnailDetail::getPipelineId() const {
    return m_pipeline_id;
}
void OAIThumbnailDetail::setPipelineId(const QString &pipeline_id) {
    m_pipeline_id = pipeline_id;
    m_pipeline_id_isSet = true;
}

bool OAIThumbnailDetail::is_pipeline_id_Set() const{
    return m_pipeline_id_isSet;
}

bool OAIThumbnailDetail::is_pipeline_id_Valid() const{
    return m_pipeline_id_isValid;
}

QList OAIThumbnailDetail::getThumbnails() const {
    return m_thumbnails;
}
void OAIThumbnailDetail::setThumbnails(const QList &thumbnails) {
    m_thumbnails = thumbnails;
    m_thumbnails_isSet = true;
}

bool OAIThumbnailDetail::is_thumbnails_Set() const{
    return m_thumbnails_isSet;
}

bool OAIThumbnailDetail::is_thumbnails_Valid() const{
    return m_thumbnails_isValid;
}

bool OAIThumbnailDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pipeline_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnails.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIThumbnailDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
