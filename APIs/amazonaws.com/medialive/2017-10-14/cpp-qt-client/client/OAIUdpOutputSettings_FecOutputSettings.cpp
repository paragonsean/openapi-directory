/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUdpOutputSettings_FecOutputSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUdpOutputSettings_FecOutputSettings::OAIUdpOutputSettings_FecOutputSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUdpOutputSettings_FecOutputSettings::OAIUdpOutputSettings_FecOutputSettings() {
    this->initializeModel();
}

OAIUdpOutputSettings_FecOutputSettings::~OAIUdpOutputSettings_FecOutputSettings() {}

void OAIUdpOutputSettings_FecOutputSettings::initializeModel() {

    m_column_depth_isSet = false;
    m_column_depth_isValid = false;

    m_include_fec_isSet = false;
    m_include_fec_isValid = false;

    m_row_length_isSet = false;
    m_row_length_isValid = false;
}

void OAIUdpOutputSettings_FecOutputSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUdpOutputSettings_FecOutputSettings::fromJsonObject(QJsonObject json) {

    m_column_depth_isValid = ::OpenAPI::fromJsonValue(m_column_depth, json[QString("ColumnDepth")]);
    m_column_depth_isSet = !json[QString("ColumnDepth")].isNull() && m_column_depth_isValid;

    m_include_fec_isValid = ::OpenAPI::fromJsonValue(m_include_fec, json[QString("IncludeFec")]);
    m_include_fec_isSet = !json[QString("IncludeFec")].isNull() && m_include_fec_isValid;

    m_row_length_isValid = ::OpenAPI::fromJsonValue(m_row_length, json[QString("RowLength")]);
    m_row_length_isSet = !json[QString("RowLength")].isNull() && m_row_length_isValid;
}

QString OAIUdpOutputSettings_FecOutputSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUdpOutputSettings_FecOutputSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_column_depth_isSet) {
        obj.insert(QString("ColumnDepth"), ::OpenAPI::toJsonValue(m_column_depth));
    }
    if (m_include_fec.isSet()) {
        obj.insert(QString("IncludeFec"), ::OpenAPI::toJsonValue(m_include_fec));
    }
    if (m_row_length_isSet) {
        obj.insert(QString("RowLength"), ::OpenAPI::toJsonValue(m_row_length));
    }
    return obj;
}

qint32 OAIUdpOutputSettings_FecOutputSettings::getColumnDepth() const {
    return m_column_depth;
}
void OAIUdpOutputSettings_FecOutputSettings::setColumnDepth(const qint32 &column_depth) {
    m_column_depth = column_depth;
    m_column_depth_isSet = true;
}

bool OAIUdpOutputSettings_FecOutputSettings::is_column_depth_Set() const{
    return m_column_depth_isSet;
}

bool OAIUdpOutputSettings_FecOutputSettings::is_column_depth_Valid() const{
    return m_column_depth_isValid;
}

OAIFecOutputIncludeFec OAIUdpOutputSettings_FecOutputSettings::getIncludeFec() const {
    return m_include_fec;
}
void OAIUdpOutputSettings_FecOutputSettings::setIncludeFec(const OAIFecOutputIncludeFec &include_fec) {
    m_include_fec = include_fec;
    m_include_fec_isSet = true;
}

bool OAIUdpOutputSettings_FecOutputSettings::is_include_fec_Set() const{
    return m_include_fec_isSet;
}

bool OAIUdpOutputSettings_FecOutputSettings::is_include_fec_Valid() const{
    return m_include_fec_isValid;
}

qint32 OAIUdpOutputSettings_FecOutputSettings::getRowLength() const {
    return m_row_length;
}
void OAIUdpOutputSettings_FecOutputSettings::setRowLength(const qint32 &row_length) {
    m_row_length = row_length;
    m_row_length_isSet = true;
}

bool OAIUdpOutputSettings_FecOutputSettings::is_row_length_Set() const{
    return m_row_length_isSet;
}

bool OAIUdpOutputSettings_FecOutputSettings::is_row_length_Valid() const{
    return m_row_length_isValid;
}

bool OAIUdpOutputSettings_FecOutputSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_depth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_fec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_length_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUdpOutputSettings_FecOutputSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
