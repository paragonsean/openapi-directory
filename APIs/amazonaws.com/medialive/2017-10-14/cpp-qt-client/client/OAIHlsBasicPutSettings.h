/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHlsBasicPutSettings.h
 *
 * Hls Basic Put Settings
 */

#ifndef OAIHlsBasicPutSettings_H
#define OAIHlsBasicPutSettings_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHlsBasicPutSettings : public OAIObject {
public:
    OAIHlsBasicPutSettings();
    OAIHlsBasicPutSettings(QString json);
    ~OAIHlsBasicPutSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getConnectionRetryInterval() const;
    void setConnectionRetryInterval(const qint32 &connection_retry_interval);
    bool is_connection_retry_interval_Set() const;
    bool is_connection_retry_interval_Valid() const;

    qint32 getFilecacheDuration() const;
    void setFilecacheDuration(const qint32 &filecache_duration);
    bool is_filecache_duration_Set() const;
    bool is_filecache_duration_Valid() const;

    qint32 getNumRetries() const;
    void setNumRetries(const qint32 &num_retries);
    bool is_num_retries_Set() const;
    bool is_num_retries_Valid() const;

    qint32 getRestartDelay() const;
    void setRestartDelay(const qint32 &restart_delay);
    bool is_restart_delay_Set() const;
    bool is_restart_delay_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_connection_retry_interval;
    bool m_connection_retry_interval_isSet;
    bool m_connection_retry_interval_isValid;

    qint32 m_filecache_duration;
    bool m_filecache_duration_isSet;
    bool m_filecache_duration_isValid;

    qint32 m_num_retries;
    bool m_num_retries_isSet;
    bool m_num_retries_isValid;

    qint32 m_restart_delay;
    bool m_restart_delay_isSet;
    bool m_restart_delay_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHlsBasicPutSettings)

#endif // OAIHlsBasicPutSettings_H
