/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoDescription.h
 *
 * Video settings for this stream.
 */

#ifndef OAIVideoDescription_H
#define OAIVideoDescription_H

#include <QJsonObject>

#include "OAIVideoDescriptionRespondToAfd.h"
#include "OAIVideoDescriptionScalingBehavior.h"
#include "OAIVideoDescription_CodecSettings.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVideoDescription_CodecSettings;

class OAIVideoDescription : public OAIObject {
public:
    OAIVideoDescription();
    OAIVideoDescription(QString json);
    ~OAIVideoDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVideoDescription_CodecSettings getCodecSettings() const;
    void setCodecSettings(const OAIVideoDescription_CodecSettings &codec_settings);
    bool is_codec_settings_Set() const;
    bool is_codec_settings_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIVideoDescriptionRespondToAfd getRespondToAfd() const;
    void setRespondToAfd(const OAIVideoDescriptionRespondToAfd &respond_to_afd);
    bool is_respond_to_afd_Set() const;
    bool is_respond_to_afd_Valid() const;

    OAIVideoDescriptionScalingBehavior getScalingBehavior() const;
    void setScalingBehavior(const OAIVideoDescriptionScalingBehavior &scaling_behavior);
    bool is_scaling_behavior_Set() const;
    bool is_scaling_behavior_Valid() const;

    qint32 getSharpness() const;
    void setSharpness(const qint32 &sharpness);
    bool is_sharpness_Set() const;
    bool is_sharpness_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVideoDescription_CodecSettings m_codec_settings;
    bool m_codec_settings_isSet;
    bool m_codec_settings_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIVideoDescriptionRespondToAfd m_respond_to_afd;
    bool m_respond_to_afd_isSet;
    bool m_respond_to_afd_isValid;

    OAIVideoDescriptionScalingBehavior m_scaling_behavior;
    bool m_scaling_behavior_isSet;
    bool m_scaling_behavior_isValid;

    qint32 m_sharpness;
    bool m_sharpness_isSet;
    bool m_sharpness_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoDescription)

#endif // OAIVideoDescription_H
