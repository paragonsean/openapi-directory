/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIH265Level.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIH265Level::OAIH265Level(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIH265Level::OAIH265Level() {
    this->initializeModel();
}

OAIH265Level::~OAIH265Level() {}

void OAIH265Level::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIH265Level::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIH265Level::fromJson(QString jsonString) {
    
    if ( jsonString.compare("H265_LEVEL_1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_2_1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_2_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_3", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_3_1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_3_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_4", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_4_1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_4_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_5", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_5;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_5_1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_5_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_5_2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_5_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_6", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_6;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_6_1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_6_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_6_2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::_6_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("H265_LEVEL_AUTO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265Level::AUTO;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIH265Level::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIH265Level::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIH265Level::_1:
            val = "H265_LEVEL_1";
            break;
        case eOAIH265Level::_2:
            val = "H265_LEVEL_2";
            break;
        case eOAIH265Level::_2_1:
            val = "H265_LEVEL_2_1";
            break;
        case eOAIH265Level::_3:
            val = "H265_LEVEL_3";
            break;
        case eOAIH265Level::_3_1:
            val = "H265_LEVEL_3_1";
            break;
        case eOAIH265Level::_4:
            val = "H265_LEVEL_4";
            break;
        case eOAIH265Level::_4_1:
            val = "H265_LEVEL_4_1";
            break;
        case eOAIH265Level::_5:
            val = "H265_LEVEL_5";
            break;
        case eOAIH265Level::_5_1:
            val = "H265_LEVEL_5_1";
            break;
        case eOAIH265Level::_5_2:
            val = "H265_LEVEL_5_2";
            break;
        case eOAIH265Level::_6:
            val = "H265_LEVEL_6";
            break;
        case eOAIH265Level::_6_1:
            val = "H265_LEVEL_6_1";
            break;
        case eOAIH265Level::_6_2:
            val = "H265_LEVEL_6_2";
            break;
        case eOAIH265Level::AUTO:
            val = "H265_LEVEL_AUTO";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIH265Level::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIH265Level::eOAIH265Level OAIH265Level::getValue() const {
    return m_value;
}

void OAIH265Level::setValue(const OAIH265Level::eOAIH265Level& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIH265Level::isSet() const {
    
    return m_value_isSet;
}

bool OAIH265Level::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
