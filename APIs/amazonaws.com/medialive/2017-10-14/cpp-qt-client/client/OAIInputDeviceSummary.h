/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputDeviceSummary.h
 *
 * Details of the input device.
 */

#ifndef OAIInputDeviceSummary_H
#define OAIInputDeviceSummary_H

#include <QJsonObject>

#include "OAIDescribeInputDeviceResponse_HdDeviceSettings.h"
#include "OAIDescribeInputDeviceResponse_UhdDeviceSettings.h"
#include "OAIDeviceSettingsSyncState.h"
#include "OAIDeviceUpdateStatus.h"
#include "OAIInputDeviceConnectionState.h"
#include "OAIInputDeviceSummary_NetworkSettings.h"
#include "OAIInputDeviceType.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeInputDeviceResponse_HdDeviceSettings;
class OAIInputDeviceSummary_NetworkSettings;
class OAIDescribeInputDeviceResponse_UhdDeviceSettings;

class OAIInputDeviceSummary : public OAIObject {
public:
    OAIInputDeviceSummary();
    OAIInputDeviceSummary(QString json);
    ~OAIInputDeviceSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    OAIInputDeviceConnectionState getConnectionState() const;
    void setConnectionState(const OAIInputDeviceConnectionState &connection_state);
    bool is_connection_state_Set() const;
    bool is_connection_state_Valid() const;

    OAIDeviceSettingsSyncState getDeviceSettingsSyncState() const;
    void setDeviceSettingsSyncState(const OAIDeviceSettingsSyncState &device_settings_sync_state);
    bool is_device_settings_sync_state_Set() const;
    bool is_device_settings_sync_state_Valid() const;

    OAIDeviceUpdateStatus getDeviceUpdateStatus() const;
    void setDeviceUpdateStatus(const OAIDeviceUpdateStatus &device_update_status);
    bool is_device_update_status_Set() const;
    bool is_device_update_status_Valid() const;

    OAIDescribeInputDeviceResponse_HdDeviceSettings getHdDeviceSettings() const;
    void setHdDeviceSettings(const OAIDescribeInputDeviceResponse_HdDeviceSettings &hd_device_settings);
    bool is_hd_device_settings_Set() const;
    bool is_hd_device_settings_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMacAddress() const;
    void setMacAddress(const QString &mac_address);
    bool is_mac_address_Set() const;
    bool is_mac_address_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIInputDeviceSummary_NetworkSettings getNetworkSettings() const;
    void setNetworkSettings(const OAIInputDeviceSummary_NetworkSettings &network_settings);
    bool is_network_settings_Set() const;
    bool is_network_settings_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    OAIInputDeviceType getType() const;
    void setType(const OAIInputDeviceType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIDescribeInputDeviceResponse_UhdDeviceSettings getUhdDeviceSettings() const;
    void setUhdDeviceSettings(const OAIDescribeInputDeviceResponse_UhdDeviceSettings &uhd_device_settings);
    bool is_uhd_device_settings_Set() const;
    bool is_uhd_device_settings_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getAvailabilityZone() const;
    void setAvailabilityZone(const QString &availability_zone);
    bool is_availability_zone_Set() const;
    bool is_availability_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    OAIInputDeviceConnectionState m_connection_state;
    bool m_connection_state_isSet;
    bool m_connection_state_isValid;

    OAIDeviceSettingsSyncState m_device_settings_sync_state;
    bool m_device_settings_sync_state_isSet;
    bool m_device_settings_sync_state_isValid;

    OAIDeviceUpdateStatus m_device_update_status;
    bool m_device_update_status_isSet;
    bool m_device_update_status_isValid;

    OAIDescribeInputDeviceResponse_HdDeviceSettings m_hd_device_settings;
    bool m_hd_device_settings_isSet;
    bool m_hd_device_settings_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_mac_address;
    bool m_mac_address_isSet;
    bool m_mac_address_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIInputDeviceSummary_NetworkSettings m_network_settings;
    bool m_network_settings_isSet;
    bool m_network_settings_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    OAIInputDeviceType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIDescribeInputDeviceResponse_UhdDeviceSettings m_uhd_device_settings;
    bool m_uhd_device_settings_isSet;
    bool m_uhd_device_settings_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_availability_zone;
    bool m_availability_zone_isSet;
    bool m_availability_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputDeviceSummary)

#endif // OAIInputDeviceSummary_H
