/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHlsGroupSettings.h
 *
 * Hls Group Settings
 */

#ifndef OAIHlsGroupSettings_H
#define OAIHlsGroupSettings_H

#include <QJsonObject>

#include "OAIHlsCaptionLanguageSetting.h"
#include "OAIHlsClientCache.h"
#include "OAIHlsCodecSpecification.h"
#include "OAIHlsDirectoryStructure.h"
#include "OAIHlsDiscontinuityTags.h"
#include "OAIHlsEncryptionType.h"
#include "OAIHlsGroupSettings_Destination.h"
#include "OAIHlsGroupSettings_HlsCdnSettings.h"
#include "OAIHlsGroupSettings_KeyProviderSettings.h"
#include "OAIHlsId3SegmentTaggingState.h"
#include "OAIHlsIncompleteSegmentBehavior.h"
#include "OAIHlsIvInManifest.h"
#include "OAIHlsIvSource.h"
#include "OAIHlsManifestCompression.h"
#include "OAIHlsManifestDurationFormat.h"
#include "OAIHlsMode.h"
#include "OAIHlsOutputSelection.h"
#include "OAIHlsProgramDateTime.h"
#include "OAIHlsProgramDateTimeClock.h"
#include "OAIHlsRedundantManifest.h"
#include "OAIHlsSegmentationMode.h"
#include "OAIHlsStreamInfResolution.h"
#include "OAIHlsTimedMetadataId3Frame.h"
#include "OAIHlsTsFileMode.h"
#include "OAIIFrameOnlyPlaylistType.h"
#include "OAIInputLossActionForHlsOut.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHlsGroupSettings_Destination;
class OAIHlsGroupSettings_HlsCdnSettings;
class OAIHlsGroupSettings_KeyProviderSettings;

class OAIHlsGroupSettings : public OAIObject {
public:
    OAIHlsGroupSettings();
    OAIHlsGroupSettings(QString json);
    ~OAIHlsGroupSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAdMarkers() const;
    void setAdMarkers(const QList &ad_markers);
    bool is_ad_markers_Set() const;
    bool is_ad_markers_Valid() const;

    QString getBaseUrlContent() const;
    void setBaseUrlContent(const QString &base_url_content);
    bool is_base_url_content_Set() const;
    bool is_base_url_content_Valid() const;

    QString getBaseUrlContent1() const;
    void setBaseUrlContent1(const QString &base_url_content1);
    bool is_base_url_content1_Set() const;
    bool is_base_url_content1_Valid() const;

    QString getBaseUrlManifest() const;
    void setBaseUrlManifest(const QString &base_url_manifest);
    bool is_base_url_manifest_Set() const;
    bool is_base_url_manifest_Valid() const;

    QString getBaseUrlManifest1() const;
    void setBaseUrlManifest1(const QString &base_url_manifest1);
    bool is_base_url_manifest1_Set() const;
    bool is_base_url_manifest1_Valid() const;

    QList getCaptionLanguageMappings() const;
    void setCaptionLanguageMappings(const QList &caption_language_mappings);
    bool is_caption_language_mappings_Set() const;
    bool is_caption_language_mappings_Valid() const;

    OAIHlsCaptionLanguageSetting getCaptionLanguageSetting() const;
    void setCaptionLanguageSetting(const OAIHlsCaptionLanguageSetting &caption_language_setting);
    bool is_caption_language_setting_Set() const;
    bool is_caption_language_setting_Valid() const;

    OAIHlsClientCache getClientCache() const;
    void setClientCache(const OAIHlsClientCache &client_cache);
    bool is_client_cache_Set() const;
    bool is_client_cache_Valid() const;

    OAIHlsCodecSpecification getCodecSpecification() const;
    void setCodecSpecification(const OAIHlsCodecSpecification &codec_specification);
    bool is_codec_specification_Set() const;
    bool is_codec_specification_Valid() const;

    QString getConstantIv() const;
    void setConstantIv(const QString &constant_iv);
    bool is_constant_iv_Set() const;
    bool is_constant_iv_Valid() const;

    OAIHlsGroupSettings_Destination getDestination() const;
    void setDestination(const OAIHlsGroupSettings_Destination &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    OAIHlsDirectoryStructure getDirectoryStructure() const;
    void setDirectoryStructure(const OAIHlsDirectoryStructure &directory_structure);
    bool is_directory_structure_Set() const;
    bool is_directory_structure_Valid() const;

    OAIHlsDiscontinuityTags getDiscontinuityTags() const;
    void setDiscontinuityTags(const OAIHlsDiscontinuityTags &discontinuity_tags);
    bool is_discontinuity_tags_Set() const;
    bool is_discontinuity_tags_Valid() const;

    OAIHlsEncryptionType getEncryptionType() const;
    void setEncryptionType(const OAIHlsEncryptionType &encryption_type);
    bool is_encryption_type_Set() const;
    bool is_encryption_type_Valid() const;

    OAIHlsGroupSettings_HlsCdnSettings getHlsCdnSettings() const;
    void setHlsCdnSettings(const OAIHlsGroupSettings_HlsCdnSettings &hls_cdn_settings);
    bool is_hls_cdn_settings_Set() const;
    bool is_hls_cdn_settings_Valid() const;

    OAIHlsId3SegmentTaggingState getHlsId3SegmentTagging() const;
    void setHlsId3SegmentTagging(const OAIHlsId3SegmentTaggingState &hls_id3_segment_tagging);
    bool is_hls_id3_segment_tagging_Set() const;
    bool is_hls_id3_segment_tagging_Valid() const;

    OAIIFrameOnlyPlaylistType getIFrameOnlyPlaylists() const;
    void setIFrameOnlyPlaylists(const OAIIFrameOnlyPlaylistType &i_frame_only_playlists);
    bool is_i_frame_only_playlists_Set() const;
    bool is_i_frame_only_playlists_Valid() const;

    OAIHlsIncompleteSegmentBehavior getIncompleteSegmentBehavior() const;
    void setIncompleteSegmentBehavior(const OAIHlsIncompleteSegmentBehavior &incomplete_segment_behavior);
    bool is_incomplete_segment_behavior_Set() const;
    bool is_incomplete_segment_behavior_Valid() const;

    qint32 getIndexNSegments() const;
    void setIndexNSegments(const qint32 &index_n_segments);
    bool is_index_n_segments_Set() const;
    bool is_index_n_segments_Valid() const;

    OAIInputLossActionForHlsOut getInputLossAction() const;
    void setInputLossAction(const OAIInputLossActionForHlsOut &input_loss_action);
    bool is_input_loss_action_Set() const;
    bool is_input_loss_action_Valid() const;

    OAIHlsIvInManifest getIvInManifest() const;
    void setIvInManifest(const OAIHlsIvInManifest &iv_in_manifest);
    bool is_iv_in_manifest_Set() const;
    bool is_iv_in_manifest_Valid() const;

    OAIHlsIvSource getIvSource() const;
    void setIvSource(const OAIHlsIvSource &iv_source);
    bool is_iv_source_Set() const;
    bool is_iv_source_Valid() const;

    qint32 getKeepSegments() const;
    void setKeepSegments(const qint32 &keep_segments);
    bool is_keep_segments_Set() const;
    bool is_keep_segments_Valid() const;

    QString getKeyFormat() const;
    void setKeyFormat(const QString &key_format);
    bool is_key_format_Set() const;
    bool is_key_format_Valid() const;

    QString getKeyFormatVersions() const;
    void setKeyFormatVersions(const QString &key_format_versions);
    bool is_key_format_versions_Set() const;
    bool is_key_format_versions_Valid() const;

    OAIHlsGroupSettings_KeyProviderSettings getKeyProviderSettings() const;
    void setKeyProviderSettings(const OAIHlsGroupSettings_KeyProviderSettings &key_provider_settings);
    bool is_key_provider_settings_Set() const;
    bool is_key_provider_settings_Valid() const;

    OAIHlsManifestCompression getManifestCompression() const;
    void setManifestCompression(const OAIHlsManifestCompression &manifest_compression);
    bool is_manifest_compression_Set() const;
    bool is_manifest_compression_Valid() const;

    OAIHlsManifestDurationFormat getManifestDurationFormat() const;
    void setManifestDurationFormat(const OAIHlsManifestDurationFormat &manifest_duration_format);
    bool is_manifest_duration_format_Set() const;
    bool is_manifest_duration_format_Valid() const;

    qint32 getMinSegmentLength() const;
    void setMinSegmentLength(const qint32 &min_segment_length);
    bool is_min_segment_length_Set() const;
    bool is_min_segment_length_Valid() const;

    OAIHlsMode getMode() const;
    void setMode(const OAIHlsMode &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    OAIHlsOutputSelection getOutputSelection() const;
    void setOutputSelection(const OAIHlsOutputSelection &output_selection);
    bool is_output_selection_Set() const;
    bool is_output_selection_Valid() const;

    OAIHlsProgramDateTime getProgramDateTime() const;
    void setProgramDateTime(const OAIHlsProgramDateTime &program_date_time);
    bool is_program_date_time_Set() const;
    bool is_program_date_time_Valid() const;

    OAIHlsProgramDateTimeClock getProgramDateTimeClock() const;
    void setProgramDateTimeClock(const OAIHlsProgramDateTimeClock &program_date_time_clock);
    bool is_program_date_time_clock_Set() const;
    bool is_program_date_time_clock_Valid() const;

    qint32 getProgramDateTimePeriod() const;
    void setProgramDateTimePeriod(const qint32 &program_date_time_period);
    bool is_program_date_time_period_Set() const;
    bool is_program_date_time_period_Valid() const;

    OAIHlsRedundantManifest getRedundantManifest() const;
    void setRedundantManifest(const OAIHlsRedundantManifest &redundant_manifest);
    bool is_redundant_manifest_Set() const;
    bool is_redundant_manifest_Valid() const;

    qint32 getSegmentLength() const;
    void setSegmentLength(const qint32 &segment_length);
    bool is_segment_length_Set() const;
    bool is_segment_length_Valid() const;

    OAIHlsSegmentationMode getSegmentationMode() const;
    void setSegmentationMode(const OAIHlsSegmentationMode &segmentation_mode);
    bool is_segmentation_mode_Set() const;
    bool is_segmentation_mode_Valid() const;

    qint32 getSegmentsPerSubdirectory() const;
    void setSegmentsPerSubdirectory(const qint32 &segments_per_subdirectory);
    bool is_segments_per_subdirectory_Set() const;
    bool is_segments_per_subdirectory_Valid() const;

    OAIHlsStreamInfResolution getStreamInfResolution() const;
    void setStreamInfResolution(const OAIHlsStreamInfResolution &stream_inf_resolution);
    bool is_stream_inf_resolution_Set() const;
    bool is_stream_inf_resolution_Valid() const;

    OAIHlsTimedMetadataId3Frame getTimedMetadataId3Frame() const;
    void setTimedMetadataId3Frame(const OAIHlsTimedMetadataId3Frame &timed_metadata_id3_frame);
    bool is_timed_metadata_id3_frame_Set() const;
    bool is_timed_metadata_id3_frame_Valid() const;

    qint32 getTimedMetadataId3Period() const;
    void setTimedMetadataId3Period(const qint32 &timed_metadata_id3_period);
    bool is_timed_metadata_id3_period_Set() const;
    bool is_timed_metadata_id3_period_Valid() const;

    qint32 getTimestampDeltaMilliseconds() const;
    void setTimestampDeltaMilliseconds(const qint32 &timestamp_delta_milliseconds);
    bool is_timestamp_delta_milliseconds_Set() const;
    bool is_timestamp_delta_milliseconds_Valid() const;

    OAIHlsTsFileMode getTsFileMode() const;
    void setTsFileMode(const OAIHlsTsFileMode &ts_file_mode);
    bool is_ts_file_mode_Set() const;
    bool is_ts_file_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_ad_markers;
    bool m_ad_markers_isSet;
    bool m_ad_markers_isValid;

    QString m_base_url_content;
    bool m_base_url_content_isSet;
    bool m_base_url_content_isValid;

    QString m_base_url_content1;
    bool m_base_url_content1_isSet;
    bool m_base_url_content1_isValid;

    QString m_base_url_manifest;
    bool m_base_url_manifest_isSet;
    bool m_base_url_manifest_isValid;

    QString m_base_url_manifest1;
    bool m_base_url_manifest1_isSet;
    bool m_base_url_manifest1_isValid;

    QList m_caption_language_mappings;
    bool m_caption_language_mappings_isSet;
    bool m_caption_language_mappings_isValid;

    OAIHlsCaptionLanguageSetting m_caption_language_setting;
    bool m_caption_language_setting_isSet;
    bool m_caption_language_setting_isValid;

    OAIHlsClientCache m_client_cache;
    bool m_client_cache_isSet;
    bool m_client_cache_isValid;

    OAIHlsCodecSpecification m_codec_specification;
    bool m_codec_specification_isSet;
    bool m_codec_specification_isValid;

    QString m_constant_iv;
    bool m_constant_iv_isSet;
    bool m_constant_iv_isValid;

    OAIHlsGroupSettings_Destination m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    OAIHlsDirectoryStructure m_directory_structure;
    bool m_directory_structure_isSet;
    bool m_directory_structure_isValid;

    OAIHlsDiscontinuityTags m_discontinuity_tags;
    bool m_discontinuity_tags_isSet;
    bool m_discontinuity_tags_isValid;

    OAIHlsEncryptionType m_encryption_type;
    bool m_encryption_type_isSet;
    bool m_encryption_type_isValid;

    OAIHlsGroupSettings_HlsCdnSettings m_hls_cdn_settings;
    bool m_hls_cdn_settings_isSet;
    bool m_hls_cdn_settings_isValid;

    OAIHlsId3SegmentTaggingState m_hls_id3_segment_tagging;
    bool m_hls_id3_segment_tagging_isSet;
    bool m_hls_id3_segment_tagging_isValid;

    OAIIFrameOnlyPlaylistType m_i_frame_only_playlists;
    bool m_i_frame_only_playlists_isSet;
    bool m_i_frame_only_playlists_isValid;

    OAIHlsIncompleteSegmentBehavior m_incomplete_segment_behavior;
    bool m_incomplete_segment_behavior_isSet;
    bool m_incomplete_segment_behavior_isValid;

    qint32 m_index_n_segments;
    bool m_index_n_segments_isSet;
    bool m_index_n_segments_isValid;

    OAIInputLossActionForHlsOut m_input_loss_action;
    bool m_input_loss_action_isSet;
    bool m_input_loss_action_isValid;

    OAIHlsIvInManifest m_iv_in_manifest;
    bool m_iv_in_manifest_isSet;
    bool m_iv_in_manifest_isValid;

    OAIHlsIvSource m_iv_source;
    bool m_iv_source_isSet;
    bool m_iv_source_isValid;

    qint32 m_keep_segments;
    bool m_keep_segments_isSet;
    bool m_keep_segments_isValid;

    QString m_key_format;
    bool m_key_format_isSet;
    bool m_key_format_isValid;

    QString m_key_format_versions;
    bool m_key_format_versions_isSet;
    bool m_key_format_versions_isValid;

    OAIHlsGroupSettings_KeyProviderSettings m_key_provider_settings;
    bool m_key_provider_settings_isSet;
    bool m_key_provider_settings_isValid;

    OAIHlsManifestCompression m_manifest_compression;
    bool m_manifest_compression_isSet;
    bool m_manifest_compression_isValid;

    OAIHlsManifestDurationFormat m_manifest_duration_format;
    bool m_manifest_duration_format_isSet;
    bool m_manifest_duration_format_isValid;

    qint32 m_min_segment_length;
    bool m_min_segment_length_isSet;
    bool m_min_segment_length_isValid;

    OAIHlsMode m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    OAIHlsOutputSelection m_output_selection;
    bool m_output_selection_isSet;
    bool m_output_selection_isValid;

    OAIHlsProgramDateTime m_program_date_time;
    bool m_program_date_time_isSet;
    bool m_program_date_time_isValid;

    OAIHlsProgramDateTimeClock m_program_date_time_clock;
    bool m_program_date_time_clock_isSet;
    bool m_program_date_time_clock_isValid;

    qint32 m_program_date_time_period;
    bool m_program_date_time_period_isSet;
    bool m_program_date_time_period_isValid;

    OAIHlsRedundantManifest m_redundant_manifest;
    bool m_redundant_manifest_isSet;
    bool m_redundant_manifest_isValid;

    qint32 m_segment_length;
    bool m_segment_length_isSet;
    bool m_segment_length_isValid;

    OAIHlsSegmentationMode m_segmentation_mode;
    bool m_segmentation_mode_isSet;
    bool m_segmentation_mode_isValid;

    qint32 m_segments_per_subdirectory;
    bool m_segments_per_subdirectory_isSet;
    bool m_segments_per_subdirectory_isValid;

    OAIHlsStreamInfResolution m_stream_inf_resolution;
    bool m_stream_inf_resolution_isSet;
    bool m_stream_inf_resolution_isValid;

    OAIHlsTimedMetadataId3Frame m_timed_metadata_id3_frame;
    bool m_timed_metadata_id3_frame_isSet;
    bool m_timed_metadata_id3_frame_isValid;

    qint32 m_timed_metadata_id3_period;
    bool m_timed_metadata_id3_period_isSet;
    bool m_timed_metadata_id3_period_isValid;

    qint32 m_timestamp_delta_milliseconds;
    bool m_timestamp_delta_milliseconds_isSet;
    bool m_timestamp_delta_milliseconds_isValid;

    OAIHlsTsFileMode m_ts_file_mode;
    bool m_ts_file_mode_isSet;
    bool m_ts_file_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHlsGroupSettings)

#endif // OAIHlsGroupSettings_H
