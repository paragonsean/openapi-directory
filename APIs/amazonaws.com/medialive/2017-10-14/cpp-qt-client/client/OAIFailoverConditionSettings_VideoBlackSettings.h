/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFailoverConditionSettings_VideoBlackSettings.h
 *
 * 
 */

#ifndef OAIFailoverConditionSettings_VideoBlackSettings_H
#define OAIFailoverConditionSettings_VideoBlackSettings_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFailoverConditionSettings_VideoBlackSettings : public OAIObject {
public:
    OAIFailoverConditionSettings_VideoBlackSettings();
    OAIFailoverConditionSettings_VideoBlackSettings(QString json);
    ~OAIFailoverConditionSettings_VideoBlackSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBlackDetectThreshold() const;
    void setBlackDetectThreshold(const double &black_detect_threshold);
    bool is_black_detect_threshold_Set() const;
    bool is_black_detect_threshold_Valid() const;

    qint32 getVideoBlackThresholdMsec() const;
    void setVideoBlackThresholdMsec(const qint32 &video_black_threshold_msec);
    bool is_video_black_threshold_msec_Set() const;
    bool is_video_black_threshold_msec_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_black_detect_threshold;
    bool m_black_detect_threshold_isSet;
    bool m_black_detect_threshold_isValid;

    qint32 m_video_black_threshold_msec;
    bool m_video_black_threshold_msec_isSet;
    bool m_video_black_threshold_msec_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFailoverConditionSettings_VideoBlackSettings)

#endif // OAIFailoverConditionSettings_VideoBlackSettings_H
