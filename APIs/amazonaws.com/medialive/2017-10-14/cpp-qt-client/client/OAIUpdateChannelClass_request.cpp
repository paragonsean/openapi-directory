/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateChannelClass_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateChannelClass_request::OAIUpdateChannelClass_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateChannelClass_request::OAIUpdateChannelClass_request() {
    this->initializeModel();
}

OAIUpdateChannelClass_request::~OAIUpdateChannelClass_request() {}

void OAIUpdateChannelClass_request::initializeModel() {

    m_channel_class_isSet = false;
    m_channel_class_isValid = false;

    m_destinations_isSet = false;
    m_destinations_isValid = false;
}

void OAIUpdateChannelClass_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateChannelClass_request::fromJsonObject(QJsonObject json) {

    m_channel_class_isValid = ::OpenAPI::fromJsonValue(m_channel_class, json[QString("channelClass")]);
    m_channel_class_isSet = !json[QString("channelClass")].isNull() && m_channel_class_isValid;

    m_destinations_isValid = ::OpenAPI::fromJsonValue(m_destinations, json[QString("destinations")]);
    m_destinations_isSet = !json[QString("destinations")].isNull() && m_destinations_isValid;
}

QString OAIUpdateChannelClass_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateChannelClass_request::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_class_isSet) {
        obj.insert(QString("channelClass"), ::OpenAPI::toJsonValue(m_channel_class));
    }
    if (m_destinations.size() > 0) {
        obj.insert(QString("destinations"), ::OpenAPI::toJsonValue(m_destinations));
    }
    return obj;
}

QString OAIUpdateChannelClass_request::getChannelClass() const {
    return m_channel_class;
}
void OAIUpdateChannelClass_request::setChannelClass(const QString &channel_class) {
    m_channel_class = channel_class;
    m_channel_class_isSet = true;
}

bool OAIUpdateChannelClass_request::is_channel_class_Set() const{
    return m_channel_class_isSet;
}

bool OAIUpdateChannelClass_request::is_channel_class_Valid() const{
    return m_channel_class_isValid;
}

QList<OAIOutputDestination> OAIUpdateChannelClass_request::getDestinations() const {
    return m_destinations;
}
void OAIUpdateChannelClass_request::setDestinations(const QList<OAIOutputDestination> &destinations) {
    m_destinations = destinations;
    m_destinations_isSet = true;
}

bool OAIUpdateChannelClass_request::is_destinations_Set() const{
    return m_destinations_isSet;
}

bool OAIUpdateChannelClass_request::is_destinations_Valid() const{
    return m_destinations_isValid;
}

bool OAIUpdateChannelClass_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destinations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateChannelClass_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_channel_class_isValid && true;
}

} // namespace OpenAPI
