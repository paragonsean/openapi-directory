/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICaptionDescription_DestinationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICaptionDescription_DestinationSettings::OAICaptionDescription_DestinationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICaptionDescription_DestinationSettings::OAICaptionDescription_DestinationSettings() {
    this->initializeModel();
}

OAICaptionDescription_DestinationSettings::~OAICaptionDescription_DestinationSettings() {}

void OAICaptionDescription_DestinationSettings::initializeModel() {

    m_arib_destination_settings_isSet = false;
    m_arib_destination_settings_isValid = false;

    m_burn_in_destination_settings_isSet = false;
    m_burn_in_destination_settings_isValid = false;

    m_dvb_sub_destination_settings_isSet = false;
    m_dvb_sub_destination_settings_isValid = false;

    m_ebu_tt_d_destination_settings_isSet = false;
    m_ebu_tt_d_destination_settings_isValid = false;

    m_embedded_destination_settings_isSet = false;
    m_embedded_destination_settings_isValid = false;

    m_embedded_plus_scte20_destination_settings_isSet = false;
    m_embedded_plus_scte20_destination_settings_isValid = false;

    m_rtmp_caption_info_destination_settings_isSet = false;
    m_rtmp_caption_info_destination_settings_isValid = false;

    m_scte20_plus_embedded_destination_settings_isSet = false;
    m_scte20_plus_embedded_destination_settings_isValid = false;

    m_scte27_destination_settings_isSet = false;
    m_scte27_destination_settings_isValid = false;

    m_smpte_tt_destination_settings_isSet = false;
    m_smpte_tt_destination_settings_isValid = false;

    m_teletext_destination_settings_isSet = false;
    m_teletext_destination_settings_isValid = false;

    m_ttml_destination_settings_isSet = false;
    m_ttml_destination_settings_isValid = false;

    m_webvtt_destination_settings_isSet = false;
    m_webvtt_destination_settings_isValid = false;
}

void OAICaptionDescription_DestinationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICaptionDescription_DestinationSettings::fromJsonObject(QJsonObject json) {

    m_arib_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_arib_destination_settings, json[QString("AribDestinationSettings")]);
    m_arib_destination_settings_isSet = !json[QString("AribDestinationSettings")].isNull() && m_arib_destination_settings_isValid;

    m_burn_in_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_burn_in_destination_settings, json[QString("BurnInDestinationSettings")]);
    m_burn_in_destination_settings_isSet = !json[QString("BurnInDestinationSettings")].isNull() && m_burn_in_destination_settings_isValid;

    m_dvb_sub_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_dvb_sub_destination_settings, json[QString("DvbSubDestinationSettings")]);
    m_dvb_sub_destination_settings_isSet = !json[QString("DvbSubDestinationSettings")].isNull() && m_dvb_sub_destination_settings_isValid;

    m_ebu_tt_d_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_ebu_tt_d_destination_settings, json[QString("EbuTtDDestinationSettings")]);
    m_ebu_tt_d_destination_settings_isSet = !json[QString("EbuTtDDestinationSettings")].isNull() && m_ebu_tt_d_destination_settings_isValid;

    m_embedded_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_embedded_destination_settings, json[QString("EmbeddedDestinationSettings")]);
    m_embedded_destination_settings_isSet = !json[QString("EmbeddedDestinationSettings")].isNull() && m_embedded_destination_settings_isValid;

    m_embedded_plus_scte20_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_embedded_plus_scte20_destination_settings, json[QString("EmbeddedPlusScte20DestinationSettings")]);
    m_embedded_plus_scte20_destination_settings_isSet = !json[QString("EmbeddedPlusScte20DestinationSettings")].isNull() && m_embedded_plus_scte20_destination_settings_isValid;

    m_rtmp_caption_info_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_rtmp_caption_info_destination_settings, json[QString("RtmpCaptionInfoDestinationSettings")]);
    m_rtmp_caption_info_destination_settings_isSet = !json[QString("RtmpCaptionInfoDestinationSettings")].isNull() && m_rtmp_caption_info_destination_settings_isValid;

    m_scte20_plus_embedded_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_scte20_plus_embedded_destination_settings, json[QString("Scte20PlusEmbeddedDestinationSettings")]);
    m_scte20_plus_embedded_destination_settings_isSet = !json[QString("Scte20PlusEmbeddedDestinationSettings")].isNull() && m_scte20_plus_embedded_destination_settings_isValid;

    m_scte27_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_scte27_destination_settings, json[QString("Scte27DestinationSettings")]);
    m_scte27_destination_settings_isSet = !json[QString("Scte27DestinationSettings")].isNull() && m_scte27_destination_settings_isValid;

    m_smpte_tt_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_smpte_tt_destination_settings, json[QString("SmpteTtDestinationSettings")]);
    m_smpte_tt_destination_settings_isSet = !json[QString("SmpteTtDestinationSettings")].isNull() && m_smpte_tt_destination_settings_isValid;

    m_teletext_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_teletext_destination_settings, json[QString("TeletextDestinationSettings")]);
    m_teletext_destination_settings_isSet = !json[QString("TeletextDestinationSettings")].isNull() && m_teletext_destination_settings_isValid;

    m_ttml_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_ttml_destination_settings, json[QString("TtmlDestinationSettings")]);
    m_ttml_destination_settings_isSet = !json[QString("TtmlDestinationSettings")].isNull() && m_ttml_destination_settings_isValid;

    m_webvtt_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_webvtt_destination_settings, json[QString("WebvttDestinationSettings")]);
    m_webvtt_destination_settings_isSet = !json[QString("WebvttDestinationSettings")].isNull() && m_webvtt_destination_settings_isValid;
}

QString OAICaptionDescription_DestinationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICaptionDescription_DestinationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_arib_destination_settings.isSet()) {
        obj.insert(QString("AribDestinationSettings"), ::OpenAPI::toJsonValue(m_arib_destination_settings));
    }
    if (m_burn_in_destination_settings.isSet()) {
        obj.insert(QString("BurnInDestinationSettings"), ::OpenAPI::toJsonValue(m_burn_in_destination_settings));
    }
    if (m_dvb_sub_destination_settings.isSet()) {
        obj.insert(QString("DvbSubDestinationSettings"), ::OpenAPI::toJsonValue(m_dvb_sub_destination_settings));
    }
    if (m_ebu_tt_d_destination_settings.isSet()) {
        obj.insert(QString("EbuTtDDestinationSettings"), ::OpenAPI::toJsonValue(m_ebu_tt_d_destination_settings));
    }
    if (m_embedded_destination_settings.isSet()) {
        obj.insert(QString("EmbeddedDestinationSettings"), ::OpenAPI::toJsonValue(m_embedded_destination_settings));
    }
    if (m_embedded_plus_scte20_destination_settings.isSet()) {
        obj.insert(QString("EmbeddedPlusScte20DestinationSettings"), ::OpenAPI::toJsonValue(m_embedded_plus_scte20_destination_settings));
    }
    if (m_rtmp_caption_info_destination_settings.isSet()) {
        obj.insert(QString("RtmpCaptionInfoDestinationSettings"), ::OpenAPI::toJsonValue(m_rtmp_caption_info_destination_settings));
    }
    if (m_scte20_plus_embedded_destination_settings.isSet()) {
        obj.insert(QString("Scte20PlusEmbeddedDestinationSettings"), ::OpenAPI::toJsonValue(m_scte20_plus_embedded_destination_settings));
    }
    if (m_scte27_destination_settings.isSet()) {
        obj.insert(QString("Scte27DestinationSettings"), ::OpenAPI::toJsonValue(m_scte27_destination_settings));
    }
    if (m_smpte_tt_destination_settings.isSet()) {
        obj.insert(QString("SmpteTtDestinationSettings"), ::OpenAPI::toJsonValue(m_smpte_tt_destination_settings));
    }
    if (m_teletext_destination_settings.isSet()) {
        obj.insert(QString("TeletextDestinationSettings"), ::OpenAPI::toJsonValue(m_teletext_destination_settings));
    }
    if (m_ttml_destination_settings.isSet()) {
        obj.insert(QString("TtmlDestinationSettings"), ::OpenAPI::toJsonValue(m_ttml_destination_settings));
    }
    if (m_webvtt_destination_settings.isSet()) {
        obj.insert(QString("WebvttDestinationSettings"), ::OpenAPI::toJsonValue(m_webvtt_destination_settings));
    }
    return obj;
}

OAIObject OAICaptionDescription_DestinationSettings::getAribDestinationSettings() const {
    return m_arib_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setAribDestinationSettings(const OAIObject &arib_destination_settings) {
    m_arib_destination_settings = arib_destination_settings;
    m_arib_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_arib_destination_settings_Set() const{
    return m_arib_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_arib_destination_settings_Valid() const{
    return m_arib_destination_settings_isValid;
}

OAICaptionDestinationSettings_BurnInDestinationSettings OAICaptionDescription_DestinationSettings::getBurnInDestinationSettings() const {
    return m_burn_in_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setBurnInDestinationSettings(const OAICaptionDestinationSettings_BurnInDestinationSettings &burn_in_destination_settings) {
    m_burn_in_destination_settings = burn_in_destination_settings;
    m_burn_in_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_burn_in_destination_settings_Set() const{
    return m_burn_in_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_burn_in_destination_settings_Valid() const{
    return m_burn_in_destination_settings_isValid;
}

OAICaptionDestinationSettings_DvbSubDestinationSettings OAICaptionDescription_DestinationSettings::getDvbSubDestinationSettings() const {
    return m_dvb_sub_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setDvbSubDestinationSettings(const OAICaptionDestinationSettings_DvbSubDestinationSettings &dvb_sub_destination_settings) {
    m_dvb_sub_destination_settings = dvb_sub_destination_settings;
    m_dvb_sub_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_dvb_sub_destination_settings_Set() const{
    return m_dvb_sub_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_dvb_sub_destination_settings_Valid() const{
    return m_dvb_sub_destination_settings_isValid;
}

OAICaptionDestinationSettings_EbuTtDDestinationSettings OAICaptionDescription_DestinationSettings::getEbuTtDDestinationSettings() const {
    return m_ebu_tt_d_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setEbuTtDDestinationSettings(const OAICaptionDestinationSettings_EbuTtDDestinationSettings &ebu_tt_d_destination_settings) {
    m_ebu_tt_d_destination_settings = ebu_tt_d_destination_settings;
    m_ebu_tt_d_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_ebu_tt_d_destination_settings_Set() const{
    return m_ebu_tt_d_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_ebu_tt_d_destination_settings_Valid() const{
    return m_ebu_tt_d_destination_settings_isValid;
}

OAIObject OAICaptionDescription_DestinationSettings::getEmbeddedDestinationSettings() const {
    return m_embedded_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setEmbeddedDestinationSettings(const OAIObject &embedded_destination_settings) {
    m_embedded_destination_settings = embedded_destination_settings;
    m_embedded_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_embedded_destination_settings_Set() const{
    return m_embedded_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_embedded_destination_settings_Valid() const{
    return m_embedded_destination_settings_isValid;
}

OAIObject OAICaptionDescription_DestinationSettings::getEmbeddedPlusScte20DestinationSettings() const {
    return m_embedded_plus_scte20_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setEmbeddedPlusScte20DestinationSettings(const OAIObject &embedded_plus_scte20_destination_settings) {
    m_embedded_plus_scte20_destination_settings = embedded_plus_scte20_destination_settings;
    m_embedded_plus_scte20_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_embedded_plus_scte20_destination_settings_Set() const{
    return m_embedded_plus_scte20_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_embedded_plus_scte20_destination_settings_Valid() const{
    return m_embedded_plus_scte20_destination_settings_isValid;
}

OAIObject OAICaptionDescription_DestinationSettings::getRtmpCaptionInfoDestinationSettings() const {
    return m_rtmp_caption_info_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setRtmpCaptionInfoDestinationSettings(const OAIObject &rtmp_caption_info_destination_settings) {
    m_rtmp_caption_info_destination_settings = rtmp_caption_info_destination_settings;
    m_rtmp_caption_info_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_rtmp_caption_info_destination_settings_Set() const{
    return m_rtmp_caption_info_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_rtmp_caption_info_destination_settings_Valid() const{
    return m_rtmp_caption_info_destination_settings_isValid;
}

OAIObject OAICaptionDescription_DestinationSettings::getScte20PlusEmbeddedDestinationSettings() const {
    return m_scte20_plus_embedded_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setScte20PlusEmbeddedDestinationSettings(const OAIObject &scte20_plus_embedded_destination_settings) {
    m_scte20_plus_embedded_destination_settings = scte20_plus_embedded_destination_settings;
    m_scte20_plus_embedded_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_scte20_plus_embedded_destination_settings_Set() const{
    return m_scte20_plus_embedded_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_scte20_plus_embedded_destination_settings_Valid() const{
    return m_scte20_plus_embedded_destination_settings_isValid;
}

OAIObject OAICaptionDescription_DestinationSettings::getScte27DestinationSettings() const {
    return m_scte27_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setScte27DestinationSettings(const OAIObject &scte27_destination_settings) {
    m_scte27_destination_settings = scte27_destination_settings;
    m_scte27_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_scte27_destination_settings_Set() const{
    return m_scte27_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_scte27_destination_settings_Valid() const{
    return m_scte27_destination_settings_isValid;
}

OAIObject OAICaptionDescription_DestinationSettings::getSmpteTtDestinationSettings() const {
    return m_smpte_tt_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setSmpteTtDestinationSettings(const OAIObject &smpte_tt_destination_settings) {
    m_smpte_tt_destination_settings = smpte_tt_destination_settings;
    m_smpte_tt_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_smpte_tt_destination_settings_Set() const{
    return m_smpte_tt_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_smpte_tt_destination_settings_Valid() const{
    return m_smpte_tt_destination_settings_isValid;
}

OAIObject OAICaptionDescription_DestinationSettings::getTeletextDestinationSettings() const {
    return m_teletext_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setTeletextDestinationSettings(const OAIObject &teletext_destination_settings) {
    m_teletext_destination_settings = teletext_destination_settings;
    m_teletext_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_teletext_destination_settings_Set() const{
    return m_teletext_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_teletext_destination_settings_Valid() const{
    return m_teletext_destination_settings_isValid;
}

OAICaptionDestinationSettings_TtmlDestinationSettings OAICaptionDescription_DestinationSettings::getTtmlDestinationSettings() const {
    return m_ttml_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setTtmlDestinationSettings(const OAICaptionDestinationSettings_TtmlDestinationSettings &ttml_destination_settings) {
    m_ttml_destination_settings = ttml_destination_settings;
    m_ttml_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_ttml_destination_settings_Set() const{
    return m_ttml_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_ttml_destination_settings_Valid() const{
    return m_ttml_destination_settings_isValid;
}

OAICaptionDestinationSettings_WebvttDestinationSettings OAICaptionDescription_DestinationSettings::getWebvttDestinationSettings() const {
    return m_webvtt_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setWebvttDestinationSettings(const OAICaptionDestinationSettings_WebvttDestinationSettings &webvtt_destination_settings) {
    m_webvtt_destination_settings = webvtt_destination_settings;
    m_webvtt_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_webvtt_destination_settings_Set() const{
    return m_webvtt_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_webvtt_destination_settings_Valid() const{
    return m_webvtt_destination_settings_isValid;
}

bool OAICaptionDescription_DestinationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arib_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_burn_in_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dvb_sub_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ebu_tt_d_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_embedded_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_embedded_plus_scte20_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rtmp_caption_info_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scte20_plus_embedded_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scte27_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_smpte_tt_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_teletext_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ttml_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_webvtt_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICaptionDescription_DestinationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
