/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVpcOutputSettingsDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVpcOutputSettingsDescription::OAIVpcOutputSettingsDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVpcOutputSettingsDescription::OAIVpcOutputSettingsDescription() {
    this->initializeModel();
}

OAIVpcOutputSettingsDescription::~OAIVpcOutputSettingsDescription() {}

void OAIVpcOutputSettingsDescription::initializeModel() {

    m_availability_zones_isSet = false;
    m_availability_zones_isValid = false;

    m_network_interface_ids_isSet = false;
    m_network_interface_ids_isValid = false;

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;

    m_subnet_ids_isSet = false;
    m_subnet_ids_isValid = false;
}

void OAIVpcOutputSettingsDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVpcOutputSettingsDescription::fromJsonObject(QJsonObject json) {

    m_availability_zones_isValid = ::OpenAPI::fromJsonValue(m_availability_zones, json[QString("AvailabilityZones")]);
    m_availability_zones_isSet = !json[QString("AvailabilityZones")].isNull() && m_availability_zones_isValid;

    m_network_interface_ids_isValid = ::OpenAPI::fromJsonValue(m_network_interface_ids, json[QString("NetworkInterfaceIds")]);
    m_network_interface_ids_isSet = !json[QString("NetworkInterfaceIds")].isNull() && m_network_interface_ids_isValid;

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("SecurityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("SecurityGroupIds")].isNull() && m_security_group_ids_isValid;

    m_subnet_ids_isValid = ::OpenAPI::fromJsonValue(m_subnet_ids, json[QString("SubnetIds")]);
    m_subnet_ids_isSet = !json[QString("SubnetIds")].isNull() && m_subnet_ids_isValid;
}

QString OAIVpcOutputSettingsDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVpcOutputSettingsDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_zones.isSet()) {
        obj.insert(QString("AvailabilityZones"), ::OpenAPI::toJsonValue(m_availability_zones));
    }
    if (m_network_interface_ids.isSet()) {
        obj.insert(QString("NetworkInterfaceIds"), ::OpenAPI::toJsonValue(m_network_interface_ids));
    }
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("SecurityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    if (m_subnet_ids.isSet()) {
        obj.insert(QString("SubnetIds"), ::OpenAPI::toJsonValue(m_subnet_ids));
    }
    return obj;
}

QList OAIVpcOutputSettingsDescription::getAvailabilityZones() const {
    return m_availability_zones;
}
void OAIVpcOutputSettingsDescription::setAvailabilityZones(const QList &availability_zones) {
    m_availability_zones = availability_zones;
    m_availability_zones_isSet = true;
}

bool OAIVpcOutputSettingsDescription::is_availability_zones_Set() const{
    return m_availability_zones_isSet;
}

bool OAIVpcOutputSettingsDescription::is_availability_zones_Valid() const{
    return m_availability_zones_isValid;
}

QList OAIVpcOutputSettingsDescription::getNetworkInterfaceIds() const {
    return m_network_interface_ids;
}
void OAIVpcOutputSettingsDescription::setNetworkInterfaceIds(const QList &network_interface_ids) {
    m_network_interface_ids = network_interface_ids;
    m_network_interface_ids_isSet = true;
}

bool OAIVpcOutputSettingsDescription::is_network_interface_ids_Set() const{
    return m_network_interface_ids_isSet;
}

bool OAIVpcOutputSettingsDescription::is_network_interface_ids_Valid() const{
    return m_network_interface_ids_isValid;
}

QList OAIVpcOutputSettingsDescription::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAIVpcOutputSettingsDescription::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAIVpcOutputSettingsDescription::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAIVpcOutputSettingsDescription::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

QList OAIVpcOutputSettingsDescription::getSubnetIds() const {
    return m_subnet_ids;
}
void OAIVpcOutputSettingsDescription::setSubnetIds(const QList &subnet_ids) {
    m_subnet_ids = subnet_ids;
    m_subnet_ids_isSet = true;
}

bool OAIVpcOutputSettingsDescription::is_subnet_ids_Set() const{
    return m_subnet_ids_isSet;
}

bool OAIVpcOutputSettingsDescription::is_subnet_ids_Valid() const{
    return m_subnet_ids_isValid;
}

bool OAIVpcOutputSettingsDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_zones.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_interface_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVpcOutputSettingsDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
