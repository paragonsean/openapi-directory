/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScte27OcrLanguage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScte27OcrLanguage::OAIScte27OcrLanguage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScte27OcrLanguage::OAIScte27OcrLanguage() {
    this->initializeModel();
}

OAIScte27OcrLanguage::~OAIScte27OcrLanguage() {}

void OAIScte27OcrLanguage::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIScte27OcrLanguage::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIScte27OcrLanguage::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DEU", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScte27OcrLanguage::DEU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ENG", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScte27OcrLanguage::ENG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FRA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScte27OcrLanguage::FRA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NLD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScte27OcrLanguage::NLD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("POR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScte27OcrLanguage::POR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SPA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScte27OcrLanguage::SPA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIScte27OcrLanguage::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIScte27OcrLanguage::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIScte27OcrLanguage::DEU:
            val = "DEU";
            break;
        case eOAIScte27OcrLanguage::ENG:
            val = "ENG";
            break;
        case eOAIScte27OcrLanguage::FRA:
            val = "FRA";
            break;
        case eOAIScte27OcrLanguage::NLD:
            val = "NLD";
            break;
        case eOAIScte27OcrLanguage::POR:
            val = "POR";
            break;
        case eOAIScte27OcrLanguage::SPA:
            val = "SPA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIScte27OcrLanguage::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIScte27OcrLanguage::eOAIScte27OcrLanguage OAIScte27OcrLanguage::getValue() const {
    return m_value;
}

void OAIScte27OcrLanguage::setValue(const OAIScte27OcrLanguage::eOAIScte27OcrLanguage& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIScte27OcrLanguage::isSet() const {
    
    return m_value_isSet;
}

bool OAIScte27OcrLanguage::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
