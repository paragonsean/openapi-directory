/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScheduleAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScheduleAction::OAIScheduleAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScheduleAction::OAIScheduleAction() {
    this->initializeModel();
}

OAIScheduleAction::~OAIScheduleAction() {}

void OAIScheduleAction::initializeModel() {

    m_action_name_isSet = false;
    m_action_name_isValid = false;

    m_schedule_action_settings_isSet = false;
    m_schedule_action_settings_isValid = false;

    m_schedule_action_start_settings_isSet = false;
    m_schedule_action_start_settings_isValid = false;
}

void OAIScheduleAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScheduleAction::fromJsonObject(QJsonObject json) {

    m_action_name_isValid = ::OpenAPI::fromJsonValue(m_action_name, json[QString("ActionName")]);
    m_action_name_isSet = !json[QString("ActionName")].isNull() && m_action_name_isValid;

    m_schedule_action_settings_isValid = ::OpenAPI::fromJsonValue(m_schedule_action_settings, json[QString("ScheduleActionSettings")]);
    m_schedule_action_settings_isSet = !json[QString("ScheduleActionSettings")].isNull() && m_schedule_action_settings_isValid;

    m_schedule_action_start_settings_isValid = ::OpenAPI::fromJsonValue(m_schedule_action_start_settings, json[QString("ScheduleActionStartSettings")]);
    m_schedule_action_start_settings_isSet = !json[QString("ScheduleActionStartSettings")].isNull() && m_schedule_action_start_settings_isValid;
}

QString OAIScheduleAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScheduleAction::asJsonObject() const {
    QJsonObject obj;
    if (m_action_name_isSet) {
        obj.insert(QString("ActionName"), ::OpenAPI::toJsonValue(m_action_name));
    }
    if (m_schedule_action_settings.isSet()) {
        obj.insert(QString("ScheduleActionSettings"), ::OpenAPI::toJsonValue(m_schedule_action_settings));
    }
    if (m_schedule_action_start_settings.isSet()) {
        obj.insert(QString("ScheduleActionStartSettings"), ::OpenAPI::toJsonValue(m_schedule_action_start_settings));
    }
    return obj;
}

QString OAIScheduleAction::getActionName() const {
    return m_action_name;
}
void OAIScheduleAction::setActionName(const QString &action_name) {
    m_action_name = action_name;
    m_action_name_isSet = true;
}

bool OAIScheduleAction::is_action_name_Set() const{
    return m_action_name_isSet;
}

bool OAIScheduleAction::is_action_name_Valid() const{
    return m_action_name_isValid;
}

OAIScheduleAction_ScheduleActionSettings OAIScheduleAction::getScheduleActionSettings() const {
    return m_schedule_action_settings;
}
void OAIScheduleAction::setScheduleActionSettings(const OAIScheduleAction_ScheduleActionSettings &schedule_action_settings) {
    m_schedule_action_settings = schedule_action_settings;
    m_schedule_action_settings_isSet = true;
}

bool OAIScheduleAction::is_schedule_action_settings_Set() const{
    return m_schedule_action_settings_isSet;
}

bool OAIScheduleAction::is_schedule_action_settings_Valid() const{
    return m_schedule_action_settings_isValid;
}

OAIScheduleAction_ScheduleActionStartSettings OAIScheduleAction::getScheduleActionStartSettings() const {
    return m_schedule_action_start_settings;
}
void OAIScheduleAction::setScheduleActionStartSettings(const OAIScheduleAction_ScheduleActionStartSettings &schedule_action_start_settings) {
    m_schedule_action_start_settings = schedule_action_start_settings;
    m_schedule_action_start_settings_isSet = true;
}

bool OAIScheduleAction::is_schedule_action_start_settings_Set() const{
    return m_schedule_action_start_settings_isSet;
}

bool OAIScheduleAction::is_schedule_action_start_settings_Valid() const{
    return m_schedule_action_start_settings_isValid;
}

bool OAIScheduleAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_action_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_action_start_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScheduleAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_name_isValid && m_schedule_action_settings_isValid && m_schedule_action_start_settings_isValid && true;
}

} // namespace OpenAPI
