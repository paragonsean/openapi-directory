/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateInputSecurityGroupRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateInputSecurityGroupRequest::OAICreateInputSecurityGroupRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateInputSecurityGroupRequest::OAICreateInputSecurityGroupRequest() {
    this->initializeModel();
}

OAICreateInputSecurityGroupRequest::~OAICreateInputSecurityGroupRequest() {}

void OAICreateInputSecurityGroupRequest::initializeModel() {

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_whitelist_rules_isSet = false;
    m_whitelist_rules_isValid = false;
}

void OAICreateInputSecurityGroupRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateInputSecurityGroupRequest::fromJsonObject(QJsonObject json) {

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_whitelist_rules_isValid = ::OpenAPI::fromJsonValue(m_whitelist_rules, json[QString("WhitelistRules")]);
    m_whitelist_rules_isSet = !json[QString("WhitelistRules")].isNull() && m_whitelist_rules_isValid;
}

QString OAICreateInputSecurityGroupRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateInputSecurityGroupRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_whitelist_rules.isSet()) {
        obj.insert(QString("WhitelistRules"), ::OpenAPI::toJsonValue(m_whitelist_rules));
    }
    return obj;
}

QMap OAICreateInputSecurityGroupRequest::getTags() const {
    return m_tags;
}
void OAICreateInputSecurityGroupRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateInputSecurityGroupRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateInputSecurityGroupRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

QList OAICreateInputSecurityGroupRequest::getWhitelistRules() const {
    return m_whitelist_rules;
}
void OAICreateInputSecurityGroupRequest::setWhitelistRules(const QList &whitelist_rules) {
    m_whitelist_rules = whitelist_rules;
    m_whitelist_rules_isSet = true;
}

bool OAICreateInputSecurityGroupRequest::is_whitelist_rules_Set() const{
    return m_whitelist_rules_isSet;
}

bool OAICreateInputSecurityGroupRequest::is_whitelist_rules_Valid() const{
    return m_whitelist_rules_isValid;
}

bool OAICreateInputSecurityGroupRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_whitelist_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateInputSecurityGroupRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
