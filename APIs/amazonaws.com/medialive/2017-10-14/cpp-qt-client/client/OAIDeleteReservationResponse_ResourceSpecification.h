/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteReservationResponse_ResourceSpecification.h
 *
 * 
 */

#ifndef OAIDeleteReservationResponse_ResourceSpecification_H
#define OAIDeleteReservationResponse_ResourceSpecification_H

#include <QJsonObject>

#include "OAIChannelClass.h"
#include "OAIReservationCodec.h"
#include "OAIReservationMaximumBitrate.h"
#include "OAIReservationMaximumFramerate.h"
#include "OAIReservationResolution.h"
#include "OAIReservationResourceType.h"
#include "OAIReservationSpecialFeature.h"
#include "OAIReservationVideoQuality.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteReservationResponse_ResourceSpecification : public OAIObject {
public:
    OAIDeleteReservationResponse_ResourceSpecification();
    OAIDeleteReservationResponse_ResourceSpecification(QString json);
    ~OAIDeleteReservationResponse_ResourceSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChannelClass getChannelClass() const;
    void setChannelClass(const OAIChannelClass &channel_class);
    bool is_channel_class_Set() const;
    bool is_channel_class_Valid() const;

    OAIReservationCodec getCodec() const;
    void setCodec(const OAIReservationCodec &codec);
    bool is_codec_Set() const;
    bool is_codec_Valid() const;

    OAIReservationMaximumBitrate getMaximumBitrate() const;
    void setMaximumBitrate(const OAIReservationMaximumBitrate &maximum_bitrate);
    bool is_maximum_bitrate_Set() const;
    bool is_maximum_bitrate_Valid() const;

    OAIReservationMaximumFramerate getMaximumFramerate() const;
    void setMaximumFramerate(const OAIReservationMaximumFramerate &maximum_framerate);
    bool is_maximum_framerate_Set() const;
    bool is_maximum_framerate_Valid() const;

    OAIReservationResolution getResolution() const;
    void setResolution(const OAIReservationResolution &resolution);
    bool is_resolution_Set() const;
    bool is_resolution_Valid() const;

    OAIReservationResourceType getResourceType() const;
    void setResourceType(const OAIReservationResourceType &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    OAIReservationSpecialFeature getSpecialFeature() const;
    void setSpecialFeature(const OAIReservationSpecialFeature &special_feature);
    bool is_special_feature_Set() const;
    bool is_special_feature_Valid() const;

    OAIReservationVideoQuality getVideoQuality() const;
    void setVideoQuality(const OAIReservationVideoQuality &video_quality);
    bool is_video_quality_Set() const;
    bool is_video_quality_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChannelClass m_channel_class;
    bool m_channel_class_isSet;
    bool m_channel_class_isValid;

    OAIReservationCodec m_codec;
    bool m_codec_isSet;
    bool m_codec_isValid;

    OAIReservationMaximumBitrate m_maximum_bitrate;
    bool m_maximum_bitrate_isSet;
    bool m_maximum_bitrate_isValid;

    OAIReservationMaximumFramerate m_maximum_framerate;
    bool m_maximum_framerate_isSet;
    bool m_maximum_framerate_isValid;

    OAIReservationResolution m_resolution;
    bool m_resolution_isSet;
    bool m_resolution_isValid;

    OAIReservationResourceType m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    OAIReservationSpecialFeature m_special_feature;
    bool m_special_feature_isSet;
    bool m_special_feature_isValid;

    OAIReservationVideoQuality m_video_quality;
    bool m_video_quality_isSet;
    bool m_video_quality_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteReservationResponse_ResourceSpecification)

#endif // OAIDeleteReservationResponse_ResourceSpecification_H
