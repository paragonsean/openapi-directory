/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIH265ColorMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIH265ColorMetadata::OAIH265ColorMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIH265ColorMetadata::OAIH265ColorMetadata() {
    this->initializeModel();
}

OAIH265ColorMetadata::~OAIH265ColorMetadata() {}

void OAIH265ColorMetadata::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIH265ColorMetadata::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIH265ColorMetadata::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IGNORE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265ColorMetadata::IGNORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INSERT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265ColorMetadata::INSERT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIH265ColorMetadata::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIH265ColorMetadata::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIH265ColorMetadata::IGNORE:
            val = "IGNORE";
            break;
        case eOAIH265ColorMetadata::INSERT:
            val = "INSERT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIH265ColorMetadata::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIH265ColorMetadata::eOAIH265ColorMetadata OAIH265ColorMetadata::getValue() const {
    return m_value;
}

void OAIH265ColorMetadata::setValue(const OAIH265ColorMetadata::eOAIH265ColorMetadata& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIH265ColorMetadata::isSet() const {
    
    return m_value_isSet;
}

bool OAIH265ColorMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
