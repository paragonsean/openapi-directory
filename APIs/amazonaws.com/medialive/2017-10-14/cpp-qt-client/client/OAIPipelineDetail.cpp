/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPipelineDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPipelineDetail::OAIPipelineDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPipelineDetail::OAIPipelineDetail() {
    this->initializeModel();
}

OAIPipelineDetail::~OAIPipelineDetail() {}

void OAIPipelineDetail::initializeModel() {

    m_active_input_attachment_name_isSet = false;
    m_active_input_attachment_name_isValid = false;

    m_active_input_switch_action_name_isSet = false;
    m_active_input_switch_action_name_isValid = false;

    m_active_motion_graphics_action_name_isSet = false;
    m_active_motion_graphics_action_name_isValid = false;

    m_active_motion_graphics_uri_isSet = false;
    m_active_motion_graphics_uri_isValid = false;

    m_pipeline_id_isSet = false;
    m_pipeline_id_isValid = false;
}

void OAIPipelineDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPipelineDetail::fromJsonObject(QJsonObject json) {

    m_active_input_attachment_name_isValid = ::OpenAPI::fromJsonValue(m_active_input_attachment_name, json[QString("ActiveInputAttachmentName")]);
    m_active_input_attachment_name_isSet = !json[QString("ActiveInputAttachmentName")].isNull() && m_active_input_attachment_name_isValid;

    m_active_input_switch_action_name_isValid = ::OpenAPI::fromJsonValue(m_active_input_switch_action_name, json[QString("ActiveInputSwitchActionName")]);
    m_active_input_switch_action_name_isSet = !json[QString("ActiveInputSwitchActionName")].isNull() && m_active_input_switch_action_name_isValid;

    m_active_motion_graphics_action_name_isValid = ::OpenAPI::fromJsonValue(m_active_motion_graphics_action_name, json[QString("ActiveMotionGraphicsActionName")]);
    m_active_motion_graphics_action_name_isSet = !json[QString("ActiveMotionGraphicsActionName")].isNull() && m_active_motion_graphics_action_name_isValid;

    m_active_motion_graphics_uri_isValid = ::OpenAPI::fromJsonValue(m_active_motion_graphics_uri, json[QString("ActiveMotionGraphicsUri")]);
    m_active_motion_graphics_uri_isSet = !json[QString("ActiveMotionGraphicsUri")].isNull() && m_active_motion_graphics_uri_isValid;

    m_pipeline_id_isValid = ::OpenAPI::fromJsonValue(m_pipeline_id, json[QString("PipelineId")]);
    m_pipeline_id_isSet = !json[QString("PipelineId")].isNull() && m_pipeline_id_isValid;
}

QString OAIPipelineDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPipelineDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_active_input_attachment_name_isSet) {
        obj.insert(QString("ActiveInputAttachmentName"), ::OpenAPI::toJsonValue(m_active_input_attachment_name));
    }
    if (m_active_input_switch_action_name_isSet) {
        obj.insert(QString("ActiveInputSwitchActionName"), ::OpenAPI::toJsonValue(m_active_input_switch_action_name));
    }
    if (m_active_motion_graphics_action_name_isSet) {
        obj.insert(QString("ActiveMotionGraphicsActionName"), ::OpenAPI::toJsonValue(m_active_motion_graphics_action_name));
    }
    if (m_active_motion_graphics_uri_isSet) {
        obj.insert(QString("ActiveMotionGraphicsUri"), ::OpenAPI::toJsonValue(m_active_motion_graphics_uri));
    }
    if (m_pipeline_id_isSet) {
        obj.insert(QString("PipelineId"), ::OpenAPI::toJsonValue(m_pipeline_id));
    }
    return obj;
}

QString OAIPipelineDetail::getActiveInputAttachmentName() const {
    return m_active_input_attachment_name;
}
void OAIPipelineDetail::setActiveInputAttachmentName(const QString &active_input_attachment_name) {
    m_active_input_attachment_name = active_input_attachment_name;
    m_active_input_attachment_name_isSet = true;
}

bool OAIPipelineDetail::is_active_input_attachment_name_Set() const{
    return m_active_input_attachment_name_isSet;
}

bool OAIPipelineDetail::is_active_input_attachment_name_Valid() const{
    return m_active_input_attachment_name_isValid;
}

QString OAIPipelineDetail::getActiveInputSwitchActionName() const {
    return m_active_input_switch_action_name;
}
void OAIPipelineDetail::setActiveInputSwitchActionName(const QString &active_input_switch_action_name) {
    m_active_input_switch_action_name = active_input_switch_action_name;
    m_active_input_switch_action_name_isSet = true;
}

bool OAIPipelineDetail::is_active_input_switch_action_name_Set() const{
    return m_active_input_switch_action_name_isSet;
}

bool OAIPipelineDetail::is_active_input_switch_action_name_Valid() const{
    return m_active_input_switch_action_name_isValid;
}

QString OAIPipelineDetail::getActiveMotionGraphicsActionName() const {
    return m_active_motion_graphics_action_name;
}
void OAIPipelineDetail::setActiveMotionGraphicsActionName(const QString &active_motion_graphics_action_name) {
    m_active_motion_graphics_action_name = active_motion_graphics_action_name;
    m_active_motion_graphics_action_name_isSet = true;
}

bool OAIPipelineDetail::is_active_motion_graphics_action_name_Set() const{
    return m_active_motion_graphics_action_name_isSet;
}

bool OAIPipelineDetail::is_active_motion_graphics_action_name_Valid() const{
    return m_active_motion_graphics_action_name_isValid;
}

QString OAIPipelineDetail::getActiveMotionGraphicsUri() const {
    return m_active_motion_graphics_uri;
}
void OAIPipelineDetail::setActiveMotionGraphicsUri(const QString &active_motion_graphics_uri) {
    m_active_motion_graphics_uri = active_motion_graphics_uri;
    m_active_motion_graphics_uri_isSet = true;
}

bool OAIPipelineDetail::is_active_motion_graphics_uri_Set() const{
    return m_active_motion_graphics_uri_isSet;
}

bool OAIPipelineDetail::is_active_motion_graphics_uri_Valid() const{
    return m_active_motion_graphics_uri_isValid;
}

QString OAIPipelineDetail::getPipelineId() const {
    return m_pipeline_id;
}
void OAIPipelineDetail::setPipelineId(const QString &pipeline_id) {
    m_pipeline_id = pipeline_id;
    m_pipeline_id_isSet = true;
}

bool OAIPipelineDetail::is_pipeline_id_Set() const{
    return m_pipeline_id_isSet;
}

bool OAIPipelineDetail::is_pipeline_id_Valid() const{
    return m_pipeline_id_isValid;
}

bool OAIPipelineDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_input_attachment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_input_switch_action_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_motion_graphics_action_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_motion_graphics_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pipeline_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPipelineDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
