/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Scte35SegmentationCancelIndicator;
import org.openapitools.client.model.Scte35SegmentationDescriptorDeliveryRestrictions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings {
  public static final String SERIALIZED_NAME_DELIVERY_RESTRICTIONS = "DeliveryRestrictions";
  @SerializedName(SERIALIZED_NAME_DELIVERY_RESTRICTIONS)
  private Scte35SegmentationDescriptorDeliveryRestrictions deliveryRestrictions;

  public static final String SERIALIZED_NAME_SEGMENT_NUM = "SegmentNum";
  @SerializedName(SERIALIZED_NAME_SEGMENT_NUM)
  private Integer segmentNum;

  public static final String SERIALIZED_NAME_SEGMENTATION_CANCEL_INDICATOR = "SegmentationCancelIndicator";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_CANCEL_INDICATOR)
  private Scte35SegmentationCancelIndicator segmentationCancelIndicator;

  public static final String SERIALIZED_NAME_SEGMENTATION_DURATION = "SegmentationDuration";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_DURATION)
  private Integer segmentationDuration;

  public static final String SERIALIZED_NAME_SEGMENTATION_EVENT_ID = "SegmentationEventId";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_EVENT_ID)
  private Integer segmentationEventId;

  public static final String SERIALIZED_NAME_SEGMENTATION_TYPE_ID = "SegmentationTypeId";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_TYPE_ID)
  private Integer segmentationTypeId;

  public static final String SERIALIZED_NAME_SEGMENTATION_UPID = "SegmentationUpid";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_UPID)
  private String segmentationUpid;

  public static final String SERIALIZED_NAME_SEGMENTATION_UPID_TYPE = "SegmentationUpidType";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_UPID_TYPE)
  private Integer segmentationUpidType;

  public static final String SERIALIZED_NAME_SEGMENTS_EXPECTED = "SegmentsExpected";
  @SerializedName(SERIALIZED_NAME_SEGMENTS_EXPECTED)
  private Integer segmentsExpected;

  public static final String SERIALIZED_NAME_SUB_SEGMENT_NUM = "SubSegmentNum";
  @SerializedName(SERIALIZED_NAME_SUB_SEGMENT_NUM)
  private Integer subSegmentNum;

  public static final String SERIALIZED_NAME_SUB_SEGMENTS_EXPECTED = "SubSegmentsExpected";
  @SerializedName(SERIALIZED_NAME_SUB_SEGMENTS_EXPECTED)
  private Integer subSegmentsExpected;

  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings() {
  }

  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings deliveryRestrictions(Scte35SegmentationDescriptorDeliveryRestrictions deliveryRestrictions) {
    this.deliveryRestrictions = deliveryRestrictions;
    return this;
  }

  /**
   * Get deliveryRestrictions
   * @return deliveryRestrictions
   */
  @javax.annotation.Nullable
  public Scte35SegmentationDescriptorDeliveryRestrictions getDeliveryRestrictions() {
    return deliveryRestrictions;
  }

  public void setDeliveryRestrictions(Scte35SegmentationDescriptorDeliveryRestrictions deliveryRestrictions) {
    this.deliveryRestrictions = deliveryRestrictions;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings segmentNum(Integer segmentNum) {
    this.segmentNum = segmentNum;
    return this;
  }

  /**
   * Get segmentNum
   * @return segmentNum
   */
  @javax.annotation.Nullable
  public Integer getSegmentNum() {
    return segmentNum;
  }

  public void setSegmentNum(Integer segmentNum) {
    this.segmentNum = segmentNum;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings segmentationCancelIndicator(Scte35SegmentationCancelIndicator segmentationCancelIndicator) {
    this.segmentationCancelIndicator = segmentationCancelIndicator;
    return this;
  }

  /**
   * Get segmentationCancelIndicator
   * @return segmentationCancelIndicator
   */
  @javax.annotation.Nonnull
  public Scte35SegmentationCancelIndicator getSegmentationCancelIndicator() {
    return segmentationCancelIndicator;
  }

  public void setSegmentationCancelIndicator(Scte35SegmentationCancelIndicator segmentationCancelIndicator) {
    this.segmentationCancelIndicator = segmentationCancelIndicator;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings segmentationDuration(Integer segmentationDuration) {
    this.segmentationDuration = segmentationDuration;
    return this;
  }

  /**
   * Get segmentationDuration
   * @return segmentationDuration
   */
  @javax.annotation.Nullable
  public Integer getSegmentationDuration() {
    return segmentationDuration;
  }

  public void setSegmentationDuration(Integer segmentationDuration) {
    this.segmentationDuration = segmentationDuration;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings segmentationEventId(Integer segmentationEventId) {
    this.segmentationEventId = segmentationEventId;
    return this;
  }

  /**
   * Get segmentationEventId
   * @return segmentationEventId
   */
  @javax.annotation.Nonnull
  public Integer getSegmentationEventId() {
    return segmentationEventId;
  }

  public void setSegmentationEventId(Integer segmentationEventId) {
    this.segmentationEventId = segmentationEventId;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings segmentationTypeId(Integer segmentationTypeId) {
    this.segmentationTypeId = segmentationTypeId;
    return this;
  }

  /**
   * Get segmentationTypeId
   * @return segmentationTypeId
   */
  @javax.annotation.Nullable
  public Integer getSegmentationTypeId() {
    return segmentationTypeId;
  }

  public void setSegmentationTypeId(Integer segmentationTypeId) {
    this.segmentationTypeId = segmentationTypeId;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings segmentationUpid(String segmentationUpid) {
    this.segmentationUpid = segmentationUpid;
    return this;
  }

  /**
   * Get segmentationUpid
   * @return segmentationUpid
   */
  @javax.annotation.Nullable
  public String getSegmentationUpid() {
    return segmentationUpid;
  }

  public void setSegmentationUpid(String segmentationUpid) {
    this.segmentationUpid = segmentationUpid;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings segmentationUpidType(Integer segmentationUpidType) {
    this.segmentationUpidType = segmentationUpidType;
    return this;
  }

  /**
   * Get segmentationUpidType
   * @return segmentationUpidType
   */
  @javax.annotation.Nullable
  public Integer getSegmentationUpidType() {
    return segmentationUpidType;
  }

  public void setSegmentationUpidType(Integer segmentationUpidType) {
    this.segmentationUpidType = segmentationUpidType;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings segmentsExpected(Integer segmentsExpected) {
    this.segmentsExpected = segmentsExpected;
    return this;
  }

  /**
   * Get segmentsExpected
   * @return segmentsExpected
   */
  @javax.annotation.Nullable
  public Integer getSegmentsExpected() {
    return segmentsExpected;
  }

  public void setSegmentsExpected(Integer segmentsExpected) {
    this.segmentsExpected = segmentsExpected;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings subSegmentNum(Integer subSegmentNum) {
    this.subSegmentNum = subSegmentNum;
    return this;
  }

  /**
   * Get subSegmentNum
   * @return subSegmentNum
   */
  @javax.annotation.Nullable
  public Integer getSubSegmentNum() {
    return subSegmentNum;
  }

  public void setSubSegmentNum(Integer subSegmentNum) {
    this.subSegmentNum = subSegmentNum;
  }


  public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings subSegmentsExpected(Integer subSegmentsExpected) {
    this.subSegmentsExpected = subSegmentsExpected;
    return this;
  }

  /**
   * Get subSegmentsExpected
   * @return subSegmentsExpected
   */
  @javax.annotation.Nullable
  public Integer getSubSegmentsExpected() {
    return subSegmentsExpected;
  }

  public void setSubSegmentsExpected(Integer subSegmentsExpected) {
    this.subSegmentsExpected = subSegmentsExpected;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings = (Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings) o;
    return Objects.equals(this.deliveryRestrictions, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.deliveryRestrictions) &&
        Objects.equals(this.segmentNum, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.segmentNum) &&
        Objects.equals(this.segmentationCancelIndicator, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.segmentationCancelIndicator) &&
        Objects.equals(this.segmentationDuration, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.segmentationDuration) &&
        Objects.equals(this.segmentationEventId, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.segmentationEventId) &&
        Objects.equals(this.segmentationTypeId, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.segmentationTypeId) &&
        Objects.equals(this.segmentationUpid, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.segmentationUpid) &&
        Objects.equals(this.segmentationUpidType, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.segmentationUpidType) &&
        Objects.equals(this.segmentsExpected, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.segmentsExpected) &&
        Objects.equals(this.subSegmentNum, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.subSegmentNum) &&
        Objects.equals(this.subSegmentsExpected, scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.subSegmentsExpected);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryRestrictions, segmentNum, segmentationCancelIndicator, segmentationDuration, segmentationEventId, segmentationTypeId, segmentationUpid, segmentationUpidType, segmentsExpected, subSegmentNum, subSegmentsExpected);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings {\n");
    sb.append("    deliveryRestrictions: ").append(toIndentedString(deliveryRestrictions)).append("\n");
    sb.append("    segmentNum: ").append(toIndentedString(segmentNum)).append("\n");
    sb.append("    segmentationCancelIndicator: ").append(toIndentedString(segmentationCancelIndicator)).append("\n");
    sb.append("    segmentationDuration: ").append(toIndentedString(segmentationDuration)).append("\n");
    sb.append("    segmentationEventId: ").append(toIndentedString(segmentationEventId)).append("\n");
    sb.append("    segmentationTypeId: ").append(toIndentedString(segmentationTypeId)).append("\n");
    sb.append("    segmentationUpid: ").append(toIndentedString(segmentationUpid)).append("\n");
    sb.append("    segmentationUpidType: ").append(toIndentedString(segmentationUpidType)).append("\n");
    sb.append("    segmentsExpected: ").append(toIndentedString(segmentsExpected)).append("\n");
    sb.append("    subSegmentNum: ").append(toIndentedString(subSegmentNum)).append("\n");
    sb.append("    subSegmentsExpected: ").append(toIndentedString(subSegmentsExpected)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DeliveryRestrictions");
    openapiFields.add("SegmentNum");
    openapiFields.add("SegmentationCancelIndicator");
    openapiFields.add("SegmentationDuration");
    openapiFields.add("SegmentationEventId");
    openapiFields.add("SegmentationTypeId");
    openapiFields.add("SegmentationUpid");
    openapiFields.add("SegmentationUpidType");
    openapiFields.add("SegmentsExpected");
    openapiFields.add("SubSegmentNum");
    openapiFields.add("SubSegmentsExpected");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("SegmentationCancelIndicator");
    openapiRequiredFields.add("SegmentationEventId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings is not found in the empty JSON string", Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DeliveryRestrictions`
      if (jsonObj.get("DeliveryRestrictions") != null && !jsonObj.get("DeliveryRestrictions").isJsonNull()) {
        Scte35SegmentationDescriptorDeliveryRestrictions.validateJsonElement(jsonObj.get("DeliveryRestrictions"));
      }
      // validate the optional field `SegmentNum`
      if (jsonObj.get("SegmentNum") != null && !jsonObj.get("SegmentNum").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SegmentNum"));
      }
      // validate the required field `SegmentationCancelIndicator`
      Scte35SegmentationCancelIndicator.validateJsonElement(jsonObj.get("SegmentationCancelIndicator"));
      // validate the optional field `SegmentationDuration`
      if (jsonObj.get("SegmentationDuration") != null && !jsonObj.get("SegmentationDuration").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SegmentationDuration"));
      }
      // validate the required field `SegmentationEventId`
      Integer.validateJsonElement(jsonObj.get("SegmentationEventId"));
      // validate the optional field `SegmentationTypeId`
      if (jsonObj.get("SegmentationTypeId") != null && !jsonObj.get("SegmentationTypeId").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SegmentationTypeId"));
      }
      // validate the optional field `SegmentationUpid`
      if (jsonObj.get("SegmentationUpid") != null && !jsonObj.get("SegmentationUpid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SegmentationUpid"));
      }
      // validate the optional field `SegmentationUpidType`
      if (jsonObj.get("SegmentationUpidType") != null && !jsonObj.get("SegmentationUpidType").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SegmentationUpidType"));
      }
      // validate the optional field `SegmentsExpected`
      if (jsonObj.get("SegmentsExpected") != null && !jsonObj.get("SegmentsExpected").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SegmentsExpected"));
      }
      // validate the optional field `SubSegmentNum`
      if (jsonObj.get("SubSegmentNum") != null && !jsonObj.get("SubSegmentNum").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SubSegmentNum"));
      }
      // validate the optional field `SubSegmentsExpected`
      if (jsonObj.get("SubSegmentsExpected") != null && !jsonObj.get("SubSegmentsExpected").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SubSegmentsExpected"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings>() {
           @Override
           public void write(JsonWriter out, Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings
   * @throws IOException if the JSON string is invalid with respect to Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings
   */
  public static Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.class);
  }

  /**
   * Convert an instance of Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

