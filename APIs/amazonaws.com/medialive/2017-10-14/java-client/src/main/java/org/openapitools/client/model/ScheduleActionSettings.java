/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ScheduleActionSettingsHlsId3SegmentTaggingSettings;
import org.openapitools.client.model.ScheduleActionSettingsHlsTimedMetadataSettings;
import org.openapitools.client.model.ScheduleActionSettingsInputPrepareSettings;
import org.openapitools.client.model.ScheduleActionSettingsInputSwitchSettings;
import org.openapitools.client.model.ScheduleActionSettingsMotionGraphicsImageActivateSettings;
import org.openapitools.client.model.ScheduleActionSettingsPauseStateSettings;
import org.openapitools.client.model.ScheduleActionSettingsScte35InputSettings;
import org.openapitools.client.model.ScheduleActionSettingsScte35ReturnToNetworkSettings;
import org.openapitools.client.model.ScheduleActionSettingsScte35SpliceInsertSettings;
import org.openapitools.client.model.ScheduleActionSettingsScte35TimeSignalSettings;
import org.openapitools.client.model.ScheduleActionSettingsStaticImageActivateSettings;
import org.openapitools.client.model.ScheduleActionSettingsStaticImageDeactivateSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Holds the settings for a single schedule action.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScheduleActionSettings {
  public static final String SERIALIZED_NAME_HLS_ID3_SEGMENT_TAGGING_SETTINGS = "HlsId3SegmentTaggingSettings";
  @SerializedName(SERIALIZED_NAME_HLS_ID3_SEGMENT_TAGGING_SETTINGS)
  private ScheduleActionSettingsHlsId3SegmentTaggingSettings hlsId3SegmentTaggingSettings;

  public static final String SERIALIZED_NAME_HLS_TIMED_METADATA_SETTINGS = "HlsTimedMetadataSettings";
  @SerializedName(SERIALIZED_NAME_HLS_TIMED_METADATA_SETTINGS)
  private ScheduleActionSettingsHlsTimedMetadataSettings hlsTimedMetadataSettings;

  public static final String SERIALIZED_NAME_INPUT_PREPARE_SETTINGS = "InputPrepareSettings";
  @SerializedName(SERIALIZED_NAME_INPUT_PREPARE_SETTINGS)
  private ScheduleActionSettingsInputPrepareSettings inputPrepareSettings;

  public static final String SERIALIZED_NAME_INPUT_SWITCH_SETTINGS = "InputSwitchSettings";
  @SerializedName(SERIALIZED_NAME_INPUT_SWITCH_SETTINGS)
  private ScheduleActionSettingsInputSwitchSettings inputSwitchSettings;

  public static final String SERIALIZED_NAME_MOTION_GRAPHICS_IMAGE_ACTIVATE_SETTINGS = "MotionGraphicsImageActivateSettings";
  @SerializedName(SERIALIZED_NAME_MOTION_GRAPHICS_IMAGE_ACTIVATE_SETTINGS)
  private ScheduleActionSettingsMotionGraphicsImageActivateSettings motionGraphicsImageActivateSettings;

  public static final String SERIALIZED_NAME_MOTION_GRAPHICS_IMAGE_DEACTIVATE_SETTINGS = "MotionGraphicsImageDeactivateSettings";
  @SerializedName(SERIALIZED_NAME_MOTION_GRAPHICS_IMAGE_DEACTIVATE_SETTINGS)
  private Object motionGraphicsImageDeactivateSettings;

  public static final String SERIALIZED_NAME_PAUSE_STATE_SETTINGS = "PauseStateSettings";
  @SerializedName(SERIALIZED_NAME_PAUSE_STATE_SETTINGS)
  private ScheduleActionSettingsPauseStateSettings pauseStateSettings;

  public static final String SERIALIZED_NAME_SCTE35_INPUT_SETTINGS = "Scte35InputSettings";
  @SerializedName(SERIALIZED_NAME_SCTE35_INPUT_SETTINGS)
  private ScheduleActionSettingsScte35InputSettings scte35InputSettings;

  public static final String SERIALIZED_NAME_SCTE35_RETURN_TO_NETWORK_SETTINGS = "Scte35ReturnToNetworkSettings";
  @SerializedName(SERIALIZED_NAME_SCTE35_RETURN_TO_NETWORK_SETTINGS)
  private ScheduleActionSettingsScte35ReturnToNetworkSettings scte35ReturnToNetworkSettings;

  public static final String SERIALIZED_NAME_SCTE35_SPLICE_INSERT_SETTINGS = "Scte35SpliceInsertSettings";
  @SerializedName(SERIALIZED_NAME_SCTE35_SPLICE_INSERT_SETTINGS)
  private ScheduleActionSettingsScte35SpliceInsertSettings scte35SpliceInsertSettings;

  public static final String SERIALIZED_NAME_SCTE35_TIME_SIGNAL_SETTINGS = "Scte35TimeSignalSettings";
  @SerializedName(SERIALIZED_NAME_SCTE35_TIME_SIGNAL_SETTINGS)
  private ScheduleActionSettingsScte35TimeSignalSettings scte35TimeSignalSettings;

  public static final String SERIALIZED_NAME_STATIC_IMAGE_ACTIVATE_SETTINGS = "StaticImageActivateSettings";
  @SerializedName(SERIALIZED_NAME_STATIC_IMAGE_ACTIVATE_SETTINGS)
  private ScheduleActionSettingsStaticImageActivateSettings staticImageActivateSettings;

  public static final String SERIALIZED_NAME_STATIC_IMAGE_DEACTIVATE_SETTINGS = "StaticImageDeactivateSettings";
  @SerializedName(SERIALIZED_NAME_STATIC_IMAGE_DEACTIVATE_SETTINGS)
  private ScheduleActionSettingsStaticImageDeactivateSettings staticImageDeactivateSettings;

  public ScheduleActionSettings() {
  }

  public ScheduleActionSettings hlsId3SegmentTaggingSettings(ScheduleActionSettingsHlsId3SegmentTaggingSettings hlsId3SegmentTaggingSettings) {
    this.hlsId3SegmentTaggingSettings = hlsId3SegmentTaggingSettings;
    return this;
  }

  /**
   * Get hlsId3SegmentTaggingSettings
   * @return hlsId3SegmentTaggingSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsHlsId3SegmentTaggingSettings getHlsId3SegmentTaggingSettings() {
    return hlsId3SegmentTaggingSettings;
  }

  public void setHlsId3SegmentTaggingSettings(ScheduleActionSettingsHlsId3SegmentTaggingSettings hlsId3SegmentTaggingSettings) {
    this.hlsId3SegmentTaggingSettings = hlsId3SegmentTaggingSettings;
  }


  public ScheduleActionSettings hlsTimedMetadataSettings(ScheduleActionSettingsHlsTimedMetadataSettings hlsTimedMetadataSettings) {
    this.hlsTimedMetadataSettings = hlsTimedMetadataSettings;
    return this;
  }

  /**
   * Get hlsTimedMetadataSettings
   * @return hlsTimedMetadataSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsHlsTimedMetadataSettings getHlsTimedMetadataSettings() {
    return hlsTimedMetadataSettings;
  }

  public void setHlsTimedMetadataSettings(ScheduleActionSettingsHlsTimedMetadataSettings hlsTimedMetadataSettings) {
    this.hlsTimedMetadataSettings = hlsTimedMetadataSettings;
  }


  public ScheduleActionSettings inputPrepareSettings(ScheduleActionSettingsInputPrepareSettings inputPrepareSettings) {
    this.inputPrepareSettings = inputPrepareSettings;
    return this;
  }

  /**
   * Get inputPrepareSettings
   * @return inputPrepareSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsInputPrepareSettings getInputPrepareSettings() {
    return inputPrepareSettings;
  }

  public void setInputPrepareSettings(ScheduleActionSettingsInputPrepareSettings inputPrepareSettings) {
    this.inputPrepareSettings = inputPrepareSettings;
  }


  public ScheduleActionSettings inputSwitchSettings(ScheduleActionSettingsInputSwitchSettings inputSwitchSettings) {
    this.inputSwitchSettings = inputSwitchSettings;
    return this;
  }

  /**
   * Get inputSwitchSettings
   * @return inputSwitchSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsInputSwitchSettings getInputSwitchSettings() {
    return inputSwitchSettings;
  }

  public void setInputSwitchSettings(ScheduleActionSettingsInputSwitchSettings inputSwitchSettings) {
    this.inputSwitchSettings = inputSwitchSettings;
  }


  public ScheduleActionSettings motionGraphicsImageActivateSettings(ScheduleActionSettingsMotionGraphicsImageActivateSettings motionGraphicsImageActivateSettings) {
    this.motionGraphicsImageActivateSettings = motionGraphicsImageActivateSettings;
    return this;
  }

  /**
   * Get motionGraphicsImageActivateSettings
   * @return motionGraphicsImageActivateSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsMotionGraphicsImageActivateSettings getMotionGraphicsImageActivateSettings() {
    return motionGraphicsImageActivateSettings;
  }

  public void setMotionGraphicsImageActivateSettings(ScheduleActionSettingsMotionGraphicsImageActivateSettings motionGraphicsImageActivateSettings) {
    this.motionGraphicsImageActivateSettings = motionGraphicsImageActivateSettings;
  }


  public ScheduleActionSettings motionGraphicsImageDeactivateSettings(Object motionGraphicsImageDeactivateSettings) {
    this.motionGraphicsImageDeactivateSettings = motionGraphicsImageDeactivateSettings;
    return this;
  }

  /**
   * Get motionGraphicsImageDeactivateSettings
   * @return motionGraphicsImageDeactivateSettings
   */
  @javax.annotation.Nullable
  public Object getMotionGraphicsImageDeactivateSettings() {
    return motionGraphicsImageDeactivateSettings;
  }

  public void setMotionGraphicsImageDeactivateSettings(Object motionGraphicsImageDeactivateSettings) {
    this.motionGraphicsImageDeactivateSettings = motionGraphicsImageDeactivateSettings;
  }


  public ScheduleActionSettings pauseStateSettings(ScheduleActionSettingsPauseStateSettings pauseStateSettings) {
    this.pauseStateSettings = pauseStateSettings;
    return this;
  }

  /**
   * Get pauseStateSettings
   * @return pauseStateSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsPauseStateSettings getPauseStateSettings() {
    return pauseStateSettings;
  }

  public void setPauseStateSettings(ScheduleActionSettingsPauseStateSettings pauseStateSettings) {
    this.pauseStateSettings = pauseStateSettings;
  }


  public ScheduleActionSettings scte35InputSettings(ScheduleActionSettingsScte35InputSettings scte35InputSettings) {
    this.scte35InputSettings = scte35InputSettings;
    return this;
  }

  /**
   * Get scte35InputSettings
   * @return scte35InputSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsScte35InputSettings getScte35InputSettings() {
    return scte35InputSettings;
  }

  public void setScte35InputSettings(ScheduleActionSettingsScte35InputSettings scte35InputSettings) {
    this.scte35InputSettings = scte35InputSettings;
  }


  public ScheduleActionSettings scte35ReturnToNetworkSettings(ScheduleActionSettingsScte35ReturnToNetworkSettings scte35ReturnToNetworkSettings) {
    this.scte35ReturnToNetworkSettings = scte35ReturnToNetworkSettings;
    return this;
  }

  /**
   * Get scte35ReturnToNetworkSettings
   * @return scte35ReturnToNetworkSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsScte35ReturnToNetworkSettings getScte35ReturnToNetworkSettings() {
    return scte35ReturnToNetworkSettings;
  }

  public void setScte35ReturnToNetworkSettings(ScheduleActionSettingsScte35ReturnToNetworkSettings scte35ReturnToNetworkSettings) {
    this.scte35ReturnToNetworkSettings = scte35ReturnToNetworkSettings;
  }


  public ScheduleActionSettings scte35SpliceInsertSettings(ScheduleActionSettingsScte35SpliceInsertSettings scte35SpliceInsertSettings) {
    this.scte35SpliceInsertSettings = scte35SpliceInsertSettings;
    return this;
  }

  /**
   * Get scte35SpliceInsertSettings
   * @return scte35SpliceInsertSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsScte35SpliceInsertSettings getScte35SpliceInsertSettings() {
    return scte35SpliceInsertSettings;
  }

  public void setScte35SpliceInsertSettings(ScheduleActionSettingsScte35SpliceInsertSettings scte35SpliceInsertSettings) {
    this.scte35SpliceInsertSettings = scte35SpliceInsertSettings;
  }


  public ScheduleActionSettings scte35TimeSignalSettings(ScheduleActionSettingsScte35TimeSignalSettings scte35TimeSignalSettings) {
    this.scte35TimeSignalSettings = scte35TimeSignalSettings;
    return this;
  }

  /**
   * Get scte35TimeSignalSettings
   * @return scte35TimeSignalSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsScte35TimeSignalSettings getScte35TimeSignalSettings() {
    return scte35TimeSignalSettings;
  }

  public void setScte35TimeSignalSettings(ScheduleActionSettingsScte35TimeSignalSettings scte35TimeSignalSettings) {
    this.scte35TimeSignalSettings = scte35TimeSignalSettings;
  }


  public ScheduleActionSettings staticImageActivateSettings(ScheduleActionSettingsStaticImageActivateSettings staticImageActivateSettings) {
    this.staticImageActivateSettings = staticImageActivateSettings;
    return this;
  }

  /**
   * Get staticImageActivateSettings
   * @return staticImageActivateSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsStaticImageActivateSettings getStaticImageActivateSettings() {
    return staticImageActivateSettings;
  }

  public void setStaticImageActivateSettings(ScheduleActionSettingsStaticImageActivateSettings staticImageActivateSettings) {
    this.staticImageActivateSettings = staticImageActivateSettings;
  }


  public ScheduleActionSettings staticImageDeactivateSettings(ScheduleActionSettingsStaticImageDeactivateSettings staticImageDeactivateSettings) {
    this.staticImageDeactivateSettings = staticImageDeactivateSettings;
    return this;
  }

  /**
   * Get staticImageDeactivateSettings
   * @return staticImageDeactivateSettings
   */
  @javax.annotation.Nullable
  public ScheduleActionSettingsStaticImageDeactivateSettings getStaticImageDeactivateSettings() {
    return staticImageDeactivateSettings;
  }

  public void setStaticImageDeactivateSettings(ScheduleActionSettingsStaticImageDeactivateSettings staticImageDeactivateSettings) {
    this.staticImageDeactivateSettings = staticImageDeactivateSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleActionSettings scheduleActionSettings = (ScheduleActionSettings) o;
    return Objects.equals(this.hlsId3SegmentTaggingSettings, scheduleActionSettings.hlsId3SegmentTaggingSettings) &&
        Objects.equals(this.hlsTimedMetadataSettings, scheduleActionSettings.hlsTimedMetadataSettings) &&
        Objects.equals(this.inputPrepareSettings, scheduleActionSettings.inputPrepareSettings) &&
        Objects.equals(this.inputSwitchSettings, scheduleActionSettings.inputSwitchSettings) &&
        Objects.equals(this.motionGraphicsImageActivateSettings, scheduleActionSettings.motionGraphicsImageActivateSettings) &&
        Objects.equals(this.motionGraphicsImageDeactivateSettings, scheduleActionSettings.motionGraphicsImageDeactivateSettings) &&
        Objects.equals(this.pauseStateSettings, scheduleActionSettings.pauseStateSettings) &&
        Objects.equals(this.scte35InputSettings, scheduleActionSettings.scte35InputSettings) &&
        Objects.equals(this.scte35ReturnToNetworkSettings, scheduleActionSettings.scte35ReturnToNetworkSettings) &&
        Objects.equals(this.scte35SpliceInsertSettings, scheduleActionSettings.scte35SpliceInsertSettings) &&
        Objects.equals(this.scte35TimeSignalSettings, scheduleActionSettings.scte35TimeSignalSettings) &&
        Objects.equals(this.staticImageActivateSettings, scheduleActionSettings.staticImageActivateSettings) &&
        Objects.equals(this.staticImageDeactivateSettings, scheduleActionSettings.staticImageDeactivateSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hlsId3SegmentTaggingSettings, hlsTimedMetadataSettings, inputPrepareSettings, inputSwitchSettings, motionGraphicsImageActivateSettings, motionGraphicsImageDeactivateSettings, pauseStateSettings, scte35InputSettings, scte35ReturnToNetworkSettings, scte35SpliceInsertSettings, scte35TimeSignalSettings, staticImageActivateSettings, staticImageDeactivateSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleActionSettings {\n");
    sb.append("    hlsId3SegmentTaggingSettings: ").append(toIndentedString(hlsId3SegmentTaggingSettings)).append("\n");
    sb.append("    hlsTimedMetadataSettings: ").append(toIndentedString(hlsTimedMetadataSettings)).append("\n");
    sb.append("    inputPrepareSettings: ").append(toIndentedString(inputPrepareSettings)).append("\n");
    sb.append("    inputSwitchSettings: ").append(toIndentedString(inputSwitchSettings)).append("\n");
    sb.append("    motionGraphicsImageActivateSettings: ").append(toIndentedString(motionGraphicsImageActivateSettings)).append("\n");
    sb.append("    motionGraphicsImageDeactivateSettings: ").append(toIndentedString(motionGraphicsImageDeactivateSettings)).append("\n");
    sb.append("    pauseStateSettings: ").append(toIndentedString(pauseStateSettings)).append("\n");
    sb.append("    scte35InputSettings: ").append(toIndentedString(scte35InputSettings)).append("\n");
    sb.append("    scte35ReturnToNetworkSettings: ").append(toIndentedString(scte35ReturnToNetworkSettings)).append("\n");
    sb.append("    scte35SpliceInsertSettings: ").append(toIndentedString(scte35SpliceInsertSettings)).append("\n");
    sb.append("    scte35TimeSignalSettings: ").append(toIndentedString(scte35TimeSignalSettings)).append("\n");
    sb.append("    staticImageActivateSettings: ").append(toIndentedString(staticImageActivateSettings)).append("\n");
    sb.append("    staticImageDeactivateSettings: ").append(toIndentedString(staticImageDeactivateSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("HlsId3SegmentTaggingSettings");
    openapiFields.add("HlsTimedMetadataSettings");
    openapiFields.add("InputPrepareSettings");
    openapiFields.add("InputSwitchSettings");
    openapiFields.add("MotionGraphicsImageActivateSettings");
    openapiFields.add("MotionGraphicsImageDeactivateSettings");
    openapiFields.add("PauseStateSettings");
    openapiFields.add("Scte35InputSettings");
    openapiFields.add("Scte35ReturnToNetworkSettings");
    openapiFields.add("Scte35SpliceInsertSettings");
    openapiFields.add("Scte35TimeSignalSettings");
    openapiFields.add("StaticImageActivateSettings");
    openapiFields.add("StaticImageDeactivateSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduleActionSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduleActionSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduleActionSettings is not found in the empty JSON string", ScheduleActionSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduleActionSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduleActionSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `HlsId3SegmentTaggingSettings`
      if (jsonObj.get("HlsId3SegmentTaggingSettings") != null && !jsonObj.get("HlsId3SegmentTaggingSettings").isJsonNull()) {
        ScheduleActionSettingsHlsId3SegmentTaggingSettings.validateJsonElement(jsonObj.get("HlsId3SegmentTaggingSettings"));
      }
      // validate the optional field `HlsTimedMetadataSettings`
      if (jsonObj.get("HlsTimedMetadataSettings") != null && !jsonObj.get("HlsTimedMetadataSettings").isJsonNull()) {
        ScheduleActionSettingsHlsTimedMetadataSettings.validateJsonElement(jsonObj.get("HlsTimedMetadataSettings"));
      }
      // validate the optional field `InputPrepareSettings`
      if (jsonObj.get("InputPrepareSettings") != null && !jsonObj.get("InputPrepareSettings").isJsonNull()) {
        ScheduleActionSettingsInputPrepareSettings.validateJsonElement(jsonObj.get("InputPrepareSettings"));
      }
      // validate the optional field `InputSwitchSettings`
      if (jsonObj.get("InputSwitchSettings") != null && !jsonObj.get("InputSwitchSettings").isJsonNull()) {
        ScheduleActionSettingsInputSwitchSettings.validateJsonElement(jsonObj.get("InputSwitchSettings"));
      }
      // validate the optional field `MotionGraphicsImageActivateSettings`
      if (jsonObj.get("MotionGraphicsImageActivateSettings") != null && !jsonObj.get("MotionGraphicsImageActivateSettings").isJsonNull()) {
        ScheduleActionSettingsMotionGraphicsImageActivateSettings.validateJsonElement(jsonObj.get("MotionGraphicsImageActivateSettings"));
      }
      // validate the optional field `MotionGraphicsImageDeactivateSettings`
      if (jsonObj.get("MotionGraphicsImageDeactivateSettings") != null && !jsonObj.get("MotionGraphicsImageDeactivateSettings").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("MotionGraphicsImageDeactivateSettings"));
      }
      // validate the optional field `PauseStateSettings`
      if (jsonObj.get("PauseStateSettings") != null && !jsonObj.get("PauseStateSettings").isJsonNull()) {
        ScheduleActionSettingsPauseStateSettings.validateJsonElement(jsonObj.get("PauseStateSettings"));
      }
      // validate the optional field `Scte35InputSettings`
      if (jsonObj.get("Scte35InputSettings") != null && !jsonObj.get("Scte35InputSettings").isJsonNull()) {
        ScheduleActionSettingsScte35InputSettings.validateJsonElement(jsonObj.get("Scte35InputSettings"));
      }
      // validate the optional field `Scte35ReturnToNetworkSettings`
      if (jsonObj.get("Scte35ReturnToNetworkSettings") != null && !jsonObj.get("Scte35ReturnToNetworkSettings").isJsonNull()) {
        ScheduleActionSettingsScte35ReturnToNetworkSettings.validateJsonElement(jsonObj.get("Scte35ReturnToNetworkSettings"));
      }
      // validate the optional field `Scte35SpliceInsertSettings`
      if (jsonObj.get("Scte35SpliceInsertSettings") != null && !jsonObj.get("Scte35SpliceInsertSettings").isJsonNull()) {
        ScheduleActionSettingsScte35SpliceInsertSettings.validateJsonElement(jsonObj.get("Scte35SpliceInsertSettings"));
      }
      // validate the optional field `Scte35TimeSignalSettings`
      if (jsonObj.get("Scte35TimeSignalSettings") != null && !jsonObj.get("Scte35TimeSignalSettings").isJsonNull()) {
        ScheduleActionSettingsScte35TimeSignalSettings.validateJsonElement(jsonObj.get("Scte35TimeSignalSettings"));
      }
      // validate the optional field `StaticImageActivateSettings`
      if (jsonObj.get("StaticImageActivateSettings") != null && !jsonObj.get("StaticImageActivateSettings").isJsonNull()) {
        ScheduleActionSettingsStaticImageActivateSettings.validateJsonElement(jsonObj.get("StaticImageActivateSettings"));
      }
      // validate the optional field `StaticImageDeactivateSettings`
      if (jsonObj.get("StaticImageDeactivateSettings") != null && !jsonObj.get("StaticImageDeactivateSettings").isJsonNull()) {
        ScheduleActionSettingsStaticImageDeactivateSettings.validateJsonElement(jsonObj.get("StaticImageDeactivateSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduleActionSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduleActionSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduleActionSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduleActionSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduleActionSettings>() {
           @Override
           public void write(JsonWriter out, ScheduleActionSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduleActionSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduleActionSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduleActionSettings
   * @throws IOException if the JSON string is invalid with respect to ScheduleActionSettings
   */
  public static ScheduleActionSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduleActionSettings.class);
  }

  /**
   * Convert an instance of ScheduleActionSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

