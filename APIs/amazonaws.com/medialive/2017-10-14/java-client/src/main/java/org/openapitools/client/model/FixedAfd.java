/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Fixed Afd
 */
@JsonAdapter(FixedAfd.Adapter.class)
public enum FixedAfd {
  
  _0000("AFD_0000"),
  
  _0010("AFD_0010"),
  
  _0011("AFD_0011"),
  
  _0100("AFD_0100"),
  
  _1000("AFD_1000"),
  
  _1001("AFD_1001"),
  
  _1010("AFD_1010"),
  
  _1011("AFD_1011"),
  
  _1101("AFD_1101"),
  
  _1110("AFD_1110"),
  
  _1111("AFD_1111");

  private String value;

  FixedAfd(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FixedAfd fromValue(String value) {
    for (FixedAfd b : FixedAfd.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FixedAfd> {
    @Override
    public void write(final JsonWriter jsonWriter, final FixedAfd enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FixedAfd read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FixedAfd.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    FixedAfd.fromValue(value);
  }
}

