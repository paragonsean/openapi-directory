/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AuthenticationScheme;
import org.openapitools.client.model.InputLossActionForRtmpOut;
import org.openapitools.client.model.RtmpCacheFullBehavior;
import org.openapitools.client.model.RtmpCaptionData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OutputGroupSettingsRtmpGroupSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OutputGroupSettingsRtmpGroupSettings {
  public static final String SERIALIZED_NAME_AD_MARKERS = "AdMarkers";
  @SerializedName(SERIALIZED_NAME_AD_MARKERS)
  private List adMarkers;

  public static final String SERIALIZED_NAME_AUTHENTICATION_SCHEME = "AuthenticationScheme";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_SCHEME)
  private AuthenticationScheme authenticationScheme;

  public static final String SERIALIZED_NAME_CACHE_FULL_BEHAVIOR = "CacheFullBehavior";
  @SerializedName(SERIALIZED_NAME_CACHE_FULL_BEHAVIOR)
  private RtmpCacheFullBehavior cacheFullBehavior;

  public static final String SERIALIZED_NAME_CACHE_LENGTH = "CacheLength";
  @SerializedName(SERIALIZED_NAME_CACHE_LENGTH)
  private Integer cacheLength;

  public static final String SERIALIZED_NAME_CAPTION_DATA = "CaptionData";
  @SerializedName(SERIALIZED_NAME_CAPTION_DATA)
  private RtmpCaptionData captionData;

  public static final String SERIALIZED_NAME_INPUT_LOSS_ACTION = "InputLossAction";
  @SerializedName(SERIALIZED_NAME_INPUT_LOSS_ACTION)
  private InputLossActionForRtmpOut inputLossAction;

  public static final String SERIALIZED_NAME_RESTART_DELAY = "RestartDelay";
  @SerializedName(SERIALIZED_NAME_RESTART_DELAY)
  private Integer restartDelay;

  public OutputGroupSettingsRtmpGroupSettings() {
  }

  public OutputGroupSettingsRtmpGroupSettings adMarkers(List adMarkers) {
    this.adMarkers = adMarkers;
    return this;
  }

  /**
   * Get adMarkers
   * @return adMarkers
   */
  @javax.annotation.Nullable
  public List getAdMarkers() {
    return adMarkers;
  }

  public void setAdMarkers(List adMarkers) {
    this.adMarkers = adMarkers;
  }


  public OutputGroupSettingsRtmpGroupSettings authenticationScheme(AuthenticationScheme authenticationScheme) {
    this.authenticationScheme = authenticationScheme;
    return this;
  }

  /**
   * Get authenticationScheme
   * @return authenticationScheme
   */
  @javax.annotation.Nullable
  public AuthenticationScheme getAuthenticationScheme() {
    return authenticationScheme;
  }

  public void setAuthenticationScheme(AuthenticationScheme authenticationScheme) {
    this.authenticationScheme = authenticationScheme;
  }


  public OutputGroupSettingsRtmpGroupSettings cacheFullBehavior(RtmpCacheFullBehavior cacheFullBehavior) {
    this.cacheFullBehavior = cacheFullBehavior;
    return this;
  }

  /**
   * Get cacheFullBehavior
   * @return cacheFullBehavior
   */
  @javax.annotation.Nullable
  public RtmpCacheFullBehavior getCacheFullBehavior() {
    return cacheFullBehavior;
  }

  public void setCacheFullBehavior(RtmpCacheFullBehavior cacheFullBehavior) {
    this.cacheFullBehavior = cacheFullBehavior;
  }


  public OutputGroupSettingsRtmpGroupSettings cacheLength(Integer cacheLength) {
    this.cacheLength = cacheLength;
    return this;
  }

  /**
   * Get cacheLength
   * @return cacheLength
   */
  @javax.annotation.Nullable
  public Integer getCacheLength() {
    return cacheLength;
  }

  public void setCacheLength(Integer cacheLength) {
    this.cacheLength = cacheLength;
  }


  public OutputGroupSettingsRtmpGroupSettings captionData(RtmpCaptionData captionData) {
    this.captionData = captionData;
    return this;
  }

  /**
   * Get captionData
   * @return captionData
   */
  @javax.annotation.Nullable
  public RtmpCaptionData getCaptionData() {
    return captionData;
  }

  public void setCaptionData(RtmpCaptionData captionData) {
    this.captionData = captionData;
  }


  public OutputGroupSettingsRtmpGroupSettings inputLossAction(InputLossActionForRtmpOut inputLossAction) {
    this.inputLossAction = inputLossAction;
    return this;
  }

  /**
   * Get inputLossAction
   * @return inputLossAction
   */
  @javax.annotation.Nullable
  public InputLossActionForRtmpOut getInputLossAction() {
    return inputLossAction;
  }

  public void setInputLossAction(InputLossActionForRtmpOut inputLossAction) {
    this.inputLossAction = inputLossAction;
  }


  public OutputGroupSettingsRtmpGroupSettings restartDelay(Integer restartDelay) {
    this.restartDelay = restartDelay;
    return this;
  }

  /**
   * Get restartDelay
   * @return restartDelay
   */
  @javax.annotation.Nullable
  public Integer getRestartDelay() {
    return restartDelay;
  }

  public void setRestartDelay(Integer restartDelay) {
    this.restartDelay = restartDelay;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputGroupSettingsRtmpGroupSettings outputGroupSettingsRtmpGroupSettings = (OutputGroupSettingsRtmpGroupSettings) o;
    return Objects.equals(this.adMarkers, outputGroupSettingsRtmpGroupSettings.adMarkers) &&
        Objects.equals(this.authenticationScheme, outputGroupSettingsRtmpGroupSettings.authenticationScheme) &&
        Objects.equals(this.cacheFullBehavior, outputGroupSettingsRtmpGroupSettings.cacheFullBehavior) &&
        Objects.equals(this.cacheLength, outputGroupSettingsRtmpGroupSettings.cacheLength) &&
        Objects.equals(this.captionData, outputGroupSettingsRtmpGroupSettings.captionData) &&
        Objects.equals(this.inputLossAction, outputGroupSettingsRtmpGroupSettings.inputLossAction) &&
        Objects.equals(this.restartDelay, outputGroupSettingsRtmpGroupSettings.restartDelay);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adMarkers, authenticationScheme, cacheFullBehavior, cacheLength, captionData, inputLossAction, restartDelay);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputGroupSettingsRtmpGroupSettings {\n");
    sb.append("    adMarkers: ").append(toIndentedString(adMarkers)).append("\n");
    sb.append("    authenticationScheme: ").append(toIndentedString(authenticationScheme)).append("\n");
    sb.append("    cacheFullBehavior: ").append(toIndentedString(cacheFullBehavior)).append("\n");
    sb.append("    cacheLength: ").append(toIndentedString(cacheLength)).append("\n");
    sb.append("    captionData: ").append(toIndentedString(captionData)).append("\n");
    sb.append("    inputLossAction: ").append(toIndentedString(inputLossAction)).append("\n");
    sb.append("    restartDelay: ").append(toIndentedString(restartDelay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AdMarkers");
    openapiFields.add("AuthenticationScheme");
    openapiFields.add("CacheFullBehavior");
    openapiFields.add("CacheLength");
    openapiFields.add("CaptionData");
    openapiFields.add("InputLossAction");
    openapiFields.add("RestartDelay");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OutputGroupSettingsRtmpGroupSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OutputGroupSettingsRtmpGroupSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OutputGroupSettingsRtmpGroupSettings is not found in the empty JSON string", OutputGroupSettingsRtmpGroupSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OutputGroupSettingsRtmpGroupSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OutputGroupSettingsRtmpGroupSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AdMarkers`
      if (jsonObj.get("AdMarkers") != null && !jsonObj.get("AdMarkers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AdMarkers"));
      }
      // validate the optional field `AuthenticationScheme`
      if (jsonObj.get("AuthenticationScheme") != null && !jsonObj.get("AuthenticationScheme").isJsonNull()) {
        AuthenticationScheme.validateJsonElement(jsonObj.get("AuthenticationScheme"));
      }
      // validate the optional field `CacheFullBehavior`
      if (jsonObj.get("CacheFullBehavior") != null && !jsonObj.get("CacheFullBehavior").isJsonNull()) {
        RtmpCacheFullBehavior.validateJsonElement(jsonObj.get("CacheFullBehavior"));
      }
      // validate the optional field `CacheLength`
      if (jsonObj.get("CacheLength") != null && !jsonObj.get("CacheLength").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CacheLength"));
      }
      // validate the optional field `CaptionData`
      if (jsonObj.get("CaptionData") != null && !jsonObj.get("CaptionData").isJsonNull()) {
        RtmpCaptionData.validateJsonElement(jsonObj.get("CaptionData"));
      }
      // validate the optional field `InputLossAction`
      if (jsonObj.get("InputLossAction") != null && !jsonObj.get("InputLossAction").isJsonNull()) {
        InputLossActionForRtmpOut.validateJsonElement(jsonObj.get("InputLossAction"));
      }
      // validate the optional field `RestartDelay`
      if (jsonObj.get("RestartDelay") != null && !jsonObj.get("RestartDelay").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("RestartDelay"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OutputGroupSettingsRtmpGroupSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OutputGroupSettingsRtmpGroupSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OutputGroupSettingsRtmpGroupSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OutputGroupSettingsRtmpGroupSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<OutputGroupSettingsRtmpGroupSettings>() {
           @Override
           public void write(JsonWriter out, OutputGroupSettingsRtmpGroupSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OutputGroupSettingsRtmpGroupSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OutputGroupSettingsRtmpGroupSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OutputGroupSettingsRtmpGroupSettings
   * @throws IOException if the JSON string is invalid with respect to OutputGroupSettingsRtmpGroupSettings
   */
  public static OutputGroupSettingsRtmpGroupSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OutputGroupSettingsRtmpGroupSettings.class);
  }

  /**
   * Convert an instance of OutputGroupSettingsRtmpGroupSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

