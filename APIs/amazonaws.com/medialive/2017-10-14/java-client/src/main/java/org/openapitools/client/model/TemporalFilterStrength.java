/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Temporal Filter Strength
 */
@JsonAdapter(TemporalFilterStrength.Adapter.class)
public enum TemporalFilterStrength {
  
  AUTO("AUTO"),
  
  STRENGTH_1("STRENGTH_1"),
  
  STRENGTH_2("STRENGTH_2"),
  
  STRENGTH_3("STRENGTH_3"),
  
  STRENGTH_4("STRENGTH_4"),
  
  STRENGTH_5("STRENGTH_5"),
  
  STRENGTH_6("STRENGTH_6"),
  
  STRENGTH_7("STRENGTH_7"),
  
  STRENGTH_8("STRENGTH_8"),
  
  STRENGTH_9("STRENGTH_9"),
  
  STRENGTH_10("STRENGTH_10"),
  
  STRENGTH_11("STRENGTH_11"),
  
  STRENGTH_12("STRENGTH_12"),
  
  STRENGTH_13("STRENGTH_13"),
  
  STRENGTH_14("STRENGTH_14"),
  
  STRENGTH_15("STRENGTH_15"),
  
  STRENGTH_16("STRENGTH_16");

  private String value;

  TemporalFilterStrength(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TemporalFilterStrength fromValue(String value) {
    for (TemporalFilterStrength b : TemporalFilterStrength.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TemporalFilterStrength> {
    @Override
    public void write(final JsonWriter jsonWriter, final TemporalFilterStrength enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TemporalFilterStrength read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TemporalFilterStrength.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    TemporalFilterStrength.fromValue(value);
  }
}

