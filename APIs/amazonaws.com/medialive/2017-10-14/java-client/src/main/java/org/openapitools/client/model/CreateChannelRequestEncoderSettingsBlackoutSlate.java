/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BlackoutSlateBlackoutSlateImage;
import org.openapitools.client.model.BlackoutSlateNetworkEndBlackout;
import org.openapitools.client.model.BlackoutSlateNetworkEndBlackoutImage;
import org.openapitools.client.model.BlackoutSlateState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateChannelRequestEncoderSettingsBlackoutSlate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateChannelRequestEncoderSettingsBlackoutSlate {
  public static final String SERIALIZED_NAME_BLACKOUT_SLATE_IMAGE = "BlackoutSlateImage";
  @SerializedName(SERIALIZED_NAME_BLACKOUT_SLATE_IMAGE)
  private BlackoutSlateBlackoutSlateImage blackoutSlateImage;

  public static final String SERIALIZED_NAME_NETWORK_END_BLACKOUT = "NetworkEndBlackout";
  @SerializedName(SERIALIZED_NAME_NETWORK_END_BLACKOUT)
  private BlackoutSlateNetworkEndBlackout networkEndBlackout;

  public static final String SERIALIZED_NAME_NETWORK_END_BLACKOUT_IMAGE = "NetworkEndBlackoutImage";
  @SerializedName(SERIALIZED_NAME_NETWORK_END_BLACKOUT_IMAGE)
  private BlackoutSlateNetworkEndBlackoutImage networkEndBlackoutImage;

  public static final String SERIALIZED_NAME_NETWORK_ID = "NetworkId";
  @SerializedName(SERIALIZED_NAME_NETWORK_ID)
  private String networkId;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private BlackoutSlateState state;

  public CreateChannelRequestEncoderSettingsBlackoutSlate() {
  }

  public CreateChannelRequestEncoderSettingsBlackoutSlate blackoutSlateImage(BlackoutSlateBlackoutSlateImage blackoutSlateImage) {
    this.blackoutSlateImage = blackoutSlateImage;
    return this;
  }

  /**
   * Get blackoutSlateImage
   * @return blackoutSlateImage
   */
  @javax.annotation.Nullable
  public BlackoutSlateBlackoutSlateImage getBlackoutSlateImage() {
    return blackoutSlateImage;
  }

  public void setBlackoutSlateImage(BlackoutSlateBlackoutSlateImage blackoutSlateImage) {
    this.blackoutSlateImage = blackoutSlateImage;
  }


  public CreateChannelRequestEncoderSettingsBlackoutSlate networkEndBlackout(BlackoutSlateNetworkEndBlackout networkEndBlackout) {
    this.networkEndBlackout = networkEndBlackout;
    return this;
  }

  /**
   * Get networkEndBlackout
   * @return networkEndBlackout
   */
  @javax.annotation.Nullable
  public BlackoutSlateNetworkEndBlackout getNetworkEndBlackout() {
    return networkEndBlackout;
  }

  public void setNetworkEndBlackout(BlackoutSlateNetworkEndBlackout networkEndBlackout) {
    this.networkEndBlackout = networkEndBlackout;
  }


  public CreateChannelRequestEncoderSettingsBlackoutSlate networkEndBlackoutImage(BlackoutSlateNetworkEndBlackoutImage networkEndBlackoutImage) {
    this.networkEndBlackoutImage = networkEndBlackoutImage;
    return this;
  }

  /**
   * Get networkEndBlackoutImage
   * @return networkEndBlackoutImage
   */
  @javax.annotation.Nullable
  public BlackoutSlateNetworkEndBlackoutImage getNetworkEndBlackoutImage() {
    return networkEndBlackoutImage;
  }

  public void setNetworkEndBlackoutImage(BlackoutSlateNetworkEndBlackoutImage networkEndBlackoutImage) {
    this.networkEndBlackoutImage = networkEndBlackoutImage;
  }


  public CreateChannelRequestEncoderSettingsBlackoutSlate networkId(String networkId) {
    this.networkId = networkId;
    return this;
  }

  /**
   * Get networkId
   * @return networkId
   */
  @javax.annotation.Nullable
  public String getNetworkId() {
    return networkId;
  }

  public void setNetworkId(String networkId) {
    this.networkId = networkId;
  }


  public CreateChannelRequestEncoderSettingsBlackoutSlate state(BlackoutSlateState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public BlackoutSlateState getState() {
    return state;
  }

  public void setState(BlackoutSlateState state) {
    this.state = state;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateChannelRequestEncoderSettingsBlackoutSlate createChannelRequestEncoderSettingsBlackoutSlate = (CreateChannelRequestEncoderSettingsBlackoutSlate) o;
    return Objects.equals(this.blackoutSlateImage, createChannelRequestEncoderSettingsBlackoutSlate.blackoutSlateImage) &&
        Objects.equals(this.networkEndBlackout, createChannelRequestEncoderSettingsBlackoutSlate.networkEndBlackout) &&
        Objects.equals(this.networkEndBlackoutImage, createChannelRequestEncoderSettingsBlackoutSlate.networkEndBlackoutImage) &&
        Objects.equals(this.networkId, createChannelRequestEncoderSettingsBlackoutSlate.networkId) &&
        Objects.equals(this.state, createChannelRequestEncoderSettingsBlackoutSlate.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blackoutSlateImage, networkEndBlackout, networkEndBlackoutImage, networkId, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateChannelRequestEncoderSettingsBlackoutSlate {\n");
    sb.append("    blackoutSlateImage: ").append(toIndentedString(blackoutSlateImage)).append("\n");
    sb.append("    networkEndBlackout: ").append(toIndentedString(networkEndBlackout)).append("\n");
    sb.append("    networkEndBlackoutImage: ").append(toIndentedString(networkEndBlackoutImage)).append("\n");
    sb.append("    networkId: ").append(toIndentedString(networkId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BlackoutSlateImage");
    openapiFields.add("NetworkEndBlackout");
    openapiFields.add("NetworkEndBlackoutImage");
    openapiFields.add("NetworkId");
    openapiFields.add("State");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateChannelRequestEncoderSettingsBlackoutSlate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateChannelRequestEncoderSettingsBlackoutSlate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateChannelRequestEncoderSettingsBlackoutSlate is not found in the empty JSON string", CreateChannelRequestEncoderSettingsBlackoutSlate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateChannelRequestEncoderSettingsBlackoutSlate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateChannelRequestEncoderSettingsBlackoutSlate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `BlackoutSlateImage`
      if (jsonObj.get("BlackoutSlateImage") != null && !jsonObj.get("BlackoutSlateImage").isJsonNull()) {
        BlackoutSlateBlackoutSlateImage.validateJsonElement(jsonObj.get("BlackoutSlateImage"));
      }
      // validate the optional field `NetworkEndBlackout`
      if (jsonObj.get("NetworkEndBlackout") != null && !jsonObj.get("NetworkEndBlackout").isJsonNull()) {
        BlackoutSlateNetworkEndBlackout.validateJsonElement(jsonObj.get("NetworkEndBlackout"));
      }
      // validate the optional field `NetworkEndBlackoutImage`
      if (jsonObj.get("NetworkEndBlackoutImage") != null && !jsonObj.get("NetworkEndBlackoutImage").isJsonNull()) {
        BlackoutSlateNetworkEndBlackoutImage.validateJsonElement(jsonObj.get("NetworkEndBlackoutImage"));
      }
      // validate the optional field `NetworkId`
      if (jsonObj.get("NetworkId") != null && !jsonObj.get("NetworkId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NetworkId"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        BlackoutSlateState.validateJsonElement(jsonObj.get("State"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateChannelRequestEncoderSettingsBlackoutSlate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateChannelRequestEncoderSettingsBlackoutSlate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateChannelRequestEncoderSettingsBlackoutSlate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateChannelRequestEncoderSettingsBlackoutSlate.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateChannelRequestEncoderSettingsBlackoutSlate>() {
           @Override
           public void write(JsonWriter out, CreateChannelRequestEncoderSettingsBlackoutSlate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateChannelRequestEncoderSettingsBlackoutSlate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateChannelRequestEncoderSettingsBlackoutSlate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateChannelRequestEncoderSettingsBlackoutSlate
   * @throws IOException if the JSON string is invalid with respect to CreateChannelRequestEncoderSettingsBlackoutSlate
   */
  public static CreateChannelRequestEncoderSettingsBlackoutSlate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateChannelRequestEncoderSettingsBlackoutSlate.class);
  }

  /**
   * Convert an instance of CreateChannelRequestEncoderSettingsBlackoutSlate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

