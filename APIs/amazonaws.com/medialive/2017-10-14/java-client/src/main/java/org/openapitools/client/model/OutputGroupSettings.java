/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.OutputGroupSettingsArchiveGroupSettings;
import org.openapitools.client.model.OutputGroupSettingsFrameCaptureGroupSettings;
import org.openapitools.client.model.OutputGroupSettingsHlsGroupSettings;
import org.openapitools.client.model.OutputGroupSettingsMediaPackageGroupSettings;
import org.openapitools.client.model.OutputGroupSettingsMsSmoothGroupSettings;
import org.openapitools.client.model.OutputGroupSettingsRtmpGroupSettings;
import org.openapitools.client.model.OutputGroupSettingsUdpGroupSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Output Group Settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OutputGroupSettings {
  public static final String SERIALIZED_NAME_ARCHIVE_GROUP_SETTINGS = "ArchiveGroupSettings";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_GROUP_SETTINGS)
  private OutputGroupSettingsArchiveGroupSettings archiveGroupSettings;

  public static final String SERIALIZED_NAME_FRAME_CAPTURE_GROUP_SETTINGS = "FrameCaptureGroupSettings";
  @SerializedName(SERIALIZED_NAME_FRAME_CAPTURE_GROUP_SETTINGS)
  private OutputGroupSettingsFrameCaptureGroupSettings frameCaptureGroupSettings;

  public static final String SERIALIZED_NAME_HLS_GROUP_SETTINGS = "HlsGroupSettings";
  @SerializedName(SERIALIZED_NAME_HLS_GROUP_SETTINGS)
  private OutputGroupSettingsHlsGroupSettings hlsGroupSettings;

  public static final String SERIALIZED_NAME_MEDIA_PACKAGE_GROUP_SETTINGS = "MediaPackageGroupSettings";
  @SerializedName(SERIALIZED_NAME_MEDIA_PACKAGE_GROUP_SETTINGS)
  private OutputGroupSettingsMediaPackageGroupSettings mediaPackageGroupSettings;

  public static final String SERIALIZED_NAME_MS_SMOOTH_GROUP_SETTINGS = "MsSmoothGroupSettings";
  @SerializedName(SERIALIZED_NAME_MS_SMOOTH_GROUP_SETTINGS)
  private OutputGroupSettingsMsSmoothGroupSettings msSmoothGroupSettings;

  public static final String SERIALIZED_NAME_MULTIPLEX_GROUP_SETTINGS = "MultiplexGroupSettings";
  @SerializedName(SERIALIZED_NAME_MULTIPLEX_GROUP_SETTINGS)
  private Object multiplexGroupSettings;

  public static final String SERIALIZED_NAME_RTMP_GROUP_SETTINGS = "RtmpGroupSettings";
  @SerializedName(SERIALIZED_NAME_RTMP_GROUP_SETTINGS)
  private OutputGroupSettingsRtmpGroupSettings rtmpGroupSettings;

  public static final String SERIALIZED_NAME_UDP_GROUP_SETTINGS = "UdpGroupSettings";
  @SerializedName(SERIALIZED_NAME_UDP_GROUP_SETTINGS)
  private OutputGroupSettingsUdpGroupSettings udpGroupSettings;

  public OutputGroupSettings() {
  }

  public OutputGroupSettings archiveGroupSettings(OutputGroupSettingsArchiveGroupSettings archiveGroupSettings) {
    this.archiveGroupSettings = archiveGroupSettings;
    return this;
  }

  /**
   * Get archiveGroupSettings
   * @return archiveGroupSettings
   */
  @javax.annotation.Nullable
  public OutputGroupSettingsArchiveGroupSettings getArchiveGroupSettings() {
    return archiveGroupSettings;
  }

  public void setArchiveGroupSettings(OutputGroupSettingsArchiveGroupSettings archiveGroupSettings) {
    this.archiveGroupSettings = archiveGroupSettings;
  }


  public OutputGroupSettings frameCaptureGroupSettings(OutputGroupSettingsFrameCaptureGroupSettings frameCaptureGroupSettings) {
    this.frameCaptureGroupSettings = frameCaptureGroupSettings;
    return this;
  }

  /**
   * Get frameCaptureGroupSettings
   * @return frameCaptureGroupSettings
   */
  @javax.annotation.Nullable
  public OutputGroupSettingsFrameCaptureGroupSettings getFrameCaptureGroupSettings() {
    return frameCaptureGroupSettings;
  }

  public void setFrameCaptureGroupSettings(OutputGroupSettingsFrameCaptureGroupSettings frameCaptureGroupSettings) {
    this.frameCaptureGroupSettings = frameCaptureGroupSettings;
  }


  public OutputGroupSettings hlsGroupSettings(OutputGroupSettingsHlsGroupSettings hlsGroupSettings) {
    this.hlsGroupSettings = hlsGroupSettings;
    return this;
  }

  /**
   * Get hlsGroupSettings
   * @return hlsGroupSettings
   */
  @javax.annotation.Nullable
  public OutputGroupSettingsHlsGroupSettings getHlsGroupSettings() {
    return hlsGroupSettings;
  }

  public void setHlsGroupSettings(OutputGroupSettingsHlsGroupSettings hlsGroupSettings) {
    this.hlsGroupSettings = hlsGroupSettings;
  }


  public OutputGroupSettings mediaPackageGroupSettings(OutputGroupSettingsMediaPackageGroupSettings mediaPackageGroupSettings) {
    this.mediaPackageGroupSettings = mediaPackageGroupSettings;
    return this;
  }

  /**
   * Get mediaPackageGroupSettings
   * @return mediaPackageGroupSettings
   */
  @javax.annotation.Nullable
  public OutputGroupSettingsMediaPackageGroupSettings getMediaPackageGroupSettings() {
    return mediaPackageGroupSettings;
  }

  public void setMediaPackageGroupSettings(OutputGroupSettingsMediaPackageGroupSettings mediaPackageGroupSettings) {
    this.mediaPackageGroupSettings = mediaPackageGroupSettings;
  }


  public OutputGroupSettings msSmoothGroupSettings(OutputGroupSettingsMsSmoothGroupSettings msSmoothGroupSettings) {
    this.msSmoothGroupSettings = msSmoothGroupSettings;
    return this;
  }

  /**
   * Get msSmoothGroupSettings
   * @return msSmoothGroupSettings
   */
  @javax.annotation.Nullable
  public OutputGroupSettingsMsSmoothGroupSettings getMsSmoothGroupSettings() {
    return msSmoothGroupSettings;
  }

  public void setMsSmoothGroupSettings(OutputGroupSettingsMsSmoothGroupSettings msSmoothGroupSettings) {
    this.msSmoothGroupSettings = msSmoothGroupSettings;
  }


  public OutputGroupSettings multiplexGroupSettings(Object multiplexGroupSettings) {
    this.multiplexGroupSettings = multiplexGroupSettings;
    return this;
  }

  /**
   * Get multiplexGroupSettings
   * @return multiplexGroupSettings
   */
  @javax.annotation.Nullable
  public Object getMultiplexGroupSettings() {
    return multiplexGroupSettings;
  }

  public void setMultiplexGroupSettings(Object multiplexGroupSettings) {
    this.multiplexGroupSettings = multiplexGroupSettings;
  }


  public OutputGroupSettings rtmpGroupSettings(OutputGroupSettingsRtmpGroupSettings rtmpGroupSettings) {
    this.rtmpGroupSettings = rtmpGroupSettings;
    return this;
  }

  /**
   * Get rtmpGroupSettings
   * @return rtmpGroupSettings
   */
  @javax.annotation.Nullable
  public OutputGroupSettingsRtmpGroupSettings getRtmpGroupSettings() {
    return rtmpGroupSettings;
  }

  public void setRtmpGroupSettings(OutputGroupSettingsRtmpGroupSettings rtmpGroupSettings) {
    this.rtmpGroupSettings = rtmpGroupSettings;
  }


  public OutputGroupSettings udpGroupSettings(OutputGroupSettingsUdpGroupSettings udpGroupSettings) {
    this.udpGroupSettings = udpGroupSettings;
    return this;
  }

  /**
   * Get udpGroupSettings
   * @return udpGroupSettings
   */
  @javax.annotation.Nullable
  public OutputGroupSettingsUdpGroupSettings getUdpGroupSettings() {
    return udpGroupSettings;
  }

  public void setUdpGroupSettings(OutputGroupSettingsUdpGroupSettings udpGroupSettings) {
    this.udpGroupSettings = udpGroupSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputGroupSettings outputGroupSettings = (OutputGroupSettings) o;
    return Objects.equals(this.archiveGroupSettings, outputGroupSettings.archiveGroupSettings) &&
        Objects.equals(this.frameCaptureGroupSettings, outputGroupSettings.frameCaptureGroupSettings) &&
        Objects.equals(this.hlsGroupSettings, outputGroupSettings.hlsGroupSettings) &&
        Objects.equals(this.mediaPackageGroupSettings, outputGroupSettings.mediaPackageGroupSettings) &&
        Objects.equals(this.msSmoothGroupSettings, outputGroupSettings.msSmoothGroupSettings) &&
        Objects.equals(this.multiplexGroupSettings, outputGroupSettings.multiplexGroupSettings) &&
        Objects.equals(this.rtmpGroupSettings, outputGroupSettings.rtmpGroupSettings) &&
        Objects.equals(this.udpGroupSettings, outputGroupSettings.udpGroupSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(archiveGroupSettings, frameCaptureGroupSettings, hlsGroupSettings, mediaPackageGroupSettings, msSmoothGroupSettings, multiplexGroupSettings, rtmpGroupSettings, udpGroupSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputGroupSettings {\n");
    sb.append("    archiveGroupSettings: ").append(toIndentedString(archiveGroupSettings)).append("\n");
    sb.append("    frameCaptureGroupSettings: ").append(toIndentedString(frameCaptureGroupSettings)).append("\n");
    sb.append("    hlsGroupSettings: ").append(toIndentedString(hlsGroupSettings)).append("\n");
    sb.append("    mediaPackageGroupSettings: ").append(toIndentedString(mediaPackageGroupSettings)).append("\n");
    sb.append("    msSmoothGroupSettings: ").append(toIndentedString(msSmoothGroupSettings)).append("\n");
    sb.append("    multiplexGroupSettings: ").append(toIndentedString(multiplexGroupSettings)).append("\n");
    sb.append("    rtmpGroupSettings: ").append(toIndentedString(rtmpGroupSettings)).append("\n");
    sb.append("    udpGroupSettings: ").append(toIndentedString(udpGroupSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ArchiveGroupSettings");
    openapiFields.add("FrameCaptureGroupSettings");
    openapiFields.add("HlsGroupSettings");
    openapiFields.add("MediaPackageGroupSettings");
    openapiFields.add("MsSmoothGroupSettings");
    openapiFields.add("MultiplexGroupSettings");
    openapiFields.add("RtmpGroupSettings");
    openapiFields.add("UdpGroupSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OutputGroupSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OutputGroupSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OutputGroupSettings is not found in the empty JSON string", OutputGroupSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OutputGroupSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OutputGroupSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ArchiveGroupSettings`
      if (jsonObj.get("ArchiveGroupSettings") != null && !jsonObj.get("ArchiveGroupSettings").isJsonNull()) {
        OutputGroupSettingsArchiveGroupSettings.validateJsonElement(jsonObj.get("ArchiveGroupSettings"));
      }
      // validate the optional field `FrameCaptureGroupSettings`
      if (jsonObj.get("FrameCaptureGroupSettings") != null && !jsonObj.get("FrameCaptureGroupSettings").isJsonNull()) {
        OutputGroupSettingsFrameCaptureGroupSettings.validateJsonElement(jsonObj.get("FrameCaptureGroupSettings"));
      }
      // validate the optional field `HlsGroupSettings`
      if (jsonObj.get("HlsGroupSettings") != null && !jsonObj.get("HlsGroupSettings").isJsonNull()) {
        OutputGroupSettingsHlsGroupSettings.validateJsonElement(jsonObj.get("HlsGroupSettings"));
      }
      // validate the optional field `MediaPackageGroupSettings`
      if (jsonObj.get("MediaPackageGroupSettings") != null && !jsonObj.get("MediaPackageGroupSettings").isJsonNull()) {
        OutputGroupSettingsMediaPackageGroupSettings.validateJsonElement(jsonObj.get("MediaPackageGroupSettings"));
      }
      // validate the optional field `MsSmoothGroupSettings`
      if (jsonObj.get("MsSmoothGroupSettings") != null && !jsonObj.get("MsSmoothGroupSettings").isJsonNull()) {
        OutputGroupSettingsMsSmoothGroupSettings.validateJsonElement(jsonObj.get("MsSmoothGroupSettings"));
      }
      // validate the optional field `MultiplexGroupSettings`
      if (jsonObj.get("MultiplexGroupSettings") != null && !jsonObj.get("MultiplexGroupSettings").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("MultiplexGroupSettings"));
      }
      // validate the optional field `RtmpGroupSettings`
      if (jsonObj.get("RtmpGroupSettings") != null && !jsonObj.get("RtmpGroupSettings").isJsonNull()) {
        OutputGroupSettingsRtmpGroupSettings.validateJsonElement(jsonObj.get("RtmpGroupSettings"));
      }
      // validate the optional field `UdpGroupSettings`
      if (jsonObj.get("UdpGroupSettings") != null && !jsonObj.get("UdpGroupSettings").isJsonNull()) {
        OutputGroupSettingsUdpGroupSettings.validateJsonElement(jsonObj.get("UdpGroupSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OutputGroupSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OutputGroupSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OutputGroupSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OutputGroupSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<OutputGroupSettings>() {
           @Override
           public void write(JsonWriter out, OutputGroupSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OutputGroupSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OutputGroupSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OutputGroupSettings
   * @throws IOException if the JSON string is invalid with respect to OutputGroupSettings
   */
  public static OutputGroupSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OutputGroupSettings.class);
  }

  /**
   * Convert an instance of OutputGroupSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

