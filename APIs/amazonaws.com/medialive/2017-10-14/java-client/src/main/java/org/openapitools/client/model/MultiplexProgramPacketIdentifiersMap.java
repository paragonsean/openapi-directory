/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Packet identifiers map for a given Multiplex program.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MultiplexProgramPacketIdentifiersMap {
  public static final String SERIALIZED_NAME_AUDIO_PIDS = "AudioPids";
  @SerializedName(SERIALIZED_NAME_AUDIO_PIDS)
  private List audioPids;

  public static final String SERIALIZED_NAME_DVB_SUB_PIDS = "DvbSubPids";
  @SerializedName(SERIALIZED_NAME_DVB_SUB_PIDS)
  private List dvbSubPids;

  public static final String SERIALIZED_NAME_DVB_TELETEXT_PID = "DvbTeletextPid";
  @SerializedName(SERIALIZED_NAME_DVB_TELETEXT_PID)
  private Integer dvbTeletextPid;

  public static final String SERIALIZED_NAME_ETV_PLATFORM_PID = "EtvPlatformPid";
  @SerializedName(SERIALIZED_NAME_ETV_PLATFORM_PID)
  private Integer etvPlatformPid;

  public static final String SERIALIZED_NAME_ETV_SIGNAL_PID = "EtvSignalPid";
  @SerializedName(SERIALIZED_NAME_ETV_SIGNAL_PID)
  private Integer etvSignalPid;

  public static final String SERIALIZED_NAME_KLV_DATA_PIDS = "KlvDataPids";
  @SerializedName(SERIALIZED_NAME_KLV_DATA_PIDS)
  private List klvDataPids;

  public static final String SERIALIZED_NAME_PCR_PID = "PcrPid";
  @SerializedName(SERIALIZED_NAME_PCR_PID)
  private Integer pcrPid;

  public static final String SERIALIZED_NAME_PMT_PID = "PmtPid";
  @SerializedName(SERIALIZED_NAME_PMT_PID)
  private Integer pmtPid;

  public static final String SERIALIZED_NAME_PRIVATE_METADATA_PID = "PrivateMetadataPid";
  @SerializedName(SERIALIZED_NAME_PRIVATE_METADATA_PID)
  private Integer privateMetadataPid;

  public static final String SERIALIZED_NAME_SCTE27_PIDS = "Scte27Pids";
  @SerializedName(SERIALIZED_NAME_SCTE27_PIDS)
  private List scte27Pids;

  public static final String SERIALIZED_NAME_SCTE35_PID = "Scte35Pid";
  @SerializedName(SERIALIZED_NAME_SCTE35_PID)
  private Integer scte35Pid;

  public static final String SERIALIZED_NAME_TIMED_METADATA_PID = "TimedMetadataPid";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_PID)
  private Integer timedMetadataPid;

  public static final String SERIALIZED_NAME_VIDEO_PID = "VideoPid";
  @SerializedName(SERIALIZED_NAME_VIDEO_PID)
  private Integer videoPid;

  public MultiplexProgramPacketIdentifiersMap() {
  }

  public MultiplexProgramPacketIdentifiersMap audioPids(List audioPids) {
    this.audioPids = audioPids;
    return this;
  }

  /**
   * Get audioPids
   * @return audioPids
   */
  @javax.annotation.Nullable
  public List getAudioPids() {
    return audioPids;
  }

  public void setAudioPids(List audioPids) {
    this.audioPids = audioPids;
  }


  public MultiplexProgramPacketIdentifiersMap dvbSubPids(List dvbSubPids) {
    this.dvbSubPids = dvbSubPids;
    return this;
  }

  /**
   * Get dvbSubPids
   * @return dvbSubPids
   */
  @javax.annotation.Nullable
  public List getDvbSubPids() {
    return dvbSubPids;
  }

  public void setDvbSubPids(List dvbSubPids) {
    this.dvbSubPids = dvbSubPids;
  }


  public MultiplexProgramPacketIdentifiersMap dvbTeletextPid(Integer dvbTeletextPid) {
    this.dvbTeletextPid = dvbTeletextPid;
    return this;
  }

  /**
   * Get dvbTeletextPid
   * @return dvbTeletextPid
   */
  @javax.annotation.Nullable
  public Integer getDvbTeletextPid() {
    return dvbTeletextPid;
  }

  public void setDvbTeletextPid(Integer dvbTeletextPid) {
    this.dvbTeletextPid = dvbTeletextPid;
  }


  public MultiplexProgramPacketIdentifiersMap etvPlatformPid(Integer etvPlatformPid) {
    this.etvPlatformPid = etvPlatformPid;
    return this;
  }

  /**
   * Get etvPlatformPid
   * @return etvPlatformPid
   */
  @javax.annotation.Nullable
  public Integer getEtvPlatformPid() {
    return etvPlatformPid;
  }

  public void setEtvPlatformPid(Integer etvPlatformPid) {
    this.etvPlatformPid = etvPlatformPid;
  }


  public MultiplexProgramPacketIdentifiersMap etvSignalPid(Integer etvSignalPid) {
    this.etvSignalPid = etvSignalPid;
    return this;
  }

  /**
   * Get etvSignalPid
   * @return etvSignalPid
   */
  @javax.annotation.Nullable
  public Integer getEtvSignalPid() {
    return etvSignalPid;
  }

  public void setEtvSignalPid(Integer etvSignalPid) {
    this.etvSignalPid = etvSignalPid;
  }


  public MultiplexProgramPacketIdentifiersMap klvDataPids(List klvDataPids) {
    this.klvDataPids = klvDataPids;
    return this;
  }

  /**
   * Get klvDataPids
   * @return klvDataPids
   */
  @javax.annotation.Nullable
  public List getKlvDataPids() {
    return klvDataPids;
  }

  public void setKlvDataPids(List klvDataPids) {
    this.klvDataPids = klvDataPids;
  }


  public MultiplexProgramPacketIdentifiersMap pcrPid(Integer pcrPid) {
    this.pcrPid = pcrPid;
    return this;
  }

  /**
   * Get pcrPid
   * @return pcrPid
   */
  @javax.annotation.Nullable
  public Integer getPcrPid() {
    return pcrPid;
  }

  public void setPcrPid(Integer pcrPid) {
    this.pcrPid = pcrPid;
  }


  public MultiplexProgramPacketIdentifiersMap pmtPid(Integer pmtPid) {
    this.pmtPid = pmtPid;
    return this;
  }

  /**
   * Get pmtPid
   * @return pmtPid
   */
  @javax.annotation.Nullable
  public Integer getPmtPid() {
    return pmtPid;
  }

  public void setPmtPid(Integer pmtPid) {
    this.pmtPid = pmtPid;
  }


  public MultiplexProgramPacketIdentifiersMap privateMetadataPid(Integer privateMetadataPid) {
    this.privateMetadataPid = privateMetadataPid;
    return this;
  }

  /**
   * Get privateMetadataPid
   * @return privateMetadataPid
   */
  @javax.annotation.Nullable
  public Integer getPrivateMetadataPid() {
    return privateMetadataPid;
  }

  public void setPrivateMetadataPid(Integer privateMetadataPid) {
    this.privateMetadataPid = privateMetadataPid;
  }


  public MultiplexProgramPacketIdentifiersMap scte27Pids(List scte27Pids) {
    this.scte27Pids = scte27Pids;
    return this;
  }

  /**
   * Get scte27Pids
   * @return scte27Pids
   */
  @javax.annotation.Nullable
  public List getScte27Pids() {
    return scte27Pids;
  }

  public void setScte27Pids(List scte27Pids) {
    this.scte27Pids = scte27Pids;
  }


  public MultiplexProgramPacketIdentifiersMap scte35Pid(Integer scte35Pid) {
    this.scte35Pid = scte35Pid;
    return this;
  }

  /**
   * Get scte35Pid
   * @return scte35Pid
   */
  @javax.annotation.Nullable
  public Integer getScte35Pid() {
    return scte35Pid;
  }

  public void setScte35Pid(Integer scte35Pid) {
    this.scte35Pid = scte35Pid;
  }


  public MultiplexProgramPacketIdentifiersMap timedMetadataPid(Integer timedMetadataPid) {
    this.timedMetadataPid = timedMetadataPid;
    return this;
  }

  /**
   * Get timedMetadataPid
   * @return timedMetadataPid
   */
  @javax.annotation.Nullable
  public Integer getTimedMetadataPid() {
    return timedMetadataPid;
  }

  public void setTimedMetadataPid(Integer timedMetadataPid) {
    this.timedMetadataPid = timedMetadataPid;
  }


  public MultiplexProgramPacketIdentifiersMap videoPid(Integer videoPid) {
    this.videoPid = videoPid;
    return this;
  }

  /**
   * Get videoPid
   * @return videoPid
   */
  @javax.annotation.Nullable
  public Integer getVideoPid() {
    return videoPid;
  }

  public void setVideoPid(Integer videoPid) {
    this.videoPid = videoPid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultiplexProgramPacketIdentifiersMap multiplexProgramPacketIdentifiersMap = (MultiplexProgramPacketIdentifiersMap) o;
    return Objects.equals(this.audioPids, multiplexProgramPacketIdentifiersMap.audioPids) &&
        Objects.equals(this.dvbSubPids, multiplexProgramPacketIdentifiersMap.dvbSubPids) &&
        Objects.equals(this.dvbTeletextPid, multiplexProgramPacketIdentifiersMap.dvbTeletextPid) &&
        Objects.equals(this.etvPlatformPid, multiplexProgramPacketIdentifiersMap.etvPlatformPid) &&
        Objects.equals(this.etvSignalPid, multiplexProgramPacketIdentifiersMap.etvSignalPid) &&
        Objects.equals(this.klvDataPids, multiplexProgramPacketIdentifiersMap.klvDataPids) &&
        Objects.equals(this.pcrPid, multiplexProgramPacketIdentifiersMap.pcrPid) &&
        Objects.equals(this.pmtPid, multiplexProgramPacketIdentifiersMap.pmtPid) &&
        Objects.equals(this.privateMetadataPid, multiplexProgramPacketIdentifiersMap.privateMetadataPid) &&
        Objects.equals(this.scte27Pids, multiplexProgramPacketIdentifiersMap.scte27Pids) &&
        Objects.equals(this.scte35Pid, multiplexProgramPacketIdentifiersMap.scte35Pid) &&
        Objects.equals(this.timedMetadataPid, multiplexProgramPacketIdentifiersMap.timedMetadataPid) &&
        Objects.equals(this.videoPid, multiplexProgramPacketIdentifiersMap.videoPid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioPids, dvbSubPids, dvbTeletextPid, etvPlatformPid, etvSignalPid, klvDataPids, pcrPid, pmtPid, privateMetadataPid, scte27Pids, scte35Pid, timedMetadataPid, videoPid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultiplexProgramPacketIdentifiersMap {\n");
    sb.append("    audioPids: ").append(toIndentedString(audioPids)).append("\n");
    sb.append("    dvbSubPids: ").append(toIndentedString(dvbSubPids)).append("\n");
    sb.append("    dvbTeletextPid: ").append(toIndentedString(dvbTeletextPid)).append("\n");
    sb.append("    etvPlatformPid: ").append(toIndentedString(etvPlatformPid)).append("\n");
    sb.append("    etvSignalPid: ").append(toIndentedString(etvSignalPid)).append("\n");
    sb.append("    klvDataPids: ").append(toIndentedString(klvDataPids)).append("\n");
    sb.append("    pcrPid: ").append(toIndentedString(pcrPid)).append("\n");
    sb.append("    pmtPid: ").append(toIndentedString(pmtPid)).append("\n");
    sb.append("    privateMetadataPid: ").append(toIndentedString(privateMetadataPid)).append("\n");
    sb.append("    scte27Pids: ").append(toIndentedString(scte27Pids)).append("\n");
    sb.append("    scte35Pid: ").append(toIndentedString(scte35Pid)).append("\n");
    sb.append("    timedMetadataPid: ").append(toIndentedString(timedMetadataPid)).append("\n");
    sb.append("    videoPid: ").append(toIndentedString(videoPid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AudioPids");
    openapiFields.add("DvbSubPids");
    openapiFields.add("DvbTeletextPid");
    openapiFields.add("EtvPlatformPid");
    openapiFields.add("EtvSignalPid");
    openapiFields.add("KlvDataPids");
    openapiFields.add("PcrPid");
    openapiFields.add("PmtPid");
    openapiFields.add("PrivateMetadataPid");
    openapiFields.add("Scte27Pids");
    openapiFields.add("Scte35Pid");
    openapiFields.add("TimedMetadataPid");
    openapiFields.add("VideoPid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MultiplexProgramPacketIdentifiersMap
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MultiplexProgramPacketIdentifiersMap.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MultiplexProgramPacketIdentifiersMap is not found in the empty JSON string", MultiplexProgramPacketIdentifiersMap.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MultiplexProgramPacketIdentifiersMap.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MultiplexProgramPacketIdentifiersMap` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AudioPids`
      if (jsonObj.get("AudioPids") != null && !jsonObj.get("AudioPids").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AudioPids"));
      }
      // validate the optional field `DvbSubPids`
      if (jsonObj.get("DvbSubPids") != null && !jsonObj.get("DvbSubPids").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DvbSubPids"));
      }
      // validate the optional field `DvbTeletextPid`
      if (jsonObj.get("DvbTeletextPid") != null && !jsonObj.get("DvbTeletextPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DvbTeletextPid"));
      }
      // validate the optional field `EtvPlatformPid`
      if (jsonObj.get("EtvPlatformPid") != null && !jsonObj.get("EtvPlatformPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EtvPlatformPid"));
      }
      // validate the optional field `EtvSignalPid`
      if (jsonObj.get("EtvSignalPid") != null && !jsonObj.get("EtvSignalPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EtvSignalPid"));
      }
      // validate the optional field `KlvDataPids`
      if (jsonObj.get("KlvDataPids") != null && !jsonObj.get("KlvDataPids").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("KlvDataPids"));
      }
      // validate the optional field `PcrPid`
      if (jsonObj.get("PcrPid") != null && !jsonObj.get("PcrPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PcrPid"));
      }
      // validate the optional field `PmtPid`
      if (jsonObj.get("PmtPid") != null && !jsonObj.get("PmtPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PmtPid"));
      }
      // validate the optional field `PrivateMetadataPid`
      if (jsonObj.get("PrivateMetadataPid") != null && !jsonObj.get("PrivateMetadataPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PrivateMetadataPid"));
      }
      // validate the optional field `Scte27Pids`
      if (jsonObj.get("Scte27Pids") != null && !jsonObj.get("Scte27Pids").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Scte27Pids"));
      }
      // validate the optional field `Scte35Pid`
      if (jsonObj.get("Scte35Pid") != null && !jsonObj.get("Scte35Pid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Scte35Pid"));
      }
      // validate the optional field `TimedMetadataPid`
      if (jsonObj.get("TimedMetadataPid") != null && !jsonObj.get("TimedMetadataPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimedMetadataPid"));
      }
      // validate the optional field `VideoPid`
      if (jsonObj.get("VideoPid") != null && !jsonObj.get("VideoPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("VideoPid"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MultiplexProgramPacketIdentifiersMap.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MultiplexProgramPacketIdentifiersMap' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MultiplexProgramPacketIdentifiersMap> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MultiplexProgramPacketIdentifiersMap.class));

       return (TypeAdapter<T>) new TypeAdapter<MultiplexProgramPacketIdentifiersMap>() {
           @Override
           public void write(JsonWriter out, MultiplexProgramPacketIdentifiersMap value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MultiplexProgramPacketIdentifiersMap read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MultiplexProgramPacketIdentifiersMap given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MultiplexProgramPacketIdentifiersMap
   * @throws IOException if the JSON string is invalid with respect to MultiplexProgramPacketIdentifiersMap
   */
  public static MultiplexProgramPacketIdentifiersMap fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MultiplexProgramPacketIdentifiersMap.class);
  }

  /**
   * Convert an instance of MultiplexProgramPacketIdentifiersMap to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

