/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.M3u8NielsenId3Behavior;
import org.openapitools.client.model.M3u8PcrControl;
import org.openapitools.client.model.M3u8Scte35Behavior;
import org.openapitools.client.model.M3u8TimedMetadataBehavior;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StandardHlsSettingsM3u8Settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StandardHlsSettingsM3u8Settings {
  public static final String SERIALIZED_NAME_AUDIO_FRAMES_PER_PES = "AudioFramesPerPes";
  @SerializedName(SERIALIZED_NAME_AUDIO_FRAMES_PER_PES)
  private Integer audioFramesPerPes;

  public static final String SERIALIZED_NAME_AUDIO_PIDS = "AudioPids";
  @SerializedName(SERIALIZED_NAME_AUDIO_PIDS)
  private String audioPids;

  public static final String SERIALIZED_NAME_ECM_PID = "EcmPid";
  @SerializedName(SERIALIZED_NAME_ECM_PID)
  private String ecmPid;

  public static final String SERIALIZED_NAME_NIELSEN_ID3_BEHAVIOR = "NielsenId3Behavior";
  @SerializedName(SERIALIZED_NAME_NIELSEN_ID3_BEHAVIOR)
  private M3u8NielsenId3Behavior nielsenId3Behavior;

  public static final String SERIALIZED_NAME_PAT_INTERVAL = "PatInterval";
  @SerializedName(SERIALIZED_NAME_PAT_INTERVAL)
  private Integer patInterval;

  public static final String SERIALIZED_NAME_PCR_CONTROL = "PcrControl";
  @SerializedName(SERIALIZED_NAME_PCR_CONTROL)
  private M3u8PcrControl pcrControl;

  public static final String SERIALIZED_NAME_PCR_PERIOD = "PcrPeriod";
  @SerializedName(SERIALIZED_NAME_PCR_PERIOD)
  private Integer pcrPeriod;

  public static final String SERIALIZED_NAME_PCR_PID = "PcrPid";
  @SerializedName(SERIALIZED_NAME_PCR_PID)
  private String pcrPid;

  public static final String SERIALIZED_NAME_PMT_INTERVAL = "PmtInterval";
  @SerializedName(SERIALIZED_NAME_PMT_INTERVAL)
  private Integer pmtInterval;

  public static final String SERIALIZED_NAME_PMT_PID = "PmtPid";
  @SerializedName(SERIALIZED_NAME_PMT_PID)
  private String pmtPid;

  public static final String SERIALIZED_NAME_PROGRAM_NUM = "ProgramNum";
  @SerializedName(SERIALIZED_NAME_PROGRAM_NUM)
  private Integer programNum;

  public static final String SERIALIZED_NAME_SCTE35_BEHAVIOR = "Scte35Behavior";
  @SerializedName(SERIALIZED_NAME_SCTE35_BEHAVIOR)
  private M3u8Scte35Behavior scte35Behavior;

  public static final String SERIALIZED_NAME_SCTE35_PID = "Scte35Pid";
  @SerializedName(SERIALIZED_NAME_SCTE35_PID)
  private String scte35Pid;

  public static final String SERIALIZED_NAME_TIMED_METADATA_BEHAVIOR = "TimedMetadataBehavior";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_BEHAVIOR)
  private M3u8TimedMetadataBehavior timedMetadataBehavior;

  public static final String SERIALIZED_NAME_TIMED_METADATA_PID = "TimedMetadataPid";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_PID)
  private String timedMetadataPid;

  public static final String SERIALIZED_NAME_TRANSPORT_STREAM_ID = "TransportStreamId";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_STREAM_ID)
  private Integer transportStreamId;

  public static final String SERIALIZED_NAME_VIDEO_PID = "VideoPid";
  @SerializedName(SERIALIZED_NAME_VIDEO_PID)
  private String videoPid;

  public StandardHlsSettingsM3u8Settings() {
  }

  public StandardHlsSettingsM3u8Settings audioFramesPerPes(Integer audioFramesPerPes) {
    this.audioFramesPerPes = audioFramesPerPes;
    return this;
  }

  /**
   * Get audioFramesPerPes
   * @return audioFramesPerPes
   */
  @javax.annotation.Nullable
  public Integer getAudioFramesPerPes() {
    return audioFramesPerPes;
  }

  public void setAudioFramesPerPes(Integer audioFramesPerPes) {
    this.audioFramesPerPes = audioFramesPerPes;
  }


  public StandardHlsSettingsM3u8Settings audioPids(String audioPids) {
    this.audioPids = audioPids;
    return this;
  }

  /**
   * Get audioPids
   * @return audioPids
   */
  @javax.annotation.Nullable
  public String getAudioPids() {
    return audioPids;
  }

  public void setAudioPids(String audioPids) {
    this.audioPids = audioPids;
  }


  public StandardHlsSettingsM3u8Settings ecmPid(String ecmPid) {
    this.ecmPid = ecmPid;
    return this;
  }

  /**
   * Get ecmPid
   * @return ecmPid
   */
  @javax.annotation.Nullable
  public String getEcmPid() {
    return ecmPid;
  }

  public void setEcmPid(String ecmPid) {
    this.ecmPid = ecmPid;
  }


  public StandardHlsSettingsM3u8Settings nielsenId3Behavior(M3u8NielsenId3Behavior nielsenId3Behavior) {
    this.nielsenId3Behavior = nielsenId3Behavior;
    return this;
  }

  /**
   * Get nielsenId3Behavior
   * @return nielsenId3Behavior
   */
  @javax.annotation.Nullable
  public M3u8NielsenId3Behavior getNielsenId3Behavior() {
    return nielsenId3Behavior;
  }

  public void setNielsenId3Behavior(M3u8NielsenId3Behavior nielsenId3Behavior) {
    this.nielsenId3Behavior = nielsenId3Behavior;
  }


  public StandardHlsSettingsM3u8Settings patInterval(Integer patInterval) {
    this.patInterval = patInterval;
    return this;
  }

  /**
   * Get patInterval
   * @return patInterval
   */
  @javax.annotation.Nullable
  public Integer getPatInterval() {
    return patInterval;
  }

  public void setPatInterval(Integer patInterval) {
    this.patInterval = patInterval;
  }


  public StandardHlsSettingsM3u8Settings pcrControl(M3u8PcrControl pcrControl) {
    this.pcrControl = pcrControl;
    return this;
  }

  /**
   * Get pcrControl
   * @return pcrControl
   */
  @javax.annotation.Nullable
  public M3u8PcrControl getPcrControl() {
    return pcrControl;
  }

  public void setPcrControl(M3u8PcrControl pcrControl) {
    this.pcrControl = pcrControl;
  }


  public StandardHlsSettingsM3u8Settings pcrPeriod(Integer pcrPeriod) {
    this.pcrPeriod = pcrPeriod;
    return this;
  }

  /**
   * Get pcrPeriod
   * @return pcrPeriod
   */
  @javax.annotation.Nullable
  public Integer getPcrPeriod() {
    return pcrPeriod;
  }

  public void setPcrPeriod(Integer pcrPeriod) {
    this.pcrPeriod = pcrPeriod;
  }


  public StandardHlsSettingsM3u8Settings pcrPid(String pcrPid) {
    this.pcrPid = pcrPid;
    return this;
  }

  /**
   * Get pcrPid
   * @return pcrPid
   */
  @javax.annotation.Nullable
  public String getPcrPid() {
    return pcrPid;
  }

  public void setPcrPid(String pcrPid) {
    this.pcrPid = pcrPid;
  }


  public StandardHlsSettingsM3u8Settings pmtInterval(Integer pmtInterval) {
    this.pmtInterval = pmtInterval;
    return this;
  }

  /**
   * Get pmtInterval
   * @return pmtInterval
   */
  @javax.annotation.Nullable
  public Integer getPmtInterval() {
    return pmtInterval;
  }

  public void setPmtInterval(Integer pmtInterval) {
    this.pmtInterval = pmtInterval;
  }


  public StandardHlsSettingsM3u8Settings pmtPid(String pmtPid) {
    this.pmtPid = pmtPid;
    return this;
  }

  /**
   * Get pmtPid
   * @return pmtPid
   */
  @javax.annotation.Nullable
  public String getPmtPid() {
    return pmtPid;
  }

  public void setPmtPid(String pmtPid) {
    this.pmtPid = pmtPid;
  }


  public StandardHlsSettingsM3u8Settings programNum(Integer programNum) {
    this.programNum = programNum;
    return this;
  }

  /**
   * Get programNum
   * @return programNum
   */
  @javax.annotation.Nullable
  public Integer getProgramNum() {
    return programNum;
  }

  public void setProgramNum(Integer programNum) {
    this.programNum = programNum;
  }


  public StandardHlsSettingsM3u8Settings scte35Behavior(M3u8Scte35Behavior scte35Behavior) {
    this.scte35Behavior = scte35Behavior;
    return this;
  }

  /**
   * Get scte35Behavior
   * @return scte35Behavior
   */
  @javax.annotation.Nullable
  public M3u8Scte35Behavior getScte35Behavior() {
    return scte35Behavior;
  }

  public void setScte35Behavior(M3u8Scte35Behavior scte35Behavior) {
    this.scte35Behavior = scte35Behavior;
  }


  public StandardHlsSettingsM3u8Settings scte35Pid(String scte35Pid) {
    this.scte35Pid = scte35Pid;
    return this;
  }

  /**
   * Get scte35Pid
   * @return scte35Pid
   */
  @javax.annotation.Nullable
  public String getScte35Pid() {
    return scte35Pid;
  }

  public void setScte35Pid(String scte35Pid) {
    this.scte35Pid = scte35Pid;
  }


  public StandardHlsSettingsM3u8Settings timedMetadataBehavior(M3u8TimedMetadataBehavior timedMetadataBehavior) {
    this.timedMetadataBehavior = timedMetadataBehavior;
    return this;
  }

  /**
   * Get timedMetadataBehavior
   * @return timedMetadataBehavior
   */
  @javax.annotation.Nullable
  public M3u8TimedMetadataBehavior getTimedMetadataBehavior() {
    return timedMetadataBehavior;
  }

  public void setTimedMetadataBehavior(M3u8TimedMetadataBehavior timedMetadataBehavior) {
    this.timedMetadataBehavior = timedMetadataBehavior;
  }


  public StandardHlsSettingsM3u8Settings timedMetadataPid(String timedMetadataPid) {
    this.timedMetadataPid = timedMetadataPid;
    return this;
  }

  /**
   * Get timedMetadataPid
   * @return timedMetadataPid
   */
  @javax.annotation.Nullable
  public String getTimedMetadataPid() {
    return timedMetadataPid;
  }

  public void setTimedMetadataPid(String timedMetadataPid) {
    this.timedMetadataPid = timedMetadataPid;
  }


  public StandardHlsSettingsM3u8Settings transportStreamId(Integer transportStreamId) {
    this.transportStreamId = transportStreamId;
    return this;
  }

  /**
   * Get transportStreamId
   * @return transportStreamId
   */
  @javax.annotation.Nullable
  public Integer getTransportStreamId() {
    return transportStreamId;
  }

  public void setTransportStreamId(Integer transportStreamId) {
    this.transportStreamId = transportStreamId;
  }


  public StandardHlsSettingsM3u8Settings videoPid(String videoPid) {
    this.videoPid = videoPid;
    return this;
  }

  /**
   * Get videoPid
   * @return videoPid
   */
  @javax.annotation.Nullable
  public String getVideoPid() {
    return videoPid;
  }

  public void setVideoPid(String videoPid) {
    this.videoPid = videoPid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StandardHlsSettingsM3u8Settings standardHlsSettingsM3u8Settings = (StandardHlsSettingsM3u8Settings) o;
    return Objects.equals(this.audioFramesPerPes, standardHlsSettingsM3u8Settings.audioFramesPerPes) &&
        Objects.equals(this.audioPids, standardHlsSettingsM3u8Settings.audioPids) &&
        Objects.equals(this.ecmPid, standardHlsSettingsM3u8Settings.ecmPid) &&
        Objects.equals(this.nielsenId3Behavior, standardHlsSettingsM3u8Settings.nielsenId3Behavior) &&
        Objects.equals(this.patInterval, standardHlsSettingsM3u8Settings.patInterval) &&
        Objects.equals(this.pcrControl, standardHlsSettingsM3u8Settings.pcrControl) &&
        Objects.equals(this.pcrPeriod, standardHlsSettingsM3u8Settings.pcrPeriod) &&
        Objects.equals(this.pcrPid, standardHlsSettingsM3u8Settings.pcrPid) &&
        Objects.equals(this.pmtInterval, standardHlsSettingsM3u8Settings.pmtInterval) &&
        Objects.equals(this.pmtPid, standardHlsSettingsM3u8Settings.pmtPid) &&
        Objects.equals(this.programNum, standardHlsSettingsM3u8Settings.programNum) &&
        Objects.equals(this.scte35Behavior, standardHlsSettingsM3u8Settings.scte35Behavior) &&
        Objects.equals(this.scte35Pid, standardHlsSettingsM3u8Settings.scte35Pid) &&
        Objects.equals(this.timedMetadataBehavior, standardHlsSettingsM3u8Settings.timedMetadataBehavior) &&
        Objects.equals(this.timedMetadataPid, standardHlsSettingsM3u8Settings.timedMetadataPid) &&
        Objects.equals(this.transportStreamId, standardHlsSettingsM3u8Settings.transportStreamId) &&
        Objects.equals(this.videoPid, standardHlsSettingsM3u8Settings.videoPid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioFramesPerPes, audioPids, ecmPid, nielsenId3Behavior, patInterval, pcrControl, pcrPeriod, pcrPid, pmtInterval, pmtPid, programNum, scte35Behavior, scte35Pid, timedMetadataBehavior, timedMetadataPid, transportStreamId, videoPid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StandardHlsSettingsM3u8Settings {\n");
    sb.append("    audioFramesPerPes: ").append(toIndentedString(audioFramesPerPes)).append("\n");
    sb.append("    audioPids: ").append(toIndentedString(audioPids)).append("\n");
    sb.append("    ecmPid: ").append(toIndentedString(ecmPid)).append("\n");
    sb.append("    nielsenId3Behavior: ").append(toIndentedString(nielsenId3Behavior)).append("\n");
    sb.append("    patInterval: ").append(toIndentedString(patInterval)).append("\n");
    sb.append("    pcrControl: ").append(toIndentedString(pcrControl)).append("\n");
    sb.append("    pcrPeriod: ").append(toIndentedString(pcrPeriod)).append("\n");
    sb.append("    pcrPid: ").append(toIndentedString(pcrPid)).append("\n");
    sb.append("    pmtInterval: ").append(toIndentedString(pmtInterval)).append("\n");
    sb.append("    pmtPid: ").append(toIndentedString(pmtPid)).append("\n");
    sb.append("    programNum: ").append(toIndentedString(programNum)).append("\n");
    sb.append("    scte35Behavior: ").append(toIndentedString(scte35Behavior)).append("\n");
    sb.append("    scte35Pid: ").append(toIndentedString(scte35Pid)).append("\n");
    sb.append("    timedMetadataBehavior: ").append(toIndentedString(timedMetadataBehavior)).append("\n");
    sb.append("    timedMetadataPid: ").append(toIndentedString(timedMetadataPid)).append("\n");
    sb.append("    transportStreamId: ").append(toIndentedString(transportStreamId)).append("\n");
    sb.append("    videoPid: ").append(toIndentedString(videoPid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AudioFramesPerPes");
    openapiFields.add("AudioPids");
    openapiFields.add("EcmPid");
    openapiFields.add("NielsenId3Behavior");
    openapiFields.add("PatInterval");
    openapiFields.add("PcrControl");
    openapiFields.add("PcrPeriod");
    openapiFields.add("PcrPid");
    openapiFields.add("PmtInterval");
    openapiFields.add("PmtPid");
    openapiFields.add("ProgramNum");
    openapiFields.add("Scte35Behavior");
    openapiFields.add("Scte35Pid");
    openapiFields.add("TimedMetadataBehavior");
    openapiFields.add("TimedMetadataPid");
    openapiFields.add("TransportStreamId");
    openapiFields.add("VideoPid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StandardHlsSettingsM3u8Settings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StandardHlsSettingsM3u8Settings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StandardHlsSettingsM3u8Settings is not found in the empty JSON string", StandardHlsSettingsM3u8Settings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StandardHlsSettingsM3u8Settings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StandardHlsSettingsM3u8Settings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AudioFramesPerPes`
      if (jsonObj.get("AudioFramesPerPes") != null && !jsonObj.get("AudioFramesPerPes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AudioFramesPerPes"));
      }
      // validate the optional field `AudioPids`
      if (jsonObj.get("AudioPids") != null && !jsonObj.get("AudioPids").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AudioPids"));
      }
      // validate the optional field `EcmPid`
      if (jsonObj.get("EcmPid") != null && !jsonObj.get("EcmPid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EcmPid"));
      }
      // validate the optional field `NielsenId3Behavior`
      if (jsonObj.get("NielsenId3Behavior") != null && !jsonObj.get("NielsenId3Behavior").isJsonNull()) {
        M3u8NielsenId3Behavior.validateJsonElement(jsonObj.get("NielsenId3Behavior"));
      }
      // validate the optional field `PatInterval`
      if (jsonObj.get("PatInterval") != null && !jsonObj.get("PatInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PatInterval"));
      }
      // validate the optional field `PcrControl`
      if (jsonObj.get("PcrControl") != null && !jsonObj.get("PcrControl").isJsonNull()) {
        M3u8PcrControl.validateJsonElement(jsonObj.get("PcrControl"));
      }
      // validate the optional field `PcrPeriod`
      if (jsonObj.get("PcrPeriod") != null && !jsonObj.get("PcrPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PcrPeriod"));
      }
      // validate the optional field `PcrPid`
      if (jsonObj.get("PcrPid") != null && !jsonObj.get("PcrPid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PcrPid"));
      }
      // validate the optional field `PmtInterval`
      if (jsonObj.get("PmtInterval") != null && !jsonObj.get("PmtInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PmtInterval"));
      }
      // validate the optional field `PmtPid`
      if (jsonObj.get("PmtPid") != null && !jsonObj.get("PmtPid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PmtPid"));
      }
      // validate the optional field `ProgramNum`
      if (jsonObj.get("ProgramNum") != null && !jsonObj.get("ProgramNum").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ProgramNum"));
      }
      // validate the optional field `Scte35Behavior`
      if (jsonObj.get("Scte35Behavior") != null && !jsonObj.get("Scte35Behavior").isJsonNull()) {
        M3u8Scte35Behavior.validateJsonElement(jsonObj.get("Scte35Behavior"));
      }
      // validate the optional field `Scte35Pid`
      if (jsonObj.get("Scte35Pid") != null && !jsonObj.get("Scte35Pid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Scte35Pid"));
      }
      // validate the optional field `TimedMetadataBehavior`
      if (jsonObj.get("TimedMetadataBehavior") != null && !jsonObj.get("TimedMetadataBehavior").isJsonNull()) {
        M3u8TimedMetadataBehavior.validateJsonElement(jsonObj.get("TimedMetadataBehavior"));
      }
      // validate the optional field `TimedMetadataPid`
      if (jsonObj.get("TimedMetadataPid") != null && !jsonObj.get("TimedMetadataPid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TimedMetadataPid"));
      }
      // validate the optional field `TransportStreamId`
      if (jsonObj.get("TransportStreamId") != null && !jsonObj.get("TransportStreamId").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TransportStreamId"));
      }
      // validate the optional field `VideoPid`
      if (jsonObj.get("VideoPid") != null && !jsonObj.get("VideoPid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VideoPid"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StandardHlsSettingsM3u8Settings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StandardHlsSettingsM3u8Settings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StandardHlsSettingsM3u8Settings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StandardHlsSettingsM3u8Settings.class));

       return (TypeAdapter<T>) new TypeAdapter<StandardHlsSettingsM3u8Settings>() {
           @Override
           public void write(JsonWriter out, StandardHlsSettingsM3u8Settings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StandardHlsSettingsM3u8Settings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StandardHlsSettingsM3u8Settings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StandardHlsSettingsM3u8Settings
   * @throws IOException if the JSON string is invalid with respect to StandardHlsSettingsM3u8Settings
   */
  public static StandardHlsSettingsM3u8Settings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StandardHlsSettingsM3u8Settings.class);
  }

  /**
   * Convert an instance of StandardHlsSettingsM3u8Settings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

