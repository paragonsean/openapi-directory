/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CaptionSelectorSettingsAncillarySourceSettings;
import org.openapitools.client.model.CaptionSelectorSettingsDvbSubSourceSettings;
import org.openapitools.client.model.CaptionSelectorSettingsEmbeddedSourceSettings;
import org.openapitools.client.model.CaptionSelectorSettingsScte20SourceSettings;
import org.openapitools.client.model.CaptionSelectorSettingsScte27SourceSettings;
import org.openapitools.client.model.CaptionSelectorSettingsTeletextSourceSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Caption Selector Settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CaptionSelectorSettings {
  public static final String SERIALIZED_NAME_ANCILLARY_SOURCE_SETTINGS = "AncillarySourceSettings";
  @SerializedName(SERIALIZED_NAME_ANCILLARY_SOURCE_SETTINGS)
  private CaptionSelectorSettingsAncillarySourceSettings ancillarySourceSettings;

  public static final String SERIALIZED_NAME_ARIB_SOURCE_SETTINGS = "AribSourceSettings";
  @SerializedName(SERIALIZED_NAME_ARIB_SOURCE_SETTINGS)
  private Object aribSourceSettings;

  public static final String SERIALIZED_NAME_DVB_SUB_SOURCE_SETTINGS = "DvbSubSourceSettings";
  @SerializedName(SERIALIZED_NAME_DVB_SUB_SOURCE_SETTINGS)
  private CaptionSelectorSettingsDvbSubSourceSettings dvbSubSourceSettings;

  public static final String SERIALIZED_NAME_EMBEDDED_SOURCE_SETTINGS = "EmbeddedSourceSettings";
  @SerializedName(SERIALIZED_NAME_EMBEDDED_SOURCE_SETTINGS)
  private CaptionSelectorSettingsEmbeddedSourceSettings embeddedSourceSettings;

  public static final String SERIALIZED_NAME_SCTE20_SOURCE_SETTINGS = "Scte20SourceSettings";
  @SerializedName(SERIALIZED_NAME_SCTE20_SOURCE_SETTINGS)
  private CaptionSelectorSettingsScte20SourceSettings scte20SourceSettings;

  public static final String SERIALIZED_NAME_SCTE27_SOURCE_SETTINGS = "Scte27SourceSettings";
  @SerializedName(SERIALIZED_NAME_SCTE27_SOURCE_SETTINGS)
  private CaptionSelectorSettingsScte27SourceSettings scte27SourceSettings;

  public static final String SERIALIZED_NAME_TELETEXT_SOURCE_SETTINGS = "TeletextSourceSettings";
  @SerializedName(SERIALIZED_NAME_TELETEXT_SOURCE_SETTINGS)
  private CaptionSelectorSettingsTeletextSourceSettings teletextSourceSettings;

  public CaptionSelectorSettings() {
  }

  public CaptionSelectorSettings ancillarySourceSettings(CaptionSelectorSettingsAncillarySourceSettings ancillarySourceSettings) {
    this.ancillarySourceSettings = ancillarySourceSettings;
    return this;
  }

  /**
   * Get ancillarySourceSettings
   * @return ancillarySourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSelectorSettingsAncillarySourceSettings getAncillarySourceSettings() {
    return ancillarySourceSettings;
  }

  public void setAncillarySourceSettings(CaptionSelectorSettingsAncillarySourceSettings ancillarySourceSettings) {
    this.ancillarySourceSettings = ancillarySourceSettings;
  }


  public CaptionSelectorSettings aribSourceSettings(Object aribSourceSettings) {
    this.aribSourceSettings = aribSourceSettings;
    return this;
  }

  /**
   * Get aribSourceSettings
   * @return aribSourceSettings
   */
  @javax.annotation.Nullable
  public Object getAribSourceSettings() {
    return aribSourceSettings;
  }

  public void setAribSourceSettings(Object aribSourceSettings) {
    this.aribSourceSettings = aribSourceSettings;
  }


  public CaptionSelectorSettings dvbSubSourceSettings(CaptionSelectorSettingsDvbSubSourceSettings dvbSubSourceSettings) {
    this.dvbSubSourceSettings = dvbSubSourceSettings;
    return this;
  }

  /**
   * Get dvbSubSourceSettings
   * @return dvbSubSourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSelectorSettingsDvbSubSourceSettings getDvbSubSourceSettings() {
    return dvbSubSourceSettings;
  }

  public void setDvbSubSourceSettings(CaptionSelectorSettingsDvbSubSourceSettings dvbSubSourceSettings) {
    this.dvbSubSourceSettings = dvbSubSourceSettings;
  }


  public CaptionSelectorSettings embeddedSourceSettings(CaptionSelectorSettingsEmbeddedSourceSettings embeddedSourceSettings) {
    this.embeddedSourceSettings = embeddedSourceSettings;
    return this;
  }

  /**
   * Get embeddedSourceSettings
   * @return embeddedSourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSelectorSettingsEmbeddedSourceSettings getEmbeddedSourceSettings() {
    return embeddedSourceSettings;
  }

  public void setEmbeddedSourceSettings(CaptionSelectorSettingsEmbeddedSourceSettings embeddedSourceSettings) {
    this.embeddedSourceSettings = embeddedSourceSettings;
  }


  public CaptionSelectorSettings scte20SourceSettings(CaptionSelectorSettingsScte20SourceSettings scte20SourceSettings) {
    this.scte20SourceSettings = scte20SourceSettings;
    return this;
  }

  /**
   * Get scte20SourceSettings
   * @return scte20SourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSelectorSettingsScte20SourceSettings getScte20SourceSettings() {
    return scte20SourceSettings;
  }

  public void setScte20SourceSettings(CaptionSelectorSettingsScte20SourceSettings scte20SourceSettings) {
    this.scte20SourceSettings = scte20SourceSettings;
  }


  public CaptionSelectorSettings scte27SourceSettings(CaptionSelectorSettingsScte27SourceSettings scte27SourceSettings) {
    this.scte27SourceSettings = scte27SourceSettings;
    return this;
  }

  /**
   * Get scte27SourceSettings
   * @return scte27SourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSelectorSettingsScte27SourceSettings getScte27SourceSettings() {
    return scte27SourceSettings;
  }

  public void setScte27SourceSettings(CaptionSelectorSettingsScte27SourceSettings scte27SourceSettings) {
    this.scte27SourceSettings = scte27SourceSettings;
  }


  public CaptionSelectorSettings teletextSourceSettings(CaptionSelectorSettingsTeletextSourceSettings teletextSourceSettings) {
    this.teletextSourceSettings = teletextSourceSettings;
    return this;
  }

  /**
   * Get teletextSourceSettings
   * @return teletextSourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSelectorSettingsTeletextSourceSettings getTeletextSourceSettings() {
    return teletextSourceSettings;
  }

  public void setTeletextSourceSettings(CaptionSelectorSettingsTeletextSourceSettings teletextSourceSettings) {
    this.teletextSourceSettings = teletextSourceSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaptionSelectorSettings captionSelectorSettings = (CaptionSelectorSettings) o;
    return Objects.equals(this.ancillarySourceSettings, captionSelectorSettings.ancillarySourceSettings) &&
        Objects.equals(this.aribSourceSettings, captionSelectorSettings.aribSourceSettings) &&
        Objects.equals(this.dvbSubSourceSettings, captionSelectorSettings.dvbSubSourceSettings) &&
        Objects.equals(this.embeddedSourceSettings, captionSelectorSettings.embeddedSourceSettings) &&
        Objects.equals(this.scte20SourceSettings, captionSelectorSettings.scte20SourceSettings) &&
        Objects.equals(this.scte27SourceSettings, captionSelectorSettings.scte27SourceSettings) &&
        Objects.equals(this.teletextSourceSettings, captionSelectorSettings.teletextSourceSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ancillarySourceSettings, aribSourceSettings, dvbSubSourceSettings, embeddedSourceSettings, scte20SourceSettings, scte27SourceSettings, teletextSourceSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaptionSelectorSettings {\n");
    sb.append("    ancillarySourceSettings: ").append(toIndentedString(ancillarySourceSettings)).append("\n");
    sb.append("    aribSourceSettings: ").append(toIndentedString(aribSourceSettings)).append("\n");
    sb.append("    dvbSubSourceSettings: ").append(toIndentedString(dvbSubSourceSettings)).append("\n");
    sb.append("    embeddedSourceSettings: ").append(toIndentedString(embeddedSourceSettings)).append("\n");
    sb.append("    scte20SourceSettings: ").append(toIndentedString(scte20SourceSettings)).append("\n");
    sb.append("    scte27SourceSettings: ").append(toIndentedString(scte27SourceSettings)).append("\n");
    sb.append("    teletextSourceSettings: ").append(toIndentedString(teletextSourceSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AncillarySourceSettings");
    openapiFields.add("AribSourceSettings");
    openapiFields.add("DvbSubSourceSettings");
    openapiFields.add("EmbeddedSourceSettings");
    openapiFields.add("Scte20SourceSettings");
    openapiFields.add("Scte27SourceSettings");
    openapiFields.add("TeletextSourceSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CaptionSelectorSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CaptionSelectorSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CaptionSelectorSettings is not found in the empty JSON string", CaptionSelectorSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CaptionSelectorSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CaptionSelectorSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AncillarySourceSettings`
      if (jsonObj.get("AncillarySourceSettings") != null && !jsonObj.get("AncillarySourceSettings").isJsonNull()) {
        CaptionSelectorSettingsAncillarySourceSettings.validateJsonElement(jsonObj.get("AncillarySourceSettings"));
      }
      // validate the optional field `AribSourceSettings`
      if (jsonObj.get("AribSourceSettings") != null && !jsonObj.get("AribSourceSettings").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("AribSourceSettings"));
      }
      // validate the optional field `DvbSubSourceSettings`
      if (jsonObj.get("DvbSubSourceSettings") != null && !jsonObj.get("DvbSubSourceSettings").isJsonNull()) {
        CaptionSelectorSettingsDvbSubSourceSettings.validateJsonElement(jsonObj.get("DvbSubSourceSettings"));
      }
      // validate the optional field `EmbeddedSourceSettings`
      if (jsonObj.get("EmbeddedSourceSettings") != null && !jsonObj.get("EmbeddedSourceSettings").isJsonNull()) {
        CaptionSelectorSettingsEmbeddedSourceSettings.validateJsonElement(jsonObj.get("EmbeddedSourceSettings"));
      }
      // validate the optional field `Scte20SourceSettings`
      if (jsonObj.get("Scte20SourceSettings") != null && !jsonObj.get("Scte20SourceSettings").isJsonNull()) {
        CaptionSelectorSettingsScte20SourceSettings.validateJsonElement(jsonObj.get("Scte20SourceSettings"));
      }
      // validate the optional field `Scte27SourceSettings`
      if (jsonObj.get("Scte27SourceSettings") != null && !jsonObj.get("Scte27SourceSettings").isJsonNull()) {
        CaptionSelectorSettingsScte27SourceSettings.validateJsonElement(jsonObj.get("Scte27SourceSettings"));
      }
      // validate the optional field `TeletextSourceSettings`
      if (jsonObj.get("TeletextSourceSettings") != null && !jsonObj.get("TeletextSourceSettings").isJsonNull()) {
        CaptionSelectorSettingsTeletextSourceSettings.validateJsonElement(jsonObj.get("TeletextSourceSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CaptionSelectorSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CaptionSelectorSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CaptionSelectorSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CaptionSelectorSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<CaptionSelectorSettings>() {
           @Override
           public void write(JsonWriter out, CaptionSelectorSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CaptionSelectorSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CaptionSelectorSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CaptionSelectorSettings
   * @throws IOException if the JSON string is invalid with respect to CaptionSelectorSettings
   */
  public static CaptionSelectorSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CaptionSelectorSettings.class);
  }

  /**
   * Convert an instance of CaptionSelectorSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

