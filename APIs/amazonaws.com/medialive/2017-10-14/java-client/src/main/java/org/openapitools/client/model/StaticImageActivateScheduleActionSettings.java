/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.StaticImageActivateScheduleActionSettingsImage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Settings for the action to activate a static image.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StaticImageActivateScheduleActionSettings {
  public static final String SERIALIZED_NAME_DURATION = "Duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_FADE_IN = "FadeIn";
  @SerializedName(SERIALIZED_NAME_FADE_IN)
  private Integer fadeIn;

  public static final String SERIALIZED_NAME_FADE_OUT = "FadeOut";
  @SerializedName(SERIALIZED_NAME_FADE_OUT)
  private Integer fadeOut;

  public static final String SERIALIZED_NAME_HEIGHT = "Height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Integer height;

  public static final String SERIALIZED_NAME_IMAGE = "Image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private StaticImageActivateScheduleActionSettingsImage image;

  public static final String SERIALIZED_NAME_IMAGE_X = "ImageX";
  @SerializedName(SERIALIZED_NAME_IMAGE_X)
  private Integer imageX;

  public static final String SERIALIZED_NAME_IMAGE_Y = "ImageY";
  @SerializedName(SERIALIZED_NAME_IMAGE_Y)
  private Integer imageY;

  public static final String SERIALIZED_NAME_LAYER = "Layer";
  @SerializedName(SERIALIZED_NAME_LAYER)
  private Integer layer;

  public static final String SERIALIZED_NAME_OPACITY = "Opacity";
  @SerializedName(SERIALIZED_NAME_OPACITY)
  private Integer opacity;

  public static final String SERIALIZED_NAME_WIDTH = "Width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Integer width;

  public StaticImageActivateScheduleActionSettings() {
  }

  public StaticImageActivateScheduleActionSettings duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public StaticImageActivateScheduleActionSettings fadeIn(Integer fadeIn) {
    this.fadeIn = fadeIn;
    return this;
  }

  /**
   * Get fadeIn
   * @return fadeIn
   */
  @javax.annotation.Nullable
  public Integer getFadeIn() {
    return fadeIn;
  }

  public void setFadeIn(Integer fadeIn) {
    this.fadeIn = fadeIn;
  }


  public StaticImageActivateScheduleActionSettings fadeOut(Integer fadeOut) {
    this.fadeOut = fadeOut;
    return this;
  }

  /**
   * Get fadeOut
   * @return fadeOut
   */
  @javax.annotation.Nullable
  public Integer getFadeOut() {
    return fadeOut;
  }

  public void setFadeOut(Integer fadeOut) {
    this.fadeOut = fadeOut;
  }


  public StaticImageActivateScheduleActionSettings height(Integer height) {
    this.height = height;
    return this;
  }

  /**
   * Get height
   * @return height
   */
  @javax.annotation.Nullable
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }


  public StaticImageActivateScheduleActionSettings image(StaticImageActivateScheduleActionSettingsImage image) {
    this.image = image;
    return this;
  }

  /**
   * Get image
   * @return image
   */
  @javax.annotation.Nonnull
  public StaticImageActivateScheduleActionSettingsImage getImage() {
    return image;
  }

  public void setImage(StaticImageActivateScheduleActionSettingsImage image) {
    this.image = image;
  }


  public StaticImageActivateScheduleActionSettings imageX(Integer imageX) {
    this.imageX = imageX;
    return this;
  }

  /**
   * Get imageX
   * @return imageX
   */
  @javax.annotation.Nullable
  public Integer getImageX() {
    return imageX;
  }

  public void setImageX(Integer imageX) {
    this.imageX = imageX;
  }


  public StaticImageActivateScheduleActionSettings imageY(Integer imageY) {
    this.imageY = imageY;
    return this;
  }

  /**
   * Get imageY
   * @return imageY
   */
  @javax.annotation.Nullable
  public Integer getImageY() {
    return imageY;
  }

  public void setImageY(Integer imageY) {
    this.imageY = imageY;
  }


  public StaticImageActivateScheduleActionSettings layer(Integer layer) {
    this.layer = layer;
    return this;
  }

  /**
   * Get layer
   * @return layer
   */
  @javax.annotation.Nullable
  public Integer getLayer() {
    return layer;
  }

  public void setLayer(Integer layer) {
    this.layer = layer;
  }


  public StaticImageActivateScheduleActionSettings opacity(Integer opacity) {
    this.opacity = opacity;
    return this;
  }

  /**
   * Get opacity
   * @return opacity
   */
  @javax.annotation.Nullable
  public Integer getOpacity() {
    return opacity;
  }

  public void setOpacity(Integer opacity) {
    this.opacity = opacity;
  }


  public StaticImageActivateScheduleActionSettings width(Integer width) {
    this.width = width;
    return this;
  }

  /**
   * Get width
   * @return width
   */
  @javax.annotation.Nullable
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StaticImageActivateScheduleActionSettings staticImageActivateScheduleActionSettings = (StaticImageActivateScheduleActionSettings) o;
    return Objects.equals(this.duration, staticImageActivateScheduleActionSettings.duration) &&
        Objects.equals(this.fadeIn, staticImageActivateScheduleActionSettings.fadeIn) &&
        Objects.equals(this.fadeOut, staticImageActivateScheduleActionSettings.fadeOut) &&
        Objects.equals(this.height, staticImageActivateScheduleActionSettings.height) &&
        Objects.equals(this.image, staticImageActivateScheduleActionSettings.image) &&
        Objects.equals(this.imageX, staticImageActivateScheduleActionSettings.imageX) &&
        Objects.equals(this.imageY, staticImageActivateScheduleActionSettings.imageY) &&
        Objects.equals(this.layer, staticImageActivateScheduleActionSettings.layer) &&
        Objects.equals(this.opacity, staticImageActivateScheduleActionSettings.opacity) &&
        Objects.equals(this.width, staticImageActivateScheduleActionSettings.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duration, fadeIn, fadeOut, height, image, imageX, imageY, layer, opacity, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StaticImageActivateScheduleActionSettings {\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    fadeIn: ").append(toIndentedString(fadeIn)).append("\n");
    sb.append("    fadeOut: ").append(toIndentedString(fadeOut)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imageX: ").append(toIndentedString(imageX)).append("\n");
    sb.append("    imageY: ").append(toIndentedString(imageY)).append("\n");
    sb.append("    layer: ").append(toIndentedString(layer)).append("\n");
    sb.append("    opacity: ").append(toIndentedString(opacity)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Duration");
    openapiFields.add("FadeIn");
    openapiFields.add("FadeOut");
    openapiFields.add("Height");
    openapiFields.add("Image");
    openapiFields.add("ImageX");
    openapiFields.add("ImageY");
    openapiFields.add("Layer");
    openapiFields.add("Opacity");
    openapiFields.add("Width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Image");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StaticImageActivateScheduleActionSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StaticImageActivateScheduleActionSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StaticImageActivateScheduleActionSettings is not found in the empty JSON string", StaticImageActivateScheduleActionSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StaticImageActivateScheduleActionSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StaticImageActivateScheduleActionSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StaticImageActivateScheduleActionSettings.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Duration`
      if (jsonObj.get("Duration") != null && !jsonObj.get("Duration").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Duration"));
      }
      // validate the optional field `FadeIn`
      if (jsonObj.get("FadeIn") != null && !jsonObj.get("FadeIn").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("FadeIn"));
      }
      // validate the optional field `FadeOut`
      if (jsonObj.get("FadeOut") != null && !jsonObj.get("FadeOut").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("FadeOut"));
      }
      // validate the optional field `Height`
      if (jsonObj.get("Height") != null && !jsonObj.get("Height").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Height"));
      }
      // validate the required field `Image`
      StaticImageActivateScheduleActionSettingsImage.validateJsonElement(jsonObj.get("Image"));
      // validate the optional field `ImageX`
      if (jsonObj.get("ImageX") != null && !jsonObj.get("ImageX").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ImageX"));
      }
      // validate the optional field `ImageY`
      if (jsonObj.get("ImageY") != null && !jsonObj.get("ImageY").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ImageY"));
      }
      // validate the optional field `Layer`
      if (jsonObj.get("Layer") != null && !jsonObj.get("Layer").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Layer"));
      }
      // validate the optional field `Opacity`
      if (jsonObj.get("Opacity") != null && !jsonObj.get("Opacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Opacity"));
      }
      // validate the optional field `Width`
      if (jsonObj.get("Width") != null && !jsonObj.get("Width").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Width"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StaticImageActivateScheduleActionSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StaticImageActivateScheduleActionSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StaticImageActivateScheduleActionSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StaticImageActivateScheduleActionSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<StaticImageActivateScheduleActionSettings>() {
           @Override
           public void write(JsonWriter out, StaticImageActivateScheduleActionSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StaticImageActivateScheduleActionSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StaticImageActivateScheduleActionSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StaticImageActivateScheduleActionSettings
   * @throws IOException if the JSON string is invalid with respect to StaticImageActivateScheduleActionSettings
   */
  public static StaticImageActivateScheduleActionSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StaticImageActivateScheduleActionSettings.class);
  }

  /**
   * Convert an instance of StaticImageActivateScheduleActionSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

