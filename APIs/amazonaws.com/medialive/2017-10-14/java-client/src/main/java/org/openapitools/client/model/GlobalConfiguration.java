/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GlobalConfigurationInputEndAction;
import org.openapitools.client.model.GlobalConfigurationInputLossBehavior;
import org.openapitools.client.model.GlobalConfigurationLowFramerateInputs;
import org.openapitools.client.model.GlobalConfigurationOutputLockingMode;
import org.openapitools.client.model.GlobalConfigurationOutputTimingSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Global Configuration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GlobalConfiguration {
  public static final String SERIALIZED_NAME_INITIAL_AUDIO_GAIN = "InitialAudioGain";
  @SerializedName(SERIALIZED_NAME_INITIAL_AUDIO_GAIN)
  private Integer initialAudioGain;

  public static final String SERIALIZED_NAME_INPUT_END_ACTION = "InputEndAction";
  @SerializedName(SERIALIZED_NAME_INPUT_END_ACTION)
  private GlobalConfigurationInputEndAction inputEndAction;

  public static final String SERIALIZED_NAME_INPUT_LOSS_BEHAVIOR = "InputLossBehavior";
  @SerializedName(SERIALIZED_NAME_INPUT_LOSS_BEHAVIOR)
  private GlobalConfigurationInputLossBehavior inputLossBehavior;

  public static final String SERIALIZED_NAME_OUTPUT_LOCKING_MODE = "OutputLockingMode";
  @SerializedName(SERIALIZED_NAME_OUTPUT_LOCKING_MODE)
  private GlobalConfigurationOutputLockingMode outputLockingMode;

  public static final String SERIALIZED_NAME_OUTPUT_TIMING_SOURCE = "OutputTimingSource";
  @SerializedName(SERIALIZED_NAME_OUTPUT_TIMING_SOURCE)
  private GlobalConfigurationOutputTimingSource outputTimingSource;

  public static final String SERIALIZED_NAME_SUPPORT_LOW_FRAMERATE_INPUTS = "SupportLowFramerateInputs";
  @SerializedName(SERIALIZED_NAME_SUPPORT_LOW_FRAMERATE_INPUTS)
  private GlobalConfigurationLowFramerateInputs supportLowFramerateInputs;

  public GlobalConfiguration() {
  }

  public GlobalConfiguration initialAudioGain(Integer initialAudioGain) {
    this.initialAudioGain = initialAudioGain;
    return this;
  }

  /**
   * Get initialAudioGain
   * @return initialAudioGain
   */
  @javax.annotation.Nullable
  public Integer getInitialAudioGain() {
    return initialAudioGain;
  }

  public void setInitialAudioGain(Integer initialAudioGain) {
    this.initialAudioGain = initialAudioGain;
  }


  public GlobalConfiguration inputEndAction(GlobalConfigurationInputEndAction inputEndAction) {
    this.inputEndAction = inputEndAction;
    return this;
  }

  /**
   * Get inputEndAction
   * @return inputEndAction
   */
  @javax.annotation.Nullable
  public GlobalConfigurationInputEndAction getInputEndAction() {
    return inputEndAction;
  }

  public void setInputEndAction(GlobalConfigurationInputEndAction inputEndAction) {
    this.inputEndAction = inputEndAction;
  }


  public GlobalConfiguration inputLossBehavior(GlobalConfigurationInputLossBehavior inputLossBehavior) {
    this.inputLossBehavior = inputLossBehavior;
    return this;
  }

  /**
   * Get inputLossBehavior
   * @return inputLossBehavior
   */
  @javax.annotation.Nullable
  public GlobalConfigurationInputLossBehavior getInputLossBehavior() {
    return inputLossBehavior;
  }

  public void setInputLossBehavior(GlobalConfigurationInputLossBehavior inputLossBehavior) {
    this.inputLossBehavior = inputLossBehavior;
  }


  public GlobalConfiguration outputLockingMode(GlobalConfigurationOutputLockingMode outputLockingMode) {
    this.outputLockingMode = outputLockingMode;
    return this;
  }

  /**
   * Get outputLockingMode
   * @return outputLockingMode
   */
  @javax.annotation.Nullable
  public GlobalConfigurationOutputLockingMode getOutputLockingMode() {
    return outputLockingMode;
  }

  public void setOutputLockingMode(GlobalConfigurationOutputLockingMode outputLockingMode) {
    this.outputLockingMode = outputLockingMode;
  }


  public GlobalConfiguration outputTimingSource(GlobalConfigurationOutputTimingSource outputTimingSource) {
    this.outputTimingSource = outputTimingSource;
    return this;
  }

  /**
   * Get outputTimingSource
   * @return outputTimingSource
   */
  @javax.annotation.Nullable
  public GlobalConfigurationOutputTimingSource getOutputTimingSource() {
    return outputTimingSource;
  }

  public void setOutputTimingSource(GlobalConfigurationOutputTimingSource outputTimingSource) {
    this.outputTimingSource = outputTimingSource;
  }


  public GlobalConfiguration supportLowFramerateInputs(GlobalConfigurationLowFramerateInputs supportLowFramerateInputs) {
    this.supportLowFramerateInputs = supportLowFramerateInputs;
    return this;
  }

  /**
   * Get supportLowFramerateInputs
   * @return supportLowFramerateInputs
   */
  @javax.annotation.Nullable
  public GlobalConfigurationLowFramerateInputs getSupportLowFramerateInputs() {
    return supportLowFramerateInputs;
  }

  public void setSupportLowFramerateInputs(GlobalConfigurationLowFramerateInputs supportLowFramerateInputs) {
    this.supportLowFramerateInputs = supportLowFramerateInputs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalConfiguration globalConfiguration = (GlobalConfiguration) o;
    return Objects.equals(this.initialAudioGain, globalConfiguration.initialAudioGain) &&
        Objects.equals(this.inputEndAction, globalConfiguration.inputEndAction) &&
        Objects.equals(this.inputLossBehavior, globalConfiguration.inputLossBehavior) &&
        Objects.equals(this.outputLockingMode, globalConfiguration.outputLockingMode) &&
        Objects.equals(this.outputTimingSource, globalConfiguration.outputTimingSource) &&
        Objects.equals(this.supportLowFramerateInputs, globalConfiguration.supportLowFramerateInputs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initialAudioGain, inputEndAction, inputLossBehavior, outputLockingMode, outputTimingSource, supportLowFramerateInputs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalConfiguration {\n");
    sb.append("    initialAudioGain: ").append(toIndentedString(initialAudioGain)).append("\n");
    sb.append("    inputEndAction: ").append(toIndentedString(inputEndAction)).append("\n");
    sb.append("    inputLossBehavior: ").append(toIndentedString(inputLossBehavior)).append("\n");
    sb.append("    outputLockingMode: ").append(toIndentedString(outputLockingMode)).append("\n");
    sb.append("    outputTimingSource: ").append(toIndentedString(outputTimingSource)).append("\n");
    sb.append("    supportLowFramerateInputs: ").append(toIndentedString(supportLowFramerateInputs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("InitialAudioGain");
    openapiFields.add("InputEndAction");
    openapiFields.add("InputLossBehavior");
    openapiFields.add("OutputLockingMode");
    openapiFields.add("OutputTimingSource");
    openapiFields.add("SupportLowFramerateInputs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GlobalConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GlobalConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GlobalConfiguration is not found in the empty JSON string", GlobalConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GlobalConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GlobalConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `InitialAudioGain`
      if (jsonObj.get("InitialAudioGain") != null && !jsonObj.get("InitialAudioGain").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("InitialAudioGain"));
      }
      // validate the optional field `InputEndAction`
      if (jsonObj.get("InputEndAction") != null && !jsonObj.get("InputEndAction").isJsonNull()) {
        GlobalConfigurationInputEndAction.validateJsonElement(jsonObj.get("InputEndAction"));
      }
      // validate the optional field `InputLossBehavior`
      if (jsonObj.get("InputLossBehavior") != null && !jsonObj.get("InputLossBehavior").isJsonNull()) {
        GlobalConfigurationInputLossBehavior.validateJsonElement(jsonObj.get("InputLossBehavior"));
      }
      // validate the optional field `OutputLockingMode`
      if (jsonObj.get("OutputLockingMode") != null && !jsonObj.get("OutputLockingMode").isJsonNull()) {
        GlobalConfigurationOutputLockingMode.validateJsonElement(jsonObj.get("OutputLockingMode"));
      }
      // validate the optional field `OutputTimingSource`
      if (jsonObj.get("OutputTimingSource") != null && !jsonObj.get("OutputTimingSource").isJsonNull()) {
        GlobalConfigurationOutputTimingSource.validateJsonElement(jsonObj.get("OutputTimingSource"));
      }
      // validate the optional field `SupportLowFramerateInputs`
      if (jsonObj.get("SupportLowFramerateInputs") != null && !jsonObj.get("SupportLowFramerateInputs").isJsonNull()) {
        GlobalConfigurationLowFramerateInputs.validateJsonElement(jsonObj.get("SupportLowFramerateInputs"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GlobalConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GlobalConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GlobalConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GlobalConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<GlobalConfiguration>() {
           @Override
           public void write(JsonWriter out, GlobalConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GlobalConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GlobalConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GlobalConfiguration
   * @throws IOException if the JSON string is invalid with respect to GlobalConfiguration
   */
  public static GlobalConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GlobalConfiguration.class);
  }

  /**
   * Convert an instance of GlobalConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

