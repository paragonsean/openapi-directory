/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ChannelClass;
import org.openapitools.client.model.ChannelState;
import org.openapitools.client.model.DeleteChannelResponseCdiInputSpecification;
import org.openapitools.client.model.DeleteChannelResponseEncoderSettings;
import org.openapitools.client.model.DeleteChannelResponseInputSpecification;
import org.openapitools.client.model.DeleteChannelResponseMaintenance;
import org.openapitools.client.model.DeleteChannelResponseVpc;
import org.openapitools.client.model.LogLevel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Placeholder documentation for DescribeChannelResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeChannelResponse {
  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CDI_INPUT_SPECIFICATION = "CdiInputSpecification";
  @SerializedName(SERIALIZED_NAME_CDI_INPUT_SPECIFICATION)
  private DeleteChannelResponseCdiInputSpecification cdiInputSpecification;

  public static final String SERIALIZED_NAME_CHANNEL_CLASS = "ChannelClass";
  @SerializedName(SERIALIZED_NAME_CHANNEL_CLASS)
  private ChannelClass channelClass;

  public static final String SERIALIZED_NAME_DESTINATIONS = "Destinations";
  @SerializedName(SERIALIZED_NAME_DESTINATIONS)
  private List destinations;

  public static final String SERIALIZED_NAME_EGRESS_ENDPOINTS = "EgressEndpoints";
  @SerializedName(SERIALIZED_NAME_EGRESS_ENDPOINTS)
  private List egressEndpoints;

  public static final String SERIALIZED_NAME_ENCODER_SETTINGS = "EncoderSettings";
  @SerializedName(SERIALIZED_NAME_ENCODER_SETTINGS)
  private DeleteChannelResponseEncoderSettings encoderSettings;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INPUT_ATTACHMENTS = "InputAttachments";
  @SerializedName(SERIALIZED_NAME_INPUT_ATTACHMENTS)
  private List inputAttachments;

  public static final String SERIALIZED_NAME_INPUT_SPECIFICATION = "InputSpecification";
  @SerializedName(SERIALIZED_NAME_INPUT_SPECIFICATION)
  private DeleteChannelResponseInputSpecification inputSpecification;

  public static final String SERIALIZED_NAME_LOG_LEVEL = "LogLevel";
  @SerializedName(SERIALIZED_NAME_LOG_LEVEL)
  private LogLevel logLevel;

  public static final String SERIALIZED_NAME_MAINTENANCE = "Maintenance";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE)
  private DeleteChannelResponseMaintenance maintenance;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PIPELINE_DETAILS = "PipelineDetails";
  @SerializedName(SERIALIZED_NAME_PIPELINE_DETAILS)
  private List pipelineDetails;

  public static final String SERIALIZED_NAME_PIPELINES_RUNNING_COUNT = "PipelinesRunningCount";
  @SerializedName(SERIALIZED_NAME_PIPELINES_RUNNING_COUNT)
  private Integer pipelinesRunningCount;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private ChannelState state;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_VPC = "Vpc";
  @SerializedName(SERIALIZED_NAME_VPC)
  private DeleteChannelResponseVpc vpc;

  public DescribeChannelResponse() {
  }

  public DescribeChannelResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public DescribeChannelResponse cdiInputSpecification(DeleteChannelResponseCdiInputSpecification cdiInputSpecification) {
    this.cdiInputSpecification = cdiInputSpecification;
    return this;
  }

  /**
   * Get cdiInputSpecification
   * @return cdiInputSpecification
   */
  @javax.annotation.Nullable
  public DeleteChannelResponseCdiInputSpecification getCdiInputSpecification() {
    return cdiInputSpecification;
  }

  public void setCdiInputSpecification(DeleteChannelResponseCdiInputSpecification cdiInputSpecification) {
    this.cdiInputSpecification = cdiInputSpecification;
  }


  public DescribeChannelResponse channelClass(ChannelClass channelClass) {
    this.channelClass = channelClass;
    return this;
  }

  /**
   * Get channelClass
   * @return channelClass
   */
  @javax.annotation.Nullable
  public ChannelClass getChannelClass() {
    return channelClass;
  }

  public void setChannelClass(ChannelClass channelClass) {
    this.channelClass = channelClass;
  }


  public DescribeChannelResponse destinations(List destinations) {
    this.destinations = destinations;
    return this;
  }

  /**
   * Get destinations
   * @return destinations
   */
  @javax.annotation.Nullable
  public List getDestinations() {
    return destinations;
  }

  public void setDestinations(List destinations) {
    this.destinations = destinations;
  }


  public DescribeChannelResponse egressEndpoints(List egressEndpoints) {
    this.egressEndpoints = egressEndpoints;
    return this;
  }

  /**
   * Get egressEndpoints
   * @return egressEndpoints
   */
  @javax.annotation.Nullable
  public List getEgressEndpoints() {
    return egressEndpoints;
  }

  public void setEgressEndpoints(List egressEndpoints) {
    this.egressEndpoints = egressEndpoints;
  }


  public DescribeChannelResponse encoderSettings(DeleteChannelResponseEncoderSettings encoderSettings) {
    this.encoderSettings = encoderSettings;
    return this;
  }

  /**
   * Get encoderSettings
   * @return encoderSettings
   */
  @javax.annotation.Nullable
  public DeleteChannelResponseEncoderSettings getEncoderSettings() {
    return encoderSettings;
  }

  public void setEncoderSettings(DeleteChannelResponseEncoderSettings encoderSettings) {
    this.encoderSettings = encoderSettings;
  }


  public DescribeChannelResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DescribeChannelResponse inputAttachments(List inputAttachments) {
    this.inputAttachments = inputAttachments;
    return this;
  }

  /**
   * Get inputAttachments
   * @return inputAttachments
   */
  @javax.annotation.Nullable
  public List getInputAttachments() {
    return inputAttachments;
  }

  public void setInputAttachments(List inputAttachments) {
    this.inputAttachments = inputAttachments;
  }


  public DescribeChannelResponse inputSpecification(DeleteChannelResponseInputSpecification inputSpecification) {
    this.inputSpecification = inputSpecification;
    return this;
  }

  /**
   * Get inputSpecification
   * @return inputSpecification
   */
  @javax.annotation.Nullable
  public DeleteChannelResponseInputSpecification getInputSpecification() {
    return inputSpecification;
  }

  public void setInputSpecification(DeleteChannelResponseInputSpecification inputSpecification) {
    this.inputSpecification = inputSpecification;
  }


  public DescribeChannelResponse logLevel(LogLevel logLevel) {
    this.logLevel = logLevel;
    return this;
  }

  /**
   * Get logLevel
   * @return logLevel
   */
  @javax.annotation.Nullable
  public LogLevel getLogLevel() {
    return logLevel;
  }

  public void setLogLevel(LogLevel logLevel) {
    this.logLevel = logLevel;
  }


  public DescribeChannelResponse maintenance(DeleteChannelResponseMaintenance maintenance) {
    this.maintenance = maintenance;
    return this;
  }

  /**
   * Get maintenance
   * @return maintenance
   */
  @javax.annotation.Nullable
  public DeleteChannelResponseMaintenance getMaintenance() {
    return maintenance;
  }

  public void setMaintenance(DeleteChannelResponseMaintenance maintenance) {
    this.maintenance = maintenance;
  }


  public DescribeChannelResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeChannelResponse pipelineDetails(List pipelineDetails) {
    this.pipelineDetails = pipelineDetails;
    return this;
  }

  /**
   * Get pipelineDetails
   * @return pipelineDetails
   */
  @javax.annotation.Nullable
  public List getPipelineDetails() {
    return pipelineDetails;
  }

  public void setPipelineDetails(List pipelineDetails) {
    this.pipelineDetails = pipelineDetails;
  }


  public DescribeChannelResponse pipelinesRunningCount(Integer pipelinesRunningCount) {
    this.pipelinesRunningCount = pipelinesRunningCount;
    return this;
  }

  /**
   * Get pipelinesRunningCount
   * @return pipelinesRunningCount
   */
  @javax.annotation.Nullable
  public Integer getPipelinesRunningCount() {
    return pipelinesRunningCount;
  }

  public void setPipelinesRunningCount(Integer pipelinesRunningCount) {
    this.pipelinesRunningCount = pipelinesRunningCount;
  }


  public DescribeChannelResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeChannelResponse state(ChannelState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public ChannelState getState() {
    return state;
  }

  public void setState(ChannelState state) {
    this.state = state;
  }


  public DescribeChannelResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public DescribeChannelResponse vpc(DeleteChannelResponseVpc vpc) {
    this.vpc = vpc;
    return this;
  }

  /**
   * Get vpc
   * @return vpc
   */
  @javax.annotation.Nullable
  public DeleteChannelResponseVpc getVpc() {
    return vpc;
  }

  public void setVpc(DeleteChannelResponseVpc vpc) {
    this.vpc = vpc;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeChannelResponse describeChannelResponse = (DescribeChannelResponse) o;
    return Objects.equals(this.arn, describeChannelResponse.arn) &&
        Objects.equals(this.cdiInputSpecification, describeChannelResponse.cdiInputSpecification) &&
        Objects.equals(this.channelClass, describeChannelResponse.channelClass) &&
        Objects.equals(this.destinations, describeChannelResponse.destinations) &&
        Objects.equals(this.egressEndpoints, describeChannelResponse.egressEndpoints) &&
        Objects.equals(this.encoderSettings, describeChannelResponse.encoderSettings) &&
        Objects.equals(this.id, describeChannelResponse.id) &&
        Objects.equals(this.inputAttachments, describeChannelResponse.inputAttachments) &&
        Objects.equals(this.inputSpecification, describeChannelResponse.inputSpecification) &&
        Objects.equals(this.logLevel, describeChannelResponse.logLevel) &&
        Objects.equals(this.maintenance, describeChannelResponse.maintenance) &&
        Objects.equals(this.name, describeChannelResponse.name) &&
        Objects.equals(this.pipelineDetails, describeChannelResponse.pipelineDetails) &&
        Objects.equals(this.pipelinesRunningCount, describeChannelResponse.pipelinesRunningCount) &&
        Objects.equals(this.roleArn, describeChannelResponse.roleArn) &&
        Objects.equals(this.state, describeChannelResponse.state) &&
        Objects.equals(this.tags, describeChannelResponse.tags) &&
        Objects.equals(this.vpc, describeChannelResponse.vpc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, cdiInputSpecification, channelClass, destinations, egressEndpoints, encoderSettings, id, inputAttachments, inputSpecification, logLevel, maintenance, name, pipelineDetails, pipelinesRunningCount, roleArn, state, tags, vpc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeChannelResponse {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    cdiInputSpecification: ").append(toIndentedString(cdiInputSpecification)).append("\n");
    sb.append("    channelClass: ").append(toIndentedString(channelClass)).append("\n");
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("    egressEndpoints: ").append(toIndentedString(egressEndpoints)).append("\n");
    sb.append("    encoderSettings: ").append(toIndentedString(encoderSettings)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inputAttachments: ").append(toIndentedString(inputAttachments)).append("\n");
    sb.append("    inputSpecification: ").append(toIndentedString(inputSpecification)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    maintenance: ").append(toIndentedString(maintenance)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pipelineDetails: ").append(toIndentedString(pipelineDetails)).append("\n");
    sb.append("    pipelinesRunningCount: ").append(toIndentedString(pipelinesRunningCount)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    vpc: ").append(toIndentedString(vpc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Arn");
    openapiFields.add("CdiInputSpecification");
    openapiFields.add("ChannelClass");
    openapiFields.add("Destinations");
    openapiFields.add("EgressEndpoints");
    openapiFields.add("EncoderSettings");
    openapiFields.add("Id");
    openapiFields.add("InputAttachments");
    openapiFields.add("InputSpecification");
    openapiFields.add("LogLevel");
    openapiFields.add("Maintenance");
    openapiFields.add("Name");
    openapiFields.add("PipelineDetails");
    openapiFields.add("PipelinesRunningCount");
    openapiFields.add("RoleArn");
    openapiFields.add("State");
    openapiFields.add("Tags");
    openapiFields.add("Vpc");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeChannelResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeChannelResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeChannelResponse is not found in the empty JSON string", DescribeChannelResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeChannelResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeChannelResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `CdiInputSpecification`
      if (jsonObj.get("CdiInputSpecification") != null && !jsonObj.get("CdiInputSpecification").isJsonNull()) {
        DeleteChannelResponseCdiInputSpecification.validateJsonElement(jsonObj.get("CdiInputSpecification"));
      }
      // validate the optional field `ChannelClass`
      if (jsonObj.get("ChannelClass") != null && !jsonObj.get("ChannelClass").isJsonNull()) {
        ChannelClass.validateJsonElement(jsonObj.get("ChannelClass"));
      }
      // validate the optional field `Destinations`
      if (jsonObj.get("Destinations") != null && !jsonObj.get("Destinations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Destinations"));
      }
      // validate the optional field `EgressEndpoints`
      if (jsonObj.get("EgressEndpoints") != null && !jsonObj.get("EgressEndpoints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EgressEndpoints"));
      }
      // validate the optional field `EncoderSettings`
      if (jsonObj.get("EncoderSettings") != null && !jsonObj.get("EncoderSettings").isJsonNull()) {
        DeleteChannelResponseEncoderSettings.validateJsonElement(jsonObj.get("EncoderSettings"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `InputAttachments`
      if (jsonObj.get("InputAttachments") != null && !jsonObj.get("InputAttachments").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InputAttachments"));
      }
      // validate the optional field `InputSpecification`
      if (jsonObj.get("InputSpecification") != null && !jsonObj.get("InputSpecification").isJsonNull()) {
        DeleteChannelResponseInputSpecification.validateJsonElement(jsonObj.get("InputSpecification"));
      }
      // validate the optional field `LogLevel`
      if (jsonObj.get("LogLevel") != null && !jsonObj.get("LogLevel").isJsonNull()) {
        LogLevel.validateJsonElement(jsonObj.get("LogLevel"));
      }
      // validate the optional field `Maintenance`
      if (jsonObj.get("Maintenance") != null && !jsonObj.get("Maintenance").isJsonNull()) {
        DeleteChannelResponseMaintenance.validateJsonElement(jsonObj.get("Maintenance"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `PipelineDetails`
      if (jsonObj.get("PipelineDetails") != null && !jsonObj.get("PipelineDetails").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PipelineDetails"));
      }
      // validate the optional field `PipelinesRunningCount`
      if (jsonObj.get("PipelinesRunningCount") != null && !jsonObj.get("PipelinesRunningCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PipelinesRunningCount"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        ChannelState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `Vpc`
      if (jsonObj.get("Vpc") != null && !jsonObj.get("Vpc").isJsonNull()) {
        DeleteChannelResponseVpc.validateJsonElement(jsonObj.get("Vpc"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeChannelResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeChannelResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeChannelResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeChannelResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeChannelResponse>() {
           @Override
           public void write(JsonWriter out, DescribeChannelResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeChannelResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeChannelResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeChannelResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeChannelResponse
   */
  public static DescribeChannelResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeChannelResponse.class);
  }

  /**
   * Convert an instance of DescribeChannelResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

