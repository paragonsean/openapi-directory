/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateChannelRequestEncoderSettingsAvailBlanking;
import org.openapitools.client.model.CreateChannelRequestEncoderSettingsAvailConfiguration;
import org.openapitools.client.model.CreateChannelRequestEncoderSettingsBlackoutSlate;
import org.openapitools.client.model.CreateChannelRequestEncoderSettingsFeatureActivations;
import org.openapitools.client.model.CreateChannelRequestEncoderSettingsGlobalConfiguration;
import org.openapitools.client.model.CreateChannelRequestEncoderSettingsMotionGraphicsConfiguration;
import org.openapitools.client.model.CreateChannelRequestEncoderSettingsNielsenConfiguration;
import org.openapitools.client.model.CreateChannelRequestEncoderSettingsThumbnailConfiguration;
import org.openapitools.client.model.CreateChannelRequestEncoderSettingsTimecodeConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DeleteChannelResponseEncoderSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:18.892689-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeleteChannelResponseEncoderSettings {
  public static final String SERIALIZED_NAME_AUDIO_DESCRIPTIONS = "AudioDescriptions";
  @SerializedName(SERIALIZED_NAME_AUDIO_DESCRIPTIONS)
  private List audioDescriptions;

  public static final String SERIALIZED_NAME_AVAIL_BLANKING = "AvailBlanking";
  @SerializedName(SERIALIZED_NAME_AVAIL_BLANKING)
  private CreateChannelRequestEncoderSettingsAvailBlanking availBlanking;

  public static final String SERIALIZED_NAME_AVAIL_CONFIGURATION = "AvailConfiguration";
  @SerializedName(SERIALIZED_NAME_AVAIL_CONFIGURATION)
  private CreateChannelRequestEncoderSettingsAvailConfiguration availConfiguration;

  public static final String SERIALIZED_NAME_BLACKOUT_SLATE = "BlackoutSlate";
  @SerializedName(SERIALIZED_NAME_BLACKOUT_SLATE)
  private CreateChannelRequestEncoderSettingsBlackoutSlate blackoutSlate;

  public static final String SERIALIZED_NAME_CAPTION_DESCRIPTIONS = "CaptionDescriptions";
  @SerializedName(SERIALIZED_NAME_CAPTION_DESCRIPTIONS)
  private List captionDescriptions;

  public static final String SERIALIZED_NAME_FEATURE_ACTIVATIONS = "FeatureActivations";
  @SerializedName(SERIALIZED_NAME_FEATURE_ACTIVATIONS)
  private CreateChannelRequestEncoderSettingsFeatureActivations featureActivations;

  public static final String SERIALIZED_NAME_GLOBAL_CONFIGURATION = "GlobalConfiguration";
  @SerializedName(SERIALIZED_NAME_GLOBAL_CONFIGURATION)
  private CreateChannelRequestEncoderSettingsGlobalConfiguration globalConfiguration;

  public static final String SERIALIZED_NAME_MOTION_GRAPHICS_CONFIGURATION = "MotionGraphicsConfiguration";
  @SerializedName(SERIALIZED_NAME_MOTION_GRAPHICS_CONFIGURATION)
  private CreateChannelRequestEncoderSettingsMotionGraphicsConfiguration motionGraphicsConfiguration;

  public static final String SERIALIZED_NAME_NIELSEN_CONFIGURATION = "NielsenConfiguration";
  @SerializedName(SERIALIZED_NAME_NIELSEN_CONFIGURATION)
  private CreateChannelRequestEncoderSettingsNielsenConfiguration nielsenConfiguration;

  public static final String SERIALIZED_NAME_OUTPUT_GROUPS = "OutputGroups";
  @SerializedName(SERIALIZED_NAME_OUTPUT_GROUPS)
  private List outputGroups;

  public static final String SERIALIZED_NAME_TIMECODE_CONFIG = "TimecodeConfig";
  @SerializedName(SERIALIZED_NAME_TIMECODE_CONFIG)
  private CreateChannelRequestEncoderSettingsTimecodeConfig timecodeConfig;

  public static final String SERIALIZED_NAME_VIDEO_DESCRIPTIONS = "VideoDescriptions";
  @SerializedName(SERIALIZED_NAME_VIDEO_DESCRIPTIONS)
  private List videoDescriptions;

  public static final String SERIALIZED_NAME_THUMBNAIL_CONFIGURATION = "ThumbnailConfiguration";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL_CONFIGURATION)
  private CreateChannelRequestEncoderSettingsThumbnailConfiguration thumbnailConfiguration;

  public DeleteChannelResponseEncoderSettings() {
  }

  public DeleteChannelResponseEncoderSettings audioDescriptions(List audioDescriptions) {
    this.audioDescriptions = audioDescriptions;
    return this;
  }

  /**
   * Get audioDescriptions
   * @return audioDescriptions
   */
  @javax.annotation.Nonnull
  public List getAudioDescriptions() {
    return audioDescriptions;
  }

  public void setAudioDescriptions(List audioDescriptions) {
    this.audioDescriptions = audioDescriptions;
  }


  public DeleteChannelResponseEncoderSettings availBlanking(CreateChannelRequestEncoderSettingsAvailBlanking availBlanking) {
    this.availBlanking = availBlanking;
    return this;
  }

  /**
   * Get availBlanking
   * @return availBlanking
   */
  @javax.annotation.Nullable
  public CreateChannelRequestEncoderSettingsAvailBlanking getAvailBlanking() {
    return availBlanking;
  }

  public void setAvailBlanking(CreateChannelRequestEncoderSettingsAvailBlanking availBlanking) {
    this.availBlanking = availBlanking;
  }


  public DeleteChannelResponseEncoderSettings availConfiguration(CreateChannelRequestEncoderSettingsAvailConfiguration availConfiguration) {
    this.availConfiguration = availConfiguration;
    return this;
  }

  /**
   * Get availConfiguration
   * @return availConfiguration
   */
  @javax.annotation.Nullable
  public CreateChannelRequestEncoderSettingsAvailConfiguration getAvailConfiguration() {
    return availConfiguration;
  }

  public void setAvailConfiguration(CreateChannelRequestEncoderSettingsAvailConfiguration availConfiguration) {
    this.availConfiguration = availConfiguration;
  }


  public DeleteChannelResponseEncoderSettings blackoutSlate(CreateChannelRequestEncoderSettingsBlackoutSlate blackoutSlate) {
    this.blackoutSlate = blackoutSlate;
    return this;
  }

  /**
   * Get blackoutSlate
   * @return blackoutSlate
   */
  @javax.annotation.Nullable
  public CreateChannelRequestEncoderSettingsBlackoutSlate getBlackoutSlate() {
    return blackoutSlate;
  }

  public void setBlackoutSlate(CreateChannelRequestEncoderSettingsBlackoutSlate blackoutSlate) {
    this.blackoutSlate = blackoutSlate;
  }


  public DeleteChannelResponseEncoderSettings captionDescriptions(List captionDescriptions) {
    this.captionDescriptions = captionDescriptions;
    return this;
  }

  /**
   * Get captionDescriptions
   * @return captionDescriptions
   */
  @javax.annotation.Nullable
  public List getCaptionDescriptions() {
    return captionDescriptions;
  }

  public void setCaptionDescriptions(List captionDescriptions) {
    this.captionDescriptions = captionDescriptions;
  }


  public DeleteChannelResponseEncoderSettings featureActivations(CreateChannelRequestEncoderSettingsFeatureActivations featureActivations) {
    this.featureActivations = featureActivations;
    return this;
  }

  /**
   * Get featureActivations
   * @return featureActivations
   */
  @javax.annotation.Nullable
  public CreateChannelRequestEncoderSettingsFeatureActivations getFeatureActivations() {
    return featureActivations;
  }

  public void setFeatureActivations(CreateChannelRequestEncoderSettingsFeatureActivations featureActivations) {
    this.featureActivations = featureActivations;
  }


  public DeleteChannelResponseEncoderSettings globalConfiguration(CreateChannelRequestEncoderSettingsGlobalConfiguration globalConfiguration) {
    this.globalConfiguration = globalConfiguration;
    return this;
  }

  /**
   * Get globalConfiguration
   * @return globalConfiguration
   */
  @javax.annotation.Nullable
  public CreateChannelRequestEncoderSettingsGlobalConfiguration getGlobalConfiguration() {
    return globalConfiguration;
  }

  public void setGlobalConfiguration(CreateChannelRequestEncoderSettingsGlobalConfiguration globalConfiguration) {
    this.globalConfiguration = globalConfiguration;
  }


  public DeleteChannelResponseEncoderSettings motionGraphicsConfiguration(CreateChannelRequestEncoderSettingsMotionGraphicsConfiguration motionGraphicsConfiguration) {
    this.motionGraphicsConfiguration = motionGraphicsConfiguration;
    return this;
  }

  /**
   * Get motionGraphicsConfiguration
   * @return motionGraphicsConfiguration
   */
  @javax.annotation.Nullable
  public CreateChannelRequestEncoderSettingsMotionGraphicsConfiguration getMotionGraphicsConfiguration() {
    return motionGraphicsConfiguration;
  }

  public void setMotionGraphicsConfiguration(CreateChannelRequestEncoderSettingsMotionGraphicsConfiguration motionGraphicsConfiguration) {
    this.motionGraphicsConfiguration = motionGraphicsConfiguration;
  }


  public DeleteChannelResponseEncoderSettings nielsenConfiguration(CreateChannelRequestEncoderSettingsNielsenConfiguration nielsenConfiguration) {
    this.nielsenConfiguration = nielsenConfiguration;
    return this;
  }

  /**
   * Get nielsenConfiguration
   * @return nielsenConfiguration
   */
  @javax.annotation.Nullable
  public CreateChannelRequestEncoderSettingsNielsenConfiguration getNielsenConfiguration() {
    return nielsenConfiguration;
  }

  public void setNielsenConfiguration(CreateChannelRequestEncoderSettingsNielsenConfiguration nielsenConfiguration) {
    this.nielsenConfiguration = nielsenConfiguration;
  }


  public DeleteChannelResponseEncoderSettings outputGroups(List outputGroups) {
    this.outputGroups = outputGroups;
    return this;
  }

  /**
   * Get outputGroups
   * @return outputGroups
   */
  @javax.annotation.Nonnull
  public List getOutputGroups() {
    return outputGroups;
  }

  public void setOutputGroups(List outputGroups) {
    this.outputGroups = outputGroups;
  }


  public DeleteChannelResponseEncoderSettings timecodeConfig(CreateChannelRequestEncoderSettingsTimecodeConfig timecodeConfig) {
    this.timecodeConfig = timecodeConfig;
    return this;
  }

  /**
   * Get timecodeConfig
   * @return timecodeConfig
   */
  @javax.annotation.Nonnull
  public CreateChannelRequestEncoderSettingsTimecodeConfig getTimecodeConfig() {
    return timecodeConfig;
  }

  public void setTimecodeConfig(CreateChannelRequestEncoderSettingsTimecodeConfig timecodeConfig) {
    this.timecodeConfig = timecodeConfig;
  }


  public DeleteChannelResponseEncoderSettings videoDescriptions(List videoDescriptions) {
    this.videoDescriptions = videoDescriptions;
    return this;
  }

  /**
   * Get videoDescriptions
   * @return videoDescriptions
   */
  @javax.annotation.Nonnull
  public List getVideoDescriptions() {
    return videoDescriptions;
  }

  public void setVideoDescriptions(List videoDescriptions) {
    this.videoDescriptions = videoDescriptions;
  }


  public DeleteChannelResponseEncoderSettings thumbnailConfiguration(CreateChannelRequestEncoderSettingsThumbnailConfiguration thumbnailConfiguration) {
    this.thumbnailConfiguration = thumbnailConfiguration;
    return this;
  }

  /**
   * Get thumbnailConfiguration
   * @return thumbnailConfiguration
   */
  @javax.annotation.Nullable
  public CreateChannelRequestEncoderSettingsThumbnailConfiguration getThumbnailConfiguration() {
    return thumbnailConfiguration;
  }

  public void setThumbnailConfiguration(CreateChannelRequestEncoderSettingsThumbnailConfiguration thumbnailConfiguration) {
    this.thumbnailConfiguration = thumbnailConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteChannelResponseEncoderSettings deleteChannelResponseEncoderSettings = (DeleteChannelResponseEncoderSettings) o;
    return Objects.equals(this.audioDescriptions, deleteChannelResponseEncoderSettings.audioDescriptions) &&
        Objects.equals(this.availBlanking, deleteChannelResponseEncoderSettings.availBlanking) &&
        Objects.equals(this.availConfiguration, deleteChannelResponseEncoderSettings.availConfiguration) &&
        Objects.equals(this.blackoutSlate, deleteChannelResponseEncoderSettings.blackoutSlate) &&
        Objects.equals(this.captionDescriptions, deleteChannelResponseEncoderSettings.captionDescriptions) &&
        Objects.equals(this.featureActivations, deleteChannelResponseEncoderSettings.featureActivations) &&
        Objects.equals(this.globalConfiguration, deleteChannelResponseEncoderSettings.globalConfiguration) &&
        Objects.equals(this.motionGraphicsConfiguration, deleteChannelResponseEncoderSettings.motionGraphicsConfiguration) &&
        Objects.equals(this.nielsenConfiguration, deleteChannelResponseEncoderSettings.nielsenConfiguration) &&
        Objects.equals(this.outputGroups, deleteChannelResponseEncoderSettings.outputGroups) &&
        Objects.equals(this.timecodeConfig, deleteChannelResponseEncoderSettings.timecodeConfig) &&
        Objects.equals(this.videoDescriptions, deleteChannelResponseEncoderSettings.videoDescriptions) &&
        Objects.equals(this.thumbnailConfiguration, deleteChannelResponseEncoderSettings.thumbnailConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioDescriptions, availBlanking, availConfiguration, blackoutSlate, captionDescriptions, featureActivations, globalConfiguration, motionGraphicsConfiguration, nielsenConfiguration, outputGroups, timecodeConfig, videoDescriptions, thumbnailConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteChannelResponseEncoderSettings {\n");
    sb.append("    audioDescriptions: ").append(toIndentedString(audioDescriptions)).append("\n");
    sb.append("    availBlanking: ").append(toIndentedString(availBlanking)).append("\n");
    sb.append("    availConfiguration: ").append(toIndentedString(availConfiguration)).append("\n");
    sb.append("    blackoutSlate: ").append(toIndentedString(blackoutSlate)).append("\n");
    sb.append("    captionDescriptions: ").append(toIndentedString(captionDescriptions)).append("\n");
    sb.append("    featureActivations: ").append(toIndentedString(featureActivations)).append("\n");
    sb.append("    globalConfiguration: ").append(toIndentedString(globalConfiguration)).append("\n");
    sb.append("    motionGraphicsConfiguration: ").append(toIndentedString(motionGraphicsConfiguration)).append("\n");
    sb.append("    nielsenConfiguration: ").append(toIndentedString(nielsenConfiguration)).append("\n");
    sb.append("    outputGroups: ").append(toIndentedString(outputGroups)).append("\n");
    sb.append("    timecodeConfig: ").append(toIndentedString(timecodeConfig)).append("\n");
    sb.append("    videoDescriptions: ").append(toIndentedString(videoDescriptions)).append("\n");
    sb.append("    thumbnailConfiguration: ").append(toIndentedString(thumbnailConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AudioDescriptions");
    openapiFields.add("AvailBlanking");
    openapiFields.add("AvailConfiguration");
    openapiFields.add("BlackoutSlate");
    openapiFields.add("CaptionDescriptions");
    openapiFields.add("FeatureActivations");
    openapiFields.add("GlobalConfiguration");
    openapiFields.add("MotionGraphicsConfiguration");
    openapiFields.add("NielsenConfiguration");
    openapiFields.add("OutputGroups");
    openapiFields.add("TimecodeConfig");
    openapiFields.add("VideoDescriptions");
    openapiFields.add("ThumbnailConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AudioDescriptions");
    openapiRequiredFields.add("OutputGroups");
    openapiRequiredFields.add("TimecodeConfig");
    openapiRequiredFields.add("VideoDescriptions");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteChannelResponseEncoderSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteChannelResponseEncoderSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteChannelResponseEncoderSettings is not found in the empty JSON string", DeleteChannelResponseEncoderSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteChannelResponseEncoderSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteChannelResponseEncoderSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DeleteChannelResponseEncoderSettings.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `AudioDescriptions`
      List.validateJsonElement(jsonObj.get("AudioDescriptions"));
      // validate the optional field `AvailBlanking`
      if (jsonObj.get("AvailBlanking") != null && !jsonObj.get("AvailBlanking").isJsonNull()) {
        CreateChannelRequestEncoderSettingsAvailBlanking.validateJsonElement(jsonObj.get("AvailBlanking"));
      }
      // validate the optional field `AvailConfiguration`
      if (jsonObj.get("AvailConfiguration") != null && !jsonObj.get("AvailConfiguration").isJsonNull()) {
        CreateChannelRequestEncoderSettingsAvailConfiguration.validateJsonElement(jsonObj.get("AvailConfiguration"));
      }
      // validate the optional field `BlackoutSlate`
      if (jsonObj.get("BlackoutSlate") != null && !jsonObj.get("BlackoutSlate").isJsonNull()) {
        CreateChannelRequestEncoderSettingsBlackoutSlate.validateJsonElement(jsonObj.get("BlackoutSlate"));
      }
      // validate the optional field `CaptionDescriptions`
      if (jsonObj.get("CaptionDescriptions") != null && !jsonObj.get("CaptionDescriptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CaptionDescriptions"));
      }
      // validate the optional field `FeatureActivations`
      if (jsonObj.get("FeatureActivations") != null && !jsonObj.get("FeatureActivations").isJsonNull()) {
        CreateChannelRequestEncoderSettingsFeatureActivations.validateJsonElement(jsonObj.get("FeatureActivations"));
      }
      // validate the optional field `GlobalConfiguration`
      if (jsonObj.get("GlobalConfiguration") != null && !jsonObj.get("GlobalConfiguration").isJsonNull()) {
        CreateChannelRequestEncoderSettingsGlobalConfiguration.validateJsonElement(jsonObj.get("GlobalConfiguration"));
      }
      // validate the optional field `MotionGraphicsConfiguration`
      if (jsonObj.get("MotionGraphicsConfiguration") != null && !jsonObj.get("MotionGraphicsConfiguration").isJsonNull()) {
        CreateChannelRequestEncoderSettingsMotionGraphicsConfiguration.validateJsonElement(jsonObj.get("MotionGraphicsConfiguration"));
      }
      // validate the optional field `NielsenConfiguration`
      if (jsonObj.get("NielsenConfiguration") != null && !jsonObj.get("NielsenConfiguration").isJsonNull()) {
        CreateChannelRequestEncoderSettingsNielsenConfiguration.validateJsonElement(jsonObj.get("NielsenConfiguration"));
      }
      // validate the required field `OutputGroups`
      List.validateJsonElement(jsonObj.get("OutputGroups"));
      // validate the required field `TimecodeConfig`
      CreateChannelRequestEncoderSettingsTimecodeConfig.validateJsonElement(jsonObj.get("TimecodeConfig"));
      // validate the required field `VideoDescriptions`
      List.validateJsonElement(jsonObj.get("VideoDescriptions"));
      // validate the optional field `ThumbnailConfiguration`
      if (jsonObj.get("ThumbnailConfiguration") != null && !jsonObj.get("ThumbnailConfiguration").isJsonNull()) {
        CreateChannelRequestEncoderSettingsThumbnailConfiguration.validateJsonElement(jsonObj.get("ThumbnailConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteChannelResponseEncoderSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteChannelResponseEncoderSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteChannelResponseEncoderSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteChannelResponseEncoderSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteChannelResponseEncoderSettings>() {
           @Override
           public void write(JsonWriter out, DeleteChannelResponseEncoderSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteChannelResponseEncoderSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteChannelResponseEncoderSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteChannelResponseEncoderSettings
   * @throws IOException if the JSON string is invalid with respect to DeleteChannelResponseEncoderSettings
   */
  public static DeleteChannelResponseEncoderSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteChannelResponseEncoderSettings.class);
  }

  /**
   * Convert an instance of DeleteChannelResponseEncoderSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

