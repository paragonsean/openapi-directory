/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HlsCaptionLanguageSetting;
import org.openapitools.client.model.HlsClientCache;
import org.openapitools.client.model.HlsCodecSpecification;
import org.openapitools.client.model.HlsDirectoryStructure;
import org.openapitools.client.model.HlsDiscontinuityTags;
import org.openapitools.client.model.HlsEncryptionType;
import org.openapitools.client.model.HlsGroupSettingsDestination;
import org.openapitools.client.model.HlsGroupSettingsHlsCdnSettings;
import org.openapitools.client.model.HlsGroupSettingsKeyProviderSettings;
import org.openapitools.client.model.HlsId3SegmentTaggingState;
import org.openapitools.client.model.HlsIncompleteSegmentBehavior;
import org.openapitools.client.model.HlsIvInManifest;
import org.openapitools.client.model.HlsIvSource;
import org.openapitools.client.model.HlsManifestCompression;
import org.openapitools.client.model.HlsManifestDurationFormat;
import org.openapitools.client.model.HlsMode;
import org.openapitools.client.model.HlsOutputSelection;
import org.openapitools.client.model.HlsProgramDateTime;
import org.openapitools.client.model.HlsProgramDateTimeClock;
import org.openapitools.client.model.HlsRedundantManifest;
import org.openapitools.client.model.HlsSegmentationMode;
import org.openapitools.client.model.HlsStreamInfResolution;
import org.openapitools.client.model.HlsTimedMetadataId3Frame;
import org.openapitools.client.model.HlsTsFileMode;
import org.openapitools.client.model.IFrameOnlyPlaylistType;
import org.openapitools.client.model.InputLossActionForHlsOut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OutputGroupSettingsHlsGroupSettings
 */
public class OutputGroupSettingsHlsGroupSettingsTest {
    private final OutputGroupSettingsHlsGroupSettings model = new OutputGroupSettingsHlsGroupSettings();

    /**
     * Model tests for OutputGroupSettingsHlsGroupSettings
     */
    @Test
    public void testOutputGroupSettingsHlsGroupSettings() {
        // TODO: test OutputGroupSettingsHlsGroupSettings
    }

    /**
     * Test the property 'adMarkers'
     */
    @Test
    public void adMarkersTest() {
        // TODO: test adMarkers
    }

    /**
     * Test the property 'baseUrlContent'
     */
    @Test
    public void baseUrlContentTest() {
        // TODO: test baseUrlContent
    }

    /**
     * Test the property 'baseUrlContent1'
     */
    @Test
    public void baseUrlContent1Test() {
        // TODO: test baseUrlContent1
    }

    /**
     * Test the property 'baseUrlManifest'
     */
    @Test
    public void baseUrlManifestTest() {
        // TODO: test baseUrlManifest
    }

    /**
     * Test the property 'baseUrlManifest1'
     */
    @Test
    public void baseUrlManifest1Test() {
        // TODO: test baseUrlManifest1
    }

    /**
     * Test the property 'captionLanguageMappings'
     */
    @Test
    public void captionLanguageMappingsTest() {
        // TODO: test captionLanguageMappings
    }

    /**
     * Test the property 'captionLanguageSetting'
     */
    @Test
    public void captionLanguageSettingTest() {
        // TODO: test captionLanguageSetting
    }

    /**
     * Test the property 'clientCache'
     */
    @Test
    public void clientCacheTest() {
        // TODO: test clientCache
    }

    /**
     * Test the property 'codecSpecification'
     */
    @Test
    public void codecSpecificationTest() {
        // TODO: test codecSpecification
    }

    /**
     * Test the property 'constantIv'
     */
    @Test
    public void constantIvTest() {
        // TODO: test constantIv
    }

    /**
     * Test the property 'destination'
     */
    @Test
    public void destinationTest() {
        // TODO: test destination
    }

    /**
     * Test the property 'directoryStructure'
     */
    @Test
    public void directoryStructureTest() {
        // TODO: test directoryStructure
    }

    /**
     * Test the property 'discontinuityTags'
     */
    @Test
    public void discontinuityTagsTest() {
        // TODO: test discontinuityTags
    }

    /**
     * Test the property 'encryptionType'
     */
    @Test
    public void encryptionTypeTest() {
        // TODO: test encryptionType
    }

    /**
     * Test the property 'hlsCdnSettings'
     */
    @Test
    public void hlsCdnSettingsTest() {
        // TODO: test hlsCdnSettings
    }

    /**
     * Test the property 'hlsId3SegmentTagging'
     */
    @Test
    public void hlsId3SegmentTaggingTest() {
        // TODO: test hlsId3SegmentTagging
    }

    /**
     * Test the property 'iframeOnlyPlaylists'
     */
    @Test
    public void iframeOnlyPlaylistsTest() {
        // TODO: test iframeOnlyPlaylists
    }

    /**
     * Test the property 'incompleteSegmentBehavior'
     */
    @Test
    public void incompleteSegmentBehaviorTest() {
        // TODO: test incompleteSegmentBehavior
    }

    /**
     * Test the property 'indexNSegments'
     */
    @Test
    public void indexNSegmentsTest() {
        // TODO: test indexNSegments
    }

    /**
     * Test the property 'inputLossAction'
     */
    @Test
    public void inputLossActionTest() {
        // TODO: test inputLossAction
    }

    /**
     * Test the property 'ivInManifest'
     */
    @Test
    public void ivInManifestTest() {
        // TODO: test ivInManifest
    }

    /**
     * Test the property 'ivSource'
     */
    @Test
    public void ivSourceTest() {
        // TODO: test ivSource
    }

    /**
     * Test the property 'keepSegments'
     */
    @Test
    public void keepSegmentsTest() {
        // TODO: test keepSegments
    }

    /**
     * Test the property 'keyFormat'
     */
    @Test
    public void keyFormatTest() {
        // TODO: test keyFormat
    }

    /**
     * Test the property 'keyFormatVersions'
     */
    @Test
    public void keyFormatVersionsTest() {
        // TODO: test keyFormatVersions
    }

    /**
     * Test the property 'keyProviderSettings'
     */
    @Test
    public void keyProviderSettingsTest() {
        // TODO: test keyProviderSettings
    }

    /**
     * Test the property 'manifestCompression'
     */
    @Test
    public void manifestCompressionTest() {
        // TODO: test manifestCompression
    }

    /**
     * Test the property 'manifestDurationFormat'
     */
    @Test
    public void manifestDurationFormatTest() {
        // TODO: test manifestDurationFormat
    }

    /**
     * Test the property 'minSegmentLength'
     */
    @Test
    public void minSegmentLengthTest() {
        // TODO: test minSegmentLength
    }

    /**
     * Test the property 'mode'
     */
    @Test
    public void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'outputSelection'
     */
    @Test
    public void outputSelectionTest() {
        // TODO: test outputSelection
    }

    /**
     * Test the property 'programDateTime'
     */
    @Test
    public void programDateTimeTest() {
        // TODO: test programDateTime
    }

    /**
     * Test the property 'programDateTimeClock'
     */
    @Test
    public void programDateTimeClockTest() {
        // TODO: test programDateTimeClock
    }

    /**
     * Test the property 'programDateTimePeriod'
     */
    @Test
    public void programDateTimePeriodTest() {
        // TODO: test programDateTimePeriod
    }

    /**
     * Test the property 'redundantManifest'
     */
    @Test
    public void redundantManifestTest() {
        // TODO: test redundantManifest
    }

    /**
     * Test the property 'segmentLength'
     */
    @Test
    public void segmentLengthTest() {
        // TODO: test segmentLength
    }

    /**
     * Test the property 'segmentationMode'
     */
    @Test
    public void segmentationModeTest() {
        // TODO: test segmentationMode
    }

    /**
     * Test the property 'segmentsPerSubdirectory'
     */
    @Test
    public void segmentsPerSubdirectoryTest() {
        // TODO: test segmentsPerSubdirectory
    }

    /**
     * Test the property 'streamInfResolution'
     */
    @Test
    public void streamInfResolutionTest() {
        // TODO: test streamInfResolution
    }

    /**
     * Test the property 'timedMetadataId3Frame'
     */
    @Test
    public void timedMetadataId3FrameTest() {
        // TODO: test timedMetadataId3Frame
    }

    /**
     * Test the property 'timedMetadataId3Period'
     */
    @Test
    public void timedMetadataId3PeriodTest() {
        // TODO: test timedMetadataId3Period
    }

    /**
     * Test the property 'timestampDeltaMilliseconds'
     */
    @Test
    public void timestampDeltaMillisecondsTest() {
        // TODO: test timestampDeltaMilliseconds
    }

    /**
     * Test the property 'tsFileMode'
     */
    @Test
    public void tsFileModeTest() {
        // TODO: test tsFileMode
    }

}
