/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AfdSignaling;
import org.openapitools.client.model.FixedAfd;
import org.openapitools.client.model.FrameCaptureSettingsTimecodeBurninSettings;
import org.openapitools.client.model.Mpeg2AdaptiveQuantization;
import org.openapitools.client.model.Mpeg2ColorMetadata;
import org.openapitools.client.model.Mpeg2ColorSpace;
import org.openapitools.client.model.Mpeg2DisplayRatio;
import org.openapitools.client.model.Mpeg2GopSizeUnits;
import org.openapitools.client.model.Mpeg2ScanType;
import org.openapitools.client.model.Mpeg2SettingsFilterSettings;
import org.openapitools.client.model.Mpeg2SubGopLength;
import org.openapitools.client.model.Mpeg2TimecodeInsertionBehavior;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Mpeg2Settings
 */
public class Mpeg2SettingsTest {
    private final Mpeg2Settings model = new Mpeg2Settings();

    /**
     * Model tests for Mpeg2Settings
     */
    @Test
    public void testMpeg2Settings() {
        // TODO: test Mpeg2Settings
    }

    /**
     * Test the property 'adaptiveQuantization'
     */
    @Test
    public void adaptiveQuantizationTest() {
        // TODO: test adaptiveQuantization
    }

    /**
     * Test the property 'afdSignaling'
     */
    @Test
    public void afdSignalingTest() {
        // TODO: test afdSignaling
    }

    /**
     * Test the property 'colorMetadata'
     */
    @Test
    public void colorMetadataTest() {
        // TODO: test colorMetadata
    }

    /**
     * Test the property 'colorSpace'
     */
    @Test
    public void colorSpaceTest() {
        // TODO: test colorSpace
    }

    /**
     * Test the property 'displayAspectRatio'
     */
    @Test
    public void displayAspectRatioTest() {
        // TODO: test displayAspectRatio
    }

    /**
     * Test the property 'filterSettings'
     */
    @Test
    public void filterSettingsTest() {
        // TODO: test filterSettings
    }

    /**
     * Test the property 'fixedAfd'
     */
    @Test
    public void fixedAfdTest() {
        // TODO: test fixedAfd
    }

    /**
     * Test the property 'framerateDenominator'
     */
    @Test
    public void framerateDenominatorTest() {
        // TODO: test framerateDenominator
    }

    /**
     * Test the property 'framerateNumerator'
     */
    @Test
    public void framerateNumeratorTest() {
        // TODO: test framerateNumerator
    }

    /**
     * Test the property 'gopClosedCadence'
     */
    @Test
    public void gopClosedCadenceTest() {
        // TODO: test gopClosedCadence
    }

    /**
     * Test the property 'gopNumBFrames'
     */
    @Test
    public void gopNumBFramesTest() {
        // TODO: test gopNumBFrames
    }

    /**
     * Test the property 'gopSize'
     */
    @Test
    public void gopSizeTest() {
        // TODO: test gopSize
    }

    /**
     * Test the property 'gopSizeUnits'
     */
    @Test
    public void gopSizeUnitsTest() {
        // TODO: test gopSizeUnits
    }

    /**
     * Test the property 'scanType'
     */
    @Test
    public void scanTypeTest() {
        // TODO: test scanType
    }

    /**
     * Test the property 'subgopLength'
     */
    @Test
    public void subgopLengthTest() {
        // TODO: test subgopLength
    }

    /**
     * Test the property 'timecodeInsertion'
     */
    @Test
    public void timecodeInsertionTest() {
        // TODO: test timecodeInsertion
    }

    /**
     * Test the property 'timecodeBurninSettings'
     */
    @Test
    public void timecodeBurninSettingsTest() {
        // TODO: test timecodeBurninSettings
    }

}
