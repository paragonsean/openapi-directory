/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.M2tsAbsentInputAudioBehavior;
import org.openapitools.client.model.M2tsArib;
import org.openapitools.client.model.M2tsAribCaptionsPidControl;
import org.openapitools.client.model.M2tsAudioBufferModel;
import org.openapitools.client.model.M2tsAudioInterval;
import org.openapitools.client.model.M2tsAudioStreamType;
import org.openapitools.client.model.M2tsBufferModel;
import org.openapitools.client.model.M2tsCcDescriptor;
import org.openapitools.client.model.M2tsEbifControl;
import org.openapitools.client.model.M2tsEbpPlacement;
import org.openapitools.client.model.M2tsEsRateInPes;
import org.openapitools.client.model.M2tsKlv;
import org.openapitools.client.model.M2tsNielsenId3Behavior;
import org.openapitools.client.model.M2tsPcrControl;
import org.openapitools.client.model.M2tsRateMode;
import org.openapitools.client.model.M2tsScte35Control;
import org.openapitools.client.model.M2tsSegmentationMarkers;
import org.openapitools.client.model.M2tsSegmentationStyle;
import org.openapitools.client.model.M2tsSettingsDvbNitSettings;
import org.openapitools.client.model.M2tsSettingsDvbSdtSettings;
import org.openapitools.client.model.M2tsSettingsDvbTdtSettings;
import org.openapitools.client.model.M2tsTimedMetadataBehavior;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for M2tsSettings
 */
public class M2tsSettingsTest {
    private final M2tsSettings model = new M2tsSettings();

    /**
     * Model tests for M2tsSettings
     */
    @Test
    public void testM2tsSettings() {
        // TODO: test M2tsSettings
    }

    /**
     * Test the property 'absentInputAudioBehavior'
     */
    @Test
    public void absentInputAudioBehaviorTest() {
        // TODO: test absentInputAudioBehavior
    }

    /**
     * Test the property 'arib'
     */
    @Test
    public void aribTest() {
        // TODO: test arib
    }

    /**
     * Test the property 'aribCaptionsPid'
     */
    @Test
    public void aribCaptionsPidTest() {
        // TODO: test aribCaptionsPid
    }

    /**
     * Test the property 'aribCaptionsPidControl'
     */
    @Test
    public void aribCaptionsPidControlTest() {
        // TODO: test aribCaptionsPidControl
    }

    /**
     * Test the property 'audioBufferModel'
     */
    @Test
    public void audioBufferModelTest() {
        // TODO: test audioBufferModel
    }

    /**
     * Test the property 'audioFramesPerPes'
     */
    @Test
    public void audioFramesPerPesTest() {
        // TODO: test audioFramesPerPes
    }

    /**
     * Test the property 'audioPids'
     */
    @Test
    public void audioPidsTest() {
        // TODO: test audioPids
    }

    /**
     * Test the property 'audioStreamType'
     */
    @Test
    public void audioStreamTypeTest() {
        // TODO: test audioStreamType
    }

    /**
     * Test the property 'bitrate'
     */
    @Test
    public void bitrateTest() {
        // TODO: test bitrate
    }

    /**
     * Test the property 'bufferModel'
     */
    @Test
    public void bufferModelTest() {
        // TODO: test bufferModel
    }

    /**
     * Test the property 'ccDescriptor'
     */
    @Test
    public void ccDescriptorTest() {
        // TODO: test ccDescriptor
    }

    /**
     * Test the property 'dvbNitSettings'
     */
    @Test
    public void dvbNitSettingsTest() {
        // TODO: test dvbNitSettings
    }

    /**
     * Test the property 'dvbSdtSettings'
     */
    @Test
    public void dvbSdtSettingsTest() {
        // TODO: test dvbSdtSettings
    }

    /**
     * Test the property 'dvbSubPids'
     */
    @Test
    public void dvbSubPidsTest() {
        // TODO: test dvbSubPids
    }

    /**
     * Test the property 'dvbTdtSettings'
     */
    @Test
    public void dvbTdtSettingsTest() {
        // TODO: test dvbTdtSettings
    }

    /**
     * Test the property 'dvbTeletextPid'
     */
    @Test
    public void dvbTeletextPidTest() {
        // TODO: test dvbTeletextPid
    }

    /**
     * Test the property 'ebif'
     */
    @Test
    public void ebifTest() {
        // TODO: test ebif
    }

    /**
     * Test the property 'ebpAudioInterval'
     */
    @Test
    public void ebpAudioIntervalTest() {
        // TODO: test ebpAudioInterval
    }

    /**
     * Test the property 'ebpLookaheadMs'
     */
    @Test
    public void ebpLookaheadMsTest() {
        // TODO: test ebpLookaheadMs
    }

    /**
     * Test the property 'ebpPlacement'
     */
    @Test
    public void ebpPlacementTest() {
        // TODO: test ebpPlacement
    }

    /**
     * Test the property 'ecmPid'
     */
    @Test
    public void ecmPidTest() {
        // TODO: test ecmPid
    }

    /**
     * Test the property 'esRateInPes'
     */
    @Test
    public void esRateInPesTest() {
        // TODO: test esRateInPes
    }

    /**
     * Test the property 'etvPlatformPid'
     */
    @Test
    public void etvPlatformPidTest() {
        // TODO: test etvPlatformPid
    }

    /**
     * Test the property 'etvSignalPid'
     */
    @Test
    public void etvSignalPidTest() {
        // TODO: test etvSignalPid
    }

    /**
     * Test the property 'fragmentTime'
     */
    @Test
    public void fragmentTimeTest() {
        // TODO: test fragmentTime
    }

    /**
     * Test the property 'klv'
     */
    @Test
    public void klvTest() {
        // TODO: test klv
    }

    /**
     * Test the property 'klvDataPids'
     */
    @Test
    public void klvDataPidsTest() {
        // TODO: test klvDataPids
    }

    /**
     * Test the property 'nielsenId3Behavior'
     */
    @Test
    public void nielsenId3BehaviorTest() {
        // TODO: test nielsenId3Behavior
    }

    /**
     * Test the property 'nullPacketBitrate'
     */
    @Test
    public void nullPacketBitrateTest() {
        // TODO: test nullPacketBitrate
    }

    /**
     * Test the property 'patInterval'
     */
    @Test
    public void patIntervalTest() {
        // TODO: test patInterval
    }

    /**
     * Test the property 'pcrControl'
     */
    @Test
    public void pcrControlTest() {
        // TODO: test pcrControl
    }

    /**
     * Test the property 'pcrPeriod'
     */
    @Test
    public void pcrPeriodTest() {
        // TODO: test pcrPeriod
    }

    /**
     * Test the property 'pcrPid'
     */
    @Test
    public void pcrPidTest() {
        // TODO: test pcrPid
    }

    /**
     * Test the property 'pmtInterval'
     */
    @Test
    public void pmtIntervalTest() {
        // TODO: test pmtInterval
    }

    /**
     * Test the property 'pmtPid'
     */
    @Test
    public void pmtPidTest() {
        // TODO: test pmtPid
    }

    /**
     * Test the property 'programNum'
     */
    @Test
    public void programNumTest() {
        // TODO: test programNum
    }

    /**
     * Test the property 'rateMode'
     */
    @Test
    public void rateModeTest() {
        // TODO: test rateMode
    }

    /**
     * Test the property 'scte27Pids'
     */
    @Test
    public void scte27PidsTest() {
        // TODO: test scte27Pids
    }

    /**
     * Test the property 'scte35Control'
     */
    @Test
    public void scte35ControlTest() {
        // TODO: test scte35Control
    }

    /**
     * Test the property 'scte35Pid'
     */
    @Test
    public void scte35PidTest() {
        // TODO: test scte35Pid
    }

    /**
     * Test the property 'segmentationMarkers'
     */
    @Test
    public void segmentationMarkersTest() {
        // TODO: test segmentationMarkers
    }

    /**
     * Test the property 'segmentationStyle'
     */
    @Test
    public void segmentationStyleTest() {
        // TODO: test segmentationStyle
    }

    /**
     * Test the property 'segmentationTime'
     */
    @Test
    public void segmentationTimeTest() {
        // TODO: test segmentationTime
    }

    /**
     * Test the property 'timedMetadataBehavior'
     */
    @Test
    public void timedMetadataBehaviorTest() {
        // TODO: test timedMetadataBehavior
    }

    /**
     * Test the property 'timedMetadataPid'
     */
    @Test
    public void timedMetadataPidTest() {
        // TODO: test timedMetadataPid
    }

    /**
     * Test the property 'transportStreamId'
     */
    @Test
    public void transportStreamIdTest() {
        // TODO: test transportStreamId
    }

    /**
     * Test the property 'videoPid'
     */
    @Test
    public void videoPidTest() {
        // TODO: test videoPid
    }

    /**
     * Test the property 'scte35PrerollPullupMilliseconds'
     */
    @Test
    public void scte35PrerollPullupMillisecondsTest() {
        // TODO: test scte35PrerollPullupMilliseconds
    }

}
