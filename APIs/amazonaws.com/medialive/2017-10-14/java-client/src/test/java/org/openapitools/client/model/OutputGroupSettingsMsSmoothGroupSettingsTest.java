/*
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.InputLossActionForMsSmoothOut;
import org.openapitools.client.model.MsSmoothGroupSettingsDestination;
import org.openapitools.client.model.SmoothGroupAudioOnlyTimecodeControl;
import org.openapitools.client.model.SmoothGroupCertificateMode;
import org.openapitools.client.model.SmoothGroupEventIdMode;
import org.openapitools.client.model.SmoothGroupEventStopBehavior;
import org.openapitools.client.model.SmoothGroupSegmentationMode;
import org.openapitools.client.model.SmoothGroupSparseTrackType;
import org.openapitools.client.model.SmoothGroupStreamManifestBehavior;
import org.openapitools.client.model.SmoothGroupTimestampOffsetMode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OutputGroupSettingsMsSmoothGroupSettings
 */
public class OutputGroupSettingsMsSmoothGroupSettingsTest {
    private final OutputGroupSettingsMsSmoothGroupSettings model = new OutputGroupSettingsMsSmoothGroupSettings();

    /**
     * Model tests for OutputGroupSettingsMsSmoothGroupSettings
     */
    @Test
    public void testOutputGroupSettingsMsSmoothGroupSettings() {
        // TODO: test OutputGroupSettingsMsSmoothGroupSettings
    }

    /**
     * Test the property 'acquisitionPointId'
     */
    @Test
    public void acquisitionPointIdTest() {
        // TODO: test acquisitionPointId
    }

    /**
     * Test the property 'audioOnlyTimecodeControl'
     */
    @Test
    public void audioOnlyTimecodeControlTest() {
        // TODO: test audioOnlyTimecodeControl
    }

    /**
     * Test the property 'certificateMode'
     */
    @Test
    public void certificateModeTest() {
        // TODO: test certificateMode
    }

    /**
     * Test the property 'connectionRetryInterval'
     */
    @Test
    public void connectionRetryIntervalTest() {
        // TODO: test connectionRetryInterval
    }

    /**
     * Test the property 'destination'
     */
    @Test
    public void destinationTest() {
        // TODO: test destination
    }

    /**
     * Test the property 'eventId'
     */
    @Test
    public void eventIdTest() {
        // TODO: test eventId
    }

    /**
     * Test the property 'eventIdMode'
     */
    @Test
    public void eventIdModeTest() {
        // TODO: test eventIdMode
    }

    /**
     * Test the property 'eventStopBehavior'
     */
    @Test
    public void eventStopBehaviorTest() {
        // TODO: test eventStopBehavior
    }

    /**
     * Test the property 'filecacheDuration'
     */
    @Test
    public void filecacheDurationTest() {
        // TODO: test filecacheDuration
    }

    /**
     * Test the property 'fragmentLength'
     */
    @Test
    public void fragmentLengthTest() {
        // TODO: test fragmentLength
    }

    /**
     * Test the property 'inputLossAction'
     */
    @Test
    public void inputLossActionTest() {
        // TODO: test inputLossAction
    }

    /**
     * Test the property 'numRetries'
     */
    @Test
    public void numRetriesTest() {
        // TODO: test numRetries
    }

    /**
     * Test the property 'restartDelay'
     */
    @Test
    public void restartDelayTest() {
        // TODO: test restartDelay
    }

    /**
     * Test the property 'segmentationMode'
     */
    @Test
    public void segmentationModeTest() {
        // TODO: test segmentationMode
    }

    /**
     * Test the property 'sendDelayMs'
     */
    @Test
    public void sendDelayMsTest() {
        // TODO: test sendDelayMs
    }

    /**
     * Test the property 'sparseTrackType'
     */
    @Test
    public void sparseTrackTypeTest() {
        // TODO: test sparseTrackType
    }

    /**
     * Test the property 'streamManifestBehavior'
     */
    @Test
    public void streamManifestBehaviorTest() {
        // TODO: test streamManifestBehavior
    }

    /**
     * Test the property 'timestampOffset'
     */
    @Test
    public void timestampOffsetTest() {
        // TODO: test timestampOffset
    }

    /**
     * Test the property 'timestampOffsetMode'
     */
    @Test
    public void timestampOffsetModeTest() {
        // TODO: test timestampOffsetMode
    }

}
