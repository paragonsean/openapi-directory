/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElementalMediaLive);
  }
}(this, function(expect, AwsElementalMediaLive) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElementalMediaLive.M2tsSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('M2tsSettings', function() {
    it('should create an instance of M2tsSettings', function() {
      // uncomment below and update the code to test M2tsSettings
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be.a(AwsElementalMediaLive.M2tsSettings);
    });

    it('should have the property absentInputAudioBehavior (base name: "AbsentInputAudioBehavior")', function() {
      // uncomment below and update the code to test the property absentInputAudioBehavior
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property arib (base name: "Arib")', function() {
      // uncomment below and update the code to test the property arib
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property aribCaptionsPid (base name: "AribCaptionsPid")', function() {
      // uncomment below and update the code to test the property aribCaptionsPid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property aribCaptionsPidControl (base name: "AribCaptionsPidControl")', function() {
      // uncomment below and update the code to test the property aribCaptionsPidControl
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property audioBufferModel (base name: "AudioBufferModel")', function() {
      // uncomment below and update the code to test the property audioBufferModel
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property audioFramesPerPes (base name: "AudioFramesPerPes")', function() {
      // uncomment below and update the code to test the property audioFramesPerPes
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property audioPids (base name: "AudioPids")', function() {
      // uncomment below and update the code to test the property audioPids
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property audioStreamType (base name: "AudioStreamType")', function() {
      // uncomment below and update the code to test the property audioStreamType
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property bitrate (base name: "Bitrate")', function() {
      // uncomment below and update the code to test the property bitrate
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property bufferModel (base name: "BufferModel")', function() {
      // uncomment below and update the code to test the property bufferModel
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property ccDescriptor (base name: "CcDescriptor")', function() {
      // uncomment below and update the code to test the property ccDescriptor
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property dvbNitSettings (base name: "DvbNitSettings")', function() {
      // uncomment below and update the code to test the property dvbNitSettings
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property dvbSdtSettings (base name: "DvbSdtSettings")', function() {
      // uncomment below and update the code to test the property dvbSdtSettings
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property dvbSubPids (base name: "DvbSubPids")', function() {
      // uncomment below and update the code to test the property dvbSubPids
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property dvbTdtSettings (base name: "DvbTdtSettings")', function() {
      // uncomment below and update the code to test the property dvbTdtSettings
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property dvbTeletextPid (base name: "DvbTeletextPid")', function() {
      // uncomment below and update the code to test the property dvbTeletextPid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property ebif (base name: "Ebif")', function() {
      // uncomment below and update the code to test the property ebif
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property ebpAudioInterval (base name: "EbpAudioInterval")', function() {
      // uncomment below and update the code to test the property ebpAudioInterval
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property ebpLookaheadMs (base name: "EbpLookaheadMs")', function() {
      // uncomment below and update the code to test the property ebpLookaheadMs
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property ebpPlacement (base name: "EbpPlacement")', function() {
      // uncomment below and update the code to test the property ebpPlacement
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property ecmPid (base name: "EcmPid")', function() {
      // uncomment below and update the code to test the property ecmPid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property esRateInPes (base name: "EsRateInPes")', function() {
      // uncomment below and update the code to test the property esRateInPes
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property etvPlatformPid (base name: "EtvPlatformPid")', function() {
      // uncomment below and update the code to test the property etvPlatformPid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property etvSignalPid (base name: "EtvSignalPid")', function() {
      // uncomment below and update the code to test the property etvSignalPid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property fragmentTime (base name: "FragmentTime")', function() {
      // uncomment below and update the code to test the property fragmentTime
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property klv (base name: "Klv")', function() {
      // uncomment below and update the code to test the property klv
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property klvDataPids (base name: "KlvDataPids")', function() {
      // uncomment below and update the code to test the property klvDataPids
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property nielsenId3Behavior (base name: "NielsenId3Behavior")', function() {
      // uncomment below and update the code to test the property nielsenId3Behavior
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property nullPacketBitrate (base name: "NullPacketBitrate")', function() {
      // uncomment below and update the code to test the property nullPacketBitrate
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property patInterval (base name: "PatInterval")', function() {
      // uncomment below and update the code to test the property patInterval
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property pcrControl (base name: "PcrControl")', function() {
      // uncomment below and update the code to test the property pcrControl
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property pcrPeriod (base name: "PcrPeriod")', function() {
      // uncomment below and update the code to test the property pcrPeriod
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property pcrPid (base name: "PcrPid")', function() {
      // uncomment below and update the code to test the property pcrPid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property pmtInterval (base name: "PmtInterval")', function() {
      // uncomment below and update the code to test the property pmtInterval
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property pmtPid (base name: "PmtPid")', function() {
      // uncomment below and update the code to test the property pmtPid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property programNum (base name: "ProgramNum")', function() {
      // uncomment below and update the code to test the property programNum
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property rateMode (base name: "RateMode")', function() {
      // uncomment below and update the code to test the property rateMode
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property scte27Pids (base name: "Scte27Pids")', function() {
      // uncomment below and update the code to test the property scte27Pids
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property scte35Control (base name: "Scte35Control")', function() {
      // uncomment below and update the code to test the property scte35Control
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property scte35Pid (base name: "Scte35Pid")', function() {
      // uncomment below and update the code to test the property scte35Pid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property segmentationMarkers (base name: "SegmentationMarkers")', function() {
      // uncomment below and update the code to test the property segmentationMarkers
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property segmentationStyle (base name: "SegmentationStyle")', function() {
      // uncomment below and update the code to test the property segmentationStyle
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property segmentationTime (base name: "SegmentationTime")', function() {
      // uncomment below and update the code to test the property segmentationTime
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property timedMetadataBehavior (base name: "TimedMetadataBehavior")', function() {
      // uncomment below and update the code to test the property timedMetadataBehavior
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property timedMetadataPid (base name: "TimedMetadataPid")', function() {
      // uncomment below and update the code to test the property timedMetadataPid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property transportStreamId (base name: "TransportStreamId")', function() {
      // uncomment below and update the code to test the property transportStreamId
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property videoPid (base name: "VideoPid")', function() {
      // uncomment below and update the code to test the property videoPid
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

    it('should have the property scte35PrerollPullupMilliseconds (base name: "Scte35PrerollPullupMilliseconds")', function() {
      // uncomment below and update the code to test the property scte35PrerollPullupMilliseconds
      //var instance = new AwsElementalMediaLive.M2tsSettings();
      //expect(instance).to.be();
    });

  });

}));
