/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElementalMediaLive);
  }
}(this, function(expect, AwsElementalMediaLive) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OutputGroupSettingsHlsGroupSettings', function() {
    it('should create an instance of OutputGroupSettingsHlsGroupSettings', function() {
      // uncomment below and update the code to test OutputGroupSettingsHlsGroupSettings
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be.a(AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings);
    });

    it('should have the property adMarkers (base name: "AdMarkers")', function() {
      // uncomment below and update the code to test the property adMarkers
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property baseUrlContent (base name: "BaseUrlContent")', function() {
      // uncomment below and update the code to test the property baseUrlContent
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property baseUrlContent1 (base name: "BaseUrlContent1")', function() {
      // uncomment below and update the code to test the property baseUrlContent1
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property baseUrlManifest (base name: "BaseUrlManifest")', function() {
      // uncomment below and update the code to test the property baseUrlManifest
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property baseUrlManifest1 (base name: "BaseUrlManifest1")', function() {
      // uncomment below and update the code to test the property baseUrlManifest1
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property captionLanguageMappings (base name: "CaptionLanguageMappings")', function() {
      // uncomment below and update the code to test the property captionLanguageMappings
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property captionLanguageSetting (base name: "CaptionLanguageSetting")', function() {
      // uncomment below and update the code to test the property captionLanguageSetting
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property clientCache (base name: "ClientCache")', function() {
      // uncomment below and update the code to test the property clientCache
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property codecSpecification (base name: "CodecSpecification")', function() {
      // uncomment below and update the code to test the property codecSpecification
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property constantIv (base name: "ConstantIv")', function() {
      // uncomment below and update the code to test the property constantIv
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property destination (base name: "Destination")', function() {
      // uncomment below and update the code to test the property destination
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property directoryStructure (base name: "DirectoryStructure")', function() {
      // uncomment below and update the code to test the property directoryStructure
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property discontinuityTags (base name: "DiscontinuityTags")', function() {
      // uncomment below and update the code to test the property discontinuityTags
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property encryptionType (base name: "EncryptionType")', function() {
      // uncomment below and update the code to test the property encryptionType
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property hlsCdnSettings (base name: "HlsCdnSettings")', function() {
      // uncomment below and update the code to test the property hlsCdnSettings
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property hlsId3SegmentTagging (base name: "HlsId3SegmentTagging")', function() {
      // uncomment below and update the code to test the property hlsId3SegmentTagging
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property iFrameOnlyPlaylists (base name: "IFrameOnlyPlaylists")', function() {
      // uncomment below and update the code to test the property iFrameOnlyPlaylists
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property incompleteSegmentBehavior (base name: "IncompleteSegmentBehavior")', function() {
      // uncomment below and update the code to test the property incompleteSegmentBehavior
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property indexNSegments (base name: "IndexNSegments")', function() {
      // uncomment below and update the code to test the property indexNSegments
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property inputLossAction (base name: "InputLossAction")', function() {
      // uncomment below and update the code to test the property inputLossAction
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property ivInManifest (base name: "IvInManifest")', function() {
      // uncomment below and update the code to test the property ivInManifest
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property ivSource (base name: "IvSource")', function() {
      // uncomment below and update the code to test the property ivSource
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property keepSegments (base name: "KeepSegments")', function() {
      // uncomment below and update the code to test the property keepSegments
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property keyFormat (base name: "KeyFormat")', function() {
      // uncomment below and update the code to test the property keyFormat
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property keyFormatVersions (base name: "KeyFormatVersions")', function() {
      // uncomment below and update the code to test the property keyFormatVersions
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property keyProviderSettings (base name: "KeyProviderSettings")', function() {
      // uncomment below and update the code to test the property keyProviderSettings
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property manifestCompression (base name: "ManifestCompression")', function() {
      // uncomment below and update the code to test the property manifestCompression
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property manifestDurationFormat (base name: "ManifestDurationFormat")', function() {
      // uncomment below and update the code to test the property manifestDurationFormat
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property minSegmentLength (base name: "MinSegmentLength")', function() {
      // uncomment below and update the code to test the property minSegmentLength
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property mode (base name: "Mode")', function() {
      // uncomment below and update the code to test the property mode
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property outputSelection (base name: "OutputSelection")', function() {
      // uncomment below and update the code to test the property outputSelection
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property programDateTime (base name: "ProgramDateTime")', function() {
      // uncomment below and update the code to test the property programDateTime
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property programDateTimeClock (base name: "ProgramDateTimeClock")', function() {
      // uncomment below and update the code to test the property programDateTimeClock
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property programDateTimePeriod (base name: "ProgramDateTimePeriod")', function() {
      // uncomment below and update the code to test the property programDateTimePeriod
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property redundantManifest (base name: "RedundantManifest")', function() {
      // uncomment below and update the code to test the property redundantManifest
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property segmentLength (base name: "SegmentLength")', function() {
      // uncomment below and update the code to test the property segmentLength
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property segmentationMode (base name: "SegmentationMode")', function() {
      // uncomment below and update the code to test the property segmentationMode
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property segmentsPerSubdirectory (base name: "SegmentsPerSubdirectory")', function() {
      // uncomment below and update the code to test the property segmentsPerSubdirectory
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property streamInfResolution (base name: "StreamInfResolution")', function() {
      // uncomment below and update the code to test the property streamInfResolution
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property timedMetadataId3Frame (base name: "TimedMetadataId3Frame")', function() {
      // uncomment below and update the code to test the property timedMetadataId3Frame
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property timedMetadataId3Period (base name: "TimedMetadataId3Period")', function() {
      // uncomment below and update the code to test the property timedMetadataId3Period
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property timestampDeltaMilliseconds (base name: "TimestampDeltaMilliseconds")', function() {
      // uncomment below and update the code to test the property timestampDeltaMilliseconds
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

    it('should have the property tsFileMode (base name: "TsFileMode")', function() {
      // uncomment below and update the code to test the property tsFileMode
      //var instance = new AwsElementalMediaLive.OutputGroupSettingsHlsGroupSettings();
      //expect(instance).to.be();
    });

  });

}));
