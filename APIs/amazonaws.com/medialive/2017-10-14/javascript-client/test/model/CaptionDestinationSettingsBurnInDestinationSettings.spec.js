/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElementalMediaLive);
  }
}(this, function(expect, AwsElementalMediaLive) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CaptionDestinationSettingsBurnInDestinationSettings', function() {
    it('should create an instance of CaptionDestinationSettingsBurnInDestinationSettings', function() {
      // uncomment below and update the code to test CaptionDestinationSettingsBurnInDestinationSettings
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be.a(AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings);
    });

    it('should have the property alignment (base name: "Alignment")', function() {
      // uncomment below and update the code to test the property alignment
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property backgroundColor (base name: "BackgroundColor")', function() {
      // uncomment below and update the code to test the property backgroundColor
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property backgroundOpacity (base name: "BackgroundOpacity")', function() {
      // uncomment below and update the code to test the property backgroundOpacity
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property font (base name: "Font")', function() {
      // uncomment below and update the code to test the property font
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property fontColor (base name: "FontColor")', function() {
      // uncomment below and update the code to test the property fontColor
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property fontOpacity (base name: "FontOpacity")', function() {
      // uncomment below and update the code to test the property fontOpacity
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property fontResolution (base name: "FontResolution")', function() {
      // uncomment below and update the code to test the property fontResolution
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property fontSize (base name: "FontSize")', function() {
      // uncomment below and update the code to test the property fontSize
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property outlineColor (base name: "OutlineColor")', function() {
      // uncomment below and update the code to test the property outlineColor
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property outlineSize (base name: "OutlineSize")', function() {
      // uncomment below and update the code to test the property outlineSize
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property shadowColor (base name: "ShadowColor")', function() {
      // uncomment below and update the code to test the property shadowColor
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property shadowOpacity (base name: "ShadowOpacity")', function() {
      // uncomment below and update the code to test the property shadowOpacity
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property shadowXOffset (base name: "ShadowXOffset")', function() {
      // uncomment below and update the code to test the property shadowXOffset
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property shadowYOffset (base name: "ShadowYOffset")', function() {
      // uncomment below and update the code to test the property shadowYOffset
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property teletextGridControl (base name: "TeletextGridControl")', function() {
      // uncomment below and update the code to test the property teletextGridControl
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property xPosition (base name: "XPosition")', function() {
      // uncomment below and update the code to test the property xPosition
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

    it('should have the property yPosition (base name: "YPosition")', function() {
      // uncomment below and update the code to test the property yPosition
      //var instance = new AwsElementalMediaLive.CaptionDestinationSettingsBurnInDestinationSettings();
      //expect(instance).to.be();
    });

  });

}));
