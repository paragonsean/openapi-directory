/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Scte35SpliceInsertNoRegionalBlackoutBehavior from './Scte35SpliceInsertNoRegionalBlackoutBehavior';
import Scte35SpliceInsertWebDeliveryAllowedBehavior from './Scte35SpliceInsertWebDeliveryAllowedBehavior';

/**
 * The Scte35SpliceInsert model module.
 * @module model/Scte35SpliceInsert
 * @version 2017-10-14
 */
class Scte35SpliceInsert {
    /**
     * Constructs a new <code>Scte35SpliceInsert</code>.
     * Typical configuration that applies breaks on splice inserts in addition to time signal placement opportunities, breaks, and advertisements.
     * @alias module:model/Scte35SpliceInsert
     */
    constructor() { 
        
        Scte35SpliceInsert.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Scte35SpliceInsert</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Scte35SpliceInsert} obj Optional instance to populate.
     * @return {module:model/Scte35SpliceInsert} The populated <code>Scte35SpliceInsert</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Scte35SpliceInsert();

            if (data.hasOwnProperty('AdAvailOffset')) {
                obj['AdAvailOffset'] = ApiClient.convertToType(data['AdAvailOffset'], 'Number');
            }
            if (data.hasOwnProperty('NoRegionalBlackoutFlag')) {
                obj['NoRegionalBlackoutFlag'] = ApiClient.convertToType(data['NoRegionalBlackoutFlag'], Scte35SpliceInsertNoRegionalBlackoutBehavior);
            }
            if (data.hasOwnProperty('WebDeliveryAllowedFlag')) {
                obj['WebDeliveryAllowedFlag'] = ApiClient.convertToType(data['WebDeliveryAllowedFlag'], Scte35SpliceInsertWebDeliveryAllowedBehavior);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Scte35SpliceInsert</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Scte35SpliceInsert</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AdAvailOffset`
        if (data['AdAvailOffset']) { // data not null
          Number.validateJSON(data['AdAvailOffset']);
        }
        // validate the optional field `NoRegionalBlackoutFlag`
        if (data['NoRegionalBlackoutFlag']) { // data not null
          Scte35SpliceInsertNoRegionalBlackoutBehavior.validateJSON(data['NoRegionalBlackoutFlag']);
        }
        // validate the optional field `WebDeliveryAllowedFlag`
        if (data['WebDeliveryAllowedFlag']) { // data not null
          Scte35SpliceInsertWebDeliveryAllowedBehavior.validateJSON(data['WebDeliveryAllowedFlag']);
        }

        return true;
    }


}



/**
 * @member {Number} AdAvailOffset
 */
Scte35SpliceInsert.prototype['AdAvailOffset'] = undefined;

/**
 * @member {module:model/Scte35SpliceInsertNoRegionalBlackoutBehavior} NoRegionalBlackoutFlag
 */
Scte35SpliceInsert.prototype['NoRegionalBlackoutFlag'] = undefined;

/**
 * @member {module:model/Scte35SpliceInsertWebDeliveryAllowedBehavior} WebDeliveryAllowedFlag
 */
Scte35SpliceInsert.prototype['WebDeliveryAllowedFlag'] = undefined;






export default Scte35SpliceInsert;

