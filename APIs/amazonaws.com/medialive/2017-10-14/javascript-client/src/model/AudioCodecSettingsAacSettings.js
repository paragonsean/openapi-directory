/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AacCodingMode from './AacCodingMode';
import AacInputType from './AacInputType';
import AacProfile from './AacProfile';
import AacRateControlMode from './AacRateControlMode';
import AacRawFormat from './AacRawFormat';
import AacSettings from './AacSettings';
import AacSpec from './AacSpec';
import AacVbrQuality from './AacVbrQuality';

/**
 * The AudioCodecSettingsAacSettings model module.
 * @module model/AudioCodecSettingsAacSettings
 * @version 2017-10-14
 */
class AudioCodecSettingsAacSettings {
    /**
     * Constructs a new <code>AudioCodecSettingsAacSettings</code>.
     * @alias module:model/AudioCodecSettingsAacSettings
     * @implements module:model/AacSettings
     */
    constructor() { 
        AacSettings.initialize(this);
        AudioCodecSettingsAacSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AudioCodecSettingsAacSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioCodecSettingsAacSettings} obj Optional instance to populate.
     * @return {module:model/AudioCodecSettingsAacSettings} The populated <code>AudioCodecSettingsAacSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioCodecSettingsAacSettings();
            AacSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('Bitrate')) {
                obj['Bitrate'] = ApiClient.convertToType(data['Bitrate'], 'Number');
            }
            if (data.hasOwnProperty('CodingMode')) {
                obj['CodingMode'] = ApiClient.convertToType(data['CodingMode'], AacCodingMode);
            }
            if (data.hasOwnProperty('InputType')) {
                obj['InputType'] = ApiClient.convertToType(data['InputType'], AacInputType);
            }
            if (data.hasOwnProperty('Profile')) {
                obj['Profile'] = ApiClient.convertToType(data['Profile'], AacProfile);
            }
            if (data.hasOwnProperty('RateControlMode')) {
                obj['RateControlMode'] = ApiClient.convertToType(data['RateControlMode'], AacRateControlMode);
            }
            if (data.hasOwnProperty('RawFormat')) {
                obj['RawFormat'] = ApiClient.convertToType(data['RawFormat'], AacRawFormat);
            }
            if (data.hasOwnProperty('SampleRate')) {
                obj['SampleRate'] = ApiClient.convertToType(data['SampleRate'], 'Number');
            }
            if (data.hasOwnProperty('Spec')) {
                obj['Spec'] = ApiClient.convertToType(data['Spec'], AacSpec);
            }
            if (data.hasOwnProperty('VbrQuality')) {
                obj['VbrQuality'] = ApiClient.convertToType(data['VbrQuality'], AacVbrQuality);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioCodecSettingsAacSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioCodecSettingsAacSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Bitrate`
        if (data['Bitrate']) { // data not null
          Number.validateJSON(data['Bitrate']);
        }
        // validate the optional field `CodingMode`
        if (data['CodingMode']) { // data not null
          AacCodingMode.validateJSON(data['CodingMode']);
        }
        // validate the optional field `InputType`
        if (data['InputType']) { // data not null
          AacInputType.validateJSON(data['InputType']);
        }
        // validate the optional field `Profile`
        if (data['Profile']) { // data not null
          AacProfile.validateJSON(data['Profile']);
        }
        // validate the optional field `RateControlMode`
        if (data['RateControlMode']) { // data not null
          AacRateControlMode.validateJSON(data['RateControlMode']);
        }
        // validate the optional field `RawFormat`
        if (data['RawFormat']) { // data not null
          AacRawFormat.validateJSON(data['RawFormat']);
        }
        // validate the optional field `SampleRate`
        if (data['SampleRate']) { // data not null
          Number.validateJSON(data['SampleRate']);
        }
        // validate the optional field `Spec`
        if (data['Spec']) { // data not null
          AacSpec.validateJSON(data['Spec']);
        }
        // validate the optional field `VbrQuality`
        if (data['VbrQuality']) { // data not null
          AacVbrQuality.validateJSON(data['VbrQuality']);
        }

        return true;
    }


}



/**
 * @member {Number} Bitrate
 */
AudioCodecSettingsAacSettings.prototype['Bitrate'] = undefined;

/**
 * @member {module:model/AacCodingMode} CodingMode
 */
AudioCodecSettingsAacSettings.prototype['CodingMode'] = undefined;

/**
 * @member {module:model/AacInputType} InputType
 */
AudioCodecSettingsAacSettings.prototype['InputType'] = undefined;

/**
 * @member {module:model/AacProfile} Profile
 */
AudioCodecSettingsAacSettings.prototype['Profile'] = undefined;

/**
 * @member {module:model/AacRateControlMode} RateControlMode
 */
AudioCodecSettingsAacSettings.prototype['RateControlMode'] = undefined;

/**
 * @member {module:model/AacRawFormat} RawFormat
 */
AudioCodecSettingsAacSettings.prototype['RawFormat'] = undefined;

/**
 * @member {Number} SampleRate
 */
AudioCodecSettingsAacSettings.prototype['SampleRate'] = undefined;

/**
 * @member {module:model/AacSpec} Spec
 */
AudioCodecSettingsAacSettings.prototype['Spec'] = undefined;

/**
 * @member {module:model/AacVbrQuality} VbrQuality
 */
AudioCodecSettingsAacSettings.prototype['VbrQuality'] = undefined;


// Implement AacSettings interface:
/**
 * @member {Number} Bitrate
 */
AacSettings.prototype['Bitrate'] = undefined;
/**
 * @member {module:model/AacCodingMode} CodingMode
 */
AacSettings.prototype['CodingMode'] = undefined;
/**
 * @member {module:model/AacInputType} InputType
 */
AacSettings.prototype['InputType'] = undefined;
/**
 * @member {module:model/AacProfile} Profile
 */
AacSettings.prototype['Profile'] = undefined;
/**
 * @member {module:model/AacRateControlMode} RateControlMode
 */
AacSettings.prototype['RateControlMode'] = undefined;
/**
 * @member {module:model/AacRawFormat} RawFormat
 */
AacSettings.prototype['RawFormat'] = undefined;
/**
 * @member {Number} SampleRate
 */
AacSettings.prototype['SampleRate'] = undefined;
/**
 * @member {module:model/AacSpec} Spec
 */
AacSettings.prototype['Spec'] = undefined;
/**
 * @member {module:model/AacVbrQuality} VbrQuality
 */
AacSettings.prototype['VbrQuality'] = undefined;




export default AudioCodecSettingsAacSettings;

