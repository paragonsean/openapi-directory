/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NielsenCBET from './NielsenCBET';
import NielsenWatermarksCbetStepaside from './NielsenWatermarksCbetStepaside';

/**
 * The NielsenWatermarksSettingsNielsenCbetSettings model module.
 * @module model/NielsenWatermarksSettingsNielsenCbetSettings
 * @version 2017-10-14
 */
class NielsenWatermarksSettingsNielsenCbetSettings {
    /**
     * Constructs a new <code>NielsenWatermarksSettingsNielsenCbetSettings</code>.
     * @alias module:model/NielsenWatermarksSettingsNielsenCbetSettings
     * @implements module:model/NielsenCBET
     * @param cbetCheckDigitString {String} 
     * @param cbetStepaside {module:model/NielsenWatermarksCbetStepaside} 
     * @param csid {String} 
     */
    constructor(cbetCheckDigitString, cbetStepaside, csid) { 
        NielsenCBET.initialize(this, cbetCheckDigitString, cbetStepaside, csid);
        NielsenWatermarksSettingsNielsenCbetSettings.initialize(this, cbetCheckDigitString, cbetStepaside, csid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cbetCheckDigitString, cbetStepaside, csid) { 
        obj['CbetCheckDigitString'] = cbetCheckDigitString;
        obj['CbetStepaside'] = cbetStepaside;
        obj['Csid'] = csid;
    }

    /**
     * Constructs a <code>NielsenWatermarksSettingsNielsenCbetSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NielsenWatermarksSettingsNielsenCbetSettings} obj Optional instance to populate.
     * @return {module:model/NielsenWatermarksSettingsNielsenCbetSettings} The populated <code>NielsenWatermarksSettingsNielsenCbetSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NielsenWatermarksSettingsNielsenCbetSettings();
            NielsenCBET.constructFromObject(data, obj);

            if (data.hasOwnProperty('CbetCheckDigitString')) {
                obj['CbetCheckDigitString'] = ApiClient.convertToType(data['CbetCheckDigitString'], 'String');
            }
            if (data.hasOwnProperty('CbetStepaside')) {
                obj['CbetStepaside'] = ApiClient.convertToType(data['CbetStepaside'], NielsenWatermarksCbetStepaside);
            }
            if (data.hasOwnProperty('Csid')) {
                obj['Csid'] = ApiClient.convertToType(data['Csid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NielsenWatermarksSettingsNielsenCbetSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NielsenWatermarksSettingsNielsenCbetSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NielsenWatermarksSettingsNielsenCbetSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CbetCheckDigitString`
        if (data['CbetCheckDigitString']) { // data not null
          String.validateJSON(data['CbetCheckDigitString']);
        }
        // validate the optional field `CbetStepaside`
        if (data['CbetStepaside']) { // data not null
          NielsenWatermarksCbetStepaside.validateJSON(data['CbetStepaside']);
        }
        // validate the optional field `Csid`
        if (data['Csid']) { // data not null
          String.validateJSON(data['Csid']);
        }

        return true;
    }


}

NielsenWatermarksSettingsNielsenCbetSettings.RequiredProperties = ["CbetCheckDigitString", "CbetStepaside", "Csid"];

/**
 * @member {String} CbetCheckDigitString
 */
NielsenWatermarksSettingsNielsenCbetSettings.prototype['CbetCheckDigitString'] = undefined;

/**
 * @member {module:model/NielsenWatermarksCbetStepaside} CbetStepaside
 */
NielsenWatermarksSettingsNielsenCbetSettings.prototype['CbetStepaside'] = undefined;

/**
 * @member {String} Csid
 */
NielsenWatermarksSettingsNielsenCbetSettings.prototype['Csid'] = undefined;


// Implement NielsenCBET interface:
/**
 * @member {String} CbetCheckDigitString
 */
NielsenCBET.prototype['CbetCheckDigitString'] = undefined;
/**
 * @member {module:model/NielsenWatermarksCbetStepaside} CbetStepaside
 */
NielsenCBET.prototype['CbetStepaside'] = undefined;
/**
 * @member {String} Csid
 */
NielsenCBET.prototype['Csid'] = undefined;




export default NielsenWatermarksSettingsNielsenCbetSettings;

