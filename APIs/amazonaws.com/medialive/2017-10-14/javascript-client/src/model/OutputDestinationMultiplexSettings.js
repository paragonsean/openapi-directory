/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MultiplexProgramChannelDestinationSettings from './MultiplexProgramChannelDestinationSettings';

/**
 * The OutputDestinationMultiplexSettings model module.
 * @module model/OutputDestinationMultiplexSettings
 * @version 2017-10-14
 */
class OutputDestinationMultiplexSettings {
    /**
     * Constructs a new <code>OutputDestinationMultiplexSettings</code>.
     * @alias module:model/OutputDestinationMultiplexSettings
     * @implements module:model/MultiplexProgramChannelDestinationSettings
     */
    constructor() { 
        MultiplexProgramChannelDestinationSettings.initialize(this);
        OutputDestinationMultiplexSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OutputDestinationMultiplexSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutputDestinationMultiplexSettings} obj Optional instance to populate.
     * @return {module:model/OutputDestinationMultiplexSettings} The populated <code>OutputDestinationMultiplexSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutputDestinationMultiplexSettings();
            MultiplexProgramChannelDestinationSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('MultiplexId')) {
                obj['MultiplexId'] = ApiClient.convertToType(data['MultiplexId'], 'String');
            }
            if (data.hasOwnProperty('ProgramName')) {
                obj['ProgramName'] = ApiClient.convertToType(data['ProgramName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OutputDestinationMultiplexSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OutputDestinationMultiplexSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MultiplexId`
        if (data['MultiplexId']) { // data not null
          String.validateJSON(data['MultiplexId']);
        }
        // validate the optional field `ProgramName`
        if (data['ProgramName']) { // data not null
          String.validateJSON(data['ProgramName']);
        }

        return true;
    }


}



/**
 * @member {String} MultiplexId
 */
OutputDestinationMultiplexSettings.prototype['MultiplexId'] = undefined;

/**
 * @member {String} ProgramName
 */
OutputDestinationMultiplexSettings.prototype['ProgramName'] = undefined;


// Implement MultiplexProgramChannelDestinationSettings interface:
/**
 * @member {String} MultiplexId
 */
MultiplexProgramChannelDestinationSettings.prototype['MultiplexId'] = undefined;
/**
 * @member {String} ProgramName
 */
MultiplexProgramChannelDestinationSettings.prototype['ProgramName'] = undefined;




export default OutputDestinationMultiplexSettings;

