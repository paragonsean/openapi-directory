/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Scte35SegmentationCancelIndicator from './Scte35SegmentationCancelIndicator';
import Scte35SegmentationDescriptor from './Scte35SegmentationDescriptor';
import Scte35SegmentationDescriptorDeliveryRestrictions from './Scte35SegmentationDescriptorDeliveryRestrictions';

/**
 * The Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings model module.
 * @module model/Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings
 * @version 2017-10-14
 */
class Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings {
    /**
     * Constructs a new <code>Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings</code>.
     * @alias module:model/Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings
     * @implements module:model/Scte35SegmentationDescriptor
     * @param segmentationCancelIndicator {module:model/Scte35SegmentationCancelIndicator} 
     * @param segmentationEventId {Number} 
     */
    constructor(segmentationCancelIndicator, segmentationEventId) { 
        Scte35SegmentationDescriptor.initialize(this, segmentationCancelIndicator, segmentationEventId);
        Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.initialize(this, segmentationCancelIndicator, segmentationEventId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, segmentationCancelIndicator, segmentationEventId) { 
        obj['SegmentationCancelIndicator'] = segmentationCancelIndicator;
        obj['SegmentationEventId'] = segmentationEventId;
    }

    /**
     * Constructs a <code>Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings} obj Optional instance to populate.
     * @return {module:model/Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings} The populated <code>Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings();
            Scte35SegmentationDescriptor.constructFromObject(data, obj);

            if (data.hasOwnProperty('DeliveryRestrictions')) {
                obj['DeliveryRestrictions'] = Scte35SegmentationDescriptorDeliveryRestrictions.constructFromObject(data['DeliveryRestrictions']);
            }
            if (data.hasOwnProperty('SegmentNum')) {
                obj['SegmentNum'] = ApiClient.convertToType(data['SegmentNum'], 'Number');
            }
            if (data.hasOwnProperty('SegmentationCancelIndicator')) {
                obj['SegmentationCancelIndicator'] = ApiClient.convertToType(data['SegmentationCancelIndicator'], Scte35SegmentationCancelIndicator);
            }
            if (data.hasOwnProperty('SegmentationDuration')) {
                obj['SegmentationDuration'] = ApiClient.convertToType(data['SegmentationDuration'], 'Number');
            }
            if (data.hasOwnProperty('SegmentationEventId')) {
                obj['SegmentationEventId'] = ApiClient.convertToType(data['SegmentationEventId'], 'Number');
            }
            if (data.hasOwnProperty('SegmentationTypeId')) {
                obj['SegmentationTypeId'] = ApiClient.convertToType(data['SegmentationTypeId'], 'Number');
            }
            if (data.hasOwnProperty('SegmentationUpid')) {
                obj['SegmentationUpid'] = ApiClient.convertToType(data['SegmentationUpid'], 'String');
            }
            if (data.hasOwnProperty('SegmentationUpidType')) {
                obj['SegmentationUpidType'] = ApiClient.convertToType(data['SegmentationUpidType'], 'Number');
            }
            if (data.hasOwnProperty('SegmentsExpected')) {
                obj['SegmentsExpected'] = ApiClient.convertToType(data['SegmentsExpected'], 'Number');
            }
            if (data.hasOwnProperty('SubSegmentNum')) {
                obj['SubSegmentNum'] = ApiClient.convertToType(data['SubSegmentNum'], 'Number');
            }
            if (data.hasOwnProperty('SubSegmentsExpected')) {
                obj['SubSegmentsExpected'] = ApiClient.convertToType(data['SubSegmentsExpected'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DeliveryRestrictions`
        if (data['DeliveryRestrictions']) { // data not null
          Scte35SegmentationDescriptorDeliveryRestrictions.validateJSON(data['DeliveryRestrictions']);
        }
        // validate the optional field `SegmentNum`
        if (data['SegmentNum']) { // data not null
          Number.validateJSON(data['SegmentNum']);
        }
        // validate the optional field `SegmentationCancelIndicator`
        if (data['SegmentationCancelIndicator']) { // data not null
          Scte35SegmentationCancelIndicator.validateJSON(data['SegmentationCancelIndicator']);
        }
        // validate the optional field `SegmentationDuration`
        if (data['SegmentationDuration']) { // data not null
          Number.validateJSON(data['SegmentationDuration']);
        }
        // validate the optional field `SegmentationEventId`
        if (data['SegmentationEventId']) { // data not null
          Number.validateJSON(data['SegmentationEventId']);
        }
        // validate the optional field `SegmentationTypeId`
        if (data['SegmentationTypeId']) { // data not null
          Number.validateJSON(data['SegmentationTypeId']);
        }
        // validate the optional field `SegmentationUpid`
        if (data['SegmentationUpid']) { // data not null
          String.validateJSON(data['SegmentationUpid']);
        }
        // validate the optional field `SegmentationUpidType`
        if (data['SegmentationUpidType']) { // data not null
          Number.validateJSON(data['SegmentationUpidType']);
        }
        // validate the optional field `SegmentsExpected`
        if (data['SegmentsExpected']) { // data not null
          Number.validateJSON(data['SegmentsExpected']);
        }
        // validate the optional field `SubSegmentNum`
        if (data['SubSegmentNum']) { // data not null
          Number.validateJSON(data['SubSegmentNum']);
        }
        // validate the optional field `SubSegmentsExpected`
        if (data['SubSegmentsExpected']) { // data not null
          Number.validateJSON(data['SubSegmentsExpected']);
        }

        return true;
    }


}

Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.RequiredProperties = ["SegmentationCancelIndicator", "SegmentationEventId"];

/**
 * @member {module:model/Scte35SegmentationDescriptorDeliveryRestrictions} DeliveryRestrictions
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['DeliveryRestrictions'] = undefined;

/**
 * @member {Number} SegmentNum
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SegmentNum'] = undefined;

/**
 * @member {module:model/Scte35SegmentationCancelIndicator} SegmentationCancelIndicator
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SegmentationCancelIndicator'] = undefined;

/**
 * @member {Number} SegmentationDuration
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SegmentationDuration'] = undefined;

/**
 * @member {Number} SegmentationEventId
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SegmentationEventId'] = undefined;

/**
 * @member {Number} SegmentationTypeId
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SegmentationTypeId'] = undefined;

/**
 * @member {String} SegmentationUpid
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SegmentationUpid'] = undefined;

/**
 * @member {Number} SegmentationUpidType
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SegmentationUpidType'] = undefined;

/**
 * @member {Number} SegmentsExpected
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SegmentsExpected'] = undefined;

/**
 * @member {Number} SubSegmentNum
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SubSegmentNum'] = undefined;

/**
 * @member {Number} SubSegmentsExpected
 */
Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings.prototype['SubSegmentsExpected'] = undefined;


// Implement Scte35SegmentationDescriptor interface:
/**
 * @member {module:model/Scte35SegmentationDescriptorDeliveryRestrictions} DeliveryRestrictions
 */
Scte35SegmentationDescriptor.prototype['DeliveryRestrictions'] = undefined;
/**
 * @member {Number} SegmentNum
 */
Scte35SegmentationDescriptor.prototype['SegmentNum'] = undefined;
/**
 * @member {module:model/Scte35SegmentationCancelIndicator} SegmentationCancelIndicator
 */
Scte35SegmentationDescriptor.prototype['SegmentationCancelIndicator'] = undefined;
/**
 * @member {Number} SegmentationDuration
 */
Scte35SegmentationDescriptor.prototype['SegmentationDuration'] = undefined;
/**
 * @member {Number} SegmentationEventId
 */
Scte35SegmentationDescriptor.prototype['SegmentationEventId'] = undefined;
/**
 * @member {Number} SegmentationTypeId
 */
Scte35SegmentationDescriptor.prototype['SegmentationTypeId'] = undefined;
/**
 * @member {String} SegmentationUpid
 */
Scte35SegmentationDescriptor.prototype['SegmentationUpid'] = undefined;
/**
 * @member {Number} SegmentationUpidType
 */
Scte35SegmentationDescriptor.prototype['SegmentationUpidType'] = undefined;
/**
 * @member {Number} SegmentsExpected
 */
Scte35SegmentationDescriptor.prototype['SegmentsExpected'] = undefined;
/**
 * @member {Number} SubSegmentNum
 */
Scte35SegmentationDescriptor.prototype['SubSegmentNum'] = undefined;
/**
 * @member {Number} SubSegmentsExpected
 */
Scte35SegmentationDescriptor.prototype['SubSegmentsExpected'] = undefined;




export default Scte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings;

