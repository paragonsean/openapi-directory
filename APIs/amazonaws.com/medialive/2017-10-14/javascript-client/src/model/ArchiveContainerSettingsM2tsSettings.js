/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import M2tsAbsentInputAudioBehavior from './M2tsAbsentInputAudioBehavior';
import M2tsArib from './M2tsArib';
import M2tsAribCaptionsPidControl from './M2tsAribCaptionsPidControl';
import M2tsAudioBufferModel from './M2tsAudioBufferModel';
import M2tsAudioInterval from './M2tsAudioInterval';
import M2tsAudioStreamType from './M2tsAudioStreamType';
import M2tsBufferModel from './M2tsBufferModel';
import M2tsCcDescriptor from './M2tsCcDescriptor';
import M2tsEbifControl from './M2tsEbifControl';
import M2tsEbpPlacement from './M2tsEbpPlacement';
import M2tsEsRateInPes from './M2tsEsRateInPes';
import M2tsKlv from './M2tsKlv';
import M2tsNielsenId3Behavior from './M2tsNielsenId3Behavior';
import M2tsPcrControl from './M2tsPcrControl';
import M2tsRateMode from './M2tsRateMode';
import M2tsScte35Control from './M2tsScte35Control';
import M2tsSegmentationMarkers from './M2tsSegmentationMarkers';
import M2tsSegmentationStyle from './M2tsSegmentationStyle';
import M2tsSettings from './M2tsSettings';
import M2tsSettingsDvbNitSettings from './M2tsSettingsDvbNitSettings';
import M2tsSettingsDvbSdtSettings from './M2tsSettingsDvbSdtSettings';
import M2tsSettingsDvbTdtSettings from './M2tsSettingsDvbTdtSettings';
import M2tsTimedMetadataBehavior from './M2tsTimedMetadataBehavior';

/**
 * The ArchiveContainerSettingsM2tsSettings model module.
 * @module model/ArchiveContainerSettingsM2tsSettings
 * @version 2017-10-14
 */
class ArchiveContainerSettingsM2tsSettings {
    /**
     * Constructs a new <code>ArchiveContainerSettingsM2tsSettings</code>.
     * @alias module:model/ArchiveContainerSettingsM2tsSettings
     * @implements module:model/M2tsSettings
     */
    constructor() { 
        M2tsSettings.initialize(this);
        ArchiveContainerSettingsM2tsSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ArchiveContainerSettingsM2tsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ArchiveContainerSettingsM2tsSettings} obj Optional instance to populate.
     * @return {module:model/ArchiveContainerSettingsM2tsSettings} The populated <code>ArchiveContainerSettingsM2tsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArchiveContainerSettingsM2tsSettings();
            M2tsSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('AbsentInputAudioBehavior')) {
                obj['AbsentInputAudioBehavior'] = ApiClient.convertToType(data['AbsentInputAudioBehavior'], M2tsAbsentInputAudioBehavior);
            }
            if (data.hasOwnProperty('Arib')) {
                obj['Arib'] = ApiClient.convertToType(data['Arib'], M2tsArib);
            }
            if (data.hasOwnProperty('AribCaptionsPid')) {
                obj['AribCaptionsPid'] = ApiClient.convertToType(data['AribCaptionsPid'], 'String');
            }
            if (data.hasOwnProperty('AribCaptionsPidControl')) {
                obj['AribCaptionsPidControl'] = ApiClient.convertToType(data['AribCaptionsPidControl'], M2tsAribCaptionsPidControl);
            }
            if (data.hasOwnProperty('AudioBufferModel')) {
                obj['AudioBufferModel'] = ApiClient.convertToType(data['AudioBufferModel'], M2tsAudioBufferModel);
            }
            if (data.hasOwnProperty('AudioFramesPerPes')) {
                obj['AudioFramesPerPes'] = ApiClient.convertToType(data['AudioFramesPerPes'], 'Number');
            }
            if (data.hasOwnProperty('AudioPids')) {
                obj['AudioPids'] = ApiClient.convertToType(data['AudioPids'], 'String');
            }
            if (data.hasOwnProperty('AudioStreamType')) {
                obj['AudioStreamType'] = ApiClient.convertToType(data['AudioStreamType'], M2tsAudioStreamType);
            }
            if (data.hasOwnProperty('Bitrate')) {
                obj['Bitrate'] = ApiClient.convertToType(data['Bitrate'], 'Number');
            }
            if (data.hasOwnProperty('BufferModel')) {
                obj['BufferModel'] = ApiClient.convertToType(data['BufferModel'], M2tsBufferModel);
            }
            if (data.hasOwnProperty('CcDescriptor')) {
                obj['CcDescriptor'] = ApiClient.convertToType(data['CcDescriptor'], M2tsCcDescriptor);
            }
            if (data.hasOwnProperty('DvbNitSettings')) {
                obj['DvbNitSettings'] = M2tsSettingsDvbNitSettings.constructFromObject(data['DvbNitSettings']);
            }
            if (data.hasOwnProperty('DvbSdtSettings')) {
                obj['DvbSdtSettings'] = M2tsSettingsDvbSdtSettings.constructFromObject(data['DvbSdtSettings']);
            }
            if (data.hasOwnProperty('DvbSubPids')) {
                obj['DvbSubPids'] = ApiClient.convertToType(data['DvbSubPids'], 'String');
            }
            if (data.hasOwnProperty('DvbTdtSettings')) {
                obj['DvbTdtSettings'] = M2tsSettingsDvbTdtSettings.constructFromObject(data['DvbTdtSettings']);
            }
            if (data.hasOwnProperty('DvbTeletextPid')) {
                obj['DvbTeletextPid'] = ApiClient.convertToType(data['DvbTeletextPid'], 'String');
            }
            if (data.hasOwnProperty('Ebif')) {
                obj['Ebif'] = ApiClient.convertToType(data['Ebif'], M2tsEbifControl);
            }
            if (data.hasOwnProperty('EbpAudioInterval')) {
                obj['EbpAudioInterval'] = ApiClient.convertToType(data['EbpAudioInterval'], M2tsAudioInterval);
            }
            if (data.hasOwnProperty('EbpLookaheadMs')) {
                obj['EbpLookaheadMs'] = ApiClient.convertToType(data['EbpLookaheadMs'], 'Number');
            }
            if (data.hasOwnProperty('EbpPlacement')) {
                obj['EbpPlacement'] = ApiClient.convertToType(data['EbpPlacement'], M2tsEbpPlacement);
            }
            if (data.hasOwnProperty('EcmPid')) {
                obj['EcmPid'] = ApiClient.convertToType(data['EcmPid'], 'String');
            }
            if (data.hasOwnProperty('EsRateInPes')) {
                obj['EsRateInPes'] = ApiClient.convertToType(data['EsRateInPes'], M2tsEsRateInPes);
            }
            if (data.hasOwnProperty('EtvPlatformPid')) {
                obj['EtvPlatformPid'] = ApiClient.convertToType(data['EtvPlatformPid'], 'String');
            }
            if (data.hasOwnProperty('EtvSignalPid')) {
                obj['EtvSignalPid'] = ApiClient.convertToType(data['EtvSignalPid'], 'String');
            }
            if (data.hasOwnProperty('FragmentTime')) {
                obj['FragmentTime'] = ApiClient.convertToType(data['FragmentTime'], 'Number');
            }
            if (data.hasOwnProperty('Klv')) {
                obj['Klv'] = ApiClient.convertToType(data['Klv'], M2tsKlv);
            }
            if (data.hasOwnProperty('KlvDataPids')) {
                obj['KlvDataPids'] = ApiClient.convertToType(data['KlvDataPids'], 'String');
            }
            if (data.hasOwnProperty('NielsenId3Behavior')) {
                obj['NielsenId3Behavior'] = ApiClient.convertToType(data['NielsenId3Behavior'], M2tsNielsenId3Behavior);
            }
            if (data.hasOwnProperty('NullPacketBitrate')) {
                obj['NullPacketBitrate'] = ApiClient.convertToType(data['NullPacketBitrate'], 'Number');
            }
            if (data.hasOwnProperty('PatInterval')) {
                obj['PatInterval'] = ApiClient.convertToType(data['PatInterval'], 'Number');
            }
            if (data.hasOwnProperty('PcrControl')) {
                obj['PcrControl'] = ApiClient.convertToType(data['PcrControl'], M2tsPcrControl);
            }
            if (data.hasOwnProperty('PcrPeriod')) {
                obj['PcrPeriod'] = ApiClient.convertToType(data['PcrPeriod'], 'Number');
            }
            if (data.hasOwnProperty('PcrPid')) {
                obj['PcrPid'] = ApiClient.convertToType(data['PcrPid'], 'String');
            }
            if (data.hasOwnProperty('PmtInterval')) {
                obj['PmtInterval'] = ApiClient.convertToType(data['PmtInterval'], 'Number');
            }
            if (data.hasOwnProperty('PmtPid')) {
                obj['PmtPid'] = ApiClient.convertToType(data['PmtPid'], 'String');
            }
            if (data.hasOwnProperty('ProgramNum')) {
                obj['ProgramNum'] = ApiClient.convertToType(data['ProgramNum'], 'Number');
            }
            if (data.hasOwnProperty('RateMode')) {
                obj['RateMode'] = ApiClient.convertToType(data['RateMode'], M2tsRateMode);
            }
            if (data.hasOwnProperty('Scte27Pids')) {
                obj['Scte27Pids'] = ApiClient.convertToType(data['Scte27Pids'], 'String');
            }
            if (data.hasOwnProperty('Scte35Control')) {
                obj['Scte35Control'] = ApiClient.convertToType(data['Scte35Control'], M2tsScte35Control);
            }
            if (data.hasOwnProperty('Scte35Pid')) {
                obj['Scte35Pid'] = ApiClient.convertToType(data['Scte35Pid'], 'String');
            }
            if (data.hasOwnProperty('SegmentationMarkers')) {
                obj['SegmentationMarkers'] = ApiClient.convertToType(data['SegmentationMarkers'], M2tsSegmentationMarkers);
            }
            if (data.hasOwnProperty('SegmentationStyle')) {
                obj['SegmentationStyle'] = ApiClient.convertToType(data['SegmentationStyle'], M2tsSegmentationStyle);
            }
            if (data.hasOwnProperty('SegmentationTime')) {
                obj['SegmentationTime'] = ApiClient.convertToType(data['SegmentationTime'], 'Number');
            }
            if (data.hasOwnProperty('TimedMetadataBehavior')) {
                obj['TimedMetadataBehavior'] = ApiClient.convertToType(data['TimedMetadataBehavior'], M2tsTimedMetadataBehavior);
            }
            if (data.hasOwnProperty('TimedMetadataPid')) {
                obj['TimedMetadataPid'] = ApiClient.convertToType(data['TimedMetadataPid'], 'String');
            }
            if (data.hasOwnProperty('TransportStreamId')) {
                obj['TransportStreamId'] = ApiClient.convertToType(data['TransportStreamId'], 'Number');
            }
            if (data.hasOwnProperty('VideoPid')) {
                obj['VideoPid'] = ApiClient.convertToType(data['VideoPid'], 'String');
            }
            if (data.hasOwnProperty('Scte35PrerollPullupMilliseconds')) {
                obj['Scte35PrerollPullupMilliseconds'] = ApiClient.convertToType(data['Scte35PrerollPullupMilliseconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ArchiveContainerSettingsM2tsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ArchiveContainerSettingsM2tsSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AbsentInputAudioBehavior`
        if (data['AbsentInputAudioBehavior']) { // data not null
          M2tsAbsentInputAudioBehavior.validateJSON(data['AbsentInputAudioBehavior']);
        }
        // validate the optional field `Arib`
        if (data['Arib']) { // data not null
          M2tsArib.validateJSON(data['Arib']);
        }
        // validate the optional field `AribCaptionsPid`
        if (data['AribCaptionsPid']) { // data not null
          String.validateJSON(data['AribCaptionsPid']);
        }
        // validate the optional field `AribCaptionsPidControl`
        if (data['AribCaptionsPidControl']) { // data not null
          M2tsAribCaptionsPidControl.validateJSON(data['AribCaptionsPidControl']);
        }
        // validate the optional field `AudioBufferModel`
        if (data['AudioBufferModel']) { // data not null
          M2tsAudioBufferModel.validateJSON(data['AudioBufferModel']);
        }
        // validate the optional field `AudioFramesPerPes`
        if (data['AudioFramesPerPes']) { // data not null
          Number.validateJSON(data['AudioFramesPerPes']);
        }
        // validate the optional field `AudioPids`
        if (data['AudioPids']) { // data not null
          String.validateJSON(data['AudioPids']);
        }
        // validate the optional field `AudioStreamType`
        if (data['AudioStreamType']) { // data not null
          M2tsAudioStreamType.validateJSON(data['AudioStreamType']);
        }
        // validate the optional field `Bitrate`
        if (data['Bitrate']) { // data not null
          Number.validateJSON(data['Bitrate']);
        }
        // validate the optional field `BufferModel`
        if (data['BufferModel']) { // data not null
          M2tsBufferModel.validateJSON(data['BufferModel']);
        }
        // validate the optional field `CcDescriptor`
        if (data['CcDescriptor']) { // data not null
          M2tsCcDescriptor.validateJSON(data['CcDescriptor']);
        }
        // validate the optional field `DvbNitSettings`
        if (data['DvbNitSettings']) { // data not null
          M2tsSettingsDvbNitSettings.validateJSON(data['DvbNitSettings']);
        }
        // validate the optional field `DvbSdtSettings`
        if (data['DvbSdtSettings']) { // data not null
          M2tsSettingsDvbSdtSettings.validateJSON(data['DvbSdtSettings']);
        }
        // validate the optional field `DvbSubPids`
        if (data['DvbSubPids']) { // data not null
          String.validateJSON(data['DvbSubPids']);
        }
        // validate the optional field `DvbTdtSettings`
        if (data['DvbTdtSettings']) { // data not null
          M2tsSettingsDvbTdtSettings.validateJSON(data['DvbTdtSettings']);
        }
        // validate the optional field `DvbTeletextPid`
        if (data['DvbTeletextPid']) { // data not null
          String.validateJSON(data['DvbTeletextPid']);
        }
        // validate the optional field `Ebif`
        if (data['Ebif']) { // data not null
          M2tsEbifControl.validateJSON(data['Ebif']);
        }
        // validate the optional field `EbpAudioInterval`
        if (data['EbpAudioInterval']) { // data not null
          M2tsAudioInterval.validateJSON(data['EbpAudioInterval']);
        }
        // validate the optional field `EbpLookaheadMs`
        if (data['EbpLookaheadMs']) { // data not null
          Number.validateJSON(data['EbpLookaheadMs']);
        }
        // validate the optional field `EbpPlacement`
        if (data['EbpPlacement']) { // data not null
          M2tsEbpPlacement.validateJSON(data['EbpPlacement']);
        }
        // validate the optional field `EcmPid`
        if (data['EcmPid']) { // data not null
          String.validateJSON(data['EcmPid']);
        }
        // validate the optional field `EsRateInPes`
        if (data['EsRateInPes']) { // data not null
          M2tsEsRateInPes.validateJSON(data['EsRateInPes']);
        }
        // validate the optional field `EtvPlatformPid`
        if (data['EtvPlatformPid']) { // data not null
          String.validateJSON(data['EtvPlatformPid']);
        }
        // validate the optional field `EtvSignalPid`
        if (data['EtvSignalPid']) { // data not null
          String.validateJSON(data['EtvSignalPid']);
        }
        // validate the optional field `FragmentTime`
        if (data['FragmentTime']) { // data not null
          Number.validateJSON(data['FragmentTime']);
        }
        // validate the optional field `Klv`
        if (data['Klv']) { // data not null
          M2tsKlv.validateJSON(data['Klv']);
        }
        // validate the optional field `KlvDataPids`
        if (data['KlvDataPids']) { // data not null
          String.validateJSON(data['KlvDataPids']);
        }
        // validate the optional field `NielsenId3Behavior`
        if (data['NielsenId3Behavior']) { // data not null
          M2tsNielsenId3Behavior.validateJSON(data['NielsenId3Behavior']);
        }
        // validate the optional field `NullPacketBitrate`
        if (data['NullPacketBitrate']) { // data not null
          Number.validateJSON(data['NullPacketBitrate']);
        }
        // validate the optional field `PatInterval`
        if (data['PatInterval']) { // data not null
          Number.validateJSON(data['PatInterval']);
        }
        // validate the optional field `PcrControl`
        if (data['PcrControl']) { // data not null
          M2tsPcrControl.validateJSON(data['PcrControl']);
        }
        // validate the optional field `PcrPeriod`
        if (data['PcrPeriod']) { // data not null
          Number.validateJSON(data['PcrPeriod']);
        }
        // validate the optional field `PcrPid`
        if (data['PcrPid']) { // data not null
          String.validateJSON(data['PcrPid']);
        }
        // validate the optional field `PmtInterval`
        if (data['PmtInterval']) { // data not null
          Number.validateJSON(data['PmtInterval']);
        }
        // validate the optional field `PmtPid`
        if (data['PmtPid']) { // data not null
          String.validateJSON(data['PmtPid']);
        }
        // validate the optional field `ProgramNum`
        if (data['ProgramNum']) { // data not null
          Number.validateJSON(data['ProgramNum']);
        }
        // validate the optional field `RateMode`
        if (data['RateMode']) { // data not null
          M2tsRateMode.validateJSON(data['RateMode']);
        }
        // validate the optional field `Scte27Pids`
        if (data['Scte27Pids']) { // data not null
          String.validateJSON(data['Scte27Pids']);
        }
        // validate the optional field `Scte35Control`
        if (data['Scte35Control']) { // data not null
          M2tsScte35Control.validateJSON(data['Scte35Control']);
        }
        // validate the optional field `Scte35Pid`
        if (data['Scte35Pid']) { // data not null
          String.validateJSON(data['Scte35Pid']);
        }
        // validate the optional field `SegmentationMarkers`
        if (data['SegmentationMarkers']) { // data not null
          M2tsSegmentationMarkers.validateJSON(data['SegmentationMarkers']);
        }
        // validate the optional field `SegmentationStyle`
        if (data['SegmentationStyle']) { // data not null
          M2tsSegmentationStyle.validateJSON(data['SegmentationStyle']);
        }
        // validate the optional field `SegmentationTime`
        if (data['SegmentationTime']) { // data not null
          Number.validateJSON(data['SegmentationTime']);
        }
        // validate the optional field `TimedMetadataBehavior`
        if (data['TimedMetadataBehavior']) { // data not null
          M2tsTimedMetadataBehavior.validateJSON(data['TimedMetadataBehavior']);
        }
        // validate the optional field `TimedMetadataPid`
        if (data['TimedMetadataPid']) { // data not null
          String.validateJSON(data['TimedMetadataPid']);
        }
        // validate the optional field `TransportStreamId`
        if (data['TransportStreamId']) { // data not null
          Number.validateJSON(data['TransportStreamId']);
        }
        // validate the optional field `VideoPid`
        if (data['VideoPid']) { // data not null
          String.validateJSON(data['VideoPid']);
        }
        // validate the optional field `Scte35PrerollPullupMilliseconds`
        if (data['Scte35PrerollPullupMilliseconds']) { // data not null
          Number.validateJSON(data['Scte35PrerollPullupMilliseconds']);
        }

        return true;
    }


}



/**
 * @member {module:model/M2tsAbsentInputAudioBehavior} AbsentInputAudioBehavior
 */
ArchiveContainerSettingsM2tsSettings.prototype['AbsentInputAudioBehavior'] = undefined;

/**
 * @member {module:model/M2tsArib} Arib
 */
ArchiveContainerSettingsM2tsSettings.prototype['Arib'] = undefined;

/**
 * @member {String} AribCaptionsPid
 */
ArchiveContainerSettingsM2tsSettings.prototype['AribCaptionsPid'] = undefined;

/**
 * @member {module:model/M2tsAribCaptionsPidControl} AribCaptionsPidControl
 */
ArchiveContainerSettingsM2tsSettings.prototype['AribCaptionsPidControl'] = undefined;

/**
 * @member {module:model/M2tsAudioBufferModel} AudioBufferModel
 */
ArchiveContainerSettingsM2tsSettings.prototype['AudioBufferModel'] = undefined;

/**
 * @member {Number} AudioFramesPerPes
 */
ArchiveContainerSettingsM2tsSettings.prototype['AudioFramesPerPes'] = undefined;

/**
 * @member {String} AudioPids
 */
ArchiveContainerSettingsM2tsSettings.prototype['AudioPids'] = undefined;

/**
 * @member {module:model/M2tsAudioStreamType} AudioStreamType
 */
ArchiveContainerSettingsM2tsSettings.prototype['AudioStreamType'] = undefined;

/**
 * @member {Number} Bitrate
 */
ArchiveContainerSettingsM2tsSettings.prototype['Bitrate'] = undefined;

/**
 * @member {module:model/M2tsBufferModel} BufferModel
 */
ArchiveContainerSettingsM2tsSettings.prototype['BufferModel'] = undefined;

/**
 * @member {module:model/M2tsCcDescriptor} CcDescriptor
 */
ArchiveContainerSettingsM2tsSettings.prototype['CcDescriptor'] = undefined;

/**
 * @member {module:model/M2tsSettingsDvbNitSettings} DvbNitSettings
 */
ArchiveContainerSettingsM2tsSettings.prototype['DvbNitSettings'] = undefined;

/**
 * @member {module:model/M2tsSettingsDvbSdtSettings} DvbSdtSettings
 */
ArchiveContainerSettingsM2tsSettings.prototype['DvbSdtSettings'] = undefined;

/**
 * @member {String} DvbSubPids
 */
ArchiveContainerSettingsM2tsSettings.prototype['DvbSubPids'] = undefined;

/**
 * @member {module:model/M2tsSettingsDvbTdtSettings} DvbTdtSettings
 */
ArchiveContainerSettingsM2tsSettings.prototype['DvbTdtSettings'] = undefined;

/**
 * @member {String} DvbTeletextPid
 */
ArchiveContainerSettingsM2tsSettings.prototype['DvbTeletextPid'] = undefined;

/**
 * @member {module:model/M2tsEbifControl} Ebif
 */
ArchiveContainerSettingsM2tsSettings.prototype['Ebif'] = undefined;

/**
 * @member {module:model/M2tsAudioInterval} EbpAudioInterval
 */
ArchiveContainerSettingsM2tsSettings.prototype['EbpAudioInterval'] = undefined;

/**
 * @member {Number} EbpLookaheadMs
 */
ArchiveContainerSettingsM2tsSettings.prototype['EbpLookaheadMs'] = undefined;

/**
 * @member {module:model/M2tsEbpPlacement} EbpPlacement
 */
ArchiveContainerSettingsM2tsSettings.prototype['EbpPlacement'] = undefined;

/**
 * @member {String} EcmPid
 */
ArchiveContainerSettingsM2tsSettings.prototype['EcmPid'] = undefined;

/**
 * @member {module:model/M2tsEsRateInPes} EsRateInPes
 */
ArchiveContainerSettingsM2tsSettings.prototype['EsRateInPes'] = undefined;

/**
 * @member {String} EtvPlatformPid
 */
ArchiveContainerSettingsM2tsSettings.prototype['EtvPlatformPid'] = undefined;

/**
 * @member {String} EtvSignalPid
 */
ArchiveContainerSettingsM2tsSettings.prototype['EtvSignalPid'] = undefined;

/**
 * @member {Number} FragmentTime
 */
ArchiveContainerSettingsM2tsSettings.prototype['FragmentTime'] = undefined;

/**
 * @member {module:model/M2tsKlv} Klv
 */
ArchiveContainerSettingsM2tsSettings.prototype['Klv'] = undefined;

/**
 * @member {String} KlvDataPids
 */
ArchiveContainerSettingsM2tsSettings.prototype['KlvDataPids'] = undefined;

/**
 * @member {module:model/M2tsNielsenId3Behavior} NielsenId3Behavior
 */
ArchiveContainerSettingsM2tsSettings.prototype['NielsenId3Behavior'] = undefined;

/**
 * @member {Number} NullPacketBitrate
 */
ArchiveContainerSettingsM2tsSettings.prototype['NullPacketBitrate'] = undefined;

/**
 * @member {Number} PatInterval
 */
ArchiveContainerSettingsM2tsSettings.prototype['PatInterval'] = undefined;

/**
 * @member {module:model/M2tsPcrControl} PcrControl
 */
ArchiveContainerSettingsM2tsSettings.prototype['PcrControl'] = undefined;

/**
 * @member {Number} PcrPeriod
 */
ArchiveContainerSettingsM2tsSettings.prototype['PcrPeriod'] = undefined;

/**
 * @member {String} PcrPid
 */
ArchiveContainerSettingsM2tsSettings.prototype['PcrPid'] = undefined;

/**
 * @member {Number} PmtInterval
 */
ArchiveContainerSettingsM2tsSettings.prototype['PmtInterval'] = undefined;

/**
 * @member {String} PmtPid
 */
ArchiveContainerSettingsM2tsSettings.prototype['PmtPid'] = undefined;

/**
 * @member {Number} ProgramNum
 */
ArchiveContainerSettingsM2tsSettings.prototype['ProgramNum'] = undefined;

/**
 * @member {module:model/M2tsRateMode} RateMode
 */
ArchiveContainerSettingsM2tsSettings.prototype['RateMode'] = undefined;

/**
 * @member {String} Scte27Pids
 */
ArchiveContainerSettingsM2tsSettings.prototype['Scte27Pids'] = undefined;

/**
 * @member {module:model/M2tsScte35Control} Scte35Control
 */
ArchiveContainerSettingsM2tsSettings.prototype['Scte35Control'] = undefined;

/**
 * @member {String} Scte35Pid
 */
ArchiveContainerSettingsM2tsSettings.prototype['Scte35Pid'] = undefined;

/**
 * @member {module:model/M2tsSegmentationMarkers} SegmentationMarkers
 */
ArchiveContainerSettingsM2tsSettings.prototype['SegmentationMarkers'] = undefined;

/**
 * @member {module:model/M2tsSegmentationStyle} SegmentationStyle
 */
ArchiveContainerSettingsM2tsSettings.prototype['SegmentationStyle'] = undefined;

/**
 * @member {Number} SegmentationTime
 */
ArchiveContainerSettingsM2tsSettings.prototype['SegmentationTime'] = undefined;

/**
 * @member {module:model/M2tsTimedMetadataBehavior} TimedMetadataBehavior
 */
ArchiveContainerSettingsM2tsSettings.prototype['TimedMetadataBehavior'] = undefined;

/**
 * @member {String} TimedMetadataPid
 */
ArchiveContainerSettingsM2tsSettings.prototype['TimedMetadataPid'] = undefined;

/**
 * @member {Number} TransportStreamId
 */
ArchiveContainerSettingsM2tsSettings.prototype['TransportStreamId'] = undefined;

/**
 * @member {String} VideoPid
 */
ArchiveContainerSettingsM2tsSettings.prototype['VideoPid'] = undefined;

/**
 * @member {Number} Scte35PrerollPullupMilliseconds
 */
ArchiveContainerSettingsM2tsSettings.prototype['Scte35PrerollPullupMilliseconds'] = undefined;


// Implement M2tsSettings interface:
/**
 * @member {module:model/M2tsAbsentInputAudioBehavior} AbsentInputAudioBehavior
 */
M2tsSettings.prototype['AbsentInputAudioBehavior'] = undefined;
/**
 * @member {module:model/M2tsArib} Arib
 */
M2tsSettings.prototype['Arib'] = undefined;
/**
 * @member {String} AribCaptionsPid
 */
M2tsSettings.prototype['AribCaptionsPid'] = undefined;
/**
 * @member {module:model/M2tsAribCaptionsPidControl} AribCaptionsPidControl
 */
M2tsSettings.prototype['AribCaptionsPidControl'] = undefined;
/**
 * @member {module:model/M2tsAudioBufferModel} AudioBufferModel
 */
M2tsSettings.prototype['AudioBufferModel'] = undefined;
/**
 * @member {Number} AudioFramesPerPes
 */
M2tsSettings.prototype['AudioFramesPerPes'] = undefined;
/**
 * @member {String} AudioPids
 */
M2tsSettings.prototype['AudioPids'] = undefined;
/**
 * @member {module:model/M2tsAudioStreamType} AudioStreamType
 */
M2tsSettings.prototype['AudioStreamType'] = undefined;
/**
 * @member {Number} Bitrate
 */
M2tsSettings.prototype['Bitrate'] = undefined;
/**
 * @member {module:model/M2tsBufferModel} BufferModel
 */
M2tsSettings.prototype['BufferModel'] = undefined;
/**
 * @member {module:model/M2tsCcDescriptor} CcDescriptor
 */
M2tsSettings.prototype['CcDescriptor'] = undefined;
/**
 * @member {module:model/M2tsSettingsDvbNitSettings} DvbNitSettings
 */
M2tsSettings.prototype['DvbNitSettings'] = undefined;
/**
 * @member {module:model/M2tsSettingsDvbSdtSettings} DvbSdtSettings
 */
M2tsSettings.prototype['DvbSdtSettings'] = undefined;
/**
 * @member {String} DvbSubPids
 */
M2tsSettings.prototype['DvbSubPids'] = undefined;
/**
 * @member {module:model/M2tsSettingsDvbTdtSettings} DvbTdtSettings
 */
M2tsSettings.prototype['DvbTdtSettings'] = undefined;
/**
 * @member {String} DvbTeletextPid
 */
M2tsSettings.prototype['DvbTeletextPid'] = undefined;
/**
 * @member {module:model/M2tsEbifControl} Ebif
 */
M2tsSettings.prototype['Ebif'] = undefined;
/**
 * @member {module:model/M2tsAudioInterval} EbpAudioInterval
 */
M2tsSettings.prototype['EbpAudioInterval'] = undefined;
/**
 * @member {Number} EbpLookaheadMs
 */
M2tsSettings.prototype['EbpLookaheadMs'] = undefined;
/**
 * @member {module:model/M2tsEbpPlacement} EbpPlacement
 */
M2tsSettings.prototype['EbpPlacement'] = undefined;
/**
 * @member {String} EcmPid
 */
M2tsSettings.prototype['EcmPid'] = undefined;
/**
 * @member {module:model/M2tsEsRateInPes} EsRateInPes
 */
M2tsSettings.prototype['EsRateInPes'] = undefined;
/**
 * @member {String} EtvPlatformPid
 */
M2tsSettings.prototype['EtvPlatformPid'] = undefined;
/**
 * @member {String} EtvSignalPid
 */
M2tsSettings.prototype['EtvSignalPid'] = undefined;
/**
 * @member {Number} FragmentTime
 */
M2tsSettings.prototype['FragmentTime'] = undefined;
/**
 * @member {module:model/M2tsKlv} Klv
 */
M2tsSettings.prototype['Klv'] = undefined;
/**
 * @member {String} KlvDataPids
 */
M2tsSettings.prototype['KlvDataPids'] = undefined;
/**
 * @member {module:model/M2tsNielsenId3Behavior} NielsenId3Behavior
 */
M2tsSettings.prototype['NielsenId3Behavior'] = undefined;
/**
 * @member {Number} NullPacketBitrate
 */
M2tsSettings.prototype['NullPacketBitrate'] = undefined;
/**
 * @member {Number} PatInterval
 */
M2tsSettings.prototype['PatInterval'] = undefined;
/**
 * @member {module:model/M2tsPcrControl} PcrControl
 */
M2tsSettings.prototype['PcrControl'] = undefined;
/**
 * @member {Number} PcrPeriod
 */
M2tsSettings.prototype['PcrPeriod'] = undefined;
/**
 * @member {String} PcrPid
 */
M2tsSettings.prototype['PcrPid'] = undefined;
/**
 * @member {Number} PmtInterval
 */
M2tsSettings.prototype['PmtInterval'] = undefined;
/**
 * @member {String} PmtPid
 */
M2tsSettings.prototype['PmtPid'] = undefined;
/**
 * @member {Number} ProgramNum
 */
M2tsSettings.prototype['ProgramNum'] = undefined;
/**
 * @member {module:model/M2tsRateMode} RateMode
 */
M2tsSettings.prototype['RateMode'] = undefined;
/**
 * @member {String} Scte27Pids
 */
M2tsSettings.prototype['Scte27Pids'] = undefined;
/**
 * @member {module:model/M2tsScte35Control} Scte35Control
 */
M2tsSettings.prototype['Scte35Control'] = undefined;
/**
 * @member {String} Scte35Pid
 */
M2tsSettings.prototype['Scte35Pid'] = undefined;
/**
 * @member {module:model/M2tsSegmentationMarkers} SegmentationMarkers
 */
M2tsSettings.prototype['SegmentationMarkers'] = undefined;
/**
 * @member {module:model/M2tsSegmentationStyle} SegmentationStyle
 */
M2tsSettings.prototype['SegmentationStyle'] = undefined;
/**
 * @member {Number} SegmentationTime
 */
M2tsSettings.prototype['SegmentationTime'] = undefined;
/**
 * @member {module:model/M2tsTimedMetadataBehavior} TimedMetadataBehavior
 */
M2tsSettings.prototype['TimedMetadataBehavior'] = undefined;
/**
 * @member {String} TimedMetadataPid
 */
M2tsSettings.prototype['TimedMetadataPid'] = undefined;
/**
 * @member {Number} TransportStreamId
 */
M2tsSettings.prototype['TransportStreamId'] = undefined;
/**
 * @member {String} VideoPid
 */
M2tsSettings.prototype['VideoPid'] = undefined;
/**
 * @member {Number} Scte35PrerollPullupMilliseconds
 */
M2tsSettings.prototype['Scte35PrerollPullupMilliseconds'] = undefined;




export default ArchiveContainerSettingsM2tsSettings;

