/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeInputDeviceResponseHdDeviceSettings from './DescribeInputDeviceResponseHdDeviceSettings';
import DescribeInputDeviceResponseNetworkSettings from './DescribeInputDeviceResponseNetworkSettings';
import DescribeInputDeviceResponseUhdDeviceSettings from './DescribeInputDeviceResponseUhdDeviceSettings';
import DeviceSettingsSyncState from './DeviceSettingsSyncState';
import DeviceUpdateStatus from './DeviceUpdateStatus';
import InputDeviceConnectionState from './InputDeviceConnectionState';
import InputDeviceType from './InputDeviceType';

/**
 * The UpdateInputDeviceResponse model module.
 * @module model/UpdateInputDeviceResponse
 * @version 2017-10-14
 */
class UpdateInputDeviceResponse {
    /**
     * Constructs a new <code>UpdateInputDeviceResponse</code>.
     * Placeholder documentation for UpdateInputDeviceResponse
     * @alias module:model/UpdateInputDeviceResponse
     */
    constructor() { 
        
        UpdateInputDeviceResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateInputDeviceResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateInputDeviceResponse} obj Optional instance to populate.
     * @return {module:model/UpdateInputDeviceResponse} The populated <code>UpdateInputDeviceResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateInputDeviceResponse();

            if (data.hasOwnProperty('Arn')) {
                obj['Arn'] = ApiClient.convertToType(data['Arn'], 'String');
            }
            if (data.hasOwnProperty('ConnectionState')) {
                obj['ConnectionState'] = ApiClient.convertToType(data['ConnectionState'], InputDeviceConnectionState);
            }
            if (data.hasOwnProperty('DeviceSettingsSyncState')) {
                obj['DeviceSettingsSyncState'] = ApiClient.convertToType(data['DeviceSettingsSyncState'], DeviceSettingsSyncState);
            }
            if (data.hasOwnProperty('DeviceUpdateStatus')) {
                obj['DeviceUpdateStatus'] = ApiClient.convertToType(data['DeviceUpdateStatus'], DeviceUpdateStatus);
            }
            if (data.hasOwnProperty('HdDeviceSettings')) {
                obj['HdDeviceSettings'] = DescribeInputDeviceResponseHdDeviceSettings.constructFromObject(data['HdDeviceSettings']);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('MacAddress')) {
                obj['MacAddress'] = ApiClient.convertToType(data['MacAddress'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('NetworkSettings')) {
                obj['NetworkSettings'] = DescribeInputDeviceResponseNetworkSettings.constructFromObject(data['NetworkSettings']);
            }
            if (data.hasOwnProperty('SerialNumber')) {
                obj['SerialNumber'] = ApiClient.convertToType(data['SerialNumber'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], InputDeviceType);
            }
            if (data.hasOwnProperty('UhdDeviceSettings')) {
                obj['UhdDeviceSettings'] = DescribeInputDeviceResponseUhdDeviceSettings.constructFromObject(data['UhdDeviceSettings']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
            if (data.hasOwnProperty('AvailabilityZone')) {
                obj['AvailabilityZone'] = ApiClient.convertToType(data['AvailabilityZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateInputDeviceResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateInputDeviceResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Arn`
        if (data['Arn']) { // data not null
          String.validateJSON(data['Arn']);
        }
        // validate the optional field `ConnectionState`
        if (data['ConnectionState']) { // data not null
          InputDeviceConnectionState.validateJSON(data['ConnectionState']);
        }
        // validate the optional field `DeviceSettingsSyncState`
        if (data['DeviceSettingsSyncState']) { // data not null
          DeviceSettingsSyncState.validateJSON(data['DeviceSettingsSyncState']);
        }
        // validate the optional field `DeviceUpdateStatus`
        if (data['DeviceUpdateStatus']) { // data not null
          DeviceUpdateStatus.validateJSON(data['DeviceUpdateStatus']);
        }
        // validate the optional field `HdDeviceSettings`
        if (data['HdDeviceSettings']) { // data not null
          DescribeInputDeviceResponseHdDeviceSettings.validateJSON(data['HdDeviceSettings']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `MacAddress`
        if (data['MacAddress']) { // data not null
          String.validateJSON(data['MacAddress']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `NetworkSettings`
        if (data['NetworkSettings']) { // data not null
          DescribeInputDeviceResponseNetworkSettings.validateJSON(data['NetworkSettings']);
        }
        // validate the optional field `SerialNumber`
        if (data['SerialNumber']) { // data not null
          String.validateJSON(data['SerialNumber']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          InputDeviceType.validateJSON(data['Type']);
        }
        // validate the optional field `UhdDeviceSettings`
        if (data['UhdDeviceSettings']) { // data not null
          DescribeInputDeviceResponseUhdDeviceSettings.validateJSON(data['UhdDeviceSettings']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }
        // validate the optional field `AvailabilityZone`
        if (data['AvailabilityZone']) { // data not null
          String.validateJSON(data['AvailabilityZone']);
        }

        return true;
    }


}



/**
 * @member {String} Arn
 */
UpdateInputDeviceResponse.prototype['Arn'] = undefined;

/**
 * @member {module:model/InputDeviceConnectionState} ConnectionState
 */
UpdateInputDeviceResponse.prototype['ConnectionState'] = undefined;

/**
 * @member {module:model/DeviceSettingsSyncState} DeviceSettingsSyncState
 */
UpdateInputDeviceResponse.prototype['DeviceSettingsSyncState'] = undefined;

/**
 * @member {module:model/DeviceUpdateStatus} DeviceUpdateStatus
 */
UpdateInputDeviceResponse.prototype['DeviceUpdateStatus'] = undefined;

/**
 * @member {module:model/DescribeInputDeviceResponseHdDeviceSettings} HdDeviceSettings
 */
UpdateInputDeviceResponse.prototype['HdDeviceSettings'] = undefined;

/**
 * @member {String} Id
 */
UpdateInputDeviceResponse.prototype['Id'] = undefined;

/**
 * @member {String} MacAddress
 */
UpdateInputDeviceResponse.prototype['MacAddress'] = undefined;

/**
 * @member {String} Name
 */
UpdateInputDeviceResponse.prototype['Name'] = undefined;

/**
 * @member {module:model/DescribeInputDeviceResponseNetworkSettings} NetworkSettings
 */
UpdateInputDeviceResponse.prototype['NetworkSettings'] = undefined;

/**
 * @member {String} SerialNumber
 */
UpdateInputDeviceResponse.prototype['SerialNumber'] = undefined;

/**
 * @member {module:model/InputDeviceType} Type
 */
UpdateInputDeviceResponse.prototype['Type'] = undefined;

/**
 * @member {module:model/DescribeInputDeviceResponseUhdDeviceSettings} UhdDeviceSettings
 */
UpdateInputDeviceResponse.prototype['UhdDeviceSettings'] = undefined;

/**
 * @member {Object} Tags
 */
UpdateInputDeviceResponse.prototype['Tags'] = undefined;

/**
 * @member {String} AvailabilityZone
 */
UpdateInputDeviceResponse.prototype['AvailabilityZone'] = undefined;






export default UpdateInputDeviceResponse;

