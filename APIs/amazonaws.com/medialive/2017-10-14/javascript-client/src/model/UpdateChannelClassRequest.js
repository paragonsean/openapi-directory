/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OutputDestination from './OutputDestination';

/**
 * The UpdateChannelClassRequest model module.
 * @module model/UpdateChannelClassRequest
 * @version 2017-10-14
 */
class UpdateChannelClassRequest {
    /**
     * Constructs a new <code>UpdateChannelClassRequest</code>.
     * @alias module:model/UpdateChannelClassRequest
     * @param channelClass {module:model/UpdateChannelClassRequest.ChannelClassEnum} A standard channel has two encoding pipelines and a single pipeline channel only has one.
     */
    constructor(channelClass) { 
        
        UpdateChannelClassRequest.initialize(this, channelClass);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channelClass) { 
        obj['channelClass'] = channelClass;
    }

    /**
     * Constructs a <code>UpdateChannelClassRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateChannelClassRequest} obj Optional instance to populate.
     * @return {module:model/UpdateChannelClassRequest} The populated <code>UpdateChannelClassRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateChannelClassRequest();

            if (data.hasOwnProperty('channelClass')) {
                obj['channelClass'] = ApiClient.convertToType(data['channelClass'], 'String');
            }
            if (data.hasOwnProperty('destinations')) {
                obj['destinations'] = ApiClient.convertToType(data['destinations'], [OutputDestination]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateChannelClassRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateChannelClassRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateChannelClassRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['channelClass'] && !(typeof data['channelClass'] === 'string' || data['channelClass'] instanceof String)) {
            throw new Error("Expected the field `channelClass` to be a primitive type in the JSON string but got " + data['channelClass']);
        }
        if (data['destinations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinations'])) {
                throw new Error("Expected the field `destinations` to be an array in the JSON data but got " + data['destinations']);
            }
            // validate the optional field `destinations` (array)
            for (const item of data['destinations']) {
                OutputDestination.validateJSON(item);
            };
        }

        return true;
    }


}

UpdateChannelClassRequest.RequiredProperties = ["channelClass"];

/**
 * A standard channel has two encoding pipelines and a single pipeline channel only has one.
 * @member {module:model/UpdateChannelClassRequest.ChannelClassEnum} channelClass
 */
UpdateChannelClassRequest.prototype['channelClass'] = undefined;

/**
 * Placeholder documentation for __listOfOutputDestination
 * @member {Array.<module:model/OutputDestination>} destinations
 */
UpdateChannelClassRequest.prototype['destinations'] = undefined;





/**
 * Allowed values for the <code>channelClass</code> property.
 * @enum {String}
 * @readonly
 */
UpdateChannelClassRequest['ChannelClassEnum'] = {

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD",

    /**
     * value: "SINGLE_PIPELINE"
     * @const
     */
    "SINGLE_PIPELINE": "SINGLE_PIPELINE"
};



export default UpdateChannelClassRequest;

