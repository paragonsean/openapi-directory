/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateChannelRequestCdiInputSpecification from './CreateChannelRequestCdiInputSpecification';
import CreateChannelRequestEncoderSettings from './CreateChannelRequestEncoderSettings';
import CreateChannelRequestInputSpecification from './CreateChannelRequestInputSpecification';
import InputAttachment from './InputAttachment';
import OutputDestination from './OutputDestination';
import UpdateChannelRequestMaintenance from './UpdateChannelRequestMaintenance';

/**
 * The UpdateChannelRequest model module.
 * @module model/UpdateChannelRequest
 * @version 2017-10-14
 */
class UpdateChannelRequest {
    /**
     * Constructs a new <code>UpdateChannelRequest</code>.
     * @alias module:model/UpdateChannelRequest
     */
    constructor() { 
        
        UpdateChannelRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateChannelRequest} obj Optional instance to populate.
     * @return {module:model/UpdateChannelRequest} The populated <code>UpdateChannelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateChannelRequest();

            if (data.hasOwnProperty('cdiInputSpecification')) {
                obj['cdiInputSpecification'] = CreateChannelRequestCdiInputSpecification.constructFromObject(data['cdiInputSpecification']);
            }
            if (data.hasOwnProperty('destinations')) {
                obj['destinations'] = ApiClient.convertToType(data['destinations'], [OutputDestination]);
            }
            if (data.hasOwnProperty('encoderSettings')) {
                obj['encoderSettings'] = CreateChannelRequestEncoderSettings.constructFromObject(data['encoderSettings']);
            }
            if (data.hasOwnProperty('inputAttachments')) {
                obj['inputAttachments'] = ApiClient.convertToType(data['inputAttachments'], [InputAttachment]);
            }
            if (data.hasOwnProperty('inputSpecification')) {
                obj['inputSpecification'] = CreateChannelRequestInputSpecification.constructFromObject(data['inputSpecification']);
            }
            if (data.hasOwnProperty('logLevel')) {
                obj['logLevel'] = ApiClient.convertToType(data['logLevel'], 'String');
            }
            if (data.hasOwnProperty('maintenance')) {
                obj['maintenance'] = UpdateChannelRequestMaintenance.constructFromObject(data['maintenance']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('roleArn')) {
                obj['roleArn'] = ApiClient.convertToType(data['roleArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateChannelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateChannelRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cdiInputSpecification`
        if (data['cdiInputSpecification']) { // data not null
          CreateChannelRequestCdiInputSpecification.validateJSON(data['cdiInputSpecification']);
        }
        if (data['destinations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinations'])) {
                throw new Error("Expected the field `destinations` to be an array in the JSON data but got " + data['destinations']);
            }
            // validate the optional field `destinations` (array)
            for (const item of data['destinations']) {
                OutputDestination.validateJSON(item);
            };
        }
        // validate the optional field `encoderSettings`
        if (data['encoderSettings']) { // data not null
          CreateChannelRequestEncoderSettings.validateJSON(data['encoderSettings']);
        }
        if (data['inputAttachments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['inputAttachments'])) {
                throw new Error("Expected the field `inputAttachments` to be an array in the JSON data but got " + data['inputAttachments']);
            }
            // validate the optional field `inputAttachments` (array)
            for (const item of data['inputAttachments']) {
                InputAttachment.validateJSON(item);
            };
        }
        // validate the optional field `inputSpecification`
        if (data['inputSpecification']) { // data not null
          CreateChannelRequestInputSpecification.validateJSON(data['inputSpecification']);
        }
        // ensure the json data is a string
        if (data['logLevel'] && !(typeof data['logLevel'] === 'string' || data['logLevel'] instanceof String)) {
            throw new Error("Expected the field `logLevel` to be a primitive type in the JSON string but got " + data['logLevel']);
        }
        // validate the optional field `maintenance`
        if (data['maintenance']) { // data not null
          UpdateChannelRequestMaintenance.validateJSON(data['maintenance']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['roleArn'] && !(typeof data['roleArn'] === 'string' || data['roleArn'] instanceof String)) {
            throw new Error("Expected the field `roleArn` to be a primitive type in the JSON string but got " + data['roleArn']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateChannelRequestCdiInputSpecification} cdiInputSpecification
 */
UpdateChannelRequest.prototype['cdiInputSpecification'] = undefined;

/**
 * Placeholder documentation for __listOfOutputDestination
 * @member {Array.<module:model/OutputDestination>} destinations
 */
UpdateChannelRequest.prototype['destinations'] = undefined;

/**
 * @member {module:model/CreateChannelRequestEncoderSettings} encoderSettings
 */
UpdateChannelRequest.prototype['encoderSettings'] = undefined;

/**
 * Placeholder documentation for __listOfInputAttachment
 * @member {Array.<module:model/InputAttachment>} inputAttachments
 */
UpdateChannelRequest.prototype['inputAttachments'] = undefined;

/**
 * @member {module:model/CreateChannelRequestInputSpecification} inputSpecification
 */
UpdateChannelRequest.prototype['inputSpecification'] = undefined;

/**
 * The log level the user wants for their channel.
 * @member {module:model/UpdateChannelRequest.LogLevelEnum} logLevel
 */
UpdateChannelRequest.prototype['logLevel'] = undefined;

/**
 * @member {module:model/UpdateChannelRequestMaintenance} maintenance
 */
UpdateChannelRequest.prototype['maintenance'] = undefined;

/**
 * Placeholder documentation for __string
 * @member {String} name
 */
UpdateChannelRequest.prototype['name'] = undefined;

/**
 * Placeholder documentation for __string
 * @member {String} roleArn
 */
UpdateChannelRequest.prototype['roleArn'] = undefined;





/**
 * Allowed values for the <code>logLevel</code> property.
 * @enum {String}
 * @readonly
 */
UpdateChannelRequest['LogLevelEnum'] = {

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "WARNING"
     * @const
     */
    "WARNING": "WARNING",

    /**
     * value: "INFO"
     * @const
     */
    "INFO": "INFO",

    /**
     * value: "DEBUG"
     * @const
     */
    "DEBUG": "DEBUG",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED"
};



export default UpdateChannelRequest;

