/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputDeblockFilter from './InputDeblockFilter';
import InputDenoiseFilter from './InputDenoiseFilter';
import InputFilter from './InputFilter';
import InputSettingsNetworkInputSettings from './InputSettingsNetworkInputSettings';
import InputSettingsVideoSelector from './InputSettingsVideoSelector';
import InputSourceEndBehavior from './InputSourceEndBehavior';
import Smpte2038DataPreference from './Smpte2038DataPreference';

/**
 * The InputSettings model module.
 * @module model/InputSettings
 * @version 2017-10-14
 */
class InputSettings {
    /**
     * Constructs a new <code>InputSettings</code>.
     * Live Event input parameters. There can be multiple inputs in a single Live Event.
     * @alias module:model/InputSettings
     */
    constructor() { 
        
        InputSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InputSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputSettings} obj Optional instance to populate.
     * @return {module:model/InputSettings} The populated <code>InputSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputSettings();

            if (data.hasOwnProperty('AudioSelectors')) {
                obj['AudioSelectors'] = ApiClient.convertToType(data['AudioSelectors'], Array);
            }
            if (data.hasOwnProperty('CaptionSelectors')) {
                obj['CaptionSelectors'] = ApiClient.convertToType(data['CaptionSelectors'], Array);
            }
            if (data.hasOwnProperty('DeblockFilter')) {
                obj['DeblockFilter'] = ApiClient.convertToType(data['DeblockFilter'], InputDeblockFilter);
            }
            if (data.hasOwnProperty('DenoiseFilter')) {
                obj['DenoiseFilter'] = ApiClient.convertToType(data['DenoiseFilter'], InputDenoiseFilter);
            }
            if (data.hasOwnProperty('FilterStrength')) {
                obj['FilterStrength'] = ApiClient.convertToType(data['FilterStrength'], 'Number');
            }
            if (data.hasOwnProperty('InputFilter')) {
                obj['InputFilter'] = ApiClient.convertToType(data['InputFilter'], InputFilter);
            }
            if (data.hasOwnProperty('NetworkInputSettings')) {
                obj['NetworkInputSettings'] = InputSettingsNetworkInputSettings.constructFromObject(data['NetworkInputSettings']);
            }
            if (data.hasOwnProperty('Scte35Pid')) {
                obj['Scte35Pid'] = ApiClient.convertToType(data['Scte35Pid'], 'Number');
            }
            if (data.hasOwnProperty('Smpte2038DataPreference')) {
                obj['Smpte2038DataPreference'] = ApiClient.convertToType(data['Smpte2038DataPreference'], Smpte2038DataPreference);
            }
            if (data.hasOwnProperty('SourceEndBehavior')) {
                obj['SourceEndBehavior'] = ApiClient.convertToType(data['SourceEndBehavior'], InputSourceEndBehavior);
            }
            if (data.hasOwnProperty('VideoSelector')) {
                obj['VideoSelector'] = InputSettingsVideoSelector.constructFromObject(data['VideoSelector']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AudioSelectors`
        if (data['AudioSelectors']) { // data not null
          Array.validateJSON(data['AudioSelectors']);
        }
        // validate the optional field `CaptionSelectors`
        if (data['CaptionSelectors']) { // data not null
          Array.validateJSON(data['CaptionSelectors']);
        }
        // validate the optional field `DeblockFilter`
        if (data['DeblockFilter']) { // data not null
          InputDeblockFilter.validateJSON(data['DeblockFilter']);
        }
        // validate the optional field `DenoiseFilter`
        if (data['DenoiseFilter']) { // data not null
          InputDenoiseFilter.validateJSON(data['DenoiseFilter']);
        }
        // validate the optional field `FilterStrength`
        if (data['FilterStrength']) { // data not null
          Number.validateJSON(data['FilterStrength']);
        }
        // validate the optional field `InputFilter`
        if (data['InputFilter']) { // data not null
          InputFilter.validateJSON(data['InputFilter']);
        }
        // validate the optional field `NetworkInputSettings`
        if (data['NetworkInputSettings']) { // data not null
          InputSettingsNetworkInputSettings.validateJSON(data['NetworkInputSettings']);
        }
        // validate the optional field `Scte35Pid`
        if (data['Scte35Pid']) { // data not null
          Number.validateJSON(data['Scte35Pid']);
        }
        // validate the optional field `Smpte2038DataPreference`
        if (data['Smpte2038DataPreference']) { // data not null
          Smpte2038DataPreference.validateJSON(data['Smpte2038DataPreference']);
        }
        // validate the optional field `SourceEndBehavior`
        if (data['SourceEndBehavior']) { // data not null
          InputSourceEndBehavior.validateJSON(data['SourceEndBehavior']);
        }
        // validate the optional field `VideoSelector`
        if (data['VideoSelector']) { // data not null
          InputSettingsVideoSelector.validateJSON(data['VideoSelector']);
        }

        return true;
    }


}



/**
 * @member {Array} AudioSelectors
 */
InputSettings.prototype['AudioSelectors'] = undefined;

/**
 * @member {Array} CaptionSelectors
 */
InputSettings.prototype['CaptionSelectors'] = undefined;

/**
 * @member {module:model/InputDeblockFilter} DeblockFilter
 */
InputSettings.prototype['DeblockFilter'] = undefined;

/**
 * @member {module:model/InputDenoiseFilter} DenoiseFilter
 */
InputSettings.prototype['DenoiseFilter'] = undefined;

/**
 * @member {Number} FilterStrength
 */
InputSettings.prototype['FilterStrength'] = undefined;

/**
 * @member {module:model/InputFilter} InputFilter
 */
InputSettings.prototype['InputFilter'] = undefined;

/**
 * @member {module:model/InputSettingsNetworkInputSettings} NetworkInputSettings
 */
InputSettings.prototype['NetworkInputSettings'] = undefined;

/**
 * @member {Number} Scte35Pid
 */
InputSettings.prototype['Scte35Pid'] = undefined;

/**
 * @member {module:model/Smpte2038DataPreference} Smpte2038DataPreference
 */
InputSettings.prototype['Smpte2038DataPreference'] = undefined;

/**
 * @member {module:model/InputSourceEndBehavior} SourceEndBehavior
 */
InputSettings.prototype['SourceEndBehavior'] = undefined;

/**
 * @member {module:model/InputSettingsVideoSelector} VideoSelector
 */
InputSettings.prototype['VideoSelector'] = undefined;






export default InputSettings;

