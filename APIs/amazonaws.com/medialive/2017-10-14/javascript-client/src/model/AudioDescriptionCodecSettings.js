/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AudioCodecSettings from './AudioCodecSettings';
import AudioCodecSettingsAacSettings from './AudioCodecSettingsAacSettings';
import AudioCodecSettingsAc3Settings from './AudioCodecSettingsAc3Settings';
import AudioCodecSettingsEac3AtmosSettings from './AudioCodecSettingsEac3AtmosSettings';
import AudioCodecSettingsEac3Settings from './AudioCodecSettingsEac3Settings';
import AudioCodecSettingsMp2Settings from './AudioCodecSettingsMp2Settings';
import AudioCodecSettingsWavSettings from './AudioCodecSettingsWavSettings';

/**
 * The AudioDescriptionCodecSettings model module.
 * @module model/AudioDescriptionCodecSettings
 * @version 2017-10-14
 */
class AudioDescriptionCodecSettings {
    /**
     * Constructs a new <code>AudioDescriptionCodecSettings</code>.
     * @alias module:model/AudioDescriptionCodecSettings
     * @implements module:model/AudioCodecSettings
     */
    constructor() { 
        AudioCodecSettings.initialize(this);
        AudioDescriptionCodecSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AudioDescriptionCodecSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioDescriptionCodecSettings} obj Optional instance to populate.
     * @return {module:model/AudioDescriptionCodecSettings} The populated <code>AudioDescriptionCodecSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioDescriptionCodecSettings();
            AudioCodecSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('AacSettings')) {
                obj['AacSettings'] = AudioCodecSettingsAacSettings.constructFromObject(data['AacSettings']);
            }
            if (data.hasOwnProperty('Ac3Settings')) {
                obj['Ac3Settings'] = AudioCodecSettingsAc3Settings.constructFromObject(data['Ac3Settings']);
            }
            if (data.hasOwnProperty('Eac3AtmosSettings')) {
                obj['Eac3AtmosSettings'] = AudioCodecSettingsEac3AtmosSettings.constructFromObject(data['Eac3AtmosSettings']);
            }
            if (data.hasOwnProperty('Eac3Settings')) {
                obj['Eac3Settings'] = AudioCodecSettingsEac3Settings.constructFromObject(data['Eac3Settings']);
            }
            if (data.hasOwnProperty('Mp2Settings')) {
                obj['Mp2Settings'] = AudioCodecSettingsMp2Settings.constructFromObject(data['Mp2Settings']);
            }
            if (data.hasOwnProperty('PassThroughSettings')) {
                obj['PassThroughSettings'] = ApiClient.convertToType(data['PassThroughSettings'], Object);
            }
            if (data.hasOwnProperty('WavSettings')) {
                obj['WavSettings'] = AudioCodecSettingsWavSettings.constructFromObject(data['WavSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioDescriptionCodecSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioDescriptionCodecSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AacSettings`
        if (data['AacSettings']) { // data not null
          AudioCodecSettingsAacSettings.validateJSON(data['AacSettings']);
        }
        // validate the optional field `Ac3Settings`
        if (data['Ac3Settings']) { // data not null
          AudioCodecSettingsAc3Settings.validateJSON(data['Ac3Settings']);
        }
        // validate the optional field `Eac3AtmosSettings`
        if (data['Eac3AtmosSettings']) { // data not null
          AudioCodecSettingsEac3AtmosSettings.validateJSON(data['Eac3AtmosSettings']);
        }
        // validate the optional field `Eac3Settings`
        if (data['Eac3Settings']) { // data not null
          AudioCodecSettingsEac3Settings.validateJSON(data['Eac3Settings']);
        }
        // validate the optional field `Mp2Settings`
        if (data['Mp2Settings']) { // data not null
          AudioCodecSettingsMp2Settings.validateJSON(data['Mp2Settings']);
        }
        // validate the optional field `PassThroughSettings`
        if (data['PassThroughSettings']) { // data not null
          Object.validateJSON(data['PassThroughSettings']);
        }
        // validate the optional field `WavSettings`
        if (data['WavSettings']) { // data not null
          AudioCodecSettingsWavSettings.validateJSON(data['WavSettings']);
        }

        return true;
    }


}



/**
 * @member {module:model/AudioCodecSettingsAacSettings} AacSettings
 */
AudioDescriptionCodecSettings.prototype['AacSettings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsAc3Settings} Ac3Settings
 */
AudioDescriptionCodecSettings.prototype['Ac3Settings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsEac3AtmosSettings} Eac3AtmosSettings
 */
AudioDescriptionCodecSettings.prototype['Eac3AtmosSettings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsEac3Settings} Eac3Settings
 */
AudioDescriptionCodecSettings.prototype['Eac3Settings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsMp2Settings} Mp2Settings
 */
AudioDescriptionCodecSettings.prototype['Mp2Settings'] = undefined;

/**
 * @member {Object} PassThroughSettings
 */
AudioDescriptionCodecSettings.prototype['PassThroughSettings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsWavSettings} WavSettings
 */
AudioDescriptionCodecSettings.prototype['WavSettings'] = undefined;


// Implement AudioCodecSettings interface:
/**
 * @member {module:model/AudioCodecSettingsAacSettings} AacSettings
 */
AudioCodecSettings.prototype['AacSettings'] = undefined;
/**
 * @member {module:model/AudioCodecSettingsAc3Settings} Ac3Settings
 */
AudioCodecSettings.prototype['Ac3Settings'] = undefined;
/**
 * @member {module:model/AudioCodecSettingsEac3AtmosSettings} Eac3AtmosSettings
 */
AudioCodecSettings.prototype['Eac3AtmosSettings'] = undefined;
/**
 * @member {module:model/AudioCodecSettingsEac3Settings} Eac3Settings
 */
AudioCodecSettings.prototype['Eac3Settings'] = undefined;
/**
 * @member {module:model/AudioCodecSettingsMp2Settings} Mp2Settings
 */
AudioCodecSettings.prototype['Mp2Settings'] = undefined;
/**
 * @member {Object} PassThroughSettings
 */
AudioCodecSettings.prototype['PassThroughSettings'] = undefined;
/**
 * @member {module:model/AudioCodecSettingsWavSettings} WavSettings
 */
AudioCodecSettings.prototype['WavSettings'] = undefined;




export default AudioDescriptionCodecSettings;

