/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CaptionRectangle from './CaptionRectangle';

/**
 * The TeletextSourceSettingsOutputRectangle model module.
 * @module model/TeletextSourceSettingsOutputRectangle
 * @version 2017-10-14
 */
class TeletextSourceSettingsOutputRectangle {
    /**
     * Constructs a new <code>TeletextSourceSettingsOutputRectangle</code>.
     * @alias module:model/TeletextSourceSettingsOutputRectangle
     * @implements module:model/CaptionRectangle
     * @param height {Number} 
     * @param leftOffset {Number} 
     * @param topOffset {Number} 
     * @param width {Number} 
     */
    constructor(height, leftOffset, topOffset, width) { 
        CaptionRectangle.initialize(this, height, leftOffset, topOffset, width);
        TeletextSourceSettingsOutputRectangle.initialize(this, height, leftOffset, topOffset, width);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, height, leftOffset, topOffset, width) { 
        obj['Height'] = height;
        obj['LeftOffset'] = leftOffset;
        obj['TopOffset'] = topOffset;
        obj['Width'] = width;
    }

    /**
     * Constructs a <code>TeletextSourceSettingsOutputRectangle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeletextSourceSettingsOutputRectangle} obj Optional instance to populate.
     * @return {module:model/TeletextSourceSettingsOutputRectangle} The populated <code>TeletextSourceSettingsOutputRectangle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeletextSourceSettingsOutputRectangle();
            CaptionRectangle.constructFromObject(data, obj);

            if (data.hasOwnProperty('Height')) {
                obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
            }
            if (data.hasOwnProperty('LeftOffset')) {
                obj['LeftOffset'] = ApiClient.convertToType(data['LeftOffset'], 'Number');
            }
            if (data.hasOwnProperty('TopOffset')) {
                obj['TopOffset'] = ApiClient.convertToType(data['TopOffset'], 'Number');
            }
            if (data.hasOwnProperty('Width')) {
                obj['Width'] = ApiClient.convertToType(data['Width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeletextSourceSettingsOutputRectangle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeletextSourceSettingsOutputRectangle</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TeletextSourceSettingsOutputRectangle.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Height`
        if (data['Height']) { // data not null
          Number.validateJSON(data['Height']);
        }
        // validate the optional field `LeftOffset`
        if (data['LeftOffset']) { // data not null
          Number.validateJSON(data['LeftOffset']);
        }
        // validate the optional field `TopOffset`
        if (data['TopOffset']) { // data not null
          Number.validateJSON(data['TopOffset']);
        }
        // validate the optional field `Width`
        if (data['Width']) { // data not null
          Number.validateJSON(data['Width']);
        }

        return true;
    }


}

TeletextSourceSettingsOutputRectangle.RequiredProperties = ["Height", "LeftOffset", "TopOffset", "Width"];

/**
 * @member {Number} Height
 */
TeletextSourceSettingsOutputRectangle.prototype['Height'] = undefined;

/**
 * @member {Number} LeftOffset
 */
TeletextSourceSettingsOutputRectangle.prototype['LeftOffset'] = undefined;

/**
 * @member {Number} TopOffset
 */
TeletextSourceSettingsOutputRectangle.prototype['TopOffset'] = undefined;

/**
 * @member {Number} Width
 */
TeletextSourceSettingsOutputRectangle.prototype['Width'] = undefined;


// Implement CaptionRectangle interface:
/**
 * @member {Number} Height
 */
CaptionRectangle.prototype['Height'] = undefined;
/**
 * @member {Number} LeftOffset
 */
CaptionRectangle.prototype['LeftOffset'] = undefined;
/**
 * @member {Number} TopOffset
 */
CaptionRectangle.prototype['TopOffset'] = undefined;
/**
 * @member {Number} Width
 */
CaptionRectangle.prototype['Width'] = undefined;




export default TeletextSourceSettingsOutputRectangle;

