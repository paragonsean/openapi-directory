/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputDeviceActiveInput from './InputDeviceActiveInput';
import InputDeviceConfiguredInput from './InputDeviceConfiguredInput';
import InputDeviceScanType from './InputDeviceScanType';
import InputDeviceState from './InputDeviceState';
import InputDeviceUhdSettings from './InputDeviceUhdSettings';

/**
 * The DescribeInputDeviceResponseUhdDeviceSettings model module.
 * @module model/DescribeInputDeviceResponseUhdDeviceSettings
 * @version 2017-10-14
 */
class DescribeInputDeviceResponseUhdDeviceSettings {
    /**
     * Constructs a new <code>DescribeInputDeviceResponseUhdDeviceSettings</code>.
     * @alias module:model/DescribeInputDeviceResponseUhdDeviceSettings
     * @implements module:model/InputDeviceUhdSettings
     */
    constructor() { 
        InputDeviceUhdSettings.initialize(this);
        DescribeInputDeviceResponseUhdDeviceSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeInputDeviceResponseUhdDeviceSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeInputDeviceResponseUhdDeviceSettings} obj Optional instance to populate.
     * @return {module:model/DescribeInputDeviceResponseUhdDeviceSettings} The populated <code>DescribeInputDeviceResponseUhdDeviceSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeInputDeviceResponseUhdDeviceSettings();
            InputDeviceUhdSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('ActiveInput')) {
                obj['ActiveInput'] = ApiClient.convertToType(data['ActiveInput'], InputDeviceActiveInput);
            }
            if (data.hasOwnProperty('ConfiguredInput')) {
                obj['ConfiguredInput'] = ApiClient.convertToType(data['ConfiguredInput'], InputDeviceConfiguredInput);
            }
            if (data.hasOwnProperty('DeviceState')) {
                obj['DeviceState'] = ApiClient.convertToType(data['DeviceState'], InputDeviceState);
            }
            if (data.hasOwnProperty('Framerate')) {
                obj['Framerate'] = ApiClient.convertToType(data['Framerate'], 'Number');
            }
            if (data.hasOwnProperty('Height')) {
                obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
            }
            if (data.hasOwnProperty('MaxBitrate')) {
                obj['MaxBitrate'] = ApiClient.convertToType(data['MaxBitrate'], 'Number');
            }
            if (data.hasOwnProperty('ScanType')) {
                obj['ScanType'] = ApiClient.convertToType(data['ScanType'], InputDeviceScanType);
            }
            if (data.hasOwnProperty('Width')) {
                obj['Width'] = ApiClient.convertToType(data['Width'], 'Number');
            }
            if (data.hasOwnProperty('LatencyMs')) {
                obj['LatencyMs'] = ApiClient.convertToType(data['LatencyMs'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeInputDeviceResponseUhdDeviceSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeInputDeviceResponseUhdDeviceSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ActiveInput`
        if (data['ActiveInput']) { // data not null
          InputDeviceActiveInput.validateJSON(data['ActiveInput']);
        }
        // validate the optional field `ConfiguredInput`
        if (data['ConfiguredInput']) { // data not null
          InputDeviceConfiguredInput.validateJSON(data['ConfiguredInput']);
        }
        // validate the optional field `DeviceState`
        if (data['DeviceState']) { // data not null
          InputDeviceState.validateJSON(data['DeviceState']);
        }
        // validate the optional field `Framerate`
        if (data['Framerate']) { // data not null
          Number.validateJSON(data['Framerate']);
        }
        // validate the optional field `Height`
        if (data['Height']) { // data not null
          Number.validateJSON(data['Height']);
        }
        // validate the optional field `MaxBitrate`
        if (data['MaxBitrate']) { // data not null
          Number.validateJSON(data['MaxBitrate']);
        }
        // validate the optional field `ScanType`
        if (data['ScanType']) { // data not null
          InputDeviceScanType.validateJSON(data['ScanType']);
        }
        // validate the optional field `Width`
        if (data['Width']) { // data not null
          Number.validateJSON(data['Width']);
        }
        // validate the optional field `LatencyMs`
        if (data['LatencyMs']) { // data not null
          Number.validateJSON(data['LatencyMs']);
        }

        return true;
    }


}



/**
 * @member {module:model/InputDeviceActiveInput} ActiveInput
 */
DescribeInputDeviceResponseUhdDeviceSettings.prototype['ActiveInput'] = undefined;

/**
 * @member {module:model/InputDeviceConfiguredInput} ConfiguredInput
 */
DescribeInputDeviceResponseUhdDeviceSettings.prototype['ConfiguredInput'] = undefined;

/**
 * @member {module:model/InputDeviceState} DeviceState
 */
DescribeInputDeviceResponseUhdDeviceSettings.prototype['DeviceState'] = undefined;

/**
 * @member {Number} Framerate
 */
DescribeInputDeviceResponseUhdDeviceSettings.prototype['Framerate'] = undefined;

/**
 * @member {Number} Height
 */
DescribeInputDeviceResponseUhdDeviceSettings.prototype['Height'] = undefined;

/**
 * @member {Number} MaxBitrate
 */
DescribeInputDeviceResponseUhdDeviceSettings.prototype['MaxBitrate'] = undefined;

/**
 * @member {module:model/InputDeviceScanType} ScanType
 */
DescribeInputDeviceResponseUhdDeviceSettings.prototype['ScanType'] = undefined;

/**
 * @member {Number} Width
 */
DescribeInputDeviceResponseUhdDeviceSettings.prototype['Width'] = undefined;

/**
 * @member {Number} LatencyMs
 */
DescribeInputDeviceResponseUhdDeviceSettings.prototype['LatencyMs'] = undefined;


// Implement InputDeviceUhdSettings interface:
/**
 * @member {module:model/InputDeviceActiveInput} ActiveInput
 */
InputDeviceUhdSettings.prototype['ActiveInput'] = undefined;
/**
 * @member {module:model/InputDeviceConfiguredInput} ConfiguredInput
 */
InputDeviceUhdSettings.prototype['ConfiguredInput'] = undefined;
/**
 * @member {module:model/InputDeviceState} DeviceState
 */
InputDeviceUhdSettings.prototype['DeviceState'] = undefined;
/**
 * @member {Number} Framerate
 */
InputDeviceUhdSettings.prototype['Framerate'] = undefined;
/**
 * @member {Number} Height
 */
InputDeviceUhdSettings.prototype['Height'] = undefined;
/**
 * @member {Number} MaxBitrate
 */
InputDeviceUhdSettings.prototype['MaxBitrate'] = undefined;
/**
 * @member {module:model/InputDeviceScanType} ScanType
 */
InputDeviceUhdSettings.prototype['ScanType'] = undefined;
/**
 * @member {Number} Width
 */
InputDeviceUhdSettings.prototype['Width'] = undefined;
/**
 * @member {Number} LatencyMs
 */
InputDeviceUhdSettings.prototype['LatencyMs'] = undefined;




export default DescribeInputDeviceResponseUhdDeviceSettings;

