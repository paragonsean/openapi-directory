/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeleteMultiplexProgramResponseMultiplexProgramSettings from './DeleteMultiplexProgramResponseMultiplexProgramSettings';
import DeleteMultiplexProgramResponsePacketIdentifiersMap from './DeleteMultiplexProgramResponsePacketIdentifiersMap';

/**
 * The DescribeMultiplexProgramResponse model module.
 * @module model/DescribeMultiplexProgramResponse
 * @version 2017-10-14
 */
class DescribeMultiplexProgramResponse {
    /**
     * Constructs a new <code>DescribeMultiplexProgramResponse</code>.
     * Placeholder documentation for DescribeMultiplexProgramResponse
     * @alias module:model/DescribeMultiplexProgramResponse
     */
    constructor() { 
        
        DescribeMultiplexProgramResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeMultiplexProgramResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeMultiplexProgramResponse} obj Optional instance to populate.
     * @return {module:model/DescribeMultiplexProgramResponse} The populated <code>DescribeMultiplexProgramResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeMultiplexProgramResponse();

            if (data.hasOwnProperty('ChannelId')) {
                obj['ChannelId'] = ApiClient.convertToType(data['ChannelId'], 'String');
            }
            if (data.hasOwnProperty('MultiplexProgramSettings')) {
                obj['MultiplexProgramSettings'] = DeleteMultiplexProgramResponseMultiplexProgramSettings.constructFromObject(data['MultiplexProgramSettings']);
            }
            if (data.hasOwnProperty('PacketIdentifiersMap')) {
                obj['PacketIdentifiersMap'] = DeleteMultiplexProgramResponsePacketIdentifiersMap.constructFromObject(data['PacketIdentifiersMap']);
            }
            if (data.hasOwnProperty('PipelineDetails')) {
                obj['PipelineDetails'] = ApiClient.convertToType(data['PipelineDetails'], Array);
            }
            if (data.hasOwnProperty('ProgramName')) {
                obj['ProgramName'] = ApiClient.convertToType(data['ProgramName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeMultiplexProgramResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeMultiplexProgramResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ChannelId`
        if (data['ChannelId']) { // data not null
          String.validateJSON(data['ChannelId']);
        }
        // validate the optional field `MultiplexProgramSettings`
        if (data['MultiplexProgramSettings']) { // data not null
          DeleteMultiplexProgramResponseMultiplexProgramSettings.validateJSON(data['MultiplexProgramSettings']);
        }
        // validate the optional field `PacketIdentifiersMap`
        if (data['PacketIdentifiersMap']) { // data not null
          DeleteMultiplexProgramResponsePacketIdentifiersMap.validateJSON(data['PacketIdentifiersMap']);
        }
        // validate the optional field `PipelineDetails`
        if (data['PipelineDetails']) { // data not null
          Array.validateJSON(data['PipelineDetails']);
        }
        // validate the optional field `ProgramName`
        if (data['ProgramName']) { // data not null
          String.validateJSON(data['ProgramName']);
        }

        return true;
    }


}



/**
 * @member {String} ChannelId
 */
DescribeMultiplexProgramResponse.prototype['ChannelId'] = undefined;

/**
 * @member {module:model/DeleteMultiplexProgramResponseMultiplexProgramSettings} MultiplexProgramSettings
 */
DescribeMultiplexProgramResponse.prototype['MultiplexProgramSettings'] = undefined;

/**
 * @member {module:model/DeleteMultiplexProgramResponsePacketIdentifiersMap} PacketIdentifiersMap
 */
DescribeMultiplexProgramResponse.prototype['PacketIdentifiersMap'] = undefined;

/**
 * @member {Array} PipelineDetails
 */
DescribeMultiplexProgramResponse.prototype['PipelineDetails'] = undefined;

/**
 * @member {String} ProgramName
 */
DescribeMultiplexProgramResponse.prototype['ProgramName'] = undefined;






export default DescribeMultiplexProgramResponse;

