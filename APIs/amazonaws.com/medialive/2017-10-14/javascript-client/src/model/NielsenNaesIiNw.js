/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NielsenWatermarkTimezones from './NielsenWatermarkTimezones';

/**
 * The NielsenNaesIiNw model module.
 * @module model/NielsenNaesIiNw
 * @version 2017-10-14
 */
class NielsenNaesIiNw {
    /**
     * Constructs a new <code>NielsenNaesIiNw</code>.
     * Nielsen Naes Ii Nw
     * @alias module:model/NielsenNaesIiNw
     * @param checkDigitString {String} 
     * @param sid {Number} 
     */
    constructor(checkDigitString, sid) { 
        
        NielsenNaesIiNw.initialize(this, checkDigitString, sid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, checkDigitString, sid) { 
        obj['CheckDigitString'] = checkDigitString;
        obj['Sid'] = sid;
    }

    /**
     * Constructs a <code>NielsenNaesIiNw</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NielsenNaesIiNw} obj Optional instance to populate.
     * @return {module:model/NielsenNaesIiNw} The populated <code>NielsenNaesIiNw</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NielsenNaesIiNw();

            if (data.hasOwnProperty('CheckDigitString')) {
                obj['CheckDigitString'] = ApiClient.convertToType(data['CheckDigitString'], 'String');
            }
            if (data.hasOwnProperty('Sid')) {
                obj['Sid'] = ApiClient.convertToType(data['Sid'], 'Number');
            }
            if (data.hasOwnProperty('Timezone')) {
                obj['Timezone'] = ApiClient.convertToType(data['Timezone'], NielsenWatermarkTimezones);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NielsenNaesIiNw</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NielsenNaesIiNw</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NielsenNaesIiNw.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CheckDigitString`
        if (data['CheckDigitString']) { // data not null
          String.validateJSON(data['CheckDigitString']);
        }
        // validate the optional field `Sid`
        if (data['Sid']) { // data not null
          Number.validateJSON(data['Sid']);
        }
        // validate the optional field `Timezone`
        if (data['Timezone']) { // data not null
          NielsenWatermarkTimezones.validateJSON(data['Timezone']);
        }

        return true;
    }


}

NielsenNaesIiNw.RequiredProperties = ["CheckDigitString", "Sid"];

/**
 * @member {String} CheckDigitString
 */
NielsenNaesIiNw.prototype['CheckDigitString'] = undefined;

/**
 * @member {Number} Sid
 */
NielsenNaesIiNw.prototype['Sid'] = undefined;

/**
 * @member {module:model/NielsenWatermarkTimezones} Timezone
 */
NielsenNaesIiNw.prototype['Timezone'] = undefined;






export default NielsenNaesIiNw;

