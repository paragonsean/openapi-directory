/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateMultiplexRequestMultiplexSettings from './CreateMultiplexRequestMultiplexSettings';

/**
 * The CreateMultiplexRequest model module.
 * @module model/CreateMultiplexRequest
 * @version 2017-10-14
 */
class CreateMultiplexRequest {
    /**
     * Constructs a new <code>CreateMultiplexRequest</code>.
     * @alias module:model/CreateMultiplexRequest
     * @param availabilityZones {Array.<String>} Placeholder documentation for __listOf__string
     * @param multiplexSettings {module:model/CreateMultiplexRequestMultiplexSettings} 
     * @param name {String} Placeholder documentation for __string
     * @param requestId {String} Placeholder documentation for __string
     */
    constructor(availabilityZones, multiplexSettings, name, requestId) { 
        
        CreateMultiplexRequest.initialize(this, availabilityZones, multiplexSettings, name, requestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, availabilityZones, multiplexSettings, name, requestId) { 
        obj['availabilityZones'] = availabilityZones;
        obj['multiplexSettings'] = multiplexSettings;
        obj['name'] = name;
        obj['requestId'] = requestId;
    }

    /**
     * Constructs a <code>CreateMultiplexRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMultiplexRequest} obj Optional instance to populate.
     * @return {module:model/CreateMultiplexRequest} The populated <code>CreateMultiplexRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMultiplexRequest();

            if (data.hasOwnProperty('availabilityZones')) {
                obj['availabilityZones'] = ApiClient.convertToType(data['availabilityZones'], ['String']);
            }
            if (data.hasOwnProperty('multiplexSettings')) {
                obj['multiplexSettings'] = CreateMultiplexRequestMultiplexSettings.constructFromObject(data['multiplexSettings']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateMultiplexRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateMultiplexRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateMultiplexRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['availabilityZones'])) {
            throw new Error("Expected the field `availabilityZones` to be an array in the JSON data but got " + data['availabilityZones']);
        }
        // validate the optional field `multiplexSettings`
        if (data['multiplexSettings']) { // data not null
          CreateMultiplexRequestMultiplexSettings.validateJSON(data['multiplexSettings']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }

        return true;
    }


}

CreateMultiplexRequest.RequiredProperties = ["availabilityZones", "multiplexSettings", "name", "requestId"];

/**
 * Placeholder documentation for __listOf__string
 * @member {Array.<String>} availabilityZones
 */
CreateMultiplexRequest.prototype['availabilityZones'] = undefined;

/**
 * @member {module:model/CreateMultiplexRequestMultiplexSettings} multiplexSettings
 */
CreateMultiplexRequest.prototype['multiplexSettings'] = undefined;

/**
 * Placeholder documentation for __string
 * @member {String} name
 */
CreateMultiplexRequest.prototype['name'] = undefined;

/**
 * Placeholder documentation for __string
 * @member {String} requestId
 */
CreateMultiplexRequest.prototype['requestId'] = undefined;

/**
 * Placeholder documentation for Tags
 * @member {Object.<String, String>} tags
 */
CreateMultiplexRequest.prototype['tags'] = undefined;






export default CreateMultiplexRequest;

