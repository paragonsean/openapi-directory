/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MultiplexProgramPacketIdentifiersMap model module.
 * @module model/MultiplexProgramPacketIdentifiersMap
 * @version 2017-10-14
 */
class MultiplexProgramPacketIdentifiersMap {
    /**
     * Constructs a new <code>MultiplexProgramPacketIdentifiersMap</code>.
     * Packet identifiers map for a given Multiplex program.
     * @alias module:model/MultiplexProgramPacketIdentifiersMap
     */
    constructor() { 
        
        MultiplexProgramPacketIdentifiersMap.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MultiplexProgramPacketIdentifiersMap</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MultiplexProgramPacketIdentifiersMap} obj Optional instance to populate.
     * @return {module:model/MultiplexProgramPacketIdentifiersMap} The populated <code>MultiplexProgramPacketIdentifiersMap</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultiplexProgramPacketIdentifiersMap();

            if (data.hasOwnProperty('AudioPids')) {
                obj['AudioPids'] = ApiClient.convertToType(data['AudioPids'], Array);
            }
            if (data.hasOwnProperty('DvbSubPids')) {
                obj['DvbSubPids'] = ApiClient.convertToType(data['DvbSubPids'], Array);
            }
            if (data.hasOwnProperty('DvbTeletextPid')) {
                obj['DvbTeletextPid'] = ApiClient.convertToType(data['DvbTeletextPid'], 'Number');
            }
            if (data.hasOwnProperty('EtvPlatformPid')) {
                obj['EtvPlatformPid'] = ApiClient.convertToType(data['EtvPlatformPid'], 'Number');
            }
            if (data.hasOwnProperty('EtvSignalPid')) {
                obj['EtvSignalPid'] = ApiClient.convertToType(data['EtvSignalPid'], 'Number');
            }
            if (data.hasOwnProperty('KlvDataPids')) {
                obj['KlvDataPids'] = ApiClient.convertToType(data['KlvDataPids'], Array);
            }
            if (data.hasOwnProperty('PcrPid')) {
                obj['PcrPid'] = ApiClient.convertToType(data['PcrPid'], 'Number');
            }
            if (data.hasOwnProperty('PmtPid')) {
                obj['PmtPid'] = ApiClient.convertToType(data['PmtPid'], 'Number');
            }
            if (data.hasOwnProperty('PrivateMetadataPid')) {
                obj['PrivateMetadataPid'] = ApiClient.convertToType(data['PrivateMetadataPid'], 'Number');
            }
            if (data.hasOwnProperty('Scte27Pids')) {
                obj['Scte27Pids'] = ApiClient.convertToType(data['Scte27Pids'], Array);
            }
            if (data.hasOwnProperty('Scte35Pid')) {
                obj['Scte35Pid'] = ApiClient.convertToType(data['Scte35Pid'], 'Number');
            }
            if (data.hasOwnProperty('TimedMetadataPid')) {
                obj['TimedMetadataPid'] = ApiClient.convertToType(data['TimedMetadataPid'], 'Number');
            }
            if (data.hasOwnProperty('VideoPid')) {
                obj['VideoPid'] = ApiClient.convertToType(data['VideoPid'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MultiplexProgramPacketIdentifiersMap</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MultiplexProgramPacketIdentifiersMap</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AudioPids`
        if (data['AudioPids']) { // data not null
          Array.validateJSON(data['AudioPids']);
        }
        // validate the optional field `DvbSubPids`
        if (data['DvbSubPids']) { // data not null
          Array.validateJSON(data['DvbSubPids']);
        }
        // validate the optional field `DvbTeletextPid`
        if (data['DvbTeletextPid']) { // data not null
          Number.validateJSON(data['DvbTeletextPid']);
        }
        // validate the optional field `EtvPlatformPid`
        if (data['EtvPlatformPid']) { // data not null
          Number.validateJSON(data['EtvPlatformPid']);
        }
        // validate the optional field `EtvSignalPid`
        if (data['EtvSignalPid']) { // data not null
          Number.validateJSON(data['EtvSignalPid']);
        }
        // validate the optional field `KlvDataPids`
        if (data['KlvDataPids']) { // data not null
          Array.validateJSON(data['KlvDataPids']);
        }
        // validate the optional field `PcrPid`
        if (data['PcrPid']) { // data not null
          Number.validateJSON(data['PcrPid']);
        }
        // validate the optional field `PmtPid`
        if (data['PmtPid']) { // data not null
          Number.validateJSON(data['PmtPid']);
        }
        // validate the optional field `PrivateMetadataPid`
        if (data['PrivateMetadataPid']) { // data not null
          Number.validateJSON(data['PrivateMetadataPid']);
        }
        // validate the optional field `Scte27Pids`
        if (data['Scte27Pids']) { // data not null
          Array.validateJSON(data['Scte27Pids']);
        }
        // validate the optional field `Scte35Pid`
        if (data['Scte35Pid']) { // data not null
          Number.validateJSON(data['Scte35Pid']);
        }
        // validate the optional field `TimedMetadataPid`
        if (data['TimedMetadataPid']) { // data not null
          Number.validateJSON(data['TimedMetadataPid']);
        }
        // validate the optional field `VideoPid`
        if (data['VideoPid']) { // data not null
          Number.validateJSON(data['VideoPid']);
        }

        return true;
    }


}



/**
 * @member {Array} AudioPids
 */
MultiplexProgramPacketIdentifiersMap.prototype['AudioPids'] = undefined;

/**
 * @member {Array} DvbSubPids
 */
MultiplexProgramPacketIdentifiersMap.prototype['DvbSubPids'] = undefined;

/**
 * @member {Number} DvbTeletextPid
 */
MultiplexProgramPacketIdentifiersMap.prototype['DvbTeletextPid'] = undefined;

/**
 * @member {Number} EtvPlatformPid
 */
MultiplexProgramPacketIdentifiersMap.prototype['EtvPlatformPid'] = undefined;

/**
 * @member {Number} EtvSignalPid
 */
MultiplexProgramPacketIdentifiersMap.prototype['EtvSignalPid'] = undefined;

/**
 * @member {Array} KlvDataPids
 */
MultiplexProgramPacketIdentifiersMap.prototype['KlvDataPids'] = undefined;

/**
 * @member {Number} PcrPid
 */
MultiplexProgramPacketIdentifiersMap.prototype['PcrPid'] = undefined;

/**
 * @member {Number} PmtPid
 */
MultiplexProgramPacketIdentifiersMap.prototype['PmtPid'] = undefined;

/**
 * @member {Number} PrivateMetadataPid
 */
MultiplexProgramPacketIdentifiersMap.prototype['PrivateMetadataPid'] = undefined;

/**
 * @member {Array} Scte27Pids
 */
MultiplexProgramPacketIdentifiersMap.prototype['Scte27Pids'] = undefined;

/**
 * @member {Number} Scte35Pid
 */
MultiplexProgramPacketIdentifiersMap.prototype['Scte35Pid'] = undefined;

/**
 * @member {Number} TimedMetadataPid
 */
MultiplexProgramPacketIdentifiersMap.prototype['TimedMetadataPid'] = undefined;

/**
 * @member {Number} VideoPid
 */
MultiplexProgramPacketIdentifiersMap.prototype['VideoPid'] = undefined;






export default MultiplexProgramPacketIdentifiersMap;

