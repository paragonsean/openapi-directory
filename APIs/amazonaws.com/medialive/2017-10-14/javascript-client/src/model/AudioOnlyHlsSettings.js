/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AudioOnlyHlsSegmentType from './AudioOnlyHlsSegmentType';
import AudioOnlyHlsSettingsAudioOnlyImage from './AudioOnlyHlsSettingsAudioOnlyImage';
import AudioOnlyHlsTrackType from './AudioOnlyHlsTrackType';

/**
 * The AudioOnlyHlsSettings model module.
 * @module model/AudioOnlyHlsSettings
 * @version 2017-10-14
 */
class AudioOnlyHlsSettings {
    /**
     * Constructs a new <code>AudioOnlyHlsSettings</code>.
     * Audio Only Hls Settings
     * @alias module:model/AudioOnlyHlsSettings
     */
    constructor() { 
        
        AudioOnlyHlsSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AudioOnlyHlsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioOnlyHlsSettings} obj Optional instance to populate.
     * @return {module:model/AudioOnlyHlsSettings} The populated <code>AudioOnlyHlsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioOnlyHlsSettings();

            if (data.hasOwnProperty('AudioGroupId')) {
                obj['AudioGroupId'] = ApiClient.convertToType(data['AudioGroupId'], 'String');
            }
            if (data.hasOwnProperty('AudioOnlyImage')) {
                obj['AudioOnlyImage'] = AudioOnlyHlsSettingsAudioOnlyImage.constructFromObject(data['AudioOnlyImage']);
            }
            if (data.hasOwnProperty('AudioTrackType')) {
                obj['AudioTrackType'] = ApiClient.convertToType(data['AudioTrackType'], AudioOnlyHlsTrackType);
            }
            if (data.hasOwnProperty('SegmentType')) {
                obj['SegmentType'] = ApiClient.convertToType(data['SegmentType'], AudioOnlyHlsSegmentType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioOnlyHlsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioOnlyHlsSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AudioGroupId`
        if (data['AudioGroupId']) { // data not null
          String.validateJSON(data['AudioGroupId']);
        }
        // validate the optional field `AudioOnlyImage`
        if (data['AudioOnlyImage']) { // data not null
          AudioOnlyHlsSettingsAudioOnlyImage.validateJSON(data['AudioOnlyImage']);
        }
        // validate the optional field `AudioTrackType`
        if (data['AudioTrackType']) { // data not null
          AudioOnlyHlsTrackType.validateJSON(data['AudioTrackType']);
        }
        // validate the optional field `SegmentType`
        if (data['SegmentType']) { // data not null
          AudioOnlyHlsSegmentType.validateJSON(data['SegmentType']);
        }

        return true;
    }


}



/**
 * @member {String} AudioGroupId
 */
AudioOnlyHlsSettings.prototype['AudioGroupId'] = undefined;

/**
 * @member {module:model/AudioOnlyHlsSettingsAudioOnlyImage} AudioOnlyImage
 */
AudioOnlyHlsSettings.prototype['AudioOnlyImage'] = undefined;

/**
 * @member {module:model/AudioOnlyHlsTrackType} AudioTrackType
 */
AudioOnlyHlsSettings.prototype['AudioTrackType'] = undefined;

/**
 * @member {module:model/AudioOnlyHlsSegmentType} SegmentType
 */
AudioOnlyHlsSettings.prototype['SegmentType'] = undefined;






export default AudioOnlyHlsSettings;

