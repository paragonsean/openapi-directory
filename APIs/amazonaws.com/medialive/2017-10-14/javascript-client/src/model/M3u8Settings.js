/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import M3u8NielsenId3Behavior from './M3u8NielsenId3Behavior';
import M3u8PcrControl from './M3u8PcrControl';
import M3u8Scte35Behavior from './M3u8Scte35Behavior';
import M3u8TimedMetadataBehavior from './M3u8TimedMetadataBehavior';

/**
 * The M3u8Settings model module.
 * @module model/M3u8Settings
 * @version 2017-10-14
 */
class M3u8Settings {
    /**
     * Constructs a new <code>M3u8Settings</code>.
     * Settings information for the .m3u8 container
     * @alias module:model/M3u8Settings
     */
    constructor() { 
        
        M3u8Settings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>M3u8Settings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/M3u8Settings} obj Optional instance to populate.
     * @return {module:model/M3u8Settings} The populated <code>M3u8Settings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new M3u8Settings();

            if (data.hasOwnProperty('AudioFramesPerPes')) {
                obj['AudioFramesPerPes'] = ApiClient.convertToType(data['AudioFramesPerPes'], 'Number');
            }
            if (data.hasOwnProperty('AudioPids')) {
                obj['AudioPids'] = ApiClient.convertToType(data['AudioPids'], 'String');
            }
            if (data.hasOwnProperty('EcmPid')) {
                obj['EcmPid'] = ApiClient.convertToType(data['EcmPid'], 'String');
            }
            if (data.hasOwnProperty('NielsenId3Behavior')) {
                obj['NielsenId3Behavior'] = ApiClient.convertToType(data['NielsenId3Behavior'], M3u8NielsenId3Behavior);
            }
            if (data.hasOwnProperty('PatInterval')) {
                obj['PatInterval'] = ApiClient.convertToType(data['PatInterval'], 'Number');
            }
            if (data.hasOwnProperty('PcrControl')) {
                obj['PcrControl'] = ApiClient.convertToType(data['PcrControl'], M3u8PcrControl);
            }
            if (data.hasOwnProperty('PcrPeriod')) {
                obj['PcrPeriod'] = ApiClient.convertToType(data['PcrPeriod'], 'Number');
            }
            if (data.hasOwnProperty('PcrPid')) {
                obj['PcrPid'] = ApiClient.convertToType(data['PcrPid'], 'String');
            }
            if (data.hasOwnProperty('PmtInterval')) {
                obj['PmtInterval'] = ApiClient.convertToType(data['PmtInterval'], 'Number');
            }
            if (data.hasOwnProperty('PmtPid')) {
                obj['PmtPid'] = ApiClient.convertToType(data['PmtPid'], 'String');
            }
            if (data.hasOwnProperty('ProgramNum')) {
                obj['ProgramNum'] = ApiClient.convertToType(data['ProgramNum'], 'Number');
            }
            if (data.hasOwnProperty('Scte35Behavior')) {
                obj['Scte35Behavior'] = ApiClient.convertToType(data['Scte35Behavior'], M3u8Scte35Behavior);
            }
            if (data.hasOwnProperty('Scte35Pid')) {
                obj['Scte35Pid'] = ApiClient.convertToType(data['Scte35Pid'], 'String');
            }
            if (data.hasOwnProperty('TimedMetadataBehavior')) {
                obj['TimedMetadataBehavior'] = ApiClient.convertToType(data['TimedMetadataBehavior'], M3u8TimedMetadataBehavior);
            }
            if (data.hasOwnProperty('TimedMetadataPid')) {
                obj['TimedMetadataPid'] = ApiClient.convertToType(data['TimedMetadataPid'], 'String');
            }
            if (data.hasOwnProperty('TransportStreamId')) {
                obj['TransportStreamId'] = ApiClient.convertToType(data['TransportStreamId'], 'Number');
            }
            if (data.hasOwnProperty('VideoPid')) {
                obj['VideoPid'] = ApiClient.convertToType(data['VideoPid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>M3u8Settings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>M3u8Settings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AudioFramesPerPes`
        if (data['AudioFramesPerPes']) { // data not null
          Number.validateJSON(data['AudioFramesPerPes']);
        }
        // validate the optional field `AudioPids`
        if (data['AudioPids']) { // data not null
          String.validateJSON(data['AudioPids']);
        }
        // validate the optional field `EcmPid`
        if (data['EcmPid']) { // data not null
          String.validateJSON(data['EcmPid']);
        }
        // validate the optional field `NielsenId3Behavior`
        if (data['NielsenId3Behavior']) { // data not null
          M3u8NielsenId3Behavior.validateJSON(data['NielsenId3Behavior']);
        }
        // validate the optional field `PatInterval`
        if (data['PatInterval']) { // data not null
          Number.validateJSON(data['PatInterval']);
        }
        // validate the optional field `PcrControl`
        if (data['PcrControl']) { // data not null
          M3u8PcrControl.validateJSON(data['PcrControl']);
        }
        // validate the optional field `PcrPeriod`
        if (data['PcrPeriod']) { // data not null
          Number.validateJSON(data['PcrPeriod']);
        }
        // validate the optional field `PcrPid`
        if (data['PcrPid']) { // data not null
          String.validateJSON(data['PcrPid']);
        }
        // validate the optional field `PmtInterval`
        if (data['PmtInterval']) { // data not null
          Number.validateJSON(data['PmtInterval']);
        }
        // validate the optional field `PmtPid`
        if (data['PmtPid']) { // data not null
          String.validateJSON(data['PmtPid']);
        }
        // validate the optional field `ProgramNum`
        if (data['ProgramNum']) { // data not null
          Number.validateJSON(data['ProgramNum']);
        }
        // validate the optional field `Scte35Behavior`
        if (data['Scte35Behavior']) { // data not null
          M3u8Scte35Behavior.validateJSON(data['Scte35Behavior']);
        }
        // validate the optional field `Scte35Pid`
        if (data['Scte35Pid']) { // data not null
          String.validateJSON(data['Scte35Pid']);
        }
        // validate the optional field `TimedMetadataBehavior`
        if (data['TimedMetadataBehavior']) { // data not null
          M3u8TimedMetadataBehavior.validateJSON(data['TimedMetadataBehavior']);
        }
        // validate the optional field `TimedMetadataPid`
        if (data['TimedMetadataPid']) { // data not null
          String.validateJSON(data['TimedMetadataPid']);
        }
        // validate the optional field `TransportStreamId`
        if (data['TransportStreamId']) { // data not null
          Number.validateJSON(data['TransportStreamId']);
        }
        // validate the optional field `VideoPid`
        if (data['VideoPid']) { // data not null
          String.validateJSON(data['VideoPid']);
        }

        return true;
    }


}



/**
 * @member {Number} AudioFramesPerPes
 */
M3u8Settings.prototype['AudioFramesPerPes'] = undefined;

/**
 * @member {String} AudioPids
 */
M3u8Settings.prototype['AudioPids'] = undefined;

/**
 * @member {String} EcmPid
 */
M3u8Settings.prototype['EcmPid'] = undefined;

/**
 * @member {module:model/M3u8NielsenId3Behavior} NielsenId3Behavior
 */
M3u8Settings.prototype['NielsenId3Behavior'] = undefined;

/**
 * @member {Number} PatInterval
 */
M3u8Settings.prototype['PatInterval'] = undefined;

/**
 * @member {module:model/M3u8PcrControl} PcrControl
 */
M3u8Settings.prototype['PcrControl'] = undefined;

/**
 * @member {Number} PcrPeriod
 */
M3u8Settings.prototype['PcrPeriod'] = undefined;

/**
 * @member {String} PcrPid
 */
M3u8Settings.prototype['PcrPid'] = undefined;

/**
 * @member {Number} PmtInterval
 */
M3u8Settings.prototype['PmtInterval'] = undefined;

/**
 * @member {String} PmtPid
 */
M3u8Settings.prototype['PmtPid'] = undefined;

/**
 * @member {Number} ProgramNum
 */
M3u8Settings.prototype['ProgramNum'] = undefined;

/**
 * @member {module:model/M3u8Scte35Behavior} Scte35Behavior
 */
M3u8Settings.prototype['Scte35Behavior'] = undefined;

/**
 * @member {String} Scte35Pid
 */
M3u8Settings.prototype['Scte35Pid'] = undefined;

/**
 * @member {module:model/M3u8TimedMetadataBehavior} TimedMetadataBehavior
 */
M3u8Settings.prototype['TimedMetadataBehavior'] = undefined;

/**
 * @member {String} TimedMetadataPid
 */
M3u8Settings.prototype['TimedMetadataPid'] = undefined;

/**
 * @member {Number} TransportStreamId
 */
M3u8Settings.prototype['TransportStreamId'] = undefined;

/**
 * @member {String} VideoPid
 */
M3u8Settings.prototype['VideoPid'] = undefined;






export default M3u8Settings;

