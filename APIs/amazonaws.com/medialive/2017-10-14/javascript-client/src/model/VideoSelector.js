/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VideoSelectorColorSpace from './VideoSelectorColorSpace';
import VideoSelectorColorSpaceSettings from './VideoSelectorColorSpaceSettings';
import VideoSelectorColorSpaceUsage from './VideoSelectorColorSpaceUsage';
import VideoSelectorSelectorSettings from './VideoSelectorSelectorSettings';

/**
 * The VideoSelector model module.
 * @module model/VideoSelector
 * @version 2017-10-14
 */
class VideoSelector {
    /**
     * Constructs a new <code>VideoSelector</code>.
     * Specifies a particular video stream within an input source. An input may have only a single video selector.
     * @alias module:model/VideoSelector
     */
    constructor() { 
        
        VideoSelector.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoSelector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoSelector} obj Optional instance to populate.
     * @return {module:model/VideoSelector} The populated <code>VideoSelector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoSelector();

            if (data.hasOwnProperty('ColorSpace')) {
                obj['ColorSpace'] = ApiClient.convertToType(data['ColorSpace'], VideoSelectorColorSpace);
            }
            if (data.hasOwnProperty('ColorSpaceSettings')) {
                obj['ColorSpaceSettings'] = VideoSelectorColorSpaceSettings.constructFromObject(data['ColorSpaceSettings']);
            }
            if (data.hasOwnProperty('ColorSpaceUsage')) {
                obj['ColorSpaceUsage'] = ApiClient.convertToType(data['ColorSpaceUsage'], VideoSelectorColorSpaceUsage);
            }
            if (data.hasOwnProperty('SelectorSettings')) {
                obj['SelectorSettings'] = VideoSelectorSelectorSettings.constructFromObject(data['SelectorSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoSelector</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoSelector</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ColorSpace`
        if (data['ColorSpace']) { // data not null
          VideoSelectorColorSpace.validateJSON(data['ColorSpace']);
        }
        // validate the optional field `ColorSpaceSettings`
        if (data['ColorSpaceSettings']) { // data not null
          VideoSelectorColorSpaceSettings.validateJSON(data['ColorSpaceSettings']);
        }
        // validate the optional field `ColorSpaceUsage`
        if (data['ColorSpaceUsage']) { // data not null
          VideoSelectorColorSpaceUsage.validateJSON(data['ColorSpaceUsage']);
        }
        // validate the optional field `SelectorSettings`
        if (data['SelectorSettings']) { // data not null
          VideoSelectorSelectorSettings.validateJSON(data['SelectorSettings']);
        }

        return true;
    }


}



/**
 * @member {module:model/VideoSelectorColorSpace} ColorSpace
 */
VideoSelector.prototype['ColorSpace'] = undefined;

/**
 * @member {module:model/VideoSelectorColorSpaceSettings} ColorSpaceSettings
 */
VideoSelector.prototype['ColorSpaceSettings'] = undefined;

/**
 * @member {module:model/VideoSelectorColorSpaceUsage} ColorSpaceUsage
 */
VideoSelector.prototype['ColorSpaceUsage'] = undefined;

/**
 * @member {module:model/VideoSelectorSelectorSettings} SelectorSettings
 */
VideoSelector.prototype['SelectorSettings'] = undefined;






export default VideoSelector;

