/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AudioChannelMapping model module.
 * @module model/AudioChannelMapping
 * @version 2017-10-14
 */
class AudioChannelMapping {
    /**
     * Constructs a new <code>AudioChannelMapping</code>.
     * Audio Channel Mapping
     * @alias module:model/AudioChannelMapping
     * @param inputChannelLevels {Array} 
     * @param outputChannel {Number} 
     */
    constructor(inputChannelLevels, outputChannel) { 
        
        AudioChannelMapping.initialize(this, inputChannelLevels, outputChannel);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inputChannelLevels, outputChannel) { 
        obj['InputChannelLevels'] = inputChannelLevels;
        obj['OutputChannel'] = outputChannel;
    }

    /**
     * Constructs a <code>AudioChannelMapping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioChannelMapping} obj Optional instance to populate.
     * @return {module:model/AudioChannelMapping} The populated <code>AudioChannelMapping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioChannelMapping();

            if (data.hasOwnProperty('InputChannelLevels')) {
                obj['InputChannelLevels'] = ApiClient.convertToType(data['InputChannelLevels'], Array);
            }
            if (data.hasOwnProperty('OutputChannel')) {
                obj['OutputChannel'] = ApiClient.convertToType(data['OutputChannel'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioChannelMapping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioChannelMapping</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AudioChannelMapping.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InputChannelLevels`
        if (data['InputChannelLevels']) { // data not null
          Array.validateJSON(data['InputChannelLevels']);
        }
        // validate the optional field `OutputChannel`
        if (data['OutputChannel']) { // data not null
          Number.validateJSON(data['OutputChannel']);
        }

        return true;
    }


}

AudioChannelMapping.RequiredProperties = ["InputChannelLevels", "OutputChannel"];

/**
 * @member {Array} InputChannelLevels
 */
AudioChannelMapping.prototype['InputChannelLevels'] = undefined;

/**
 * @member {Number} OutputChannel
 */
AudioChannelMapping.prototype['OutputChannel'] = undefined;






export default AudioChannelMapping;

