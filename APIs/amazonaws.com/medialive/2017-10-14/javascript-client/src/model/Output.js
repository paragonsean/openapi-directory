/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OutputOutputSettings from './OutputOutputSettings';

/**
 * The Output model module.
 * @module model/Output
 * @version 2017-10-14
 */
class Output {
    /**
     * Constructs a new <code>Output</code>.
     * Output settings. There can be multiple outputs within a group.
     * @alias module:model/Output
     * @param outputSettings {module:model/OutputOutputSettings} 
     */
    constructor(outputSettings) { 
        
        Output.initialize(this, outputSettings);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, outputSettings) { 
        obj['OutputSettings'] = outputSettings;
    }

    /**
     * Constructs a <code>Output</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Output} obj Optional instance to populate.
     * @return {module:model/Output} The populated <code>Output</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Output();

            if (data.hasOwnProperty('AudioDescriptionNames')) {
                obj['AudioDescriptionNames'] = ApiClient.convertToType(data['AudioDescriptionNames'], Array);
            }
            if (data.hasOwnProperty('CaptionDescriptionNames')) {
                obj['CaptionDescriptionNames'] = ApiClient.convertToType(data['CaptionDescriptionNames'], Array);
            }
            if (data.hasOwnProperty('OutputName')) {
                obj['OutputName'] = ApiClient.convertToType(data['OutputName'], 'String');
            }
            if (data.hasOwnProperty('OutputSettings')) {
                obj['OutputSettings'] = OutputOutputSettings.constructFromObject(data['OutputSettings']);
            }
            if (data.hasOwnProperty('VideoDescriptionName')) {
                obj['VideoDescriptionName'] = ApiClient.convertToType(data['VideoDescriptionName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Output</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Output</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Output.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AudioDescriptionNames`
        if (data['AudioDescriptionNames']) { // data not null
          Array.validateJSON(data['AudioDescriptionNames']);
        }
        // validate the optional field `CaptionDescriptionNames`
        if (data['CaptionDescriptionNames']) { // data not null
          Array.validateJSON(data['CaptionDescriptionNames']);
        }
        // validate the optional field `OutputName`
        if (data['OutputName']) { // data not null
          String.validateJSON(data['OutputName']);
        }
        // validate the optional field `OutputSettings`
        if (data['OutputSettings']) { // data not null
          OutputOutputSettings.validateJSON(data['OutputSettings']);
        }
        // validate the optional field `VideoDescriptionName`
        if (data['VideoDescriptionName']) { // data not null
          String.validateJSON(data['VideoDescriptionName']);
        }

        return true;
    }


}

Output.RequiredProperties = ["OutputSettings"];

/**
 * @member {Array} AudioDescriptionNames
 */
Output.prototype['AudioDescriptionNames'] = undefined;

/**
 * @member {Array} CaptionDescriptionNames
 */
Output.prototype['CaptionDescriptionNames'] = undefined;

/**
 * @member {String} OutputName
 */
Output.prototype['OutputName'] = undefined;

/**
 * @member {module:model/OutputOutputSettings} OutputSettings
 */
Output.prototype['OutputSettings'] = undefined;

/**
 * @member {String} VideoDescriptionName
 */
Output.prototype['VideoDescriptionName'] = undefined;






export default Output;

