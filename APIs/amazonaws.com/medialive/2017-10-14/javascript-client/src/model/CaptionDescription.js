/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccessibilityType from './AccessibilityType';
import CaptionDescriptionDestinationSettings from './CaptionDescriptionDestinationSettings';

/**
 * The CaptionDescription model module.
 * @module model/CaptionDescription
 * @version 2017-10-14
 */
class CaptionDescription {
    /**
     * Constructs a new <code>CaptionDescription</code>.
     * Caption Description
     * @alias module:model/CaptionDescription
     * @param captionSelectorName {String} 
     * @param name {String} 
     */
    constructor(captionSelectorName, name) { 
        
        CaptionDescription.initialize(this, captionSelectorName, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, captionSelectorName, name) { 
        obj['CaptionSelectorName'] = captionSelectorName;
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>CaptionDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CaptionDescription} obj Optional instance to populate.
     * @return {module:model/CaptionDescription} The populated <code>CaptionDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CaptionDescription();

            if (data.hasOwnProperty('Accessibility')) {
                obj['Accessibility'] = ApiClient.convertToType(data['Accessibility'], AccessibilityType);
            }
            if (data.hasOwnProperty('CaptionSelectorName')) {
                obj['CaptionSelectorName'] = ApiClient.convertToType(data['CaptionSelectorName'], 'String');
            }
            if (data.hasOwnProperty('DestinationSettings')) {
                obj['DestinationSettings'] = CaptionDescriptionDestinationSettings.constructFromObject(data['DestinationSettings']);
            }
            if (data.hasOwnProperty('LanguageCode')) {
                obj['LanguageCode'] = ApiClient.convertToType(data['LanguageCode'], 'String');
            }
            if (data.hasOwnProperty('LanguageDescription')) {
                obj['LanguageDescription'] = ApiClient.convertToType(data['LanguageDescription'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CaptionDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CaptionDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CaptionDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Accessibility`
        if (data['Accessibility']) { // data not null
          AccessibilityType.validateJSON(data['Accessibility']);
        }
        // validate the optional field `CaptionSelectorName`
        if (data['CaptionSelectorName']) { // data not null
          String.validateJSON(data['CaptionSelectorName']);
        }
        // validate the optional field `DestinationSettings`
        if (data['DestinationSettings']) { // data not null
          CaptionDescriptionDestinationSettings.validateJSON(data['DestinationSettings']);
        }
        // validate the optional field `LanguageCode`
        if (data['LanguageCode']) { // data not null
          String.validateJSON(data['LanguageCode']);
        }
        // validate the optional field `LanguageDescription`
        if (data['LanguageDescription']) { // data not null
          String.validateJSON(data['LanguageDescription']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }

        return true;
    }


}

CaptionDescription.RequiredProperties = ["CaptionSelectorName", "Name"];

/**
 * @member {module:model/AccessibilityType} Accessibility
 */
CaptionDescription.prototype['Accessibility'] = undefined;

/**
 * @member {String} CaptionSelectorName
 */
CaptionDescription.prototype['CaptionSelectorName'] = undefined;

/**
 * @member {module:model/CaptionDescriptionDestinationSettings} DestinationSettings
 */
CaptionDescription.prototype['DestinationSettings'] = undefined;

/**
 * @member {String} LanguageCode
 */
CaptionDescription.prototype['LanguageCode'] = undefined;

/**
 * @member {String} LanguageDescription
 */
CaptionDescription.prototype['LanguageDescription'] = undefined;

/**
 * @member {String} Name
 */
CaptionDescription.prototype['Name'] = undefined;






export default CaptionDescription;

