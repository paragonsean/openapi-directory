/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VpcOutputSettingsDescription from './VpcOutputSettingsDescription';

/**
 * The ChannelSummaryVpc model module.
 * @module model/ChannelSummaryVpc
 * @version 2017-10-14
 */
class ChannelSummaryVpc {
    /**
     * Constructs a new <code>ChannelSummaryVpc</code>.
     * @alias module:model/ChannelSummaryVpc
     * @implements module:model/VpcOutputSettingsDescription
     */
    constructor() { 
        VpcOutputSettingsDescription.initialize(this);
        ChannelSummaryVpc.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelSummaryVpc</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelSummaryVpc} obj Optional instance to populate.
     * @return {module:model/ChannelSummaryVpc} The populated <code>ChannelSummaryVpc</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelSummaryVpc();
            VpcOutputSettingsDescription.constructFromObject(data, obj);

            if (data.hasOwnProperty('AvailabilityZones')) {
                obj['AvailabilityZones'] = ApiClient.convertToType(data['AvailabilityZones'], Array);
            }
            if (data.hasOwnProperty('NetworkInterfaceIds')) {
                obj['NetworkInterfaceIds'] = ApiClient.convertToType(data['NetworkInterfaceIds'], Array);
            }
            if (data.hasOwnProperty('SecurityGroupIds')) {
                obj['SecurityGroupIds'] = ApiClient.convertToType(data['SecurityGroupIds'], Array);
            }
            if (data.hasOwnProperty('SubnetIds')) {
                obj['SubnetIds'] = ApiClient.convertToType(data['SubnetIds'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelSummaryVpc</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelSummaryVpc</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AvailabilityZones`
        if (data['AvailabilityZones']) { // data not null
          Array.validateJSON(data['AvailabilityZones']);
        }
        // validate the optional field `NetworkInterfaceIds`
        if (data['NetworkInterfaceIds']) { // data not null
          Array.validateJSON(data['NetworkInterfaceIds']);
        }
        // validate the optional field `SecurityGroupIds`
        if (data['SecurityGroupIds']) { // data not null
          Array.validateJSON(data['SecurityGroupIds']);
        }
        // validate the optional field `SubnetIds`
        if (data['SubnetIds']) { // data not null
          Array.validateJSON(data['SubnetIds']);
        }

        return true;
    }


}



/**
 * @member {Array} AvailabilityZones
 */
ChannelSummaryVpc.prototype['AvailabilityZones'] = undefined;

/**
 * @member {Array} NetworkInterfaceIds
 */
ChannelSummaryVpc.prototype['NetworkInterfaceIds'] = undefined;

/**
 * @member {Array} SecurityGroupIds
 */
ChannelSummaryVpc.prototype['SecurityGroupIds'] = undefined;

/**
 * @member {Array} SubnetIds
 */
ChannelSummaryVpc.prototype['SubnetIds'] = undefined;


// Implement VpcOutputSettingsDescription interface:
/**
 * @member {Array} AvailabilityZones
 */
VpcOutputSettingsDescription.prototype['AvailabilityZones'] = undefined;
/**
 * @member {Array} NetworkInterfaceIds
 */
VpcOutputSettingsDescription.prototype['NetworkInterfaceIds'] = undefined;
/**
 * @member {Array} SecurityGroupIds
 */
VpcOutputSettingsDescription.prototype['SecurityGroupIds'] = undefined;
/**
 * @member {Array} SubnetIds
 */
VpcOutputSettingsDescription.prototype['SubnetIds'] = undefined;




export default ChannelSummaryVpc;

