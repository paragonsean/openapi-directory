/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelClass from './ChannelClass';
import ChannelState from './ChannelState';
import ChannelSummaryVpc from './ChannelSummaryVpc';
import DeleteChannelResponseCdiInputSpecification from './DeleteChannelResponseCdiInputSpecification';
import DeleteChannelResponseInputSpecification from './DeleteChannelResponseInputSpecification';
import DeleteChannelResponseMaintenance from './DeleteChannelResponseMaintenance';
import LogLevel from './LogLevel';

/**
 * The ChannelSummary model module.
 * @module model/ChannelSummary
 * @version 2017-10-14
 */
class ChannelSummary {
    /**
     * Constructs a new <code>ChannelSummary</code>.
     * Placeholder documentation for ChannelSummary
     * @alias module:model/ChannelSummary
     */
    constructor() { 
        
        ChannelSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelSummary} obj Optional instance to populate.
     * @return {module:model/ChannelSummary} The populated <code>ChannelSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelSummary();

            if (data.hasOwnProperty('Arn')) {
                obj['Arn'] = ApiClient.convertToType(data['Arn'], 'String');
            }
            if (data.hasOwnProperty('CdiInputSpecification')) {
                obj['CdiInputSpecification'] = DeleteChannelResponseCdiInputSpecification.constructFromObject(data['CdiInputSpecification']);
            }
            if (data.hasOwnProperty('ChannelClass')) {
                obj['ChannelClass'] = ApiClient.convertToType(data['ChannelClass'], ChannelClass);
            }
            if (data.hasOwnProperty('Destinations')) {
                obj['Destinations'] = ApiClient.convertToType(data['Destinations'], Array);
            }
            if (data.hasOwnProperty('EgressEndpoints')) {
                obj['EgressEndpoints'] = ApiClient.convertToType(data['EgressEndpoints'], Array);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('InputAttachments')) {
                obj['InputAttachments'] = ApiClient.convertToType(data['InputAttachments'], Array);
            }
            if (data.hasOwnProperty('InputSpecification')) {
                obj['InputSpecification'] = DeleteChannelResponseInputSpecification.constructFromObject(data['InputSpecification']);
            }
            if (data.hasOwnProperty('LogLevel')) {
                obj['LogLevel'] = ApiClient.convertToType(data['LogLevel'], LogLevel);
            }
            if (data.hasOwnProperty('Maintenance')) {
                obj['Maintenance'] = DeleteChannelResponseMaintenance.constructFromObject(data['Maintenance']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('PipelinesRunningCount')) {
                obj['PipelinesRunningCount'] = ApiClient.convertToType(data['PipelinesRunningCount'], 'Number');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], ChannelState);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
            if (data.hasOwnProperty('Vpc')) {
                obj['Vpc'] = ChannelSummaryVpc.constructFromObject(data['Vpc']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Arn`
        if (data['Arn']) { // data not null
          String.validateJSON(data['Arn']);
        }
        // validate the optional field `CdiInputSpecification`
        if (data['CdiInputSpecification']) { // data not null
          DeleteChannelResponseCdiInputSpecification.validateJSON(data['CdiInputSpecification']);
        }
        // validate the optional field `ChannelClass`
        if (data['ChannelClass']) { // data not null
          ChannelClass.validateJSON(data['ChannelClass']);
        }
        // validate the optional field `Destinations`
        if (data['Destinations']) { // data not null
          Array.validateJSON(data['Destinations']);
        }
        // validate the optional field `EgressEndpoints`
        if (data['EgressEndpoints']) { // data not null
          Array.validateJSON(data['EgressEndpoints']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `InputAttachments`
        if (data['InputAttachments']) { // data not null
          Array.validateJSON(data['InputAttachments']);
        }
        // validate the optional field `InputSpecification`
        if (data['InputSpecification']) { // data not null
          DeleteChannelResponseInputSpecification.validateJSON(data['InputSpecification']);
        }
        // validate the optional field `LogLevel`
        if (data['LogLevel']) { // data not null
          LogLevel.validateJSON(data['LogLevel']);
        }
        // validate the optional field `Maintenance`
        if (data['Maintenance']) { // data not null
          DeleteChannelResponseMaintenance.validateJSON(data['Maintenance']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `PipelinesRunningCount`
        if (data['PipelinesRunningCount']) { // data not null
          Number.validateJSON(data['PipelinesRunningCount']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          ChannelState.validateJSON(data['State']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }
        // validate the optional field `Vpc`
        if (data['Vpc']) { // data not null
          ChannelSummaryVpc.validateJSON(data['Vpc']);
        }

        return true;
    }


}



/**
 * @member {String} Arn
 */
ChannelSummary.prototype['Arn'] = undefined;

/**
 * @member {module:model/DeleteChannelResponseCdiInputSpecification} CdiInputSpecification
 */
ChannelSummary.prototype['CdiInputSpecification'] = undefined;

/**
 * @member {module:model/ChannelClass} ChannelClass
 */
ChannelSummary.prototype['ChannelClass'] = undefined;

/**
 * @member {Array} Destinations
 */
ChannelSummary.prototype['Destinations'] = undefined;

/**
 * @member {Array} EgressEndpoints
 */
ChannelSummary.prototype['EgressEndpoints'] = undefined;

/**
 * @member {String} Id
 */
ChannelSummary.prototype['Id'] = undefined;

/**
 * @member {Array} InputAttachments
 */
ChannelSummary.prototype['InputAttachments'] = undefined;

/**
 * @member {module:model/DeleteChannelResponseInputSpecification} InputSpecification
 */
ChannelSummary.prototype['InputSpecification'] = undefined;

/**
 * @member {module:model/LogLevel} LogLevel
 */
ChannelSummary.prototype['LogLevel'] = undefined;

/**
 * @member {module:model/DeleteChannelResponseMaintenance} Maintenance
 */
ChannelSummary.prototype['Maintenance'] = undefined;

/**
 * @member {String} Name
 */
ChannelSummary.prototype['Name'] = undefined;

/**
 * @member {Number} PipelinesRunningCount
 */
ChannelSummary.prototype['PipelinesRunningCount'] = undefined;

/**
 * @member {String} RoleArn
 */
ChannelSummary.prototype['RoleArn'] = undefined;

/**
 * @member {module:model/ChannelState} State
 */
ChannelSummary.prototype['State'] = undefined;

/**
 * @member {Object} Tags
 */
ChannelSummary.prototype['Tags'] = undefined;

/**
 * @member {module:model/ChannelSummaryVpc} Vpc
 */
ChannelSummary.prototype['Vpc'] = undefined;






export default ChannelSummary;

