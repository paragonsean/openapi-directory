/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AudioSelectorSettingsAudioHlsRenditionSelection from './AudioSelectorSettingsAudioHlsRenditionSelection';
import AudioSelectorSettingsAudioLanguageSelection from './AudioSelectorSettingsAudioLanguageSelection';
import AudioSelectorSettingsAudioPidSelection from './AudioSelectorSettingsAudioPidSelection';
import AudioSelectorSettingsAudioTrackSelection from './AudioSelectorSettingsAudioTrackSelection';

/**
 * The AudioSelectorSettings model module.
 * @module model/AudioSelectorSettings
 * @version 2017-10-14
 */
class AudioSelectorSettings {
    /**
     * Constructs a new <code>AudioSelectorSettings</code>.
     * Audio Selector Settings
     * @alias module:model/AudioSelectorSettings
     */
    constructor() { 
        
        AudioSelectorSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AudioSelectorSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioSelectorSettings} obj Optional instance to populate.
     * @return {module:model/AudioSelectorSettings} The populated <code>AudioSelectorSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioSelectorSettings();

            if (data.hasOwnProperty('AudioHlsRenditionSelection')) {
                obj['AudioHlsRenditionSelection'] = AudioSelectorSettingsAudioHlsRenditionSelection.constructFromObject(data['AudioHlsRenditionSelection']);
            }
            if (data.hasOwnProperty('AudioLanguageSelection')) {
                obj['AudioLanguageSelection'] = AudioSelectorSettingsAudioLanguageSelection.constructFromObject(data['AudioLanguageSelection']);
            }
            if (data.hasOwnProperty('AudioPidSelection')) {
                obj['AudioPidSelection'] = AudioSelectorSettingsAudioPidSelection.constructFromObject(data['AudioPidSelection']);
            }
            if (data.hasOwnProperty('AudioTrackSelection')) {
                obj['AudioTrackSelection'] = AudioSelectorSettingsAudioTrackSelection.constructFromObject(data['AudioTrackSelection']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioSelectorSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioSelectorSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AudioHlsRenditionSelection`
        if (data['AudioHlsRenditionSelection']) { // data not null
          AudioSelectorSettingsAudioHlsRenditionSelection.validateJSON(data['AudioHlsRenditionSelection']);
        }
        // validate the optional field `AudioLanguageSelection`
        if (data['AudioLanguageSelection']) { // data not null
          AudioSelectorSettingsAudioLanguageSelection.validateJSON(data['AudioLanguageSelection']);
        }
        // validate the optional field `AudioPidSelection`
        if (data['AudioPidSelection']) { // data not null
          AudioSelectorSettingsAudioPidSelection.validateJSON(data['AudioPidSelection']);
        }
        // validate the optional field `AudioTrackSelection`
        if (data['AudioTrackSelection']) { // data not null
          AudioSelectorSettingsAudioTrackSelection.validateJSON(data['AudioTrackSelection']);
        }

        return true;
    }


}



/**
 * @member {module:model/AudioSelectorSettingsAudioHlsRenditionSelection} AudioHlsRenditionSelection
 */
AudioSelectorSettings.prototype['AudioHlsRenditionSelection'] = undefined;

/**
 * @member {module:model/AudioSelectorSettingsAudioLanguageSelection} AudioLanguageSelection
 */
AudioSelectorSettings.prototype['AudioLanguageSelection'] = undefined;

/**
 * @member {module:model/AudioSelectorSettingsAudioPidSelection} AudioPidSelection
 */
AudioSelectorSettings.prototype['AudioPidSelection'] = undefined;

/**
 * @member {module:model/AudioSelectorSettingsAudioTrackSelection} AudioTrackSelection
 */
AudioSelectorSettings.prototype['AudioTrackSelection'] = undefined;






export default AudioSelectorSettings;

