/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputClass from './InputClass';
import InputSourceType from './InputSourceType';
import InputState from './InputState';
import InputType from './InputType';

/**
 * The DescribeInputResponse model module.
 * @module model/DescribeInputResponse
 * @version 2017-10-14
 */
class DescribeInputResponse {
    /**
     * Constructs a new <code>DescribeInputResponse</code>.
     * Placeholder documentation for DescribeInputResponse
     * @alias module:model/DescribeInputResponse
     */
    constructor() { 
        
        DescribeInputResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeInputResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeInputResponse} obj Optional instance to populate.
     * @return {module:model/DescribeInputResponse} The populated <code>DescribeInputResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeInputResponse();

            if (data.hasOwnProperty('Arn')) {
                obj['Arn'] = ApiClient.convertToType(data['Arn'], 'String');
            }
            if (data.hasOwnProperty('AttachedChannels')) {
                obj['AttachedChannels'] = ApiClient.convertToType(data['AttachedChannels'], Array);
            }
            if (data.hasOwnProperty('Destinations')) {
                obj['Destinations'] = ApiClient.convertToType(data['Destinations'], Array);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('InputClass')) {
                obj['InputClass'] = ApiClient.convertToType(data['InputClass'], InputClass);
            }
            if (data.hasOwnProperty('InputDevices')) {
                obj['InputDevices'] = ApiClient.convertToType(data['InputDevices'], Array);
            }
            if (data.hasOwnProperty('InputPartnerIds')) {
                obj['InputPartnerIds'] = ApiClient.convertToType(data['InputPartnerIds'], Array);
            }
            if (data.hasOwnProperty('InputSourceType')) {
                obj['InputSourceType'] = ApiClient.convertToType(data['InputSourceType'], InputSourceType);
            }
            if (data.hasOwnProperty('MediaConnectFlows')) {
                obj['MediaConnectFlows'] = ApiClient.convertToType(data['MediaConnectFlows'], Array);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('SecurityGroups')) {
                obj['SecurityGroups'] = ApiClient.convertToType(data['SecurityGroups'], Array);
            }
            if (data.hasOwnProperty('Sources')) {
                obj['Sources'] = ApiClient.convertToType(data['Sources'], Array);
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], InputState);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], InputType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeInputResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeInputResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Arn`
        if (data['Arn']) { // data not null
          String.validateJSON(data['Arn']);
        }
        // validate the optional field `AttachedChannels`
        if (data['AttachedChannels']) { // data not null
          Array.validateJSON(data['AttachedChannels']);
        }
        // validate the optional field `Destinations`
        if (data['Destinations']) { // data not null
          Array.validateJSON(data['Destinations']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `InputClass`
        if (data['InputClass']) { // data not null
          InputClass.validateJSON(data['InputClass']);
        }
        // validate the optional field `InputDevices`
        if (data['InputDevices']) { // data not null
          Array.validateJSON(data['InputDevices']);
        }
        // validate the optional field `InputPartnerIds`
        if (data['InputPartnerIds']) { // data not null
          Array.validateJSON(data['InputPartnerIds']);
        }
        // validate the optional field `InputSourceType`
        if (data['InputSourceType']) { // data not null
          InputSourceType.validateJSON(data['InputSourceType']);
        }
        // validate the optional field `MediaConnectFlows`
        if (data['MediaConnectFlows']) { // data not null
          Array.validateJSON(data['MediaConnectFlows']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `SecurityGroups`
        if (data['SecurityGroups']) { // data not null
          Array.validateJSON(data['SecurityGroups']);
        }
        // validate the optional field `Sources`
        if (data['Sources']) { // data not null
          Array.validateJSON(data['Sources']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          InputState.validateJSON(data['State']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          InputType.validateJSON(data['Type']);
        }

        return true;
    }


}



/**
 * @member {String} Arn
 */
DescribeInputResponse.prototype['Arn'] = undefined;

/**
 * @member {Array} AttachedChannels
 */
DescribeInputResponse.prototype['AttachedChannels'] = undefined;

/**
 * @member {Array} Destinations
 */
DescribeInputResponse.prototype['Destinations'] = undefined;

/**
 * @member {String} Id
 */
DescribeInputResponse.prototype['Id'] = undefined;

/**
 * @member {module:model/InputClass} InputClass
 */
DescribeInputResponse.prototype['InputClass'] = undefined;

/**
 * @member {Array} InputDevices
 */
DescribeInputResponse.prototype['InputDevices'] = undefined;

/**
 * @member {Array} InputPartnerIds
 */
DescribeInputResponse.prototype['InputPartnerIds'] = undefined;

/**
 * @member {module:model/InputSourceType} InputSourceType
 */
DescribeInputResponse.prototype['InputSourceType'] = undefined;

/**
 * @member {Array} MediaConnectFlows
 */
DescribeInputResponse.prototype['MediaConnectFlows'] = undefined;

/**
 * @member {String} Name
 */
DescribeInputResponse.prototype['Name'] = undefined;

/**
 * @member {String} RoleArn
 */
DescribeInputResponse.prototype['RoleArn'] = undefined;

/**
 * @member {Array} SecurityGroups
 */
DescribeInputResponse.prototype['SecurityGroups'] = undefined;

/**
 * @member {Array} Sources
 */
DescribeInputResponse.prototype['Sources'] = undefined;

/**
 * @member {module:model/InputState} State
 */
DescribeInputResponse.prototype['State'] = undefined;

/**
 * @member {Object} Tags
 */
DescribeInputResponse.prototype['Tags'] = undefined;

/**
 * @member {module:model/InputType} Type
 */
DescribeInputResponse.prototype['Type'] = undefined;






export default DescribeInputResponse;

