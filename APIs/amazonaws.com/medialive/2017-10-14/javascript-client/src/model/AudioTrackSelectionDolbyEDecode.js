/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AudioDolbyEDecode from './AudioDolbyEDecode';
import DolbyEProgramSelection from './DolbyEProgramSelection';

/**
 * The AudioTrackSelectionDolbyEDecode model module.
 * @module model/AudioTrackSelectionDolbyEDecode
 * @version 2017-10-14
 */
class AudioTrackSelectionDolbyEDecode {
    /**
     * Constructs a new <code>AudioTrackSelectionDolbyEDecode</code>.
     * @alias module:model/AudioTrackSelectionDolbyEDecode
     * @implements module:model/AudioDolbyEDecode
     * @param programSelection {module:model/DolbyEProgramSelection} 
     */
    constructor(programSelection) { 
        AudioDolbyEDecode.initialize(this, programSelection);
        AudioTrackSelectionDolbyEDecode.initialize(this, programSelection);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, programSelection) { 
        obj['ProgramSelection'] = programSelection;
    }

    /**
     * Constructs a <code>AudioTrackSelectionDolbyEDecode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioTrackSelectionDolbyEDecode} obj Optional instance to populate.
     * @return {module:model/AudioTrackSelectionDolbyEDecode} The populated <code>AudioTrackSelectionDolbyEDecode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioTrackSelectionDolbyEDecode();
            AudioDolbyEDecode.constructFromObject(data, obj);

            if (data.hasOwnProperty('ProgramSelection')) {
                obj['ProgramSelection'] = ApiClient.convertToType(data['ProgramSelection'], DolbyEProgramSelection);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioTrackSelectionDolbyEDecode</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioTrackSelectionDolbyEDecode</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AudioTrackSelectionDolbyEDecode.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ProgramSelection`
        if (data['ProgramSelection']) { // data not null
          DolbyEProgramSelection.validateJSON(data['ProgramSelection']);
        }

        return true;
    }


}

AudioTrackSelectionDolbyEDecode.RequiredProperties = ["ProgramSelection"];

/**
 * @member {module:model/DolbyEProgramSelection} ProgramSelection
 */
AudioTrackSelectionDolbyEDecode.prototype['ProgramSelection'] = undefined;


// Implement AudioDolbyEDecode interface:
/**
 * @member {module:model/DolbyEProgramSelection} ProgramSelection
 */
AudioDolbyEDecode.prototype['ProgramSelection'] = undefined;




export default AudioTrackSelectionDolbyEDecode;

