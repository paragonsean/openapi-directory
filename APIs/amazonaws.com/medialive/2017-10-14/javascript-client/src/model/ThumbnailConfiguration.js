/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ThumbnailState from './ThumbnailState';

/**
 * The ThumbnailConfiguration model module.
 * @module model/ThumbnailConfiguration
 * @version 2017-10-14
 */
class ThumbnailConfiguration {
    /**
     * Constructs a new <code>ThumbnailConfiguration</code>.
     * Thumbnail Configuration
     * @alias module:model/ThumbnailConfiguration
     * @param state {module:model/ThumbnailState} 
     */
    constructor(state) { 
        
        ThumbnailConfiguration.initialize(this, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, state) { 
        obj['State'] = state;
    }

    /**
     * Constructs a <code>ThumbnailConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ThumbnailConfiguration} obj Optional instance to populate.
     * @return {module:model/ThumbnailConfiguration} The populated <code>ThumbnailConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ThumbnailConfiguration();

            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], ThumbnailState);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ThumbnailConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ThumbnailConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ThumbnailConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          ThumbnailState.validateJSON(data['State']);
        }

        return true;
    }


}

ThumbnailConfiguration.RequiredProperties = ["State"];

/**
 * @member {module:model/ThumbnailState} State
 */
ThumbnailConfiguration.prototype['State'] = undefined;






export default ThumbnailConfiguration;

