/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Esam model module.
 * @module model/Esam
 * @version 2017-10-14
 */
class Esam {
    /**
     * Constructs a new <code>Esam</code>.
     * Esam
     * @alias module:model/Esam
     * @param acquisitionPointId {String} 
     * @param poisEndpoint {String} 
     */
    constructor(acquisitionPointId, poisEndpoint) { 
        
        Esam.initialize(this, acquisitionPointId, poisEndpoint);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, acquisitionPointId, poisEndpoint) { 
        obj['AcquisitionPointId'] = acquisitionPointId;
        obj['PoisEndpoint'] = poisEndpoint;
    }

    /**
     * Constructs a <code>Esam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Esam} obj Optional instance to populate.
     * @return {module:model/Esam} The populated <code>Esam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Esam();

            if (data.hasOwnProperty('AcquisitionPointId')) {
                obj['AcquisitionPointId'] = ApiClient.convertToType(data['AcquisitionPointId'], 'String');
            }
            if (data.hasOwnProperty('AdAvailOffset')) {
                obj['AdAvailOffset'] = ApiClient.convertToType(data['AdAvailOffset'], 'Number');
            }
            if (data.hasOwnProperty('PasswordParam')) {
                obj['PasswordParam'] = ApiClient.convertToType(data['PasswordParam'], 'String');
            }
            if (data.hasOwnProperty('PoisEndpoint')) {
                obj['PoisEndpoint'] = ApiClient.convertToType(data['PoisEndpoint'], 'String');
            }
            if (data.hasOwnProperty('Username')) {
                obj['Username'] = ApiClient.convertToType(data['Username'], 'String');
            }
            if (data.hasOwnProperty('ZoneIdentity')) {
                obj['ZoneIdentity'] = ApiClient.convertToType(data['ZoneIdentity'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Esam</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Esam</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Esam.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AcquisitionPointId`
        if (data['AcquisitionPointId']) { // data not null
          String.validateJSON(data['AcquisitionPointId']);
        }
        // validate the optional field `AdAvailOffset`
        if (data['AdAvailOffset']) { // data not null
          Number.validateJSON(data['AdAvailOffset']);
        }
        // validate the optional field `PasswordParam`
        if (data['PasswordParam']) { // data not null
          String.validateJSON(data['PasswordParam']);
        }
        // validate the optional field `PoisEndpoint`
        if (data['PoisEndpoint']) { // data not null
          String.validateJSON(data['PoisEndpoint']);
        }
        // validate the optional field `Username`
        if (data['Username']) { // data not null
          String.validateJSON(data['Username']);
        }
        // validate the optional field `ZoneIdentity`
        if (data['ZoneIdentity']) { // data not null
          String.validateJSON(data['ZoneIdentity']);
        }

        return true;
    }


}

Esam.RequiredProperties = ["AcquisitionPointId", "PoisEndpoint"];

/**
 * @member {String} AcquisitionPointId
 */
Esam.prototype['AcquisitionPointId'] = undefined;

/**
 * @member {Number} AdAvailOffset
 */
Esam.prototype['AdAvailOffset'] = undefined;

/**
 * @member {String} PasswordParam
 */
Esam.prototype['PasswordParam'] = undefined;

/**
 * @member {String} PoisEndpoint
 */
Esam.prototype['PoisEndpoint'] = undefined;

/**
 * @member {String} Username
 */
Esam.prototype['Username'] = undefined;

/**
 * @member {String} ZoneIdentity
 */
Esam.prototype['ZoneIdentity'] = undefined;






export default Esam;

