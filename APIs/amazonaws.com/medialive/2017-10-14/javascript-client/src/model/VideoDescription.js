/**
 * AWS Elemental MediaLive
 * API for AWS Elemental MediaLive
 *
 * The version of the OpenAPI document: 2017-10-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VideoDescriptionCodecSettings from './VideoDescriptionCodecSettings';
import VideoDescriptionRespondToAfd from './VideoDescriptionRespondToAfd';
import VideoDescriptionScalingBehavior from './VideoDescriptionScalingBehavior';

/**
 * The VideoDescription model module.
 * @module model/VideoDescription
 * @version 2017-10-14
 */
class VideoDescription {
    /**
     * Constructs a new <code>VideoDescription</code>.
     * Video settings for this stream.
     * @alias module:model/VideoDescription
     * @param name {String} 
     */
    constructor(name) { 
        
        VideoDescription.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>VideoDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoDescription} obj Optional instance to populate.
     * @return {module:model/VideoDescription} The populated <code>VideoDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoDescription();

            if (data.hasOwnProperty('CodecSettings')) {
                obj['CodecSettings'] = VideoDescriptionCodecSettings.constructFromObject(data['CodecSettings']);
            }
            if (data.hasOwnProperty('Height')) {
                obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('RespondToAfd')) {
                obj['RespondToAfd'] = ApiClient.convertToType(data['RespondToAfd'], VideoDescriptionRespondToAfd);
            }
            if (data.hasOwnProperty('ScalingBehavior')) {
                obj['ScalingBehavior'] = ApiClient.convertToType(data['ScalingBehavior'], VideoDescriptionScalingBehavior);
            }
            if (data.hasOwnProperty('Sharpness')) {
                obj['Sharpness'] = ApiClient.convertToType(data['Sharpness'], 'Number');
            }
            if (data.hasOwnProperty('Width')) {
                obj['Width'] = ApiClient.convertToType(data['Width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VideoDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CodecSettings`
        if (data['CodecSettings']) { // data not null
          VideoDescriptionCodecSettings.validateJSON(data['CodecSettings']);
        }
        // validate the optional field `Height`
        if (data['Height']) { // data not null
          Number.validateJSON(data['Height']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `RespondToAfd`
        if (data['RespondToAfd']) { // data not null
          VideoDescriptionRespondToAfd.validateJSON(data['RespondToAfd']);
        }
        // validate the optional field `ScalingBehavior`
        if (data['ScalingBehavior']) { // data not null
          VideoDescriptionScalingBehavior.validateJSON(data['ScalingBehavior']);
        }
        // validate the optional field `Sharpness`
        if (data['Sharpness']) { // data not null
          Number.validateJSON(data['Sharpness']);
        }
        // validate the optional field `Width`
        if (data['Width']) { // data not null
          Number.validateJSON(data['Width']);
        }

        return true;
    }


}

VideoDescription.RequiredProperties = ["Name"];

/**
 * @member {module:model/VideoDescriptionCodecSettings} CodecSettings
 */
VideoDescription.prototype['CodecSettings'] = undefined;

/**
 * @member {Number} Height
 */
VideoDescription.prototype['Height'] = undefined;

/**
 * @member {String} Name
 */
VideoDescription.prototype['Name'] = undefined;

/**
 * @member {module:model/VideoDescriptionRespondToAfd} RespondToAfd
 */
VideoDescription.prototype['RespondToAfd'] = undefined;

/**
 * @member {module:model/VideoDescriptionScalingBehavior} ScalingBehavior
 */
VideoDescription.prototype['ScalingBehavior'] = undefined;

/**
 * @member {Number} Sharpness
 */
VideoDescription.prototype['Sharpness'] = undefined;

/**
 * @member {Number} Width
 */
VideoDescription.prototype['Width'] = undefined;






export default VideoDescription;

