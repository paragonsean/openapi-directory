/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtectionGroupLimits_PatternTypeLimits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtectionGroupLimits_PatternTypeLimits::OAIProtectionGroupLimits_PatternTypeLimits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtectionGroupLimits_PatternTypeLimits::OAIProtectionGroupLimits_PatternTypeLimits() {
    this->initializeModel();
}

OAIProtectionGroupLimits_PatternTypeLimits::~OAIProtectionGroupLimits_PatternTypeLimits() {}

void OAIProtectionGroupLimits_PatternTypeLimits::initializeModel() {

    m_arbitrary_pattern_limits_isSet = false;
    m_arbitrary_pattern_limits_isValid = false;
}

void OAIProtectionGroupLimits_PatternTypeLimits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtectionGroupLimits_PatternTypeLimits::fromJsonObject(QJsonObject json) {

    m_arbitrary_pattern_limits_isValid = ::OpenAPI::fromJsonValue(m_arbitrary_pattern_limits, json[QString("ArbitraryPatternLimits")]);
    m_arbitrary_pattern_limits_isSet = !json[QString("ArbitraryPatternLimits")].isNull() && m_arbitrary_pattern_limits_isValid;
}

QString OAIProtectionGroupLimits_PatternTypeLimits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtectionGroupLimits_PatternTypeLimits::asJsonObject() const {
    QJsonObject obj;
    if (m_arbitrary_pattern_limits.isSet()) {
        obj.insert(QString("ArbitraryPatternLimits"), ::OpenAPI::toJsonValue(m_arbitrary_pattern_limits));
    }
    return obj;
}

OAIProtectionGroupPatternTypeLimits_ArbitraryPatternLimits OAIProtectionGroupLimits_PatternTypeLimits::getArbitraryPatternLimits() const {
    return m_arbitrary_pattern_limits;
}
void OAIProtectionGroupLimits_PatternTypeLimits::setArbitraryPatternLimits(const OAIProtectionGroupPatternTypeLimits_ArbitraryPatternLimits &arbitrary_pattern_limits) {
    m_arbitrary_pattern_limits = arbitrary_pattern_limits;
    m_arbitrary_pattern_limits_isSet = true;
}

bool OAIProtectionGroupLimits_PatternTypeLimits::is_arbitrary_pattern_limits_Set() const{
    return m_arbitrary_pattern_limits_isSet;
}

bool OAIProtectionGroupLimits_PatternTypeLimits::is_arbitrary_pattern_limits_Valid() const{
    return m_arbitrary_pattern_limits_isValid;
}

bool OAIProtectionGroupLimits_PatternTypeLimits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arbitrary_pattern_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtectionGroupLimits_PatternTypeLimits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arbitrary_pattern_limits_isValid && true;
}

} // namespace OpenAPI
