/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionLimits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionLimits::OAISubscriptionLimits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionLimits::OAISubscriptionLimits() {
    this->initializeModel();
}

OAISubscriptionLimits::~OAISubscriptionLimits() {}

void OAISubscriptionLimits::initializeModel() {

    m_protection_limits_isSet = false;
    m_protection_limits_isValid = false;

    m_protection_group_limits_isSet = false;
    m_protection_group_limits_isValid = false;
}

void OAISubscriptionLimits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionLimits::fromJsonObject(QJsonObject json) {

    m_protection_limits_isValid = ::OpenAPI::fromJsonValue(m_protection_limits, json[QString("ProtectionLimits")]);
    m_protection_limits_isSet = !json[QString("ProtectionLimits")].isNull() && m_protection_limits_isValid;

    m_protection_group_limits_isValid = ::OpenAPI::fromJsonValue(m_protection_group_limits, json[QString("ProtectionGroupLimits")]);
    m_protection_group_limits_isSet = !json[QString("ProtectionGroupLimits")].isNull() && m_protection_group_limits_isValid;
}

QString OAISubscriptionLimits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionLimits::asJsonObject() const {
    QJsonObject obj;
    if (m_protection_limits.isSet()) {
        obj.insert(QString("ProtectionLimits"), ::OpenAPI::toJsonValue(m_protection_limits));
    }
    if (m_protection_group_limits.isSet()) {
        obj.insert(QString("ProtectionGroupLimits"), ::OpenAPI::toJsonValue(m_protection_group_limits));
    }
    return obj;
}

OAISubscriptionLimits_ProtectionLimits OAISubscriptionLimits::getProtectionLimits() const {
    return m_protection_limits;
}
void OAISubscriptionLimits::setProtectionLimits(const OAISubscriptionLimits_ProtectionLimits &protection_limits) {
    m_protection_limits = protection_limits;
    m_protection_limits_isSet = true;
}

bool OAISubscriptionLimits::is_protection_limits_Set() const{
    return m_protection_limits_isSet;
}

bool OAISubscriptionLimits::is_protection_limits_Valid() const{
    return m_protection_limits_isValid;
}

OAISubscriptionLimits_ProtectionGroupLimits OAISubscriptionLimits::getProtectionGroupLimits() const {
    return m_protection_group_limits;
}
void OAISubscriptionLimits::setProtectionGroupLimits(const OAISubscriptionLimits_ProtectionGroupLimits &protection_group_limits) {
    m_protection_group_limits = protection_group_limits;
    m_protection_group_limits_isSet = true;
}

bool OAISubscriptionLimits::is_protection_group_limits_Set() const{
    return m_protection_group_limits_isSet;
}

bool OAISubscriptionLimits::is_protection_group_limits_Valid() const{
    return m_protection_group_limits_isValid;
}

bool OAISubscriptionLimits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_protection_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_protection_group_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionLimits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_protection_limits_isValid && m_protection_group_limits_isValid && true;
}

} // namespace OpenAPI
