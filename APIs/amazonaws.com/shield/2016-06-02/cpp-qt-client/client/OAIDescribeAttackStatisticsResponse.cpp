/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAttackStatisticsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAttackStatisticsResponse::OAIDescribeAttackStatisticsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAttackStatisticsResponse::OAIDescribeAttackStatisticsResponse() {
    this->initializeModel();
}

OAIDescribeAttackStatisticsResponse::~OAIDescribeAttackStatisticsResponse() {}

void OAIDescribeAttackStatisticsResponse::initializeModel() {

    m_time_range_isSet = false;
    m_time_range_isValid = false;

    m_data_items_isSet = false;
    m_data_items_isValid = false;
}

void OAIDescribeAttackStatisticsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAttackStatisticsResponse::fromJsonObject(QJsonObject json) {

    m_time_range_isValid = ::OpenAPI::fromJsonValue(m_time_range, json[QString("TimeRange")]);
    m_time_range_isSet = !json[QString("TimeRange")].isNull() && m_time_range_isValid;

    m_data_items_isValid = ::OpenAPI::fromJsonValue(m_data_items, json[QString("DataItems")]);
    m_data_items_isSet = !json[QString("DataItems")].isNull() && m_data_items_isValid;
}

QString OAIDescribeAttackStatisticsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAttackStatisticsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_time_range.isSet()) {
        obj.insert(QString("TimeRange"), ::OpenAPI::toJsonValue(m_time_range));
    }
    if (m_data_items.isSet()) {
        obj.insert(QString("DataItems"), ::OpenAPI::toJsonValue(m_data_items));
    }
    return obj;
}

OAIDescribeAttackStatisticsResponse_TimeRange OAIDescribeAttackStatisticsResponse::getTimeRange() const {
    return m_time_range;
}
void OAIDescribeAttackStatisticsResponse::setTimeRange(const OAIDescribeAttackStatisticsResponse_TimeRange &time_range) {
    m_time_range = time_range;
    m_time_range_isSet = true;
}

bool OAIDescribeAttackStatisticsResponse::is_time_range_Set() const{
    return m_time_range_isSet;
}

bool OAIDescribeAttackStatisticsResponse::is_time_range_Valid() const{
    return m_time_range_isValid;
}

QList OAIDescribeAttackStatisticsResponse::getDataItems() const {
    return m_data_items;
}
void OAIDescribeAttackStatisticsResponse::setDataItems(const QList &data_items) {
    m_data_items = data_items;
    m_data_items_isSet = true;
}

bool OAIDescribeAttackStatisticsResponse::is_data_items_Set() const{
    return m_data_items_isSet;
}

bool OAIDescribeAttackStatisticsResponse::is_data_items_Valid() const{
    return m_data_items_isValid;
}

bool OAIDescribeAttackStatisticsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_time_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_items.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAttackStatisticsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_time_range_isValid && m_data_items_isValid && true;
}

} // namespace OpenAPI
