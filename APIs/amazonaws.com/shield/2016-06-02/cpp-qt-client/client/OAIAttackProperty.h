/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttackProperty.h
 *
 * Details of a Shield event. This is provided as part of an &lt;a&gt;AttackDetail&lt;/a&gt;.
 */

#ifndef OAIAttackProperty_H
#define OAIAttackProperty_H

#include <QJsonObject>

#include "OAIAttackLayer.h"
#include "OAIAttackPropertyIdentifier.h"
#include "OAIUnit.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAttackProperty : public OAIObject {
public:
    OAIAttackProperty();
    OAIAttackProperty(QString json);
    ~OAIAttackProperty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAttackLayer getAttackLayer() const;
    void setAttackLayer(const OAIAttackLayer &attack_layer);
    bool is_attack_layer_Set() const;
    bool is_attack_layer_Valid() const;

    OAIAttackPropertyIdentifier getAttackPropertyIdentifier() const;
    void setAttackPropertyIdentifier(const OAIAttackPropertyIdentifier &attack_property_identifier);
    bool is_attack_property_identifier_Set() const;
    bool is_attack_property_identifier_Valid() const;

    QList getTopContributors() const;
    void setTopContributors(const QList &top_contributors);
    bool is_top_contributors_Set() const;
    bool is_top_contributors_Valid() const;

    OAIUnit getUnit() const;
    void setUnit(const OAIUnit &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAttackLayer m_attack_layer;
    bool m_attack_layer_isSet;
    bool m_attack_layer_isValid;

    OAIAttackPropertyIdentifier m_attack_property_identifier;
    bool m_attack_property_identifier_isSet;
    bool m_attack_property_identifier_isValid;

    QList m_top_contributors;
    bool m_top_contributors_isSet;
    bool m_top_contributors_isValid;

    OAIUnit m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttackProperty)

#endif // OAIAttackProperty_H
