/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtectionGroupLimits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtectionGroupLimits::OAIProtectionGroupLimits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtectionGroupLimits::OAIProtectionGroupLimits() {
    this->initializeModel();
}

OAIProtectionGroupLimits::~OAIProtectionGroupLimits() {}

void OAIProtectionGroupLimits::initializeModel() {

    m_max_protection_groups_isSet = false;
    m_max_protection_groups_isValid = false;

    m_pattern_type_limits_isSet = false;
    m_pattern_type_limits_isValid = false;
}

void OAIProtectionGroupLimits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtectionGroupLimits::fromJsonObject(QJsonObject json) {

    m_max_protection_groups_isValid = ::OpenAPI::fromJsonValue(m_max_protection_groups, json[QString("MaxProtectionGroups")]);
    m_max_protection_groups_isSet = !json[QString("MaxProtectionGroups")].isNull() && m_max_protection_groups_isValid;

    m_pattern_type_limits_isValid = ::OpenAPI::fromJsonValue(m_pattern_type_limits, json[QString("PatternTypeLimits")]);
    m_pattern_type_limits_isSet = !json[QString("PatternTypeLimits")].isNull() && m_pattern_type_limits_isValid;
}

QString OAIProtectionGroupLimits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtectionGroupLimits::asJsonObject() const {
    QJsonObject obj;
    if (m_max_protection_groups_isSet) {
        obj.insert(QString("MaxProtectionGroups"), ::OpenAPI::toJsonValue(m_max_protection_groups));
    }
    if (m_pattern_type_limits.isSet()) {
        obj.insert(QString("PatternTypeLimits"), ::OpenAPI::toJsonValue(m_pattern_type_limits));
    }
    return obj;
}

qint32 OAIProtectionGroupLimits::getMaxProtectionGroups() const {
    return m_max_protection_groups;
}
void OAIProtectionGroupLimits::setMaxProtectionGroups(const qint32 &max_protection_groups) {
    m_max_protection_groups = max_protection_groups;
    m_max_protection_groups_isSet = true;
}

bool OAIProtectionGroupLimits::is_max_protection_groups_Set() const{
    return m_max_protection_groups_isSet;
}

bool OAIProtectionGroupLimits::is_max_protection_groups_Valid() const{
    return m_max_protection_groups_isValid;
}

OAIProtectionGroupLimits_PatternTypeLimits OAIProtectionGroupLimits::getPatternTypeLimits() const {
    return m_pattern_type_limits;
}
void OAIProtectionGroupLimits::setPatternTypeLimits(const OAIProtectionGroupLimits_PatternTypeLimits &pattern_type_limits) {
    m_pattern_type_limits = pattern_type_limits;
    m_pattern_type_limits_isSet = true;
}

bool OAIProtectionGroupLimits::is_pattern_type_limits_Set() const{
    return m_pattern_type_limits_isSet;
}

bool OAIProtectionGroupLimits::is_pattern_type_limits_Valid() const{
    return m_pattern_type_limits_isValid;
}

bool OAIProtectionGroupLimits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_protection_groups_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pattern_type_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtectionGroupLimits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_max_protection_groups_isValid && m_pattern_type_limits_isValid && true;
}

} // namespace OpenAPI
