/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeSubscriptionResponse_Subscription.h
 *
 * 
 */

#ifndef OAIDescribeSubscriptionResponse_Subscription_H
#define OAIDescribeSubscriptionResponse_Subscription_H

#include <QJsonObject>

#include "OAIAutoRenew.h"
#include "OAIProactiveEngagementStatus.h"
#include "OAISubscription_SubscriptionLimits.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubscription_SubscriptionLimits;

class OAIDescribeSubscriptionResponse_Subscription : public OAIObject {
public:
    OAIDescribeSubscriptionResponse_Subscription();
    OAIDescribeSubscriptionResponse_Subscription(QString json);
    ~OAIDescribeSubscriptionResponse_Subscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    qint32 getTimeCommitmentInSeconds() const;
    void setTimeCommitmentInSeconds(const qint32 &time_commitment_in_seconds);
    bool is_time_commitment_in_seconds_Set() const;
    bool is_time_commitment_in_seconds_Valid() const;

    OAIAutoRenew getAutoRenew() const;
    void setAutoRenew(const OAIAutoRenew &auto_renew);
    bool is_auto_renew_Set() const;
    bool is_auto_renew_Valid() const;

    QList getLimits() const;
    void setLimits(const QList &limits);
    bool is_limits_Set() const;
    bool is_limits_Valid() const;

    OAIProactiveEngagementStatus getProactiveEngagementStatus() const;
    void setProactiveEngagementStatus(const OAIProactiveEngagementStatus &proactive_engagement_status);
    bool is_proactive_engagement_status_Set() const;
    bool is_proactive_engagement_status_Valid() const;

    OAISubscription_SubscriptionLimits getSubscriptionLimits() const;
    void setSubscriptionLimits(const OAISubscription_SubscriptionLimits &subscription_limits);
    bool is_subscription_limits_Set() const;
    bool is_subscription_limits_Valid() const;

    QString getSubscriptionArn() const;
    void setSubscriptionArn(const QString &subscription_arn);
    bool is_subscription_arn_Set() const;
    bool is_subscription_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    qint32 m_time_commitment_in_seconds;
    bool m_time_commitment_in_seconds_isSet;
    bool m_time_commitment_in_seconds_isValid;

    OAIAutoRenew m_auto_renew;
    bool m_auto_renew_isSet;
    bool m_auto_renew_isValid;

    QList m_limits;
    bool m_limits_isSet;
    bool m_limits_isValid;

    OAIProactiveEngagementStatus m_proactive_engagement_status;
    bool m_proactive_engagement_status_isSet;
    bool m_proactive_engagement_status_isValid;

    OAISubscription_SubscriptionLimits m_subscription_limits;
    bool m_subscription_limits_isSet;
    bool m_subscription_limits_isValid;

    QString m_subscription_arn;
    bool m_subscription_arn_isSet;
    bool m_subscription_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeSubscriptionResponse_Subscription)

#endif // OAIDescribeSubscriptionResponse_Subscription_H
