/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProtectionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProtectionResponse::OAICreateProtectionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProtectionResponse::OAICreateProtectionResponse() {
    this->initializeModel();
}

OAICreateProtectionResponse::~OAICreateProtectionResponse() {}

void OAICreateProtectionResponse::initializeModel() {

    m_protection_id_isSet = false;
    m_protection_id_isValid = false;
}

void OAICreateProtectionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProtectionResponse::fromJsonObject(QJsonObject json) {

    m_protection_id_isValid = ::OpenAPI::fromJsonValue(m_protection_id, json[QString("ProtectionId")]);
    m_protection_id_isSet = !json[QString("ProtectionId")].isNull() && m_protection_id_isValid;
}

QString OAICreateProtectionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProtectionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_protection_id_isSet) {
        obj.insert(QString("ProtectionId"), ::OpenAPI::toJsonValue(m_protection_id));
    }
    return obj;
}

QString OAICreateProtectionResponse::getProtectionId() const {
    return m_protection_id;
}
void OAICreateProtectionResponse::setProtectionId(const QString &protection_id) {
    m_protection_id = protection_id;
    m_protection_id_isSet = true;
}

bool OAICreateProtectionResponse::is_protection_id_Set() const{
    return m_protection_id_isSet;
}

bool OAICreateProtectionResponse::is_protection_id_Valid() const{
    return m_protection_id_isValid;
}

bool OAICreateProtectionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_protection_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProtectionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
