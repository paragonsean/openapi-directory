/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateDRTRoleRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateDRTRoleRequest::OAIAssociateDRTRoleRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateDRTRoleRequest::OAIAssociateDRTRoleRequest() {
    this->initializeModel();
}

OAIAssociateDRTRoleRequest::~OAIAssociateDRTRoleRequest() {}

void OAIAssociateDRTRoleRequest::initializeModel() {

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;
}

void OAIAssociateDRTRoleRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateDRTRoleRequest::fromJsonObject(QJsonObject json) {

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;
}

QString OAIAssociateDRTRoleRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateDRTRoleRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    return obj;
}

QString OAIAssociateDRTRoleRequest::getRoleArn() const {
    return m_role_arn;
}
void OAIAssociateDRTRoleRequest::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIAssociateDRTRoleRequest::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIAssociateDRTRoleRequest::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

bool OAIAssociateDRTRoleRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateDRTRoleRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_role_arn_isValid && true;
}

} // namespace OpenAPI
