/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProtectionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProtectionRequest::OAICreateProtectionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProtectionRequest::OAICreateProtectionRequest() {
    this->initializeModel();
}

OAICreateProtectionRequest::~OAICreateProtectionRequest() {}

void OAICreateProtectionRequest::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateProtectionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProtectionRequest::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("ResourceArn")]);
    m_resource_arn_isSet = !json[QString("ResourceArn")].isNull() && m_resource_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateProtectionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProtectionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_resource_arn_isSet) {
        obj.insert(QString("ResourceArn"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateProtectionRequest::getName() const {
    return m_name;
}
void OAICreateProtectionRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateProtectionRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateProtectionRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateProtectionRequest::getResourceArn() const {
    return m_resource_arn;
}
void OAICreateProtectionRequest::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAICreateProtectionRequest::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAICreateProtectionRequest::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

QList OAICreateProtectionRequest::getTags() const {
    return m_tags;
}
void OAICreateProtectionRequest::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateProtectionRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateProtectionRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateProtectionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProtectionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_resource_arn_isValid && true;
}

} // namespace OpenAPI
