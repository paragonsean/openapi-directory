/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeProtectionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeProtectionResponse::OAIDescribeProtectionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeProtectionResponse::OAIDescribeProtectionResponse() {
    this->initializeModel();
}

OAIDescribeProtectionResponse::~OAIDescribeProtectionResponse() {}

void OAIDescribeProtectionResponse::initializeModel() {

    m_protection_isSet = false;
    m_protection_isValid = false;
}

void OAIDescribeProtectionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeProtectionResponse::fromJsonObject(QJsonObject json) {

    m_protection_isValid = ::OpenAPI::fromJsonValue(m_protection, json[QString("Protection")]);
    m_protection_isSet = !json[QString("Protection")].isNull() && m_protection_isValid;
}

QString OAIDescribeProtectionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeProtectionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_protection.isSet()) {
        obj.insert(QString("Protection"), ::OpenAPI::toJsonValue(m_protection));
    }
    return obj;
}

OAIDescribeProtectionResponse_Protection OAIDescribeProtectionResponse::getProtection() const {
    return m_protection;
}
void OAIDescribeProtectionResponse::setProtection(const OAIDescribeProtectionResponse_Protection &protection) {
    m_protection = protection;
    m_protection_isSet = true;
}

bool OAIDescribeProtectionResponse::is_protection_Set() const{
    return m_protection_isSet;
}

bool OAIDescribeProtectionResponse::is_protection_Valid() const{
    return m_protection_isValid;
}

bool OAIDescribeProtectionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_protection.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeProtectionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
