/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtectionGroupPatternTypeLimits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtectionGroupPatternTypeLimits::OAIProtectionGroupPatternTypeLimits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtectionGroupPatternTypeLimits::OAIProtectionGroupPatternTypeLimits() {
    this->initializeModel();
}

OAIProtectionGroupPatternTypeLimits::~OAIProtectionGroupPatternTypeLimits() {}

void OAIProtectionGroupPatternTypeLimits::initializeModel() {

    m_arbitrary_pattern_limits_isSet = false;
    m_arbitrary_pattern_limits_isValid = false;
}

void OAIProtectionGroupPatternTypeLimits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtectionGroupPatternTypeLimits::fromJsonObject(QJsonObject json) {

    m_arbitrary_pattern_limits_isValid = ::OpenAPI::fromJsonValue(m_arbitrary_pattern_limits, json[QString("ArbitraryPatternLimits")]);
    m_arbitrary_pattern_limits_isSet = !json[QString("ArbitraryPatternLimits")].isNull() && m_arbitrary_pattern_limits_isValid;
}

QString OAIProtectionGroupPatternTypeLimits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtectionGroupPatternTypeLimits::asJsonObject() const {
    QJsonObject obj;
    if (m_arbitrary_pattern_limits.isSet()) {
        obj.insert(QString("ArbitraryPatternLimits"), ::OpenAPI::toJsonValue(m_arbitrary_pattern_limits));
    }
    return obj;
}

OAIProtectionGroupPatternTypeLimits_ArbitraryPatternLimits OAIProtectionGroupPatternTypeLimits::getArbitraryPatternLimits() const {
    return m_arbitrary_pattern_limits;
}
void OAIProtectionGroupPatternTypeLimits::setArbitraryPatternLimits(const OAIProtectionGroupPatternTypeLimits_ArbitraryPatternLimits &arbitrary_pattern_limits) {
    m_arbitrary_pattern_limits = arbitrary_pattern_limits;
    m_arbitrary_pattern_limits_isSet = true;
}

bool OAIProtectionGroupPatternTypeLimits::is_arbitrary_pattern_limits_Set() const{
    return m_arbitrary_pattern_limits_isSet;
}

bool OAIProtectionGroupPatternTypeLimits::is_arbitrary_pattern_limits_Valid() const{
    return m_arbitrary_pattern_limits_isValid;
}

bool OAIProtectionGroupPatternTypeLimits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arbitrary_pattern_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtectionGroupPatternTypeLimits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arbitrary_pattern_limits_isValid && true;
}

} // namespace OpenAPI
