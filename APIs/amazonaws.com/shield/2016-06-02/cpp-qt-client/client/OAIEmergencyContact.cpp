/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmergencyContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmergencyContact::OAIEmergencyContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmergencyContact::OAIEmergencyContact() {
    this->initializeModel();
}

OAIEmergencyContact::~OAIEmergencyContact() {}

void OAIEmergencyContact::initializeModel() {

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_contact_notes_isSet = false;
    m_contact_notes_isValid = false;
}

void OAIEmergencyContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmergencyContact::fromJsonObject(QJsonObject json) {

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("EmailAddress")]);
    m_email_address_isSet = !json[QString("EmailAddress")].isNull() && m_email_address_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_contact_notes_isValid = ::OpenAPI::fromJsonValue(m_contact_notes, json[QString("ContactNotes")]);
    m_contact_notes_isSet = !json[QString("ContactNotes")].isNull() && m_contact_notes_isValid;
}

QString OAIEmergencyContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmergencyContact::asJsonObject() const {
    QJsonObject obj;
    if (m_email_address_isSet) {
        obj.insert(QString("EmailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_contact_notes_isSet) {
        obj.insert(QString("ContactNotes"), ::OpenAPI::toJsonValue(m_contact_notes));
    }
    return obj;
}

QString OAIEmergencyContact::getEmailAddress() const {
    return m_email_address;
}
void OAIEmergencyContact::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIEmergencyContact::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIEmergencyContact::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIEmergencyContact::getPhoneNumber() const {
    return m_phone_number;
}
void OAIEmergencyContact::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIEmergencyContact::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIEmergencyContact::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIEmergencyContact::getContactNotes() const {
    return m_contact_notes;
}
void OAIEmergencyContact::setContactNotes(const QString &contact_notes) {
    m_contact_notes = contact_notes;
    m_contact_notes_isSet = true;
}

bool OAIEmergencyContact::is_contact_notes_Set() const{
    return m_contact_notes_isSet;
}

bool OAIEmergencyContact::is_contact_notes_Valid() const{
    return m_contact_notes_isValid;
}

bool OAIEmergencyContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_notes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmergencyContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_address_isValid && true;
}

} // namespace OpenAPI
