/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubResourceSummary.h
 *
 * The attack information for the specified SubResource.
 */

#ifndef OAISubResourceSummary_H
#define OAISubResourceSummary_H

#include <QJsonObject>

#include "OAISubResourceType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISubResourceSummary : public OAIObject {
public:
    OAISubResourceSummary();
    OAISubResourceSummary(QString json);
    ~OAISubResourceSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISubResourceType getType() const;
    void setType(const OAISubResourceType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList getAttackVectors() const;
    void setAttackVectors(const QList &attack_vectors);
    bool is_attack_vectors_Set() const;
    bool is_attack_vectors_Valid() const;

    QList getCounters() const;
    void setCounters(const QList &counters);
    bool is_counters_Set() const;
    bool is_counters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISubResourceType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList m_attack_vectors;
    bool m_attack_vectors_isSet;
    bool m_attack_vectors_isValid;

    QList m_counters;
    bool m_counters_isSet;
    bool m_counters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubResourceSummary)

#endif // OAISubResourceSummary_H
