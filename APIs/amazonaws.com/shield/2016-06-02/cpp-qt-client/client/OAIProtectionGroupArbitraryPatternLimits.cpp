/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtectionGroupArbitraryPatternLimits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtectionGroupArbitraryPatternLimits::OAIProtectionGroupArbitraryPatternLimits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtectionGroupArbitraryPatternLimits::OAIProtectionGroupArbitraryPatternLimits() {
    this->initializeModel();
}

OAIProtectionGroupArbitraryPatternLimits::~OAIProtectionGroupArbitraryPatternLimits() {}

void OAIProtectionGroupArbitraryPatternLimits::initializeModel() {

    m_max_members_isSet = false;
    m_max_members_isValid = false;
}

void OAIProtectionGroupArbitraryPatternLimits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProtectionGroupArbitraryPatternLimits::fromJsonObject(QJsonObject json) {

    m_max_members_isValid = ::OpenAPI::fromJsonValue(m_max_members, json[QString("MaxMembers")]);
    m_max_members_isSet = !json[QString("MaxMembers")].isNull() && m_max_members_isValid;
}

QString OAIProtectionGroupArbitraryPatternLimits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProtectionGroupArbitraryPatternLimits::asJsonObject() const {
    QJsonObject obj;
    if (m_max_members_isSet) {
        obj.insert(QString("MaxMembers"), ::OpenAPI::toJsonValue(m_max_members));
    }
    return obj;
}

qint32 OAIProtectionGroupArbitraryPatternLimits::getMaxMembers() const {
    return m_max_members;
}
void OAIProtectionGroupArbitraryPatternLimits::setMaxMembers(const qint32 &max_members) {
    m_max_members = max_members;
    m_max_members_isSet = true;
}

bool OAIProtectionGroupArbitraryPatternLimits::is_max_members_Set() const{
    return m_max_members_isSet;
}

bool OAIProtectionGroupArbitraryPatternLimits::is_max_members_Valid() const{
    return m_max_members_isValid;
}

bool OAIProtectionGroupArbitraryPatternLimits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_members_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProtectionGroupArbitraryPatternLimits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_max_members_isValid && true;
}

} // namespace OpenAPI
