/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateProactiveEngagementDetailsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateProactiveEngagementDetailsRequest::OAIAssociateProactiveEngagementDetailsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateProactiveEngagementDetailsRequest::OAIAssociateProactiveEngagementDetailsRequest() {
    this->initializeModel();
}

OAIAssociateProactiveEngagementDetailsRequest::~OAIAssociateProactiveEngagementDetailsRequest() {}

void OAIAssociateProactiveEngagementDetailsRequest::initializeModel() {

    m_emergency_contact_list_isSet = false;
    m_emergency_contact_list_isValid = false;
}

void OAIAssociateProactiveEngagementDetailsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateProactiveEngagementDetailsRequest::fromJsonObject(QJsonObject json) {

    m_emergency_contact_list_isValid = ::OpenAPI::fromJsonValue(m_emergency_contact_list, json[QString("EmergencyContactList")]);
    m_emergency_contact_list_isSet = !json[QString("EmergencyContactList")].isNull() && m_emergency_contact_list_isValid;
}

QString OAIAssociateProactiveEngagementDetailsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateProactiveEngagementDetailsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_emergency_contact_list.isSet()) {
        obj.insert(QString("EmergencyContactList"), ::OpenAPI::toJsonValue(m_emergency_contact_list));
    }
    return obj;
}

QList OAIAssociateProactiveEngagementDetailsRequest::getEmergencyContactList() const {
    return m_emergency_contact_list;
}
void OAIAssociateProactiveEngagementDetailsRequest::setEmergencyContactList(const QList &emergency_contact_list) {
    m_emergency_contact_list = emergency_contact_list;
    m_emergency_contact_list_isSet = true;
}

bool OAIAssociateProactiveEngagementDetailsRequest::is_emergency_contact_list_Set() const{
    return m_emergency_contact_list_isSet;
}

bool OAIAssociateProactiveEngagementDetailsRequest::is_emergency_contact_list_Valid() const{
    return m_emergency_contact_list_isValid;
}

bool OAIAssociateProactiveEngagementDetailsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_emergency_contact_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateProactiveEngagementDetailsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_emergency_contact_list_isValid && true;
}

} // namespace OpenAPI
