/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProtectionGroupAggregation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProtectionGroupAggregation::OAIProtectionGroupAggregation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProtectionGroupAggregation::OAIProtectionGroupAggregation() {
    this->initializeModel();
}

OAIProtectionGroupAggregation::~OAIProtectionGroupAggregation() {}

void OAIProtectionGroupAggregation::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProtectionGroupAggregation::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProtectionGroupAggregation::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SUM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProtectionGroupAggregation::SUM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MEAN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProtectionGroupAggregation::MEAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAX", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProtectionGroupAggregation::MAX;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProtectionGroupAggregation::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProtectionGroupAggregation::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProtectionGroupAggregation::SUM:
            val = "SUM";
            break;
        case eOAIProtectionGroupAggregation::MEAN:
            val = "MEAN";
            break;
        case eOAIProtectionGroupAggregation::MAX:
            val = "MAX";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProtectionGroupAggregation::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProtectionGroupAggregation::eOAIProtectionGroupAggregation OAIProtectionGroupAggregation::getValue() const {
    return m_value;
}

void OAIProtectionGroupAggregation::setValue(const OAIProtectionGroupAggregation::eOAIProtectionGroupAggregation& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProtectionGroupAggregation::isSet() const {
    
    return m_value_isSet;
}

bool OAIProtectionGroupAggregation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
