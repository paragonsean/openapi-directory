/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttackVolume_RequestsPerSecond.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttackVolume_RequestsPerSecond::OAIAttackVolume_RequestsPerSecond(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttackVolume_RequestsPerSecond::OAIAttackVolume_RequestsPerSecond() {
    this->initializeModel();
}

OAIAttackVolume_RequestsPerSecond::~OAIAttackVolume_RequestsPerSecond() {}

void OAIAttackVolume_RequestsPerSecond::initializeModel() {

    m_max_isSet = false;
    m_max_isValid = false;
}

void OAIAttackVolume_RequestsPerSecond::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttackVolume_RequestsPerSecond::fromJsonObject(QJsonObject json) {

    m_max_isValid = ::OpenAPI::fromJsonValue(m_max, json[QString("Max")]);
    m_max_isSet = !json[QString("Max")].isNull() && m_max_isValid;
}

QString OAIAttackVolume_RequestsPerSecond::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttackVolume_RequestsPerSecond::asJsonObject() const {
    QJsonObject obj;
    if (m_max_isSet) {
        obj.insert(QString("Max"), ::OpenAPI::toJsonValue(m_max));
    }
    return obj;
}

double OAIAttackVolume_RequestsPerSecond::getMax() const {
    return m_max;
}
void OAIAttackVolume_RequestsPerSecond::setMax(const double &max) {
    m_max = max;
    m_max_isSet = true;
}

bool OAIAttackVolume_RequestsPerSecond::is_max_Set() const{
    return m_max_isSet;
}

bool OAIAttackVolume_RequestsPerSecond::is_max_Valid() const{
    return m_max_isValid;
}

bool OAIAttackVolume_RequestsPerSecond::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttackVolume_RequestsPerSecond::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_max_isValid && true;
}

} // namespace OpenAPI
