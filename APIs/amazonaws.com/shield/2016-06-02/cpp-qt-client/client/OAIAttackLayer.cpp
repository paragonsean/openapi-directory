/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttackLayer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttackLayer::OAIAttackLayer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttackLayer::OAIAttackLayer() {
    this->initializeModel();
}

OAIAttackLayer::~OAIAttackLayer() {}

void OAIAttackLayer::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAttackLayer::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAttackLayer::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NETWORK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAttackLayer::NETWORK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APPLICATION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAttackLayer::APPLICATION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAttackLayer::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAttackLayer::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAttackLayer::NETWORK:
            val = "NETWORK";
            break;
        case eOAIAttackLayer::APPLICATION:
            val = "APPLICATION";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAttackLayer::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAttackLayer::eOAIAttackLayer OAIAttackLayer::getValue() const {
    return m_value;
}

void OAIAttackLayer::setValue(const OAIAttackLayer::eOAIAttackLayer& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAttackLayer::isSet() const {
    
    return m_value_isSet;
}

bool OAIAttackLayer::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
