/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListProtectionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListProtectionsResponse::OAIListProtectionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListProtectionsResponse::OAIListProtectionsResponse() {
    this->initializeModel();
}

OAIListProtectionsResponse::~OAIListProtectionsResponse() {}

void OAIListProtectionsResponse::initializeModel() {

    m_protections_isSet = false;
    m_protections_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListProtectionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListProtectionsResponse::fromJsonObject(QJsonObject json) {

    m_protections_isValid = ::OpenAPI::fromJsonValue(m_protections, json[QString("Protections")]);
    m_protections_isSet = !json[QString("Protections")].isNull() && m_protections_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListProtectionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListProtectionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_protections.isSet()) {
        obj.insert(QString("Protections"), ::OpenAPI::toJsonValue(m_protections));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListProtectionsResponse::getProtections() const {
    return m_protections;
}
void OAIListProtectionsResponse::setProtections(const QList &protections) {
    m_protections = protections;
    m_protections_isSet = true;
}

bool OAIListProtectionsResponse::is_protections_Set() const{
    return m_protections_isSet;
}

bool OAIListProtectionsResponse::is_protections_Valid() const{
    return m_protections_isValid;
}

QString OAIListProtectionsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListProtectionsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListProtectionsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListProtectionsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListProtectionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_protections.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListProtectionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
