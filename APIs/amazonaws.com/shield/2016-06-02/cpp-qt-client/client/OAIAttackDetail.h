/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttackDetail.h
 *
 * The details of a DDoS attack.
 */

#ifndef OAIAttackDetail_H
#define OAIAttackDetail_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAttackDetail : public OAIObject {
public:
    OAIAttackDetail();
    OAIAttackDetail(QString json);
    ~OAIAttackDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttackId() const;
    void setAttackId(const QString &attack_id);
    bool is_attack_id_Set() const;
    bool is_attack_id_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    QList getSubResources() const;
    void setSubResources(const QList &sub_resources);
    bool is_sub_resources_Set() const;
    bool is_sub_resources_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList getAttackCounters() const;
    void setAttackCounters(const QList &attack_counters);
    bool is_attack_counters_Set() const;
    bool is_attack_counters_Valid() const;

    QList getAttackProperties() const;
    void setAttackProperties(const QList &attack_properties);
    bool is_attack_properties_Set() const;
    bool is_attack_properties_Valid() const;

    QList getMitigations() const;
    void setMitigations(const QList &mitigations);
    bool is_mitigations_Set() const;
    bool is_mitigations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attack_id;
    bool m_attack_id_isSet;
    bool m_attack_id_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    QList m_sub_resources;
    bool m_sub_resources_isSet;
    bool m_sub_resources_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList m_attack_counters;
    bool m_attack_counters_isSet;
    bool m_attack_counters_isValid;

    QList m_attack_properties;
    bool m_attack_properties_isSet;
    bool m_attack_properties_isValid;

    QList m_mitigations;
    bool m_mitigations_isSet;
    bool m_mitigations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttackDetail)

#endif // OAIAttackDetail_H
