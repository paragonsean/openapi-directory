/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSubscriptionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSubscriptionRequest::OAIUpdateSubscriptionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSubscriptionRequest::OAIUpdateSubscriptionRequest() {
    this->initializeModel();
}

OAIUpdateSubscriptionRequest::~OAIUpdateSubscriptionRequest() {}

void OAIUpdateSubscriptionRequest::initializeModel() {

    m_auto_renew_isSet = false;
    m_auto_renew_isValid = false;
}

void OAIUpdateSubscriptionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSubscriptionRequest::fromJsonObject(QJsonObject json) {

    m_auto_renew_isValid = ::OpenAPI::fromJsonValue(m_auto_renew, json[QString("AutoRenew")]);
    m_auto_renew_isSet = !json[QString("AutoRenew")].isNull() && m_auto_renew_isValid;
}

QString OAIUpdateSubscriptionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSubscriptionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_renew.isSet()) {
        obj.insert(QString("AutoRenew"), ::OpenAPI::toJsonValue(m_auto_renew));
    }
    return obj;
}

OAIAutoRenew OAIUpdateSubscriptionRequest::getAutoRenew() const {
    return m_auto_renew;
}
void OAIUpdateSubscriptionRequest::setAutoRenew(const OAIAutoRenew &auto_renew) {
    m_auto_renew = auto_renew;
    m_auto_renew_isSet = true;
}

bool OAIUpdateSubscriptionRequest::is_auto_renew_Set() const{
    return m_auto_renew_isSet;
}

bool OAIUpdateSubscriptionRequest::is_auto_renew_Valid() const{
    return m_auto_renew_isValid;
}

bool OAIUpdateSubscriptionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_renew.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSubscriptionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
