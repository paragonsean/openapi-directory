/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAttacksRequest_EndTime.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAttacksRequest_EndTime::OAIListAttacksRequest_EndTime(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAttacksRequest_EndTime::OAIListAttacksRequest_EndTime() {
    this->initializeModel();
}

OAIListAttacksRequest_EndTime::~OAIListAttacksRequest_EndTime() {}

void OAIListAttacksRequest_EndTime::initializeModel() {

    m_from_inclusive_isSet = false;
    m_from_inclusive_isValid = false;

    m_to_exclusive_isSet = false;
    m_to_exclusive_isValid = false;
}

void OAIListAttacksRequest_EndTime::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAttacksRequest_EndTime::fromJsonObject(QJsonObject json) {

    m_from_inclusive_isValid = ::OpenAPI::fromJsonValue(m_from_inclusive, json[QString("FromInclusive")]);
    m_from_inclusive_isSet = !json[QString("FromInclusive")].isNull() && m_from_inclusive_isValid;

    m_to_exclusive_isValid = ::OpenAPI::fromJsonValue(m_to_exclusive, json[QString("ToExclusive")]);
    m_to_exclusive_isSet = !json[QString("ToExclusive")].isNull() && m_to_exclusive_isValid;
}

QString OAIListAttacksRequest_EndTime::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAttacksRequest_EndTime::asJsonObject() const {
    QJsonObject obj;
    if (m_from_inclusive_isSet) {
        obj.insert(QString("FromInclusive"), ::OpenAPI::toJsonValue(m_from_inclusive));
    }
    if (m_to_exclusive_isSet) {
        obj.insert(QString("ToExclusive"), ::OpenAPI::toJsonValue(m_to_exclusive));
    }
    return obj;
}

QDateTime OAIListAttacksRequest_EndTime::getFromInclusive() const {
    return m_from_inclusive;
}
void OAIListAttacksRequest_EndTime::setFromInclusive(const QDateTime &from_inclusive) {
    m_from_inclusive = from_inclusive;
    m_from_inclusive_isSet = true;
}

bool OAIListAttacksRequest_EndTime::is_from_inclusive_Set() const{
    return m_from_inclusive_isSet;
}

bool OAIListAttacksRequest_EndTime::is_from_inclusive_Valid() const{
    return m_from_inclusive_isValid;
}

QDateTime OAIListAttacksRequest_EndTime::getToExclusive() const {
    return m_to_exclusive;
}
void OAIListAttacksRequest_EndTime::setToExclusive(const QDateTime &to_exclusive) {
    m_to_exclusive = to_exclusive;
    m_to_exclusive_isSet = true;
}

bool OAIListAttacksRequest_EndTime::is_to_exclusive_Set() const{
    return m_to_exclusive_isSet;
}

bool OAIListAttacksRequest_EndTime::is_to_exclusive_Valid() const{
    return m_to_exclusive_isValid;
}

bool OAIListAttacksRequest_EndTime::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_exclusive_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAttacksRequest_EndTime::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
