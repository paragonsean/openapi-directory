/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionLimits_ProtectionLimits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionLimits_ProtectionLimits::OAISubscriptionLimits_ProtectionLimits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionLimits_ProtectionLimits::OAISubscriptionLimits_ProtectionLimits() {
    this->initializeModel();
}

OAISubscriptionLimits_ProtectionLimits::~OAISubscriptionLimits_ProtectionLimits() {}

void OAISubscriptionLimits_ProtectionLimits::initializeModel() {

    m_protected_resource_type_limits_isSet = false;
    m_protected_resource_type_limits_isValid = false;
}

void OAISubscriptionLimits_ProtectionLimits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionLimits_ProtectionLimits::fromJsonObject(QJsonObject json) {

    m_protected_resource_type_limits_isValid = ::OpenAPI::fromJsonValue(m_protected_resource_type_limits, json[QString("ProtectedResourceTypeLimits")]);
    m_protected_resource_type_limits_isSet = !json[QString("ProtectedResourceTypeLimits")].isNull() && m_protected_resource_type_limits_isValid;
}

QString OAISubscriptionLimits_ProtectionLimits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionLimits_ProtectionLimits::asJsonObject() const {
    QJsonObject obj;
    if (m_protected_resource_type_limits.isSet()) {
        obj.insert(QString("ProtectedResourceTypeLimits"), ::OpenAPI::toJsonValue(m_protected_resource_type_limits));
    }
    return obj;
}

QList OAISubscriptionLimits_ProtectionLimits::getProtectedResourceTypeLimits() const {
    return m_protected_resource_type_limits;
}
void OAISubscriptionLimits_ProtectionLimits::setProtectedResourceTypeLimits(const QList &protected_resource_type_limits) {
    m_protected_resource_type_limits = protected_resource_type_limits;
    m_protected_resource_type_limits_isSet = true;
}

bool OAISubscriptionLimits_ProtectionLimits::is_protected_resource_type_limits_Set() const{
    return m_protected_resource_type_limits_isSet;
}

bool OAISubscriptionLimits_ProtectionLimits::is_protected_resource_type_limits_Valid() const{
    return m_protected_resource_type_limits_isValid;
}

bool OAISubscriptionLimits_ProtectionLimits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_protected_resource_type_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionLimits_ProtectionLimits::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_protected_resource_type_limits_isValid && true;
}

} // namespace OpenAPI
