/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAttackStatisticsResponse_TimeRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAttackStatisticsResponse_TimeRange::OAIDescribeAttackStatisticsResponse_TimeRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAttackStatisticsResponse_TimeRange::OAIDescribeAttackStatisticsResponse_TimeRange() {
    this->initializeModel();
}

OAIDescribeAttackStatisticsResponse_TimeRange::~OAIDescribeAttackStatisticsResponse_TimeRange() {}

void OAIDescribeAttackStatisticsResponse_TimeRange::initializeModel() {

    m_from_inclusive_isSet = false;
    m_from_inclusive_isValid = false;

    m_to_exclusive_isSet = false;
    m_to_exclusive_isValid = false;
}

void OAIDescribeAttackStatisticsResponse_TimeRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAttackStatisticsResponse_TimeRange::fromJsonObject(QJsonObject json) {

    m_from_inclusive_isValid = ::OpenAPI::fromJsonValue(m_from_inclusive, json[QString("FromInclusive")]);
    m_from_inclusive_isSet = !json[QString("FromInclusive")].isNull() && m_from_inclusive_isValid;

    m_to_exclusive_isValid = ::OpenAPI::fromJsonValue(m_to_exclusive, json[QString("ToExclusive")]);
    m_to_exclusive_isSet = !json[QString("ToExclusive")].isNull() && m_to_exclusive_isValid;
}

QString OAIDescribeAttackStatisticsResponse_TimeRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAttackStatisticsResponse_TimeRange::asJsonObject() const {
    QJsonObject obj;
    if (m_from_inclusive_isSet) {
        obj.insert(QString("FromInclusive"), ::OpenAPI::toJsonValue(m_from_inclusive));
    }
    if (m_to_exclusive_isSet) {
        obj.insert(QString("ToExclusive"), ::OpenAPI::toJsonValue(m_to_exclusive));
    }
    return obj;
}

QDateTime OAIDescribeAttackStatisticsResponse_TimeRange::getFromInclusive() const {
    return m_from_inclusive;
}
void OAIDescribeAttackStatisticsResponse_TimeRange::setFromInclusive(const QDateTime &from_inclusive) {
    m_from_inclusive = from_inclusive;
    m_from_inclusive_isSet = true;
}

bool OAIDescribeAttackStatisticsResponse_TimeRange::is_from_inclusive_Set() const{
    return m_from_inclusive_isSet;
}

bool OAIDescribeAttackStatisticsResponse_TimeRange::is_from_inclusive_Valid() const{
    return m_from_inclusive_isValid;
}

QDateTime OAIDescribeAttackStatisticsResponse_TimeRange::getToExclusive() const {
    return m_to_exclusive;
}
void OAIDescribeAttackStatisticsResponse_TimeRange::setToExclusive(const QDateTime &to_exclusive) {
    m_to_exclusive = to_exclusive;
    m_to_exclusive_isSet = true;
}

bool OAIDescribeAttackStatisticsResponse_TimeRange::is_to_exclusive_Set() const{
    return m_to_exclusive_isSet;
}

bool OAIDescribeAttackStatisticsResponse_TimeRange::is_to_exclusive_Valid() const{
    return m_to_exclusive_isValid;
}

bool OAIDescribeAttackStatisticsResponse_TimeRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_exclusive_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAttackStatisticsResponse_TimeRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
