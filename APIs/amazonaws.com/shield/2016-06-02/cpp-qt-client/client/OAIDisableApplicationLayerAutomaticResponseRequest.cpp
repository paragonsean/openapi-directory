/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDisableApplicationLayerAutomaticResponseRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDisableApplicationLayerAutomaticResponseRequest::OAIDisableApplicationLayerAutomaticResponseRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDisableApplicationLayerAutomaticResponseRequest::OAIDisableApplicationLayerAutomaticResponseRequest() {
    this->initializeModel();
}

OAIDisableApplicationLayerAutomaticResponseRequest::~OAIDisableApplicationLayerAutomaticResponseRequest() {}

void OAIDisableApplicationLayerAutomaticResponseRequest::initializeModel() {

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;
}

void OAIDisableApplicationLayerAutomaticResponseRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDisableApplicationLayerAutomaticResponseRequest::fromJsonObject(QJsonObject json) {

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("ResourceArn")]);
    m_resource_arn_isSet = !json[QString("ResourceArn")].isNull() && m_resource_arn_isValid;
}

QString OAIDisableApplicationLayerAutomaticResponseRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDisableApplicationLayerAutomaticResponseRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_arn_isSet) {
        obj.insert(QString("ResourceArn"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    return obj;
}

QString OAIDisableApplicationLayerAutomaticResponseRequest::getResourceArn() const {
    return m_resource_arn;
}
void OAIDisableApplicationLayerAutomaticResponseRequest::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAIDisableApplicationLayerAutomaticResponseRequest::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAIDisableApplicationLayerAutomaticResponseRequest::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

bool OAIDisableApplicationLayerAutomaticResponseRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDisableApplicationLayerAutomaticResponseRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_resource_arn_isValid && true;
}

} // namespace OpenAPI
