/**
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AttackVectorDescription model module.
 * @module model/AttackVectorDescription
 * @version 2016-06-02
 */
class AttackVectorDescription {
    /**
     * Constructs a new <code>AttackVectorDescription</code>.
     * Describes the attack.
     * @alias module:model/AttackVectorDescription
     * @param vectorType {String} 
     */
    constructor(vectorType) { 
        
        AttackVectorDescription.initialize(this, vectorType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, vectorType) { 
        obj['VectorType'] = vectorType;
    }

    /**
     * Constructs a <code>AttackVectorDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttackVectorDescription} obj Optional instance to populate.
     * @return {module:model/AttackVectorDescription} The populated <code>AttackVectorDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttackVectorDescription();

            if (data.hasOwnProperty('VectorType')) {
                obj['VectorType'] = ApiClient.convertToType(data['VectorType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttackVectorDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttackVectorDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AttackVectorDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `VectorType`
        if (data['VectorType']) { // data not null
          String.validateJSON(data['VectorType']);
        }

        return true;
    }


}

AttackVectorDescription.RequiredProperties = ["VectorType"];

/**
 * @member {String} VectorType
 */
AttackVectorDescription.prototype['VectorType'] = undefined;






export default AttackVectorDescription;

