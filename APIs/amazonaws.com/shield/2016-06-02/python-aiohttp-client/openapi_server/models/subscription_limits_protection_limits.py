# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscriptionLimitsProtectionLimits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, protected_resource_type_limits: List=None):
        """SubscriptionLimitsProtectionLimits - a model defined in OpenAPI

        :param protected_resource_type_limits: The protected_resource_type_limits of this SubscriptionLimitsProtectionLimits.
        """
        self.openapi_types = {
            'protected_resource_type_limits': List
        }

        self.attribute_map = {
            'protected_resource_type_limits': 'ProtectedResourceTypeLimits'
        }

        self._protected_resource_type_limits = protected_resource_type_limits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionLimitsProtectionLimits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionLimits_ProtectionLimits of this SubscriptionLimitsProtectionLimits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def protected_resource_type_limits(self):
        """Gets the protected_resource_type_limits of this SubscriptionLimitsProtectionLimits.


        :return: The protected_resource_type_limits of this SubscriptionLimitsProtectionLimits.
        :rtype: List
        """
        return self._protected_resource_type_limits

    @protected_resource_type_limits.setter
    def protected_resource_type_limits(self, protected_resource_type_limits):
        """Sets the protected_resource_type_limits of this SubscriptionLimitsProtectionLimits.


        :param protected_resource_type_limits: The protected_resource_type_limits of this SubscriptionLimitsProtectionLimits.
        :type protected_resource_type_limits: List
        """
        if protected_resource_type_limits is None:
            raise ValueError("Invalid value for `protected_resource_type_limits`, must not be `None`")

        self._protected_resource_type_limits = protected_resource_type_limits
