# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.protection_group_limits_pattern_type_limits import ProtectionGroupLimitsPatternTypeLimits
from openapi_server import util


class ProtectionGroupLimits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_protection_groups: int=None, pattern_type_limits: ProtectionGroupLimitsPatternTypeLimits=None):
        """ProtectionGroupLimits - a model defined in OpenAPI

        :param max_protection_groups: The max_protection_groups of this ProtectionGroupLimits.
        :param pattern_type_limits: The pattern_type_limits of this ProtectionGroupLimits.
        """
        self.openapi_types = {
            'max_protection_groups': int,
            'pattern_type_limits': ProtectionGroupLimitsPatternTypeLimits
        }

        self.attribute_map = {
            'max_protection_groups': 'MaxProtectionGroups',
            'pattern_type_limits': 'PatternTypeLimits'
        }

        self._max_protection_groups = max_protection_groups
        self._pattern_type_limits = pattern_type_limits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtectionGroupLimits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProtectionGroupLimits of this ProtectionGroupLimits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_protection_groups(self):
        """Gets the max_protection_groups of this ProtectionGroupLimits.


        :return: The max_protection_groups of this ProtectionGroupLimits.
        :rtype: int
        """
        return self._max_protection_groups

    @max_protection_groups.setter
    def max_protection_groups(self, max_protection_groups):
        """Sets the max_protection_groups of this ProtectionGroupLimits.


        :param max_protection_groups: The max_protection_groups of this ProtectionGroupLimits.
        :type max_protection_groups: int
        """
        if max_protection_groups is None:
            raise ValueError("Invalid value for `max_protection_groups`, must not be `None`")

        self._max_protection_groups = max_protection_groups

    @property
    def pattern_type_limits(self):
        """Gets the pattern_type_limits of this ProtectionGroupLimits.


        :return: The pattern_type_limits of this ProtectionGroupLimits.
        :rtype: ProtectionGroupLimitsPatternTypeLimits
        """
        return self._pattern_type_limits

    @pattern_type_limits.setter
    def pattern_type_limits(self, pattern_type_limits):
        """Sets the pattern_type_limits of this ProtectionGroupLimits.


        :param pattern_type_limits: The pattern_type_limits of this ProtectionGroupLimits.
        :type pattern_type_limits: ProtectionGroupLimitsPatternTypeLimits
        """
        if pattern_type_limits is None:
            raise ValueError("Invalid value for `pattern_type_limits`, must not be `None`")

        self._pattern_type_limits = pattern_type_limits
