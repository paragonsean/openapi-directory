# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sub_resource_type import SubResourceType
from openapi_server import util


class SubResourceSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: SubResourceType=None, id: str=None, attack_vectors: List=None, counters: List=None):
        """SubResourceSummary - a model defined in OpenAPI

        :param type: The type of this SubResourceSummary.
        :param id: The id of this SubResourceSummary.
        :param attack_vectors: The attack_vectors of this SubResourceSummary.
        :param counters: The counters of this SubResourceSummary.
        """
        self.openapi_types = {
            'type': SubResourceType,
            'id': str,
            'attack_vectors': List,
            'counters': List
        }

        self.attribute_map = {
            'type': 'Type',
            'id': 'Id',
            'attack_vectors': 'AttackVectors',
            'counters': 'Counters'
        }

        self._type = type
        self._id = id
        self._attack_vectors = attack_vectors
        self._counters = counters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubResourceSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubResourceSummary of this SubResourceSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this SubResourceSummary.


        :return: The type of this SubResourceSummary.
        :rtype: SubResourceType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SubResourceSummary.


        :param type: The type of this SubResourceSummary.
        :type type: SubResourceType
        """

        self._type = type

    @property
    def id(self):
        """Gets the id of this SubResourceSummary.


        :return: The id of this SubResourceSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SubResourceSummary.


        :param id: The id of this SubResourceSummary.
        :type id: str
        """

        self._id = id

    @property
    def attack_vectors(self):
        """Gets the attack_vectors of this SubResourceSummary.


        :return: The attack_vectors of this SubResourceSummary.
        :rtype: List
        """
        return self._attack_vectors

    @attack_vectors.setter
    def attack_vectors(self, attack_vectors):
        """Sets the attack_vectors of this SubResourceSummary.


        :param attack_vectors: The attack_vectors of this SubResourceSummary.
        :type attack_vectors: List
        """

        self._attack_vectors = attack_vectors

    @property
    def counters(self):
        """Gets the counters of this SubResourceSummary.


        :return: The counters of this SubResourceSummary.
        :rtype: List
        """
        return self._counters

    @counters.setter
    def counters(self, counters):
        """Sets the counters of this SubResourceSummary.


        :param counters: The counters of this SubResourceSummary.
        :type counters: List
        """

        self._counters = counters
