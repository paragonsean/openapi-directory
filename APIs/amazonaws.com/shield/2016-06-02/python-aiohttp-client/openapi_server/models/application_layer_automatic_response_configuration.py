# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_layer_automatic_response_status import ApplicationLayerAutomaticResponseStatus
from openapi_server.models.enable_application_layer_automatic_response_request_action import EnableApplicationLayerAutomaticResponseRequestAction
from openapi_server import util


class ApplicationLayerAutomaticResponseConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: ApplicationLayerAutomaticResponseStatus=None, action: EnableApplicationLayerAutomaticResponseRequestAction=None):
        """ApplicationLayerAutomaticResponseConfiguration - a model defined in OpenAPI

        :param status: The status of this ApplicationLayerAutomaticResponseConfiguration.
        :param action: The action of this ApplicationLayerAutomaticResponseConfiguration.
        """
        self.openapi_types = {
            'status': ApplicationLayerAutomaticResponseStatus,
            'action': EnableApplicationLayerAutomaticResponseRequestAction
        }

        self.attribute_map = {
            'status': 'Status',
            'action': 'Action'
        }

        self._status = status
        self._action = action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationLayerAutomaticResponseConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationLayerAutomaticResponseConfiguration of this ApplicationLayerAutomaticResponseConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ApplicationLayerAutomaticResponseConfiguration.


        :return: The status of this ApplicationLayerAutomaticResponseConfiguration.
        :rtype: ApplicationLayerAutomaticResponseStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApplicationLayerAutomaticResponseConfiguration.


        :param status: The status of this ApplicationLayerAutomaticResponseConfiguration.
        :type status: ApplicationLayerAutomaticResponseStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def action(self):
        """Gets the action of this ApplicationLayerAutomaticResponseConfiguration.


        :return: The action of this ApplicationLayerAutomaticResponseConfiguration.
        :rtype: EnableApplicationLayerAutomaticResponseRequestAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this ApplicationLayerAutomaticResponseConfiguration.


        :param action: The action of this ApplicationLayerAutomaticResponseConfiguration.
        :type action: EnableApplicationLayerAutomaticResponseRequestAction
        """
        if action is None:
            raise ValueError("Invalid value for `action`, must not be `None`")

        self._action = action
