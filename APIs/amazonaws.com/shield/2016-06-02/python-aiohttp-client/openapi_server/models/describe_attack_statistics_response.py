# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_attack_statistics_response_time_range import DescribeAttackStatisticsResponseTimeRange
from openapi_server import util


class DescribeAttackStatisticsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time_range: DescribeAttackStatisticsResponseTimeRange=None, data_items: List=None):
        """DescribeAttackStatisticsResponse - a model defined in OpenAPI

        :param time_range: The time_range of this DescribeAttackStatisticsResponse.
        :param data_items: The data_items of this DescribeAttackStatisticsResponse.
        """
        self.openapi_types = {
            'time_range': DescribeAttackStatisticsResponseTimeRange,
            'data_items': List
        }

        self.attribute_map = {
            'time_range': 'TimeRange',
            'data_items': 'DataItems'
        }

        self._time_range = time_range
        self._data_items = data_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAttackStatisticsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAttackStatisticsResponse of this DescribeAttackStatisticsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_range(self):
        """Gets the time_range of this DescribeAttackStatisticsResponse.


        :return: The time_range of this DescribeAttackStatisticsResponse.
        :rtype: DescribeAttackStatisticsResponseTimeRange
        """
        return self._time_range

    @time_range.setter
    def time_range(self, time_range):
        """Sets the time_range of this DescribeAttackStatisticsResponse.


        :param time_range: The time_range of this DescribeAttackStatisticsResponse.
        :type time_range: DescribeAttackStatisticsResponseTimeRange
        """
        if time_range is None:
            raise ValueError("Invalid value for `time_range`, must not be `None`")

        self._time_range = time_range

    @property
    def data_items(self):
        """Gets the data_items of this DescribeAttackStatisticsResponse.


        :return: The data_items of this DescribeAttackStatisticsResponse.
        :rtype: List
        """
        return self._data_items

    @data_items.setter
    def data_items(self, data_items):
        """Sets the data_items of this DescribeAttackStatisticsResponse.


        :param data_items: The data_items of this DescribeAttackStatisticsResponse.
        :type data_items: List
        """
        if data_items is None:
            raise ValueError("Invalid value for `data_items`, must not be `None`")

        self._data_items = data_items
