# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AttackPropertyIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DESTINATION_URL = 'DESTINATION_URL'
    REFERRER = 'REFERRER'
    SOURCE_ASN = 'SOURCE_ASN'
    SOURCE_COUNTRY = 'SOURCE_COUNTRY'
    SOURCE_IP_ADDRESS = 'SOURCE_IP_ADDRESS'
    SOURCE_USER_AGENT = 'SOURCE_USER_AGENT'
    WORDPRESS_PINGBACK_REFLECTOR = 'WORDPRESS_PINGBACK_REFLECTOR'
    WORDPRESS_PINGBACK_SOURCE = 'WORDPRESS_PINGBACK_SOURCE'

    def __init__(self):
        """AttackPropertyIdentifier - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttackPropertyIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttackPropertyIdentifier of this AttackPropertyIdentifier.
        """
        return util.deserialize_model(dikt, cls)
