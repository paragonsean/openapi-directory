# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Contributor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, value: int=None):
        """Contributor - a model defined in OpenAPI

        :param name: The name of this Contributor.
        :param value: The value of this Contributor.
        """
        self.openapi_types = {
            'name': str,
            'value': int
        }

        self.attribute_map = {
            'name': 'Name',
            'value': 'Value'
        }

        self._name = name
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Contributor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contributor of this Contributor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Contributor.


        :return: The name of this Contributor.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Contributor.


        :param name: The name of this Contributor.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this Contributor.


        :return: The value of this Contributor.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Contributor.


        :param value: The value of this Contributor.
        :type value: int
        """

        self._value = value
