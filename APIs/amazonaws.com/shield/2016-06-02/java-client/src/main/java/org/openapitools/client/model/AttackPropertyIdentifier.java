/*
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets AttackPropertyIdentifier
 */
@JsonAdapter(AttackPropertyIdentifier.Adapter.class)
public enum AttackPropertyIdentifier {
  
  DESTINATION_URL("DESTINATION_URL"),
  
  REFERRER("REFERRER"),
  
  SOURCE_ASN("SOURCE_ASN"),
  
  SOURCE_COUNTRY("SOURCE_COUNTRY"),
  
  SOURCE_IP_ADDRESS("SOURCE_IP_ADDRESS"),
  
  SOURCE_USER_AGENT("SOURCE_USER_AGENT"),
  
  WORDPRESS_PINGBACK_REFLECTOR("WORDPRESS_PINGBACK_REFLECTOR"),
  
  WORDPRESS_PINGBACK_SOURCE("WORDPRESS_PINGBACK_SOURCE");

  private String value;

  AttackPropertyIdentifier(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AttackPropertyIdentifier fromValue(String value) {
    for (AttackPropertyIdentifier b : AttackPropertyIdentifier.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AttackPropertyIdentifier> {
    @Override
    public void write(final JsonWriter jsonWriter, final AttackPropertyIdentifier enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AttackPropertyIdentifier read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AttackPropertyIdentifier.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AttackPropertyIdentifier.fromValue(value);
  }
}

