/*
 * AWS Shield
 * <fullname>Shield Advanced</fullname> <p>This is the <i>Shield Advanced API Reference</i>. This guide is for developers who need detailed information about the Shield Advanced API actions, data types, and errors. For detailed information about WAF and Shield Advanced features and an overview of how to use the WAF and Shield Advanced APIs, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">WAF and Shield Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-06-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListProtectionGroupsRequestInclusionFilters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:57.716468-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListProtectionGroupsRequestInclusionFilters {
  public static final String SERIALIZED_NAME_PROTECTION_GROUP_IDS = "ProtectionGroupIds";
  @SerializedName(SERIALIZED_NAME_PROTECTION_GROUP_IDS)
  private List protectionGroupIds;

  public static final String SERIALIZED_NAME_PATTERNS = "Patterns";
  @SerializedName(SERIALIZED_NAME_PATTERNS)
  private List patterns;

  public static final String SERIALIZED_NAME_RESOURCE_TYPES = "ResourceTypes";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPES)
  private List resourceTypes;

  public static final String SERIALIZED_NAME_AGGREGATIONS = "Aggregations";
  @SerializedName(SERIALIZED_NAME_AGGREGATIONS)
  private List aggregations;

  public ListProtectionGroupsRequestInclusionFilters() {
  }

  public ListProtectionGroupsRequestInclusionFilters protectionGroupIds(List protectionGroupIds) {
    this.protectionGroupIds = protectionGroupIds;
    return this;
  }

  /**
   * Get protectionGroupIds
   * @return protectionGroupIds
   */
  @javax.annotation.Nullable
  public List getProtectionGroupIds() {
    return protectionGroupIds;
  }

  public void setProtectionGroupIds(List protectionGroupIds) {
    this.protectionGroupIds = protectionGroupIds;
  }


  public ListProtectionGroupsRequestInclusionFilters patterns(List patterns) {
    this.patterns = patterns;
    return this;
  }

  /**
   * Get patterns
   * @return patterns
   */
  @javax.annotation.Nullable
  public List getPatterns() {
    return patterns;
  }

  public void setPatterns(List patterns) {
    this.patterns = patterns;
  }


  public ListProtectionGroupsRequestInclusionFilters resourceTypes(List resourceTypes) {
    this.resourceTypes = resourceTypes;
    return this;
  }

  /**
   * Get resourceTypes
   * @return resourceTypes
   */
  @javax.annotation.Nullable
  public List getResourceTypes() {
    return resourceTypes;
  }

  public void setResourceTypes(List resourceTypes) {
    this.resourceTypes = resourceTypes;
  }


  public ListProtectionGroupsRequestInclusionFilters aggregations(List aggregations) {
    this.aggregations = aggregations;
    return this;
  }

  /**
   * Get aggregations
   * @return aggregations
   */
  @javax.annotation.Nullable
  public List getAggregations() {
    return aggregations;
  }

  public void setAggregations(List aggregations) {
    this.aggregations = aggregations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListProtectionGroupsRequestInclusionFilters listProtectionGroupsRequestInclusionFilters = (ListProtectionGroupsRequestInclusionFilters) o;
    return Objects.equals(this.protectionGroupIds, listProtectionGroupsRequestInclusionFilters.protectionGroupIds) &&
        Objects.equals(this.patterns, listProtectionGroupsRequestInclusionFilters.patterns) &&
        Objects.equals(this.resourceTypes, listProtectionGroupsRequestInclusionFilters.resourceTypes) &&
        Objects.equals(this.aggregations, listProtectionGroupsRequestInclusionFilters.aggregations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(protectionGroupIds, patterns, resourceTypes, aggregations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListProtectionGroupsRequestInclusionFilters {\n");
    sb.append("    protectionGroupIds: ").append(toIndentedString(protectionGroupIds)).append("\n");
    sb.append("    patterns: ").append(toIndentedString(patterns)).append("\n");
    sb.append("    resourceTypes: ").append(toIndentedString(resourceTypes)).append("\n");
    sb.append("    aggregations: ").append(toIndentedString(aggregations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ProtectionGroupIds");
    openapiFields.add("Patterns");
    openapiFields.add("ResourceTypes");
    openapiFields.add("Aggregations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListProtectionGroupsRequestInclusionFilters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListProtectionGroupsRequestInclusionFilters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListProtectionGroupsRequestInclusionFilters is not found in the empty JSON string", ListProtectionGroupsRequestInclusionFilters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListProtectionGroupsRequestInclusionFilters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListProtectionGroupsRequestInclusionFilters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ProtectionGroupIds`
      if (jsonObj.get("ProtectionGroupIds") != null && !jsonObj.get("ProtectionGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ProtectionGroupIds"));
      }
      // validate the optional field `Patterns`
      if (jsonObj.get("Patterns") != null && !jsonObj.get("Patterns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Patterns"));
      }
      // validate the optional field `ResourceTypes`
      if (jsonObj.get("ResourceTypes") != null && !jsonObj.get("ResourceTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ResourceTypes"));
      }
      // validate the optional field `Aggregations`
      if (jsonObj.get("Aggregations") != null && !jsonObj.get("Aggregations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Aggregations"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListProtectionGroupsRequestInclusionFilters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListProtectionGroupsRequestInclusionFilters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListProtectionGroupsRequestInclusionFilters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListProtectionGroupsRequestInclusionFilters.class));

       return (TypeAdapter<T>) new TypeAdapter<ListProtectionGroupsRequestInclusionFilters>() {
           @Override
           public void write(JsonWriter out, ListProtectionGroupsRequestInclusionFilters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListProtectionGroupsRequestInclusionFilters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListProtectionGroupsRequestInclusionFilters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListProtectionGroupsRequestInclusionFilters
   * @throws IOException if the JSON string is invalid with respect to ListProtectionGroupsRequestInclusionFilters
   */
  public static ListProtectionGroupsRequestInclusionFilters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListProtectionGroupsRequestInclusionFilters.class);
  }

  /**
   * Convert an instance of ListProtectionGroupsRequestInclusionFilters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

