/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISupportedFieldTypeDetails_v1.h
 *
 * 
 */

#ifndef OAISupportedFieldTypeDetails_v1_H
#define OAISupportedFieldTypeDetails_v1_H

#include <QJsonObject>

#include "OAIFieldTypeDetails_fieldLengthRange.h"
#include "OAIFieldTypeDetails_fieldValueRange.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFieldTypeDetails_fieldValueRange;
class OAIFieldTypeDetails_fieldLengthRange;

class OAISupportedFieldTypeDetails_v1 : public OAIObject {
public:
    OAISupportedFieldTypeDetails_v1();
    OAISupportedFieldTypeDetails_v1(QString json);
    ~OAISupportedFieldTypeDetails_v1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFieldType() const;
    void setFieldType(const QString &field_type);
    bool is_field_type_Set() const;
    bool is_field_type_Valid() const;

    QList getFilterOperators() const;
    void setFilterOperators(const QList &filter_operators);
    bool is_filter_operators_Set() const;
    bool is_filter_operators_Valid() const;

    QList getSupportedValues() const;
    void setSupportedValues(const QList &supported_values);
    bool is_supported_values_Set() const;
    bool is_supported_values_Valid() const;

    QString getValueRegexPattern() const;
    void setValueRegexPattern(const QString &value_regex_pattern);
    bool is_value_regex_pattern_Set() const;
    bool is_value_regex_pattern_Valid() const;

    QString getSupportedDateFormat() const;
    void setSupportedDateFormat(const QString &supported_date_format);
    bool is_supported_date_format_Set() const;
    bool is_supported_date_format_Valid() const;

    OAIFieldTypeDetails_fieldValueRange getFieldValueRange() const;
    void setFieldValueRange(const OAIFieldTypeDetails_fieldValueRange &field_value_range);
    bool is_field_value_range_Set() const;
    bool is_field_value_range_Valid() const;

    OAIFieldTypeDetails_fieldLengthRange getFieldLengthRange() const;
    void setFieldLengthRange(const OAIFieldTypeDetails_fieldLengthRange &field_length_range);
    bool is_field_length_range_Set() const;
    bool is_field_length_range_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_field_type;
    bool m_field_type_isSet;
    bool m_field_type_isValid;

    QList m_filter_operators;
    bool m_filter_operators_isSet;
    bool m_filter_operators_isValid;

    QList m_supported_values;
    bool m_supported_values_isSet;
    bool m_supported_values_isValid;

    QString m_value_regex_pattern;
    bool m_value_regex_pattern_isSet;
    bool m_value_regex_pattern_isValid;

    QString m_supported_date_format;
    bool m_supported_date_format_isSet;
    bool m_supported_date_format_isValid;

    OAIFieldTypeDetails_fieldValueRange m_field_value_range;
    bool m_field_value_range_isSet;
    bool m_field_value_range_isValid;

    OAIFieldTypeDetails_fieldLengthRange m_field_length_range;
    bool m_field_length_range_isSet;
    bool m_field_length_range_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISupportedFieldTypeDetails_v1)

#endif // OAISupportedFieldTypeDetails_v1_H
