/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestinationFieldProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestinationFieldProperties::OAIDestinationFieldProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestinationFieldProperties::OAIDestinationFieldProperties() {
    this->initializeModel();
}

OAIDestinationFieldProperties::~OAIDestinationFieldProperties() {}

void OAIDestinationFieldProperties::initializeModel() {

    m_is_creatable_isSet = false;
    m_is_creatable_isValid = false;

    m_is_nullable_isSet = false;
    m_is_nullable_isValid = false;

    m_is_upsertable_isSet = false;
    m_is_upsertable_isValid = false;

    m_is_updatable_isSet = false;
    m_is_updatable_isValid = false;

    m_is_defaulted_on_create_isSet = false;
    m_is_defaulted_on_create_isValid = false;

    m_supported_write_operations_isSet = false;
    m_supported_write_operations_isValid = false;
}

void OAIDestinationFieldProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestinationFieldProperties::fromJsonObject(QJsonObject json) {

    m_is_creatable_isValid = ::OpenAPI::fromJsonValue(m_is_creatable, json[QString("isCreatable")]);
    m_is_creatable_isSet = !json[QString("isCreatable")].isNull() && m_is_creatable_isValid;

    m_is_nullable_isValid = ::OpenAPI::fromJsonValue(m_is_nullable, json[QString("isNullable")]);
    m_is_nullable_isSet = !json[QString("isNullable")].isNull() && m_is_nullable_isValid;

    m_is_upsertable_isValid = ::OpenAPI::fromJsonValue(m_is_upsertable, json[QString("isUpsertable")]);
    m_is_upsertable_isSet = !json[QString("isUpsertable")].isNull() && m_is_upsertable_isValid;

    m_is_updatable_isValid = ::OpenAPI::fromJsonValue(m_is_updatable, json[QString("isUpdatable")]);
    m_is_updatable_isSet = !json[QString("isUpdatable")].isNull() && m_is_updatable_isValid;

    m_is_defaulted_on_create_isValid = ::OpenAPI::fromJsonValue(m_is_defaulted_on_create, json[QString("isDefaultedOnCreate")]);
    m_is_defaulted_on_create_isSet = !json[QString("isDefaultedOnCreate")].isNull() && m_is_defaulted_on_create_isValid;

    m_supported_write_operations_isValid = ::OpenAPI::fromJsonValue(m_supported_write_operations, json[QString("supportedWriteOperations")]);
    m_supported_write_operations_isSet = !json[QString("supportedWriteOperations")].isNull() && m_supported_write_operations_isValid;
}

QString OAIDestinationFieldProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestinationFieldProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_is_creatable_isSet) {
        obj.insert(QString("isCreatable"), ::OpenAPI::toJsonValue(m_is_creatable));
    }
    if (m_is_nullable_isSet) {
        obj.insert(QString("isNullable"), ::OpenAPI::toJsonValue(m_is_nullable));
    }
    if (m_is_upsertable_isSet) {
        obj.insert(QString("isUpsertable"), ::OpenAPI::toJsonValue(m_is_upsertable));
    }
    if (m_is_updatable_isSet) {
        obj.insert(QString("isUpdatable"), ::OpenAPI::toJsonValue(m_is_updatable));
    }
    if (m_is_defaulted_on_create_isSet) {
        obj.insert(QString("isDefaultedOnCreate"), ::OpenAPI::toJsonValue(m_is_defaulted_on_create));
    }
    if (m_supported_write_operations.isSet()) {
        obj.insert(QString("supportedWriteOperations"), ::OpenAPI::toJsonValue(m_supported_write_operations));
    }
    return obj;
}

bool OAIDestinationFieldProperties::getIsCreatable() const {
    return m_is_creatable;
}
void OAIDestinationFieldProperties::setIsCreatable(const bool &is_creatable) {
    m_is_creatable = is_creatable;
    m_is_creatable_isSet = true;
}

bool OAIDestinationFieldProperties::is_is_creatable_Set() const{
    return m_is_creatable_isSet;
}

bool OAIDestinationFieldProperties::is_is_creatable_Valid() const{
    return m_is_creatable_isValid;
}

bool OAIDestinationFieldProperties::getIsNullable() const {
    return m_is_nullable;
}
void OAIDestinationFieldProperties::setIsNullable(const bool &is_nullable) {
    m_is_nullable = is_nullable;
    m_is_nullable_isSet = true;
}

bool OAIDestinationFieldProperties::is_is_nullable_Set() const{
    return m_is_nullable_isSet;
}

bool OAIDestinationFieldProperties::is_is_nullable_Valid() const{
    return m_is_nullable_isValid;
}

bool OAIDestinationFieldProperties::getIsUpsertable() const {
    return m_is_upsertable;
}
void OAIDestinationFieldProperties::setIsUpsertable(const bool &is_upsertable) {
    m_is_upsertable = is_upsertable;
    m_is_upsertable_isSet = true;
}

bool OAIDestinationFieldProperties::is_is_upsertable_Set() const{
    return m_is_upsertable_isSet;
}

bool OAIDestinationFieldProperties::is_is_upsertable_Valid() const{
    return m_is_upsertable_isValid;
}

bool OAIDestinationFieldProperties::getIsUpdatable() const {
    return m_is_updatable;
}
void OAIDestinationFieldProperties::setIsUpdatable(const bool &is_updatable) {
    m_is_updatable = is_updatable;
    m_is_updatable_isSet = true;
}

bool OAIDestinationFieldProperties::is_is_updatable_Set() const{
    return m_is_updatable_isSet;
}

bool OAIDestinationFieldProperties::is_is_updatable_Valid() const{
    return m_is_updatable_isValid;
}

bool OAIDestinationFieldProperties::getIsDefaultedOnCreate() const {
    return m_is_defaulted_on_create;
}
void OAIDestinationFieldProperties::setIsDefaultedOnCreate(const bool &is_defaulted_on_create) {
    m_is_defaulted_on_create = is_defaulted_on_create;
    m_is_defaulted_on_create_isSet = true;
}

bool OAIDestinationFieldProperties::is_is_defaulted_on_create_Set() const{
    return m_is_defaulted_on_create_isSet;
}

bool OAIDestinationFieldProperties::is_is_defaulted_on_create_Valid() const{
    return m_is_defaulted_on_create_isValid;
}

QList OAIDestinationFieldProperties::getSupportedWriteOperations() const {
    return m_supported_write_operations;
}
void OAIDestinationFieldProperties::setSupportedWriteOperations(const QList &supported_write_operations) {
    m_supported_write_operations = supported_write_operations;
    m_supported_write_operations_isSet = true;
}

bool OAIDestinationFieldProperties::is_supported_write_operations_Set() const{
    return m_supported_write_operations_isSet;
}

bool OAIDestinationFieldProperties::is_supported_write_operations_Valid() const{
    return m_supported_write_operations_isValid;
}

bool OAIDestinationFieldProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_creatable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_nullable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_upsertable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_updatable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_defaulted_on_create_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_write_operations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestinationFieldProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
