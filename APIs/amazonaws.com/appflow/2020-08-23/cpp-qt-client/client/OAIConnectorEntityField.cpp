/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectorEntityField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectorEntityField::OAIConnectorEntityField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectorEntityField::OAIConnectorEntityField() {
    this->initializeModel();
}

OAIConnectorEntityField::~OAIConnectorEntityField() {}

void OAIConnectorEntityField::initializeModel() {

    m_identifier_isSet = false;
    m_identifier_isValid = false;

    m_parent_identifier_isSet = false;
    m_parent_identifier_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_is_primary_key_isSet = false;
    m_is_primary_key_isValid = false;

    m_default_value_isSet = false;
    m_default_value_isValid = false;

    m_is_deprecated_isSet = false;
    m_is_deprecated_isValid = false;

    m_supported_field_type_details_isSet = false;
    m_supported_field_type_details_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_source_properties_isSet = false;
    m_source_properties_isValid = false;

    m_destination_properties_isSet = false;
    m_destination_properties_isValid = false;

    m_custom_properties_isSet = false;
    m_custom_properties_isValid = false;
}

void OAIConnectorEntityField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectorEntityField::fromJsonObject(QJsonObject json) {

    m_identifier_isValid = ::OpenAPI::fromJsonValue(m_identifier, json[QString("identifier")]);
    m_identifier_isSet = !json[QString("identifier")].isNull() && m_identifier_isValid;

    m_parent_identifier_isValid = ::OpenAPI::fromJsonValue(m_parent_identifier, json[QString("parentIdentifier")]);
    m_parent_identifier_isSet = !json[QString("parentIdentifier")].isNull() && m_parent_identifier_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_is_primary_key_isValid = ::OpenAPI::fromJsonValue(m_is_primary_key, json[QString("isPrimaryKey")]);
    m_is_primary_key_isSet = !json[QString("isPrimaryKey")].isNull() && m_is_primary_key_isValid;

    m_default_value_isValid = ::OpenAPI::fromJsonValue(m_default_value, json[QString("defaultValue")]);
    m_default_value_isSet = !json[QString("defaultValue")].isNull() && m_default_value_isValid;

    m_is_deprecated_isValid = ::OpenAPI::fromJsonValue(m_is_deprecated, json[QString("isDeprecated")]);
    m_is_deprecated_isSet = !json[QString("isDeprecated")].isNull() && m_is_deprecated_isValid;

    m_supported_field_type_details_isValid = ::OpenAPI::fromJsonValue(m_supported_field_type_details, json[QString("supportedFieldTypeDetails")]);
    m_supported_field_type_details_isSet = !json[QString("supportedFieldTypeDetails")].isNull() && m_supported_field_type_details_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_source_properties_isValid = ::OpenAPI::fromJsonValue(m_source_properties, json[QString("sourceProperties")]);
    m_source_properties_isSet = !json[QString("sourceProperties")].isNull() && m_source_properties_isValid;

    m_destination_properties_isValid = ::OpenAPI::fromJsonValue(m_destination_properties, json[QString("destinationProperties")]);
    m_destination_properties_isSet = !json[QString("destinationProperties")].isNull() && m_destination_properties_isValid;

    m_custom_properties_isValid = ::OpenAPI::fromJsonValue(m_custom_properties, json[QString("customProperties")]);
    m_custom_properties_isSet = !json[QString("customProperties")].isNull() && m_custom_properties_isValid;
}

QString OAIConnectorEntityField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectorEntityField::asJsonObject() const {
    QJsonObject obj;
    if (m_identifier_isSet) {
        obj.insert(QString("identifier"), ::OpenAPI::toJsonValue(m_identifier));
    }
    if (m_parent_identifier_isSet) {
        obj.insert(QString("parentIdentifier"), ::OpenAPI::toJsonValue(m_parent_identifier));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_is_primary_key_isSet) {
        obj.insert(QString("isPrimaryKey"), ::OpenAPI::toJsonValue(m_is_primary_key));
    }
    if (m_default_value_isSet) {
        obj.insert(QString("defaultValue"), ::OpenAPI::toJsonValue(m_default_value));
    }
    if (m_is_deprecated_isSet) {
        obj.insert(QString("isDeprecated"), ::OpenAPI::toJsonValue(m_is_deprecated));
    }
    if (m_supported_field_type_details.isSet()) {
        obj.insert(QString("supportedFieldTypeDetails"), ::OpenAPI::toJsonValue(m_supported_field_type_details));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_source_properties.isSet()) {
        obj.insert(QString("sourceProperties"), ::OpenAPI::toJsonValue(m_source_properties));
    }
    if (m_destination_properties.isSet()) {
        obj.insert(QString("destinationProperties"), ::OpenAPI::toJsonValue(m_destination_properties));
    }
    if (m_custom_properties.isSet()) {
        obj.insert(QString("customProperties"), ::OpenAPI::toJsonValue(m_custom_properties));
    }
    return obj;
}

QString OAIConnectorEntityField::getIdentifier() const {
    return m_identifier;
}
void OAIConnectorEntityField::setIdentifier(const QString &identifier) {
    m_identifier = identifier;
    m_identifier_isSet = true;
}

bool OAIConnectorEntityField::is_identifier_Set() const{
    return m_identifier_isSet;
}

bool OAIConnectorEntityField::is_identifier_Valid() const{
    return m_identifier_isValid;
}

QString OAIConnectorEntityField::getParentIdentifier() const {
    return m_parent_identifier;
}
void OAIConnectorEntityField::setParentIdentifier(const QString &parent_identifier) {
    m_parent_identifier = parent_identifier;
    m_parent_identifier_isSet = true;
}

bool OAIConnectorEntityField::is_parent_identifier_Set() const{
    return m_parent_identifier_isSet;
}

bool OAIConnectorEntityField::is_parent_identifier_Valid() const{
    return m_parent_identifier_isValid;
}

QString OAIConnectorEntityField::getLabel() const {
    return m_label;
}
void OAIConnectorEntityField::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIConnectorEntityField::is_label_Set() const{
    return m_label_isSet;
}

bool OAIConnectorEntityField::is_label_Valid() const{
    return m_label_isValid;
}

bool OAIConnectorEntityField::getIsPrimaryKey() const {
    return m_is_primary_key;
}
void OAIConnectorEntityField::setIsPrimaryKey(const bool &is_primary_key) {
    m_is_primary_key = is_primary_key;
    m_is_primary_key_isSet = true;
}

bool OAIConnectorEntityField::is_is_primary_key_Set() const{
    return m_is_primary_key_isSet;
}

bool OAIConnectorEntityField::is_is_primary_key_Valid() const{
    return m_is_primary_key_isValid;
}

QString OAIConnectorEntityField::getDefaultValue() const {
    return m_default_value;
}
void OAIConnectorEntityField::setDefaultValue(const QString &default_value) {
    m_default_value = default_value;
    m_default_value_isSet = true;
}

bool OAIConnectorEntityField::is_default_value_Set() const{
    return m_default_value_isSet;
}

bool OAIConnectorEntityField::is_default_value_Valid() const{
    return m_default_value_isValid;
}

bool OAIConnectorEntityField::getIsDeprecated() const {
    return m_is_deprecated;
}
void OAIConnectorEntityField::setIsDeprecated(const bool &is_deprecated) {
    m_is_deprecated = is_deprecated;
    m_is_deprecated_isSet = true;
}

bool OAIConnectorEntityField::is_is_deprecated_Set() const{
    return m_is_deprecated_isSet;
}

bool OAIConnectorEntityField::is_is_deprecated_Valid() const{
    return m_is_deprecated_isValid;
}

OAIConnectorEntityField_supportedFieldTypeDetails OAIConnectorEntityField::getSupportedFieldTypeDetails() const {
    return m_supported_field_type_details;
}
void OAIConnectorEntityField::setSupportedFieldTypeDetails(const OAIConnectorEntityField_supportedFieldTypeDetails &supported_field_type_details) {
    m_supported_field_type_details = supported_field_type_details;
    m_supported_field_type_details_isSet = true;
}

bool OAIConnectorEntityField::is_supported_field_type_details_Set() const{
    return m_supported_field_type_details_isSet;
}

bool OAIConnectorEntityField::is_supported_field_type_details_Valid() const{
    return m_supported_field_type_details_isValid;
}

QString OAIConnectorEntityField::getDescription() const {
    return m_description;
}
void OAIConnectorEntityField::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIConnectorEntityField::is_description_Set() const{
    return m_description_isSet;
}

bool OAIConnectorEntityField::is_description_Valid() const{
    return m_description_isValid;
}

OAIConnectorEntityField_sourceProperties OAIConnectorEntityField::getSourceProperties() const {
    return m_source_properties;
}
void OAIConnectorEntityField::setSourceProperties(const OAIConnectorEntityField_sourceProperties &source_properties) {
    m_source_properties = source_properties;
    m_source_properties_isSet = true;
}

bool OAIConnectorEntityField::is_source_properties_Set() const{
    return m_source_properties_isSet;
}

bool OAIConnectorEntityField::is_source_properties_Valid() const{
    return m_source_properties_isValid;
}

OAIConnectorEntityField_destinationProperties OAIConnectorEntityField::getDestinationProperties() const {
    return m_destination_properties;
}
void OAIConnectorEntityField::setDestinationProperties(const OAIConnectorEntityField_destinationProperties &destination_properties) {
    m_destination_properties = destination_properties;
    m_destination_properties_isSet = true;
}

bool OAIConnectorEntityField::is_destination_properties_Set() const{
    return m_destination_properties_isSet;
}

bool OAIConnectorEntityField::is_destination_properties_Valid() const{
    return m_destination_properties_isValid;
}

QMap OAIConnectorEntityField::getCustomProperties() const {
    return m_custom_properties;
}
void OAIConnectorEntityField::setCustomProperties(const QMap &custom_properties) {
    m_custom_properties = custom_properties;
    m_custom_properties_isSet = true;
}

bool OAIConnectorEntityField::is_custom_properties_Set() const{
    return m_custom_properties_isSet;
}

bool OAIConnectorEntityField::is_custom_properties_Valid() const{
    return m_custom_properties_isValid;
}

bool OAIConnectorEntityField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_primary_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_deprecated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_field_type_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectorEntityField::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_identifier_isValid && true;
}

} // namespace OpenAPI
