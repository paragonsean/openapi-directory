/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDestinationFlowConfig_destinationConnectorProperties.h
 *
 * 
 */

#ifndef OAIDestinationFlowConfig_destinationConnectorProperties_H
#define OAIDestinationFlowConfig_destinationConnectorProperties_H

#include <QJsonObject>

#include "OAIDestinationConnectorProperties_CustomConnector.h"
#include "OAIDestinationConnectorProperties_CustomerProfiles.h"
#include "OAIDestinationConnectorProperties_EventBridge.h"
#include "OAIDestinationConnectorProperties_Honeycode.h"
#include "OAIDestinationConnectorProperties_Marketo.h"
#include "OAIDestinationConnectorProperties_Redshift.h"
#include "OAIDestinationConnectorProperties_S3.h"
#include "OAIDestinationConnectorProperties_SAPOData.h"
#include "OAIDestinationConnectorProperties_Salesforce.h"
#include "OAIDestinationConnectorProperties_Snowflake.h"
#include "OAIDestinationConnectorProperties_Upsolver.h"
#include "OAIDestinationConnectorProperties_Zendesk.h"
#include "OAIObject.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDestinationConnectorProperties_Redshift;
class OAIDestinationConnectorProperties_S3;
class OAIDestinationConnectorProperties_Salesforce;
class OAIDestinationConnectorProperties_Snowflake;
class OAIDestinationConnectorProperties_EventBridge;
class OAIDestinationConnectorProperties_Upsolver;
class OAIDestinationConnectorProperties_Honeycode;
class OAIDestinationConnectorProperties_CustomerProfiles;
class OAIDestinationConnectorProperties_Zendesk;
class OAIDestinationConnectorProperties_Marketo;
class OAIDestinationConnectorProperties_CustomConnector;
class OAIDestinationConnectorProperties_SAPOData;

class OAIDestinationFlowConfig_destinationConnectorProperties : public OAIObject {
public:
    OAIDestinationFlowConfig_destinationConnectorProperties();
    OAIDestinationFlowConfig_destinationConnectorProperties(QString json);
    ~OAIDestinationFlowConfig_destinationConnectorProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDestinationConnectorProperties_Redshift getRedshift() const;
    void setRedshift(const OAIDestinationConnectorProperties_Redshift &redshift);
    bool is_redshift_Set() const;
    bool is_redshift_Valid() const;

    OAIDestinationConnectorProperties_S3 getS3() const;
    void setS3(const OAIDestinationConnectorProperties_S3 &s3);
    bool is_s3_Set() const;
    bool is_s3_Valid() const;

    OAIDestinationConnectorProperties_Salesforce getSalesforce() const;
    void setSalesforce(const OAIDestinationConnectorProperties_Salesforce &salesforce);
    bool is_salesforce_Set() const;
    bool is_salesforce_Valid() const;

    OAIDestinationConnectorProperties_Snowflake getSnowflake() const;
    void setSnowflake(const OAIDestinationConnectorProperties_Snowflake &snowflake);
    bool is_snowflake_Set() const;
    bool is_snowflake_Valid() const;

    OAIDestinationConnectorProperties_EventBridge getEventBridge() const;
    void setEventBridge(const OAIDestinationConnectorProperties_EventBridge &event_bridge);
    bool is_event_bridge_Set() const;
    bool is_event_bridge_Valid() const;

    OAIObject getLookoutMetrics() const;
    void setLookoutMetrics(const OAIObject &lookout_metrics);
    bool is_lookout_metrics_Set() const;
    bool is_lookout_metrics_Valid() const;

    OAIDestinationConnectorProperties_Upsolver getUpsolver() const;
    void setUpsolver(const OAIDestinationConnectorProperties_Upsolver &upsolver);
    bool is_upsolver_Set() const;
    bool is_upsolver_Valid() const;

    OAIDestinationConnectorProperties_Honeycode getHoneycode() const;
    void setHoneycode(const OAIDestinationConnectorProperties_Honeycode &honeycode);
    bool is_honeycode_Set() const;
    bool is_honeycode_Valid() const;

    OAIDestinationConnectorProperties_CustomerProfiles getCustomerProfiles() const;
    void setCustomerProfiles(const OAIDestinationConnectorProperties_CustomerProfiles &customer_profiles);
    bool is_customer_profiles_Set() const;
    bool is_customer_profiles_Valid() const;

    OAIDestinationConnectorProperties_Zendesk getZendesk() const;
    void setZendesk(const OAIDestinationConnectorProperties_Zendesk &zendesk);
    bool is_zendesk_Set() const;
    bool is_zendesk_Valid() const;

    OAIDestinationConnectorProperties_Marketo getMarketo() const;
    void setMarketo(const OAIDestinationConnectorProperties_Marketo &marketo);
    bool is_marketo_Set() const;
    bool is_marketo_Valid() const;

    OAIDestinationConnectorProperties_CustomConnector getCustomConnector() const;
    void setCustomConnector(const OAIDestinationConnectorProperties_CustomConnector &custom_connector);
    bool is_custom_connector_Set() const;
    bool is_custom_connector_Valid() const;

    OAIDestinationConnectorProperties_SAPOData getSapoData() const;
    void setSapoData(const OAIDestinationConnectorProperties_SAPOData &sapo_data);
    bool is_sapo_data_Set() const;
    bool is_sapo_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDestinationConnectorProperties_Redshift m_redshift;
    bool m_redshift_isSet;
    bool m_redshift_isValid;

    OAIDestinationConnectorProperties_S3 m_s3;
    bool m_s3_isSet;
    bool m_s3_isValid;

    OAIDestinationConnectorProperties_Salesforce m_salesforce;
    bool m_salesforce_isSet;
    bool m_salesforce_isValid;

    OAIDestinationConnectorProperties_Snowflake m_snowflake;
    bool m_snowflake_isSet;
    bool m_snowflake_isValid;

    OAIDestinationConnectorProperties_EventBridge m_event_bridge;
    bool m_event_bridge_isSet;
    bool m_event_bridge_isValid;

    OAIObject m_lookout_metrics;
    bool m_lookout_metrics_isSet;
    bool m_lookout_metrics_isValid;

    OAIDestinationConnectorProperties_Upsolver m_upsolver;
    bool m_upsolver_isSet;
    bool m_upsolver_isValid;

    OAIDestinationConnectorProperties_Honeycode m_honeycode;
    bool m_honeycode_isSet;
    bool m_honeycode_isValid;

    OAIDestinationConnectorProperties_CustomerProfiles m_customer_profiles;
    bool m_customer_profiles_isSet;
    bool m_customer_profiles_isValid;

    OAIDestinationConnectorProperties_Zendesk m_zendesk;
    bool m_zendesk_isSet;
    bool m_zendesk_isValid;

    OAIDestinationConnectorProperties_Marketo m_marketo;
    bool m_marketo_isSet;
    bool m_marketo_isValid;

    OAIDestinationConnectorProperties_CustomConnector m_custom_connector;
    bool m_custom_connector_isSet;
    bool m_custom_connector_isValid;

    OAIDestinationConnectorProperties_SAPOData m_sapo_data;
    bool m_sapo_data_isSet;
    bool m_sapo_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDestinationFlowConfig_destinationConnectorProperties)

#endif // OAIDestinationFlowConfig_destinationConnectorProperties_H
