/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeConnectorEntityRequest.h
 *
 * 
 */

#ifndef OAIDescribeConnectorEntityRequest_H
#define OAIDescribeConnectorEntityRequest_H

#include <QJsonObject>

#include "OAIConnectorType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeConnectorEntityRequest : public OAIObject {
public:
    OAIDescribeConnectorEntityRequest();
    OAIDescribeConnectorEntityRequest(QString json);
    ~OAIDescribeConnectorEntityRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConnectorEntityName() const;
    void setConnectorEntityName(const QString &connector_entity_name);
    bool is_connector_entity_name_Set() const;
    bool is_connector_entity_name_Valid() const;

    OAIConnectorType getConnectorType() const;
    void setConnectorType(const OAIConnectorType &connector_type);
    bool is_connector_type_Set() const;
    bool is_connector_type_Valid() const;

    QString getConnectorProfileName() const;
    void setConnectorProfileName(const QString &connector_profile_name);
    bool is_connector_profile_name_Set() const;
    bool is_connector_profile_name_Valid() const;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_connector_entity_name;
    bool m_connector_entity_name_isSet;
    bool m_connector_entity_name_isValid;

    OAIConnectorType m_connector_type;
    bool m_connector_type_isSet;
    bool m_connector_type_isValid;

    QString m_connector_profile_name;
    bool m_connector_profile_name_isSet;
    bool m_connector_profile_name_isValid;

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeConnectorEntityRequest)

#endif // OAIDescribeConnectorEntityRequest_H
