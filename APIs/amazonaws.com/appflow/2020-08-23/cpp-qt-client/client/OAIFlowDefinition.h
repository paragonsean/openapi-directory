/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlowDefinition.h
 *
 *  The properties of the flow, such as its source, destination, trigger type, and so on. 
 */

#ifndef OAIFlowDefinition_H
#define OAIFlowDefinition_H

#include <QJsonObject>

#include "OAIConnectorType.h"
#include "OAIDescribeFlowResponse_lastRunExecutionDetails.h"
#include "OAIFlowStatus.h"
#include "OAITriggerType.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeFlowResponse_lastRunExecutionDetails;

class OAIFlowDefinition : public OAIObject {
public:
    OAIFlowDefinition();
    OAIFlowDefinition(QString json);
    ~OAIFlowDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFlowArn() const;
    void setFlowArn(const QString &flow_arn);
    bool is_flow_arn_Set() const;
    bool is_flow_arn_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFlowName() const;
    void setFlowName(const QString &flow_name);
    bool is_flow_name_Set() const;
    bool is_flow_name_Valid() const;

    OAIFlowStatus getFlowStatus() const;
    void setFlowStatus(const OAIFlowStatus &flow_status);
    bool is_flow_status_Set() const;
    bool is_flow_status_Valid() const;

    OAIConnectorType getSourceConnectorType() const;
    void setSourceConnectorType(const OAIConnectorType &source_connector_type);
    bool is_source_connector_type_Set() const;
    bool is_source_connector_type_Valid() const;

    QString getSourceConnectorLabel() const;
    void setSourceConnectorLabel(const QString &source_connector_label);
    bool is_source_connector_label_Set() const;
    bool is_source_connector_label_Valid() const;

    OAIConnectorType getDestinationConnectorType() const;
    void setDestinationConnectorType(const OAIConnectorType &destination_connector_type);
    bool is_destination_connector_type_Set() const;
    bool is_destination_connector_type_Valid() const;

    QString getDestinationConnectorLabel() const;
    void setDestinationConnectorLabel(const QString &destination_connector_label);
    bool is_destination_connector_label_Set() const;
    bool is_destination_connector_label_Valid() const;

    OAITriggerType getTriggerType() const;
    void setTriggerType(const OAITriggerType &trigger_type);
    bool is_trigger_type_Set() const;
    bool is_trigger_type_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getLastUpdatedAt() const;
    void setLastUpdatedAt(const QDateTime &last_updated_at);
    bool is_last_updated_at_Set() const;
    bool is_last_updated_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QString getLastUpdatedBy() const;
    void setLastUpdatedBy(const QString &last_updated_by);
    bool is_last_updated_by_Set() const;
    bool is_last_updated_by_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIDescribeFlowResponse_lastRunExecutionDetails getLastRunExecutionDetails() const;
    void setLastRunExecutionDetails(const OAIDescribeFlowResponse_lastRunExecutionDetails &last_run_execution_details);
    bool is_last_run_execution_details_Set() const;
    bool is_last_run_execution_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_flow_arn;
    bool m_flow_arn_isSet;
    bool m_flow_arn_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_flow_name;
    bool m_flow_name_isSet;
    bool m_flow_name_isValid;

    OAIFlowStatus m_flow_status;
    bool m_flow_status_isSet;
    bool m_flow_status_isValid;

    OAIConnectorType m_source_connector_type;
    bool m_source_connector_type_isSet;
    bool m_source_connector_type_isValid;

    QString m_source_connector_label;
    bool m_source_connector_label_isSet;
    bool m_source_connector_label_isValid;

    OAIConnectorType m_destination_connector_type;
    bool m_destination_connector_type_isSet;
    bool m_destination_connector_type_isValid;

    QString m_destination_connector_label;
    bool m_destination_connector_label_isSet;
    bool m_destination_connector_label_isValid;

    OAITriggerType m_trigger_type;
    bool m_trigger_type_isSet;
    bool m_trigger_type_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_last_updated_at;
    bool m_last_updated_at_isSet;
    bool m_last_updated_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QString m_last_updated_by;
    bool m_last_updated_by_isSet;
    bool m_last_updated_by_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIDescribeFlowResponse_lastRunExecutionDetails m_last_run_execution_details;
    bool m_last_run_execution_details_isSet;
    bool m_last_run_execution_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlowDefinition)

#endif // OAIFlowDefinition_H
