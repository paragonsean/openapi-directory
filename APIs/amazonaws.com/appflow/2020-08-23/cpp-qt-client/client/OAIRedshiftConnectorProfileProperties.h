/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRedshiftConnectorProfileProperties.h
 *
 *  The connector-specific profile properties when using Amazon Redshift. 
 */

#ifndef OAIRedshiftConnectorProfileProperties_H
#define OAIRedshiftConnectorProfileProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRedshiftConnectorProfileProperties : public OAIObject {
public:
    OAIRedshiftConnectorProfileProperties();
    OAIRedshiftConnectorProfileProperties(QString json);
    ~OAIRedshiftConnectorProfileProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatabaseUrl() const;
    void setDatabaseUrl(const QString &database_url);
    bool is_database_url_Set() const;
    bool is_database_url_Valid() const;

    QString getBucketName() const;
    void setBucketName(const QString &bucket_name);
    bool is_bucket_name_Set() const;
    bool is_bucket_name_Valid() const;

    QString getBucketPrefix() const;
    void setBucketPrefix(const QString &bucket_prefix);
    bool is_bucket_prefix_Set() const;
    bool is_bucket_prefix_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getDataApiRoleArn() const;
    void setDataApiRoleArn(const QString &data_api_role_arn);
    bool is_data_api_role_arn_Set() const;
    bool is_data_api_role_arn_Valid() const;

    bool getIsRedshiftServerless() const;
    void setIsRedshiftServerless(const bool &is_redshift_serverless);
    bool is_is_redshift_serverless_Set() const;
    bool is_is_redshift_serverless_Valid() const;

    QString getClusterIdentifier() const;
    void setClusterIdentifier(const QString &cluster_identifier);
    bool is_cluster_identifier_Set() const;
    bool is_cluster_identifier_Valid() const;

    QString getWorkgroupName() const;
    void setWorkgroupName(const QString &workgroup_name);
    bool is_workgroup_name_Set() const;
    bool is_workgroup_name_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_database_url;
    bool m_database_url_isSet;
    bool m_database_url_isValid;

    QString m_bucket_name;
    bool m_bucket_name_isSet;
    bool m_bucket_name_isValid;

    QString m_bucket_prefix;
    bool m_bucket_prefix_isSet;
    bool m_bucket_prefix_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_data_api_role_arn;
    bool m_data_api_role_arn_isSet;
    bool m_data_api_role_arn_isValid;

    bool m_is_redshift_serverless;
    bool m_is_redshift_serverless_isSet;
    bool m_is_redshift_serverless_isValid;

    QString m_cluster_identifier;
    bool m_cluster_identifier_isSet;
    bool m_cluster_identifier_isValid;

    QString m_workgroup_name;
    bool m_workgroup_name_isSet;
    bool m_workgroup_name_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRedshiftConnectorProfileProperties)

#endif // OAIRedshiftConnectorProfileProperties_H
