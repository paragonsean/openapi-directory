# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connector_configuration_authentication_config import ConnectorConfigurationAuthenticationConfig
from openapi_server.models.connector_configuration_connector_metadata import ConnectorConfigurationConnectorMetadata
from openapi_server.models.connector_configuration_connector_provisioning_config import ConnectorConfigurationConnectorProvisioningConfig
from openapi_server.models.connector_provisioning_type import ConnectorProvisioningType
from openapi_server.models.connector_type import ConnectorType
from openapi_server import util


class DescribeConnectorResponseConnectorConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_use_as_source: bool=None, can_use_as_destination: bool=None, supported_destination_connectors: List=None, supported_scheduling_frequencies: List=None, is_private_link_enabled: bool=None, is_private_link_endpoint_url_required: bool=None, supported_trigger_types: List=None, connector_metadata: ConnectorConfigurationConnectorMetadata=None, connector_type: ConnectorType=None, connector_label: str=None, connector_description: str=None, connector_owner: str=None, connector_name: str=None, connector_version: str=None, connector_arn: str=None, connector_modes: List=None, authentication_config: ConnectorConfigurationAuthenticationConfig=None, connector_runtime_settings: List=None, supported_api_versions: List=None, supported_operators: List=None, supported_write_operations: List=None, connector_provisioning_type: ConnectorProvisioningType=None, connector_provisioning_config: ConnectorConfigurationConnectorProvisioningConfig=None, logo_url: str=None, registered_at: datetime=None, registered_by: str=None, supported_data_transfer_types: List=None, supported_data_transfer_apis: List=None):
        """DescribeConnectorResponseConnectorConfiguration - a model defined in OpenAPI

        :param can_use_as_source: The can_use_as_source of this DescribeConnectorResponseConnectorConfiguration.
        :param can_use_as_destination: The can_use_as_destination of this DescribeConnectorResponseConnectorConfiguration.
        :param supported_destination_connectors: The supported_destination_connectors of this DescribeConnectorResponseConnectorConfiguration.
        :param supported_scheduling_frequencies: The supported_scheduling_frequencies of this DescribeConnectorResponseConnectorConfiguration.
        :param is_private_link_enabled: The is_private_link_enabled of this DescribeConnectorResponseConnectorConfiguration.
        :param is_private_link_endpoint_url_required: The is_private_link_endpoint_url_required of this DescribeConnectorResponseConnectorConfiguration.
        :param supported_trigger_types: The supported_trigger_types of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_metadata: The connector_metadata of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_type: The connector_type of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_label: The connector_label of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_description: The connector_description of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_owner: The connector_owner of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_name: The connector_name of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_version: The connector_version of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_arn: The connector_arn of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_modes: The connector_modes of this DescribeConnectorResponseConnectorConfiguration.
        :param authentication_config: The authentication_config of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_runtime_settings: The connector_runtime_settings of this DescribeConnectorResponseConnectorConfiguration.
        :param supported_api_versions: The supported_api_versions of this DescribeConnectorResponseConnectorConfiguration.
        :param supported_operators: The supported_operators of this DescribeConnectorResponseConnectorConfiguration.
        :param supported_write_operations: The supported_write_operations of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_provisioning_type: The connector_provisioning_type of this DescribeConnectorResponseConnectorConfiguration.
        :param connector_provisioning_config: The connector_provisioning_config of this DescribeConnectorResponseConnectorConfiguration.
        :param logo_url: The logo_url of this DescribeConnectorResponseConnectorConfiguration.
        :param registered_at: The registered_at of this DescribeConnectorResponseConnectorConfiguration.
        :param registered_by: The registered_by of this DescribeConnectorResponseConnectorConfiguration.
        :param supported_data_transfer_types: The supported_data_transfer_types of this DescribeConnectorResponseConnectorConfiguration.
        :param supported_data_transfer_apis: The supported_data_transfer_apis of this DescribeConnectorResponseConnectorConfiguration.
        """
        self.openapi_types = {
            'can_use_as_source': bool,
            'can_use_as_destination': bool,
            'supported_destination_connectors': List,
            'supported_scheduling_frequencies': List,
            'is_private_link_enabled': bool,
            'is_private_link_endpoint_url_required': bool,
            'supported_trigger_types': List,
            'connector_metadata': ConnectorConfigurationConnectorMetadata,
            'connector_type': ConnectorType,
            'connector_label': str,
            'connector_description': str,
            'connector_owner': str,
            'connector_name': str,
            'connector_version': str,
            'connector_arn': str,
            'connector_modes': List,
            'authentication_config': ConnectorConfigurationAuthenticationConfig,
            'connector_runtime_settings': List,
            'supported_api_versions': List,
            'supported_operators': List,
            'supported_write_operations': List,
            'connector_provisioning_type': ConnectorProvisioningType,
            'connector_provisioning_config': ConnectorConfigurationConnectorProvisioningConfig,
            'logo_url': str,
            'registered_at': datetime,
            'registered_by': str,
            'supported_data_transfer_types': List,
            'supported_data_transfer_apis': List
        }

        self.attribute_map = {
            'can_use_as_source': 'canUseAsSource',
            'can_use_as_destination': 'canUseAsDestination',
            'supported_destination_connectors': 'supportedDestinationConnectors',
            'supported_scheduling_frequencies': 'supportedSchedulingFrequencies',
            'is_private_link_enabled': 'isPrivateLinkEnabled',
            'is_private_link_endpoint_url_required': 'isPrivateLinkEndpointUrlRequired',
            'supported_trigger_types': 'supportedTriggerTypes',
            'connector_metadata': 'connectorMetadata',
            'connector_type': 'connectorType',
            'connector_label': 'connectorLabel',
            'connector_description': 'connectorDescription',
            'connector_owner': 'connectorOwner',
            'connector_name': 'connectorName',
            'connector_version': 'connectorVersion',
            'connector_arn': 'connectorArn',
            'connector_modes': 'connectorModes',
            'authentication_config': 'authenticationConfig',
            'connector_runtime_settings': 'connectorRuntimeSettings',
            'supported_api_versions': 'supportedApiVersions',
            'supported_operators': 'supportedOperators',
            'supported_write_operations': 'supportedWriteOperations',
            'connector_provisioning_type': 'connectorProvisioningType',
            'connector_provisioning_config': 'connectorProvisioningConfig',
            'logo_url': 'logoURL',
            'registered_at': 'registeredAt',
            'registered_by': 'registeredBy',
            'supported_data_transfer_types': 'supportedDataTransferTypes',
            'supported_data_transfer_apis': 'supportedDataTransferApis'
        }

        self._can_use_as_source = can_use_as_source
        self._can_use_as_destination = can_use_as_destination
        self._supported_destination_connectors = supported_destination_connectors
        self._supported_scheduling_frequencies = supported_scheduling_frequencies
        self._is_private_link_enabled = is_private_link_enabled
        self._is_private_link_endpoint_url_required = is_private_link_endpoint_url_required
        self._supported_trigger_types = supported_trigger_types
        self._connector_metadata = connector_metadata
        self._connector_type = connector_type
        self._connector_label = connector_label
        self._connector_description = connector_description
        self._connector_owner = connector_owner
        self._connector_name = connector_name
        self._connector_version = connector_version
        self._connector_arn = connector_arn
        self._connector_modes = connector_modes
        self._authentication_config = authentication_config
        self._connector_runtime_settings = connector_runtime_settings
        self._supported_api_versions = supported_api_versions
        self._supported_operators = supported_operators
        self._supported_write_operations = supported_write_operations
        self._connector_provisioning_type = connector_provisioning_type
        self._connector_provisioning_config = connector_provisioning_config
        self._logo_url = logo_url
        self._registered_at = registered_at
        self._registered_by = registered_by
        self._supported_data_transfer_types = supported_data_transfer_types
        self._supported_data_transfer_apis = supported_data_transfer_apis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeConnectorResponseConnectorConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeConnectorResponse_connectorConfiguration of this DescribeConnectorResponseConnectorConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_use_as_source(self):
        """Gets the can_use_as_source of this DescribeConnectorResponseConnectorConfiguration.


        :return: The can_use_as_source of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: bool
        """
        return self._can_use_as_source

    @can_use_as_source.setter
    def can_use_as_source(self, can_use_as_source):
        """Sets the can_use_as_source of this DescribeConnectorResponseConnectorConfiguration.


        :param can_use_as_source: The can_use_as_source of this DescribeConnectorResponseConnectorConfiguration.
        :type can_use_as_source: bool
        """

        self._can_use_as_source = can_use_as_source

    @property
    def can_use_as_destination(self):
        """Gets the can_use_as_destination of this DescribeConnectorResponseConnectorConfiguration.


        :return: The can_use_as_destination of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: bool
        """
        return self._can_use_as_destination

    @can_use_as_destination.setter
    def can_use_as_destination(self, can_use_as_destination):
        """Sets the can_use_as_destination of this DescribeConnectorResponseConnectorConfiguration.


        :param can_use_as_destination: The can_use_as_destination of this DescribeConnectorResponseConnectorConfiguration.
        :type can_use_as_destination: bool
        """

        self._can_use_as_destination = can_use_as_destination

    @property
    def supported_destination_connectors(self):
        """Gets the supported_destination_connectors of this DescribeConnectorResponseConnectorConfiguration.


        :return: The supported_destination_connectors of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._supported_destination_connectors

    @supported_destination_connectors.setter
    def supported_destination_connectors(self, supported_destination_connectors):
        """Sets the supported_destination_connectors of this DescribeConnectorResponseConnectorConfiguration.


        :param supported_destination_connectors: The supported_destination_connectors of this DescribeConnectorResponseConnectorConfiguration.
        :type supported_destination_connectors: List
        """

        self._supported_destination_connectors = supported_destination_connectors

    @property
    def supported_scheduling_frequencies(self):
        """Gets the supported_scheduling_frequencies of this DescribeConnectorResponseConnectorConfiguration.


        :return: The supported_scheduling_frequencies of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._supported_scheduling_frequencies

    @supported_scheduling_frequencies.setter
    def supported_scheduling_frequencies(self, supported_scheduling_frequencies):
        """Sets the supported_scheduling_frequencies of this DescribeConnectorResponseConnectorConfiguration.


        :param supported_scheduling_frequencies: The supported_scheduling_frequencies of this DescribeConnectorResponseConnectorConfiguration.
        :type supported_scheduling_frequencies: List
        """

        self._supported_scheduling_frequencies = supported_scheduling_frequencies

    @property
    def is_private_link_enabled(self):
        """Gets the is_private_link_enabled of this DescribeConnectorResponseConnectorConfiguration.


        :return: The is_private_link_enabled of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: bool
        """
        return self._is_private_link_enabled

    @is_private_link_enabled.setter
    def is_private_link_enabled(self, is_private_link_enabled):
        """Sets the is_private_link_enabled of this DescribeConnectorResponseConnectorConfiguration.


        :param is_private_link_enabled: The is_private_link_enabled of this DescribeConnectorResponseConnectorConfiguration.
        :type is_private_link_enabled: bool
        """

        self._is_private_link_enabled = is_private_link_enabled

    @property
    def is_private_link_endpoint_url_required(self):
        """Gets the is_private_link_endpoint_url_required of this DescribeConnectorResponseConnectorConfiguration.


        :return: The is_private_link_endpoint_url_required of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: bool
        """
        return self._is_private_link_endpoint_url_required

    @is_private_link_endpoint_url_required.setter
    def is_private_link_endpoint_url_required(self, is_private_link_endpoint_url_required):
        """Sets the is_private_link_endpoint_url_required of this DescribeConnectorResponseConnectorConfiguration.


        :param is_private_link_endpoint_url_required: The is_private_link_endpoint_url_required of this DescribeConnectorResponseConnectorConfiguration.
        :type is_private_link_endpoint_url_required: bool
        """

        self._is_private_link_endpoint_url_required = is_private_link_endpoint_url_required

    @property
    def supported_trigger_types(self):
        """Gets the supported_trigger_types of this DescribeConnectorResponseConnectorConfiguration.


        :return: The supported_trigger_types of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._supported_trigger_types

    @supported_trigger_types.setter
    def supported_trigger_types(self, supported_trigger_types):
        """Sets the supported_trigger_types of this DescribeConnectorResponseConnectorConfiguration.


        :param supported_trigger_types: The supported_trigger_types of this DescribeConnectorResponseConnectorConfiguration.
        :type supported_trigger_types: List
        """

        self._supported_trigger_types = supported_trigger_types

    @property
    def connector_metadata(self):
        """Gets the connector_metadata of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_metadata of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: ConnectorConfigurationConnectorMetadata
        """
        return self._connector_metadata

    @connector_metadata.setter
    def connector_metadata(self, connector_metadata):
        """Sets the connector_metadata of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_metadata: The connector_metadata of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_metadata: ConnectorConfigurationConnectorMetadata
        """

        self._connector_metadata = connector_metadata

    @property
    def connector_type(self):
        """Gets the connector_type of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_type of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: ConnectorType
        """
        return self._connector_type

    @connector_type.setter
    def connector_type(self, connector_type):
        """Sets the connector_type of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_type: The connector_type of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_type: ConnectorType
        """

        self._connector_type = connector_type

    @property
    def connector_label(self):
        """Gets the connector_label of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_label of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: str
        """
        return self._connector_label

    @connector_label.setter
    def connector_label(self, connector_label):
        """Sets the connector_label of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_label: The connector_label of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_label: str
        """

        self._connector_label = connector_label

    @property
    def connector_description(self):
        """Gets the connector_description of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_description of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: str
        """
        return self._connector_description

    @connector_description.setter
    def connector_description(self, connector_description):
        """Sets the connector_description of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_description: The connector_description of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_description: str
        """

        self._connector_description = connector_description

    @property
    def connector_owner(self):
        """Gets the connector_owner of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_owner of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: str
        """
        return self._connector_owner

    @connector_owner.setter
    def connector_owner(self, connector_owner):
        """Sets the connector_owner of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_owner: The connector_owner of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_owner: str
        """

        self._connector_owner = connector_owner

    @property
    def connector_name(self):
        """Gets the connector_name of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_name of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: str
        """
        return self._connector_name

    @connector_name.setter
    def connector_name(self, connector_name):
        """Sets the connector_name of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_name: The connector_name of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_name: str
        """

        self._connector_name = connector_name

    @property
    def connector_version(self):
        """Gets the connector_version of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_version of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: str
        """
        return self._connector_version

    @connector_version.setter
    def connector_version(self, connector_version):
        """Sets the connector_version of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_version: The connector_version of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_version: str
        """

        self._connector_version = connector_version

    @property
    def connector_arn(self):
        """Gets the connector_arn of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_arn of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: str
        """
        return self._connector_arn

    @connector_arn.setter
    def connector_arn(self, connector_arn):
        """Sets the connector_arn of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_arn: The connector_arn of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_arn: str
        """

        self._connector_arn = connector_arn

    @property
    def connector_modes(self):
        """Gets the connector_modes of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_modes of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._connector_modes

    @connector_modes.setter
    def connector_modes(self, connector_modes):
        """Sets the connector_modes of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_modes: The connector_modes of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_modes: List
        """

        self._connector_modes = connector_modes

    @property
    def authentication_config(self):
        """Gets the authentication_config of this DescribeConnectorResponseConnectorConfiguration.


        :return: The authentication_config of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: ConnectorConfigurationAuthenticationConfig
        """
        return self._authentication_config

    @authentication_config.setter
    def authentication_config(self, authentication_config):
        """Sets the authentication_config of this DescribeConnectorResponseConnectorConfiguration.


        :param authentication_config: The authentication_config of this DescribeConnectorResponseConnectorConfiguration.
        :type authentication_config: ConnectorConfigurationAuthenticationConfig
        """

        self._authentication_config = authentication_config

    @property
    def connector_runtime_settings(self):
        """Gets the connector_runtime_settings of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_runtime_settings of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._connector_runtime_settings

    @connector_runtime_settings.setter
    def connector_runtime_settings(self, connector_runtime_settings):
        """Sets the connector_runtime_settings of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_runtime_settings: The connector_runtime_settings of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_runtime_settings: List
        """

        self._connector_runtime_settings = connector_runtime_settings

    @property
    def supported_api_versions(self):
        """Gets the supported_api_versions of this DescribeConnectorResponseConnectorConfiguration.


        :return: The supported_api_versions of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._supported_api_versions

    @supported_api_versions.setter
    def supported_api_versions(self, supported_api_versions):
        """Sets the supported_api_versions of this DescribeConnectorResponseConnectorConfiguration.


        :param supported_api_versions: The supported_api_versions of this DescribeConnectorResponseConnectorConfiguration.
        :type supported_api_versions: List
        """

        self._supported_api_versions = supported_api_versions

    @property
    def supported_operators(self):
        """Gets the supported_operators of this DescribeConnectorResponseConnectorConfiguration.


        :return: The supported_operators of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._supported_operators

    @supported_operators.setter
    def supported_operators(self, supported_operators):
        """Sets the supported_operators of this DescribeConnectorResponseConnectorConfiguration.


        :param supported_operators: The supported_operators of this DescribeConnectorResponseConnectorConfiguration.
        :type supported_operators: List
        """

        self._supported_operators = supported_operators

    @property
    def supported_write_operations(self):
        """Gets the supported_write_operations of this DescribeConnectorResponseConnectorConfiguration.


        :return: The supported_write_operations of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._supported_write_operations

    @supported_write_operations.setter
    def supported_write_operations(self, supported_write_operations):
        """Sets the supported_write_operations of this DescribeConnectorResponseConnectorConfiguration.


        :param supported_write_operations: The supported_write_operations of this DescribeConnectorResponseConnectorConfiguration.
        :type supported_write_operations: List
        """

        self._supported_write_operations = supported_write_operations

    @property
    def connector_provisioning_type(self):
        """Gets the connector_provisioning_type of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_provisioning_type of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: ConnectorProvisioningType
        """
        return self._connector_provisioning_type

    @connector_provisioning_type.setter
    def connector_provisioning_type(self, connector_provisioning_type):
        """Sets the connector_provisioning_type of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_provisioning_type: The connector_provisioning_type of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_provisioning_type: ConnectorProvisioningType
        """

        self._connector_provisioning_type = connector_provisioning_type

    @property
    def connector_provisioning_config(self):
        """Gets the connector_provisioning_config of this DescribeConnectorResponseConnectorConfiguration.


        :return: The connector_provisioning_config of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: ConnectorConfigurationConnectorProvisioningConfig
        """
        return self._connector_provisioning_config

    @connector_provisioning_config.setter
    def connector_provisioning_config(self, connector_provisioning_config):
        """Sets the connector_provisioning_config of this DescribeConnectorResponseConnectorConfiguration.


        :param connector_provisioning_config: The connector_provisioning_config of this DescribeConnectorResponseConnectorConfiguration.
        :type connector_provisioning_config: ConnectorConfigurationConnectorProvisioningConfig
        """

        self._connector_provisioning_config = connector_provisioning_config

    @property
    def logo_url(self):
        """Gets the logo_url of this DescribeConnectorResponseConnectorConfiguration.


        :return: The logo_url of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: str
        """
        return self._logo_url

    @logo_url.setter
    def logo_url(self, logo_url):
        """Sets the logo_url of this DescribeConnectorResponseConnectorConfiguration.


        :param logo_url: The logo_url of this DescribeConnectorResponseConnectorConfiguration.
        :type logo_url: str
        """

        self._logo_url = logo_url

    @property
    def registered_at(self):
        """Gets the registered_at of this DescribeConnectorResponseConnectorConfiguration.


        :return: The registered_at of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: datetime
        """
        return self._registered_at

    @registered_at.setter
    def registered_at(self, registered_at):
        """Sets the registered_at of this DescribeConnectorResponseConnectorConfiguration.


        :param registered_at: The registered_at of this DescribeConnectorResponseConnectorConfiguration.
        :type registered_at: datetime
        """

        self._registered_at = registered_at

    @property
    def registered_by(self):
        """Gets the registered_by of this DescribeConnectorResponseConnectorConfiguration.


        :return: The registered_by of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: str
        """
        return self._registered_by

    @registered_by.setter
    def registered_by(self, registered_by):
        """Sets the registered_by of this DescribeConnectorResponseConnectorConfiguration.


        :param registered_by: The registered_by of this DescribeConnectorResponseConnectorConfiguration.
        :type registered_by: str
        """

        self._registered_by = registered_by

    @property
    def supported_data_transfer_types(self):
        """Gets the supported_data_transfer_types of this DescribeConnectorResponseConnectorConfiguration.


        :return: The supported_data_transfer_types of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._supported_data_transfer_types

    @supported_data_transfer_types.setter
    def supported_data_transfer_types(self, supported_data_transfer_types):
        """Sets the supported_data_transfer_types of this DescribeConnectorResponseConnectorConfiguration.


        :param supported_data_transfer_types: The supported_data_transfer_types of this DescribeConnectorResponseConnectorConfiguration.
        :type supported_data_transfer_types: List
        """

        self._supported_data_transfer_types = supported_data_transfer_types

    @property
    def supported_data_transfer_apis(self):
        """Gets the supported_data_transfer_apis of this DescribeConnectorResponseConnectorConfiguration.


        :return: The supported_data_transfer_apis of this DescribeConnectorResponseConnectorConfiguration.
        :rtype: List
        """
        return self._supported_data_transfer_apis

    @supported_data_transfer_apis.setter
    def supported_data_transfer_apis(self, supported_data_transfer_apis):
        """Sets the supported_data_transfer_apis of this DescribeConnectorResponseConnectorConfiguration.


        :param supported_data_transfer_apis: The supported_data_transfer_apis of this DescribeConnectorResponseConnectorConfiguration.
        :type supported_data_transfer_apis: List
        """

        self._supported_data_transfer_apis = supported_data_transfer_apis
