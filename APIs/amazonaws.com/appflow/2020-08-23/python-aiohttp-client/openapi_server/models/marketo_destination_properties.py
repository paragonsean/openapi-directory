# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error_handling_config import ErrorHandlingConfig
from openapi_server import util


class MarketoDestinationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object: str=None, error_handling_config: ErrorHandlingConfig=None):
        """MarketoDestinationProperties - a model defined in OpenAPI

        :param object: The object of this MarketoDestinationProperties.
        :param error_handling_config: The error_handling_config of this MarketoDestinationProperties.
        """
        self.openapi_types = {
            'object': str,
            'error_handling_config': ErrorHandlingConfig
        }

        self.attribute_map = {
            'object': 'object',
            'error_handling_config': 'errorHandlingConfig'
        }

        self._object = object
        self._error_handling_config = error_handling_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketoDestinationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MarketoDestinationProperties of this MarketoDestinationProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object(self):
        """Gets the object of this MarketoDestinationProperties.


        :return: The object of this MarketoDestinationProperties.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this MarketoDestinationProperties.


        :param object: The object of this MarketoDestinationProperties.
        :type object: str
        """
        if object is None:
            raise ValueError("Invalid value for `object`, must not be `None`")

        self._object = object

    @property
    def error_handling_config(self):
        """Gets the error_handling_config of this MarketoDestinationProperties.


        :return: The error_handling_config of this MarketoDestinationProperties.
        :rtype: ErrorHandlingConfig
        """
        return self._error_handling_config

    @error_handling_config.setter
    def error_handling_config(self, error_handling_config):
        """Sets the error_handling_config of this MarketoDestinationProperties.


        :param error_handling_config: The error_handling_config of this MarketoDestinationProperties.
        :type error_handling_config: ErrorHandlingConfig
        """

        self._error_handling_config = error_handling_config
