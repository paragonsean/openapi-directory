# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.execution_record_execution_result import ExecutionRecordExecutionResult
from openapi_server.models.execution_status import ExecutionStatus
from openapi_server import util


class ExecutionRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_id: str=None, execution_status: ExecutionStatus=None, execution_result: ExecutionRecordExecutionResult=None, started_at: datetime=None, last_updated_at: datetime=None, data_pull_start_time: datetime=None, data_pull_end_time: datetime=None, metadata_catalog_details: List=None):
        """ExecutionRecord - a model defined in OpenAPI

        :param execution_id: The execution_id of this ExecutionRecord.
        :param execution_status: The execution_status of this ExecutionRecord.
        :param execution_result: The execution_result of this ExecutionRecord.
        :param started_at: The started_at of this ExecutionRecord.
        :param last_updated_at: The last_updated_at of this ExecutionRecord.
        :param data_pull_start_time: The data_pull_start_time of this ExecutionRecord.
        :param data_pull_end_time: The data_pull_end_time of this ExecutionRecord.
        :param metadata_catalog_details: The metadata_catalog_details of this ExecutionRecord.
        """
        self.openapi_types = {
            'execution_id': str,
            'execution_status': ExecutionStatus,
            'execution_result': ExecutionRecordExecutionResult,
            'started_at': datetime,
            'last_updated_at': datetime,
            'data_pull_start_time': datetime,
            'data_pull_end_time': datetime,
            'metadata_catalog_details': List
        }

        self.attribute_map = {
            'execution_id': 'executionId',
            'execution_status': 'executionStatus',
            'execution_result': 'executionResult',
            'started_at': 'startedAt',
            'last_updated_at': 'lastUpdatedAt',
            'data_pull_start_time': 'dataPullStartTime',
            'data_pull_end_time': 'dataPullEndTime',
            'metadata_catalog_details': 'metadataCatalogDetails'
        }

        self._execution_id = execution_id
        self._execution_status = execution_status
        self._execution_result = execution_result
        self._started_at = started_at
        self._last_updated_at = last_updated_at
        self._data_pull_start_time = data_pull_start_time
        self._data_pull_end_time = data_pull_end_time
        self._metadata_catalog_details = metadata_catalog_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecutionRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecutionRecord of this ExecutionRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_id(self):
        """Gets the execution_id of this ExecutionRecord.


        :return: The execution_id of this ExecutionRecord.
        :rtype: str
        """
        return self._execution_id

    @execution_id.setter
    def execution_id(self, execution_id):
        """Sets the execution_id of this ExecutionRecord.


        :param execution_id: The execution_id of this ExecutionRecord.
        :type execution_id: str
        """

        self._execution_id = execution_id

    @property
    def execution_status(self):
        """Gets the execution_status of this ExecutionRecord.


        :return: The execution_status of this ExecutionRecord.
        :rtype: ExecutionStatus
        """
        return self._execution_status

    @execution_status.setter
    def execution_status(self, execution_status):
        """Sets the execution_status of this ExecutionRecord.


        :param execution_status: The execution_status of this ExecutionRecord.
        :type execution_status: ExecutionStatus
        """

        self._execution_status = execution_status

    @property
    def execution_result(self):
        """Gets the execution_result of this ExecutionRecord.


        :return: The execution_result of this ExecutionRecord.
        :rtype: ExecutionRecordExecutionResult
        """
        return self._execution_result

    @execution_result.setter
    def execution_result(self, execution_result):
        """Sets the execution_result of this ExecutionRecord.


        :param execution_result: The execution_result of this ExecutionRecord.
        :type execution_result: ExecutionRecordExecutionResult
        """

        self._execution_result = execution_result

    @property
    def started_at(self):
        """Gets the started_at of this ExecutionRecord.


        :return: The started_at of this ExecutionRecord.
        :rtype: datetime
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this ExecutionRecord.


        :param started_at: The started_at of this ExecutionRecord.
        :type started_at: datetime
        """

        self._started_at = started_at

    @property
    def last_updated_at(self):
        """Gets the last_updated_at of this ExecutionRecord.


        :return: The last_updated_at of this ExecutionRecord.
        :rtype: datetime
        """
        return self._last_updated_at

    @last_updated_at.setter
    def last_updated_at(self, last_updated_at):
        """Sets the last_updated_at of this ExecutionRecord.


        :param last_updated_at: The last_updated_at of this ExecutionRecord.
        :type last_updated_at: datetime
        """

        self._last_updated_at = last_updated_at

    @property
    def data_pull_start_time(self):
        """Gets the data_pull_start_time of this ExecutionRecord.


        :return: The data_pull_start_time of this ExecutionRecord.
        :rtype: datetime
        """
        return self._data_pull_start_time

    @data_pull_start_time.setter
    def data_pull_start_time(self, data_pull_start_time):
        """Sets the data_pull_start_time of this ExecutionRecord.


        :param data_pull_start_time: The data_pull_start_time of this ExecutionRecord.
        :type data_pull_start_time: datetime
        """

        self._data_pull_start_time = data_pull_start_time

    @property
    def data_pull_end_time(self):
        """Gets the data_pull_end_time of this ExecutionRecord.


        :return: The data_pull_end_time of this ExecutionRecord.
        :rtype: datetime
        """
        return self._data_pull_end_time

    @data_pull_end_time.setter
    def data_pull_end_time(self, data_pull_end_time):
        """Sets the data_pull_end_time of this ExecutionRecord.


        :param data_pull_end_time: The data_pull_end_time of this ExecutionRecord.
        :type data_pull_end_time: datetime
        """

        self._data_pull_end_time = data_pull_end_time

    @property
    def metadata_catalog_details(self):
        """Gets the metadata_catalog_details of this ExecutionRecord.


        :return: The metadata_catalog_details of this ExecutionRecord.
        :rtype: List
        """
        return self._metadata_catalog_details

    @metadata_catalog_details.setter
    def metadata_catalog_details(self, metadata_catalog_details):
        """Sets the metadata_catalog_details of this ExecutionRecord.


        :param metadata_catalog_details: The metadata_catalog_details of this ExecutionRecord.
        :type metadata_catalog_details: List
        """

        self._metadata_catalog_details = metadata_catalog_details
