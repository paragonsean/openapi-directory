# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectorProfilePropertiesSalesforce(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_url: str=None, is_sandbox_environment: bool=None, use_private_link_for_metadata_and_authorization: bool=None):
        """ConnectorProfilePropertiesSalesforce - a model defined in OpenAPI

        :param instance_url: The instance_url of this ConnectorProfilePropertiesSalesforce.
        :param is_sandbox_environment: The is_sandbox_environment of this ConnectorProfilePropertiesSalesforce.
        :param use_private_link_for_metadata_and_authorization: The use_private_link_for_metadata_and_authorization of this ConnectorProfilePropertiesSalesforce.
        """
        self.openapi_types = {
            'instance_url': str,
            'is_sandbox_environment': bool,
            'use_private_link_for_metadata_and_authorization': bool
        }

        self.attribute_map = {
            'instance_url': 'instanceUrl',
            'is_sandbox_environment': 'isSandboxEnvironment',
            'use_private_link_for_metadata_and_authorization': 'usePrivateLinkForMetadataAndAuthorization'
        }

        self._instance_url = instance_url
        self._is_sandbox_environment = is_sandbox_environment
        self._use_private_link_for_metadata_and_authorization = use_private_link_for_metadata_and_authorization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectorProfilePropertiesSalesforce':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectorProfileProperties_Salesforce of this ConnectorProfilePropertiesSalesforce.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_url(self):
        """Gets the instance_url of this ConnectorProfilePropertiesSalesforce.


        :return: The instance_url of this ConnectorProfilePropertiesSalesforce.
        :rtype: str
        """
        return self._instance_url

    @instance_url.setter
    def instance_url(self, instance_url):
        """Sets the instance_url of this ConnectorProfilePropertiesSalesforce.


        :param instance_url: The instance_url of this ConnectorProfilePropertiesSalesforce.
        :type instance_url: str
        """

        self._instance_url = instance_url

    @property
    def is_sandbox_environment(self):
        """Gets the is_sandbox_environment of this ConnectorProfilePropertiesSalesforce.


        :return: The is_sandbox_environment of this ConnectorProfilePropertiesSalesforce.
        :rtype: bool
        """
        return self._is_sandbox_environment

    @is_sandbox_environment.setter
    def is_sandbox_environment(self, is_sandbox_environment):
        """Sets the is_sandbox_environment of this ConnectorProfilePropertiesSalesforce.


        :param is_sandbox_environment: The is_sandbox_environment of this ConnectorProfilePropertiesSalesforce.
        :type is_sandbox_environment: bool
        """

        self._is_sandbox_environment = is_sandbox_environment

    @property
    def use_private_link_for_metadata_and_authorization(self):
        """Gets the use_private_link_for_metadata_and_authorization of this ConnectorProfilePropertiesSalesforce.


        :return: The use_private_link_for_metadata_and_authorization of this ConnectorProfilePropertiesSalesforce.
        :rtype: bool
        """
        return self._use_private_link_for_metadata_and_authorization

    @use_private_link_for_metadata_and_authorization.setter
    def use_private_link_for_metadata_and_authorization(self, use_private_link_for_metadata_and_authorization):
        """Sets the use_private_link_for_metadata_and_authorization of this ConnectorProfilePropertiesSalesforce.


        :param use_private_link_for_metadata_and_authorization: The use_private_link_for_metadata_and_authorization of this ConnectorProfilePropertiesSalesforce.
        :type use_private_link_for_metadata_and_authorization: bool
        """

        self._use_private_link_for_metadata_and_authorization = use_private_link_for_metadata_and_authorization
