# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.execution_status import ExecutionStatus
from openapi_server import util


class MetadataCatalogDetailPartitionRegistrationOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, result: str=None, status: ExecutionStatus=None):
        """MetadataCatalogDetailPartitionRegistrationOutput - a model defined in OpenAPI

        :param message: The message of this MetadataCatalogDetailPartitionRegistrationOutput.
        :param result: The result of this MetadataCatalogDetailPartitionRegistrationOutput.
        :param status: The status of this MetadataCatalogDetailPartitionRegistrationOutput.
        """
        self.openapi_types = {
            'message': str,
            'result': str,
            'status': ExecutionStatus
        }

        self.attribute_map = {
            'message': 'message',
            'result': 'result',
            'status': 'status'
        }

        self._message = message
        self._result = result
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetadataCatalogDetailPartitionRegistrationOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetadataCatalogDetail_partitionRegistrationOutput of this MetadataCatalogDetailPartitionRegistrationOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this MetadataCatalogDetailPartitionRegistrationOutput.


        :return: The message of this MetadataCatalogDetailPartitionRegistrationOutput.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this MetadataCatalogDetailPartitionRegistrationOutput.


        :param message: The message of this MetadataCatalogDetailPartitionRegistrationOutput.
        :type message: str
        """

        self._message = message

    @property
    def result(self):
        """Gets the result of this MetadataCatalogDetailPartitionRegistrationOutput.


        :return: The result of this MetadataCatalogDetailPartitionRegistrationOutput.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this MetadataCatalogDetailPartitionRegistrationOutput.


        :param result: The result of this MetadataCatalogDetailPartitionRegistrationOutput.
        :type result: str
        """

        self._result = result

    @property
    def status(self):
        """Gets the status of this MetadataCatalogDetailPartitionRegistrationOutput.


        :return: The status of this MetadataCatalogDetailPartitionRegistrationOutput.
        :rtype: ExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MetadataCatalogDetailPartitionRegistrationOutput.


        :param status: The status of this MetadataCatalogDetailPartitionRegistrationOutput.
        :type status: ExecutionStatus
        """

        self._status = status
