# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sapo_data_connector_profile_properties_o_auth_properties import SAPODataConnectorProfilePropertiesOAuthProperties
from openapi_server import util


class SAPODataConnectorProfileProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_host_url: str=None, application_service_path: str=None, port_number: int=None, client_number: str=None, logon_language: str=None, private_link_service_name: str=None, o_auth_properties: SAPODataConnectorProfilePropertiesOAuthProperties=None, disable_sso: bool=None):
        """SAPODataConnectorProfileProperties - a model defined in OpenAPI

        :param application_host_url: The application_host_url of this SAPODataConnectorProfileProperties.
        :param application_service_path: The application_service_path of this SAPODataConnectorProfileProperties.
        :param port_number: The port_number of this SAPODataConnectorProfileProperties.
        :param client_number: The client_number of this SAPODataConnectorProfileProperties.
        :param logon_language: The logon_language of this SAPODataConnectorProfileProperties.
        :param private_link_service_name: The private_link_service_name of this SAPODataConnectorProfileProperties.
        :param o_auth_properties: The o_auth_properties of this SAPODataConnectorProfileProperties.
        :param disable_sso: The disable_sso of this SAPODataConnectorProfileProperties.
        """
        self.openapi_types = {
            'application_host_url': str,
            'application_service_path': str,
            'port_number': int,
            'client_number': str,
            'logon_language': str,
            'private_link_service_name': str,
            'o_auth_properties': SAPODataConnectorProfilePropertiesOAuthProperties,
            'disable_sso': bool
        }

        self.attribute_map = {
            'application_host_url': 'applicationHostUrl',
            'application_service_path': 'applicationServicePath',
            'port_number': 'portNumber',
            'client_number': 'clientNumber',
            'logon_language': 'logonLanguage',
            'private_link_service_name': 'privateLinkServiceName',
            'o_auth_properties': 'oAuthProperties',
            'disable_sso': 'disableSSO'
        }

        self._application_host_url = application_host_url
        self._application_service_path = application_service_path
        self._port_number = port_number
        self._client_number = client_number
        self._logon_language = logon_language
        self._private_link_service_name = private_link_service_name
        self._o_auth_properties = o_auth_properties
        self._disable_sso = disable_sso

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SAPODataConnectorProfileProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SAPODataConnectorProfileProperties of this SAPODataConnectorProfileProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_host_url(self):
        """Gets the application_host_url of this SAPODataConnectorProfileProperties.


        :return: The application_host_url of this SAPODataConnectorProfileProperties.
        :rtype: str
        """
        return self._application_host_url

    @application_host_url.setter
    def application_host_url(self, application_host_url):
        """Sets the application_host_url of this SAPODataConnectorProfileProperties.


        :param application_host_url: The application_host_url of this SAPODataConnectorProfileProperties.
        :type application_host_url: str
        """
        if application_host_url is None:
            raise ValueError("Invalid value for `application_host_url`, must not be `None`")

        self._application_host_url = application_host_url

    @property
    def application_service_path(self):
        """Gets the application_service_path of this SAPODataConnectorProfileProperties.


        :return: The application_service_path of this SAPODataConnectorProfileProperties.
        :rtype: str
        """
        return self._application_service_path

    @application_service_path.setter
    def application_service_path(self, application_service_path):
        """Sets the application_service_path of this SAPODataConnectorProfileProperties.


        :param application_service_path: The application_service_path of this SAPODataConnectorProfileProperties.
        :type application_service_path: str
        """
        if application_service_path is None:
            raise ValueError("Invalid value for `application_service_path`, must not be `None`")

        self._application_service_path = application_service_path

    @property
    def port_number(self):
        """Gets the port_number of this SAPODataConnectorProfileProperties.


        :return: The port_number of this SAPODataConnectorProfileProperties.
        :rtype: int
        """
        return self._port_number

    @port_number.setter
    def port_number(self, port_number):
        """Sets the port_number of this SAPODataConnectorProfileProperties.


        :param port_number: The port_number of this SAPODataConnectorProfileProperties.
        :type port_number: int
        """
        if port_number is None:
            raise ValueError("Invalid value for `port_number`, must not be `None`")

        self._port_number = port_number

    @property
    def client_number(self):
        """Gets the client_number of this SAPODataConnectorProfileProperties.


        :return: The client_number of this SAPODataConnectorProfileProperties.
        :rtype: str
        """
        return self._client_number

    @client_number.setter
    def client_number(self, client_number):
        """Sets the client_number of this SAPODataConnectorProfileProperties.


        :param client_number: The client_number of this SAPODataConnectorProfileProperties.
        :type client_number: str
        """
        if client_number is None:
            raise ValueError("Invalid value for `client_number`, must not be `None`")

        self._client_number = client_number

    @property
    def logon_language(self):
        """Gets the logon_language of this SAPODataConnectorProfileProperties.


        :return: The logon_language of this SAPODataConnectorProfileProperties.
        :rtype: str
        """
        return self._logon_language

    @logon_language.setter
    def logon_language(self, logon_language):
        """Sets the logon_language of this SAPODataConnectorProfileProperties.


        :param logon_language: The logon_language of this SAPODataConnectorProfileProperties.
        :type logon_language: str
        """

        self._logon_language = logon_language

    @property
    def private_link_service_name(self):
        """Gets the private_link_service_name of this SAPODataConnectorProfileProperties.


        :return: The private_link_service_name of this SAPODataConnectorProfileProperties.
        :rtype: str
        """
        return self._private_link_service_name

    @private_link_service_name.setter
    def private_link_service_name(self, private_link_service_name):
        """Sets the private_link_service_name of this SAPODataConnectorProfileProperties.


        :param private_link_service_name: The private_link_service_name of this SAPODataConnectorProfileProperties.
        :type private_link_service_name: str
        """

        self._private_link_service_name = private_link_service_name

    @property
    def o_auth_properties(self):
        """Gets the o_auth_properties of this SAPODataConnectorProfileProperties.


        :return: The o_auth_properties of this SAPODataConnectorProfileProperties.
        :rtype: SAPODataConnectorProfilePropertiesOAuthProperties
        """
        return self._o_auth_properties

    @o_auth_properties.setter
    def o_auth_properties(self, o_auth_properties):
        """Sets the o_auth_properties of this SAPODataConnectorProfileProperties.


        :param o_auth_properties: The o_auth_properties of this SAPODataConnectorProfileProperties.
        :type o_auth_properties: SAPODataConnectorProfilePropertiesOAuthProperties
        """

        self._o_auth_properties = o_auth_properties

    @property
    def disable_sso(self):
        """Gets the disable_sso of this SAPODataConnectorProfileProperties.


        :return: The disable_sso of this SAPODataConnectorProfileProperties.
        :rtype: bool
        """
        return self._disable_sso

    @disable_sso.setter
    def disable_sso(self, disable_sso):
        """Sets the disable_sso of this SAPODataConnectorProfileProperties.


        :param disable_sso: The disable_sso of this SAPODataConnectorProfileProperties.
        :type disable_sso: bool
        """

        self._disable_sso = disable_sso
