# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MarketoConnectorProfileProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_url: str=None):
        """MarketoConnectorProfileProperties - a model defined in OpenAPI

        :param instance_url: The instance_url of this MarketoConnectorProfileProperties.
        """
        self.openapi_types = {
            'instance_url': str
        }

        self.attribute_map = {
            'instance_url': 'instanceUrl'
        }

        self._instance_url = instance_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketoConnectorProfileProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MarketoConnectorProfileProperties of this MarketoConnectorProfileProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_url(self):
        """Gets the instance_url of this MarketoConnectorProfileProperties.


        :return: The instance_url of this MarketoConnectorProfileProperties.
        :rtype: str
        """
        return self._instance_url

    @instance_url.setter
    def instance_url(self, instance_url):
        """Sets the instance_url of this MarketoConnectorProfileProperties.


        :param instance_url: The instance_url of this MarketoConnectorProfileProperties.
        :type instance_url: str
        """
        if instance_url is None:
            raise ValueError("Invalid value for `instance_url`, must not be `None`")

        self._instance_url = instance_url
