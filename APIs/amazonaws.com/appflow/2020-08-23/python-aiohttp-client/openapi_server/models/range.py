# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Range(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, maximum: float=None, minimum: float=None):
        """Range - a model defined in OpenAPI

        :param maximum: The maximum of this Range.
        :param minimum: The minimum of this Range.
        """
        self.openapi_types = {
            'maximum': float,
            'minimum': float
        }

        self.attribute_map = {
            'maximum': 'maximum',
            'minimum': 'minimum'
        }

        self._maximum = maximum
        self._minimum = minimum

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Range':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Range of this Range.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def maximum(self):
        """Gets the maximum of this Range.


        :return: The maximum of this Range.
        :rtype: float
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum):
        """Sets the maximum of this Range.


        :param maximum: The maximum of this Range.
        :type maximum: float
        """

        self._maximum = maximum

    @property
    def minimum(self):
        """Gets the minimum of this Range.


        :return: The minimum of this Range.
        :rtype: float
        """
        return self._minimum

    @minimum.setter
    def minimum(self, minimum):
        """Sets the minimum of this Range.


        :param minimum: The minimum of this Range.
        :type minimum: float
        """

        self._minimum = minimum
