# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectorMetadataSnowflake(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, supported_regions: List=None):
        """ConnectorMetadataSnowflake - a model defined in OpenAPI

        :param supported_regions: The supported_regions of this ConnectorMetadataSnowflake.
        """
        self.openapi_types = {
            'supported_regions': List
        }

        self.attribute_map = {
            'supported_regions': 'supportedRegions'
        }

        self._supported_regions = supported_regions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectorMetadataSnowflake':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectorMetadata_Snowflake of this ConnectorMetadataSnowflake.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def supported_regions(self):
        """Gets the supported_regions of this ConnectorMetadataSnowflake.


        :return: The supported_regions of this ConnectorMetadataSnowflake.
        :rtype: List
        """
        return self._supported_regions

    @supported_regions.setter
    def supported_regions(self, supported_regions):
        """Sets the supported_regions of this ConnectorMetadataSnowflake.


        :param supported_regions: The supported_regions of this ConnectorMetadataSnowflake.
        :type supported_regions: List
        """

        self._supported_regions = supported_regions
