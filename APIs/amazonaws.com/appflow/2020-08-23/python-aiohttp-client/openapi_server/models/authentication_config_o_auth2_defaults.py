# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuthenticationConfigOAuth2Defaults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, oauth_scopes: List=None, token_urls: List=None, auth_code_urls: List=None, oauth2_grant_types_supported: List=None, oauth2_custom_properties: List=None):
        """AuthenticationConfigOAuth2Defaults - a model defined in OpenAPI

        :param oauth_scopes: The oauth_scopes of this AuthenticationConfigOAuth2Defaults.
        :param token_urls: The token_urls of this AuthenticationConfigOAuth2Defaults.
        :param auth_code_urls: The auth_code_urls of this AuthenticationConfigOAuth2Defaults.
        :param oauth2_grant_types_supported: The oauth2_grant_types_supported of this AuthenticationConfigOAuth2Defaults.
        :param oauth2_custom_properties: The oauth2_custom_properties of this AuthenticationConfigOAuth2Defaults.
        """
        self.openapi_types = {
            'oauth_scopes': List,
            'token_urls': List,
            'auth_code_urls': List,
            'oauth2_grant_types_supported': List,
            'oauth2_custom_properties': List
        }

        self.attribute_map = {
            'oauth_scopes': 'oauthScopes',
            'token_urls': 'tokenUrls',
            'auth_code_urls': 'authCodeUrls',
            'oauth2_grant_types_supported': 'oauth2GrantTypesSupported',
            'oauth2_custom_properties': 'oauth2CustomProperties'
        }

        self._oauth_scopes = oauth_scopes
        self._token_urls = token_urls
        self._auth_code_urls = auth_code_urls
        self._oauth2_grant_types_supported = oauth2_grant_types_supported
        self._oauth2_custom_properties = oauth2_custom_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthenticationConfigOAuth2Defaults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthenticationConfig_oAuth2Defaults of this AuthenticationConfigOAuth2Defaults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oauth_scopes(self):
        """Gets the oauth_scopes of this AuthenticationConfigOAuth2Defaults.


        :return: The oauth_scopes of this AuthenticationConfigOAuth2Defaults.
        :rtype: List
        """
        return self._oauth_scopes

    @oauth_scopes.setter
    def oauth_scopes(self, oauth_scopes):
        """Sets the oauth_scopes of this AuthenticationConfigOAuth2Defaults.


        :param oauth_scopes: The oauth_scopes of this AuthenticationConfigOAuth2Defaults.
        :type oauth_scopes: List
        """

        self._oauth_scopes = oauth_scopes

    @property
    def token_urls(self):
        """Gets the token_urls of this AuthenticationConfigOAuth2Defaults.


        :return: The token_urls of this AuthenticationConfigOAuth2Defaults.
        :rtype: List
        """
        return self._token_urls

    @token_urls.setter
    def token_urls(self, token_urls):
        """Sets the token_urls of this AuthenticationConfigOAuth2Defaults.


        :param token_urls: The token_urls of this AuthenticationConfigOAuth2Defaults.
        :type token_urls: List
        """

        self._token_urls = token_urls

    @property
    def auth_code_urls(self):
        """Gets the auth_code_urls of this AuthenticationConfigOAuth2Defaults.


        :return: The auth_code_urls of this AuthenticationConfigOAuth2Defaults.
        :rtype: List
        """
        return self._auth_code_urls

    @auth_code_urls.setter
    def auth_code_urls(self, auth_code_urls):
        """Sets the auth_code_urls of this AuthenticationConfigOAuth2Defaults.


        :param auth_code_urls: The auth_code_urls of this AuthenticationConfigOAuth2Defaults.
        :type auth_code_urls: List
        """

        self._auth_code_urls = auth_code_urls

    @property
    def oauth2_grant_types_supported(self):
        """Gets the oauth2_grant_types_supported of this AuthenticationConfigOAuth2Defaults.


        :return: The oauth2_grant_types_supported of this AuthenticationConfigOAuth2Defaults.
        :rtype: List
        """
        return self._oauth2_grant_types_supported

    @oauth2_grant_types_supported.setter
    def oauth2_grant_types_supported(self, oauth2_grant_types_supported):
        """Sets the oauth2_grant_types_supported of this AuthenticationConfigOAuth2Defaults.


        :param oauth2_grant_types_supported: The oauth2_grant_types_supported of this AuthenticationConfigOAuth2Defaults.
        :type oauth2_grant_types_supported: List
        """

        self._oauth2_grant_types_supported = oauth2_grant_types_supported

    @property
    def oauth2_custom_properties(self):
        """Gets the oauth2_custom_properties of this AuthenticationConfigOAuth2Defaults.


        :return: The oauth2_custom_properties of this AuthenticationConfigOAuth2Defaults.
        :rtype: List
        """
        return self._oauth2_custom_properties

    @oauth2_custom_properties.setter
    def oauth2_custom_properties(self, oauth2_custom_properties):
        """Sets the oauth2_custom_properties of this AuthenticationConfigOAuth2Defaults.


        :param oauth2_custom_properties: The oauth2_custom_properties of this AuthenticationConfigOAuth2Defaults.
        :type oauth2_custom_properties: List
        """

        self._oauth2_custom_properties = oauth2_custom_properties
