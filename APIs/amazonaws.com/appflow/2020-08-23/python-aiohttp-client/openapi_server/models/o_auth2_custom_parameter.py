# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.o_auth2_custom_prop_type import OAuth2CustomPropType
from openapi_server import util


class OAuth2CustomParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, is_required: bool=None, label: str=None, description: str=None, is_sensitive_field: bool=None, connector_supplied_values: List=None, type: OAuth2CustomPropType=None):
        """OAuth2CustomParameter - a model defined in OpenAPI

        :param key: The key of this OAuth2CustomParameter.
        :param is_required: The is_required of this OAuth2CustomParameter.
        :param label: The label of this OAuth2CustomParameter.
        :param description: The description of this OAuth2CustomParameter.
        :param is_sensitive_field: The is_sensitive_field of this OAuth2CustomParameter.
        :param connector_supplied_values: The connector_supplied_values of this OAuth2CustomParameter.
        :param type: The type of this OAuth2CustomParameter.
        """
        self.openapi_types = {
            'key': str,
            'is_required': bool,
            'label': str,
            'description': str,
            'is_sensitive_field': bool,
            'connector_supplied_values': List,
            'type': OAuth2CustomPropType
        }

        self.attribute_map = {
            'key': 'key',
            'is_required': 'isRequired',
            'label': 'label',
            'description': 'description',
            'is_sensitive_field': 'isSensitiveField',
            'connector_supplied_values': 'connectorSuppliedValues',
            'type': 'type'
        }

        self._key = key
        self._is_required = is_required
        self._label = label
        self._description = description
        self._is_sensitive_field = is_sensitive_field
        self._connector_supplied_values = connector_supplied_values
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OAuth2CustomParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OAuth2CustomParameter of this OAuth2CustomParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this OAuth2CustomParameter.


        :return: The key of this OAuth2CustomParameter.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this OAuth2CustomParameter.


        :param key: The key of this OAuth2CustomParameter.
        :type key: str
        """

        self._key = key

    @property
    def is_required(self):
        """Gets the is_required of this OAuth2CustomParameter.


        :return: The is_required of this OAuth2CustomParameter.
        :rtype: bool
        """
        return self._is_required

    @is_required.setter
    def is_required(self, is_required):
        """Sets the is_required of this OAuth2CustomParameter.


        :param is_required: The is_required of this OAuth2CustomParameter.
        :type is_required: bool
        """

        self._is_required = is_required

    @property
    def label(self):
        """Gets the label of this OAuth2CustomParameter.


        :return: The label of this OAuth2CustomParameter.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this OAuth2CustomParameter.


        :param label: The label of this OAuth2CustomParameter.
        :type label: str
        """

        self._label = label

    @property
    def description(self):
        """Gets the description of this OAuth2CustomParameter.


        :return: The description of this OAuth2CustomParameter.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OAuth2CustomParameter.


        :param description: The description of this OAuth2CustomParameter.
        :type description: str
        """

        self._description = description

    @property
    def is_sensitive_field(self):
        """Gets the is_sensitive_field of this OAuth2CustomParameter.


        :return: The is_sensitive_field of this OAuth2CustomParameter.
        :rtype: bool
        """
        return self._is_sensitive_field

    @is_sensitive_field.setter
    def is_sensitive_field(self, is_sensitive_field):
        """Sets the is_sensitive_field of this OAuth2CustomParameter.


        :param is_sensitive_field: The is_sensitive_field of this OAuth2CustomParameter.
        :type is_sensitive_field: bool
        """

        self._is_sensitive_field = is_sensitive_field

    @property
    def connector_supplied_values(self):
        """Gets the connector_supplied_values of this OAuth2CustomParameter.


        :return: The connector_supplied_values of this OAuth2CustomParameter.
        :rtype: List
        """
        return self._connector_supplied_values

    @connector_supplied_values.setter
    def connector_supplied_values(self, connector_supplied_values):
        """Sets the connector_supplied_values of this OAuth2CustomParameter.


        :param connector_supplied_values: The connector_supplied_values of this OAuth2CustomParameter.
        :type connector_supplied_values: List
        """

        self._connector_supplied_values = connector_supplied_values

    @property
    def type(self):
        """Gets the type of this OAuth2CustomParameter.


        :return: The type of this OAuth2CustomParameter.
        :rtype: OAuth2CustomPropType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OAuth2CustomParameter.


        :param type: The type of this OAuth2CustomParameter.
        :type type: OAuth2CustomPropType
        """

        self._type = type
