# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceConnectorPropertiesVeeva(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object: str=None, document_type: str=None, include_source_files: bool=None, include_renditions: bool=None, include_all_versions: bool=None):
        """SourceConnectorPropertiesVeeva - a model defined in OpenAPI

        :param object: The object of this SourceConnectorPropertiesVeeva.
        :param document_type: The document_type of this SourceConnectorPropertiesVeeva.
        :param include_source_files: The include_source_files of this SourceConnectorPropertiesVeeva.
        :param include_renditions: The include_renditions of this SourceConnectorPropertiesVeeva.
        :param include_all_versions: The include_all_versions of this SourceConnectorPropertiesVeeva.
        """
        self.openapi_types = {
            'object': str,
            'document_type': str,
            'include_source_files': bool,
            'include_renditions': bool,
            'include_all_versions': bool
        }

        self.attribute_map = {
            'object': 'object',
            'document_type': 'documentType',
            'include_source_files': 'includeSourceFiles',
            'include_renditions': 'includeRenditions',
            'include_all_versions': 'includeAllVersions'
        }

        self._object = object
        self._document_type = document_type
        self._include_source_files = include_source_files
        self._include_renditions = include_renditions
        self._include_all_versions = include_all_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceConnectorPropertiesVeeva':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceConnectorProperties_Veeva of this SourceConnectorPropertiesVeeva.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object(self):
        """Gets the object of this SourceConnectorPropertiesVeeva.


        :return: The object of this SourceConnectorPropertiesVeeva.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this SourceConnectorPropertiesVeeva.


        :param object: The object of this SourceConnectorPropertiesVeeva.
        :type object: str
        """
        if object is None:
            raise ValueError("Invalid value for `object`, must not be `None`")

        self._object = object

    @property
    def document_type(self):
        """Gets the document_type of this SourceConnectorPropertiesVeeva.


        :return: The document_type of this SourceConnectorPropertiesVeeva.
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this SourceConnectorPropertiesVeeva.


        :param document_type: The document_type of this SourceConnectorPropertiesVeeva.
        :type document_type: str
        """

        self._document_type = document_type

    @property
    def include_source_files(self):
        """Gets the include_source_files of this SourceConnectorPropertiesVeeva.


        :return: The include_source_files of this SourceConnectorPropertiesVeeva.
        :rtype: bool
        """
        return self._include_source_files

    @include_source_files.setter
    def include_source_files(self, include_source_files):
        """Sets the include_source_files of this SourceConnectorPropertiesVeeva.


        :param include_source_files: The include_source_files of this SourceConnectorPropertiesVeeva.
        :type include_source_files: bool
        """

        self._include_source_files = include_source_files

    @property
    def include_renditions(self):
        """Gets the include_renditions of this SourceConnectorPropertiesVeeva.


        :return: The include_renditions of this SourceConnectorPropertiesVeeva.
        :rtype: bool
        """
        return self._include_renditions

    @include_renditions.setter
    def include_renditions(self, include_renditions):
        """Sets the include_renditions of this SourceConnectorPropertiesVeeva.


        :param include_renditions: The include_renditions of this SourceConnectorPropertiesVeeva.
        :type include_renditions: bool
        """

        self._include_renditions = include_renditions

    @property
    def include_all_versions(self):
        """Gets the include_all_versions of this SourceConnectorPropertiesVeeva.


        :return: The include_all_versions of this SourceConnectorPropertiesVeeva.
        :rtype: bool
        """
        return self._include_all_versions

    @include_all_versions.setter
    def include_all_versions(self, include_all_versions):
        """Sets the include_all_versions of this SourceConnectorPropertiesVeeva.


        :param include_all_versions: The include_all_versions of this SourceConnectorPropertiesVeeva.
        :type include_all_versions: bool
        """

        self._include_all_versions = include_all_versions
