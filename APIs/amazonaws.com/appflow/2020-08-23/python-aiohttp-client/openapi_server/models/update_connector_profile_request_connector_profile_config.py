# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_connector_profile_request_connector_profile_config_connector_profile_credentials import CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials
from openapi_server.models.create_connector_profile_request_connector_profile_config_connector_profile_properties import CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties
from openapi_server import util


class UpdateConnectorProfileRequestConnectorProfileConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connector_profile_properties: CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties=None, connector_profile_credentials: CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials=None):
        """UpdateConnectorProfileRequestConnectorProfileConfig - a model defined in OpenAPI

        :param connector_profile_properties: The connector_profile_properties of this UpdateConnectorProfileRequestConnectorProfileConfig.
        :param connector_profile_credentials: The connector_profile_credentials of this UpdateConnectorProfileRequestConnectorProfileConfig.
        """
        self.openapi_types = {
            'connector_profile_properties': CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties,
            'connector_profile_credentials': CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials
        }

        self.attribute_map = {
            'connector_profile_properties': 'connectorProfileProperties',
            'connector_profile_credentials': 'connectorProfileCredentials'
        }

        self._connector_profile_properties = connector_profile_properties
        self._connector_profile_credentials = connector_profile_credentials

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConnectorProfileRequestConnectorProfileConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConnectorProfileRequest_connectorProfileConfig of this UpdateConnectorProfileRequestConnectorProfileConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connector_profile_properties(self):
        """Gets the connector_profile_properties of this UpdateConnectorProfileRequestConnectorProfileConfig.


        :return: The connector_profile_properties of this UpdateConnectorProfileRequestConnectorProfileConfig.
        :rtype: CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties
        """
        return self._connector_profile_properties

    @connector_profile_properties.setter
    def connector_profile_properties(self, connector_profile_properties):
        """Sets the connector_profile_properties of this UpdateConnectorProfileRequestConnectorProfileConfig.


        :param connector_profile_properties: The connector_profile_properties of this UpdateConnectorProfileRequestConnectorProfileConfig.
        :type connector_profile_properties: CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileProperties
        """
        if connector_profile_properties is None:
            raise ValueError("Invalid value for `connector_profile_properties`, must not be `None`")

        self._connector_profile_properties = connector_profile_properties

    @property
    def connector_profile_credentials(self):
        """Gets the connector_profile_credentials of this UpdateConnectorProfileRequestConnectorProfileConfig.


        :return: The connector_profile_credentials of this UpdateConnectorProfileRequestConnectorProfileConfig.
        :rtype: CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials
        """
        return self._connector_profile_credentials

    @connector_profile_credentials.setter
    def connector_profile_credentials(self, connector_profile_credentials):
        """Sets the connector_profile_credentials of this UpdateConnectorProfileRequestConnectorProfileConfig.


        :param connector_profile_credentials: The connector_profile_credentials of this UpdateConnectorProfileRequestConnectorProfileConfig.
        :type connector_profile_credentials: CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials
        """

        self._connector_profile_credentials = connector_profile_credentials
