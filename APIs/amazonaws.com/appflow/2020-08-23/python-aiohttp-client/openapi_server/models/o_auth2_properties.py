# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.o_auth2_grant_type import OAuth2GrantType
from openapi_server import util


class OAuth2Properties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, token_url: str=None, o_auth2_grant_type: OAuth2GrantType=None, token_url_custom_properties: Dict=None):
        """OAuth2Properties - a model defined in OpenAPI

        :param token_url: The token_url of this OAuth2Properties.
        :param o_auth2_grant_type: The o_auth2_grant_type of this OAuth2Properties.
        :param token_url_custom_properties: The token_url_custom_properties of this OAuth2Properties.
        """
        self.openapi_types = {
            'token_url': str,
            'o_auth2_grant_type': OAuth2GrantType,
            'token_url_custom_properties': Dict
        }

        self.attribute_map = {
            'token_url': 'tokenUrl',
            'o_auth2_grant_type': 'oAuth2GrantType',
            'token_url_custom_properties': 'tokenUrlCustomProperties'
        }

        self._token_url = token_url
        self._o_auth2_grant_type = o_auth2_grant_type
        self._token_url_custom_properties = token_url_custom_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OAuth2Properties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OAuth2Properties of this OAuth2Properties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token_url(self):
        """Gets the token_url of this OAuth2Properties.


        :return: The token_url of this OAuth2Properties.
        :rtype: str
        """
        return self._token_url

    @token_url.setter
    def token_url(self, token_url):
        """Sets the token_url of this OAuth2Properties.


        :param token_url: The token_url of this OAuth2Properties.
        :type token_url: str
        """
        if token_url is None:
            raise ValueError("Invalid value for `token_url`, must not be `None`")

        self._token_url = token_url

    @property
    def o_auth2_grant_type(self):
        """Gets the o_auth2_grant_type of this OAuth2Properties.


        :return: The o_auth2_grant_type of this OAuth2Properties.
        :rtype: OAuth2GrantType
        """
        return self._o_auth2_grant_type

    @o_auth2_grant_type.setter
    def o_auth2_grant_type(self, o_auth2_grant_type):
        """Sets the o_auth2_grant_type of this OAuth2Properties.


        :param o_auth2_grant_type: The o_auth2_grant_type of this OAuth2Properties.
        :type o_auth2_grant_type: OAuth2GrantType
        """
        if o_auth2_grant_type is None:
            raise ValueError("Invalid value for `o_auth2_grant_type`, must not be `None`")

        self._o_auth2_grant_type = o_auth2_grant_type

    @property
    def token_url_custom_properties(self):
        """Gets the token_url_custom_properties of this OAuth2Properties.


        :return: The token_url_custom_properties of this OAuth2Properties.
        :rtype: Dict
        """
        return self._token_url_custom_properties

    @token_url_custom_properties.setter
    def token_url_custom_properties(self, token_url_custom_properties):
        """Sets the token_url_custom_properties of this OAuth2Properties.


        :param token_url_custom_properties: The token_url_custom_properties of this OAuth2Properties.
        :type token_url_custom_properties: Dict
        """

        self._token_url_custom_properties = token_url_custom_properties
