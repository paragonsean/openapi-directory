# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HoneycodeMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, o_auth_scopes: List=None):
        """HoneycodeMetadata - a model defined in OpenAPI

        :param o_auth_scopes: The o_auth_scopes of this HoneycodeMetadata.
        """
        self.openapi_types = {
            'o_auth_scopes': List
        }

        self.attribute_map = {
            'o_auth_scopes': 'oAuthScopes'
        }

        self._o_auth_scopes = o_auth_scopes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HoneycodeMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HoneycodeMetadata of this HoneycodeMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def o_auth_scopes(self):
        """Gets the o_auth_scopes of this HoneycodeMetadata.


        :return: The o_auth_scopes of this HoneycodeMetadata.
        :rtype: List
        """
        return self._o_auth_scopes

    @o_auth_scopes.setter
    def o_auth_scopes(self, o_auth_scopes):
        """Sets the o_auth_scopes of this HoneycodeMetadata.


        :param o_auth_scopes: The o_auth_scopes of this HoneycodeMetadata.
        :type o_auth_scopes: List
        """

        self._o_auth_scopes = o_auth_scopes
