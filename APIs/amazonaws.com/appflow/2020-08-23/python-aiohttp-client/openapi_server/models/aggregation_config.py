# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aggregation_type import AggregationType
from openapi_server import util


class AggregationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggregation_type: AggregationType=None, target_file_size: int=None):
        """AggregationConfig - a model defined in OpenAPI

        :param aggregation_type: The aggregation_type of this AggregationConfig.
        :param target_file_size: The target_file_size of this AggregationConfig.
        """
        self.openapi_types = {
            'aggregation_type': AggregationType,
            'target_file_size': int
        }

        self.attribute_map = {
            'aggregation_type': 'aggregationType',
            'target_file_size': 'targetFileSize'
        }

        self._aggregation_type = aggregation_type
        self._target_file_size = target_file_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AggregationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AggregationConfig of this AggregationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggregation_type(self):
        """Gets the aggregation_type of this AggregationConfig.


        :return: The aggregation_type of this AggregationConfig.
        :rtype: AggregationType
        """
        return self._aggregation_type

    @aggregation_type.setter
    def aggregation_type(self, aggregation_type):
        """Sets the aggregation_type of this AggregationConfig.


        :param aggregation_type: The aggregation_type of this AggregationConfig.
        :type aggregation_type: AggregationType
        """

        self._aggregation_type = aggregation_type

    @property
    def target_file_size(self):
        """Gets the target_file_size of this AggregationConfig.


        :return: The target_file_size of this AggregationConfig.
        :rtype: int
        """
        return self._target_file_size

    @target_file_size.setter
    def target_file_size(self, target_file_size):
        """Sets the target_file_size of this AggregationConfig.


        :param target_file_size: The target_file_size of this AggregationConfig.
        :type target_file_size: int
        """

        self._target_file_size = target_file_size
