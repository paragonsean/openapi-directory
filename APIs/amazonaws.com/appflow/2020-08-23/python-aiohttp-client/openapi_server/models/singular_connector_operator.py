# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SingularConnectorOperator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    PROJECTION = 'PROJECTION'
    EQUAL_TO = 'EQUAL_TO'
    ADDITION = 'ADDITION'
    MULTIPLICATION = 'MULTIPLICATION'
    DIVISION = 'DIVISION'
    SUBTRACTION = 'SUBTRACTION'
    MASK_ALL = 'MASK_ALL'
    MASK_FIRST_N = 'MASK_FIRST_N'
    MASK_LAST_N = 'MASK_LAST_N'
    VALIDATE_NON_NULL = 'VALIDATE_NON_NULL'
    VALIDATE_NON_ZERO = 'VALIDATE_NON_ZERO'
    VALIDATE_NON_NEGATIVE = 'VALIDATE_NON_NEGATIVE'
    VALIDATE_NUMERIC = 'VALIDATE_NUMERIC'
    NO_OP = 'NO_OP'

    def __init__(self):
        """SingularConnectorOperator - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SingularConnectorOperator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SingularConnectorOperator of this SingularConnectorOperator.
        """
        return util.deserialize_model(dikt, cls)
