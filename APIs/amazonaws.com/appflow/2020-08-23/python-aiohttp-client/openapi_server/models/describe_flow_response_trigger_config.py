# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_flow_request_trigger_config_trigger_properties import CreateFlowRequestTriggerConfigTriggerProperties
from openapi_server.models.trigger_type import TriggerType
from openapi_server import util


class DescribeFlowResponseTriggerConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, trigger_type: TriggerType=None, trigger_properties: CreateFlowRequestTriggerConfigTriggerProperties=None):
        """DescribeFlowResponseTriggerConfig - a model defined in OpenAPI

        :param trigger_type: The trigger_type of this DescribeFlowResponseTriggerConfig.
        :param trigger_properties: The trigger_properties of this DescribeFlowResponseTriggerConfig.
        """
        self.openapi_types = {
            'trigger_type': TriggerType,
            'trigger_properties': CreateFlowRequestTriggerConfigTriggerProperties
        }

        self.attribute_map = {
            'trigger_type': 'triggerType',
            'trigger_properties': 'triggerProperties'
        }

        self._trigger_type = trigger_type
        self._trigger_properties = trigger_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeFlowResponseTriggerConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeFlowResponse_triggerConfig of this DescribeFlowResponseTriggerConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trigger_type(self):
        """Gets the trigger_type of this DescribeFlowResponseTriggerConfig.


        :return: The trigger_type of this DescribeFlowResponseTriggerConfig.
        :rtype: TriggerType
        """
        return self._trigger_type

    @trigger_type.setter
    def trigger_type(self, trigger_type):
        """Sets the trigger_type of this DescribeFlowResponseTriggerConfig.


        :param trigger_type: The trigger_type of this DescribeFlowResponseTriggerConfig.
        :type trigger_type: TriggerType
        """
        if trigger_type is None:
            raise ValueError("Invalid value for `trigger_type`, must not be `None`")

        self._trigger_type = trigger_type

    @property
    def trigger_properties(self):
        """Gets the trigger_properties of this DescribeFlowResponseTriggerConfig.


        :return: The trigger_properties of this DescribeFlowResponseTriggerConfig.
        :rtype: CreateFlowRequestTriggerConfigTriggerProperties
        """
        return self._trigger_properties

    @trigger_properties.setter
    def trigger_properties(self, trigger_properties):
        """Sets the trigger_properties of this DescribeFlowResponseTriggerConfig.


        :param trigger_properties: The trigger_properties of this DescribeFlowResponseTriggerConfig.
        :type trigger_properties: CreateFlowRequestTriggerConfigTriggerProperties
        """

        self._trigger_properties = trigger_properties
