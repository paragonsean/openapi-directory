# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connector_profile_credentials_amplitude import ConnectorProfileCredentialsAmplitude
from openapi_server.models.connector_profile_credentials_datadog import ConnectorProfileCredentialsDatadog
from openapi_server.models.connector_profile_credentials_dynatrace import ConnectorProfileCredentialsDynatrace
from openapi_server.models.connector_profile_credentials_google_analytics import ConnectorProfileCredentialsGoogleAnalytics
from openapi_server.models.connector_profile_credentials_honeycode import ConnectorProfileCredentialsHoneycode
from openapi_server.models.connector_profile_credentials_infor_nexus import ConnectorProfileCredentialsInforNexus
from openapi_server.models.connector_profile_credentials_marketo import ConnectorProfileCredentialsMarketo
from openapi_server.models.connector_profile_credentials_pardot import ConnectorProfileCredentialsPardot
from openapi_server.models.connector_profile_credentials_redshift import ConnectorProfileCredentialsRedshift
from openapi_server.models.connector_profile_credentials_salesforce import ConnectorProfileCredentialsSalesforce
from openapi_server.models.connector_profile_credentials_service_now import ConnectorProfileCredentialsServiceNow
from openapi_server.models.connector_profile_credentials_singular import ConnectorProfileCredentialsSingular
from openapi_server.models.connector_profile_credentials_slack import ConnectorProfileCredentialsSlack
from openapi_server.models.connector_profile_credentials_snowflake import ConnectorProfileCredentialsSnowflake
from openapi_server.models.connector_profile_credentials_trendmicro import ConnectorProfileCredentialsTrendmicro
from openapi_server.models.connector_profile_credentials_veeva import ConnectorProfileCredentialsVeeva
from openapi_server.models.connector_profile_credentials_zendesk import ConnectorProfileCredentialsZendesk
from openapi_server.models.custom_connector_profile_credentials import CustomConnectorProfileCredentials
from openapi_server.models.sapo_data_connector_profile_credentials import SAPODataConnectorProfileCredentials
from openapi_server import util


class CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amplitude: ConnectorProfileCredentialsAmplitude=None, datadog: ConnectorProfileCredentialsDatadog=None, dynatrace: ConnectorProfileCredentialsDynatrace=None, google_analytics: ConnectorProfileCredentialsGoogleAnalytics=None, honeycode: ConnectorProfileCredentialsHoneycode=None, infor_nexus: ConnectorProfileCredentialsInforNexus=None, marketo: ConnectorProfileCredentialsMarketo=None, redshift: ConnectorProfileCredentialsRedshift=None, salesforce: ConnectorProfileCredentialsSalesforce=None, service_now: ConnectorProfileCredentialsServiceNow=None, singular: ConnectorProfileCredentialsSingular=None, slack: ConnectorProfileCredentialsSlack=None, snowflake: ConnectorProfileCredentialsSnowflake=None, trendmicro: ConnectorProfileCredentialsTrendmicro=None, veeva: ConnectorProfileCredentialsVeeva=None, zendesk: ConnectorProfileCredentialsZendesk=None, sapo_data: SAPODataConnectorProfileCredentials=None, custom_connector: CustomConnectorProfileCredentials=None, pardot: ConnectorProfileCredentialsPardot=None):
        """CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials - a model defined in OpenAPI

        :param amplitude: The amplitude of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param datadog: The datadog of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param dynatrace: The dynatrace of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param google_analytics: The google_analytics of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param honeycode: The honeycode of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param infor_nexus: The infor_nexus of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param marketo: The marketo of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param redshift: The redshift of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param salesforce: The salesforce of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param service_now: The service_now of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param singular: The singular of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param slack: The slack of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param snowflake: The snowflake of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param trendmicro: The trendmicro of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param veeva: The veeva of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param zendesk: The zendesk of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param sapo_data: The sapo_data of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param custom_connector: The custom_connector of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :param pardot: The pardot of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        """
        self.openapi_types = {
            'amplitude': ConnectorProfileCredentialsAmplitude,
            'datadog': ConnectorProfileCredentialsDatadog,
            'dynatrace': ConnectorProfileCredentialsDynatrace,
            'google_analytics': ConnectorProfileCredentialsGoogleAnalytics,
            'honeycode': ConnectorProfileCredentialsHoneycode,
            'infor_nexus': ConnectorProfileCredentialsInforNexus,
            'marketo': ConnectorProfileCredentialsMarketo,
            'redshift': ConnectorProfileCredentialsRedshift,
            'salesforce': ConnectorProfileCredentialsSalesforce,
            'service_now': ConnectorProfileCredentialsServiceNow,
            'singular': ConnectorProfileCredentialsSingular,
            'slack': ConnectorProfileCredentialsSlack,
            'snowflake': ConnectorProfileCredentialsSnowflake,
            'trendmicro': ConnectorProfileCredentialsTrendmicro,
            'veeva': ConnectorProfileCredentialsVeeva,
            'zendesk': ConnectorProfileCredentialsZendesk,
            'sapo_data': SAPODataConnectorProfileCredentials,
            'custom_connector': CustomConnectorProfileCredentials,
            'pardot': ConnectorProfileCredentialsPardot
        }

        self.attribute_map = {
            'amplitude': 'Amplitude',
            'datadog': 'Datadog',
            'dynatrace': 'Dynatrace',
            'google_analytics': 'GoogleAnalytics',
            'honeycode': 'Honeycode',
            'infor_nexus': 'InforNexus',
            'marketo': 'Marketo',
            'redshift': 'Redshift',
            'salesforce': 'Salesforce',
            'service_now': 'ServiceNow',
            'singular': 'Singular',
            'slack': 'Slack',
            'snowflake': 'Snowflake',
            'trendmicro': 'Trendmicro',
            'veeva': 'Veeva',
            'zendesk': 'Zendesk',
            'sapo_data': 'SAPOData',
            'custom_connector': 'CustomConnector',
            'pardot': 'Pardot'
        }

        self._amplitude = amplitude
        self._datadog = datadog
        self._dynatrace = dynatrace
        self._google_analytics = google_analytics
        self._honeycode = honeycode
        self._infor_nexus = infor_nexus
        self._marketo = marketo
        self._redshift = redshift
        self._salesforce = salesforce
        self._service_now = service_now
        self._singular = singular
        self._slack = slack
        self._snowflake = snowflake
        self._trendmicro = trendmicro
        self._veeva = veeva
        self._zendesk = zendesk
        self._sapo_data = sapo_data
        self._custom_connector = custom_connector
        self._pardot = pardot

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateConnectorProfile_request_connectorProfileConfig_connectorProfileCredentials of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amplitude(self):
        """Gets the amplitude of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The amplitude of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsAmplitude
        """
        return self._amplitude

    @amplitude.setter
    def amplitude(self, amplitude):
        """Sets the amplitude of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param amplitude: The amplitude of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type amplitude: ConnectorProfileCredentialsAmplitude
        """

        self._amplitude = amplitude

    @property
    def datadog(self):
        """Gets the datadog of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The datadog of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsDatadog
        """
        return self._datadog

    @datadog.setter
    def datadog(self, datadog):
        """Sets the datadog of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param datadog: The datadog of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type datadog: ConnectorProfileCredentialsDatadog
        """

        self._datadog = datadog

    @property
    def dynatrace(self):
        """Gets the dynatrace of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The dynatrace of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsDynatrace
        """
        return self._dynatrace

    @dynatrace.setter
    def dynatrace(self, dynatrace):
        """Sets the dynatrace of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param dynatrace: The dynatrace of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type dynatrace: ConnectorProfileCredentialsDynatrace
        """

        self._dynatrace = dynatrace

    @property
    def google_analytics(self):
        """Gets the google_analytics of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The google_analytics of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsGoogleAnalytics
        """
        return self._google_analytics

    @google_analytics.setter
    def google_analytics(self, google_analytics):
        """Sets the google_analytics of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param google_analytics: The google_analytics of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type google_analytics: ConnectorProfileCredentialsGoogleAnalytics
        """

        self._google_analytics = google_analytics

    @property
    def honeycode(self):
        """Gets the honeycode of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The honeycode of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsHoneycode
        """
        return self._honeycode

    @honeycode.setter
    def honeycode(self, honeycode):
        """Sets the honeycode of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param honeycode: The honeycode of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type honeycode: ConnectorProfileCredentialsHoneycode
        """

        self._honeycode = honeycode

    @property
    def infor_nexus(self):
        """Gets the infor_nexus of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The infor_nexus of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsInforNexus
        """
        return self._infor_nexus

    @infor_nexus.setter
    def infor_nexus(self, infor_nexus):
        """Sets the infor_nexus of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param infor_nexus: The infor_nexus of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type infor_nexus: ConnectorProfileCredentialsInforNexus
        """

        self._infor_nexus = infor_nexus

    @property
    def marketo(self):
        """Gets the marketo of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The marketo of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsMarketo
        """
        return self._marketo

    @marketo.setter
    def marketo(self, marketo):
        """Sets the marketo of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param marketo: The marketo of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type marketo: ConnectorProfileCredentialsMarketo
        """

        self._marketo = marketo

    @property
    def redshift(self):
        """Gets the redshift of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The redshift of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsRedshift
        """
        return self._redshift

    @redshift.setter
    def redshift(self, redshift):
        """Sets the redshift of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param redshift: The redshift of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type redshift: ConnectorProfileCredentialsRedshift
        """

        self._redshift = redshift

    @property
    def salesforce(self):
        """Gets the salesforce of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The salesforce of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsSalesforce
        """
        return self._salesforce

    @salesforce.setter
    def salesforce(self, salesforce):
        """Sets the salesforce of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param salesforce: The salesforce of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type salesforce: ConnectorProfileCredentialsSalesforce
        """

        self._salesforce = salesforce

    @property
    def service_now(self):
        """Gets the service_now of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The service_now of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsServiceNow
        """
        return self._service_now

    @service_now.setter
    def service_now(self, service_now):
        """Sets the service_now of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param service_now: The service_now of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type service_now: ConnectorProfileCredentialsServiceNow
        """

        self._service_now = service_now

    @property
    def singular(self):
        """Gets the singular of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The singular of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsSingular
        """
        return self._singular

    @singular.setter
    def singular(self, singular):
        """Sets the singular of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param singular: The singular of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type singular: ConnectorProfileCredentialsSingular
        """

        self._singular = singular

    @property
    def slack(self):
        """Gets the slack of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The slack of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsSlack
        """
        return self._slack

    @slack.setter
    def slack(self, slack):
        """Sets the slack of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param slack: The slack of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type slack: ConnectorProfileCredentialsSlack
        """

        self._slack = slack

    @property
    def snowflake(self):
        """Gets the snowflake of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The snowflake of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsSnowflake
        """
        return self._snowflake

    @snowflake.setter
    def snowflake(self, snowflake):
        """Sets the snowflake of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param snowflake: The snowflake of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type snowflake: ConnectorProfileCredentialsSnowflake
        """

        self._snowflake = snowflake

    @property
    def trendmicro(self):
        """Gets the trendmicro of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The trendmicro of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsTrendmicro
        """
        return self._trendmicro

    @trendmicro.setter
    def trendmicro(self, trendmicro):
        """Sets the trendmicro of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param trendmicro: The trendmicro of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type trendmicro: ConnectorProfileCredentialsTrendmicro
        """

        self._trendmicro = trendmicro

    @property
    def veeva(self):
        """Gets the veeva of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The veeva of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsVeeva
        """
        return self._veeva

    @veeva.setter
    def veeva(self, veeva):
        """Sets the veeva of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param veeva: The veeva of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type veeva: ConnectorProfileCredentialsVeeva
        """

        self._veeva = veeva

    @property
    def zendesk(self):
        """Gets the zendesk of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The zendesk of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsZendesk
        """
        return self._zendesk

    @zendesk.setter
    def zendesk(self, zendesk):
        """Sets the zendesk of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param zendesk: The zendesk of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type zendesk: ConnectorProfileCredentialsZendesk
        """

        self._zendesk = zendesk

    @property
    def sapo_data(self):
        """Gets the sapo_data of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The sapo_data of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: SAPODataConnectorProfileCredentials
        """
        return self._sapo_data

    @sapo_data.setter
    def sapo_data(self, sapo_data):
        """Sets the sapo_data of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param sapo_data: The sapo_data of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type sapo_data: SAPODataConnectorProfileCredentials
        """

        self._sapo_data = sapo_data

    @property
    def custom_connector(self):
        """Gets the custom_connector of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The custom_connector of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: CustomConnectorProfileCredentials
        """
        return self._custom_connector

    @custom_connector.setter
    def custom_connector(self, custom_connector):
        """Sets the custom_connector of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param custom_connector: The custom_connector of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type custom_connector: CustomConnectorProfileCredentials
        """

        self._custom_connector = custom_connector

    @property
    def pardot(self):
        """Gets the pardot of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :return: The pardot of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :rtype: ConnectorProfileCredentialsPardot
        """
        return self._pardot

    @pardot.setter
    def pardot(self, pardot):
        """Sets the pardot of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.


        :param pardot: The pardot of this CreateConnectorProfileRequestConnectorProfileConfigConnectorProfileCredentials.
        :type pardot: ConnectorProfileCredentialsPardot
        """

        self._pardot = pardot
