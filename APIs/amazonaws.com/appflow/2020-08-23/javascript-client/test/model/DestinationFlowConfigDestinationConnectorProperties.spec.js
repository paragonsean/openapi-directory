/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonAppflow);
  }
}(this, function(expect, AmazonAppflow) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DestinationFlowConfigDestinationConnectorProperties', function() {
    it('should create an instance of DestinationFlowConfigDestinationConnectorProperties', function() {
      // uncomment below and update the code to test DestinationFlowConfigDestinationConnectorProperties
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be.a(AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties);
    });

    it('should have the property redshift (base name: "Redshift")', function() {
      // uncomment below and update the code to test the property redshift
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property s3 (base name: "S3")', function() {
      // uncomment below and update the code to test the property s3
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property salesforce (base name: "Salesforce")', function() {
      // uncomment below and update the code to test the property salesforce
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property snowflake (base name: "Snowflake")', function() {
      // uncomment below and update the code to test the property snowflake
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property eventBridge (base name: "EventBridge")', function() {
      // uncomment below and update the code to test the property eventBridge
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property lookoutMetrics (base name: "LookoutMetrics")', function() {
      // uncomment below and update the code to test the property lookoutMetrics
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property upsolver (base name: "Upsolver")', function() {
      // uncomment below and update the code to test the property upsolver
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property honeycode (base name: "Honeycode")', function() {
      // uncomment below and update the code to test the property honeycode
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property customerProfiles (base name: "CustomerProfiles")', function() {
      // uncomment below and update the code to test the property customerProfiles
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property zendesk (base name: "Zendesk")', function() {
      // uncomment below and update the code to test the property zendesk
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property marketo (base name: "Marketo")', function() {
      // uncomment below and update the code to test the property marketo
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property customConnector (base name: "CustomConnector")', function() {
      // uncomment below and update the code to test the property customConnector
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

    it('should have the property sAPOData (base name: "SAPOData")', function() {
      // uncomment below and update the code to test the property sAPOData
      //var instance = new AmazonAppflow.DestinationFlowConfigDestinationConnectorProperties();
      //expect(instance).to.be();
    });

  });

}));
