/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonAppflow);
  }
}(this, function(expect, AmazonAppflow) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonAppflow.ConnectorEntityField();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConnectorEntityField', function() {
    it('should create an instance of ConnectorEntityField', function() {
      // uncomment below and update the code to test ConnectorEntityField
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be.a(AmazonAppflow.ConnectorEntityField);
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property parentIdentifier (base name: "parentIdentifier")', function() {
      // uncomment below and update the code to test the property parentIdentifier
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property label (base name: "label")', function() {
      // uncomment below and update the code to test the property label
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property isPrimaryKey (base name: "isPrimaryKey")', function() {
      // uncomment below and update the code to test the property isPrimaryKey
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property defaultValue (base name: "defaultValue")', function() {
      // uncomment below and update the code to test the property defaultValue
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property isDeprecated (base name: "isDeprecated")', function() {
      // uncomment below and update the code to test the property isDeprecated
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property supportedFieldTypeDetails (base name: "supportedFieldTypeDetails")', function() {
      // uncomment below and update the code to test the property supportedFieldTypeDetails
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property sourceProperties (base name: "sourceProperties")', function() {
      // uncomment below and update the code to test the property sourceProperties
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property destinationProperties (base name: "destinationProperties")', function() {
      // uncomment below and update the code to test the property destinationProperties
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

    it('should have the property customProperties (base name: "customProperties")', function() {
      // uncomment below and update the code to test the property customProperties
      //var instance = new AmazonAppflow.ConnectorEntityField();
      //expect(instance).to.be();
    });

  });

}));
