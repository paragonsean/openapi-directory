/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConnectorType from './ConnectorType';
import DescribeFlowResponseLastRunExecutionDetails from './DescribeFlowResponseLastRunExecutionDetails';
import FlowStatus from './FlowStatus';
import TriggerType from './TriggerType';

/**
 * The FlowDefinition model module.
 * @module model/FlowDefinition
 * @version 2020-08-23
 */
class FlowDefinition {
    /**
     * Constructs a new <code>FlowDefinition</code>.
     *  The properties of the flow, such as its source, destination, trigger type, and so on. 
     * @alias module:model/FlowDefinition
     */
    constructor() { 
        
        FlowDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FlowDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FlowDefinition} obj Optional instance to populate.
     * @return {module:model/FlowDefinition} The populated <code>FlowDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FlowDefinition();

            if (data.hasOwnProperty('flowArn')) {
                obj['flowArn'] = ApiClient.convertToType(data['flowArn'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('flowName')) {
                obj['flowName'] = ApiClient.convertToType(data['flowName'], 'String');
            }
            if (data.hasOwnProperty('flowStatus')) {
                obj['flowStatus'] = ApiClient.convertToType(data['flowStatus'], FlowStatus);
            }
            if (data.hasOwnProperty('sourceConnectorType')) {
                obj['sourceConnectorType'] = ApiClient.convertToType(data['sourceConnectorType'], ConnectorType);
            }
            if (data.hasOwnProperty('sourceConnectorLabel')) {
                obj['sourceConnectorLabel'] = ApiClient.convertToType(data['sourceConnectorLabel'], 'String');
            }
            if (data.hasOwnProperty('destinationConnectorType')) {
                obj['destinationConnectorType'] = ApiClient.convertToType(data['destinationConnectorType'], ConnectorType);
            }
            if (data.hasOwnProperty('destinationConnectorLabel')) {
                obj['destinationConnectorLabel'] = ApiClient.convertToType(data['destinationConnectorLabel'], 'String');
            }
            if (data.hasOwnProperty('triggerType')) {
                obj['triggerType'] = ApiClient.convertToType(data['triggerType'], TriggerType);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedAt')) {
                obj['lastUpdatedAt'] = ApiClient.convertToType(data['lastUpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = ApiClient.convertToType(data['lastUpdatedBy'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('lastRunExecutionDetails')) {
                obj['lastRunExecutionDetails'] = DescribeFlowResponseLastRunExecutionDetails.constructFromObject(data['lastRunExecutionDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FlowDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlowDefinition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `flowArn`
        if (data['flowArn']) { // data not null
          String.validateJSON(data['flowArn']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `flowName`
        if (data['flowName']) { // data not null
          String.validateJSON(data['flowName']);
        }
        // validate the optional field `flowStatus`
        if (data['flowStatus']) { // data not null
          FlowStatus.validateJSON(data['flowStatus']);
        }
        // validate the optional field `sourceConnectorType`
        if (data['sourceConnectorType']) { // data not null
          ConnectorType.validateJSON(data['sourceConnectorType']);
        }
        // validate the optional field `sourceConnectorLabel`
        if (data['sourceConnectorLabel']) { // data not null
          String.validateJSON(data['sourceConnectorLabel']);
        }
        // validate the optional field `destinationConnectorType`
        if (data['destinationConnectorType']) { // data not null
          ConnectorType.validateJSON(data['destinationConnectorType']);
        }
        // validate the optional field `destinationConnectorLabel`
        if (data['destinationConnectorLabel']) { // data not null
          String.validateJSON(data['destinationConnectorLabel']);
        }
        // validate the optional field `triggerType`
        if (data['triggerType']) { // data not null
          TriggerType.validateJSON(data['triggerType']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `lastUpdatedAt`
        if (data['lastUpdatedAt']) { // data not null
          Date.validateJSON(data['lastUpdatedAt']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          String.validateJSON(data['createdBy']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          String.validateJSON(data['lastUpdatedBy']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `lastRunExecutionDetails`
        if (data['lastRunExecutionDetails']) { // data not null
          DescribeFlowResponseLastRunExecutionDetails.validateJSON(data['lastRunExecutionDetails']);
        }

        return true;
    }


}



/**
 * @member {String} flowArn
 */
FlowDefinition.prototype['flowArn'] = undefined;

/**
 * @member {String} description
 */
FlowDefinition.prototype['description'] = undefined;

/**
 * @member {String} flowName
 */
FlowDefinition.prototype['flowName'] = undefined;

/**
 * @member {module:model/FlowStatus} flowStatus
 */
FlowDefinition.prototype['flowStatus'] = undefined;

/**
 * @member {module:model/ConnectorType} sourceConnectorType
 */
FlowDefinition.prototype['sourceConnectorType'] = undefined;

/**
 * @member {String} sourceConnectorLabel
 */
FlowDefinition.prototype['sourceConnectorLabel'] = undefined;

/**
 * @member {module:model/ConnectorType} destinationConnectorType
 */
FlowDefinition.prototype['destinationConnectorType'] = undefined;

/**
 * @member {String} destinationConnectorLabel
 */
FlowDefinition.prototype['destinationConnectorLabel'] = undefined;

/**
 * @member {module:model/TriggerType} triggerType
 */
FlowDefinition.prototype['triggerType'] = undefined;

/**
 * @member {Date} createdAt
 */
FlowDefinition.prototype['createdAt'] = undefined;

/**
 * @member {Date} lastUpdatedAt
 */
FlowDefinition.prototype['lastUpdatedAt'] = undefined;

/**
 * @member {String} createdBy
 */
FlowDefinition.prototype['createdBy'] = undefined;

/**
 * @member {String} lastUpdatedBy
 */
FlowDefinition.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Object} tags
 */
FlowDefinition.prototype['tags'] = undefined;

/**
 * @member {module:model/DescribeFlowResponseLastRunExecutionDetails} lastRunExecutionDetails
 */
FlowDefinition.prototype['lastRunExecutionDetails'] = undefined;






export default FlowDefinition;

