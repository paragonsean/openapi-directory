/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SnowflakeConnectorProfileProperties model module.
 * @module model/SnowflakeConnectorProfileProperties
 * @version 2020-08-23
 */
class SnowflakeConnectorProfileProperties {
    /**
     * Constructs a new <code>SnowflakeConnectorProfileProperties</code>.
     *  The connector-specific profile properties required when using Snowflake. 
     * @alias module:model/SnowflakeConnectorProfileProperties
     * @param warehouse {String} 
     * @param stage {String} 
     * @param bucketName {String} 
     */
    constructor(warehouse, stage, bucketName) { 
        
        SnowflakeConnectorProfileProperties.initialize(this, warehouse, stage, bucketName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, warehouse, stage, bucketName) { 
        obj['warehouse'] = warehouse;
        obj['stage'] = stage;
        obj['bucketName'] = bucketName;
    }

    /**
     * Constructs a <code>SnowflakeConnectorProfileProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SnowflakeConnectorProfileProperties} obj Optional instance to populate.
     * @return {module:model/SnowflakeConnectorProfileProperties} The populated <code>SnowflakeConnectorProfileProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SnowflakeConnectorProfileProperties();

            if (data.hasOwnProperty('warehouse')) {
                obj['warehouse'] = ApiClient.convertToType(data['warehouse'], 'String');
            }
            if (data.hasOwnProperty('stage')) {
                obj['stage'] = ApiClient.convertToType(data['stage'], 'String');
            }
            if (data.hasOwnProperty('bucketName')) {
                obj['bucketName'] = ApiClient.convertToType(data['bucketName'], 'String');
            }
            if (data.hasOwnProperty('bucketPrefix')) {
                obj['bucketPrefix'] = ApiClient.convertToType(data['bucketPrefix'], 'String');
            }
            if (data.hasOwnProperty('privateLinkServiceName')) {
                obj['privateLinkServiceName'] = ApiClient.convertToType(data['privateLinkServiceName'], 'String');
            }
            if (data.hasOwnProperty('accountName')) {
                obj['accountName'] = ApiClient.convertToType(data['accountName'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SnowflakeConnectorProfileProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SnowflakeConnectorProfileProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SnowflakeConnectorProfileProperties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `warehouse`
        if (data['warehouse']) { // data not null
          String.validateJSON(data['warehouse']);
        }
        // validate the optional field `stage`
        if (data['stage']) { // data not null
          String.validateJSON(data['stage']);
        }
        // validate the optional field `bucketName`
        if (data['bucketName']) { // data not null
          String.validateJSON(data['bucketName']);
        }
        // validate the optional field `bucketPrefix`
        if (data['bucketPrefix']) { // data not null
          String.validateJSON(data['bucketPrefix']);
        }
        // validate the optional field `privateLinkServiceName`
        if (data['privateLinkServiceName']) { // data not null
          String.validateJSON(data['privateLinkServiceName']);
        }
        // validate the optional field `accountName`
        if (data['accountName']) { // data not null
          String.validateJSON(data['accountName']);
        }
        // validate the optional field `region`
        if (data['region']) { // data not null
          String.validateJSON(data['region']);
        }

        return true;
    }


}

SnowflakeConnectorProfileProperties.RequiredProperties = ["warehouse", "stage", "bucketName"];

/**
 * @member {String} warehouse
 */
SnowflakeConnectorProfileProperties.prototype['warehouse'] = undefined;

/**
 * @member {String} stage
 */
SnowflakeConnectorProfileProperties.prototype['stage'] = undefined;

/**
 * @member {String} bucketName
 */
SnowflakeConnectorProfileProperties.prototype['bucketName'] = undefined;

/**
 * @member {String} bucketPrefix
 */
SnowflakeConnectorProfileProperties.prototype['bucketPrefix'] = undefined;

/**
 * @member {String} privateLinkServiceName
 */
SnowflakeConnectorProfileProperties.prototype['privateLinkServiceName'] = undefined;

/**
 * @member {String} accountName
 */
SnowflakeConnectorProfileProperties.prototype['accountName'] = undefined;

/**
 * @member {String} region
 */
SnowflakeConnectorProfileProperties.prototype['region'] = undefined;






export default SnowflakeConnectorProfileProperties;

