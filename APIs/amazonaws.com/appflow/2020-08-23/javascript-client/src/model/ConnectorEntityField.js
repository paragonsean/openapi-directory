/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConnectorEntityFieldDestinationProperties from './ConnectorEntityFieldDestinationProperties';
import ConnectorEntityFieldSourceProperties from './ConnectorEntityFieldSourceProperties';
import ConnectorEntityFieldSupportedFieldTypeDetails from './ConnectorEntityFieldSupportedFieldTypeDetails';

/**
 * The ConnectorEntityField model module.
 * @module model/ConnectorEntityField
 * @version 2020-08-23
 */
class ConnectorEntityField {
    /**
     * Constructs a new <code>ConnectorEntityField</code>.
     *  Describes the data model of a connector field. For example, for an &lt;i&gt;account&lt;/i&gt; entity, the fields would be &lt;i&gt;account name&lt;/i&gt;, &lt;i&gt;account ID&lt;/i&gt;, and so on. 
     * @alias module:model/ConnectorEntityField
     * @param identifier {String} 
     */
    constructor(identifier) { 
        
        ConnectorEntityField.initialize(this, identifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, identifier) { 
        obj['identifier'] = identifier;
    }

    /**
     * Constructs a <code>ConnectorEntityField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConnectorEntityField} obj Optional instance to populate.
     * @return {module:model/ConnectorEntityField} The populated <code>ConnectorEntityField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConnectorEntityField();

            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('parentIdentifier')) {
                obj['parentIdentifier'] = ApiClient.convertToType(data['parentIdentifier'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('isPrimaryKey')) {
                obj['isPrimaryKey'] = ApiClient.convertToType(data['isPrimaryKey'], 'Boolean');
            }
            if (data.hasOwnProperty('defaultValue')) {
                obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], 'String');
            }
            if (data.hasOwnProperty('isDeprecated')) {
                obj['isDeprecated'] = ApiClient.convertToType(data['isDeprecated'], 'Boolean');
            }
            if (data.hasOwnProperty('supportedFieldTypeDetails')) {
                obj['supportedFieldTypeDetails'] = ConnectorEntityFieldSupportedFieldTypeDetails.constructFromObject(data['supportedFieldTypeDetails']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('sourceProperties')) {
                obj['sourceProperties'] = ConnectorEntityFieldSourceProperties.constructFromObject(data['sourceProperties']);
            }
            if (data.hasOwnProperty('destinationProperties')) {
                obj['destinationProperties'] = ConnectorEntityFieldDestinationProperties.constructFromObject(data['destinationProperties']);
            }
            if (data.hasOwnProperty('customProperties')) {
                obj['customProperties'] = ApiClient.convertToType(data['customProperties'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConnectorEntityField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConnectorEntityField</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConnectorEntityField.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `identifier`
        if (data['identifier']) { // data not null
          String.validateJSON(data['identifier']);
        }
        // validate the optional field `parentIdentifier`
        if (data['parentIdentifier']) { // data not null
          String.validateJSON(data['parentIdentifier']);
        }
        // validate the optional field `label`
        if (data['label']) { // data not null
          String.validateJSON(data['label']);
        }
        // validate the optional field `isPrimaryKey`
        if (data['isPrimaryKey']) { // data not null
          Boolean.validateJSON(data['isPrimaryKey']);
        }
        // validate the optional field `defaultValue`
        if (data['defaultValue']) { // data not null
          String.validateJSON(data['defaultValue']);
        }
        // validate the optional field `isDeprecated`
        if (data['isDeprecated']) { // data not null
          Boolean.validateJSON(data['isDeprecated']);
        }
        // validate the optional field `supportedFieldTypeDetails`
        if (data['supportedFieldTypeDetails']) { // data not null
          ConnectorEntityFieldSupportedFieldTypeDetails.validateJSON(data['supportedFieldTypeDetails']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `sourceProperties`
        if (data['sourceProperties']) { // data not null
          ConnectorEntityFieldSourceProperties.validateJSON(data['sourceProperties']);
        }
        // validate the optional field `destinationProperties`
        if (data['destinationProperties']) { // data not null
          ConnectorEntityFieldDestinationProperties.validateJSON(data['destinationProperties']);
        }
        // validate the optional field `customProperties`
        if (data['customProperties']) { // data not null
          Object.validateJSON(data['customProperties']);
        }

        return true;
    }


}

ConnectorEntityField.RequiredProperties = ["identifier"];

/**
 * @member {String} identifier
 */
ConnectorEntityField.prototype['identifier'] = undefined;

/**
 * @member {String} parentIdentifier
 */
ConnectorEntityField.prototype['parentIdentifier'] = undefined;

/**
 * @member {String} label
 */
ConnectorEntityField.prototype['label'] = undefined;

/**
 * @member {Boolean} isPrimaryKey
 */
ConnectorEntityField.prototype['isPrimaryKey'] = undefined;

/**
 * @member {String} defaultValue
 */
ConnectorEntityField.prototype['defaultValue'] = undefined;

/**
 * @member {Boolean} isDeprecated
 */
ConnectorEntityField.prototype['isDeprecated'] = undefined;

/**
 * @member {module:model/ConnectorEntityFieldSupportedFieldTypeDetails} supportedFieldTypeDetails
 */
ConnectorEntityField.prototype['supportedFieldTypeDetails'] = undefined;

/**
 * @member {String} description
 */
ConnectorEntityField.prototype['description'] = undefined;

/**
 * @member {module:model/ConnectorEntityFieldSourceProperties} sourceProperties
 */
ConnectorEntityField.prototype['sourceProperties'] = undefined;

/**
 * @member {module:model/ConnectorEntityFieldDestinationProperties} destinationProperties
 */
ConnectorEntityField.prototype['destinationProperties'] = undefined;

/**
 * @member {Object} customProperties
 */
ConnectorEntityField.prototype['customProperties'] = undefined;






export default ConnectorEntityField;

