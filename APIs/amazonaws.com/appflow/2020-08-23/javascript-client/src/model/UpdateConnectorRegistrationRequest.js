/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RegisterConnectorRequestConnectorProvisioningConfig from './RegisterConnectorRequestConnectorProvisioningConfig';

/**
 * The UpdateConnectorRegistrationRequest model module.
 * @module model/UpdateConnectorRegistrationRequest
 * @version 2020-08-23
 */
class UpdateConnectorRegistrationRequest {
    /**
     * Constructs a new <code>UpdateConnectorRegistrationRequest</code>.
     * @alias module:model/UpdateConnectorRegistrationRequest
     * @param connectorLabel {String} The name of the connector. The name is unique for each connector registration in your AWS account.
     */
    constructor(connectorLabel) { 
        
        UpdateConnectorRegistrationRequest.initialize(this, connectorLabel);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, connectorLabel) { 
        obj['connectorLabel'] = connectorLabel;
    }

    /**
     * Constructs a <code>UpdateConnectorRegistrationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateConnectorRegistrationRequest} obj Optional instance to populate.
     * @return {module:model/UpdateConnectorRegistrationRequest} The populated <code>UpdateConnectorRegistrationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateConnectorRegistrationRequest();

            if (data.hasOwnProperty('connectorLabel')) {
                obj['connectorLabel'] = ApiClient.convertToType(data['connectorLabel'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('connectorProvisioningConfig')) {
                obj['connectorProvisioningConfig'] = RegisterConnectorRequestConnectorProvisioningConfig.constructFromObject(data['connectorProvisioningConfig']);
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateConnectorRegistrationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateConnectorRegistrationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateConnectorRegistrationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['connectorLabel'] && !(typeof data['connectorLabel'] === 'string' || data['connectorLabel'] instanceof String)) {
            throw new Error("Expected the field `connectorLabel` to be a primitive type in the JSON string but got " + data['connectorLabel']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `connectorProvisioningConfig`
        if (data['connectorProvisioningConfig']) { // data not null
          RegisterConnectorRequestConnectorProvisioningConfig.validateJSON(data['connectorProvisioningConfig']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }

        return true;
    }


}

UpdateConnectorRegistrationRequest.RequiredProperties = ["connectorLabel"];

/**
 * The name of the connector. The name is unique for each connector registration in your AWS account.
 * @member {String} connectorLabel
 */
UpdateConnectorRegistrationRequest.prototype['connectorLabel'] = undefined;

/**
 * A description about the update that you're applying to the connector.
 * @member {String} description
 */
UpdateConnectorRegistrationRequest.prototype['description'] = undefined;

/**
 * @member {module:model/RegisterConnectorRequestConnectorProvisioningConfig} connectorProvisioningConfig
 */
UpdateConnectorRegistrationRequest.prototype['connectorProvisioningConfig'] = undefined;

/**
 * <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>UpdateConnectorRegistration</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>UpdateConnectorRegistration</code>. The token is active for 8 hours.</p>
 * @member {String} clientToken
 */
UpdateConnectorRegistrationRequest.prototype['clientToken'] = undefined;






export default UpdateConnectorRegistrationRequest;

