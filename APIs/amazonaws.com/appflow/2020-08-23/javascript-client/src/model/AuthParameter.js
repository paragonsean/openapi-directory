/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthParameter model module.
 * @module model/AuthParameter
 * @version 2020-08-23
 */
class AuthParameter {
    /**
     * Constructs a new <code>AuthParameter</code>.
     * Information about required authentication parameters.
     * @alias module:model/AuthParameter
     */
    constructor() { 
        
        AuthParameter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthParameter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthParameter} obj Optional instance to populate.
     * @return {module:model/AuthParameter} The populated <code>AuthParameter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthParameter();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('isRequired')) {
                obj['isRequired'] = ApiClient.convertToType(data['isRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isSensitiveField')) {
                obj['isSensitiveField'] = ApiClient.convertToType(data['isSensitiveField'], 'Boolean');
            }
            if (data.hasOwnProperty('connectorSuppliedValues')) {
                obj['connectorSuppliedValues'] = ApiClient.convertToType(data['connectorSuppliedValues'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthParameter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthParameter</code>.
     */
    static validateJSON(data) {
        // validate the optional field `key`
        if (data['key']) { // data not null
          String.validateJSON(data['key']);
        }
        // validate the optional field `isRequired`
        if (data['isRequired']) { // data not null
          Boolean.validateJSON(data['isRequired']);
        }
        // validate the optional field `label`
        if (data['label']) { // data not null
          String.validateJSON(data['label']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `isSensitiveField`
        if (data['isSensitiveField']) { // data not null
          Boolean.validateJSON(data['isSensitiveField']);
        }
        // validate the optional field `connectorSuppliedValues`
        if (data['connectorSuppliedValues']) { // data not null
          Array.validateJSON(data['connectorSuppliedValues']);
        }

        return true;
    }


}



/**
 * @member {String} key
 */
AuthParameter.prototype['key'] = undefined;

/**
 * @member {Boolean} isRequired
 */
AuthParameter.prototype['isRequired'] = undefined;

/**
 * @member {String} label
 */
AuthParameter.prototype['label'] = undefined;

/**
 * @member {String} description
 */
AuthParameter.prototype['description'] = undefined;

/**
 * @member {Boolean} isSensitiveField
 */
AuthParameter.prototype['isSensitiveField'] = undefined;

/**
 * @member {Array} connectorSuppliedValues
 */
AuthParameter.prototype['connectorSuppliedValues'] = undefined;






export default AuthParameter;

