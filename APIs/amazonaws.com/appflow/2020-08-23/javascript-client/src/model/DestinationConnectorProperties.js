/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DestinationConnectorPropertiesCustomConnector from './DestinationConnectorPropertiesCustomConnector';
import DestinationConnectorPropertiesCustomerProfiles from './DestinationConnectorPropertiesCustomerProfiles';
import DestinationConnectorPropertiesEventBridge from './DestinationConnectorPropertiesEventBridge';
import DestinationConnectorPropertiesHoneycode from './DestinationConnectorPropertiesHoneycode';
import DestinationConnectorPropertiesMarketo from './DestinationConnectorPropertiesMarketo';
import DestinationConnectorPropertiesRedshift from './DestinationConnectorPropertiesRedshift';
import DestinationConnectorPropertiesS3 from './DestinationConnectorPropertiesS3';
import DestinationConnectorPropertiesSAPOData from './DestinationConnectorPropertiesSAPOData';
import DestinationConnectorPropertiesSalesforce from './DestinationConnectorPropertiesSalesforce';
import DestinationConnectorPropertiesSnowflake from './DestinationConnectorPropertiesSnowflake';
import DestinationConnectorPropertiesUpsolver from './DestinationConnectorPropertiesUpsolver';
import DestinationConnectorPropertiesZendesk from './DestinationConnectorPropertiesZendesk';

/**
 * The DestinationConnectorProperties model module.
 * @module model/DestinationConnectorProperties
 * @version 2020-08-23
 */
class DestinationConnectorProperties {
    /**
     * Constructs a new <code>DestinationConnectorProperties</code>.
     *  This stores the information that is required to query a particular connector. 
     * @alias module:model/DestinationConnectorProperties
     */
    constructor() { 
        
        DestinationConnectorProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinationConnectorProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinationConnectorProperties} obj Optional instance to populate.
     * @return {module:model/DestinationConnectorProperties} The populated <code>DestinationConnectorProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinationConnectorProperties();

            if (data.hasOwnProperty('Redshift')) {
                obj['Redshift'] = DestinationConnectorPropertiesRedshift.constructFromObject(data['Redshift']);
            }
            if (data.hasOwnProperty('S3')) {
                obj['S3'] = DestinationConnectorPropertiesS3.constructFromObject(data['S3']);
            }
            if (data.hasOwnProperty('Salesforce')) {
                obj['Salesforce'] = DestinationConnectorPropertiesSalesforce.constructFromObject(data['Salesforce']);
            }
            if (data.hasOwnProperty('Snowflake')) {
                obj['Snowflake'] = DestinationConnectorPropertiesSnowflake.constructFromObject(data['Snowflake']);
            }
            if (data.hasOwnProperty('EventBridge')) {
                obj['EventBridge'] = DestinationConnectorPropertiesEventBridge.constructFromObject(data['EventBridge']);
            }
            if (data.hasOwnProperty('LookoutMetrics')) {
                obj['LookoutMetrics'] = ApiClient.convertToType(data['LookoutMetrics'], Object);
            }
            if (data.hasOwnProperty('Upsolver')) {
                obj['Upsolver'] = DestinationConnectorPropertiesUpsolver.constructFromObject(data['Upsolver']);
            }
            if (data.hasOwnProperty('Honeycode')) {
                obj['Honeycode'] = DestinationConnectorPropertiesHoneycode.constructFromObject(data['Honeycode']);
            }
            if (data.hasOwnProperty('CustomerProfiles')) {
                obj['CustomerProfiles'] = DestinationConnectorPropertiesCustomerProfiles.constructFromObject(data['CustomerProfiles']);
            }
            if (data.hasOwnProperty('Zendesk')) {
                obj['Zendesk'] = DestinationConnectorPropertiesZendesk.constructFromObject(data['Zendesk']);
            }
            if (data.hasOwnProperty('Marketo')) {
                obj['Marketo'] = DestinationConnectorPropertiesMarketo.constructFromObject(data['Marketo']);
            }
            if (data.hasOwnProperty('CustomConnector')) {
                obj['CustomConnector'] = DestinationConnectorPropertiesCustomConnector.constructFromObject(data['CustomConnector']);
            }
            if (data.hasOwnProperty('SAPOData')) {
                obj['SAPOData'] = DestinationConnectorPropertiesSAPOData.constructFromObject(data['SAPOData']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinationConnectorProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinationConnectorProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Redshift`
        if (data['Redshift']) { // data not null
          DestinationConnectorPropertiesRedshift.validateJSON(data['Redshift']);
        }
        // validate the optional field `S3`
        if (data['S3']) { // data not null
          DestinationConnectorPropertiesS3.validateJSON(data['S3']);
        }
        // validate the optional field `Salesforce`
        if (data['Salesforce']) { // data not null
          DestinationConnectorPropertiesSalesforce.validateJSON(data['Salesforce']);
        }
        // validate the optional field `Snowflake`
        if (data['Snowflake']) { // data not null
          DestinationConnectorPropertiesSnowflake.validateJSON(data['Snowflake']);
        }
        // validate the optional field `EventBridge`
        if (data['EventBridge']) { // data not null
          DestinationConnectorPropertiesEventBridge.validateJSON(data['EventBridge']);
        }
        // validate the optional field `LookoutMetrics`
        if (data['LookoutMetrics']) { // data not null
          Object.validateJSON(data['LookoutMetrics']);
        }
        // validate the optional field `Upsolver`
        if (data['Upsolver']) { // data not null
          DestinationConnectorPropertiesUpsolver.validateJSON(data['Upsolver']);
        }
        // validate the optional field `Honeycode`
        if (data['Honeycode']) { // data not null
          DestinationConnectorPropertiesHoneycode.validateJSON(data['Honeycode']);
        }
        // validate the optional field `CustomerProfiles`
        if (data['CustomerProfiles']) { // data not null
          DestinationConnectorPropertiesCustomerProfiles.validateJSON(data['CustomerProfiles']);
        }
        // validate the optional field `Zendesk`
        if (data['Zendesk']) { // data not null
          DestinationConnectorPropertiesZendesk.validateJSON(data['Zendesk']);
        }
        // validate the optional field `Marketo`
        if (data['Marketo']) { // data not null
          DestinationConnectorPropertiesMarketo.validateJSON(data['Marketo']);
        }
        // validate the optional field `CustomConnector`
        if (data['CustomConnector']) { // data not null
          DestinationConnectorPropertiesCustomConnector.validateJSON(data['CustomConnector']);
        }
        // validate the optional field `SAPOData`
        if (data['SAPOData']) { // data not null
          DestinationConnectorPropertiesSAPOData.validateJSON(data['SAPOData']);
        }

        return true;
    }


}



/**
 * @member {module:model/DestinationConnectorPropertiesRedshift} Redshift
 */
DestinationConnectorProperties.prototype['Redshift'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesS3} S3
 */
DestinationConnectorProperties.prototype['S3'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesSalesforce} Salesforce
 */
DestinationConnectorProperties.prototype['Salesforce'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesSnowflake} Snowflake
 */
DestinationConnectorProperties.prototype['Snowflake'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesEventBridge} EventBridge
 */
DestinationConnectorProperties.prototype['EventBridge'] = undefined;

/**
 * @member {Object} LookoutMetrics
 */
DestinationConnectorProperties.prototype['LookoutMetrics'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesUpsolver} Upsolver
 */
DestinationConnectorProperties.prototype['Upsolver'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesHoneycode} Honeycode
 */
DestinationConnectorProperties.prototype['Honeycode'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesCustomerProfiles} CustomerProfiles
 */
DestinationConnectorProperties.prototype['CustomerProfiles'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesZendesk} Zendesk
 */
DestinationConnectorProperties.prototype['Zendesk'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesMarketo} Marketo
 */
DestinationConnectorProperties.prototype['Marketo'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesCustomConnector} CustomConnector
 */
DestinationConnectorProperties.prototype['CustomConnector'] = undefined;

/**
 * @member {module:model/DestinationConnectorPropertiesSAPOData} SAPOData
 */
DestinationConnectorProperties.prototype['SAPOData'] = undefined;






export default DestinationConnectorProperties;

