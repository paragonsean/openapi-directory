/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateFlowRequestMetadataCatalogConfig from './CreateFlowRequestMetadataCatalogConfig';
import CreateFlowRequestSourceFlowConfig from './CreateFlowRequestSourceFlowConfig';
import CreateFlowRequestTriggerConfig from './CreateFlowRequestTriggerConfig';
import DestinationFlowConfig from './DestinationFlowConfig';
import Task from './Task';

/**
 * The CreateFlowRequest model module.
 * @module model/CreateFlowRequest
 * @version 2020-08-23
 */
class CreateFlowRequest {
    /**
     * Constructs a new <code>CreateFlowRequest</code>.
     * @alias module:model/CreateFlowRequest
     * @param flowName {String}  The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. 
     * @param triggerConfig {module:model/CreateFlowRequestTriggerConfig} 
     * @param sourceFlowConfig {module:model/CreateFlowRequestSourceFlowConfig} 
     * @param destinationFlowConfigList {Array.<module:model/DestinationFlowConfig>}  The configuration that controls how Amazon AppFlow places data in the destination connector. 
     * @param tasks {Array.<module:model/Task>}  A list of tasks that Amazon AppFlow performs while transferring the data in the flow run. 
     */
    constructor(flowName, triggerConfig, sourceFlowConfig, destinationFlowConfigList, tasks) { 
        
        CreateFlowRequest.initialize(this, flowName, triggerConfig, sourceFlowConfig, destinationFlowConfigList, tasks);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, flowName, triggerConfig, sourceFlowConfig, destinationFlowConfigList, tasks) { 
        obj['flowName'] = flowName;
        obj['triggerConfig'] = triggerConfig;
        obj['sourceFlowConfig'] = sourceFlowConfig;
        obj['destinationFlowConfigList'] = destinationFlowConfigList;
        obj['tasks'] = tasks;
    }

    /**
     * Constructs a <code>CreateFlowRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFlowRequest} obj Optional instance to populate.
     * @return {module:model/CreateFlowRequest} The populated <code>CreateFlowRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFlowRequest();

            if (data.hasOwnProperty('flowName')) {
                obj['flowName'] = ApiClient.convertToType(data['flowName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('kmsArn')) {
                obj['kmsArn'] = ApiClient.convertToType(data['kmsArn'], 'String');
            }
            if (data.hasOwnProperty('triggerConfig')) {
                obj['triggerConfig'] = CreateFlowRequestTriggerConfig.constructFromObject(data['triggerConfig']);
            }
            if (data.hasOwnProperty('sourceFlowConfig')) {
                obj['sourceFlowConfig'] = CreateFlowRequestSourceFlowConfig.constructFromObject(data['sourceFlowConfig']);
            }
            if (data.hasOwnProperty('destinationFlowConfigList')) {
                obj['destinationFlowConfigList'] = ApiClient.convertToType(data['destinationFlowConfigList'], [DestinationFlowConfig]);
            }
            if (data.hasOwnProperty('tasks')) {
                obj['tasks'] = ApiClient.convertToType(data['tasks'], [Task]);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('metadataCatalogConfig')) {
                obj['metadataCatalogConfig'] = CreateFlowRequestMetadataCatalogConfig.constructFromObject(data['metadataCatalogConfig']);
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFlowRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFlowRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateFlowRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['flowName'] && !(typeof data['flowName'] === 'string' || data['flowName'] instanceof String)) {
            throw new Error("Expected the field `flowName` to be a primitive type in the JSON string but got " + data['flowName']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['kmsArn'] && !(typeof data['kmsArn'] === 'string' || data['kmsArn'] instanceof String)) {
            throw new Error("Expected the field `kmsArn` to be a primitive type in the JSON string but got " + data['kmsArn']);
        }
        // validate the optional field `triggerConfig`
        if (data['triggerConfig']) { // data not null
          CreateFlowRequestTriggerConfig.validateJSON(data['triggerConfig']);
        }
        // validate the optional field `sourceFlowConfig`
        if (data['sourceFlowConfig']) { // data not null
          CreateFlowRequestSourceFlowConfig.validateJSON(data['sourceFlowConfig']);
        }
        if (data['destinationFlowConfigList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['destinationFlowConfigList'])) {
                throw new Error("Expected the field `destinationFlowConfigList` to be an array in the JSON data but got " + data['destinationFlowConfigList']);
            }
            // validate the optional field `destinationFlowConfigList` (array)
            for (const item of data['destinationFlowConfigList']) {
                DestinationFlowConfig.validateJSON(item);
            };
        }
        if (data['tasks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tasks'])) {
                throw new Error("Expected the field `tasks` to be an array in the JSON data but got " + data['tasks']);
            }
            // validate the optional field `tasks` (array)
            for (const item of data['tasks']) {
                Task.validateJSON(item);
            };
        }
        // validate the optional field `metadataCatalogConfig`
        if (data['metadataCatalogConfig']) { // data not null
          CreateFlowRequestMetadataCatalogConfig.validateJSON(data['metadataCatalogConfig']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }

        return true;
    }


}

CreateFlowRequest.RequiredProperties = ["flowName", "triggerConfig", "sourceFlowConfig", "destinationFlowConfigList", "tasks"];

/**
 *  The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. 
 * @member {String} flowName
 */
CreateFlowRequest.prototype['flowName'] = undefined;

/**
 *  A description of the flow you want to create. 
 * @member {String} description
 */
CreateFlowRequest.prototype['description'] = undefined;

/**
 *  The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. 
 * @member {String} kmsArn
 */
CreateFlowRequest.prototype['kmsArn'] = undefined;

/**
 * @member {module:model/CreateFlowRequestTriggerConfig} triggerConfig
 */
CreateFlowRequest.prototype['triggerConfig'] = undefined;

/**
 * @member {module:model/CreateFlowRequestSourceFlowConfig} sourceFlowConfig
 */
CreateFlowRequest.prototype['sourceFlowConfig'] = undefined;

/**
 *  The configuration that controls how Amazon AppFlow places data in the destination connector. 
 * @member {Array.<module:model/DestinationFlowConfig>} destinationFlowConfigList
 */
CreateFlowRequest.prototype['destinationFlowConfigList'] = undefined;

/**
 *  A list of tasks that Amazon AppFlow performs while transferring the data in the flow run. 
 * @member {Array.<module:model/Task>} tasks
 */
CreateFlowRequest.prototype['tasks'] = undefined;

/**
 *  The tags used to organize, track, or control access for your flow. 
 * @member {Object.<String, String>} tags
 */
CreateFlowRequest.prototype['tags'] = undefined;

/**
 * @member {module:model/CreateFlowRequestMetadataCatalogConfig} metadataCatalogConfig
 */
CreateFlowRequest.prototype['metadataCatalogConfig'] = undefined;

/**
 * <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>CreateFlow</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>CreateFlow</code>. The token is active for 8 hours.</p>
 * @member {String} clientToken
 */
CreateFlowRequest.prototype['clientToken'] = undefined;






export default CreateFlowRequest;

