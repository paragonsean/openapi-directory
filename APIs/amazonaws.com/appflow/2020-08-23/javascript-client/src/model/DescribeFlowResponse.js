/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeFlowResponseLastRunExecutionDetails from './DescribeFlowResponseLastRunExecutionDetails';
import DescribeFlowResponseMetadataCatalogConfig from './DescribeFlowResponseMetadataCatalogConfig';
import DescribeFlowResponseSourceFlowConfig from './DescribeFlowResponseSourceFlowConfig';
import DescribeFlowResponseTriggerConfig from './DescribeFlowResponseTriggerConfig';
import FlowStatus from './FlowStatus';

/**
 * The DescribeFlowResponse model module.
 * @module model/DescribeFlowResponse
 * @version 2020-08-23
 */
class DescribeFlowResponse {
    /**
     * Constructs a new <code>DescribeFlowResponse</code>.
     * @alias module:model/DescribeFlowResponse
     */
    constructor() { 
        
        DescribeFlowResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeFlowResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeFlowResponse} obj Optional instance to populate.
     * @return {module:model/DescribeFlowResponse} The populated <code>DescribeFlowResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeFlowResponse();

            if (data.hasOwnProperty('flowArn')) {
                obj['flowArn'] = ApiClient.convertToType(data['flowArn'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('flowName')) {
                obj['flowName'] = ApiClient.convertToType(data['flowName'], 'String');
            }
            if (data.hasOwnProperty('kmsArn')) {
                obj['kmsArn'] = ApiClient.convertToType(data['kmsArn'], 'String');
            }
            if (data.hasOwnProperty('flowStatus')) {
                obj['flowStatus'] = ApiClient.convertToType(data['flowStatus'], FlowStatus);
            }
            if (data.hasOwnProperty('flowStatusMessage')) {
                obj['flowStatusMessage'] = ApiClient.convertToType(data['flowStatusMessage'], 'String');
            }
            if (data.hasOwnProperty('sourceFlowConfig')) {
                obj['sourceFlowConfig'] = DescribeFlowResponseSourceFlowConfig.constructFromObject(data['sourceFlowConfig']);
            }
            if (data.hasOwnProperty('destinationFlowConfigList')) {
                obj['destinationFlowConfigList'] = ApiClient.convertToType(data['destinationFlowConfigList'], Array);
            }
            if (data.hasOwnProperty('lastRunExecutionDetails')) {
                obj['lastRunExecutionDetails'] = DescribeFlowResponseLastRunExecutionDetails.constructFromObject(data['lastRunExecutionDetails']);
            }
            if (data.hasOwnProperty('triggerConfig')) {
                obj['triggerConfig'] = DescribeFlowResponseTriggerConfig.constructFromObject(data['triggerConfig']);
            }
            if (data.hasOwnProperty('tasks')) {
                obj['tasks'] = ApiClient.convertToType(data['tasks'], Array);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdatedAt')) {
                obj['lastUpdatedAt'] = ApiClient.convertToType(data['lastUpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = ApiClient.convertToType(data['lastUpdatedBy'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('metadataCatalogConfig')) {
                obj['metadataCatalogConfig'] = DescribeFlowResponseMetadataCatalogConfig.constructFromObject(data['metadataCatalogConfig']);
            }
            if (data.hasOwnProperty('lastRunMetadataCatalogDetails')) {
                obj['lastRunMetadataCatalogDetails'] = ApiClient.convertToType(data['lastRunMetadataCatalogDetails'], Array);
            }
            if (data.hasOwnProperty('schemaVersion')) {
                obj['schemaVersion'] = ApiClient.convertToType(data['schemaVersion'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeFlowResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeFlowResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `flowArn`
        if (data['flowArn']) { // data not null
          String.validateJSON(data['flowArn']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `flowName`
        if (data['flowName']) { // data not null
          String.validateJSON(data['flowName']);
        }
        // validate the optional field `kmsArn`
        if (data['kmsArn']) { // data not null
          String.validateJSON(data['kmsArn']);
        }
        // validate the optional field `flowStatus`
        if (data['flowStatus']) { // data not null
          FlowStatus.validateJSON(data['flowStatus']);
        }
        // validate the optional field `flowStatusMessage`
        if (data['flowStatusMessage']) { // data not null
          String.validateJSON(data['flowStatusMessage']);
        }
        // validate the optional field `sourceFlowConfig`
        if (data['sourceFlowConfig']) { // data not null
          DescribeFlowResponseSourceFlowConfig.validateJSON(data['sourceFlowConfig']);
        }
        // validate the optional field `destinationFlowConfigList`
        if (data['destinationFlowConfigList']) { // data not null
          Array.validateJSON(data['destinationFlowConfigList']);
        }
        // validate the optional field `lastRunExecutionDetails`
        if (data['lastRunExecutionDetails']) { // data not null
          DescribeFlowResponseLastRunExecutionDetails.validateJSON(data['lastRunExecutionDetails']);
        }
        // validate the optional field `triggerConfig`
        if (data['triggerConfig']) { // data not null
          DescribeFlowResponseTriggerConfig.validateJSON(data['triggerConfig']);
        }
        // validate the optional field `tasks`
        if (data['tasks']) { // data not null
          Array.validateJSON(data['tasks']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `lastUpdatedAt`
        if (data['lastUpdatedAt']) { // data not null
          Date.validateJSON(data['lastUpdatedAt']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          String.validateJSON(data['createdBy']);
        }
        // validate the optional field `lastUpdatedBy`
        if (data['lastUpdatedBy']) { // data not null
          String.validateJSON(data['lastUpdatedBy']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `metadataCatalogConfig`
        if (data['metadataCatalogConfig']) { // data not null
          DescribeFlowResponseMetadataCatalogConfig.validateJSON(data['metadataCatalogConfig']);
        }
        // validate the optional field `lastRunMetadataCatalogDetails`
        if (data['lastRunMetadataCatalogDetails']) { // data not null
          Array.validateJSON(data['lastRunMetadataCatalogDetails']);
        }
        // validate the optional field `schemaVersion`
        if (data['schemaVersion']) { // data not null
          Number.validateJSON(data['schemaVersion']);
        }

        return true;
    }


}



/**
 * @member {String} flowArn
 */
DescribeFlowResponse.prototype['flowArn'] = undefined;

/**
 * @member {String} description
 */
DescribeFlowResponse.prototype['description'] = undefined;

/**
 * @member {String} flowName
 */
DescribeFlowResponse.prototype['flowName'] = undefined;

/**
 * @member {String} kmsArn
 */
DescribeFlowResponse.prototype['kmsArn'] = undefined;

/**
 * @member {module:model/FlowStatus} flowStatus
 */
DescribeFlowResponse.prototype['flowStatus'] = undefined;

/**
 * @member {String} flowStatusMessage
 */
DescribeFlowResponse.prototype['flowStatusMessage'] = undefined;

/**
 * @member {module:model/DescribeFlowResponseSourceFlowConfig} sourceFlowConfig
 */
DescribeFlowResponse.prototype['sourceFlowConfig'] = undefined;

/**
 * @member {Array} destinationFlowConfigList
 */
DescribeFlowResponse.prototype['destinationFlowConfigList'] = undefined;

/**
 * @member {module:model/DescribeFlowResponseLastRunExecutionDetails} lastRunExecutionDetails
 */
DescribeFlowResponse.prototype['lastRunExecutionDetails'] = undefined;

/**
 * @member {module:model/DescribeFlowResponseTriggerConfig} triggerConfig
 */
DescribeFlowResponse.prototype['triggerConfig'] = undefined;

/**
 * @member {Array} tasks
 */
DescribeFlowResponse.prototype['tasks'] = undefined;

/**
 * @member {Date} createdAt
 */
DescribeFlowResponse.prototype['createdAt'] = undefined;

/**
 * @member {Date} lastUpdatedAt
 */
DescribeFlowResponse.prototype['lastUpdatedAt'] = undefined;

/**
 * @member {String} createdBy
 */
DescribeFlowResponse.prototype['createdBy'] = undefined;

/**
 * @member {String} lastUpdatedBy
 */
DescribeFlowResponse.prototype['lastUpdatedBy'] = undefined;

/**
 * @member {Object} tags
 */
DescribeFlowResponse.prototype['tags'] = undefined;

/**
 * @member {module:model/DescribeFlowResponseMetadataCatalogConfig} metadataCatalogConfig
 */
DescribeFlowResponse.prototype['metadataCatalogConfig'] = undefined;

/**
 * @member {Array} lastRunMetadataCatalogDetails
 */
DescribeFlowResponse.prototype['lastRunMetadataCatalogDetails'] = undefined;

/**
 * @member {Number} schemaVersion
 */
DescribeFlowResponse.prototype['schemaVersion'] = undefined;






export default DescribeFlowResponse;

