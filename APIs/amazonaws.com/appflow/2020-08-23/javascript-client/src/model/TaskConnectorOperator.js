/**
 * Amazon Appflow
 * <p>Welcome to the Amazon AppFlow API reference. This guide is for developers who need detailed information about the Amazon AppFlow API operations, data types, and errors. </p> <p>Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between software as a service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and Amazon Web Services like Amazon S3 and Amazon Redshift. </p> <p>Use the following links to get started on the Amazon AppFlow API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Amazon AppFlow API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Amazon AppFlow data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/appflow/1.0/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Amazon AppFlow, we recommend that you review the <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html\">Amazon AppFlow User Guide</a>.</p> <p>Amazon AppFlow API users can use vendor-specific mechanisms for OAuth, and include applicable OAuth attributes (such as <code>auth-code</code> and <code>redirecturi</code>) with the connector-specific <code>ConnectorProfileProperties</code> when creating a new connector profile using Amazon AppFlow API operations. For example, Salesforce users can refer to the <a href=\"https://help.salesforce.com/articleView?id=remoteaccess_authenticate.htm\"> <i>Authorize Apps with OAuth</i> </a> documentation.</p>
 *
 * The version of the OpenAPI document: 2020-08-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AmplitudeConnectorOperator from './AmplitudeConnectorOperator';
import ConnectorOperator from './ConnectorOperator';
import DatadogConnectorOperator from './DatadogConnectorOperator';
import DynatraceConnectorOperator from './DynatraceConnectorOperator';
import GoogleAnalyticsConnectorOperator from './GoogleAnalyticsConnectorOperator';
import InforNexusConnectorOperator from './InforNexusConnectorOperator';
import MarketoConnectorOperator from './MarketoConnectorOperator';
import Operator from './Operator';
import PardotConnectorOperator from './PardotConnectorOperator';
import S3ConnectorOperator from './S3ConnectorOperator';
import SAPODataConnectorOperator from './SAPODataConnectorOperator';
import SalesforceConnectorOperator from './SalesforceConnectorOperator';
import ServiceNowConnectorOperator from './ServiceNowConnectorOperator';
import SingularConnectorOperator from './SingularConnectorOperator';
import SlackConnectorOperator from './SlackConnectorOperator';
import TrendmicroConnectorOperator from './TrendmicroConnectorOperator';
import VeevaConnectorOperator from './VeevaConnectorOperator';
import ZendeskConnectorOperator from './ZendeskConnectorOperator';

/**
 * The TaskConnectorOperator model module.
 * @module model/TaskConnectorOperator
 * @version 2020-08-23
 */
class TaskConnectorOperator {
    /**
     * Constructs a new <code>TaskConnectorOperator</code>.
     * @alias module:model/TaskConnectorOperator
     * @implements module:model/ConnectorOperator
     */
    constructor() { 
        ConnectorOperator.initialize(this);
        TaskConnectorOperator.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskConnectorOperator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskConnectorOperator} obj Optional instance to populate.
     * @return {module:model/TaskConnectorOperator} The populated <code>TaskConnectorOperator</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskConnectorOperator();
            ConnectorOperator.constructFromObject(data, obj);

            if (data.hasOwnProperty('Amplitude')) {
                obj['Amplitude'] = ApiClient.convertToType(data['Amplitude'], AmplitudeConnectorOperator);
            }
            if (data.hasOwnProperty('Datadog')) {
                obj['Datadog'] = ApiClient.convertToType(data['Datadog'], DatadogConnectorOperator);
            }
            if (data.hasOwnProperty('Dynatrace')) {
                obj['Dynatrace'] = ApiClient.convertToType(data['Dynatrace'], DynatraceConnectorOperator);
            }
            if (data.hasOwnProperty('GoogleAnalytics')) {
                obj['GoogleAnalytics'] = ApiClient.convertToType(data['GoogleAnalytics'], GoogleAnalyticsConnectorOperator);
            }
            if (data.hasOwnProperty('InforNexus')) {
                obj['InforNexus'] = ApiClient.convertToType(data['InforNexus'], InforNexusConnectorOperator);
            }
            if (data.hasOwnProperty('Marketo')) {
                obj['Marketo'] = ApiClient.convertToType(data['Marketo'], MarketoConnectorOperator);
            }
            if (data.hasOwnProperty('S3')) {
                obj['S3'] = ApiClient.convertToType(data['S3'], S3ConnectorOperator);
            }
            if (data.hasOwnProperty('Salesforce')) {
                obj['Salesforce'] = ApiClient.convertToType(data['Salesforce'], SalesforceConnectorOperator);
            }
            if (data.hasOwnProperty('ServiceNow')) {
                obj['ServiceNow'] = ApiClient.convertToType(data['ServiceNow'], ServiceNowConnectorOperator);
            }
            if (data.hasOwnProperty('Singular')) {
                obj['Singular'] = ApiClient.convertToType(data['Singular'], SingularConnectorOperator);
            }
            if (data.hasOwnProperty('Slack')) {
                obj['Slack'] = ApiClient.convertToType(data['Slack'], SlackConnectorOperator);
            }
            if (data.hasOwnProperty('Trendmicro')) {
                obj['Trendmicro'] = ApiClient.convertToType(data['Trendmicro'], TrendmicroConnectorOperator);
            }
            if (data.hasOwnProperty('Veeva')) {
                obj['Veeva'] = ApiClient.convertToType(data['Veeva'], VeevaConnectorOperator);
            }
            if (data.hasOwnProperty('Zendesk')) {
                obj['Zendesk'] = ApiClient.convertToType(data['Zendesk'], ZendeskConnectorOperator);
            }
            if (data.hasOwnProperty('SAPOData')) {
                obj['SAPOData'] = ApiClient.convertToType(data['SAPOData'], SAPODataConnectorOperator);
            }
            if (data.hasOwnProperty('CustomConnector')) {
                obj['CustomConnector'] = ApiClient.convertToType(data['CustomConnector'], Operator);
            }
            if (data.hasOwnProperty('Pardot')) {
                obj['Pardot'] = ApiClient.convertToType(data['Pardot'], PardotConnectorOperator);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskConnectorOperator</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskConnectorOperator</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Amplitude`
        if (data['Amplitude']) { // data not null
          AmplitudeConnectorOperator.validateJSON(data['Amplitude']);
        }
        // validate the optional field `Datadog`
        if (data['Datadog']) { // data not null
          DatadogConnectorOperator.validateJSON(data['Datadog']);
        }
        // validate the optional field `Dynatrace`
        if (data['Dynatrace']) { // data not null
          DynatraceConnectorOperator.validateJSON(data['Dynatrace']);
        }
        // validate the optional field `GoogleAnalytics`
        if (data['GoogleAnalytics']) { // data not null
          GoogleAnalyticsConnectorOperator.validateJSON(data['GoogleAnalytics']);
        }
        // validate the optional field `InforNexus`
        if (data['InforNexus']) { // data not null
          InforNexusConnectorOperator.validateJSON(data['InforNexus']);
        }
        // validate the optional field `Marketo`
        if (data['Marketo']) { // data not null
          MarketoConnectorOperator.validateJSON(data['Marketo']);
        }
        // validate the optional field `S3`
        if (data['S3']) { // data not null
          S3ConnectorOperator.validateJSON(data['S3']);
        }
        // validate the optional field `Salesforce`
        if (data['Salesforce']) { // data not null
          SalesforceConnectorOperator.validateJSON(data['Salesforce']);
        }
        // validate the optional field `ServiceNow`
        if (data['ServiceNow']) { // data not null
          ServiceNowConnectorOperator.validateJSON(data['ServiceNow']);
        }
        // validate the optional field `Singular`
        if (data['Singular']) { // data not null
          SingularConnectorOperator.validateJSON(data['Singular']);
        }
        // validate the optional field `Slack`
        if (data['Slack']) { // data not null
          SlackConnectorOperator.validateJSON(data['Slack']);
        }
        // validate the optional field `Trendmicro`
        if (data['Trendmicro']) { // data not null
          TrendmicroConnectorOperator.validateJSON(data['Trendmicro']);
        }
        // validate the optional field `Veeva`
        if (data['Veeva']) { // data not null
          VeevaConnectorOperator.validateJSON(data['Veeva']);
        }
        // validate the optional field `Zendesk`
        if (data['Zendesk']) { // data not null
          ZendeskConnectorOperator.validateJSON(data['Zendesk']);
        }
        // validate the optional field `SAPOData`
        if (data['SAPOData']) { // data not null
          SAPODataConnectorOperator.validateJSON(data['SAPOData']);
        }
        // validate the optional field `CustomConnector`
        if (data['CustomConnector']) { // data not null
          Operator.validateJSON(data['CustomConnector']);
        }
        // validate the optional field `Pardot`
        if (data['Pardot']) { // data not null
          PardotConnectorOperator.validateJSON(data['Pardot']);
        }

        return true;
    }


}



/**
 * @member {module:model/AmplitudeConnectorOperator} Amplitude
 */
TaskConnectorOperator.prototype['Amplitude'] = undefined;

/**
 * @member {module:model/DatadogConnectorOperator} Datadog
 */
TaskConnectorOperator.prototype['Datadog'] = undefined;

/**
 * @member {module:model/DynatraceConnectorOperator} Dynatrace
 */
TaskConnectorOperator.prototype['Dynatrace'] = undefined;

/**
 * @member {module:model/GoogleAnalyticsConnectorOperator} GoogleAnalytics
 */
TaskConnectorOperator.prototype['GoogleAnalytics'] = undefined;

/**
 * @member {module:model/InforNexusConnectorOperator} InforNexus
 */
TaskConnectorOperator.prototype['InforNexus'] = undefined;

/**
 * @member {module:model/MarketoConnectorOperator} Marketo
 */
TaskConnectorOperator.prototype['Marketo'] = undefined;

/**
 * @member {module:model/S3ConnectorOperator} S3
 */
TaskConnectorOperator.prototype['S3'] = undefined;

/**
 * @member {module:model/SalesforceConnectorOperator} Salesforce
 */
TaskConnectorOperator.prototype['Salesforce'] = undefined;

/**
 * @member {module:model/ServiceNowConnectorOperator} ServiceNow
 */
TaskConnectorOperator.prototype['ServiceNow'] = undefined;

/**
 * @member {module:model/SingularConnectorOperator} Singular
 */
TaskConnectorOperator.prototype['Singular'] = undefined;

/**
 * @member {module:model/SlackConnectorOperator} Slack
 */
TaskConnectorOperator.prototype['Slack'] = undefined;

/**
 * @member {module:model/TrendmicroConnectorOperator} Trendmicro
 */
TaskConnectorOperator.prototype['Trendmicro'] = undefined;

/**
 * @member {module:model/VeevaConnectorOperator} Veeva
 */
TaskConnectorOperator.prototype['Veeva'] = undefined;

/**
 * @member {module:model/ZendeskConnectorOperator} Zendesk
 */
TaskConnectorOperator.prototype['Zendesk'] = undefined;

/**
 * @member {module:model/SAPODataConnectorOperator} SAPOData
 */
TaskConnectorOperator.prototype['SAPOData'] = undefined;

/**
 * @member {module:model/Operator} CustomConnector
 */
TaskConnectorOperator.prototype['CustomConnector'] = undefined;

/**
 * @member {module:model/PardotConnectorOperator} Pardot
 */
TaskConnectorOperator.prototype['Pardot'] = undefined;


// Implement ConnectorOperator interface:
/**
 * @member {module:model/AmplitudeConnectorOperator} Amplitude
 */
ConnectorOperator.prototype['Amplitude'] = undefined;
/**
 * @member {module:model/DatadogConnectorOperator} Datadog
 */
ConnectorOperator.prototype['Datadog'] = undefined;
/**
 * @member {module:model/DynatraceConnectorOperator} Dynatrace
 */
ConnectorOperator.prototype['Dynatrace'] = undefined;
/**
 * @member {module:model/GoogleAnalyticsConnectorOperator} GoogleAnalytics
 */
ConnectorOperator.prototype['GoogleAnalytics'] = undefined;
/**
 * @member {module:model/InforNexusConnectorOperator} InforNexus
 */
ConnectorOperator.prototype['InforNexus'] = undefined;
/**
 * @member {module:model/MarketoConnectorOperator} Marketo
 */
ConnectorOperator.prototype['Marketo'] = undefined;
/**
 * @member {module:model/S3ConnectorOperator} S3
 */
ConnectorOperator.prototype['S3'] = undefined;
/**
 * @member {module:model/SalesforceConnectorOperator} Salesforce
 */
ConnectorOperator.prototype['Salesforce'] = undefined;
/**
 * @member {module:model/ServiceNowConnectorOperator} ServiceNow
 */
ConnectorOperator.prototype['ServiceNow'] = undefined;
/**
 * @member {module:model/SingularConnectorOperator} Singular
 */
ConnectorOperator.prototype['Singular'] = undefined;
/**
 * @member {module:model/SlackConnectorOperator} Slack
 */
ConnectorOperator.prototype['Slack'] = undefined;
/**
 * @member {module:model/TrendmicroConnectorOperator} Trendmicro
 */
ConnectorOperator.prototype['Trendmicro'] = undefined;
/**
 * @member {module:model/VeevaConnectorOperator} Veeva
 */
ConnectorOperator.prototype['Veeva'] = undefined;
/**
 * @member {module:model/ZendeskConnectorOperator} Zendesk
 */
ConnectorOperator.prototype['Zendesk'] = undefined;
/**
 * @member {module:model/SAPODataConnectorOperator} SAPOData
 */
ConnectorOperator.prototype['SAPOData'] = undefined;
/**
 * @member {module:model/Operator} CustomConnector
 */
ConnectorOperator.prototype['CustomConnector'] = undefined;
/**
 * @member {module:model/PardotConnectorOperator} Pardot
 */
ConnectorOperator.prototype['Pardot'] = undefined;




export default TaskConnectorOperator;

