/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateStreamingSessionStreamResponse_stream.h
 *
 * 
 */

#ifndef OAICreateStreamingSessionStreamResponse_stream_H
#define OAICreateStreamingSessionStreamResponse_stream_H

#include <QJsonObject>

#include "OAIStreamingSessionStreamState.h"
#include "OAIStreamingSessionStreamStatusCode.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateStreamingSessionStreamResponse_stream : public OAIObject {
public:
    OAICreateStreamingSessionStreamResponse_stream();
    OAICreateStreamingSessionStreamResponse_stream(QString json);
    ~OAICreateStreamingSessionStreamResponse_stream() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getExpiresAt() const;
    void setExpiresAt(const QDateTime &expires_at);
    bool is_expires_at_Set() const;
    bool is_expires_at_Valid() const;

    QString getOwnedBy() const;
    void setOwnedBy(const QString &owned_by);
    bool is_owned_by_Set() const;
    bool is_owned_by_Valid() const;

    OAIStreamingSessionStreamState getState() const;
    void setState(const OAIStreamingSessionStreamState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIStreamingSessionStreamStatusCode getStatusCode() const;
    void setStatusCode(const OAIStreamingSessionStreamStatusCode &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    QString getStreamId() const;
    void setStreamId(const QString &stream_id);
    bool is_stream_id_Set() const;
    bool is_stream_id_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_expires_at;
    bool m_expires_at_isSet;
    bool m_expires_at_isValid;

    QString m_owned_by;
    bool m_owned_by_isSet;
    bool m_owned_by_isValid;

    OAIStreamingSessionStreamState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIStreamingSessionStreamStatusCode m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    QString m_stream_id;
    bool m_stream_id_isSet;
    bool m_stream_id_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateStreamingSessionStreamResponse_stream)

#endif // OAICreateStreamingSessionStreamResponse_stream_H
