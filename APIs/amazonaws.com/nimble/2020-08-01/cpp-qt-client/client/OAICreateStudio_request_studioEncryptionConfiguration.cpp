/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStudio_request_studioEncryptionConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStudio_request_studioEncryptionConfiguration::OAICreateStudio_request_studioEncryptionConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStudio_request_studioEncryptionConfiguration::OAICreateStudio_request_studioEncryptionConfiguration() {
    this->initializeModel();
}

OAICreateStudio_request_studioEncryptionConfiguration::~OAICreateStudio_request_studioEncryptionConfiguration() {}

void OAICreateStudio_request_studioEncryptionConfiguration::initializeModel() {

    m_key_arn_isSet = false;
    m_key_arn_isValid = false;

    m_key_type_isSet = false;
    m_key_type_isValid = false;
}

void OAICreateStudio_request_studioEncryptionConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStudio_request_studioEncryptionConfiguration::fromJsonObject(QJsonObject json) {

    m_key_arn_isValid = ::OpenAPI::fromJsonValue(m_key_arn, json[QString("keyArn")]);
    m_key_arn_isSet = !json[QString("keyArn")].isNull() && m_key_arn_isValid;

    m_key_type_isValid = ::OpenAPI::fromJsonValue(m_key_type, json[QString("keyType")]);
    m_key_type_isSet = !json[QString("keyType")].isNull() && m_key_type_isValid;
}

QString OAICreateStudio_request_studioEncryptionConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStudio_request_studioEncryptionConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_key_arn_isSet) {
        obj.insert(QString("keyArn"), ::OpenAPI::toJsonValue(m_key_arn));
    }
    if (m_key_type.isSet()) {
        obj.insert(QString("keyType"), ::OpenAPI::toJsonValue(m_key_type));
    }
    return obj;
}

QString OAICreateStudio_request_studioEncryptionConfiguration::getKeyArn() const {
    return m_key_arn;
}
void OAICreateStudio_request_studioEncryptionConfiguration::setKeyArn(const QString &key_arn) {
    m_key_arn = key_arn;
    m_key_arn_isSet = true;
}

bool OAICreateStudio_request_studioEncryptionConfiguration::is_key_arn_Set() const{
    return m_key_arn_isSet;
}

bool OAICreateStudio_request_studioEncryptionConfiguration::is_key_arn_Valid() const{
    return m_key_arn_isValid;
}

OAIStudioEncryptionConfigurationKeyType OAICreateStudio_request_studioEncryptionConfiguration::getKeyType() const {
    return m_key_type;
}
void OAICreateStudio_request_studioEncryptionConfiguration::setKeyType(const OAIStudioEncryptionConfigurationKeyType &key_type) {
    m_key_type = key_type;
    m_key_type_isSet = true;
}

bool OAICreateStudio_request_studioEncryptionConfiguration::is_key_type_Set() const{
    return m_key_type_isSet;
}

bool OAICreateStudio_request_studioEncryptionConfiguration::is_key_type_Valid() const{
    return m_key_type_isValid;
}

bool OAICreateStudio_request_studioEncryptionConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStudio_request_studioEncryptionConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
