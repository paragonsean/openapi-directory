/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateStudio_request.h
 *
 * 
 */

#ifndef OAICreateStudio_request_H
#define OAICreateStudio_request_H

#include <QJsonObject>

#include "OAICreateStudio_request_studioEncryptionConfiguration.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateStudio_request_studioEncryptionConfiguration;

class OAICreateStudio_request : public OAIObject {
public:
    OAICreateStudio_request();
    OAICreateStudio_request(QString json);
    ~OAICreateStudio_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdminRoleArn() const;
    void setAdminRoleArn(const QString &admin_role_arn);
    bool is_admin_role_arn_Set() const;
    bool is_admin_role_arn_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAICreateStudio_request_studioEncryptionConfiguration getStudioEncryptionConfiguration() const;
    void setStudioEncryptionConfiguration(const OAICreateStudio_request_studioEncryptionConfiguration &studio_encryption_configuration);
    bool is_studio_encryption_configuration_Set() const;
    bool is_studio_encryption_configuration_Valid() const;

    QString getStudioName() const;
    void setStudioName(const QString &studio_name);
    bool is_studio_name_Set() const;
    bool is_studio_name_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getUserRoleArn() const;
    void setUserRoleArn(const QString &user_role_arn);
    bool is_user_role_arn_Set() const;
    bool is_user_role_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_admin_role_arn;
    bool m_admin_role_arn_isSet;
    bool m_admin_role_arn_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAICreateStudio_request_studioEncryptionConfiguration m_studio_encryption_configuration;
    bool m_studio_encryption_configuration_isSet;
    bool m_studio_encryption_configuration_isValid;

    QString m_studio_name;
    bool m_studio_name_isSet;
    bool m_studio_name_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_user_role_arn;
    bool m_user_role_arn_isSet;
    bool m_user_role_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateStudio_request)

#endif // OAICreateStudio_request_H
