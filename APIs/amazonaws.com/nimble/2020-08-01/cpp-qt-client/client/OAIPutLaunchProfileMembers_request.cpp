/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutLaunchProfileMembers_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutLaunchProfileMembers_request::OAIPutLaunchProfileMembers_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutLaunchProfileMembers_request::OAIPutLaunchProfileMembers_request() {
    this->initializeModel();
}

OAIPutLaunchProfileMembers_request::~OAIPutLaunchProfileMembers_request() {}

void OAIPutLaunchProfileMembers_request::initializeModel() {

    m_identity_store_id_isSet = false;
    m_identity_store_id_isValid = false;

    m_members_isSet = false;
    m_members_isValid = false;
}

void OAIPutLaunchProfileMembers_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutLaunchProfileMembers_request::fromJsonObject(QJsonObject json) {

    m_identity_store_id_isValid = ::OpenAPI::fromJsonValue(m_identity_store_id, json[QString("identityStoreId")]);
    m_identity_store_id_isSet = !json[QString("identityStoreId")].isNull() && m_identity_store_id_isValid;

    m_members_isValid = ::OpenAPI::fromJsonValue(m_members, json[QString("members")]);
    m_members_isSet = !json[QString("members")].isNull() && m_members_isValid;
}

QString OAIPutLaunchProfileMembers_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutLaunchProfileMembers_request::asJsonObject() const {
    QJsonObject obj;
    if (m_identity_store_id_isSet) {
        obj.insert(QString("identityStoreId"), ::OpenAPI::toJsonValue(m_identity_store_id));
    }
    if (m_members.size() > 0) {
        obj.insert(QString("members"), ::OpenAPI::toJsonValue(m_members));
    }
    return obj;
}

QString OAIPutLaunchProfileMembers_request::getIdentityStoreId() const {
    return m_identity_store_id;
}
void OAIPutLaunchProfileMembers_request::setIdentityStoreId(const QString &identity_store_id) {
    m_identity_store_id = identity_store_id;
    m_identity_store_id_isSet = true;
}

bool OAIPutLaunchProfileMembers_request::is_identity_store_id_Set() const{
    return m_identity_store_id_isSet;
}

bool OAIPutLaunchProfileMembers_request::is_identity_store_id_Valid() const{
    return m_identity_store_id_isValid;
}

QList<OAINewLaunchProfileMember> OAIPutLaunchProfileMembers_request::getMembers() const {
    return m_members;
}
void OAIPutLaunchProfileMembers_request::setMembers(const QList<OAINewLaunchProfileMember> &members) {
    m_members = members;
    m_members_isSet = true;
}

bool OAIPutLaunchProfileMembers_request::is_members_Set() const{
    return m_members_isSet;
}

bool OAIPutLaunchProfileMembers_request::is_members_Valid() const{
    return m_members_isValid;
}

bool OAIPutLaunchProfileMembers_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identity_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_members.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutLaunchProfileMembers_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_identity_store_id_isValid && m_members_isValid && true;
}

} // namespace OpenAPI
