/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateStudioComponentRequest.h
 *
 * 
 */

#ifndef OAICreateStudioComponentRequest_H
#define OAICreateStudioComponentRequest_H

#include <QJsonObject>

#include "OAICreateStudioComponentRequest_configuration.h"
#include "OAIStudioComponentSubtype.h"
#include "OAIStudioComponentType.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateStudioComponentRequest_configuration;

class OAICreateStudioComponentRequest : public OAIObject {
public:
    OAICreateStudioComponentRequest();
    OAICreateStudioComponentRequest(QString json);
    ~OAICreateStudioComponentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateStudioComponentRequest_configuration getConfiguration() const;
    void setConfiguration(const OAICreateStudioComponentRequest_configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getEc2SecurityGroupIds() const;
    void setEc2SecurityGroupIds(const QList &ec2_security_group_ids);
    bool is_ec2_security_group_ids_Set() const;
    bool is_ec2_security_group_ids_Valid() const;

    QList getInitializationScripts() const;
    void setInitializationScripts(const QList &initialization_scripts);
    bool is_initialization_scripts_Set() const;
    bool is_initialization_scripts_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRuntimeRoleArn() const;
    void setRuntimeRoleArn(const QString &runtime_role_arn);
    bool is_runtime_role_arn_Set() const;
    bool is_runtime_role_arn_Valid() const;

    QList getScriptParameters() const;
    void setScriptParameters(const QList &script_parameters);
    bool is_script_parameters_Set() const;
    bool is_script_parameters_Valid() const;

    QString getSecureInitializationRoleArn() const;
    void setSecureInitializationRoleArn(const QString &secure_initialization_role_arn);
    bool is_secure_initialization_role_arn_Set() const;
    bool is_secure_initialization_role_arn_Valid() const;

    OAIStudioComponentSubtype getSubtype() const;
    void setSubtype(const OAIStudioComponentSubtype &subtype);
    bool is_subtype_Set() const;
    bool is_subtype_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIStudioComponentType getType() const;
    void setType(const OAIStudioComponentType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateStudioComponentRequest_configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_ec2_security_group_ids;
    bool m_ec2_security_group_ids_isSet;
    bool m_ec2_security_group_ids_isValid;

    QList m_initialization_scripts;
    bool m_initialization_scripts_isSet;
    bool m_initialization_scripts_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_runtime_role_arn;
    bool m_runtime_role_arn_isSet;
    bool m_runtime_role_arn_isValid;

    QList m_script_parameters;
    bool m_script_parameters_isSet;
    bool m_script_parameters_isValid;

    QString m_secure_initialization_role_arn;
    bool m_secure_initialization_role_arn_isSet;
    bool m_secure_initialization_role_arn_isValid;

    OAIStudioComponentSubtype m_subtype;
    bool m_subtype_isSet;
    bool m_subtype_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIStudioComponentType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateStudioComponentRequest)

#endif // OAICreateStudioComponentRequest_H
