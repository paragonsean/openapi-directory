/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateStreamingImageResponse_streamingImage.h
 *
 * 
 */

#ifndef OAICreateStreamingImageResponse_streamingImage_H
#define OAICreateStreamingImageResponse_streamingImage_H

#include <QJsonObject>

#include "OAIStreamingImageState.h"
#include "OAIStreamingImageStatusCode.h"
#include "OAIStreamingImage_encryptionConfiguration.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStreamingImage_encryptionConfiguration;

class OAICreateStreamingImageResponse_streamingImage : public OAIObject {
public:
    OAICreateStreamingImageResponse_streamingImage();
    OAICreateStreamingImageResponse_streamingImage(QString json);
    ~OAICreateStreamingImageResponse_streamingImage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEc2ImageId() const;
    void setEc2ImageId(const QString &ec2_image_id);
    bool is_ec2_image_id_Set() const;
    bool is_ec2_image_id_Valid() const;

    OAIStreamingImage_encryptionConfiguration getEncryptionConfiguration() const;
    void setEncryptionConfiguration(const OAIStreamingImage_encryptionConfiguration &encryption_configuration);
    bool is_encryption_configuration_Set() const;
    bool is_encryption_configuration_Valid() const;

    QList getEulaIds() const;
    void setEulaIds(const QList &eula_ids);
    bool is_eula_ids_Set() const;
    bool is_eula_ids_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    OAIStreamingImageState getState() const;
    void setState(const OAIStreamingImageState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIStreamingImageStatusCode getStatusCode() const;
    void setStatusCode(const OAIStreamingImageStatusCode &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    QString getStreamingImageId() const;
    void setStreamingImageId(const QString &streaming_image_id);
    bool is_streaming_image_id_Set() const;
    bool is_streaming_image_id_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_ec2_image_id;
    bool m_ec2_image_id_isSet;
    bool m_ec2_image_id_isValid;

    OAIStreamingImage_encryptionConfiguration m_encryption_configuration;
    bool m_encryption_configuration_isSet;
    bool m_encryption_configuration_isValid;

    QList m_eula_ids;
    bool m_eula_ids_isSet;
    bool m_eula_ids_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    OAIStreamingImageState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIStreamingImageStatusCode m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QString m_streaming_image_id;
    bool m_streaming_image_id_isSet;
    bool m_streaming_image_id_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateStreamingImageResponse_streamingImage)

#endif // OAICreateStreamingImageResponse_streamingImage_H
