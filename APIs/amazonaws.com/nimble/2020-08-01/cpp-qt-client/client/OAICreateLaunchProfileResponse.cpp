/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateLaunchProfileResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateLaunchProfileResponse::OAICreateLaunchProfileResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateLaunchProfileResponse::OAICreateLaunchProfileResponse() {
    this->initializeModel();
}

OAICreateLaunchProfileResponse::~OAICreateLaunchProfileResponse() {}

void OAICreateLaunchProfileResponse::initializeModel() {

    m_launch_profile_isSet = false;
    m_launch_profile_isValid = false;
}

void OAICreateLaunchProfileResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateLaunchProfileResponse::fromJsonObject(QJsonObject json) {

    m_launch_profile_isValid = ::OpenAPI::fromJsonValue(m_launch_profile, json[QString("launchProfile")]);
    m_launch_profile_isSet = !json[QString("launchProfile")].isNull() && m_launch_profile_isValid;
}

QString OAICreateLaunchProfileResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateLaunchProfileResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_launch_profile.isSet()) {
        obj.insert(QString("launchProfile"), ::OpenAPI::toJsonValue(m_launch_profile));
    }
    return obj;
}

OAICreateLaunchProfileResponse_launchProfile OAICreateLaunchProfileResponse::getLaunchProfile() const {
    return m_launch_profile;
}
void OAICreateLaunchProfileResponse::setLaunchProfile(const OAICreateLaunchProfileResponse_launchProfile &launch_profile) {
    m_launch_profile = launch_profile;
    m_launch_profile_isSet = true;
}

bool OAICreateLaunchProfileResponse::is_launch_profile_Set() const{
    return m_launch_profile_isSet;
}

bool OAICreateLaunchProfileResponse::is_launch_profile_Valid() const{
    return m_launch_profile_isValid;
}

bool OAICreateLaunchProfileResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_launch_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateLaunchProfileResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
