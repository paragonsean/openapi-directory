/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateStudioComponentResponse_studioComponent.h
 *
 * 
 */

#ifndef OAICreateStudioComponentResponse_studioComponent_H
#define OAICreateStudioComponentResponse_studioComponent_H

#include <QJsonObject>

#include "OAICreateStudioComponentRequest_configuration.h"
#include "OAIStudioComponentState.h"
#include "OAIStudioComponentStatusCode.h"
#include "OAIStudioComponentSubtype.h"
#include "OAIStudioComponentType.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateStudioComponentRequest_configuration;

class OAICreateStudioComponentResponse_studioComponent : public OAIObject {
public:
    OAICreateStudioComponentResponse_studioComponent();
    OAICreateStudioComponentResponse_studioComponent(QString json);
    ~OAICreateStudioComponentResponse_studioComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    OAICreateStudioComponentRequest_configuration getConfiguration() const;
    void setConfiguration(const OAICreateStudioComponentRequest_configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getEc2SecurityGroupIds() const;
    void setEc2SecurityGroupIds(const QList &ec2_security_group_ids);
    bool is_ec2_security_group_ids_Set() const;
    bool is_ec2_security_group_ids_Valid() const;

    QList getInitializationScripts() const;
    void setInitializationScripts(const QList &initialization_scripts);
    bool is_initialization_scripts_Set() const;
    bool is_initialization_scripts_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRuntimeRoleArn() const;
    void setRuntimeRoleArn(const QString &runtime_role_arn);
    bool is_runtime_role_arn_Set() const;
    bool is_runtime_role_arn_Valid() const;

    QList getScriptParameters() const;
    void setScriptParameters(const QList &script_parameters);
    bool is_script_parameters_Set() const;
    bool is_script_parameters_Valid() const;

    QString getSecureInitializationRoleArn() const;
    void setSecureInitializationRoleArn(const QString &secure_initialization_role_arn);
    bool is_secure_initialization_role_arn_Set() const;
    bool is_secure_initialization_role_arn_Valid() const;

    OAIStudioComponentState getState() const;
    void setState(const OAIStudioComponentState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIStudioComponentStatusCode getStatusCode() const;
    void setStatusCode(const OAIStudioComponentStatusCode &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    QString getStudioComponentId() const;
    void setStudioComponentId(const QString &studio_component_id);
    bool is_studio_component_id_Set() const;
    bool is_studio_component_id_Valid() const;

    OAIStudioComponentSubtype getSubtype() const;
    void setSubtype(const OAIStudioComponentSubtype &subtype);
    bool is_subtype_Set() const;
    bool is_subtype_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIStudioComponentType getType() const;
    void setType(const OAIStudioComponentType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUpdatedBy() const;
    void setUpdatedBy(const QString &updated_by);
    bool is_updated_by_Set() const;
    bool is_updated_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    OAICreateStudioComponentRequest_configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_ec2_security_group_ids;
    bool m_ec2_security_group_ids_isSet;
    bool m_ec2_security_group_ids_isValid;

    QList m_initialization_scripts;
    bool m_initialization_scripts_isSet;
    bool m_initialization_scripts_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_runtime_role_arn;
    bool m_runtime_role_arn_isSet;
    bool m_runtime_role_arn_isValid;

    QList m_script_parameters;
    bool m_script_parameters_isSet;
    bool m_script_parameters_isValid;

    QString m_secure_initialization_role_arn;
    bool m_secure_initialization_role_arn_isSet;
    bool m_secure_initialization_role_arn_isValid;

    OAIStudioComponentState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIStudioComponentStatusCode m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QString m_studio_component_id;
    bool m_studio_component_id_isSet;
    bool m_studio_component_id_isValid;

    OAIStudioComponentSubtype m_subtype;
    bool m_subtype_isSet;
    bool m_subtype_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIStudioComponentType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_updated_by;
    bool m_updated_by_isSet;
    bool m_updated_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateStudioComponentResponse_studioComponent)

#endif // OAICreateStudioComponentResponse_studioComponent_H
