/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVolumeRetentionMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVolumeRetentionMode::OAIVolumeRetentionMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVolumeRetentionMode::OAIVolumeRetentionMode() {
    this->initializeModel();
}

OAIVolumeRetentionMode::~OAIVolumeRetentionMode() {}

void OAIVolumeRetentionMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIVolumeRetentionMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIVolumeRetentionMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("RETAIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVolumeRetentionMode::RETAIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVolumeRetentionMode::DELETE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIVolumeRetentionMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIVolumeRetentionMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIVolumeRetentionMode::RETAIN:
            val = "RETAIN";
            break;
        case eOAIVolumeRetentionMode::DELETE:
            val = "DELETE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIVolumeRetentionMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIVolumeRetentionMode::eOAIVolumeRetentionMode OAIVolumeRetentionMode::getValue() const {
    return m_value;
}

void OAIVolumeRetentionMode::setValue(const OAIVolumeRetentionMode::eOAIVolumeRetentionMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIVolumeRetentionMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIVolumeRetentionMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
