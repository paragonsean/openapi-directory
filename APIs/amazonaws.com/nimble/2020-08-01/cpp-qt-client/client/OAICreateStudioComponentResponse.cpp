/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStudioComponentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStudioComponentResponse::OAICreateStudioComponentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStudioComponentResponse::OAICreateStudioComponentResponse() {
    this->initializeModel();
}

OAICreateStudioComponentResponse::~OAICreateStudioComponentResponse() {}

void OAICreateStudioComponentResponse::initializeModel() {

    m_studio_component_isSet = false;
    m_studio_component_isValid = false;
}

void OAICreateStudioComponentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStudioComponentResponse::fromJsonObject(QJsonObject json) {

    m_studio_component_isValid = ::OpenAPI::fromJsonValue(m_studio_component, json[QString("studioComponent")]);
    m_studio_component_isSet = !json[QString("studioComponent")].isNull() && m_studio_component_isValid;
}

QString OAICreateStudioComponentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStudioComponentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_studio_component.isSet()) {
        obj.insert(QString("studioComponent"), ::OpenAPI::toJsonValue(m_studio_component));
    }
    return obj;
}

OAICreateStudioComponentResponse_studioComponent OAICreateStudioComponentResponse::getStudioComponent() const {
    return m_studio_component;
}
void OAICreateStudioComponentResponse::setStudioComponent(const OAICreateStudioComponentResponse_studioComponent &studio_component) {
    m_studio_component = studio_component;
    m_studio_component_isSet = true;
}

bool OAICreateStudioComponentResponse::is_studio_component_Set() const{
    return m_studio_component_isSet;
}

bool OAICreateStudioComponentResponse::is_studio_component_Valid() const{
    return m_studio_component_isValid;
}

bool OAICreateStudioComponentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_studio_component.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStudioComponentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
