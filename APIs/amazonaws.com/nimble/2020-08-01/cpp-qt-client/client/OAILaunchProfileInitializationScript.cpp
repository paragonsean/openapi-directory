/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILaunchProfileInitializationScript.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILaunchProfileInitializationScript::OAILaunchProfileInitializationScript(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILaunchProfileInitializationScript::OAILaunchProfileInitializationScript() {
    this->initializeModel();
}

OAILaunchProfileInitializationScript::~OAILaunchProfileInitializationScript() {}

void OAILaunchProfileInitializationScript::initializeModel() {

    m_runtime_role_arn_isSet = false;
    m_runtime_role_arn_isValid = false;

    m_script_isSet = false;
    m_script_isValid = false;

    m_secure_initialization_role_arn_isSet = false;
    m_secure_initialization_role_arn_isValid = false;

    m_studio_component_id_isSet = false;
    m_studio_component_id_isValid = false;

    m_studio_component_name_isSet = false;
    m_studio_component_name_isValid = false;
}

void OAILaunchProfileInitializationScript::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILaunchProfileInitializationScript::fromJsonObject(QJsonObject json) {

    m_runtime_role_arn_isValid = ::OpenAPI::fromJsonValue(m_runtime_role_arn, json[QString("runtimeRoleArn")]);
    m_runtime_role_arn_isSet = !json[QString("runtimeRoleArn")].isNull() && m_runtime_role_arn_isValid;

    m_script_isValid = ::OpenAPI::fromJsonValue(m_script, json[QString("script")]);
    m_script_isSet = !json[QString("script")].isNull() && m_script_isValid;

    m_secure_initialization_role_arn_isValid = ::OpenAPI::fromJsonValue(m_secure_initialization_role_arn, json[QString("secureInitializationRoleArn")]);
    m_secure_initialization_role_arn_isSet = !json[QString("secureInitializationRoleArn")].isNull() && m_secure_initialization_role_arn_isValid;

    m_studio_component_id_isValid = ::OpenAPI::fromJsonValue(m_studio_component_id, json[QString("studioComponentId")]);
    m_studio_component_id_isSet = !json[QString("studioComponentId")].isNull() && m_studio_component_id_isValid;

    m_studio_component_name_isValid = ::OpenAPI::fromJsonValue(m_studio_component_name, json[QString("studioComponentName")]);
    m_studio_component_name_isSet = !json[QString("studioComponentName")].isNull() && m_studio_component_name_isValid;
}

QString OAILaunchProfileInitializationScript::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILaunchProfileInitializationScript::asJsonObject() const {
    QJsonObject obj;
    if (m_runtime_role_arn_isSet) {
        obj.insert(QString("runtimeRoleArn"), ::OpenAPI::toJsonValue(m_runtime_role_arn));
    }
    if (m_script_isSet) {
        obj.insert(QString("script"), ::OpenAPI::toJsonValue(m_script));
    }
    if (m_secure_initialization_role_arn_isSet) {
        obj.insert(QString("secureInitializationRoleArn"), ::OpenAPI::toJsonValue(m_secure_initialization_role_arn));
    }
    if (m_studio_component_id_isSet) {
        obj.insert(QString("studioComponentId"), ::OpenAPI::toJsonValue(m_studio_component_id));
    }
    if (m_studio_component_name_isSet) {
        obj.insert(QString("studioComponentName"), ::OpenAPI::toJsonValue(m_studio_component_name));
    }
    return obj;
}

QString OAILaunchProfileInitializationScript::getRuntimeRoleArn() const {
    return m_runtime_role_arn;
}
void OAILaunchProfileInitializationScript::setRuntimeRoleArn(const QString &runtime_role_arn) {
    m_runtime_role_arn = runtime_role_arn;
    m_runtime_role_arn_isSet = true;
}

bool OAILaunchProfileInitializationScript::is_runtime_role_arn_Set() const{
    return m_runtime_role_arn_isSet;
}

bool OAILaunchProfileInitializationScript::is_runtime_role_arn_Valid() const{
    return m_runtime_role_arn_isValid;
}

QString OAILaunchProfileInitializationScript::getScript() const {
    return m_script;
}
void OAILaunchProfileInitializationScript::setScript(const QString &script) {
    m_script = script;
    m_script_isSet = true;
}

bool OAILaunchProfileInitializationScript::is_script_Set() const{
    return m_script_isSet;
}

bool OAILaunchProfileInitializationScript::is_script_Valid() const{
    return m_script_isValid;
}

QString OAILaunchProfileInitializationScript::getSecureInitializationRoleArn() const {
    return m_secure_initialization_role_arn;
}
void OAILaunchProfileInitializationScript::setSecureInitializationRoleArn(const QString &secure_initialization_role_arn) {
    m_secure_initialization_role_arn = secure_initialization_role_arn;
    m_secure_initialization_role_arn_isSet = true;
}

bool OAILaunchProfileInitializationScript::is_secure_initialization_role_arn_Set() const{
    return m_secure_initialization_role_arn_isSet;
}

bool OAILaunchProfileInitializationScript::is_secure_initialization_role_arn_Valid() const{
    return m_secure_initialization_role_arn_isValid;
}

QString OAILaunchProfileInitializationScript::getStudioComponentId() const {
    return m_studio_component_id;
}
void OAILaunchProfileInitializationScript::setStudioComponentId(const QString &studio_component_id) {
    m_studio_component_id = studio_component_id;
    m_studio_component_id_isSet = true;
}

bool OAILaunchProfileInitializationScript::is_studio_component_id_Set() const{
    return m_studio_component_id_isSet;
}

bool OAILaunchProfileInitializationScript::is_studio_component_id_Valid() const{
    return m_studio_component_id_isValid;
}

QString OAILaunchProfileInitializationScript::getStudioComponentName() const {
    return m_studio_component_name;
}
void OAILaunchProfileInitializationScript::setStudioComponentName(const QString &studio_component_name) {
    m_studio_component_name = studio_component_name;
    m_studio_component_name_isSet = true;
}

bool OAILaunchProfileInitializationScript::is_studio_component_name_Set() const{
    return m_studio_component_name_isSet;
}

bool OAILaunchProfileInitializationScript::is_studio_component_name_Valid() const{
    return m_studio_component_name_isValid;
}

bool OAILaunchProfileInitializationScript::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_runtime_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_script_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secure_initialization_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_studio_component_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_studio_component_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILaunchProfileInitializationScript::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
