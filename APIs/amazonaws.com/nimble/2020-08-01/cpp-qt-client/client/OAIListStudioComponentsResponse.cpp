/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListStudioComponentsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListStudioComponentsResponse::OAIListStudioComponentsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListStudioComponentsResponse::OAIListStudioComponentsResponse() {
    this->initializeModel();
}

OAIListStudioComponentsResponse::~OAIListStudioComponentsResponse() {}

void OAIListStudioComponentsResponse::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_studio_components_isSet = false;
    m_studio_components_isValid = false;
}

void OAIListStudioComponentsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListStudioComponentsResponse::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_studio_components_isValid = ::OpenAPI::fromJsonValue(m_studio_components, json[QString("studioComponents")]);
    m_studio_components_isSet = !json[QString("studioComponents")].isNull() && m_studio_components_isValid;
}

QString OAIListStudioComponentsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListStudioComponentsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_studio_components.isSet()) {
        obj.insert(QString("studioComponents"), ::OpenAPI::toJsonValue(m_studio_components));
    }
    return obj;
}

QString OAIListStudioComponentsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListStudioComponentsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListStudioComponentsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListStudioComponentsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListStudioComponentsResponse::getStudioComponents() const {
    return m_studio_components;
}
void OAIListStudioComponentsResponse::setStudioComponents(const QList &studio_components) {
    m_studio_components = studio_components;
    m_studio_components_isSet = true;
}

bool OAIListStudioComponentsResponse::is_studio_components_Set() const{
    return m_studio_components_isSet;
}

bool OAIListStudioComponentsResponse::is_studio_components_Valid() const{
    return m_studio_components_isValid;
}

bool OAIListStudioComponentsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_studio_components.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListStudioComponentsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
