/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStudioResponse_studio.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStudioResponse_studio::OAICreateStudioResponse_studio(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStudioResponse_studio::OAICreateStudioResponse_studio() {
    this->initializeModel();
}

OAICreateStudioResponse_studio::~OAICreateStudioResponse_studio() {}

void OAICreateStudioResponse_studio::initializeModel() {

    m_admin_role_arn_isSet = false;
    m_admin_role_arn_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_home_region_isSet = false;
    m_home_region_isValid = false;

    m_sso_client_id_isSet = false;
    m_sso_client_id_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_status_code_isSet = false;
    m_status_code_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;

    m_studio_encryption_configuration_isSet = false;
    m_studio_encryption_configuration_isValid = false;

    m_studio_id_isSet = false;
    m_studio_id_isValid = false;

    m_studio_name_isSet = false;
    m_studio_name_isValid = false;

    m_studio_url_isSet = false;
    m_studio_url_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_user_role_arn_isSet = false;
    m_user_role_arn_isValid = false;
}

void OAICreateStudioResponse_studio::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStudioResponse_studio::fromJsonObject(QJsonObject json) {

    m_admin_role_arn_isValid = ::OpenAPI::fromJsonValue(m_admin_role_arn, json[QString("adminRoleArn")]);
    m_admin_role_arn_isSet = !json[QString("adminRoleArn")].isNull() && m_admin_role_arn_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_home_region_isValid = ::OpenAPI::fromJsonValue(m_home_region, json[QString("homeRegion")]);
    m_home_region_isSet = !json[QString("homeRegion")].isNull() && m_home_region_isValid;

    m_sso_client_id_isValid = ::OpenAPI::fromJsonValue(m_sso_client_id, json[QString("ssoClientId")]);
    m_sso_client_id_isSet = !json[QString("ssoClientId")].isNull() && m_sso_client_id_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_status_code_isValid = ::OpenAPI::fromJsonValue(m_status_code, json[QString("statusCode")]);
    m_status_code_isSet = !json[QString("statusCode")].isNull() && m_status_code_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("statusMessage")]);
    m_status_message_isSet = !json[QString("statusMessage")].isNull() && m_status_message_isValid;

    m_studio_encryption_configuration_isValid = ::OpenAPI::fromJsonValue(m_studio_encryption_configuration, json[QString("studioEncryptionConfiguration")]);
    m_studio_encryption_configuration_isSet = !json[QString("studioEncryptionConfiguration")].isNull() && m_studio_encryption_configuration_isValid;

    m_studio_id_isValid = ::OpenAPI::fromJsonValue(m_studio_id, json[QString("studioId")]);
    m_studio_id_isSet = !json[QString("studioId")].isNull() && m_studio_id_isValid;

    m_studio_name_isValid = ::OpenAPI::fromJsonValue(m_studio_name, json[QString("studioName")]);
    m_studio_name_isSet = !json[QString("studioName")].isNull() && m_studio_name_isValid;

    m_studio_url_isValid = ::OpenAPI::fromJsonValue(m_studio_url, json[QString("studioUrl")]);
    m_studio_url_isSet = !json[QString("studioUrl")].isNull() && m_studio_url_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updatedAt")]);
    m_updated_at_isSet = !json[QString("updatedAt")].isNull() && m_updated_at_isValid;

    m_user_role_arn_isValid = ::OpenAPI::fromJsonValue(m_user_role_arn, json[QString("userRoleArn")]);
    m_user_role_arn_isSet = !json[QString("userRoleArn")].isNull() && m_user_role_arn_isValid;
}

QString OAICreateStudioResponse_studio::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStudioResponse_studio::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_role_arn_isSet) {
        obj.insert(QString("adminRoleArn"), ::OpenAPI::toJsonValue(m_admin_role_arn));
    }
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_home_region_isSet) {
        obj.insert(QString("homeRegion"), ::OpenAPI::toJsonValue(m_home_region));
    }
    if (m_sso_client_id_isSet) {
        obj.insert(QString("ssoClientId"), ::OpenAPI::toJsonValue(m_sso_client_id));
    }
    if (m_state.isSet()) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_status_code.isSet()) {
        obj.insert(QString("statusCode"), ::OpenAPI::toJsonValue(m_status_code));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("statusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    if (m_studio_encryption_configuration.isSet()) {
        obj.insert(QString("studioEncryptionConfiguration"), ::OpenAPI::toJsonValue(m_studio_encryption_configuration));
    }
    if (m_studio_id_isSet) {
        obj.insert(QString("studioId"), ::OpenAPI::toJsonValue(m_studio_id));
    }
    if (m_studio_name_isSet) {
        obj.insert(QString("studioName"), ::OpenAPI::toJsonValue(m_studio_name));
    }
    if (m_studio_url_isSet) {
        obj.insert(QString("studioUrl"), ::OpenAPI::toJsonValue(m_studio_url));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updatedAt"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_user_role_arn_isSet) {
        obj.insert(QString("userRoleArn"), ::OpenAPI::toJsonValue(m_user_role_arn));
    }
    return obj;
}

QString OAICreateStudioResponse_studio::getAdminRoleArn() const {
    return m_admin_role_arn;
}
void OAICreateStudioResponse_studio::setAdminRoleArn(const QString &admin_role_arn) {
    m_admin_role_arn = admin_role_arn;
    m_admin_role_arn_isSet = true;
}

bool OAICreateStudioResponse_studio::is_admin_role_arn_Set() const{
    return m_admin_role_arn_isSet;
}

bool OAICreateStudioResponse_studio::is_admin_role_arn_Valid() const{
    return m_admin_role_arn_isValid;
}

QString OAICreateStudioResponse_studio::getArn() const {
    return m_arn;
}
void OAICreateStudioResponse_studio::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateStudioResponse_studio::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateStudioResponse_studio::is_arn_Valid() const{
    return m_arn_isValid;
}

QDateTime OAICreateStudioResponse_studio::getCreatedAt() const {
    return m_created_at;
}
void OAICreateStudioResponse_studio::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICreateStudioResponse_studio::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICreateStudioResponse_studio::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICreateStudioResponse_studio::getDisplayName() const {
    return m_display_name;
}
void OAICreateStudioResponse_studio::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICreateStudioResponse_studio::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICreateStudioResponse_studio::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAICreateStudioResponse_studio::getHomeRegion() const {
    return m_home_region;
}
void OAICreateStudioResponse_studio::setHomeRegion(const QString &home_region) {
    m_home_region = home_region;
    m_home_region_isSet = true;
}

bool OAICreateStudioResponse_studio::is_home_region_Set() const{
    return m_home_region_isSet;
}

bool OAICreateStudioResponse_studio::is_home_region_Valid() const{
    return m_home_region_isValid;
}

QString OAICreateStudioResponse_studio::getSsoClientId() const {
    return m_sso_client_id;
}
void OAICreateStudioResponse_studio::setSsoClientId(const QString &sso_client_id) {
    m_sso_client_id = sso_client_id;
    m_sso_client_id_isSet = true;
}

bool OAICreateStudioResponse_studio::is_sso_client_id_Set() const{
    return m_sso_client_id_isSet;
}

bool OAICreateStudioResponse_studio::is_sso_client_id_Valid() const{
    return m_sso_client_id_isValid;
}

OAIStudioState OAICreateStudioResponse_studio::getState() const {
    return m_state;
}
void OAICreateStudioResponse_studio::setState(const OAIStudioState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAICreateStudioResponse_studio::is_state_Set() const{
    return m_state_isSet;
}

bool OAICreateStudioResponse_studio::is_state_Valid() const{
    return m_state_isValid;
}

OAIStudioStatusCode OAICreateStudioResponse_studio::getStatusCode() const {
    return m_status_code;
}
void OAICreateStudioResponse_studio::setStatusCode(const OAIStudioStatusCode &status_code) {
    m_status_code = status_code;
    m_status_code_isSet = true;
}

bool OAICreateStudioResponse_studio::is_status_code_Set() const{
    return m_status_code_isSet;
}

bool OAICreateStudioResponse_studio::is_status_code_Valid() const{
    return m_status_code_isValid;
}

QString OAICreateStudioResponse_studio::getStatusMessage() const {
    return m_status_message;
}
void OAICreateStudioResponse_studio::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAICreateStudioResponse_studio::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAICreateStudioResponse_studio::is_status_message_Valid() const{
    return m_status_message_isValid;
}

OAIStudio_studioEncryptionConfiguration OAICreateStudioResponse_studio::getStudioEncryptionConfiguration() const {
    return m_studio_encryption_configuration;
}
void OAICreateStudioResponse_studio::setStudioEncryptionConfiguration(const OAIStudio_studioEncryptionConfiguration &studio_encryption_configuration) {
    m_studio_encryption_configuration = studio_encryption_configuration;
    m_studio_encryption_configuration_isSet = true;
}

bool OAICreateStudioResponse_studio::is_studio_encryption_configuration_Set() const{
    return m_studio_encryption_configuration_isSet;
}

bool OAICreateStudioResponse_studio::is_studio_encryption_configuration_Valid() const{
    return m_studio_encryption_configuration_isValid;
}

QString OAICreateStudioResponse_studio::getStudioId() const {
    return m_studio_id;
}
void OAICreateStudioResponse_studio::setStudioId(const QString &studio_id) {
    m_studio_id = studio_id;
    m_studio_id_isSet = true;
}

bool OAICreateStudioResponse_studio::is_studio_id_Set() const{
    return m_studio_id_isSet;
}

bool OAICreateStudioResponse_studio::is_studio_id_Valid() const{
    return m_studio_id_isValid;
}

QString OAICreateStudioResponse_studio::getStudioName() const {
    return m_studio_name;
}
void OAICreateStudioResponse_studio::setStudioName(const QString &studio_name) {
    m_studio_name = studio_name;
    m_studio_name_isSet = true;
}

bool OAICreateStudioResponse_studio::is_studio_name_Set() const{
    return m_studio_name_isSet;
}

bool OAICreateStudioResponse_studio::is_studio_name_Valid() const{
    return m_studio_name_isValid;
}

QString OAICreateStudioResponse_studio::getStudioUrl() const {
    return m_studio_url;
}
void OAICreateStudioResponse_studio::setStudioUrl(const QString &studio_url) {
    m_studio_url = studio_url;
    m_studio_url_isSet = true;
}

bool OAICreateStudioResponse_studio::is_studio_url_Set() const{
    return m_studio_url_isSet;
}

bool OAICreateStudioResponse_studio::is_studio_url_Valid() const{
    return m_studio_url_isValid;
}

QMap OAICreateStudioResponse_studio::getTags() const {
    return m_tags;
}
void OAICreateStudioResponse_studio::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateStudioResponse_studio::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateStudioResponse_studio::is_tags_Valid() const{
    return m_tags_isValid;
}

QDateTime OAICreateStudioResponse_studio::getUpdatedAt() const {
    return m_updated_at;
}
void OAICreateStudioResponse_studio::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAICreateStudioResponse_studio::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAICreateStudioResponse_studio::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

QString OAICreateStudioResponse_studio::getUserRoleArn() const {
    return m_user_role_arn;
}
void OAICreateStudioResponse_studio::setUserRoleArn(const QString &user_role_arn) {
    m_user_role_arn = user_role_arn;
    m_user_role_arn_isSet = true;
}

bool OAICreateStudioResponse_studio::is_user_role_arn_Set() const{
    return m_user_role_arn_isSet;
}

bool OAICreateStudioResponse_studio::is_user_role_arn_Valid() const{
    return m_user_role_arn_isValid;
}

bool OAICreateStudioResponse_studio::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sso_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_studio_encryption_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_studio_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_studio_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_studio_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStudioResponse_studio::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
