/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateLaunchProfile_request.h
 *
 * 
 */

#ifndef OAICreateLaunchProfile_request_H
#define OAICreateLaunchProfile_request_H

#include <QJsonObject>

#include "OAICreateLaunchProfile_request_streamConfiguration.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateLaunchProfile_request_streamConfiguration;

class OAICreateLaunchProfile_request : public OAIObject {
public:
    OAICreateLaunchProfile_request();
    OAICreateLaunchProfile_request(QString json);
    ~OAICreateLaunchProfile_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<QString> getEc2SubnetIds() const;
    void setEc2SubnetIds(const QList<QString> &ec2_subnet_ids);
    bool is_ec2_subnet_ids_Set() const;
    bool is_ec2_subnet_ids_Valid() const;

    QList<QString> getLaunchProfileProtocolVersions() const;
    void setLaunchProfileProtocolVersions(const QList<QString> &launch_profile_protocol_versions);
    bool is_launch_profile_protocol_versions_Set() const;
    bool is_launch_profile_protocol_versions_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICreateLaunchProfile_request_streamConfiguration getStreamConfiguration() const;
    void setStreamConfiguration(const OAICreateLaunchProfile_request_streamConfiguration &stream_configuration);
    bool is_stream_configuration_Set() const;
    bool is_stream_configuration_Valid() const;

    QList<QString> getStudioComponentIds() const;
    void setStudioComponentIds(const QList<QString> &studio_component_ids);
    bool is_studio_component_ids_Set() const;
    bool is_studio_component_ids_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<QString> m_ec2_subnet_ids;
    bool m_ec2_subnet_ids_isSet;
    bool m_ec2_subnet_ids_isValid;

    QList<QString> m_launch_profile_protocol_versions;
    bool m_launch_profile_protocol_versions_isSet;
    bool m_launch_profile_protocol_versions_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICreateLaunchProfile_request_streamConfiguration m_stream_configuration;
    bool m_stream_configuration_isSet;
    bool m_stream_configuration_isValid;

    QList<QString> m_studio_component_ids;
    bool m_studio_component_ids_isSet;
    bool m_studio_component_ids_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateLaunchProfile_request)

#endif // OAICreateLaunchProfile_request_H
