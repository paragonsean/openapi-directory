/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStreamConfigurationSessionBackup.h
 *
 * Configures how streaming sessions are backed up when launched from this launch profile.
 */

#ifndef OAIStreamConfigurationSessionBackup_H
#define OAIStreamConfigurationSessionBackup_H

#include <QJsonObject>

#include "OAISessionBackupMode.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStreamConfigurationSessionBackup : public OAIObject {
public:
    OAIStreamConfigurationSessionBackup();
    OAIStreamConfigurationSessionBackup(QString json);
    ~OAIStreamConfigurationSessionBackup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxBackupsToRetain() const;
    void setMaxBackupsToRetain(const qint32 &max_backups_to_retain);
    bool is_max_backups_to_retain_Set() const;
    bool is_max_backups_to_retain_Valid() const;

    OAISessionBackupMode getMode() const;
    void setMode(const OAISessionBackupMode &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_backups_to_retain;
    bool m_max_backups_to_retain_isSet;
    bool m_max_backups_to_retain_isValid;

    OAISessionBackupMode m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStreamConfigurationSessionBackup)

#endif // OAIStreamConfigurationSessionBackup_H
