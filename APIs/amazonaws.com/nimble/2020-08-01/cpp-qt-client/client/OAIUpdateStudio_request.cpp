/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateStudio_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateStudio_request::OAIUpdateStudio_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateStudio_request::OAIUpdateStudio_request() {
    this->initializeModel();
}

OAIUpdateStudio_request::~OAIUpdateStudio_request() {}

void OAIUpdateStudio_request::initializeModel() {

    m_admin_role_arn_isSet = false;
    m_admin_role_arn_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_user_role_arn_isSet = false;
    m_user_role_arn_isValid = false;
}

void OAIUpdateStudio_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateStudio_request::fromJsonObject(QJsonObject json) {

    m_admin_role_arn_isValid = ::OpenAPI::fromJsonValue(m_admin_role_arn, json[QString("adminRoleArn")]);
    m_admin_role_arn_isSet = !json[QString("adminRoleArn")].isNull() && m_admin_role_arn_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_user_role_arn_isValid = ::OpenAPI::fromJsonValue(m_user_role_arn, json[QString("userRoleArn")]);
    m_user_role_arn_isSet = !json[QString("userRoleArn")].isNull() && m_user_role_arn_isValid;
}

QString OAIUpdateStudio_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateStudio_request::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_role_arn_isSet) {
        obj.insert(QString("adminRoleArn"), ::OpenAPI::toJsonValue(m_admin_role_arn));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_user_role_arn_isSet) {
        obj.insert(QString("userRoleArn"), ::OpenAPI::toJsonValue(m_user_role_arn));
    }
    return obj;
}

QString OAIUpdateStudio_request::getAdminRoleArn() const {
    return m_admin_role_arn;
}
void OAIUpdateStudio_request::setAdminRoleArn(const QString &admin_role_arn) {
    m_admin_role_arn = admin_role_arn;
    m_admin_role_arn_isSet = true;
}

bool OAIUpdateStudio_request::is_admin_role_arn_Set() const{
    return m_admin_role_arn_isSet;
}

bool OAIUpdateStudio_request::is_admin_role_arn_Valid() const{
    return m_admin_role_arn_isValid;
}

QString OAIUpdateStudio_request::getDisplayName() const {
    return m_display_name;
}
void OAIUpdateStudio_request::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIUpdateStudio_request::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIUpdateStudio_request::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIUpdateStudio_request::getUserRoleArn() const {
    return m_user_role_arn;
}
void OAIUpdateStudio_request::setUserRoleArn(const QString &user_role_arn) {
    m_user_role_arn = user_role_arn;
    m_user_role_arn_isSet = true;
}

bool OAIUpdateStudio_request::is_user_role_arn_Set() const{
    return m_user_role_arn_isSet;
}

bool OAIUpdateStudio_request::is_user_role_arn_Valid() const{
    return m_user_role_arn_isValid;
}

bool OAIUpdateStudio_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateStudio_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
