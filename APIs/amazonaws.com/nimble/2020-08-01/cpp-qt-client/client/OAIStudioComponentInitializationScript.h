/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStudioComponentInitializationScript.h
 *
 * Initialization scripts for studio components.
 */

#ifndef OAIStudioComponentInitializationScript_H
#define OAIStudioComponentInitializationScript_H

#include <QJsonObject>

#include "OAILaunchProfilePlatform.h"
#include "OAIStudioComponentInitializationScriptRunContext.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStudioComponentInitializationScript : public OAIObject {
public:
    OAIStudioComponentInitializationScript();
    OAIStudioComponentInitializationScript(QString json);
    ~OAIStudioComponentInitializationScript() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLaunchProfileProtocolVersion() const;
    void setLaunchProfileProtocolVersion(const QString &launch_profile_protocol_version);
    bool is_launch_profile_protocol_version_Set() const;
    bool is_launch_profile_protocol_version_Valid() const;

    OAILaunchProfilePlatform getPlatform() const;
    void setPlatform(const OAILaunchProfilePlatform &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    OAIStudioComponentInitializationScriptRunContext getRunContext() const;
    void setRunContext(const OAIStudioComponentInitializationScriptRunContext &run_context);
    bool is_run_context_Set() const;
    bool is_run_context_Valid() const;

    QString getScript() const;
    void setScript(const QString &script);
    bool is_script_Set() const;
    bool is_script_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_launch_profile_protocol_version;
    bool m_launch_profile_protocol_version_isSet;
    bool m_launch_profile_protocol_version_isValid;

    OAILaunchProfilePlatform m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    OAIStudioComponentInitializationScriptRunContext m_run_context;
    bool m_run_context_isSet;
    bool m_run_context_isValid;

    QString m_script;
    bool m_script_isSet;
    bool m_script_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStudioComponentInitializationScript)

#endif // OAIStudioComponentInitializationScript_H
