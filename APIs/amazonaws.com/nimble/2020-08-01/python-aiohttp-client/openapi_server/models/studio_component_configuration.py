# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_studio_component_request_configuration_active_directory_configuration import CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration
from openapi_server.models.create_studio_component_request_configuration_compute_farm_configuration import CreateStudioComponentRequestConfigurationComputeFarmConfiguration
from openapi_server.models.create_studio_component_request_configuration_license_service_configuration import CreateStudioComponentRequestConfigurationLicenseServiceConfiguration
from openapi_server.models.create_studio_component_request_configuration_shared_file_system_configuration import CreateStudioComponentRequestConfigurationSharedFileSystemConfiguration
from openapi_server import util


class StudioComponentConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_directory_configuration: CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration=None, compute_farm_configuration: CreateStudioComponentRequestConfigurationComputeFarmConfiguration=None, license_service_configuration: CreateStudioComponentRequestConfigurationLicenseServiceConfiguration=None, shared_file_system_configuration: CreateStudioComponentRequestConfigurationSharedFileSystemConfiguration=None):
        """StudioComponentConfiguration - a model defined in OpenAPI

        :param active_directory_configuration: The active_directory_configuration of this StudioComponentConfiguration.
        :param compute_farm_configuration: The compute_farm_configuration of this StudioComponentConfiguration.
        :param license_service_configuration: The license_service_configuration of this StudioComponentConfiguration.
        :param shared_file_system_configuration: The shared_file_system_configuration of this StudioComponentConfiguration.
        """
        self.openapi_types = {
            'active_directory_configuration': CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration,
            'compute_farm_configuration': CreateStudioComponentRequestConfigurationComputeFarmConfiguration,
            'license_service_configuration': CreateStudioComponentRequestConfigurationLicenseServiceConfiguration,
            'shared_file_system_configuration': CreateStudioComponentRequestConfigurationSharedFileSystemConfiguration
        }

        self.attribute_map = {
            'active_directory_configuration': 'activeDirectoryConfiguration',
            'compute_farm_configuration': 'computeFarmConfiguration',
            'license_service_configuration': 'licenseServiceConfiguration',
            'shared_file_system_configuration': 'sharedFileSystemConfiguration'
        }

        self._active_directory_configuration = active_directory_configuration
        self._compute_farm_configuration = compute_farm_configuration
        self._license_service_configuration = license_service_configuration
        self._shared_file_system_configuration = shared_file_system_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StudioComponentConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StudioComponentConfiguration of this StudioComponentConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_directory_configuration(self):
        """Gets the active_directory_configuration of this StudioComponentConfiguration.


        :return: The active_directory_configuration of this StudioComponentConfiguration.
        :rtype: CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration
        """
        return self._active_directory_configuration

    @active_directory_configuration.setter
    def active_directory_configuration(self, active_directory_configuration):
        """Sets the active_directory_configuration of this StudioComponentConfiguration.


        :param active_directory_configuration: The active_directory_configuration of this StudioComponentConfiguration.
        :type active_directory_configuration: CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration
        """

        self._active_directory_configuration = active_directory_configuration

    @property
    def compute_farm_configuration(self):
        """Gets the compute_farm_configuration of this StudioComponentConfiguration.


        :return: The compute_farm_configuration of this StudioComponentConfiguration.
        :rtype: CreateStudioComponentRequestConfigurationComputeFarmConfiguration
        """
        return self._compute_farm_configuration

    @compute_farm_configuration.setter
    def compute_farm_configuration(self, compute_farm_configuration):
        """Sets the compute_farm_configuration of this StudioComponentConfiguration.


        :param compute_farm_configuration: The compute_farm_configuration of this StudioComponentConfiguration.
        :type compute_farm_configuration: CreateStudioComponentRequestConfigurationComputeFarmConfiguration
        """

        self._compute_farm_configuration = compute_farm_configuration

    @property
    def license_service_configuration(self):
        """Gets the license_service_configuration of this StudioComponentConfiguration.


        :return: The license_service_configuration of this StudioComponentConfiguration.
        :rtype: CreateStudioComponentRequestConfigurationLicenseServiceConfiguration
        """
        return self._license_service_configuration

    @license_service_configuration.setter
    def license_service_configuration(self, license_service_configuration):
        """Sets the license_service_configuration of this StudioComponentConfiguration.


        :param license_service_configuration: The license_service_configuration of this StudioComponentConfiguration.
        :type license_service_configuration: CreateStudioComponentRequestConfigurationLicenseServiceConfiguration
        """

        self._license_service_configuration = license_service_configuration

    @property
    def shared_file_system_configuration(self):
        """Gets the shared_file_system_configuration of this StudioComponentConfiguration.


        :return: The shared_file_system_configuration of this StudioComponentConfiguration.
        :rtype: CreateStudioComponentRequestConfigurationSharedFileSystemConfiguration
        """
        return self._shared_file_system_configuration

    @shared_file_system_configuration.setter
    def shared_file_system_configuration(self, shared_file_system_configuration):
        """Sets the shared_file_system_configuration of this StudioComponentConfiguration.


        :param shared_file_system_configuration: The shared_file_system_configuration of this StudioComponentConfiguration.
        :type shared_file_system_configuration: CreateStudioComponentRequestConfigurationSharedFileSystemConfiguration
        """

        self._shared_file_system_configuration = shared_file_system_configuration
