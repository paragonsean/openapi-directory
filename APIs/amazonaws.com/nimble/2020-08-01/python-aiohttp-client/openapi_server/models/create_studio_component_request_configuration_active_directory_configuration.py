# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, computer_attributes: List=None, directory_id: str=None, organizational_unit_distinguished_name: str=None):
        """CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration - a model defined in OpenAPI

        :param computer_attributes: The computer_attributes of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        :param directory_id: The directory_id of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        :param organizational_unit_distinguished_name: The organizational_unit_distinguished_name of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        """
        self.openapi_types = {
            'computer_attributes': List,
            'directory_id': str,
            'organizational_unit_distinguished_name': str
        }

        self.attribute_map = {
            'computer_attributes': 'computerAttributes',
            'directory_id': 'directoryId',
            'organizational_unit_distinguished_name': 'organizationalUnitDistinguishedName'
        }

        self._computer_attributes = computer_attributes
        self._directory_id = directory_id
        self._organizational_unit_distinguished_name = organizational_unit_distinguished_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateStudioComponent_request_configuration_activeDirectoryConfiguration of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def computer_attributes(self):
        """Gets the computer_attributes of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.


        :return: The computer_attributes of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        :rtype: List
        """
        return self._computer_attributes

    @computer_attributes.setter
    def computer_attributes(self, computer_attributes):
        """Sets the computer_attributes of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.


        :param computer_attributes: The computer_attributes of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        :type computer_attributes: List
        """

        self._computer_attributes = computer_attributes

    @property
    def directory_id(self):
        """Gets the directory_id of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.


        :return: The directory_id of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        :rtype: str
        """
        return self._directory_id

    @directory_id.setter
    def directory_id(self, directory_id):
        """Sets the directory_id of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.


        :param directory_id: The directory_id of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        :type directory_id: str
        """

        self._directory_id = directory_id

    @property
    def organizational_unit_distinguished_name(self):
        """Gets the organizational_unit_distinguished_name of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.


        :return: The organizational_unit_distinguished_name of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        :rtype: str
        """
        return self._organizational_unit_distinguished_name

    @organizational_unit_distinguished_name.setter
    def organizational_unit_distinguished_name(self, organizational_unit_distinguished_name):
        """Sets the organizational_unit_distinguished_name of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.


        :param organizational_unit_distinguished_name: The organizational_unit_distinguished_name of this CreateStudioComponentRequestConfigurationActiveDirectoryConfiguration.
        :type organizational_unit_distinguished_name: str
        """

        self._organizational_unit_distinguished_name = organizational_unit_distinguished_name
