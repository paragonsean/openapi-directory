# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.streaming_image import StreamingImage
from openapi_server import util


class UpdateStreamingImageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, streaming_image: StreamingImage=None):
        """UpdateStreamingImageResponse - a model defined in OpenAPI

        :param streaming_image: The streaming_image of this UpdateStreamingImageResponse.
        """
        self.openapi_types = {
            'streaming_image': StreamingImage
        }

        self.attribute_map = {
            'streaming_image': 'streamingImage'
        }

        self._streaming_image = streaming_image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateStreamingImageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateStreamingImageResponse of this UpdateStreamingImageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def streaming_image(self):
        """Gets the streaming_image of this UpdateStreamingImageResponse.


        :return: The streaming_image of this UpdateStreamingImageResponse.
        :rtype: StreamingImage
        """
        return self._streaming_image

    @streaming_image.setter
    def streaming_image(self, streaming_image):
        """Sets the streaming_image of this UpdateStreamingImageResponse.


        :param streaming_image: The streaming_image of this UpdateStreamingImageResponse.
        :type streaming_image: StreamingImage
        """

        self._streaming_image = streaming_image
