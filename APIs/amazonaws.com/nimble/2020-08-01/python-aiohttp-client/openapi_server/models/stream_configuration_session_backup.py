# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.session_backup_mode import SessionBackupMode
from openapi_server import util


class StreamConfigurationSessionBackup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_backups_to_retain: int=None, mode: SessionBackupMode=None):
        """StreamConfigurationSessionBackup - a model defined in OpenAPI

        :param max_backups_to_retain: The max_backups_to_retain of this StreamConfigurationSessionBackup.
        :param mode: The mode of this StreamConfigurationSessionBackup.
        """
        self.openapi_types = {
            'max_backups_to_retain': int,
            'mode': SessionBackupMode
        }

        self.attribute_map = {
            'max_backups_to_retain': 'maxBackupsToRetain',
            'mode': 'mode'
        }

        self._max_backups_to_retain = max_backups_to_retain
        self._mode = mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamConfigurationSessionBackup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamConfiguration_sessionBackup of this StreamConfigurationSessionBackup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_backups_to_retain(self):
        """Gets the max_backups_to_retain of this StreamConfigurationSessionBackup.


        :return: The max_backups_to_retain of this StreamConfigurationSessionBackup.
        :rtype: int
        """
        return self._max_backups_to_retain

    @max_backups_to_retain.setter
    def max_backups_to_retain(self, max_backups_to_retain):
        """Sets the max_backups_to_retain of this StreamConfigurationSessionBackup.


        :param max_backups_to_retain: The max_backups_to_retain of this StreamConfigurationSessionBackup.
        :type max_backups_to_retain: int
        """

        self._max_backups_to_retain = max_backups_to_retain

    @property
    def mode(self):
        """Gets the mode of this StreamConfigurationSessionBackup.


        :return: The mode of this StreamConfigurationSessionBackup.
        :rtype: SessionBackupMode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this StreamConfigurationSessionBackup.


        :param mode: The mode of this StreamConfigurationSessionBackup.
        :type mode: SessionBackupMode
        """

        self._mode = mode
