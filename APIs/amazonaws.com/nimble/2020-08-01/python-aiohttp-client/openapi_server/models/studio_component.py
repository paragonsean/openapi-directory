# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_studio_component_request_configuration import CreateStudioComponentRequestConfiguration
from openapi_server.models.studio_component_state import StudioComponentState
from openapi_server.models.studio_component_status_code import StudioComponentStatusCode
from openapi_server.models.studio_component_subtype import StudioComponentSubtype
from openapi_server.models.studio_component_type import StudioComponentType
from openapi_server import util


class StudioComponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, configuration: CreateStudioComponentRequestConfiguration=None, created_at: datetime=None, created_by: str=None, description: str=None, ec2_security_group_ids: List=None, initialization_scripts: List=None, name: str=None, runtime_role_arn: str=None, script_parameters: List=None, secure_initialization_role_arn: str=None, state: StudioComponentState=None, status_code: StudioComponentStatusCode=None, status_message: str=None, studio_component_id: str=None, subtype: StudioComponentSubtype=None, tags: Dict=None, type: StudioComponentType=None, updated_at: datetime=None, updated_by: str=None):
        """StudioComponent - a model defined in OpenAPI

        :param arn: The arn of this StudioComponent.
        :param configuration: The configuration of this StudioComponent.
        :param created_at: The created_at of this StudioComponent.
        :param created_by: The created_by of this StudioComponent.
        :param description: The description of this StudioComponent.
        :param ec2_security_group_ids: The ec2_security_group_ids of this StudioComponent.
        :param initialization_scripts: The initialization_scripts of this StudioComponent.
        :param name: The name of this StudioComponent.
        :param runtime_role_arn: The runtime_role_arn of this StudioComponent.
        :param script_parameters: The script_parameters of this StudioComponent.
        :param secure_initialization_role_arn: The secure_initialization_role_arn of this StudioComponent.
        :param state: The state of this StudioComponent.
        :param status_code: The status_code of this StudioComponent.
        :param status_message: The status_message of this StudioComponent.
        :param studio_component_id: The studio_component_id of this StudioComponent.
        :param subtype: The subtype of this StudioComponent.
        :param tags: The tags of this StudioComponent.
        :param type: The type of this StudioComponent.
        :param updated_at: The updated_at of this StudioComponent.
        :param updated_by: The updated_by of this StudioComponent.
        """
        self.openapi_types = {
            'arn': str,
            'configuration': CreateStudioComponentRequestConfiguration,
            'created_at': datetime,
            'created_by': str,
            'description': str,
            'ec2_security_group_ids': List,
            'initialization_scripts': List,
            'name': str,
            'runtime_role_arn': str,
            'script_parameters': List,
            'secure_initialization_role_arn': str,
            'state': StudioComponentState,
            'status_code': StudioComponentStatusCode,
            'status_message': str,
            'studio_component_id': str,
            'subtype': StudioComponentSubtype,
            'tags': Dict,
            'type': StudioComponentType,
            'updated_at': datetime,
            'updated_by': str
        }

        self.attribute_map = {
            'arn': 'arn',
            'configuration': 'configuration',
            'created_at': 'createdAt',
            'created_by': 'createdBy',
            'description': 'description',
            'ec2_security_group_ids': 'ec2SecurityGroupIds',
            'initialization_scripts': 'initializationScripts',
            'name': 'name',
            'runtime_role_arn': 'runtimeRoleArn',
            'script_parameters': 'scriptParameters',
            'secure_initialization_role_arn': 'secureInitializationRoleArn',
            'state': 'state',
            'status_code': 'statusCode',
            'status_message': 'statusMessage',
            'studio_component_id': 'studioComponentId',
            'subtype': 'subtype',
            'tags': 'tags',
            'type': 'type',
            'updated_at': 'updatedAt',
            'updated_by': 'updatedBy'
        }

        self._arn = arn
        self._configuration = configuration
        self._created_at = created_at
        self._created_by = created_by
        self._description = description
        self._ec2_security_group_ids = ec2_security_group_ids
        self._initialization_scripts = initialization_scripts
        self._name = name
        self._runtime_role_arn = runtime_role_arn
        self._script_parameters = script_parameters
        self._secure_initialization_role_arn = secure_initialization_role_arn
        self._state = state
        self._status_code = status_code
        self._status_message = status_message
        self._studio_component_id = studio_component_id
        self._subtype = subtype
        self._tags = tags
        self._type = type
        self._updated_at = updated_at
        self._updated_by = updated_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StudioComponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StudioComponent of this StudioComponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this StudioComponent.


        :return: The arn of this StudioComponent.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this StudioComponent.


        :param arn: The arn of this StudioComponent.
        :type arn: str
        """

        self._arn = arn

    @property
    def configuration(self):
        """Gets the configuration of this StudioComponent.


        :return: The configuration of this StudioComponent.
        :rtype: CreateStudioComponentRequestConfiguration
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this StudioComponent.


        :param configuration: The configuration of this StudioComponent.
        :type configuration: CreateStudioComponentRequestConfiguration
        """

        self._configuration = configuration

    @property
    def created_at(self):
        """Gets the created_at of this StudioComponent.


        :return: The created_at of this StudioComponent.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this StudioComponent.


        :param created_at: The created_at of this StudioComponent.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this StudioComponent.


        :return: The created_by of this StudioComponent.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this StudioComponent.


        :param created_by: The created_by of this StudioComponent.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def description(self):
        """Gets the description of this StudioComponent.


        :return: The description of this StudioComponent.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StudioComponent.


        :param description: The description of this StudioComponent.
        :type description: str
        """

        self._description = description

    @property
    def ec2_security_group_ids(self):
        """Gets the ec2_security_group_ids of this StudioComponent.


        :return: The ec2_security_group_ids of this StudioComponent.
        :rtype: List
        """
        return self._ec2_security_group_ids

    @ec2_security_group_ids.setter
    def ec2_security_group_ids(self, ec2_security_group_ids):
        """Sets the ec2_security_group_ids of this StudioComponent.


        :param ec2_security_group_ids: The ec2_security_group_ids of this StudioComponent.
        :type ec2_security_group_ids: List
        """

        self._ec2_security_group_ids = ec2_security_group_ids

    @property
    def initialization_scripts(self):
        """Gets the initialization_scripts of this StudioComponent.


        :return: The initialization_scripts of this StudioComponent.
        :rtype: List
        """
        return self._initialization_scripts

    @initialization_scripts.setter
    def initialization_scripts(self, initialization_scripts):
        """Sets the initialization_scripts of this StudioComponent.


        :param initialization_scripts: The initialization_scripts of this StudioComponent.
        :type initialization_scripts: List
        """

        self._initialization_scripts = initialization_scripts

    @property
    def name(self):
        """Gets the name of this StudioComponent.


        :return: The name of this StudioComponent.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StudioComponent.


        :param name: The name of this StudioComponent.
        :type name: str
        """

        self._name = name

    @property
    def runtime_role_arn(self):
        """Gets the runtime_role_arn of this StudioComponent.


        :return: The runtime_role_arn of this StudioComponent.
        :rtype: str
        """
        return self._runtime_role_arn

    @runtime_role_arn.setter
    def runtime_role_arn(self, runtime_role_arn):
        """Sets the runtime_role_arn of this StudioComponent.


        :param runtime_role_arn: The runtime_role_arn of this StudioComponent.
        :type runtime_role_arn: str
        """

        self._runtime_role_arn = runtime_role_arn

    @property
    def script_parameters(self):
        """Gets the script_parameters of this StudioComponent.


        :return: The script_parameters of this StudioComponent.
        :rtype: List
        """
        return self._script_parameters

    @script_parameters.setter
    def script_parameters(self, script_parameters):
        """Sets the script_parameters of this StudioComponent.


        :param script_parameters: The script_parameters of this StudioComponent.
        :type script_parameters: List
        """

        self._script_parameters = script_parameters

    @property
    def secure_initialization_role_arn(self):
        """Gets the secure_initialization_role_arn of this StudioComponent.


        :return: The secure_initialization_role_arn of this StudioComponent.
        :rtype: str
        """
        return self._secure_initialization_role_arn

    @secure_initialization_role_arn.setter
    def secure_initialization_role_arn(self, secure_initialization_role_arn):
        """Sets the secure_initialization_role_arn of this StudioComponent.


        :param secure_initialization_role_arn: The secure_initialization_role_arn of this StudioComponent.
        :type secure_initialization_role_arn: str
        """

        self._secure_initialization_role_arn = secure_initialization_role_arn

    @property
    def state(self):
        """Gets the state of this StudioComponent.


        :return: The state of this StudioComponent.
        :rtype: StudioComponentState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this StudioComponent.


        :param state: The state of this StudioComponent.
        :type state: StudioComponentState
        """

        self._state = state

    @property
    def status_code(self):
        """Gets the status_code of this StudioComponent.


        :return: The status_code of this StudioComponent.
        :rtype: StudioComponentStatusCode
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this StudioComponent.


        :param status_code: The status_code of this StudioComponent.
        :type status_code: StudioComponentStatusCode
        """

        self._status_code = status_code

    @property
    def status_message(self):
        """Gets the status_message of this StudioComponent.


        :return: The status_message of this StudioComponent.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this StudioComponent.


        :param status_message: The status_message of this StudioComponent.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def studio_component_id(self):
        """Gets the studio_component_id of this StudioComponent.


        :return: The studio_component_id of this StudioComponent.
        :rtype: str
        """
        return self._studio_component_id

    @studio_component_id.setter
    def studio_component_id(self, studio_component_id):
        """Sets the studio_component_id of this StudioComponent.


        :param studio_component_id: The studio_component_id of this StudioComponent.
        :type studio_component_id: str
        """

        self._studio_component_id = studio_component_id

    @property
    def subtype(self):
        """Gets the subtype of this StudioComponent.


        :return: The subtype of this StudioComponent.
        :rtype: StudioComponentSubtype
        """
        return self._subtype

    @subtype.setter
    def subtype(self, subtype):
        """Sets the subtype of this StudioComponent.


        :param subtype: The subtype of this StudioComponent.
        :type subtype: StudioComponentSubtype
        """

        self._subtype = subtype

    @property
    def tags(self):
        """Gets the tags of this StudioComponent.


        :return: The tags of this StudioComponent.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StudioComponent.


        :param tags: The tags of this StudioComponent.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def type(self):
        """Gets the type of this StudioComponent.


        :return: The type of this StudioComponent.
        :rtype: StudioComponentType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StudioComponent.


        :param type: The type of this StudioComponent.
        :type type: StudioComponentType
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this StudioComponent.


        :return: The updated_at of this StudioComponent.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this StudioComponent.


        :param updated_at: The updated_at of this StudioComponent.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this StudioComponent.


        :return: The updated_by of this StudioComponent.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this StudioComponent.


        :param updated_by: The updated_by of this StudioComponent.
        :type updated_by: str
        """

        self._updated_by = updated_by
