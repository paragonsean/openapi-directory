# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.automatic_termination_mode import AutomaticTerminationMode
from openapi_server.models.create_launch_profile_request_stream_configuration_volume_configuration import CreateLaunchProfileRequestStreamConfigurationVolumeConfiguration
from openapi_server.models.session_backup_mode import SessionBackupMode
from openapi_server.models.session_persistence_mode import SessionPersistenceMode
from openapi_server.models.streaming_session_state import StreamingSessionState
from openapi_server.models.streaming_session_status_code import StreamingSessionStatusCode
from openapi_server.models.volume_retention_mode import VolumeRetentionMode
from openapi_server import util


class CreateStreamingSessionResponseSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, automatic_termination_mode: AutomaticTerminationMode=None, backup_mode: SessionBackupMode=None, created_at: datetime=None, created_by: str=None, ec2_instance_type: str=None, launch_profile_id: str=None, max_backups_to_retain: int=None, owned_by: str=None, session_id: str=None, session_persistence_mode: SessionPersistenceMode=None, started_at: datetime=None, started_by: str=None, started_from_backup_id: str=None, state: StreamingSessionState=None, status_code: StreamingSessionStatusCode=None, status_message: str=None, stop_at: datetime=None, stopped_at: datetime=None, stopped_by: str=None, streaming_image_id: str=None, tags: Dict=None, terminate_at: datetime=None, updated_at: datetime=None, updated_by: str=None, volume_configuration: CreateLaunchProfileRequestStreamConfigurationVolumeConfiguration=None, volume_retention_mode: VolumeRetentionMode=None):
        """CreateStreamingSessionResponseSession - a model defined in OpenAPI

        :param arn: The arn of this CreateStreamingSessionResponseSession.
        :param automatic_termination_mode: The automatic_termination_mode of this CreateStreamingSessionResponseSession.
        :param backup_mode: The backup_mode of this CreateStreamingSessionResponseSession.
        :param created_at: The created_at of this CreateStreamingSessionResponseSession.
        :param created_by: The created_by of this CreateStreamingSessionResponseSession.
        :param ec2_instance_type: The ec2_instance_type of this CreateStreamingSessionResponseSession.
        :param launch_profile_id: The launch_profile_id of this CreateStreamingSessionResponseSession.
        :param max_backups_to_retain: The max_backups_to_retain of this CreateStreamingSessionResponseSession.
        :param owned_by: The owned_by of this CreateStreamingSessionResponseSession.
        :param session_id: The session_id of this CreateStreamingSessionResponseSession.
        :param session_persistence_mode: The session_persistence_mode of this CreateStreamingSessionResponseSession.
        :param started_at: The started_at of this CreateStreamingSessionResponseSession.
        :param started_by: The started_by of this CreateStreamingSessionResponseSession.
        :param started_from_backup_id: The started_from_backup_id of this CreateStreamingSessionResponseSession.
        :param state: The state of this CreateStreamingSessionResponseSession.
        :param status_code: The status_code of this CreateStreamingSessionResponseSession.
        :param status_message: The status_message of this CreateStreamingSessionResponseSession.
        :param stop_at: The stop_at of this CreateStreamingSessionResponseSession.
        :param stopped_at: The stopped_at of this CreateStreamingSessionResponseSession.
        :param stopped_by: The stopped_by of this CreateStreamingSessionResponseSession.
        :param streaming_image_id: The streaming_image_id of this CreateStreamingSessionResponseSession.
        :param tags: The tags of this CreateStreamingSessionResponseSession.
        :param terminate_at: The terminate_at of this CreateStreamingSessionResponseSession.
        :param updated_at: The updated_at of this CreateStreamingSessionResponseSession.
        :param updated_by: The updated_by of this CreateStreamingSessionResponseSession.
        :param volume_configuration: The volume_configuration of this CreateStreamingSessionResponseSession.
        :param volume_retention_mode: The volume_retention_mode of this CreateStreamingSessionResponseSession.
        """
        self.openapi_types = {
            'arn': str,
            'automatic_termination_mode': AutomaticTerminationMode,
            'backup_mode': SessionBackupMode,
            'created_at': datetime,
            'created_by': str,
            'ec2_instance_type': str,
            'launch_profile_id': str,
            'max_backups_to_retain': int,
            'owned_by': str,
            'session_id': str,
            'session_persistence_mode': SessionPersistenceMode,
            'started_at': datetime,
            'started_by': str,
            'started_from_backup_id': str,
            'state': StreamingSessionState,
            'status_code': StreamingSessionStatusCode,
            'status_message': str,
            'stop_at': datetime,
            'stopped_at': datetime,
            'stopped_by': str,
            'streaming_image_id': str,
            'tags': Dict,
            'terminate_at': datetime,
            'updated_at': datetime,
            'updated_by': str,
            'volume_configuration': CreateLaunchProfileRequestStreamConfigurationVolumeConfiguration,
            'volume_retention_mode': VolumeRetentionMode
        }

        self.attribute_map = {
            'arn': 'arn',
            'automatic_termination_mode': 'automaticTerminationMode',
            'backup_mode': 'backupMode',
            'created_at': 'createdAt',
            'created_by': 'createdBy',
            'ec2_instance_type': 'ec2InstanceType',
            'launch_profile_id': 'launchProfileId',
            'max_backups_to_retain': 'maxBackupsToRetain',
            'owned_by': 'ownedBy',
            'session_id': 'sessionId',
            'session_persistence_mode': 'sessionPersistenceMode',
            'started_at': 'startedAt',
            'started_by': 'startedBy',
            'started_from_backup_id': 'startedFromBackupId',
            'state': 'state',
            'status_code': 'statusCode',
            'status_message': 'statusMessage',
            'stop_at': 'stopAt',
            'stopped_at': 'stoppedAt',
            'stopped_by': 'stoppedBy',
            'streaming_image_id': 'streamingImageId',
            'tags': 'tags',
            'terminate_at': 'terminateAt',
            'updated_at': 'updatedAt',
            'updated_by': 'updatedBy',
            'volume_configuration': 'volumeConfiguration',
            'volume_retention_mode': 'volumeRetentionMode'
        }

        self._arn = arn
        self._automatic_termination_mode = automatic_termination_mode
        self._backup_mode = backup_mode
        self._created_at = created_at
        self._created_by = created_by
        self._ec2_instance_type = ec2_instance_type
        self._launch_profile_id = launch_profile_id
        self._max_backups_to_retain = max_backups_to_retain
        self._owned_by = owned_by
        self._session_id = session_id
        self._session_persistence_mode = session_persistence_mode
        self._started_at = started_at
        self._started_by = started_by
        self._started_from_backup_id = started_from_backup_id
        self._state = state
        self._status_code = status_code
        self._status_message = status_message
        self._stop_at = stop_at
        self._stopped_at = stopped_at
        self._stopped_by = stopped_by
        self._streaming_image_id = streaming_image_id
        self._tags = tags
        self._terminate_at = terminate_at
        self._updated_at = updated_at
        self._updated_by = updated_by
        self._volume_configuration = volume_configuration
        self._volume_retention_mode = volume_retention_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateStreamingSessionResponseSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateStreamingSessionResponse_session of this CreateStreamingSessionResponseSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this CreateStreamingSessionResponseSession.


        :return: The arn of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this CreateStreamingSessionResponseSession.


        :param arn: The arn of this CreateStreamingSessionResponseSession.
        :type arn: str
        """

        self._arn = arn

    @property
    def automatic_termination_mode(self):
        """Gets the automatic_termination_mode of this CreateStreamingSessionResponseSession.


        :return: The automatic_termination_mode of this CreateStreamingSessionResponseSession.
        :rtype: AutomaticTerminationMode
        """
        return self._automatic_termination_mode

    @automatic_termination_mode.setter
    def automatic_termination_mode(self, automatic_termination_mode):
        """Sets the automatic_termination_mode of this CreateStreamingSessionResponseSession.


        :param automatic_termination_mode: The automatic_termination_mode of this CreateStreamingSessionResponseSession.
        :type automatic_termination_mode: AutomaticTerminationMode
        """

        self._automatic_termination_mode = automatic_termination_mode

    @property
    def backup_mode(self):
        """Gets the backup_mode of this CreateStreamingSessionResponseSession.


        :return: The backup_mode of this CreateStreamingSessionResponseSession.
        :rtype: SessionBackupMode
        """
        return self._backup_mode

    @backup_mode.setter
    def backup_mode(self, backup_mode):
        """Sets the backup_mode of this CreateStreamingSessionResponseSession.


        :param backup_mode: The backup_mode of this CreateStreamingSessionResponseSession.
        :type backup_mode: SessionBackupMode
        """

        self._backup_mode = backup_mode

    @property
    def created_at(self):
        """Gets the created_at of this CreateStreamingSessionResponseSession.


        :return: The created_at of this CreateStreamingSessionResponseSession.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CreateStreamingSessionResponseSession.


        :param created_at: The created_at of this CreateStreamingSessionResponseSession.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this CreateStreamingSessionResponseSession.


        :return: The created_by of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this CreateStreamingSessionResponseSession.


        :param created_by: The created_by of this CreateStreamingSessionResponseSession.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def ec2_instance_type(self):
        """Gets the ec2_instance_type of this CreateStreamingSessionResponseSession.


        :return: The ec2_instance_type of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._ec2_instance_type

    @ec2_instance_type.setter
    def ec2_instance_type(self, ec2_instance_type):
        """Sets the ec2_instance_type of this CreateStreamingSessionResponseSession.


        :param ec2_instance_type: The ec2_instance_type of this CreateStreamingSessionResponseSession.
        :type ec2_instance_type: str
        """

        self._ec2_instance_type = ec2_instance_type

    @property
    def launch_profile_id(self):
        """Gets the launch_profile_id of this CreateStreamingSessionResponseSession.


        :return: The launch_profile_id of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._launch_profile_id

    @launch_profile_id.setter
    def launch_profile_id(self, launch_profile_id):
        """Sets the launch_profile_id of this CreateStreamingSessionResponseSession.


        :param launch_profile_id: The launch_profile_id of this CreateStreamingSessionResponseSession.
        :type launch_profile_id: str
        """

        self._launch_profile_id = launch_profile_id

    @property
    def max_backups_to_retain(self):
        """Gets the max_backups_to_retain of this CreateStreamingSessionResponseSession.


        :return: The max_backups_to_retain of this CreateStreamingSessionResponseSession.
        :rtype: int
        """
        return self._max_backups_to_retain

    @max_backups_to_retain.setter
    def max_backups_to_retain(self, max_backups_to_retain):
        """Sets the max_backups_to_retain of this CreateStreamingSessionResponseSession.


        :param max_backups_to_retain: The max_backups_to_retain of this CreateStreamingSessionResponseSession.
        :type max_backups_to_retain: int
        """

        self._max_backups_to_retain = max_backups_to_retain

    @property
    def owned_by(self):
        """Gets the owned_by of this CreateStreamingSessionResponseSession.


        :return: The owned_by of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._owned_by

    @owned_by.setter
    def owned_by(self, owned_by):
        """Sets the owned_by of this CreateStreamingSessionResponseSession.


        :param owned_by: The owned_by of this CreateStreamingSessionResponseSession.
        :type owned_by: str
        """

        self._owned_by = owned_by

    @property
    def session_id(self):
        """Gets the session_id of this CreateStreamingSessionResponseSession.


        :return: The session_id of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this CreateStreamingSessionResponseSession.


        :param session_id: The session_id of this CreateStreamingSessionResponseSession.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def session_persistence_mode(self):
        """Gets the session_persistence_mode of this CreateStreamingSessionResponseSession.


        :return: The session_persistence_mode of this CreateStreamingSessionResponseSession.
        :rtype: SessionPersistenceMode
        """
        return self._session_persistence_mode

    @session_persistence_mode.setter
    def session_persistence_mode(self, session_persistence_mode):
        """Sets the session_persistence_mode of this CreateStreamingSessionResponseSession.


        :param session_persistence_mode: The session_persistence_mode of this CreateStreamingSessionResponseSession.
        :type session_persistence_mode: SessionPersistenceMode
        """

        self._session_persistence_mode = session_persistence_mode

    @property
    def started_at(self):
        """Gets the started_at of this CreateStreamingSessionResponseSession.


        :return: The started_at of this CreateStreamingSessionResponseSession.
        :rtype: datetime
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this CreateStreamingSessionResponseSession.


        :param started_at: The started_at of this CreateStreamingSessionResponseSession.
        :type started_at: datetime
        """

        self._started_at = started_at

    @property
    def started_by(self):
        """Gets the started_by of this CreateStreamingSessionResponseSession.


        :return: The started_by of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._started_by

    @started_by.setter
    def started_by(self, started_by):
        """Sets the started_by of this CreateStreamingSessionResponseSession.


        :param started_by: The started_by of this CreateStreamingSessionResponseSession.
        :type started_by: str
        """

        self._started_by = started_by

    @property
    def started_from_backup_id(self):
        """Gets the started_from_backup_id of this CreateStreamingSessionResponseSession.


        :return: The started_from_backup_id of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._started_from_backup_id

    @started_from_backup_id.setter
    def started_from_backup_id(self, started_from_backup_id):
        """Sets the started_from_backup_id of this CreateStreamingSessionResponseSession.


        :param started_from_backup_id: The started_from_backup_id of this CreateStreamingSessionResponseSession.
        :type started_from_backup_id: str
        """

        self._started_from_backup_id = started_from_backup_id

    @property
    def state(self):
        """Gets the state of this CreateStreamingSessionResponseSession.


        :return: The state of this CreateStreamingSessionResponseSession.
        :rtype: StreamingSessionState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CreateStreamingSessionResponseSession.


        :param state: The state of this CreateStreamingSessionResponseSession.
        :type state: StreamingSessionState
        """

        self._state = state

    @property
    def status_code(self):
        """Gets the status_code of this CreateStreamingSessionResponseSession.


        :return: The status_code of this CreateStreamingSessionResponseSession.
        :rtype: StreamingSessionStatusCode
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this CreateStreamingSessionResponseSession.


        :param status_code: The status_code of this CreateStreamingSessionResponseSession.
        :type status_code: StreamingSessionStatusCode
        """

        self._status_code = status_code

    @property
    def status_message(self):
        """Gets the status_message of this CreateStreamingSessionResponseSession.


        :return: The status_message of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this CreateStreamingSessionResponseSession.


        :param status_message: The status_message of this CreateStreamingSessionResponseSession.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def stop_at(self):
        """Gets the stop_at of this CreateStreamingSessionResponseSession.


        :return: The stop_at of this CreateStreamingSessionResponseSession.
        :rtype: datetime
        """
        return self._stop_at

    @stop_at.setter
    def stop_at(self, stop_at):
        """Sets the stop_at of this CreateStreamingSessionResponseSession.


        :param stop_at: The stop_at of this CreateStreamingSessionResponseSession.
        :type stop_at: datetime
        """

        self._stop_at = stop_at

    @property
    def stopped_at(self):
        """Gets the stopped_at of this CreateStreamingSessionResponseSession.


        :return: The stopped_at of this CreateStreamingSessionResponseSession.
        :rtype: datetime
        """
        return self._stopped_at

    @stopped_at.setter
    def stopped_at(self, stopped_at):
        """Sets the stopped_at of this CreateStreamingSessionResponseSession.


        :param stopped_at: The stopped_at of this CreateStreamingSessionResponseSession.
        :type stopped_at: datetime
        """

        self._stopped_at = stopped_at

    @property
    def stopped_by(self):
        """Gets the stopped_by of this CreateStreamingSessionResponseSession.


        :return: The stopped_by of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._stopped_by

    @stopped_by.setter
    def stopped_by(self, stopped_by):
        """Sets the stopped_by of this CreateStreamingSessionResponseSession.


        :param stopped_by: The stopped_by of this CreateStreamingSessionResponseSession.
        :type stopped_by: str
        """

        self._stopped_by = stopped_by

    @property
    def streaming_image_id(self):
        """Gets the streaming_image_id of this CreateStreamingSessionResponseSession.


        :return: The streaming_image_id of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._streaming_image_id

    @streaming_image_id.setter
    def streaming_image_id(self, streaming_image_id):
        """Sets the streaming_image_id of this CreateStreamingSessionResponseSession.


        :param streaming_image_id: The streaming_image_id of this CreateStreamingSessionResponseSession.
        :type streaming_image_id: str
        """

        self._streaming_image_id = streaming_image_id

    @property
    def tags(self):
        """Gets the tags of this CreateStreamingSessionResponseSession.


        :return: The tags of this CreateStreamingSessionResponseSession.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateStreamingSessionResponseSession.


        :param tags: The tags of this CreateStreamingSessionResponseSession.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def terminate_at(self):
        """Gets the terminate_at of this CreateStreamingSessionResponseSession.


        :return: The terminate_at of this CreateStreamingSessionResponseSession.
        :rtype: datetime
        """
        return self._terminate_at

    @terminate_at.setter
    def terminate_at(self, terminate_at):
        """Sets the terminate_at of this CreateStreamingSessionResponseSession.


        :param terminate_at: The terminate_at of this CreateStreamingSessionResponseSession.
        :type terminate_at: datetime
        """

        self._terminate_at = terminate_at

    @property
    def updated_at(self):
        """Gets the updated_at of this CreateStreamingSessionResponseSession.


        :return: The updated_at of this CreateStreamingSessionResponseSession.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this CreateStreamingSessionResponseSession.


        :param updated_at: The updated_at of this CreateStreamingSessionResponseSession.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this CreateStreamingSessionResponseSession.


        :return: The updated_by of this CreateStreamingSessionResponseSession.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this CreateStreamingSessionResponseSession.


        :param updated_by: The updated_by of this CreateStreamingSessionResponseSession.
        :type updated_by: str
        """

        self._updated_by = updated_by

    @property
    def volume_configuration(self):
        """Gets the volume_configuration of this CreateStreamingSessionResponseSession.


        :return: The volume_configuration of this CreateStreamingSessionResponseSession.
        :rtype: CreateLaunchProfileRequestStreamConfigurationVolumeConfiguration
        """
        return self._volume_configuration

    @volume_configuration.setter
    def volume_configuration(self, volume_configuration):
        """Sets the volume_configuration of this CreateStreamingSessionResponseSession.


        :param volume_configuration: The volume_configuration of this CreateStreamingSessionResponseSession.
        :type volume_configuration: CreateLaunchProfileRequestStreamConfigurationVolumeConfiguration
        """

        self._volume_configuration = volume_configuration

    @property
    def volume_retention_mode(self):
        """Gets the volume_retention_mode of this CreateStreamingSessionResponseSession.


        :return: The volume_retention_mode of this CreateStreamingSessionResponseSession.
        :rtype: VolumeRetentionMode
        """
        return self._volume_retention_mode

    @volume_retention_mode.setter
    def volume_retention_mode(self, volume_retention_mode):
        """Sets the volume_retention_mode of this CreateStreamingSessionResponseSession.


        :param volume_retention_mode: The volume_retention_mode of this CreateStreamingSessionResponseSession.
        :type volume_retention_mode: VolumeRetentionMode
        """

        self._volume_retention_mode = volume_retention_mode
