# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_streaming_image_response_streaming_image import CreateStreamingImageResponseStreamingImage
from openapi_server import util


class GetStreamingImageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, streaming_image: CreateStreamingImageResponseStreamingImage=None):
        """GetStreamingImageResponse - a model defined in OpenAPI

        :param streaming_image: The streaming_image of this GetStreamingImageResponse.
        """
        self.openapi_types = {
            'streaming_image': CreateStreamingImageResponseStreamingImage
        }

        self.attribute_map = {
            'streaming_image': 'streamingImage'
        }

        self._streaming_image = streaming_image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetStreamingImageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetStreamingImageResponse of this GetStreamingImageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def streaming_image(self):
        """Gets the streaming_image of this GetStreamingImageResponse.


        :return: The streaming_image of this GetStreamingImageResponse.
        :rtype: CreateStreamingImageResponseStreamingImage
        """
        return self._streaming_image

    @streaming_image.setter
    def streaming_image(self, streaming_image):
        """Sets the streaming_image of this GetStreamingImageResponse.


        :param streaming_image: The streaming_image of this GetStreamingImageResponse.
        :type streaming_image: CreateStreamingImageResponseStreamingImage
        """

        self._streaming_image = streaming_image
