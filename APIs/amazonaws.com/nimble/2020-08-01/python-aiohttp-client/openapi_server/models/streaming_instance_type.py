# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StreamingInstanceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    G4DN_PERIOD_XLARGE = 'g4dn.xlarge'
    G4DN_PERIOD_2XLARGE = 'g4dn.2xlarge'
    G4DN_PERIOD_4XLARGE = 'g4dn.4xlarge'
    G4DN_PERIOD_8XLARGE = 'g4dn.8xlarge'
    G4DN_PERIOD_12XLARGE = 'g4dn.12xlarge'
    G4DN_PERIOD_16XLARGE = 'g4dn.16xlarge'
    G3_PERIOD_4XLARGE = 'g3.4xlarge'
    G3S_PERIOD_XLARGE = 'g3s.xlarge'
    G5_PERIOD_XLARGE = 'g5.xlarge'
    G5_PERIOD_2XLARGE = 'g5.2xlarge'
    G5_PERIOD_4XLARGE = 'g5.4xlarge'
    G5_PERIOD_8XLARGE = 'g5.8xlarge'
    G5_PERIOD_16XLARGE = 'g5.16xlarge'

    def __init__(self):
        """StreamingInstanceType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamingInstanceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamingInstanceType of this StreamingInstanceType.
        """
        return util.deserialize_model(dikt, cls)
