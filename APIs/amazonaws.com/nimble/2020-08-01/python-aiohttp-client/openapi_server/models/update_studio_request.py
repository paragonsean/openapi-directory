# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateStudioRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_role_arn: str=None, display_name: str=None, user_role_arn: str=None):
        """UpdateStudioRequest - a model defined in OpenAPI

        :param admin_role_arn: The admin_role_arn of this UpdateStudioRequest.
        :param display_name: The display_name of this UpdateStudioRequest.
        :param user_role_arn: The user_role_arn of this UpdateStudioRequest.
        """
        self.openapi_types = {
            'admin_role_arn': str,
            'display_name': str,
            'user_role_arn': str
        }

        self.attribute_map = {
            'admin_role_arn': 'adminRoleArn',
            'display_name': 'displayName',
            'user_role_arn': 'userRoleArn'
        }

        self._admin_role_arn = admin_role_arn
        self._display_name = display_name
        self._user_role_arn = user_role_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateStudioRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateStudio_request of this UpdateStudioRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_role_arn(self):
        """Gets the admin_role_arn of this UpdateStudioRequest.

        The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.

        :return: The admin_role_arn of this UpdateStudioRequest.
        :rtype: str
        """
        return self._admin_role_arn

    @admin_role_arn.setter
    def admin_role_arn(self, admin_role_arn):
        """Sets the admin_role_arn of this UpdateStudioRequest.

        The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.

        :param admin_role_arn: The admin_role_arn of this UpdateStudioRequest.
        :type admin_role_arn: str
        """
        if admin_role_arn is not None and len(admin_role_arn) > 2048:
            raise ValueError("Invalid value for `admin_role_arn`, length must be less than or equal to `2048`")
        if admin_role_arn is not None and len(admin_role_arn) < 0:
            raise ValueError("Invalid value for `admin_role_arn`, length must be greater than or equal to `0`")

        self._admin_role_arn = admin_role_arn

    @property
    def display_name(self):
        """Gets the display_name of this UpdateStudioRequest.

        A friendly name for the studio.

        :return: The display_name of this UpdateStudioRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UpdateStudioRequest.

        A friendly name for the studio.

        :param display_name: The display_name of this UpdateStudioRequest.
        :type display_name: str
        """
        if display_name is not None and len(display_name) > 64:
            raise ValueError("Invalid value for `display_name`, length must be less than or equal to `64`")
        if display_name is not None and len(display_name) < 0:
            raise ValueError("Invalid value for `display_name`, length must be greater than or equal to `0`")

        self._display_name = display_name

    @property
    def user_role_arn(self):
        """Gets the user_role_arn of this UpdateStudioRequest.

        The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.

        :return: The user_role_arn of this UpdateStudioRequest.
        :rtype: str
        """
        return self._user_role_arn

    @user_role_arn.setter
    def user_role_arn(self, user_role_arn):
        """Sets the user_role_arn of this UpdateStudioRequest.

        The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.

        :param user_role_arn: The user_role_arn of this UpdateStudioRequest.
        :type user_role_arn: str
        """
        if user_role_arn is not None and len(user_role_arn) > 2048:
            raise ValueError("Invalid value for `user_role_arn`, length must be less than or equal to `2048`")
        if user_role_arn is not None and len(user_role_arn) < 0:
            raise ValueError("Invalid value for `user_role_arn`, length must be greater than or equal to `0`")

        self._user_role_arn = user_role_arn
