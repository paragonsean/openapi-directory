# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.streaming_session_stream_state import StreamingSessionStreamState
from openapi_server.models.streaming_session_stream_status_code import StreamingSessionStreamStatusCode
from openapi_server import util


class StreamingSessionStream(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, created_by: str=None, expires_at: datetime=None, owned_by: str=None, state: StreamingSessionStreamState=None, status_code: StreamingSessionStreamStatusCode=None, stream_id: str=None, url: str=None):
        """StreamingSessionStream - a model defined in OpenAPI

        :param created_at: The created_at of this StreamingSessionStream.
        :param created_by: The created_by of this StreamingSessionStream.
        :param expires_at: The expires_at of this StreamingSessionStream.
        :param owned_by: The owned_by of this StreamingSessionStream.
        :param state: The state of this StreamingSessionStream.
        :param status_code: The status_code of this StreamingSessionStream.
        :param stream_id: The stream_id of this StreamingSessionStream.
        :param url: The url of this StreamingSessionStream.
        """
        self.openapi_types = {
            'created_at': datetime,
            'created_by': str,
            'expires_at': datetime,
            'owned_by': str,
            'state': StreamingSessionStreamState,
            'status_code': StreamingSessionStreamStatusCode,
            'stream_id': str,
            'url': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'created_by': 'createdBy',
            'expires_at': 'expiresAt',
            'owned_by': 'ownedBy',
            'state': 'state',
            'status_code': 'statusCode',
            'stream_id': 'streamId',
            'url': 'url'
        }

        self._created_at = created_at
        self._created_by = created_by
        self._expires_at = expires_at
        self._owned_by = owned_by
        self._state = state
        self._status_code = status_code
        self._stream_id = stream_id
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamingSessionStream':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamingSessionStream of this StreamingSessionStream.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this StreamingSessionStream.


        :return: The created_at of this StreamingSessionStream.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this StreamingSessionStream.


        :param created_at: The created_at of this StreamingSessionStream.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this StreamingSessionStream.


        :return: The created_by of this StreamingSessionStream.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this StreamingSessionStream.


        :param created_by: The created_by of this StreamingSessionStream.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def expires_at(self):
        """Gets the expires_at of this StreamingSessionStream.


        :return: The expires_at of this StreamingSessionStream.
        :rtype: datetime
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this StreamingSessionStream.


        :param expires_at: The expires_at of this StreamingSessionStream.
        :type expires_at: datetime
        """

        self._expires_at = expires_at

    @property
    def owned_by(self):
        """Gets the owned_by of this StreamingSessionStream.


        :return: The owned_by of this StreamingSessionStream.
        :rtype: str
        """
        return self._owned_by

    @owned_by.setter
    def owned_by(self, owned_by):
        """Sets the owned_by of this StreamingSessionStream.


        :param owned_by: The owned_by of this StreamingSessionStream.
        :type owned_by: str
        """

        self._owned_by = owned_by

    @property
    def state(self):
        """Gets the state of this StreamingSessionStream.


        :return: The state of this StreamingSessionStream.
        :rtype: StreamingSessionStreamState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this StreamingSessionStream.


        :param state: The state of this StreamingSessionStream.
        :type state: StreamingSessionStreamState
        """

        self._state = state

    @property
    def status_code(self):
        """Gets the status_code of this StreamingSessionStream.


        :return: The status_code of this StreamingSessionStream.
        :rtype: StreamingSessionStreamStatusCode
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this StreamingSessionStream.


        :param status_code: The status_code of this StreamingSessionStream.
        :type status_code: StreamingSessionStreamStatusCode
        """

        self._status_code = status_code

    @property
    def stream_id(self):
        """Gets the stream_id of this StreamingSessionStream.


        :return: The stream_id of this StreamingSessionStream.
        :rtype: str
        """
        return self._stream_id

    @stream_id.setter
    def stream_id(self, stream_id):
        """Sets the stream_id of this StreamingSessionStream.


        :param stream_id: The stream_id of this StreamingSessionStream.
        :type stream_id: str
        """

        self._stream_id = stream_id

    @property
    def url(self):
        """Gets the url of this StreamingSessionStream.


        :return: The url of this StreamingSessionStream.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this StreamingSessionStream.


        :param url: The url of this StreamingSessionStream.
        :type url: str
        """

        self._url = url
