# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComputeFarmConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_directory_user: str=None, endpoint: str=None):
        """ComputeFarmConfiguration - a model defined in OpenAPI

        :param active_directory_user: The active_directory_user of this ComputeFarmConfiguration.
        :param endpoint: The endpoint of this ComputeFarmConfiguration.
        """
        self.openapi_types = {
            'active_directory_user': str,
            'endpoint': str
        }

        self.attribute_map = {
            'active_directory_user': 'activeDirectoryUser',
            'endpoint': 'endpoint'
        }

        self._active_directory_user = active_directory_user
        self._endpoint = endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComputeFarmConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComputeFarmConfiguration of this ComputeFarmConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_directory_user(self):
        """Gets the active_directory_user of this ComputeFarmConfiguration.


        :return: The active_directory_user of this ComputeFarmConfiguration.
        :rtype: str
        """
        return self._active_directory_user

    @active_directory_user.setter
    def active_directory_user(self, active_directory_user):
        """Sets the active_directory_user of this ComputeFarmConfiguration.


        :param active_directory_user: The active_directory_user of this ComputeFarmConfiguration.
        :type active_directory_user: str
        """

        self._active_directory_user = active_directory_user

    @property
    def endpoint(self):
        """Gets the endpoint of this ComputeFarmConfiguration.


        :return: The endpoint of this ComputeFarmConfiguration.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this ComputeFarmConfiguration.


        :param endpoint: The endpoint of this ComputeFarmConfiguration.
        :type endpoint: str
        """

        self._endpoint = endpoint
