# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_studio_response_studio import CreateStudioResponseStudio
from openapi_server import util


class DeleteStudioResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, studio: CreateStudioResponseStudio=None):
        """DeleteStudioResponse - a model defined in OpenAPI

        :param studio: The studio of this DeleteStudioResponse.
        """
        self.openapi_types = {
            'studio': CreateStudioResponseStudio
        }

        self.attribute_map = {
            'studio': 'studio'
        }

        self._studio = studio

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteStudioResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteStudioResponse of this DeleteStudioResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def studio(self):
        """Gets the studio of this DeleteStudioResponse.


        :return: The studio of this DeleteStudioResponse.
        :rtype: CreateStudioResponseStudio
        """
        return self._studio

    @studio.setter
    def studio(self, studio):
        """Sets the studio of this DeleteStudioResponse.


        :param studio: The studio of this DeleteStudioResponse.
        :type studio: CreateStudioResponseStudio
        """
        if studio is None:
            raise ValueError("Invalid value for `studio`, must not be `None`")

        self._studio = studio
