# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StreamingSessionStatusCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    STREAMING_SESSION_READY = 'STREAMING_SESSION_READY'
    STREAMING_SESSION_DELETED = 'STREAMING_SESSION_DELETED'
    STREAMING_SESSION_CREATE_IN_PROGRESS = 'STREAMING_SESSION_CREATE_IN_PROGRESS'
    STREAMING_SESSION_DELETE_IN_PROGRESS = 'STREAMING_SESSION_DELETE_IN_PROGRESS'
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    INSUFFICIENT_CAPACITY = 'INSUFFICIENT_CAPACITY'
    ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR = 'ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR'
    NETWORK_CONNECTION_ERROR = 'NETWORK_CONNECTION_ERROR'
    INITIALIZATION_SCRIPT_ERROR = 'INITIALIZATION_SCRIPT_ERROR'
    DECRYPT_STREAMING_IMAGE_ERROR = 'DECRYPT_STREAMING_IMAGE_ERROR'
    NETWORK_INTERFACE_ERROR = 'NETWORK_INTERFACE_ERROR'
    STREAMING_SESSION_STOPPED = 'STREAMING_SESSION_STOPPED'
    STREAMING_SESSION_STARTED = 'STREAMING_SESSION_STARTED'
    STREAMING_SESSION_STOP_IN_PROGRESS = 'STREAMING_SESSION_STOP_IN_PROGRESS'
    STREAMING_SESSION_START_IN_PROGRESS = 'STREAMING_SESSION_START_IN_PROGRESS'
    AMI_VALIDATION_ERROR = 'AMI_VALIDATION_ERROR'

    def __init__(self):
        """StreamingSessionStatusCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamingSessionStatusCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamingSessionStatusCode of this StreamingSessionStatusCode.
        """
        return util.deserialize_model(dikt, cls)
