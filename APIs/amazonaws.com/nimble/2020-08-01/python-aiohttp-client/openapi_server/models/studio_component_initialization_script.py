# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.launch_profile_platform import LaunchProfilePlatform
from openapi_server.models.studio_component_initialization_script_run_context import StudioComponentInitializationScriptRunContext
from openapi_server import util


class StudioComponentInitializationScript(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, launch_profile_protocol_version: str=None, platform: LaunchProfilePlatform=None, run_context: StudioComponentInitializationScriptRunContext=None, script: str=None):
        """StudioComponentInitializationScript - a model defined in OpenAPI

        :param launch_profile_protocol_version: The launch_profile_protocol_version of this StudioComponentInitializationScript.
        :param platform: The platform of this StudioComponentInitializationScript.
        :param run_context: The run_context of this StudioComponentInitializationScript.
        :param script: The script of this StudioComponentInitializationScript.
        """
        self.openapi_types = {
            'launch_profile_protocol_version': str,
            'platform': LaunchProfilePlatform,
            'run_context': StudioComponentInitializationScriptRunContext,
            'script': str
        }

        self.attribute_map = {
            'launch_profile_protocol_version': 'launchProfileProtocolVersion',
            'platform': 'platform',
            'run_context': 'runContext',
            'script': 'script'
        }

        self._launch_profile_protocol_version = launch_profile_protocol_version
        self._platform = platform
        self._run_context = run_context
        self._script = script

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StudioComponentInitializationScript':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StudioComponentInitializationScript of this StudioComponentInitializationScript.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def launch_profile_protocol_version(self):
        """Gets the launch_profile_protocol_version of this StudioComponentInitializationScript.


        :return: The launch_profile_protocol_version of this StudioComponentInitializationScript.
        :rtype: str
        """
        return self._launch_profile_protocol_version

    @launch_profile_protocol_version.setter
    def launch_profile_protocol_version(self, launch_profile_protocol_version):
        """Sets the launch_profile_protocol_version of this StudioComponentInitializationScript.


        :param launch_profile_protocol_version: The launch_profile_protocol_version of this StudioComponentInitializationScript.
        :type launch_profile_protocol_version: str
        """

        self._launch_profile_protocol_version = launch_profile_protocol_version

    @property
    def platform(self):
        """Gets the platform of this StudioComponentInitializationScript.


        :return: The platform of this StudioComponentInitializationScript.
        :rtype: LaunchProfilePlatform
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this StudioComponentInitializationScript.


        :param platform: The platform of this StudioComponentInitializationScript.
        :type platform: LaunchProfilePlatform
        """

        self._platform = platform

    @property
    def run_context(self):
        """Gets the run_context of this StudioComponentInitializationScript.


        :return: The run_context of this StudioComponentInitializationScript.
        :rtype: StudioComponentInitializationScriptRunContext
        """
        return self._run_context

    @run_context.setter
    def run_context(self, run_context):
        """Sets the run_context of this StudioComponentInitializationScript.


        :param run_context: The run_context of this StudioComponentInitializationScript.
        :type run_context: StudioComponentInitializationScriptRunContext
        """

        self._run_context = run_context

    @property
    def script(self):
        """Gets the script of this StudioComponentInitializationScript.


        :return: The script of this StudioComponentInitializationScript.
        :rtype: str
        """
        return self._script

    @script.setter
    def script(self, script):
        """Sets the script of this StudioComponentInitializationScript.


        :param script: The script of this StudioComponentInitializationScript.
        :type script: str
        """

        self._script = script
