/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LaunchProfileInitializationActiveDirectory from './LaunchProfileInitializationActiveDirectory';

/**
 * The LaunchProfileInitializationActiveDirectory model module.
 * @module model/LaunchProfileInitializationActiveDirectory
 * @version 2020-08-01
 */
class LaunchProfileInitializationActiveDirectory {
    /**
     * Constructs a new <code>LaunchProfileInitializationActiveDirectory</code>.
     * @alias module:model/LaunchProfileInitializationActiveDirectory
     * @implements module:model/LaunchProfileInitializationActiveDirectory
     */
    constructor() { 
        LaunchProfileInitializationActiveDirectory.initialize(this);
        LaunchProfileInitializationActiveDirectory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LaunchProfileInitializationActiveDirectory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LaunchProfileInitializationActiveDirectory} obj Optional instance to populate.
     * @return {module:model/LaunchProfileInitializationActiveDirectory} The populated <code>LaunchProfileInitializationActiveDirectory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LaunchProfileInitializationActiveDirectory();
            LaunchProfileInitializationActiveDirectory.constructFromObject(data, obj);

            if (data.hasOwnProperty('computerAttributes')) {
                obj['computerAttributes'] = ApiClient.convertToType(data['computerAttributes'], Array);
            }
            if (data.hasOwnProperty('directoryId')) {
                obj['directoryId'] = ApiClient.convertToType(data['directoryId'], 'String');
            }
            if (data.hasOwnProperty('directoryName')) {
                obj['directoryName'] = ApiClient.convertToType(data['directoryName'], 'String');
            }
            if (data.hasOwnProperty('dnsIpAddresses')) {
                obj['dnsIpAddresses'] = ApiClient.convertToType(data['dnsIpAddresses'], Array);
            }
            if (data.hasOwnProperty('organizationalUnitDistinguishedName')) {
                obj['organizationalUnitDistinguishedName'] = ApiClient.convertToType(data['organizationalUnitDistinguishedName'], 'String');
            }
            if (data.hasOwnProperty('studioComponentId')) {
                obj['studioComponentId'] = ApiClient.convertToType(data['studioComponentId'], 'String');
            }
            if (data.hasOwnProperty('studioComponentName')) {
                obj['studioComponentName'] = ApiClient.convertToType(data['studioComponentName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LaunchProfileInitializationActiveDirectory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LaunchProfileInitializationActiveDirectory</code>.
     */
    static validateJSON(data) {
        // validate the optional field `computerAttributes`
        if (data['computerAttributes']) { // data not null
          Array.validateJSON(data['computerAttributes']);
        }
        // validate the optional field `directoryId`
        if (data['directoryId']) { // data not null
          String.validateJSON(data['directoryId']);
        }
        // validate the optional field `directoryName`
        if (data['directoryName']) { // data not null
          String.validateJSON(data['directoryName']);
        }
        // validate the optional field `dnsIpAddresses`
        if (data['dnsIpAddresses']) { // data not null
          Array.validateJSON(data['dnsIpAddresses']);
        }
        // validate the optional field `organizationalUnitDistinguishedName`
        if (data['organizationalUnitDistinguishedName']) { // data not null
          String.validateJSON(data['organizationalUnitDistinguishedName']);
        }
        // validate the optional field `studioComponentId`
        if (data['studioComponentId']) { // data not null
          String.validateJSON(data['studioComponentId']);
        }
        // validate the optional field `studioComponentName`
        if (data['studioComponentName']) { // data not null
          String.validateJSON(data['studioComponentName']);
        }

        return true;
    }


}



/**
 * @member {Array} computerAttributes
 */
LaunchProfileInitializationActiveDirectory.prototype['computerAttributes'] = undefined;

/**
 * @member {String} directoryId
 */
LaunchProfileInitializationActiveDirectory.prototype['directoryId'] = undefined;

/**
 * @member {String} directoryName
 */
LaunchProfileInitializationActiveDirectory.prototype['directoryName'] = undefined;

/**
 * @member {Array} dnsIpAddresses
 */
LaunchProfileInitializationActiveDirectory.prototype['dnsIpAddresses'] = undefined;

/**
 * @member {String} organizationalUnitDistinguishedName
 */
LaunchProfileInitializationActiveDirectory.prototype['organizationalUnitDistinguishedName'] = undefined;

/**
 * @member {String} studioComponentId
 */
LaunchProfileInitializationActiveDirectory.prototype['studioComponentId'] = undefined;

/**
 * @member {String} studioComponentName
 */
LaunchProfileInitializationActiveDirectory.prototype['studioComponentName'] = undefined;


// Implement LaunchProfileInitializationActiveDirectory interface:
/**
 * @member {Array} computerAttributes
 */
LaunchProfileInitializationActiveDirectory.prototype['computerAttributes'] = undefined;
/**
 * @member {String} directoryId
 */
LaunchProfileInitializationActiveDirectory.prototype['directoryId'] = undefined;
/**
 * @member {String} directoryName
 */
LaunchProfileInitializationActiveDirectory.prototype['directoryName'] = undefined;
/**
 * @member {Array} dnsIpAddresses
 */
LaunchProfileInitializationActiveDirectory.prototype['dnsIpAddresses'] = undefined;
/**
 * @member {String} organizationalUnitDistinguishedName
 */
LaunchProfileInitializationActiveDirectory.prototype['organizationalUnitDistinguishedName'] = undefined;
/**
 * @member {String} studioComponentId
 */
LaunchProfileInitializationActiveDirectory.prototype['studioComponentId'] = undefined;
/**
 * @member {String} studioComponentName
 */
LaunchProfileInitializationActiveDirectory.prototype['studioComponentName'] = undefined;




export default LaunchProfileInitializationActiveDirectory;

