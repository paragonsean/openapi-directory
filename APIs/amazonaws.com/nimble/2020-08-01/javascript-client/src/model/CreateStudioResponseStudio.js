/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Studio from './Studio';
import StudioState from './StudioState';
import StudioStatusCode from './StudioStatusCode';
import StudioStudioEncryptionConfiguration from './StudioStudioEncryptionConfiguration';

/**
 * The CreateStudioResponseStudio model module.
 * @module model/CreateStudioResponseStudio
 * @version 2020-08-01
 */
class CreateStudioResponseStudio {
    /**
     * Constructs a new <code>CreateStudioResponseStudio</code>.
     * @alias module:model/CreateStudioResponseStudio
     * @implements module:model/Studio
     */
    constructor() { 
        Studio.initialize(this);
        CreateStudioResponseStudio.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateStudioResponseStudio</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateStudioResponseStudio} obj Optional instance to populate.
     * @return {module:model/CreateStudioResponseStudio} The populated <code>CreateStudioResponseStudio</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateStudioResponseStudio();
            Studio.constructFromObject(data, obj);

            if (data.hasOwnProperty('adminRoleArn')) {
                obj['adminRoleArn'] = ApiClient.convertToType(data['adminRoleArn'], 'String');
            }
            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('homeRegion')) {
                obj['homeRegion'] = ApiClient.convertToType(data['homeRegion'], 'String');
            }
            if (data.hasOwnProperty('ssoClientId')) {
                obj['ssoClientId'] = ApiClient.convertToType(data['ssoClientId'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], StudioState);
            }
            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], StudioStatusCode);
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('studioEncryptionConfiguration')) {
                obj['studioEncryptionConfiguration'] = StudioStudioEncryptionConfiguration.constructFromObject(data['studioEncryptionConfiguration']);
            }
            if (data.hasOwnProperty('studioId')) {
                obj['studioId'] = ApiClient.convertToType(data['studioId'], 'String');
            }
            if (data.hasOwnProperty('studioName')) {
                obj['studioName'] = ApiClient.convertToType(data['studioName'], 'String');
            }
            if (data.hasOwnProperty('studioUrl')) {
                obj['studioUrl'] = ApiClient.convertToType(data['studioUrl'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
            if (data.hasOwnProperty('userRoleArn')) {
                obj['userRoleArn'] = ApiClient.convertToType(data['userRoleArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateStudioResponseStudio</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateStudioResponseStudio</code>.
     */
    static validateJSON(data) {
        // validate the optional field `adminRoleArn`
        if (data['adminRoleArn']) { // data not null
          String.validateJSON(data['adminRoleArn']);
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `displayName`
        if (data['displayName']) { // data not null
          String.validateJSON(data['displayName']);
        }
        // validate the optional field `homeRegion`
        if (data['homeRegion']) { // data not null
          String.validateJSON(data['homeRegion']);
        }
        // validate the optional field `ssoClientId`
        if (data['ssoClientId']) { // data not null
          String.validateJSON(data['ssoClientId']);
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          StudioState.validateJSON(data['state']);
        }
        // validate the optional field `statusCode`
        if (data['statusCode']) { // data not null
          StudioStatusCode.validateJSON(data['statusCode']);
        }
        // validate the optional field `statusMessage`
        if (data['statusMessage']) { // data not null
          String.validateJSON(data['statusMessage']);
        }
        // validate the optional field `studioEncryptionConfiguration`
        if (data['studioEncryptionConfiguration']) { // data not null
          StudioStudioEncryptionConfiguration.validateJSON(data['studioEncryptionConfiguration']);
        }
        // validate the optional field `studioId`
        if (data['studioId']) { // data not null
          String.validateJSON(data['studioId']);
        }
        // validate the optional field `studioName`
        if (data['studioName']) { // data not null
          String.validateJSON(data['studioName']);
        }
        // validate the optional field `studioUrl`
        if (data['studioUrl']) { // data not null
          String.validateJSON(data['studioUrl']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `updatedAt`
        if (data['updatedAt']) { // data not null
          Date.validateJSON(data['updatedAt']);
        }
        // validate the optional field `userRoleArn`
        if (data['userRoleArn']) { // data not null
          String.validateJSON(data['userRoleArn']);
        }

        return true;
    }


}



/**
 * @member {String} adminRoleArn
 */
CreateStudioResponseStudio.prototype['adminRoleArn'] = undefined;

/**
 * @member {String} arn
 */
CreateStudioResponseStudio.prototype['arn'] = undefined;

/**
 * @member {Date} createdAt
 */
CreateStudioResponseStudio.prototype['createdAt'] = undefined;

/**
 * @member {String} displayName
 */
CreateStudioResponseStudio.prototype['displayName'] = undefined;

/**
 * @member {String} homeRegion
 */
CreateStudioResponseStudio.prototype['homeRegion'] = undefined;

/**
 * @member {String} ssoClientId
 */
CreateStudioResponseStudio.prototype['ssoClientId'] = undefined;

/**
 * @member {module:model/StudioState} state
 */
CreateStudioResponseStudio.prototype['state'] = undefined;

/**
 * @member {module:model/StudioStatusCode} statusCode
 */
CreateStudioResponseStudio.prototype['statusCode'] = undefined;

/**
 * @member {String} statusMessage
 */
CreateStudioResponseStudio.prototype['statusMessage'] = undefined;

/**
 * @member {module:model/StudioStudioEncryptionConfiguration} studioEncryptionConfiguration
 */
CreateStudioResponseStudio.prototype['studioEncryptionConfiguration'] = undefined;

/**
 * @member {String} studioId
 */
CreateStudioResponseStudio.prototype['studioId'] = undefined;

/**
 * @member {String} studioName
 */
CreateStudioResponseStudio.prototype['studioName'] = undefined;

/**
 * @member {String} studioUrl
 */
CreateStudioResponseStudio.prototype['studioUrl'] = undefined;

/**
 * @member {Object} tags
 */
CreateStudioResponseStudio.prototype['tags'] = undefined;

/**
 * @member {Date} updatedAt
 */
CreateStudioResponseStudio.prototype['updatedAt'] = undefined;

/**
 * @member {String} userRoleArn
 */
CreateStudioResponseStudio.prototype['userRoleArn'] = undefined;


// Implement Studio interface:
/**
 * @member {String} adminRoleArn
 */
Studio.prototype['adminRoleArn'] = undefined;
/**
 * @member {String} arn
 */
Studio.prototype['arn'] = undefined;
/**
 * @member {Date} createdAt
 */
Studio.prototype['createdAt'] = undefined;
/**
 * @member {String} displayName
 */
Studio.prototype['displayName'] = undefined;
/**
 * @member {String} homeRegion
 */
Studio.prototype['homeRegion'] = undefined;
/**
 * @member {String} ssoClientId
 */
Studio.prototype['ssoClientId'] = undefined;
/**
 * @member {module:model/StudioState} state
 */
Studio.prototype['state'] = undefined;
/**
 * @member {module:model/StudioStatusCode} statusCode
 */
Studio.prototype['statusCode'] = undefined;
/**
 * @member {String} statusMessage
 */
Studio.prototype['statusMessage'] = undefined;
/**
 * @member {module:model/StudioStudioEncryptionConfiguration} studioEncryptionConfiguration
 */
Studio.prototype['studioEncryptionConfiguration'] = undefined;
/**
 * @member {String} studioId
 */
Studio.prototype['studioId'] = undefined;
/**
 * @member {String} studioName
 */
Studio.prototype['studioName'] = undefined;
/**
 * @member {String} studioUrl
 */
Studio.prototype['studioUrl'] = undefined;
/**
 * @member {Object} tags
 */
Studio.prototype['tags'] = undefined;
/**
 * @member {Date} updatedAt
 */
Studio.prototype['updatedAt'] = undefined;
/**
 * @member {String} userRoleArn
 */
Studio.prototype['userRoleArn'] = undefined;




export default CreateStudioResponseStudio;

