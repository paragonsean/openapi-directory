/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateStudioRequestStudioEncryptionConfiguration from './CreateStudioRequestStudioEncryptionConfiguration';

/**
 * The CreateStudioRequest model module.
 * @module model/CreateStudioRequest
 * @version 2020-08-01
 */
class CreateStudioRequest {
    /**
     * Constructs a new <code>CreateStudioRequest</code>.
     * @alias module:model/CreateStudioRequest
     * @param adminRoleArn {String} The IAM role that studio admins will assume when logging in to the Nimble Studio portal.
     * @param displayName {String} A friendly name for the studio.
     * @param studioName {String} The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.
     * @param userRoleArn {String} The IAM role that studio users will assume when logging in to the Nimble Studio portal.
     */
    constructor(adminRoleArn, displayName, studioName, userRoleArn) { 
        
        CreateStudioRequest.initialize(this, adminRoleArn, displayName, studioName, userRoleArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, adminRoleArn, displayName, studioName, userRoleArn) { 
        obj['adminRoleArn'] = adminRoleArn;
        obj['displayName'] = displayName;
        obj['studioName'] = studioName;
        obj['userRoleArn'] = userRoleArn;
    }

    /**
     * Constructs a <code>CreateStudioRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateStudioRequest} obj Optional instance to populate.
     * @return {module:model/CreateStudioRequest} The populated <code>CreateStudioRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateStudioRequest();

            if (data.hasOwnProperty('adminRoleArn')) {
                obj['adminRoleArn'] = ApiClient.convertToType(data['adminRoleArn'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('studioEncryptionConfiguration')) {
                obj['studioEncryptionConfiguration'] = CreateStudioRequestStudioEncryptionConfiguration.constructFromObject(data['studioEncryptionConfiguration']);
            }
            if (data.hasOwnProperty('studioName')) {
                obj['studioName'] = ApiClient.convertToType(data['studioName'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('userRoleArn')) {
                obj['userRoleArn'] = ApiClient.convertToType(data['userRoleArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateStudioRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateStudioRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateStudioRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['adminRoleArn'] && !(typeof data['adminRoleArn'] === 'string' || data['adminRoleArn'] instanceof String)) {
            throw new Error("Expected the field `adminRoleArn` to be a primitive type in the JSON string but got " + data['adminRoleArn']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `studioEncryptionConfiguration`
        if (data['studioEncryptionConfiguration']) { // data not null
          CreateStudioRequestStudioEncryptionConfiguration.validateJSON(data['studioEncryptionConfiguration']);
        }
        // ensure the json data is a string
        if (data['studioName'] && !(typeof data['studioName'] === 'string' || data['studioName'] instanceof String)) {
            throw new Error("Expected the field `studioName` to be a primitive type in the JSON string but got " + data['studioName']);
        }
        // ensure the json data is a string
        if (data['userRoleArn'] && !(typeof data['userRoleArn'] === 'string' || data['userRoleArn'] instanceof String)) {
            throw new Error("Expected the field `userRoleArn` to be a primitive type in the JSON string but got " + data['userRoleArn']);
        }

        return true;
    }


}

CreateStudioRequest.RequiredProperties = ["adminRoleArn", "displayName", "studioName", "userRoleArn"];

/**
 * The IAM role that studio admins will assume when logging in to the Nimble Studio portal.
 * @member {String} adminRoleArn
 */
CreateStudioRequest.prototype['adminRoleArn'] = undefined;

/**
 * A friendly name for the studio.
 * @member {String} displayName
 */
CreateStudioRequest.prototype['displayName'] = undefined;

/**
 * @member {module:model/CreateStudioRequestStudioEncryptionConfiguration} studioEncryptionConfiguration
 */
CreateStudioRequest.prototype['studioEncryptionConfiguration'] = undefined;

/**
 * The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.
 * @member {String} studioName
 */
CreateStudioRequest.prototype['studioName'] = undefined;

/**
 * A collection of labels, in the form of key-value pairs, that apply to this resource.
 * @member {Object.<String, String>} tags
 */
CreateStudioRequest.prototype['tags'] = undefined;

/**
 * The IAM role that studio users will assume when logging in to the Nimble Studio portal.
 * @member {String} userRoleArn
 */
CreateStudioRequest.prototype['userRoleArn'] = undefined;






export default CreateStudioRequest;

