/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateStreamingImageRequest model module.
 * @module model/CreateStreamingImageRequest
 * @version 2020-08-01
 */
class CreateStreamingImageRequest {
    /**
     * Constructs a new <code>CreateStreamingImageRequest</code>.
     * @alias module:model/CreateStreamingImageRequest
     * @param ec2ImageId {String} The ID of an EC2 machine image with which to create this streaming image.
     * @param name {String} A friendly name for a streaming image resource.
     */
    constructor(ec2ImageId, name) { 
        
        CreateStreamingImageRequest.initialize(this, ec2ImageId, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ec2ImageId, name) { 
        obj['ec2ImageId'] = ec2ImageId;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateStreamingImageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateStreamingImageRequest} obj Optional instance to populate.
     * @return {module:model/CreateStreamingImageRequest} The populated <code>CreateStreamingImageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateStreamingImageRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('ec2ImageId')) {
                obj['ec2ImageId'] = ApiClient.convertToType(data['ec2ImageId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateStreamingImageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateStreamingImageRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateStreamingImageRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['ec2ImageId'] && !(typeof data['ec2ImageId'] === 'string' || data['ec2ImageId'] instanceof String)) {
            throw new Error("Expected the field `ec2ImageId` to be a primitive type in the JSON string but got " + data['ec2ImageId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

CreateStreamingImageRequest.RequiredProperties = ["ec2ImageId", "name"];

/**
 * The description.
 * @member {String} description
 */
CreateStreamingImageRequest.prototype['description'] = undefined;

/**
 * The ID of an EC2 machine image with which to create this streaming image.
 * @member {String} ec2ImageId
 */
CreateStreamingImageRequest.prototype['ec2ImageId'] = undefined;

/**
 * A friendly name for a streaming image resource.
 * @member {String} name
 */
CreateStreamingImageRequest.prototype['name'] = undefined;

/**
 * A collection of labels, in the form of key-value pairs, that apply to this resource.
 * @member {Object.<String, String>} tags
 */
CreateStreamingImageRequest.prototype['tags'] = undefined;






export default CreateStreamingImageRequest;

