/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StudioComponentSubtype from './StudioComponentSubtype';
import StudioComponentType from './StudioComponentType';

/**
 * The StudioComponentSummary model module.
 * @module model/StudioComponentSummary
 * @version 2020-08-01
 */
class StudioComponentSummary {
    /**
     * Constructs a new <code>StudioComponentSummary</code>.
     * The studio component&#39;s summary.
     * @alias module:model/StudioComponentSummary
     */
    constructor() { 
        
        StudioComponentSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StudioComponentSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StudioComponentSummary} obj Optional instance to populate.
     * @return {module:model/StudioComponentSummary} The populated <code>StudioComponentSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StudioComponentSummary();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('studioComponentId')) {
                obj['studioComponentId'] = ApiClient.convertToType(data['studioComponentId'], 'String');
            }
            if (data.hasOwnProperty('subtype')) {
                obj['subtype'] = ApiClient.convertToType(data['subtype'], StudioComponentSubtype);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], StudioComponentType);
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedBy')) {
                obj['updatedBy'] = ApiClient.convertToType(data['updatedBy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StudioComponentSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StudioComponentSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          String.validateJSON(data['createdBy']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `studioComponentId`
        if (data['studioComponentId']) { // data not null
          String.validateJSON(data['studioComponentId']);
        }
        // validate the optional field `subtype`
        if (data['subtype']) { // data not null
          StudioComponentSubtype.validateJSON(data['subtype']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          StudioComponentType.validateJSON(data['type']);
        }
        // validate the optional field `updatedAt`
        if (data['updatedAt']) { // data not null
          Date.validateJSON(data['updatedAt']);
        }
        // validate the optional field `updatedBy`
        if (data['updatedBy']) { // data not null
          String.validateJSON(data['updatedBy']);
        }

        return true;
    }


}



/**
 * @member {Date} createdAt
 */
StudioComponentSummary.prototype['createdAt'] = undefined;

/**
 * @member {String} createdBy
 */
StudioComponentSummary.prototype['createdBy'] = undefined;

/**
 * @member {String} description
 */
StudioComponentSummary.prototype['description'] = undefined;

/**
 * @member {String} name
 */
StudioComponentSummary.prototype['name'] = undefined;

/**
 * @member {String} studioComponentId
 */
StudioComponentSummary.prototype['studioComponentId'] = undefined;

/**
 * @member {module:model/StudioComponentSubtype} subtype
 */
StudioComponentSummary.prototype['subtype'] = undefined;

/**
 * @member {module:model/StudioComponentType} type
 */
StudioComponentSummary.prototype['type'] = undefined;

/**
 * @member {Date} updatedAt
 */
StudioComponentSummary.prototype['updatedAt'] = undefined;

/**
 * @member {String} updatedBy
 */
StudioComponentSummary.prototype['updatedBy'] = undefined;






export default StudioComponentSummary;

