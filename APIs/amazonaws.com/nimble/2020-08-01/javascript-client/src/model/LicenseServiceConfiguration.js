/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LicenseServiceConfiguration model module.
 * @module model/LicenseServiceConfiguration
 * @version 2020-08-01
 */
class LicenseServiceConfiguration {
    /**
     * Constructs a new <code>LicenseServiceConfiguration</code>.
     * The configuration for a license service that is associated with a studio resource.
     * @alias module:model/LicenseServiceConfiguration
     */
    constructor() { 
        
        LicenseServiceConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LicenseServiceConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LicenseServiceConfiguration} obj Optional instance to populate.
     * @return {module:model/LicenseServiceConfiguration} The populated <code>LicenseServiceConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LicenseServiceConfiguration();

            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LicenseServiceConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LicenseServiceConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `endpoint`
        if (data['endpoint']) { // data not null
          String.validateJSON(data['endpoint']);
        }

        return true;
    }


}



/**
 * @member {String} endpoint
 */
LicenseServiceConfiguration.prototype['endpoint'] = undefined;






export default LicenseServiceConfiguration;

