/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LaunchProfileValidationState from './LaunchProfileValidationState';
import LaunchProfileValidationStatusCode from './LaunchProfileValidationStatusCode';
import LaunchProfileValidationType from './LaunchProfileValidationType';

/**
 * The ValidationResult model module.
 * @module model/ValidationResult
 * @version 2020-08-01
 */
class ValidationResult {
    /**
     * Constructs a new <code>ValidationResult</code>.
     * The launch profile validation result.
     * @alias module:model/ValidationResult
     * @param state {module:model/LaunchProfileValidationState} 
     * @param statusCode {module:model/LaunchProfileValidationStatusCode} 
     * @param statusMessage {String} 
     * @param type {module:model/LaunchProfileValidationType} 
     */
    constructor(state, statusCode, statusMessage, type) { 
        
        ValidationResult.initialize(this, state, statusCode, statusMessage, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, state, statusCode, statusMessage, type) { 
        obj['state'] = state;
        obj['statusCode'] = statusCode;
        obj['statusMessage'] = statusMessage;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>ValidationResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationResult} obj Optional instance to populate.
     * @return {module:model/ValidationResult} The populated <code>ValidationResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationResult();

            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], LaunchProfileValidationState);
            }
            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], LaunchProfileValidationStatusCode);
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], LaunchProfileValidationType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidationResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidationResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ValidationResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          LaunchProfileValidationState.validateJSON(data['state']);
        }
        // validate the optional field `statusCode`
        if (data['statusCode']) { // data not null
          LaunchProfileValidationStatusCode.validateJSON(data['statusCode']);
        }
        // validate the optional field `statusMessage`
        if (data['statusMessage']) { // data not null
          String.validateJSON(data['statusMessage']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          LaunchProfileValidationType.validateJSON(data['type']);
        }

        return true;
    }


}

ValidationResult.RequiredProperties = ["state", "statusCode", "statusMessage", "type"];

/**
 * @member {module:model/LaunchProfileValidationState} state
 */
ValidationResult.prototype['state'] = undefined;

/**
 * @member {module:model/LaunchProfileValidationStatusCode} statusCode
 */
ValidationResult.prototype['statusCode'] = undefined;

/**
 * @member {String} statusMessage
 */
ValidationResult.prototype['statusMessage'] = undefined;

/**
 * @member {module:model/LaunchProfileValidationType} type
 */
ValidationResult.prototype['type'] = undefined;






export default ValidationResult;

