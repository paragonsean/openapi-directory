/**
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StreamingSessionState from './StreamingSessionState';
import StreamingSessionStatusCode from './StreamingSessionStatusCode';

/**
 * The StreamingSessionBackup model module.
 * @module model/StreamingSessionBackup
 * @version 2020-08-01
 */
class StreamingSessionBackup {
    /**
     * Constructs a new <code>StreamingSessionBackup</code>.
     * Information about the streaming session backup.
     * @alias module:model/StreamingSessionBackup
     */
    constructor() { 
        
        StreamingSessionBackup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StreamingSessionBackup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StreamingSessionBackup} obj Optional instance to populate.
     * @return {module:model/StreamingSessionBackup} The populated <code>StreamingSessionBackup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StreamingSessionBackup();

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('backupId')) {
                obj['backupId'] = ApiClient.convertToType(data['backupId'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('launchProfileId')) {
                obj['launchProfileId'] = ApiClient.convertToType(data['launchProfileId'], 'String');
            }
            if (data.hasOwnProperty('ownedBy')) {
                obj['ownedBy'] = ApiClient.convertToType(data['ownedBy'], 'String');
            }
            if (data.hasOwnProperty('sessionId')) {
                obj['sessionId'] = ApiClient.convertToType(data['sessionId'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = StreamingSessionState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], StreamingSessionStatusCode);
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StreamingSessionBackup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StreamingSessionBackup</code>.
     */
    static validateJSON(data) {
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `backupId`
        if (data['backupId']) { // data not null
          String.validateJSON(data['backupId']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `launchProfileId`
        if (data['launchProfileId']) { // data not null
          String.validateJSON(data['launchProfileId']);
        }
        // validate the optional field `ownedBy`
        if (data['ownedBy']) { // data not null
          String.validateJSON(data['ownedBy']);
        }
        // validate the optional field `sessionId`
        if (data['sessionId']) { // data not null
          String.validateJSON(data['sessionId']);
        }
        // validate the optional field `statusCode`
        if (data['statusCode']) { // data not null
          StreamingSessionStatusCode.validateJSON(data['statusCode']);
        }
        // validate the optional field `statusMessage`
        if (data['statusMessage']) { // data not null
          String.validateJSON(data['statusMessage']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }

        return true;
    }


}



/**
 * @member {String} arn
 */
StreamingSessionBackup.prototype['arn'] = undefined;

/**
 * @member {String} backupId
 */
StreamingSessionBackup.prototype['backupId'] = undefined;

/**
 * @member {Date} createdAt
 */
StreamingSessionBackup.prototype['createdAt'] = undefined;

/**
 * @member {String} launchProfileId
 */
StreamingSessionBackup.prototype['launchProfileId'] = undefined;

/**
 * @member {String} ownedBy
 */
StreamingSessionBackup.prototype['ownedBy'] = undefined;

/**
 * @member {String} sessionId
 */
StreamingSessionBackup.prototype['sessionId'] = undefined;

/**
 * @member {module:model/StreamingSessionState} state
 */
StreamingSessionBackup.prototype['state'] = undefined;

/**
 * @member {module:model/StreamingSessionStatusCode} statusCode
 */
StreamingSessionBackup.prototype['statusCode'] = undefined;

/**
 * @member {String} statusMessage
 */
StreamingSessionBackup.prototype['statusMessage'] = undefined;

/**
 * @member {Object} tags
 */
StreamingSessionBackup.prototype['tags'] = undefined;






export default StreamingSessionBackup;

