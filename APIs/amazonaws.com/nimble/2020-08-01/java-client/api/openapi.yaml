openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Welcome to the Amazon Nimble Studio API reference. This API reference\
    \ provides methods, schema, resources, parameters, and more to help you get the\
    \ most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers\
    \ visual effects, animation, and interactive content teams to create content securely\
    \ within a scalable, private cloud service.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AmazonNimbleStudio
  version: 2020-08-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: nimble
  x-aws-signingName: nimble
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/nimble-2020-08-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/nimble/
servers:
- description: The AmazonNimbleStudio multi-region endpoint
  url: "http://nimble.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AmazonNimbleStudio multi-region endpoint
  url: "https://nimble.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AmazonNimbleStudio endpoint for China (Beijing) and China (Ningxia)
  url: "http://nimble.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AmazonNimbleStudio endpoint for China (Beijing) and China (Ningxia)
  url: "https://nimble.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /2020-08-01/studios/{studioId}/eula-acceptances:
    get:
      description: List EULA acceptances.
      operationId: ListEulaAcceptances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The list of EULA IDs that have been previously accepted.
        explode: true
        in: query
        name: eulaIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEulaAcceptancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    post:
      description: Accept EULAs.
      operationId: AcceptEulas
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The studio ID.
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptEulas_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptEulasResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/launch-profiles:
    get:
      description: List all the launch profiles a studio.
      operationId: ListLaunchProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The max number of results to return in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: 'The principal ID. This currently supports a IAM Identity Center
          UserId. '
        explode: true
        in: query
        name: principalId
        required: false
        schema:
          type: string
        style: form
      - description: Filter this request to launch profiles in any of the given states.
        explode: true
        in: query
        name: states
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LaunchProfileState'
          type: array
        style: form
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLaunchProfilesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    post:
      description: Create a launch profile.
      operationId: CreateLaunchProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLaunchProfile_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLaunchProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-images:
    get:
      description: "<p>List the streaming image resources available to this studio.</p>\
        \ <p>This list will contain both images provided by Amazon Web Services, as\
        \ well as streaming images that you have created in your studio.</p>"
      operationId: ListStreamingImages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Filter this request to streaming images with the given owner
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamingImagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    post:
      description: Creates a streaming image resource in a studio.
      operationId: CreateStreamingImage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStreamingImage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamingImageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-sessions:
    get:
      description: Lists the streaming sessions in a studio.
      operationId: ListStreamingSessions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Filters the request to streaming sessions created by the given
          user.
        explode: true
        in: query
        name: createdBy
        required: false
        schema:
          type: string
        style: form
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Filters the request to streaming session owned by the given user
        explode: true
        in: query
        name: ownedBy
        required: false
        schema:
          type: string
        style: form
      - description: Filters the request to only the provided session IDs.
        explode: true
        in: query
        name: sessionIds
        required: false
        schema:
          type: string
        style: form
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamingSessionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates a streaming session in a studio.</p> <p>After invoking\
        \ this operation, you must poll GetStreamingSession until the streaming session\
        \ is in the <code>READY</code> state.</p>"
      operationId: CreateStreamingSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStreamingSession_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamingSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams:
    post:
      description: "<p>Creates a streaming session stream for a streaming session.</p>\
        \ <p>After invoking this API, invoke GetStreamingSessionStream with the returned\
        \ streamId to poll the resource until it is in the <code>READY</code> state.</p>"
      operationId: CreateStreamingSessionStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The streaming session ID.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStreamingSessionStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamingSessionStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios:
    get:
      description: List studios in your Amazon Web Services accounts in the requested
        Amazon Web Services Region.
      operationId: ListStudios
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudiosResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    post:
      description: "<p>Create a new studio.</p> <p>When creating a studio, two IAM\
        \ roles must be provided: the admin role and the user role. These roles are\
        \ assumed by your users when they log in to the Nimble Studio portal.</p>\
        \ <p>The user role must have the <code>AmazonNimbleStudio-StudioUser</code>\
        \ managed policy attached for the portal to function properly.</p> <p>The\
        \ admin role must have the <code>AmazonNimbleStudio-StudioAdmin</code> managed\
        \ policy attached for the portal to function properly.</p> <p>You may optionally\
        \ specify a KMS key in the <code>StudioEncryptionConfiguration</code>.</p>\
        \ <p>In Nimble Studio, resource names, descriptions, initialization scripts,\
        \ and other data you provide are always encrypted at rest using an KMS key.\
        \ By default, this key is owned by Amazon Web Services and managed on your\
        \ behalf. You may provide your own KMS key when calling <code>CreateStudio</code>\
        \ to encrypt this data using a key you own and manage.</p> <p>When providing\
        \ an KMS key during studio creation, Nimble Studio creates KMS grants in your\
        \ account to provide your studio user and admin roles access to these KMS\
        \ keys.</p> <p>If you delete this grant, the studio will no longer be accessible\
        \ to your portal users.</p> <p>If you delete the studio KMS key, your studio\
        \ will no longer be accessible.</p>"
      operationId: CreateStudio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudio_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudioResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/studio-components:
    get:
      description: Lists the <code>StudioComponents</code> in a studio.
      operationId: ListStudioComponents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The max number of results to return in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: 'Filters the request to studio components that are in one of
          the given states. '
        explode: true
        in: query
        name: states
        required: false
        schema:
          items:
            $ref: '#/components/schemas/StudioComponentState'
          type: array
        style: form
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      - description: Filters the request to studio components that are of one of the
          given types.
        explode: true
        in: query
        name: types
        required: false
        schema:
          items:
            $ref: '#/components/schemas/StudioComponentType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudioComponentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    post:
      description: Creates a studio component resource.
      operationId: CreateStudioComponent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudioComponent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudioComponentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}:
    delete:
      description: Permanently delete a launch profile.
      operationId: DeleteLaunchProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLaunchProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    get:
      description: Get a launch profile.
      operationId: GetLaunchProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    patch:
      description: Update a launch profile.
      operationId: UpdateLaunchProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaunchProfile_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLaunchProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership/{principalId}:
    delete:
      description: Delete a user from launch profile membership.
      operationId: DeleteLaunchProfileMember
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The principal ID. This currently supports a IAM Identity Center
          UserId. '
        explode: false
        in: path
        name: principalId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLaunchProfileMemberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    get:
      description: Get a user persona in launch profile membership.
      operationId: GetLaunchProfileMember
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The principal ID. This currently supports a IAM Identity Center
          UserId. '
        explode: false
        in: path
        name: principalId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchProfileMemberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    patch:
      description: Update a user persona in launch profile membership.
      operationId: UpdateLaunchProfileMember
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The principal ID. This currently supports a IAM Identity Center
          UserId. '
        explode: false
        in: path
        name: principalId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaunchProfileMember_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLaunchProfileMemberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-images/{streamingImageId}:
    delete:
      description: Delete streaming image.
      operationId: DeleteStreamingImage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The streaming image ID.
        explode: false
        in: path
        name: streamingImageId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStreamingImageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    get:
      description: Get streaming image.
      operationId: GetStreamingImage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The streaming image ID.
        explode: false
        in: path
        name: streamingImageId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamingImageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    patch:
      description: Update streaming image.
      operationId: UpdateStreamingImage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The streaming image ID.
        explode: false
        in: path
        name: streamingImageId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStreamingImage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStreamingImageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}:
    delete:
      description: "<p>Deletes streaming session resource.</p> <p>After invoking this\
        \ operation, use GetStreamingSession to poll the resource until it transitions\
        \ to a <code>DELETED</code> state.</p> <p>A streaming session will count against\
        \ your streaming session quota until it is marked <code>DELETED</code>.</p>"
      operationId: DeleteStreamingSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The streaming session ID.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStreamingSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    get:
      description: <p>Gets StreamingSession resource.</p> <p>Invoke this operation
        to poll for a streaming session state while creating or deleting a session.</p>
      operationId: GetStreamingSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The streaming session ID.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamingSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}:
    delete:
      description: Delete a studio resource.
      operationId: DeleteStudio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStudioResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    get:
      description: Get a studio resource.
      operationId: GetStudio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudioResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    patch:
      description: "<p>Update a Studio resource.</p> <p>Currently, this operation\
        \ only supports updating the displayName of your studio.</p>"
      operationId: UpdateStudio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudio_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStudioResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/studio-components/{studioComponentId}:
    delete:
      description: Deletes a studio component resource.
      operationId: DeleteStudioComponent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The studio component ID.
        explode: false
        in: path
        name: studioComponentId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStudioComponentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    get:
      description: Gets a studio component resource.
      operationId: GetStudioComponent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The studio component ID.
        explode: false
        in: path
        name: studioComponentId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudioComponentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    patch:
      description: Updates a studio component resource.
      operationId: UpdateStudioComponent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The studio component ID.
        explode: false
        in: path
        name: studioComponentId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudioComponent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStudioComponentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/membership/{principalId}:
    delete:
      description: Delete a user from studio membership.
      operationId: DeleteStudioMember
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: 'The principal ID. This currently supports a IAM Identity Center
          UserId. '
        explode: false
        in: path
        name: principalId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStudioMemberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    get:
      description: Get a user's membership in a studio.
      operationId: GetStudioMember
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The principal ID. This currently supports a IAM Identity Center
          UserId. '
        explode: false
        in: path
        name: principalId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudioMemberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
  /2020-08-01/eulas/{eulaId}:
    get:
      description: Get EULA.
      operationId: GetEula
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The EULA ID.
        explode: false
        in: path
        name: eulaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEulaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/details:
    get:
      description: "Launch profile details include the launch profile resource and\
        \ summary information of resources that are used by, or available to, the\
        \ launch profile. This includes the name and description of all studio components\
        \ used by the launch profiles, and the name and description of streaming images\
        \ that can be used with this launch profile."
      operationId: GetLaunchProfileDetails
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchProfileDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/init#launchProfileProtocolVersions&launchPurpose&platform:
    get:
      description: Get a launch profile initialization.
      operationId: GetLaunchProfileInitialization
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: The launch profile protocol versions supported by the client.
        explode: true
        in: query
        name: launchProfileProtocolVersions
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: The launch purpose.
        explode: true
        in: query
        name: launchPurpose
        required: true
        schema:
          type: string
        style: form
      - description: "The platform where this Launch Profile will be used, either\
          \ Windows or Linux."
        explode: true
        in: query
        name: platform
        required: true
        schema:
          type: string
        style: form
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchProfileInitializationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-session-backups/{backupId}:
    get:
      description: <p>Gets <code>StreamingSessionBackup</code> resource.</p> <p>Invoke
        this operation to poll for a streaming session backup while stopping a streaming
        session.</p>
      operationId: GetStreamingSessionBackup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the backup.
        explode: false
        in: path
        name: backupId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamingSessionBackupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams/{streamId}:
    get:
      description: "<p>Gets a StreamingSessionStream for a streaming session.</p>\
        \ <p>Invoke this operation to poll the resource after invoking <code>CreateStreamingSessionStream</code>.</p>\
        \ <p>After the <code>StreamingSessionStream</code> changes to the <code>READY</code>\
        \ state, the url property will contain a stream to be used with the DCV streaming\
        \ client.</p>"
      operationId: GetStreamingSessionStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The streaming session ID.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The streaming session stream ID.
        explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamingSessionStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
  /2020-08-01/eulas:
    get:
      description: List EULAs.
      operationId: ListEulas
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The list of EULA IDs that should be returned
        explode: true
        in: query
        name: eulaIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEulasResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership:
    get:
      description: Get all users in a given launch profile membership.
      operationId: ListLaunchProfileMembers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: The max number of results to return in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLaunchProfileMembersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    post:
      description: Add/update users with given persona to launch profile membership.
      operationId: PutLaunchProfileMembers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The ID of the launch profile used to control access from the
          streaming session.
        explode: false
        in: path
        name: launchProfileId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLaunchProfileMembers_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLaunchProfileMembersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-session-backups:
    get:
      description: Lists the backups of a streaming session in a studio.
      operationId: ListStreamingSessionBackups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The user ID of the user that owns the streaming session.
        explode: true
        in: query
        name: ownedBy
        required: false
        schema:
          type: string
        style: form
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamingSessionBackupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/membership:
    get:
      description: <p>Get all users in a given studio membership.</p> <note> <p> <code>ListStudioMembers</code>
        only returns admin members.</p> </note>
      operationId: ListStudioMembers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The max number of results to return in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "The token for the next set of results, or null if there are\
          \ no more results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudioMembersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    post:
      description: Add/update users with given persona to studio membership.
      operationId: PutStudioMembers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutStudioMembers_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutStudioMembersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/tags/{resourceArn}:
    get:
      description: "<p>Gets the tags for a resource, given its Amazon Resource Names\
        \ (ARN).</p> <p>This operation supports ARNs for all resource types in Nimble\
        \ Studio that support tags, including studio, studio component, launch profile,\
        \ streaming image, and streaming session. All resources that can be tagged\
        \ will contain an ARN property, so you do not have to create this ARN yourself.</p>"
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource for which you
          want to list tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
    post:
      description: "Creates tags for a resource, given its ARN."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The Amazon Resource Name (ARN) of the resource you want to add
          tags to. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/start:
    post:
      description: Transitions sessions from the <code>STOPPED</code> state into the
        <code>READY</code> state. The <code>START_IN_PROGRESS</code> state is the
        intermediate state between the <code>STOPPED</code> and <code>READY</code>
        states.
      operationId: StartStreamingSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The streaming session ID for the <code>StartStreamingSessionRequest</code>.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The studio ID for the StartStreamingSessionRequest.
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartStreamingSession_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartStreamingSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/sso-configuration:
    put:
      description: "<p>Repairs the IAM Identity Center configuration for a given studio.</p>\
        \ <p>If the studio has a valid IAM Identity Center configuration currently\
        \ associated with it, this operation will fail with a validation error.</p>\
        \ <p>If the studio does not have a valid IAM Identity Center configuration\
        \ currently associated with it, then a new IAM Identity Center application\
        \ is created for the studio and the studio is changed to the <code>READY</code>\
        \ state.</p> <p>After the IAM Identity Center application is repaired, you\
        \ must use the Amazon Nimble Studio console to add administrators and users\
        \ to your studio.</p>"
      operationId: StartStudioSSOConfigurationRepair
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: 'The studio ID. '
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartStudioSSOConfigurationRepairResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
  /2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/stop:
    post:
      description: Transitions sessions from the <code>READY</code> state into the
        <code>STOPPED</code> state. The <code>STOP_IN_PROGRESS</code> state is the
        intermediate state between the <code>READY</code> and <code>STOPPED</code>
        states.
      operationId: StopStreamingSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Unique, case-sensitive identifier that you provide to ensure\
          \ the idempotency of the request. If you donâ€™t specify a client token, the\
          \ Amazon Web Services SDK automatically generates a client token and uses\
          \ it for the request to ensure idempotency."
        explode: false
        in: header
        name: X-Amz-Client-Token
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The streaming session ID for the <code>StopStreamingSessionRequest</code>.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The studioId for the StopStreamingSessionRequest.
        explode: false
        in: path
        name: studioId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopStreamingSession_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopStreamingSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /2020-08-01/tags/{resourceArn}#tagKeys:
    delete:
      description: Deletes the tags for a resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'Identifies the Amazon Resource Name(ARN) key from which you
          are removing tags. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: "One or more tag keys. Specify only the tag keys, not the tag\
          \ values."
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AcceptEulasResponse:
      example:
        eulaAcceptances: ""
      properties:
        eulaAcceptances:
          allOf:
          - $ref: '#/components/schemas/EulaAcceptanceList'
          - description: A collection of EULA acceptances.
      type: object
    String:
      type: string
    ResourceNotFoundException: {}
    ConflictException: {}
    ThrottlingException: {}
    ValidationException: {}
    AccessDeniedException: {}
    InternalServerErrorException: {}
    ServiceQuotaExceededException: {}
    CreateLaunchProfileResponse:
      example:
        launchProfile:
          studioComponentIds: ""
          updatedBy: ""
          description: ""
          launchProfileId: ""
          streamConfiguration:
            automaticTerminationMode: ""
            volumeConfiguration:
              size: ""
              iops: ""
              throughput: ""
            clipboardMode: ""
            ec2InstanceTypes: ""
            sessionStorage:
              mode: ""
              root:
                linux: ""
                windows: ""
            streamingImageIds: ""
            maxSessionLengthInMinutes: ""
            sessionBackup:
              mode: ""
              maxBackupsToRetain: ""
            maxStoppedSessionLengthInMinutes: ""
            sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          createdAt: ""
          ec2SubnetIds: ""
          validationResults: ""
          createdBy: ""
          launchProfileProtocolVersions: ""
          name: ""
          state: ""
          arn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        launchProfile:
          $ref: '#/components/schemas/CreateLaunchProfileResponse_launchProfile'
      type: object
    EC2SubnetId:
      type: string
    LaunchProfileProtocolVersion:
      description: The version number of the protocol that is used by the launch profile.
        The only valid version is "2021-03-31".
      maxLength: 10
      minLength: 0
      pattern: ^2021\-03\-31$
      type: string
    AutomaticTerminationMode:
      enum:
      - DEACTIVATED
      - ACTIVATED
      type: string
    StreamingClipboardMode:
      enum:
      - ENABLED
      - DISABLED
      type: string
    StreamingInstanceTypeList:
      description: The EC2 instance types that users can select from when launching
        a streaming session with this launch profile.
      items:
        $ref: '#/components/schemas/StreamingInstanceType'
      maxItems: 30
      minItems: 1
      type: array
    StreamConfigurationMaxSessionLengthInMinutes:
      maximum: 43200
      minimum: 1
      type: integer
    StreamConfigurationMaxStoppedSessionLengthInMinutes:
      maximum: 5760
      minimum: 0
      type: integer
    StreamConfigurationSessionBackup:
      description: Configures how streaming sessions are backed up when launched from
        this launch profile.
      properties:
        maxBackupsToRetain:
          allOf:
          - $ref: '#/components/schemas/StreamConfigurationMaxBackupsToRetain'
          - description: The maximum number of backups that each streaming session
              created from this launch profile can have.
        mode:
          allOf:
          - $ref: '#/components/schemas/SessionBackupMode'
          - description: "<p>Specifies how artists sessions are backed up.</p> <p>Configures\
              \ backups for streaming sessions launched with this launch profile.\
              \ The default value is <code>DEACTIVATED</code>, which means that backups\
              \ are deactivated. To allow backups, set this value to <code>AUTOMATIC</code>.</p>"
      type: object
    SessionPersistenceMode:
      enum:
      - DEACTIVATED
      - ACTIVATED
      type: string
    StreamConfigurationSessionStorage:
      description: The configuration for a streaming sessionâ€™s upload storage.
      properties:
        mode:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionStorageModeList'
          - description: Allows artists to upload files to their workstations. The
              only valid option is <code>UPLOAD</code>.
        root:
          $ref: '#/components/schemas/StreamConfigurationSessionStorage_root'
      required:
      - mode
      type: object
    StreamingImageIdList:
      description: A list of streaming image IDs that users can select from when launching
        a streaming session with this launch profile.
      items:
        $ref: '#/components/schemas/StreamingImageId'
      maxItems: 20
      minItems: 1
      type: array
    VolumeConfiguration:
      description: <p>Custom volume configuration for the root volumes that are attached
        to streaming sessions.</p> <p>This parameter is only allowed when <code>sessionPersistenceMode</code>
        is <code>ACTIVATED</code>.</p>
      properties:
        iops:
          allOf:
          - $ref: '#/components/schemas/VolumeIops'
          - description: The number of I/O operations per second for the root volume
              that is attached to streaming session.
        size:
          allOf:
          - $ref: '#/components/schemas/VolumeSizeInGiB'
          - description: The size of the root volume that is attached to the streaming
              session. The root volume size is measured in GiBs.
        throughput:
          allOf:
          - $ref: '#/components/schemas/VolumeThroughputInMiBs'
          - description: The throughput to provision for the root volume that is attached
              to the streaming session. The throughput is measured in MiB/s.
      type: object
    CreateStreamingImageResponse:
      example:
        streamingImage:
          owner: ""
          eulaIds: ""
          description: ""
          platform: ""
          statusMessage: ""
          tags: ""
          streamingImageId: ""
          name: ""
          encryptionConfiguration:
            keyArn: ""
            keyType: ""
          ec2ImageId: ""
          state: ""
          arn: ""
          statusCode: ""
      properties:
        streamingImage:
          $ref: '#/components/schemas/CreateStreamingImageResponse_streamingImage'
      type: object
    CreateStreamingSessionResponse:
      example:
        session:
          stopAt: ""
          maxBackupsToRetain: ""
          startedAt: ""
          volumeRetentionMode: ""
          terminateAt: ""
          createdAt: ""
          backupMode: ""
          stoppedBy: ""
          state: ""
          arn: ""
          updatedAt: ""
          volumeConfiguration:
            size: ""
            iops: ""
            throughput: ""
          ec2InstanceType: ""
          updatedBy: ""
          startedFromBackupId: ""
          startedBy: ""
          sessionId: ""
          launchProfileId: ""
          sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          automaticTerminationMode: ""
          stoppedAt: ""
          streamingImageId: ""
          createdBy: ""
          ownedBy: ""
          statusCode: ""
      properties:
        session:
          $ref: '#/components/schemas/CreateStreamingSessionResponse_session'
      type: object
    CreateStreamingSessionStreamResponse:
      example:
        stream:
          createdAt: ""
          streamId: ""
          createdBy: ""
          state: ""
          ownedBy: ""
          expiresAt: ""
          url: ""
          statusCode: ""
      properties:
        stream:
          $ref: '#/components/schemas/CreateStreamingSessionStreamResponse_stream'
      type: object
    CreateStudioResponse:
      example:
        studio:
          studioEncryptionConfiguration:
            keyArn: ""
            keyType: ""
          studioId: ""
          displayName: ""
          studioUrl: ""
          studioName: ""
          statusMessage: ""
          tags: ""
          userRoleArn: ""
          ssoClientId: ""
          createdAt: ""
          homeRegion: ""
          state: ""
          arn: ""
          adminRoleArn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        studio:
          $ref: '#/components/schemas/CreateStudioResponse_studio'
      type: object
    StudioEncryptionConfigurationKeyArn:
      description: The Amazon Resource Name (ARN) for a KMS key that is used to encrypt
        studio data.
      minLength: 4
      pattern: ^arn:.*
      type: string
    StudioEncryptionConfigurationKeyType:
      description: The type of KMS key that is used to encrypt studio data.
      enum:
      - AWS_OWNED_KEY
      - CUSTOMER_MANAGED_KEY
      type: string
    CreateStudioComponentResponse:
      example:
        studioComponent:
          updatedBy: ""
          configuration:
            licenseServiceConfiguration:
              endpoint: ""
            activeDirectoryConfiguration:
              computerAttributes: ""
              directoryId: ""
              organizationalUnitDistinguishedName: ""
            computeFarmConfiguration:
              activeDirectoryUser: ""
              endpoint: ""
            sharedFileSystemConfiguration:
              windowsMountDrive: ""
              endpoint: ""
              fileSystemId: ""
              linuxMountPoint: ""
              shareName: ""
          description: ""
          ec2SecurityGroupIds: ""
          secureInitializationRoleArn: ""
          type: ""
          statusMessage: ""
          tags: ""
          initializationScripts: ""
          scriptParameters: ""
          createdAt: ""
          runtimeRoleArn: ""
          createdBy: ""
          subtype: ""
          name: ""
          studioComponentId: ""
          state: ""
          arn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        studioComponent:
          $ref: '#/components/schemas/CreateStudioComponentResponse_studioComponent'
      type: object
    ActiveDirectoryConfiguration:
      description: The configuration for a Directory Service for Microsoft Active
        Directory studio resource.
      properties:
        computerAttributes:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryComputerAttributeList'
          - description: A collection of custom attributes for an Active Directory
              computer.
        directoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          - description: The directory ID of the Directory Service for Microsoft Active
              Directory to access using this studio component.
        organizationalUnitDistinguishedName:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryOrganizationalUnitDistinguishedName'
          - description: The distinguished name (DN) and organizational unit (OU)
              of an Active Directory computer.
      type: object
    ComputeFarmConfiguration:
      description: The configuration for a render farm that is associated with a studio
        resource.
      properties:
        activeDirectoryUser:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of an Active Directory user that is used on ComputeFarm
              worker instances.
        endpoint:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The endpoint of the ComputeFarm that is accessed by the studio
              component resource.
      type: object
    LicenseServiceConfiguration:
      description: The configuration for a license service that is associated with
        a studio resource.
      properties:
        endpoint:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The endpoint of the license service that is accessed by the
              studio component resource.
      type: object
    SharedFileSystemConfiguration:
      description: The configuration for a shared file storage system that is associated
        with a studio resource.
      properties:
        endpoint:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The endpoint of the shared file system that is accessed by
              the studio component resource.
        fileSystemId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique identifier for a file system.
        linuxMountPoint:
          allOf:
          - $ref: '#/components/schemas/LinuxMountPoint'
          - description: The mount location for a shared file system on a Linux virtual
              workstation.
        shareName:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The name of the file share.
        windowsMountDrive:
          allOf:
          - $ref: '#/components/schemas/WindowsMountDrive'
          - description: The mount location for a shared file system on a Windows
              virtual workstation.
      type: object
    SecurityGroupId:
      type: string
    StudioComponentInitializationScript:
      description: Initialization scripts for studio components.
      properties:
        launchProfileProtocolVersion:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileProtocolVersion'
          - description: The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
        platform:
          allOf:
          - $ref: '#/components/schemas/LaunchProfilePlatform'
          - description: "The platform of the initialization script, either Windows\
              \ or Linux."
        runContext:
          allOf:
          - $ref: '#/components/schemas/StudioComponentInitializationScriptRunContext'
          - description: The method to use when running the initialization script.
        script:
          allOf:
          - $ref: '#/components/schemas/StudioComponentInitializationScriptContent'
          - description: The initialization script.
      type: object
    ScriptParameterKeyValue:
      description: "A parameter for a studio component script, in the form of a key-value\
        \ pair."
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/ScriptParameterKey'
          - description: A script parameter key.
        value:
          allOf:
          - $ref: '#/components/schemas/ScriptParameterValue'
          - description: A script parameter value.
      type: object
    DeleteLaunchProfileResponse:
      example:
        launchProfile:
          studioComponentIds: ""
          updatedBy: ""
          description: ""
          launchProfileId: ""
          streamConfiguration:
            automaticTerminationMode: ""
            volumeConfiguration:
              size: ""
              iops: ""
              throughput: ""
            clipboardMode: ""
            ec2InstanceTypes: ""
            sessionStorage:
              mode: ""
              root:
                linux: ""
                windows: ""
            streamingImageIds: ""
            maxSessionLengthInMinutes: ""
            sessionBackup:
              mode: ""
              maxBackupsToRetain: ""
            maxStoppedSessionLengthInMinutes: ""
            sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          createdAt: ""
          ec2SubnetIds: ""
          validationResults: ""
          createdBy: ""
          launchProfileProtocolVersions: ""
          name: ""
          state: ""
          arn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        launchProfile:
          $ref: '#/components/schemas/CreateLaunchProfileResponse_launchProfile'
      type: object
    DeleteLaunchProfileMemberResponse:
      properties: {}
      type: object
    DeleteStreamingImageResponse:
      example:
        streamingImage:
          owner: ""
          eulaIds: ""
          description: ""
          platform: ""
          statusMessage: ""
          tags: ""
          streamingImageId: ""
          name: ""
          encryptionConfiguration:
            keyArn: ""
            keyType: ""
          ec2ImageId: ""
          state: ""
          arn: ""
          statusCode: ""
      properties:
        streamingImage:
          $ref: '#/components/schemas/CreateStreamingImageResponse_streamingImage'
      type: object
    DeleteStreamingSessionResponse:
      example:
        session:
          stopAt: ""
          maxBackupsToRetain: ""
          startedAt: ""
          volumeRetentionMode: ""
          terminateAt: ""
          createdAt: ""
          backupMode: ""
          stoppedBy: ""
          state: ""
          arn: ""
          updatedAt: ""
          volumeConfiguration:
            size: ""
            iops: ""
            throughput: ""
          ec2InstanceType: ""
          updatedBy: ""
          startedFromBackupId: ""
          startedBy: ""
          sessionId: ""
          launchProfileId: ""
          sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          automaticTerminationMode: ""
          stoppedAt: ""
          streamingImageId: ""
          createdBy: ""
          ownedBy: ""
          statusCode: ""
      properties:
        session:
          $ref: '#/components/schemas/CreateStreamingSessionResponse_session'
      type: object
    DeleteStudioResponse:
      example:
        studio:
          studioEncryptionConfiguration:
            keyArn: ""
            keyType: ""
          studioId: ""
          displayName: ""
          studioUrl: ""
          studioName: ""
          statusMessage: ""
          tags: ""
          userRoleArn: ""
          ssoClientId: ""
          createdAt: ""
          homeRegion: ""
          state: ""
          arn: ""
          adminRoleArn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        studio:
          $ref: '#/components/schemas/CreateStudioResponse_studio'
      required:
      - studio
      type: object
    DeleteStudioComponentResponse:
      example:
        studioComponent:
          updatedBy: ""
          configuration:
            licenseServiceConfiguration:
              endpoint: ""
            activeDirectoryConfiguration:
              computerAttributes: ""
              directoryId: ""
              organizationalUnitDistinguishedName: ""
            computeFarmConfiguration:
              activeDirectoryUser: ""
              endpoint: ""
            sharedFileSystemConfiguration:
              windowsMountDrive: ""
              endpoint: ""
              fileSystemId: ""
              linuxMountPoint: ""
              shareName: ""
          description: ""
          ec2SecurityGroupIds: ""
          secureInitializationRoleArn: ""
          type: ""
          statusMessage: ""
          tags: ""
          initializationScripts: ""
          scriptParameters: ""
          createdAt: ""
          runtimeRoleArn: ""
          createdBy: ""
          subtype: ""
          name: ""
          studioComponentId: ""
          state: ""
          arn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        studioComponent:
          $ref: '#/components/schemas/CreateStudioComponentResponse_studioComponent'
      type: object
    DeleteStudioMemberResponse:
      properties: {}
      type: object
    GetEulaResponse:
      example:
        eula:
          createdAt: ""
          name: ""
          eulaId: ""
          content: ""
          updatedAt: ""
      properties:
        eula:
          $ref: '#/components/schemas/GetEulaResponse_eula'
      type: object
    GetLaunchProfileResponse:
      example:
        launchProfile:
          studioComponentIds: ""
          updatedBy: ""
          description: ""
          launchProfileId: ""
          streamConfiguration:
            automaticTerminationMode: ""
            volumeConfiguration:
              size: ""
              iops: ""
              throughput: ""
            clipboardMode: ""
            ec2InstanceTypes: ""
            sessionStorage:
              mode: ""
              root:
                linux: ""
                windows: ""
            streamingImageIds: ""
            maxSessionLengthInMinutes: ""
            sessionBackup:
              mode: ""
              maxBackupsToRetain: ""
            maxStoppedSessionLengthInMinutes: ""
            sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          createdAt: ""
          ec2SubnetIds: ""
          validationResults: ""
          createdBy: ""
          launchProfileProtocolVersions: ""
          name: ""
          state: ""
          arn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        launchProfile:
          $ref: '#/components/schemas/CreateLaunchProfileResponse_launchProfile'
      type: object
    GetLaunchProfileDetailsResponse:
      example:
        launchProfile:
          studioComponentIds: ""
          updatedBy: ""
          description: ""
          launchProfileId: ""
          streamConfiguration:
            automaticTerminationMode: ""
            volumeConfiguration:
              size: ""
              iops: ""
              throughput: ""
            clipboardMode: ""
            ec2InstanceTypes: ""
            sessionStorage:
              mode: ""
              root:
                linux: ""
                windows: ""
            streamingImageIds: ""
            maxSessionLengthInMinutes: ""
            sessionBackup:
              mode: ""
              maxBackupsToRetain: ""
            maxStoppedSessionLengthInMinutes: ""
            sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          createdAt: ""
          ec2SubnetIds: ""
          validationResults: ""
          createdBy: ""
          launchProfileProtocolVersions: ""
          name: ""
          state: ""
          arn: ""
          statusCode: ""
          updatedAt: ""
        streamingImages: ""
        studioComponentSummaries: ""
      properties:
        launchProfile:
          $ref: '#/components/schemas/CreateLaunchProfileResponse_launchProfile'
        streamingImages:
          allOf:
          - $ref: '#/components/schemas/StreamingImageList'
          - description: A collection of streaming images.
        studioComponentSummaries:
          allOf:
          - $ref: '#/components/schemas/StudioComponentSummaryList'
          - description: A collection of studio component summaries.
      type: object
    GetLaunchProfileInitializationResponse:
      example:
        launchProfileInitialization:
          launchProfileProtocolVersion: ""
          userInitializationScripts: ""
          name: ""
          ec2SecurityGroupIds: ""
          launchPurpose: ""
          launchProfileId: ""
          systemInitializationScripts: ""
          activeDirectory:
            dnsIpAddresses: ""
            computerAttributes: ""
            studioComponentId: ""
            directoryId: ""
            organizationalUnitDistinguishedName: ""
            directoryName: ""
            studioComponentName: ""
          platform: ""
      properties:
        launchProfileInitialization:
          $ref: '#/components/schemas/GetLaunchProfileInitializationResponse_launchProfileInitialization'
      type: object
    GetLaunchProfileMemberResponse:
      example:
        member:
          persona: ""
          principalId: ""
          identityStoreId: ""
          sid: ""
      properties:
        member:
          $ref: '#/components/schemas/GetLaunchProfileMemberResponse_member'
      type: object
    GetStreamingImageResponse:
      example:
        streamingImage:
          owner: ""
          eulaIds: ""
          description: ""
          platform: ""
          statusMessage: ""
          tags: ""
          streamingImageId: ""
          name: ""
          encryptionConfiguration:
            keyArn: ""
            keyType: ""
          ec2ImageId: ""
          state: ""
          arn: ""
          statusCode: ""
      properties:
        streamingImage:
          $ref: '#/components/schemas/CreateStreamingImageResponse_streamingImage'
      type: object
    GetStreamingSessionResponse:
      example:
        session:
          stopAt: ""
          maxBackupsToRetain: ""
          startedAt: ""
          volumeRetentionMode: ""
          terminateAt: ""
          createdAt: ""
          backupMode: ""
          stoppedBy: ""
          state: ""
          arn: ""
          updatedAt: ""
          volumeConfiguration:
            size: ""
            iops: ""
            throughput: ""
          ec2InstanceType: ""
          updatedBy: ""
          startedFromBackupId: ""
          startedBy: ""
          sessionId: ""
          launchProfileId: ""
          sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          automaticTerminationMode: ""
          stoppedAt: ""
          streamingImageId: ""
          createdBy: ""
          ownedBy: ""
          statusCode: ""
      properties:
        session:
          $ref: '#/components/schemas/CreateStreamingSessionResponse_session'
      type: object
    GetStreamingSessionBackupResponse:
      example:
        streamingSessionBackup:
          createdAt: ""
          backupId: ""
          sessionId: ""
          state: CREATE_IN_PROGRESS
          arn: ""
          launchProfileId: ""
          ownedBy: ""
          statusMessage: ""
          statusCode: ""
          tags: ""
      properties:
        streamingSessionBackup:
          $ref: '#/components/schemas/GetStreamingSessionBackupResponse_streamingSessionBackup'
      type: object
    GetStreamingSessionStreamResponse:
      example:
        stream:
          createdAt: ""
          streamId: ""
          createdBy: ""
          state: ""
          ownedBy: ""
          expiresAt: ""
          url: ""
          statusCode: ""
      properties:
        stream:
          $ref: '#/components/schemas/CreateStreamingSessionStreamResponse_stream'
      type: object
    GetStudioResponse:
      example:
        studio:
          studioEncryptionConfiguration:
            keyArn: ""
            keyType: ""
          studioId: ""
          displayName: ""
          studioUrl: ""
          studioName: ""
          statusMessage: ""
          tags: ""
          userRoleArn: ""
          ssoClientId: ""
          createdAt: ""
          homeRegion: ""
          state: ""
          arn: ""
          adminRoleArn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        studio:
          $ref: '#/components/schemas/CreateStudioResponse_studio'
      required:
      - studio
      type: object
    GetStudioComponentResponse:
      example:
        studioComponent:
          updatedBy: ""
          configuration:
            licenseServiceConfiguration:
              endpoint: ""
            activeDirectoryConfiguration:
              computerAttributes: ""
              directoryId: ""
              organizationalUnitDistinguishedName: ""
            computeFarmConfiguration:
              activeDirectoryUser: ""
              endpoint: ""
            sharedFileSystemConfiguration:
              windowsMountDrive: ""
              endpoint: ""
              fileSystemId: ""
              linuxMountPoint: ""
              shareName: ""
          description: ""
          ec2SecurityGroupIds: ""
          secureInitializationRoleArn: ""
          type: ""
          statusMessage: ""
          tags: ""
          initializationScripts: ""
          scriptParameters: ""
          createdAt: ""
          runtimeRoleArn: ""
          createdBy: ""
          subtype: ""
          name: ""
          studioComponentId: ""
          state: ""
          arn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        studioComponent:
          $ref: '#/components/schemas/CreateStudioComponentResponse_studioComponent'
      type: object
    GetStudioMemberResponse:
      example:
        member:
          persona: ""
          principalId: ""
          identityStoreId: ""
          sid: ""
      properties:
        member:
          $ref: '#/components/schemas/GetStudioMemberResponse_member'
      type: object
    ListEulaAcceptancesResponse:
      example:
        nextToken: ""
        eulaAcceptances: ""
      properties:
        eulaAcceptances:
          allOf:
          - $ref: '#/components/schemas/EulaAcceptanceList'
          - description: A collection of EULA acceptances.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
      type: object
    ListEulasResponse:
      example:
        nextToken: ""
        eulas: ""
      properties:
        eulas:
          allOf:
          - $ref: '#/components/schemas/EulaList'
          - description: A collection of EULA resources.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
      type: object
    ListLaunchProfileMembersResponse:
      example:
        nextToken: ""
        members: ""
      properties:
        members:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileMembershipList'
          - description: A list of members.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
      type: object
    ListLaunchProfilesResponse:
      example:
        launchProfiles: ""
        nextToken: ""
      properties:
        launchProfiles:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileList'
          - description: A collection of launch profiles.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
      type: object
    LaunchProfileState:
      enum:
      - CREATE_IN_PROGRESS
      - READY
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - DELETED
      - DELETE_FAILED
      - CREATE_FAILED
      - UPDATE_FAILED
      type: string
    ListStreamingImagesResponse:
      example:
        nextToken: ""
        streamingImages: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
        streamingImages:
          allOf:
          - $ref: '#/components/schemas/StreamingImageList'
          - description: A collection of streaming images.
      type: object
    ListStreamingSessionBackupsResponse:
      example:
        nextToken: ""
        streamingSessionBackups: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
        streamingSessionBackups:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionBackupList'
          - description: Information about the streaming session backups.
      type: object
    ListStreamingSessionsResponse:
      example:
        sessions: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
        sessions:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionList'
          - description: A collection of streaming sessions.
      type: object
    ListStudioComponentsResponse:
      example:
        nextToken: ""
        studioComponents: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
        studioComponents:
          allOf:
          - $ref: '#/components/schemas/StudioComponentList'
          - description: A collection of studio components.
      type: object
    StudioComponentState:
      description: "<p>The current state of the studio component resource.</p> <p>While\
        \ a studio component is being created, modified, or deleted, its state will\
        \ be <code>CREATE_IN_PROGRESS</code>, <code>UPDATE_IN_PROGRESS</code>, or\
        \ <code>DELETE_IN_PROGRESS</code>.</p> <p>These are called <i>transition states</i>.</p>\
        \ <p>No modifications may be made to the studio component while it is in a\
        \ transition state.</p> <p>If creation of the resource fails, the state will\
        \ change to <code>CREATE_FAILED</code>. The resource <code>StatusCode</code>\
        \ and <code>StatusMessage</code> will provide more information of why creation\
        \ failed. The resource in this state will automatically be deleted from your\
        \ account after a period of time.</p> <p>If updating the resource fails, the\
        \ state will change to <code>UPDATE_FAILED</code>. The resource <code>StatusCode</code>\
        \ and <code>StatusMessage</code> will provide more information of why the\
        \ update failed. The resource will be returned to the state it was in when\
        \ the update request was invoked.</p> <p>If deleting the resource fails, the\
        \ state will change to <code>DELETE_FAILED</code>. The resource <code>StatusCode</code>\
        \ and <code>StatusMessage</code> will provide more information of why the\
        \ update failed. The resource will be returned to the state it was in when\
        \ the update request was invoked. After the resource is deleted successfully,\
        \ it will change to the <code>DELETED</code> state. The resource will no longer\
        \ count against service quotas and cannot be used or acted upon any futher.\
        \ It will be removed from your account after a period of time.</p>"
      enum:
      - CREATE_IN_PROGRESS
      - READY
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - DELETED
      - DELETE_FAILED
      - CREATE_FAILED
      - UPDATE_FAILED
      type: string
    StudioComponentType:
      enum:
      - ACTIVE_DIRECTORY
      - SHARED_FILE_SYSTEM
      - COMPUTE_FARM
      - LICENSE_SERVICE
      - CUSTOM
      type: string
    ListStudioMembersResponse:
      example:
        nextToken: ""
        members: ""
      properties:
        members:
          allOf:
          - $ref: '#/components/schemas/StudioMembershipList'
          - description: A list of admin members.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
      type: object
    ListStudiosResponse:
      example:
        studios: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token for the next set of results, or null if there\
              \ are no more results."
        studios:
          allOf:
          - $ref: '#/components/schemas/StudioList'
          - description: A collection of studios.
      required:
      - studios
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
      type: object
    PutLaunchProfileMembersResponse:
      properties: {}
      type: object
    NewLaunchProfileMember:
      description: A new member that is added to a launch profile.
      properties:
        persona:
          allOf:
          - $ref: '#/components/schemas/LaunchProfilePersona'
          - description: The persona.
        principalId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The principal ID.
      required:
      - persona
      - principalId
      type: object
    PutStudioMembersResponse:
      properties: {}
      type: object
    NewStudioMember:
      description: A new studio user's membership.
      properties:
        persona:
          allOf:
          - $ref: '#/components/schemas/StudioPersona'
          - description: The persona.
        principalId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The principal ID.
      required:
      - persona
      - principalId
      type: object
    StartStreamingSessionResponse:
      example:
        session:
          stopAt: ""
          maxBackupsToRetain: ""
          startedAt: ""
          volumeRetentionMode: ""
          terminateAt: ""
          createdAt: ""
          backupMode: ""
          stoppedBy: ""
          state: ""
          arn: ""
          updatedAt: ""
          volumeConfiguration:
            size: ""
            iops: ""
            throughput: ""
          ec2InstanceType: ""
          updatedBy: ""
          startedFromBackupId: ""
          startedBy: ""
          sessionId: ""
          launchProfileId: ""
          sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          automaticTerminationMode: ""
          stoppedAt: ""
          streamingImageId: ""
          createdBy: ""
          ownedBy: ""
          statusCode: ""
      properties:
        session:
          $ref: '#/components/schemas/StreamingSession'
      type: object
    StartStudioSSOConfigurationRepairResponse:
      example:
        studio:
          studioEncryptionConfiguration:
            keyArn: ""
            keyType: ""
          studioId: ""
          displayName: ""
          studioUrl: ""
          studioName: ""
          statusMessage: ""
          tags: ""
          userRoleArn: ""
          ssoClientId: ""
          createdAt: ""
          homeRegion: ""
          state: ""
          arn: ""
          adminRoleArn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        studio:
          $ref: '#/components/schemas/CreateStudioResponse_studio'
      required:
      - studio
      type: object
    StopStreamingSessionResponse:
      example:
        session:
          stopAt: ""
          maxBackupsToRetain: ""
          startedAt: ""
          volumeRetentionMode: ""
          terminateAt: ""
          createdAt: ""
          backupMode: ""
          stoppedBy: ""
          state: ""
          arn: ""
          updatedAt: ""
          volumeConfiguration:
            size: ""
            iops: ""
            throughput: ""
          ec2InstanceType: ""
          updatedBy: ""
          startedFromBackupId: ""
          startedBy: ""
          sessionId: ""
          launchProfileId: ""
          sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          automaticTerminationMode: ""
          stoppedAt: ""
          streamingImageId: ""
          createdBy: ""
          ownedBy: ""
          statusCode: ""
      properties:
        session:
          $ref: '#/components/schemas/StreamingSession'
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UpdateLaunchProfileResponse:
      example:
        launchProfile:
          studioComponentIds: ""
          updatedBy: ""
          description: ""
          launchProfileId: ""
          streamConfiguration:
            automaticTerminationMode: ""
            volumeConfiguration:
              size: ""
              iops: ""
              throughput: ""
            clipboardMode: ""
            ec2InstanceTypes: ""
            sessionStorage:
              mode: ""
              root:
                linux: ""
                windows: ""
            streamingImageIds: ""
            maxSessionLengthInMinutes: ""
            sessionBackup:
              mode: ""
              maxBackupsToRetain: ""
            maxStoppedSessionLengthInMinutes: ""
            sessionPersistenceMode: ""
          statusMessage: ""
          tags: ""
          createdAt: ""
          ec2SubnetIds: ""
          validationResults: ""
          createdBy: ""
          launchProfileProtocolVersions: ""
          name: ""
          state: ""
          arn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        launchProfile:
          $ref: '#/components/schemas/CreateLaunchProfileResponse_launchProfile'
      type: object
    UpdateLaunchProfileMemberResponse:
      example:
        member:
          persona: ""
          principalId: ""
          identityStoreId: ""
          sid: ""
      properties:
        member:
          $ref: '#/components/schemas/UpdateLaunchProfileMemberResponse_member'
      type: object
    UpdateStreamingImageResponse:
      example:
        streamingImage:
          owner: ""
          eulaIds: ""
          description: ""
          platform: ""
          statusMessage: ""
          tags: ""
          streamingImageId: ""
          name: ""
          encryptionConfiguration:
            keyArn: ""
            keyType: ""
          ec2ImageId: ""
          state: ""
          arn: ""
          statusCode: ""
      properties:
        streamingImage:
          $ref: '#/components/schemas/StreamingImage'
      type: object
    UpdateStudioResponse:
      example:
        studio:
          studioEncryptionConfiguration:
            keyArn: ""
            keyType: ""
          studioId: ""
          displayName: ""
          studioUrl: ""
          studioName: ""
          statusMessage: ""
          tags: ""
          userRoleArn: ""
          ssoClientId: ""
          createdAt: ""
          homeRegion: ""
          state: ""
          arn: ""
          adminRoleArn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        studio:
          $ref: '#/components/schemas/CreateStudioResponse_studio'
      required:
      - studio
      type: object
    UpdateStudioComponentResponse:
      example:
        studioComponent:
          updatedBy: ""
          configuration:
            licenseServiceConfiguration:
              endpoint: ""
            activeDirectoryConfiguration:
              computerAttributes: ""
              directoryId: ""
              organizationalUnitDistinguishedName: ""
            computeFarmConfiguration:
              activeDirectoryUser: ""
              endpoint: ""
            sharedFileSystemConfiguration:
              windowsMountDrive: ""
              endpoint: ""
              fileSystemId: ""
              linuxMountPoint: ""
              shareName: ""
          description: ""
          ec2SecurityGroupIds: ""
          secureInitializationRoleArn: ""
          type: ""
          statusMessage: ""
          tags: ""
          initializationScripts: ""
          scriptParameters: ""
          createdAt: ""
          runtimeRoleArn: ""
          createdBy: ""
          subtype: ""
          name: ""
          studioComponentId: ""
          state: ""
          arn: ""
          statusCode: ""
          updatedAt: ""
      properties:
        studioComponent:
          $ref: '#/components/schemas/CreateStudioComponentResponse_studioComponent'
      type: object
    ClientToken:
      maxLength: 64
      minLength: 1
      type: string
    EulaIdList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    AcceptEulasRequest:
      example:
        eulaIds: ""
      properties:
        eulaIds:
          allOf:
          - $ref: '#/components/schemas/EulaIdList'
          - description: The EULA ID.
      title: AcceptEulasRequest
      type: object
    EulaAcceptanceList:
      items:
        $ref: '#/components/schemas/EulaAcceptance'
      type: array
    ActiveDirectoryComputerAttributeName:
      description: The name for the LDAP attribute.
      maxLength: 40
      minLength: 1
      type: string
    ActiveDirectoryComputerAttributeValue:
      description: The value for the LDAP attribute.
      maxLength: 64
      minLength: 1
      type: string
    ActiveDirectoryComputerAttribute:
      description: "An LDAP attribute of an Active Directory computer account, in\
        \ the form of a name:value pair."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryComputerAttributeName'
          - description: The name for the LDAP attribute.
        value:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryComputerAttributeValue'
          - description: The value for the LDAP attribute.
      type: object
    ActiveDirectoryComputerAttributeList:
      description: A collection of LDAP attributes to apply to Active Directory computer
        accounts that are created for streaming sessions.
      items:
        $ref: '#/components/schemas/ActiveDirectoryComputerAttribute'
      maxItems: 50
      minItems: 0
      type: array
    DirectoryId:
      type: string
    ActiveDirectoryOrganizationalUnitDistinguishedName:
      description: The fully-qualified distinguished name of the organizational unit
        to place the computer account in.
      maxLength: 2000
      minLength: 1
      type: string
    ActiveDirectoryDnsIpAddress:
      type: string
    ActiveDirectoryDnsIpAddressList:
      items:
        $ref: '#/components/schemas/ActiveDirectoryDnsIpAddress'
      maxItems: 10
      minItems: 0
      type: array
    SensitiveString:
      format: password
      type: string
    LaunchProfileDescription:
      description: A human-readable description of the launch profile.
      format: password
      maxLength: 256
      minLength: 0
      type: string
    EC2SubnetIdList:
      items:
        $ref: '#/components/schemas/EC2SubnetId'
      maxItems: 6
      minItems: 0
      type: array
    LaunchProfileProtocolVersionList:
      items:
        $ref: '#/components/schemas/LaunchProfileProtocolVersion'
      type: array
    LaunchProfileName:
      format: password
      maxLength: 64
      minLength: 1
      type: string
    StreamConfigurationCreate:
      description: Configuration for streaming workstations created using this launch
        profile.
      properties:
        automaticTerminationMode:
          allOf:
          - $ref: '#/components/schemas/AutomaticTerminationMode'
          - description: "<p>Indicates if a streaming session created from this launch\
              \ profile should be terminated automatically or retained without termination\
              \ after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When\
              \ <code>ACTIVATED</code>, the streaming session is scheduled for termination\
              \ after being in the <code>STOPPED</code> state for the time specified\
              \ in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When\
              \ <code>DEACTIVATED</code>, the streaming session can remain in the\
              \ <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter\
              \ is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.\
              \ When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>"
        clipboardMode:
          allOf:
          - $ref: '#/components/schemas/StreamingClipboardMode'
          - description: Allows or deactivates the use of the system clipboard to
              copy and paste between the streaming session and streaming client.
        ec2InstanceTypes:
          allOf:
          - $ref: '#/components/schemas/StreamingInstanceTypeList'
          - description: The EC2 instance types that users can select from when launching
              a streaming session with this launch profile.
        maxSessionLengthInMinutes:
          allOf:
          - $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'
          - description: "The length of time, in minutes, that a streaming session\
              \ can be active before it is stopped or terminated. After this point,\
              \ Nimble Studio automatically terminates or stops the session. The default\
              \ length of time is 690 minutes, and the maximum length of time is 30\
              \ days."
        maxStoppedSessionLengthInMinutes:
          allOf:
          - $ref: '#/components/schemas/StreamConfigurationMaxStoppedSessionLengthInMinutes'
          - description: "<p>Integer that determines if you can start and stop your\
              \ sessions and how long a session can stay in the <code>STOPPED</code>\
              \ state. The default value is 0. The maximum value is 5760.</p> <p>This\
              \ field is allowed only when <code>sessionPersistenceMode</code> is\
              \ <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is\
              \ <code>ACTIVATED</code>.</p> <p>If the value is set to 0, your sessions\
              \ canâ€™t be <code>STOPPED</code>. If you then call <code>StopStreamingSession</code>,\
              \ the session fails. If the time that a session stays in the <code>READY</code>\
              \ state exceeds the <code>maxSessionLengthInMinutes</code> value, the\
              \ session will automatically be terminated (instead of <code>STOPPED</code>).</p>\
              \ <p>If the value is set to a positive number, the session can be stopped.\
              \ You can call <code>StopStreamingSession</code> to stop sessions in\
              \ the <code>READY</code> state. If the time that a session stays in\
              \ the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code>\
              \ value, the session will automatically be stopped (instead of terminated).</p>"
        sessionBackup:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration_sessionBackup'
        sessionPersistenceMode:
          allOf:
          - $ref: '#/components/schemas/SessionPersistenceMode'
          - description: Determine if a streaming session created from this launch
              profile can configure persistent storage. This means that <code>volumeConfiguration</code>
              and <code>automaticTerminationMode</code> are configured.
        sessionStorage:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration_sessionStorage'
        streamingImageIds:
          allOf:
          - $ref: '#/components/schemas/StreamingImageIdList'
          - description: The streaming images that users can select from when launching
              a streaming session with this launch profile.
        volumeConfiguration:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration_volumeConfiguration'
      required:
      - clipboardMode
      - ec2InstanceTypes
      - streamingImageIds
      type: object
    LaunchProfileStudioComponentIdList:
      items:
        $ref: '#/components/schemas/String'
      maxItems: 100
      minItems: 1
      type: array
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    CreateLaunchProfileRequest:
      example:
        ec2SubnetIds: ""
        studioComponentIds: ""
        launchProfileProtocolVersions: ""
        name: ""
        description: ""
        streamConfiguration:
          automaticTerminationMode: ""
          volumeConfiguration:
            size: ""
            iops: ""
            throughput: ""
          clipboardMode: ""
          ec2InstanceTypes: ""
          sessionStorage:
            mode: ""
            root:
              linux: ""
              windows: ""
          streamingImageIds: ""
          maxSessionLengthInMinutes: ""
          sessionBackup:
            mode: ""
            maxBackupsToRetain: ""
          maxStoppedSessionLengthInMinutes: ""
          sessionPersistenceMode: ""
        tags: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileDescription'
          - description: The description.
        ec2SubnetIds:
          allOf:
          - $ref: '#/components/schemas/EC2SubnetIdList'
          - description: 'Specifies the IDs of the EC2 subnets where streaming sessions
              will be accessible from. These subnets must support the specified instance
              types. '
        launchProfileProtocolVersions:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileProtocolVersionList'
          - description: The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
        name:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileName'
          - description: The name for the launch profile.
        streamConfiguration:
          $ref: '#/components/schemas/CreateLaunchProfileRequest_streamConfiguration'
        studioComponentIds:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileStudioComponentIdList'
          - description: Unique identifiers for a collection of studio components
              that can be used with this launch profile.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
      required:
      - ec2SubnetIds
      - launchProfileProtocolVersions
      - name
      - streamConfiguration
      - studioComponentIds
      title: CreateLaunchProfileRequest
      type: object
    LaunchProfile:
      description: "<p>A launch profile controls your artist workforceâ€™s access to\
        \ studio components, like compute farms, shared file systems, managed file\
        \ systems, and license server configurations, as well as instance types and\
        \ Amazon Machine Images (AMIs). </p> <p>Studio administrators create launch\
        \ profiles in the Nimble Studio console. Artists can use their launch profiles\
        \ to launch an instance from the Nimble Studio portal. Each userâ€™s launch\
        \ profile defines how they can launch a streaming session. By default, studio\
        \ admins can use all launch profiles.</p>"
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) that is assigned to a studio
              resource and uniquely identifies it. ARNs are unique across all Regions.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that created the launch profile.
        description:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileDescription'
          - description: A human-readable description of the launch profile.
        ec2SubnetIds:
          allOf:
          - $ref: '#/components/schemas/EC2SubnetIdList'
          - description: Unique identifiers for a collection of EC2 subnets.
        launchProfileId:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileId'
          - description: The ID of the launch profile used to control access from
              the streaming session.
        launchProfileProtocolVersions:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileProtocolVersionList'
          - description: The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
        name:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileName'
          - description: A friendly name for the launch profile.
        state:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileState'
          - description: The current state.
        statusCode:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileStatusCode'
          - description: The status code.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for the launch profile.
        streamConfiguration:
          $ref: '#/components/schemas/LaunchProfile_streamConfiguration'
        studioComponentIds:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileStudioComponentIdList'
          - description: Unique identifiers for a collection of studio components
              that can be used with this launch profile.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that most recently updated the resource.
        validationResults:
          allOf:
          - $ref: '#/components/schemas/ValidationResults'
          - description: The list of the latest validation results.
      type: object
    StreamingImageDescription:
      description: The description.
      format: password
      maxLength: 256
      minLength: 0
      type: string
    EC2ImageId:
      pattern: "^ami-[0-9A-z]+$"
      type: string
    StreamingImageName:
      description: A friendly name for a streaming image resource.
      format: password
      maxLength: 64
      minLength: 0
      type: string
    CreateStreamingImageRequest:
      example:
        name: ""
        description: ""
        ec2ImageId: ""
        tags: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/StreamingImageDescription'
          - description: A human-readable description of the streaming image.
        ec2ImageId:
          allOf:
          - $ref: '#/components/schemas/EC2ImageId'
          - description: The ID of an EC2 machine image with which to create this
              streaming image.
        name:
          allOf:
          - $ref: '#/components/schemas/StreamingImageName'
          - description: A friendly name for a streaming image resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
      required:
      - ec2ImageId
      - name
      title: CreateStreamingImageRequest
      type: object
    StreamingImage:
      description: <p>Represents a streaming image resource.</p> <p>Streaming images
        are used by studio users to select which operating system and software they
        want to use in a Nimble Studio streaming session.</p> <p>Amazon provides a
        number of streaming images that include popular 3rd-party software.</p> <p>You
        can create your own streaming images using an Amazon EC2 machine image that
        you create for this purpose. You can also include software that your users
        require.</p>
      example:
        owner: ""
        eulaIds: ""
        description: ""
        platform: ""
        statusMessage: ""
        tags: ""
        streamingImageId: ""
        name: ""
        encryptionConfiguration:
          keyArn: ""
          keyType: ""
        ec2ImageId: ""
        state: ""
        arn: ""
        statusCode: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) that is assigned to a studio
              resource and uniquely identifies it. ARNs are unique across all Regions.
        description:
          allOf:
          - $ref: '#/components/schemas/StreamingImageDescription'
          - description: A human-readable description of the streaming image.
        ec2ImageId:
          allOf:
          - $ref: '#/components/schemas/EC2ImageId'
          - description: The ID of an EC2 machine image with which to create the streaming
              image.
        encryptionConfiguration:
          $ref: '#/components/schemas/StreamingImage_encryptionConfiguration'
        eulaIds:
          allOf:
          - $ref: '#/components/schemas/EulaIdList'
          - description: The list of EULAs that must be accepted before a Streaming
              Session can be started using this streaming image.
        name:
          allOf:
          - $ref: '#/components/schemas/StreamingImageName'
          - description: A friendly name for a streaming image resource.
        owner:
          allOf:
          - $ref: '#/components/schemas/StreamingImageOwner'
          - description: "The owner of the streaming image, either the <code>studioId</code>\
              \ that contains the streaming image, or <code>amazon</code> for images\
              \ that are provided by Amazon Nimble Studio."
        platform:
          allOf:
          - $ref: '#/components/schemas/StreamingImagePlatform'
          - description: "The platform of the streaming image, either Windows or Linux."
        state:
          allOf:
          - $ref: '#/components/schemas/StreamingImageState'
          - description: The current state.
        statusCode:
          allOf:
          - $ref: '#/components/schemas/StreamingImageStatusCode'
          - description: The status code.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for the streaming image.
        streamingImageId:
          allOf:
          - $ref: '#/components/schemas/StreamingImageId'
          - description: The ID of the streaming image.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
      type: object
    StreamingInstanceType:
      enum:
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.12xlarge
      - g4dn.16xlarge
      - g3.4xlarge
      - g3s.xlarge
      - g5.xlarge
      - g5.2xlarge
      - g5.4xlarge
      - g5.8xlarge
      - g5.16xlarge
      type: string
    StreamingImageId:
      maxLength: 22
      minLength: 0
      pattern: "^[a-zA-Z0-9-_]*$"
      type: string
    CreateStreamingSessionRequest:
      example:
        streamingImageId: ""
        ec2InstanceType: ""
        launchProfileId: ""
        ownedBy: ""
        tags: ""
      properties:
        ec2InstanceType:
          allOf:
          - $ref: '#/components/schemas/StreamingInstanceType'
          - description: The EC2 Instance type used for the streaming session.
        launchProfileId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the launch profile used to control access from
              the streaming session.
        ownedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that owns the streaming session.
              The user that owns the session will be logging into the session and
              interacting with the virtual workstation.
        streamingImageId:
          allOf:
          - $ref: '#/components/schemas/StreamingImageId'
          - description: The ID of the streaming image.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
      required:
      - launchProfileId
      title: CreateStreamingSessionRequest
      type: object
    StreamingSession:
      description: A streaming session is a virtual workstation created using a particular
        launch profile.
      example:
        stopAt: ""
        maxBackupsToRetain: ""
        startedAt: ""
        volumeRetentionMode: ""
        terminateAt: ""
        createdAt: ""
        backupMode: ""
        stoppedBy: ""
        state: ""
        arn: ""
        updatedAt: ""
        volumeConfiguration:
          size: ""
          iops: ""
          throughput: ""
        ec2InstanceType: ""
        updatedBy: ""
        startedFromBackupId: ""
        startedBy: ""
        sessionId: ""
        launchProfileId: ""
        sessionPersistenceMode: ""
        statusMessage: ""
        tags: ""
        automaticTerminationMode: ""
        stoppedAt: ""
        streamingImageId: ""
        createdBy: ""
        ownedBy: ""
        statusCode: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) that is assigned to a studio
              resource and uniquely identifies it. ARNs are unique across all Regions.
        automaticTerminationMode:
          allOf:
          - $ref: '#/components/schemas/AutomaticTerminationMode'
          - description: "<p>Indicates if a streaming session created from this launch\
              \ profile should be terminated automatically or retained without termination\
              \ after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When\
              \ <code>ACTIVATED</code>, the streaming session is scheduled for termination\
              \ after being in the <code>STOPPED</code> state for the time specified\
              \ in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When\
              \ <code>DEACTIVATED</code>, the streaming session can remain in the\
              \ <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter\
              \ is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.\
              \ When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>"
        backupMode:
          allOf:
          - $ref: '#/components/schemas/SessionBackupMode'
          - description: Shows the current backup setting of the session.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that created the streaming session.
        ec2InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The EC2 Instance type used for the streaming session.
        launchProfileId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the launch profile used to control access from
              the streaming session.
        maxBackupsToRetain:
          allOf:
          - $ref: '#/components/schemas/StreamConfigurationMaxBackupsToRetain'
          - description: "The maximum number of backups of a streaming session that\
              \ you can have. When the maximum number of backups is reached, the oldest\
              \ backup is deleted."
        ownedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that owns the streaming session.
              The user that owns the session will be logging into the session and
              interacting with the virtual workstation.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionId'
          - description: The session ID.
        sessionPersistenceMode:
          allOf:
          - $ref: '#/components/schemas/SessionPersistenceMode'
          - description: Determine if a streaming session created from this launch
              profile can configure persistent storage. This means that <code>volumeConfiguration</code>
              and <code>automaticTerminationMode</code> are configured.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the session entered <code>START_IN_PROGRESS</code>
              state.
        startedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that started the streaming session.
        startedFromBackupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The backup ID used to restore a streaming session.
        state:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionState'
          - description: The current state.
        statusCode:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionStatusCode'
          - description: The status code.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for the streaming session.
        stopAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The time the streaming session will automatically be stopped
              if the user doesnâ€™t stop the session themselves. '
        stoppedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the session entered <code>STOP_IN_PROGRESS</code>
              state.
        stoppedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that stopped the streaming session.
        streamingImageId:
          allOf:
          - $ref: '#/components/schemas/StreamingImageId'
          - description: The ID of the streaming image.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
        terminateAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the streaming session will automatically terminate
              if not terminated by the user.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that most recently updated the resource.
        volumeConfiguration:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration_volumeConfiguration'
        volumeRetentionMode:
          allOf:
          - $ref: '#/components/schemas/VolumeRetentionMode'
          - description: Determine if an EBS volume created from this streaming session
              will be backed up.
      type: object
    StreamingSessionStreamExpirationInSeconds:
      maximum: 3600
      minimum: 60
      type: integer
    CreateStreamingSessionStreamRequest:
      example:
        expirationInSeconds: ""
      properties:
        expirationInSeconds:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionStreamExpirationInSeconds'
          - description: The expiration time in seconds.
      title: CreateStreamingSessionStreamRequest
      type: object
    StreamingSessionStream:
      description: "A stream is an active connection to a streaming session, enabling\
        \ a studio user to control the streaming session using a compatible client.\
        \ Streaming session streams are compatible with the NICE DCV web client, included\
        \ in the Nimble Studio portal, or the NICE DCV desktop client."
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that created the streaming session
              stream.
        expiresAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource expires.
        ownedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that owns the streaming session.
              The user that owns the session will be logging into the session and
              interacting with the virtual workstation.
        state:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionStreamState'
          - description: The current state.
        statusCode:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionStreamStatusCode'
          - description: The streaming session stream status code.
        streamId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The stream ID.
        url:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The URL to connect to this stream using the DCV client.
      type: object
    StudioComponentConfiguration:
      description: "The configuration of the studio component, based on component\
        \ type."
      properties:
        activeDirectoryConfiguration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration_activeDirectoryConfiguration'
        computeFarmConfiguration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration_computeFarmConfiguration'
        licenseServiceConfiguration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration_licenseServiceConfiguration'
        sharedFileSystemConfiguration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration_sharedFileSystemConfiguration'
      type: object
    StudioComponentDescription:
      format: password
      maxLength: 256
      minLength: 0
      type: string
    StudioComponentSecurityGroupIdList:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 30
      minItems: 0
      type: array
    StudioComponentInitializationScriptList:
      items:
        $ref: '#/components/schemas/StudioComponentInitializationScript'
      type: array
    StudioComponentName:
      format: password
      maxLength: 64
      minLength: 0
      type: string
    RoleArn:
      maxLength: 2048
      minLength: 0
      type: string
    StudioComponentScriptParameterKeyValueList:
      items:
        $ref: '#/components/schemas/ScriptParameterKeyValue'
      maxItems: 30
      minItems: 0
      type: array
    StudioComponentSubtype:
      enum:
      - AWS_MANAGED_MICROSOFT_AD
      - AMAZON_FSX_FOR_WINDOWS
      - AMAZON_FSX_FOR_LUSTRE
      - CUSTOM
      type: string
    CreateStudioComponentRequest:
      example:
        initializationScripts: ""
        scriptParameters: ""
        runtimeRoleArn: ""
        configuration:
          licenseServiceConfiguration:
            endpoint: ""
          activeDirectoryConfiguration:
            computerAttributes: ""
            directoryId: ""
            organizationalUnitDistinguishedName: ""
          computeFarmConfiguration:
            activeDirectoryUser: ""
            endpoint: ""
          sharedFileSystemConfiguration:
            windowsMountDrive: ""
            endpoint: ""
            fileSystemId: ""
            linuxMountPoint: ""
            shareName: ""
        subtype: ""
        name: ""
        description: ""
        ec2SecurityGroupIds: ""
        secureInitializationRoleArn: ""
        type: ""
        tags: ""
      properties:
        configuration:
          $ref: '#/components/schemas/CreateStudioComponentRequest_configuration'
        description:
          allOf:
          - $ref: '#/components/schemas/StudioComponentDescription'
          - description: The description.
        ec2SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StudioComponentSecurityGroupIdList'
          - description: The EC2 security groups that control access to the studio
              component.
        initializationScripts:
          allOf:
          - $ref: '#/components/schemas/StudioComponentInitializationScriptList'
          - description: Initialization scripts for studio components.
        name:
          allOf:
          - $ref: '#/components/schemas/StudioComponentName'
          - description: The name for the studio component.
        runtimeRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: 'An IAM role attached to a Studio Component that gives the
              studio component access to Amazon Web Services resources at anytime
              while the instance is running. '
        scriptParameters:
          allOf:
          - $ref: '#/components/schemas/StudioComponentScriptParameterKeyValueList'
          - description: Parameters for the studio component scripts.
        secureInitializationRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: An IAM role attached to Studio Component when the system
              initialization script runs which give the studio component access to
              Amazon Web Services resources when the system initialization script
              runs.
        subtype:
          allOf:
          - $ref: '#/components/schemas/StudioComponentSubtype'
          - description: The specific subtype of a studio component.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
        type:
          allOf:
          - $ref: '#/components/schemas/StudioComponentType'
          - description: The type of the studio component.
      required:
      - name
      - type
      title: CreateStudioComponentRequest
      type: object
    StudioComponent:
      description: "<p>A studio component represents a network resource to be used\
        \ by a studio's users and workflows. A typical studio contains studio components\
        \ for each of the following: render farm, Active Directory, licensing, and\
        \ file system.</p> <p>Access to a studio component is managed by specifying\
        \ security groups for the resource, as well as its endpoint.</p> <p>A studio\
        \ component also has a set of initialization scripts that are returned by\
        \ <code>GetLaunchProfileInitialization</code>. These initialization scripts\
        \ run on streaming sessions when they start. They provide users with flexibility\
        \ in controlling how the studio resources are configured on a streaming session.</p>"
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) that is assigned to a studio
              resource and uniquely identifies it. ARNs are unique across all Regions.
        configuration:
          $ref: '#/components/schemas/CreateStudioComponentRequest_configuration'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that created the studio component.
        description:
          allOf:
          - $ref: '#/components/schemas/StudioComponentDescription'
          - description: A human-readable description for the studio component resource.
        ec2SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StudioComponentSecurityGroupIdList'
          - description: The EC2 security groups that control access to the studio
              component.
        initializationScripts:
          allOf:
          - $ref: '#/components/schemas/StudioComponentInitializationScriptList'
          - description: Initialization scripts for studio components.
        name:
          allOf:
          - $ref: '#/components/schemas/StudioComponentName'
          - description: A friendly name for the studio component resource.
        runtimeRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: 'An IAM role attached to a Studio Component that gives the
              studio component access to Amazon Web Services resources at anytime
              while the instance is running. '
        scriptParameters:
          allOf:
          - $ref: '#/components/schemas/StudioComponentScriptParameterKeyValueList'
          - description: Parameters for the studio component scripts.
        secureInitializationRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: An IAM role attached to Studio Component when the system
              initialization script runs which give the studio component access to
              Amazon Web Services resources when the system initialization script
              runs.
        state:
          allOf:
          - $ref: '#/components/schemas/StudioComponentState'
          - description: The current state.
        statusCode:
          allOf:
          - $ref: '#/components/schemas/StudioComponentStatusCode'
          - description: The status code.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for the studio component.
        studioComponentId:
          allOf:
          - $ref: '#/components/schemas/StudioComponentId'
          - description: The unique identifier for a studio component resource.
        subtype:
          allOf:
          - $ref: '#/components/schemas/StudioComponentSubtype'
          - description: The specific subtype of a studio component.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
        type:
          allOf:
          - $ref: '#/components/schemas/StudioComponentType'
          - description: The type of the studio component.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that most recently updated the resource.
      type: object
    StudioDisplayName:
      format: password
      maxLength: 64
      minLength: 0
      type: string
    StudioEncryptionConfiguration:
      description: Configuration of the encryption method that is used for the studio.
      properties:
        keyArn:
          allOf:
          - $ref: '#/components/schemas/StudioEncryptionConfigurationKeyArn'
          - description: The ARN for a KMS key that is used to encrypt studio data.
        keyType:
          allOf:
          - $ref: '#/components/schemas/StudioEncryptionConfigurationKeyType'
          - description: The type of KMS key that is used to encrypt studio data.
      required:
      - keyType
      type: object
    StudioName:
      maxLength: 64
      minLength: 3
      pattern: "^[a-z0-9]*$"
      type: string
    CreateStudioRequest:
      example:
        studioEncryptionConfiguration:
          keyArn: ""
          keyType: ""
        displayName: ""
        studioName: ""
        adminRoleArn: ""
        tags: ""
        userRoleArn: ""
      properties:
        adminRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The IAM role that studio admins will assume when logging
              in to the Nimble Studio portal.
        displayName:
          allOf:
          - $ref: '#/components/schemas/StudioDisplayName'
          - description: A friendly name for the studio.
        studioEncryptionConfiguration:
          $ref: '#/components/schemas/CreateStudioRequest_studioEncryptionConfiguration'
        studioName:
          allOf:
          - $ref: '#/components/schemas/StudioName'
          - description: The studio name that is used in the URL of the Nimble Studio
              portal when accessed by Nimble Studio users.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
        userRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The IAM role that studio users will assume when logging in
              to the Nimble Studio portal.
      required:
      - adminRoleArn
      - displayName
      - studioName
      - userRoleArn
      title: CreateStudioRequest
      type: object
    Studio:
      description: "<p>Represents a studio resource.</p> <p>A studio is the core resource\
        \ used with Nimble Studio. You must create a studio first, before any other\
        \ resource type can be created. All other resources you create and manage\
        \ in Nimble Studio are contained within a studio.</p> <p>When creating a studio,\
        \ you must provides two IAM roles for use with the Nimble Studio portal. These\
        \ roles are assumed by your users when they log in to the Nimble Studio portal\
        \ via IAM Identity Center and your identity source.</p> <p>The user role must\
        \ have the <code>AmazonNimbleStudio-StudioUser</code> managed policy attached\
        \ for the portal to function properly.</p> <p>The admin role must have the\
        \ <code>AmazonNimbleStudio-StudioAdmin</code> managed policy attached for\
        \ the portal to function properly.</p> <p>Your studio roles must trust the\
        \ <code>identity.nimble.amazonaws.com</code> service principal to function\
        \ properly.</p>"
      properties:
        adminRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The IAM role that studio admins assume when logging in to
              the Nimble Studio portal.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) that is assigned to a studio
              resource and uniquely identifies it. ARNs are unique across all Regions.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was created.
        displayName:
          allOf:
          - $ref: '#/components/schemas/StudioDisplayName'
          - description: A friendly name for the studio.
        homeRegion:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: The Amazon Web Services Region where the studio resource
              is located.
        ssoClientId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The IAM Identity Center application client ID used to integrate
              with IAM Identity Center. This ID allows IAM Identity Center users to
              log in to Nimble Studio portal.
        state:
          allOf:
          - $ref: '#/components/schemas/StudioState'
          - description: The current state of the studio resource.
        statusCode:
          allOf:
          - $ref: '#/components/schemas/StudioStatusCode'
          - description: Status codes that provide additional detail on the studio
              state.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Additional detail on the studio state.
        studioEncryptionConfiguration:
          $ref: '#/components/schemas/Studio_studioEncryptionConfiguration'
        studioId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The unique identifier for a studio resource. In Nimble Studio,\
              \ all other resources are contained in a studio resource."
        studioName:
          allOf:
          - $ref: '#/components/schemas/StudioName'
          - description: "The name of the studio, as included in the URL when accessing\
              \ it in the Nimble Studio portal."
        studioUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The address of the web page for the studio.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was updated.
        userRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The IAM role that studio users assume when logging in to
              the Nimble Studio portal.
      type: object
    DeleteLaunchProfileMemberRequest:
      properties: {}
      title: DeleteLaunchProfileMemberRequest
      type: object
    DeleteLaunchProfileRequest:
      properties: {}
      title: DeleteLaunchProfileRequest
      type: object
    DeleteStreamingImageRequest:
      properties: {}
      title: DeleteStreamingImageRequest
      type: object
    DeleteStreamingSessionRequest:
      properties: {}
      title: DeleteStreamingSessionRequest
      type: object
    DeleteStudioComponentRequest:
      properties: {}
      title: DeleteStudioComponentRequest
      type: object
    DeleteStudioMemberRequest:
      properties: {}
      title: DeleteStudioMemberRequest
      type: object
    DeleteStudioRequest:
      properties: {}
      title: DeleteStudioRequest
      type: object
    Timestamp:
      format: date-time
      type: string
    EulaId:
      description: Represents a EULA resource.
      maxLength: 22
      minLength: 0
      pattern: "^[a-zA-Z0-9-_]*$"
      type: string
    EulaName:
      maxLength: 64
      minLength: 0
      type: string
    Eula:
      description: Represents a EULA resource.
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The EULA content.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was created.
        eulaId:
          allOf:
          - $ref: '#/components/schemas/EulaId'
          - description: The EULA ID.
        name:
          allOf:
          - $ref: '#/components/schemas/EulaName'
          - description: The name for the EULA.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was updated.
      type: object
    EulaAcceptanceId:
      description: The EULA acceptance ID.
      maxLength: 22
      minLength: 0
      pattern: "^[a-zA-Z0-9-_]*$"
      type: string
    EulaAcceptance:
      description: "The acceptance of a EULA, required to use Amazon-provided streaming\
        \ images."
      properties:
        acceptedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the EULA was accepted.
        acceptedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the person who accepted the EULA.
        accepteeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the acceptee.
        eulaAcceptanceId:
          allOf:
          - $ref: '#/components/schemas/EulaAcceptanceId'
          - description: The EULA acceptance ID.
        eulaId:
          allOf:
          - $ref: '#/components/schemas/EulaId'
          - description: The EULA ID.
      type: object
    EulaList:
      items:
        $ref: '#/components/schemas/Eula'
      type: array
    GetEulaRequest:
      properties: {}
      title: GetEulaRequest
      type: object
    GetLaunchProfileDetailsRequest:
      properties: {}
      title: GetLaunchProfileDetailsRequest
      type: object
    StreamingImageList:
      items:
        $ref: '#/components/schemas/StreamingImage'
      type: array
    StudioComponentSummaryList:
      items:
        $ref: '#/components/schemas/StudioComponentSummary'
      type: array
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    GetLaunchProfileInitializationRequest:
      properties: {}
      title: GetLaunchProfileInitializationRequest
      type: object
    LaunchProfileInitialization:
      description: "<p>A launch profile initialization contains information required\
        \ for a workstation or server to connect to a launch profile.</p> <p>This\
        \ includes scripts, endpoints, security groups, subnets, and other configuration.</p>"
      properties:
        activeDirectory:
          $ref: '#/components/schemas/LaunchProfileInitialization_activeDirectory'
        ec2SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileSecurityGroupIdList'
          - description: The EC2 security groups that control access to the studio
              component.
        launchProfileId:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileId'
          - description: The ID of the launch profile used to control access from
              the streaming session.
        launchProfileProtocolVersion:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileProtocolVersion'
          - description: The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
        launchPurpose:
          allOf:
          - $ref: '#/components/schemas/LaunchPurpose'
          - description: The launch purpose.
        name:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileName'
          - description: The name for the launch profile.
        platform:
          allOf:
          - $ref: '#/components/schemas/LaunchProfilePlatform'
          - description: "The platform of the launch platform, either Windows or Linux."
        systemInitializationScripts:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileInitializationScriptList'
          - description: The system initializtion scripts.
        userInitializationScripts:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileInitializationScriptList'
          - description: The user initializtion scripts.
      type: object
    GetLaunchProfileMemberRequest:
      properties: {}
      title: GetLaunchProfileMemberRequest
      type: object
    LaunchProfileMembership:
      description: <p>Studio admins can use launch profile membership to delegate
        launch profile access to studio users in the Nimble Studio portal without
        writing or maintaining complex IAM policies. A launch profile member is a
        user association from your studio identity source who is granted permissions
        to a launch profile.</p> <p>A launch profile member (type USER) provides the
        following permissions to that launch profile:</p> <ul> <li> <p>GetLaunchProfile</p>
        </li> <li> <p>GetLaunchProfileInitialization</p> </li> <li> <p>GetLaunchProfileMembers</p>
        </li> <li> <p>GetLaunchProfileMember</p> </li> <li> <p>CreateStreamingSession</p>
        </li> <li> <p>GetLaunchProfileDetails</p> </li> </ul>
      properties:
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the identity store.
        persona:
          allOf:
          - $ref: '#/components/schemas/LaunchProfilePersona'
          - description: The persona.
        principalId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The principal ID.
        sid:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Active Directory Security Identifier for this user,\
              \ if available."
      type: object
    GetLaunchProfileRequest:
      properties: {}
      title: GetLaunchProfileRequest
      type: object
    GetStreamingImageRequest:
      properties: {}
      title: GetStreamingImageRequest
      type: object
    GetStreamingSessionBackupRequest:
      properties: {}
      title: GetStreamingSessionBackupRequest
      type: object
    StreamingSessionBackup:
      description: Information about the streaming session backup.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) that is assigned to a studio
              resource and uniquely identifies it. ARNs are unique across all Regions.
        backupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the backup.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in for when the resource was created.
        launchProfileId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the launch profile which allowed the backups for
              the streaming session.
        ownedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that owns the streaming session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionId'
          - description: The streaming session ID for the <code>StreamingSessionBackup</code>.
        state:
          $ref: '#/components/schemas/StreamingSessionState'
        statusCode:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionStatusCode'
          - description: The status code.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status message for the streaming session backup.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
      type: object
    GetStreamingSessionRequest:
      properties: {}
      title: GetStreamingSessionRequest
      type: object
    GetStreamingSessionStreamRequest:
      properties: {}
      title: GetStreamingSessionStreamRequest
      type: object
    GetStudioComponentRequest:
      properties: {}
      title: GetStudioComponentRequest
      type: object
    GetStudioMemberRequest:
      properties: {}
      title: GetStudioMemberRequest
      type: object
    StudioMembership:
      description: "<p>A studio member is an association of a user from your studio\
        \ identity source to elevated permissions that they are granted in the studio.</p>\
        \ <p>When you add a user to your studio using the Nimble Studio console, they\
        \ are given access to the studio's IAM Identity Center application and are\
        \ given access to log in to the Nimble Studio portal. These users have the\
        \ permissions provided by the studio's user IAM role and do not appear in\
        \ the studio membership collection. Only studio admins appear in studio membership.</p>\
        \ <p>When you add a user to studio membership with the ADMIN persona, upon\
        \ logging in to the Nimble Studio portal, they are granted permissions specified\
        \ by the Studio's Admin IAM role.</p>"
      properties:
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the identity store.
        persona:
          allOf:
          - $ref: '#/components/schemas/StudioPersona'
          - description: The persona.
        principalId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The principal ID.
        sid:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Active Directory Security Identifier for this user,\
              \ if available."
      type: object
    GetStudioRequest:
      properties: {}
      title: GetStudioRequest
      type: object
    LaunchProfileId:
      maxLength: 22
      minLength: 0
      pattern: "^[a-zA-Z0-9-_]*$"
      type: string
    LaunchProfileStatusCode:
      enum:
      - LAUNCH_PROFILE_CREATED
      - LAUNCH_PROFILE_UPDATED
      - LAUNCH_PROFILE_DELETED
      - LAUNCH_PROFILE_CREATE_IN_PROGRESS
      - LAUNCH_PROFILE_UPDATE_IN_PROGRESS
      - LAUNCH_PROFILE_DELETE_IN_PROGRESS
      - INTERNAL_ERROR
      - STREAMING_IMAGE_NOT_FOUND
      - STREAMING_IMAGE_NOT_READY
      - LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED
      - ENCRYPTION_KEY_ACCESS_DENIED
      - ENCRYPTION_KEY_NOT_FOUND
      - INVALID_SUBNETS_PROVIDED
      - INVALID_INSTANCE_TYPES_PROVIDED
      - INVALID_SUBNETS_COMBINATION
      type: string
    StreamConfiguration:
      description: A configuration for a streaming session.
      properties:
        automaticTerminationMode:
          allOf:
          - $ref: '#/components/schemas/AutomaticTerminationMode'
          - description: "<p>Indicates if a streaming session created from this launch\
              \ profile should be terminated automatically or retained without termination\
              \ after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When\
              \ <code>ACTIVATED</code>, the streaming session is scheduled for termination\
              \ after being in the <code>STOPPED</code> state for the time specified\
              \ in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When\
              \ <code>DEACTIVATED</code>, the streaming session can remain in the\
              \ <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter\
              \ is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.\
              \ When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>"
        clipboardMode:
          allOf:
          - $ref: '#/components/schemas/StreamingClipboardMode'
          - description: Allows or deactivates the use of the system clipboard to
              copy and paste between the streaming session and streaming client.
        ec2InstanceTypes:
          allOf:
          - $ref: '#/components/schemas/StreamingInstanceTypeList'
          - description: The EC2 instance types that users can select from when launching
              a streaming session with this launch profile.
        maxSessionLengthInMinutes:
          allOf:
          - $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'
          - description: "The length of time, in minutes, that a streaming session\
              \ can be active before it is stopped or terminated. After this point,\
              \ Nimble Studio automatically terminates or stops the session. The default\
              \ length of time is 690 minutes, and the maximum length of time is 30\
              \ days."
        maxStoppedSessionLengthInMinutes:
          allOf:
          - $ref: '#/components/schemas/StreamConfigurationMaxStoppedSessionLengthInMinutes'
          - description: "<p>Integer that determines if you can start and stop your\
              \ sessions and how long a session can stay in the <code>STOPPED</code>\
              \ state. The default value is 0. The maximum value is 5760.</p> <p>This\
              \ field is allowed only when <code>sessionPersistenceMode</code> is\
              \ <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is\
              \ <code>ACTIVATED</code>.</p> <p>If the value is set to 0, your sessions\
              \ canâ€™t be <code>STOPPED</code>. If you then call <code>StopStreamingSession</code>,\
              \ the session fails. If the time that a session stays in the <code>READY</code>\
              \ state exceeds the <code>maxSessionLengthInMinutes</code> value, the\
              \ session will automatically be terminated (instead of <code>STOPPED</code>).</p>\
              \ <p>If the value is set to a positive number, the session can be stopped.\
              \ You can call <code>StopStreamingSession</code> to stop sessions in\
              \ the <code>READY</code> state. If the time that a session stays in\
              \ the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code>\
              \ value, the session will automatically be stopped (instead of terminated).</p>"
        sessionBackup:
          $ref: '#/components/schemas/StreamConfiguration_sessionBackup'
        sessionPersistenceMode:
          allOf:
          - $ref: '#/components/schemas/SessionPersistenceMode'
          - description: Determine if a streaming session created from this launch
              profile can configure persistent storage. This means that <code>volumeConfiguration</code>
              and <code>automaticTerminationMode</code> are configured.
        sessionStorage:
          $ref: '#/components/schemas/StreamConfiguration_sessionStorage'
        streamingImageIds:
          allOf:
          - $ref: '#/components/schemas/StreamingImageIdList'
          - description: The streaming images that users can select from when launching
              a streaming session with this launch profile.
        volumeConfiguration:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration_volumeConfiguration'
      required:
      - clipboardMode
      - ec2InstanceTypes
      - streamingImageIds
      type: object
    ValidationResults:
      items:
        $ref: '#/components/schemas/ValidationResult'
      type: array
    LaunchProfileInitializationActiveDirectory:
      description: The launch profile initialization Active Directory contains information
        required for the launch profile to connect to the Active Directory.
      properties:
        computerAttributes:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryComputerAttributeList'
          - description: A collection of custom attributes for an Active Directory
              computer.
        directoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          - description: The directory ID of the Directory Service for Microsoft Active
              Directory to access using this launch profile.
        directoryName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The directory name.
        dnsIpAddresses:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryDnsIpAddressList'
          - description: The DNS IP address.
        organizationalUnitDistinguishedName:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryOrganizationalUnitDistinguishedName'
          - description: The name for the organizational unit distinguished name.
        studioComponentId:
          allOf:
          - $ref: '#/components/schemas/StudioComponentId'
          - description: The unique identifier for a studio component resource.
        studioComponentName:
          allOf:
          - $ref: '#/components/schemas/StudioComponentName'
          - description: The name for the studio component.
      type: object
    LaunchProfileSecurityGroupIdList:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      type: array
    LaunchPurpose:
      description: The launch purpose.
      maxLength: 64
      minLength: 0
      pattern: "^[A-Z0-9_]+$"
      type: string
    LaunchProfilePlatform:
      enum:
      - LINUX
      - WINDOWS
      type: string
    LaunchProfileInitializationScriptList:
      items:
        $ref: '#/components/schemas/LaunchProfileInitializationScript'
      type: array
    StudioComponentId:
      maxLength: 22
      minLength: 0
      pattern: "^[a-zA-Z0-9-_]*$"
      type: string
    StudioComponentInitializationScriptContent:
      format: password
      maxLength: 5120
      minLength: 1
      type: string
    LaunchProfileInitializationScript:
      description: The launch profile initialization script is used when start streaming
        session runs.
      properties:
        runtimeRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: 'An IAM role attached to a Studio Component that gives the
              studio component access to Amazon Web Services resources at anytime
              while the instance is running. '
        script:
          allOf:
          - $ref: '#/components/schemas/StudioComponentInitializationScriptContent'
          - description: The initialization script.
        secureInitializationRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: An IAM role attached to Studio Component when the system
              initialization script runs which give the studio component access to
              Amazon Web Services resources when the system initialization script
              runs.
        studioComponentId:
          allOf:
          - $ref: '#/components/schemas/StudioComponentId'
          - description: The unique identifier for a studio component resource.
        studioComponentName:
          allOf:
          - $ref: '#/components/schemas/StudioComponentName'
          - description: The name for the studio component.
      type: object
    LaunchProfileList:
      items:
        $ref: '#/components/schemas/LaunchProfile'
      type: array
    LaunchProfilePersona:
      enum:
      - USER
      type: string
    LaunchProfileMembershipList:
      items:
        $ref: '#/components/schemas/LaunchProfileMembership'
      maxItems: 20
      minItems: 0
      type: array
    LaunchProfileStateList:
      items:
        $ref: '#/components/schemas/LaunchProfileState'
      type: array
    LaunchProfileValidationState:
      enum:
      - VALIDATION_NOT_STARTED
      - VALIDATION_IN_PROGRESS
      - VALIDATION_SUCCESS
      - VALIDATION_FAILED
      - VALIDATION_FAILED_INTERNAL_SERVER_ERROR
      type: string
    LaunchProfileValidationStatusCode:
      enum:
      - VALIDATION_NOT_STARTED
      - VALIDATION_IN_PROGRESS
      - VALIDATION_SUCCESS
      - VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION
      - VALIDATION_FAILED_SUBNET_NOT_FOUND
      - VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION
      - VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY
      - VALIDATION_FAILED_UNAUTHORIZED
      - VALIDATION_FAILED_INTERNAL_SERVER_ERROR
      type: string
    LaunchProfileValidationStatusMessage:
      type: string
    LaunchProfileValidationType:
      enum:
      - VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT
      - VALIDATE_SUBNET_ASSOCIATION
      - VALIDATE_NETWORK_ACL_ASSOCIATION
      - VALIDATE_SECURITY_GROUP_ASSOCIATION
      type: string
    LinuxMountPoint:
      format: password
      maxLength: 128
      minLength: 0
      pattern: "^(/?|(\\$HOME)?(/[^/\\n\\s\\\\]+)*)$"
      type: string
    ListEulaAcceptancesRequest:
      properties: {}
      title: ListEulaAcceptancesRequest
      type: object
    ListEulasRequest:
      properties: {}
      title: ListEulasRequest
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListLaunchProfileMembersRequest:
      properties: {}
      title: ListLaunchProfileMembersRequest
      type: object
    ListLaunchProfilesRequest:
      properties: {}
      title: ListLaunchProfilesRequest
      type: object
    ListStreamingImagesRequest:
      properties: {}
      title: ListStreamingImagesRequest
      type: object
    ListStreamingSessionBackupsRequest:
      properties: {}
      title: ListStreamingSessionBackupsRequest
      type: object
    StreamingSessionBackupList:
      items:
        $ref: '#/components/schemas/StreamingSessionBackup'
      type: array
    ListStreamingSessionsRequest:
      properties: {}
      title: ListStreamingSessionsRequest
      type: object
    StreamingSessionList:
      items:
        $ref: '#/components/schemas/StreamingSession'
      type: array
    StudioComponentStateList:
      items:
        $ref: '#/components/schemas/StudioComponentState'
      type: array
    StudioComponentTypeList:
      items:
        $ref: '#/components/schemas/StudioComponentType'
      type: array
    ListStudioComponentsRequest:
      properties: {}
      title: ListStudioComponentsRequest
      type: object
    StudioComponentList:
      items:
        $ref: '#/components/schemas/StudioComponent'
      maxItems: 50
      minItems: 0
      type: array
    ListStudioMembersRequest:
      properties: {}
      title: ListStudioMembersRequest
      type: object
    StudioMembershipList:
      items:
        $ref: '#/components/schemas/StudioMembership'
      maxItems: 20
      minItems: 0
      type: array
    ListStudiosRequest:
      properties: {}
      title: ListStudiosRequest
      type: object
    StudioList:
      items:
        $ref: '#/components/schemas/Studio'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    NewLaunchProfileMemberList:
      items:
        $ref: '#/components/schemas/NewLaunchProfileMember'
      maxItems: 20
      minItems: 1
      type: array
    StudioPersona:
      enum:
      - ADMINISTRATOR
      type: string
    NewStudioMemberList:
      items:
        $ref: '#/components/schemas/NewStudioMember'
      maxItems: 20
      minItems: 1
      type: array
    PutLaunchProfileMembersRequest:
      example:
        members: ""
        identityStoreId: ""
      properties:
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the identity store.
        members:
          allOf:
          - $ref: '#/components/schemas/NewLaunchProfileMemberList'
          - description: A list of members.
      required:
      - identityStoreId
      - members
      title: PutLaunchProfileMembersRequest
      type: object
    PutStudioMembersRequest:
      example:
        members: ""
        identityStoreId: ""
      properties:
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the identity store.
        members:
          allOf:
          - $ref: '#/components/schemas/NewStudioMemberList'
          - description: A list of members.
      required:
      - identityStoreId
      - members
      title: PutStudioMembersRequest
      type: object
    Region:
      maxLength: 50
      minLength: 0
      pattern: "[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]"
      type: string
    ScriptParameterKey:
      description: A script parameter key.
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z_][a-zA-Z0-9_]+$"
      type: string
    ScriptParameterValue:
      description: A script parameter value.
      maxLength: 256
      minLength: 1
      type: string
    SessionBackupMode:
      enum:
      - AUTOMATIC
      - DEACTIVATED
      type: string
    WindowsMountDrive:
      pattern: "^[A-Z]$"
      type: string
    StartStreamingSessionRequest:
      example:
        backupId: ""
      properties:
        backupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the backup.
      title: StartStreamingSessionRequest
      type: object
    StartStudioSSOConfigurationRepairRequest:
      properties: {}
      title: StartStudioSSOConfigurationRepairRequest
      type: object
    VolumeRetentionMode:
      enum:
      - RETAIN
      - DELETE
      type: string
    StopStreamingSessionRequest:
      example:
        volumeRetentionMode: ""
      properties:
        volumeRetentionMode:
          allOf:
          - $ref: '#/components/schemas/VolumeRetentionMode'
          - description: Adds additional instructions to a streaming session stop
              action to either retain the EBS volumes or delete the EBS volumes.
      title: StopStreamingSessionRequest
      type: object
    StreamConfigurationMaxBackupsToRetain:
      maximum: 10
      minimum: 0
      type: integer
    StreamingSessionStorageModeList:
      items:
        $ref: '#/components/schemas/StreamingSessionStorageMode'
      minItems: 1
      type: array
    StreamingSessionStorageRoot:
      description: The upload storage root location (folder) on streaming workstations
        where files are uploaded.
      properties:
        linux:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionStorageRootPathLinux'
          - description: The folder path in Linux workstations where files are uploaded.
        windows:
          allOf:
          - $ref: '#/components/schemas/StreamingSessionStorageRootPathWindows'
          - description: The folder path in Windows workstations where files are uploaded.
      type: object
    StreamingImageEncryptionConfiguration:
      description: Specifies how a streaming image is encrypted.
      properties:
        keyArn:
          allOf:
          - $ref: '#/components/schemas/StreamingImageEncryptionConfigurationKeyArn'
          - description: The ARN for a KMS key that is used to encrypt studio data.
        keyType:
          allOf:
          - $ref: '#/components/schemas/StreamingImageEncryptionConfigurationKeyType'
          - description: The type of KMS key that is used to encrypt studio data.
      required:
      - keyType
      type: object
    StreamingImageOwner:
      description: "<p>StreamingImageOwner is the owner of a particular streaming\
        \ image.</p> <p>This string is either the studioId that contains the streaming\
        \ image, or the word <code>AMAZON</code> for images provided by Nimble Studio.</p>"
      type: string
    StreamingImagePlatform:
      description: "The platform of this streaming image, either Windows or Linux."
      pattern: "^[a-zA-Z]*$"
      type: string
    StreamingImageState:
      enum:
      - CREATE_IN_PROGRESS
      - READY
      - DELETE_IN_PROGRESS
      - DELETED
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
      - CREATE_FAILED
      - DELETE_FAILED
      type: string
    StreamingImageStatusCode:
      description: The status code.
      enum:
      - STREAMING_IMAGE_CREATE_IN_PROGRESS
      - STREAMING_IMAGE_READY
      - STREAMING_IMAGE_DELETE_IN_PROGRESS
      - STREAMING_IMAGE_DELETED
      - STREAMING_IMAGE_UPDATE_IN_PROGRESS
      - INTERNAL_ERROR
      - ACCESS_DENIED
      type: string
    StreamingImageEncryptionConfigurationKeyArn:
      minLength: 4
      pattern: ^arn:.*
      type: string
    StreamingImageEncryptionConfigurationKeyType:
      enum:
      - CUSTOMER_MANAGED_KEY
      type: string
    StreamingSessionId:
      type: string
    StreamingSessionState:
      description: The streaming session state.
      enum:
      - CREATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - READY
      - DELETED
      - CREATE_FAILED
      - DELETE_FAILED
      - STOP_IN_PROGRESS
      - START_IN_PROGRESS
      - STOPPED
      - STOP_FAILED
      - START_FAILED
      type: string
    StreamingSessionStatusCode:
      enum:
      - STREAMING_SESSION_READY
      - STREAMING_SESSION_DELETED
      - STREAMING_SESSION_CREATE_IN_PROGRESS
      - STREAMING_SESSION_DELETE_IN_PROGRESS
      - INTERNAL_ERROR
      - INSUFFICIENT_CAPACITY
      - ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR
      - NETWORK_CONNECTION_ERROR
      - INITIALIZATION_SCRIPT_ERROR
      - DECRYPT_STREAMING_IMAGE_ERROR
      - NETWORK_INTERFACE_ERROR
      - STREAMING_SESSION_STOPPED
      - STREAMING_SESSION_STARTED
      - STREAMING_SESSION_STOP_IN_PROGRESS
      - STREAMING_SESSION_START_IN_PROGRESS
      - AMI_VALIDATION_ERROR
      type: string
    StreamingSessionStorageMode:
      enum:
      - UPLOAD
      type: string
    StreamingSessionStorageRootPathLinux:
      format: password
      maxLength: 128
      minLength: 1
      pattern: "^(\\$HOME|/)[/]?([A-Za-z0-9-_]+/)*([A-Za-z0-9_-]+)$"
      type: string
    StreamingSessionStorageRootPathWindows:
      format: password
      maxLength: 128
      minLength: 1
      pattern: "^((\\%HOMEPATH\\%)|[a-zA-Z]:)[\\\\/](?:[a-zA-Z0-9_-]+[\\\\/])*[a-zA-Z0-9_-]+$"
      type: string
    StreamingSessionStreamState:
      enum:
      - READY
      - CREATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - DELETED
      - CREATE_FAILED
      - DELETE_FAILED
      type: string
    StreamingSessionStreamStatusCode:
      enum:
      - STREAM_CREATE_IN_PROGRESS
      - STREAM_READY
      - STREAM_DELETE_IN_PROGRESS
      - STREAM_DELETED
      - INTERNAL_ERROR
      - NETWORK_CONNECTION_ERROR
      type: string
    StudioState:
      enum:
      - CREATE_IN_PROGRESS
      - READY
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - DELETED
      - DELETE_FAILED
      - CREATE_FAILED
      - UPDATE_FAILED
      type: string
    StudioStatusCode:
      description: The status code.
      enum:
      - STUDIO_CREATED
      - STUDIO_DELETED
      - STUDIO_UPDATED
      - STUDIO_CREATE_IN_PROGRESS
      - STUDIO_UPDATE_IN_PROGRESS
      - STUDIO_DELETE_IN_PROGRESS
      - STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED
      - STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED
      - STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED
      - AWS_SSO_NOT_ENABLED
      - AWS_SSO_ACCESS_DENIED
      - ROLE_NOT_OWNED_BY_STUDIO_OWNER
      - ROLE_COULD_NOT_BE_ASSUMED
      - INTERNAL_ERROR
      - ENCRYPTION_KEY_NOT_FOUND
      - ENCRYPTION_KEY_ACCESS_DENIED
      - AWS_SSO_CONFIGURATION_REPAIRED
      - AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS
      - AWS_STS_REGION_DISABLED
      type: string
    StudioComponentStatusCode:
      description: "<p>The current status of the studio component resource.</p> <p>When\
        \ the resource is in the <code>READY</code> state, the status code signals\
        \ what the last mutation made to the resource was.</p> <p>When the resource\
        \ is in a <code>CREATE_FAILED</code>, <code>UPDATE_FAILED</code>, or <code>DELETE_FAILED</code>\
        \ state, the status code signals what went wrong and why the mutation failed.</p>"
      enum:
      - ACTIVE_DIRECTORY_ALREADY_EXISTS
      - STUDIO_COMPONENT_CREATED
      - STUDIO_COMPONENT_UPDATED
      - STUDIO_COMPONENT_DELETED
      - ENCRYPTION_KEY_ACCESS_DENIED
      - ENCRYPTION_KEY_NOT_FOUND
      - STUDIO_COMPONENT_CREATE_IN_PROGRESS
      - STUDIO_COMPONENT_UPDATE_IN_PROGRESS
      - STUDIO_COMPONENT_DELETE_IN_PROGRESS
      - INTERNAL_ERROR
      type: string
    StudioComponentInitializationScriptRunContext:
      enum:
      - SYSTEM_INITIALIZATION
      - USER_INITIALIZATION
      type: string
    StudioComponentSummary:
      description: The studio component's summary.
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that created the studio component.
        description:
          allOf:
          - $ref: '#/components/schemas/StudioComponentDescription'
          - description: The description.
        name:
          allOf:
          - $ref: '#/components/schemas/StudioComponentName'
          - description: The name for the studio component.
        studioComponentId:
          allOf:
          - $ref: '#/components/schemas/StudioComponentId'
          - description: The unique identifier for a studio component resource.
        subtype:
          allOf:
          - $ref: '#/components/schemas/StudioComponentSubtype'
          - description: The specific subtype of a studio component.
        type:
          allOf:
          - $ref: '#/components/schemas/StudioComponentType'
          - description: The type of the studio component.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The ISO timestamp in seconds for when the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user ID of the user that most recently updated the resource.
      type: object
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "A collection of labels, in the form of key-value pairs,\
              \ that apply to this resource."
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateLaunchProfileMemberRequest:
      example:
        persona: ""
      properties:
        persona:
          allOf:
          - $ref: '#/components/schemas/LaunchProfilePersona'
          - description: The persona.
      required:
      - persona
      title: UpdateLaunchProfileMemberRequest
      type: object
    UpdateLaunchProfileRequest:
      example:
        studioComponentIds: ""
        launchProfileProtocolVersions: ""
        name: ""
        description: ""
        streamConfiguration:
          automaticTerminationMode: ""
          volumeConfiguration:
            size: ""
            iops: ""
            throughput: ""
          clipboardMode: ""
          ec2InstanceTypes: ""
          sessionStorage:
            mode: ""
            root:
              linux: ""
              windows: ""
          streamingImageIds: ""
          maxSessionLengthInMinutes: ""
          sessionBackup:
            mode: ""
            maxBackupsToRetain: ""
          maxStoppedSessionLengthInMinutes: ""
          sessionPersistenceMode: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileDescription'
          - description: The description.
        launchProfileProtocolVersions:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileProtocolVersionList'
          - description: The version number of the protocol that is used by the launch
              profile. The only valid version is "2021-03-31".
        name:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileName'
          - description: The name for the launch profile.
        streamConfiguration:
          $ref: '#/components/schemas/CreateLaunchProfileRequest_streamConfiguration'
        studioComponentIds:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileStudioComponentIdList'
          - description: Unique identifiers for a collection of studio components
              that can be used with this launch profile.
      title: UpdateLaunchProfileRequest
      type: object
    UpdateStreamingImageRequest:
      example:
        name: ""
        description: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/StreamingImageDescription'
          - description: The description.
        name:
          allOf:
          - $ref: '#/components/schemas/StreamingImageName'
          - description: The name for the streaming image.
      title: UpdateStreamingImageRequest
      type: object
    UpdateStudioComponentRequest:
      example:
        initializationScripts: ""
        scriptParameters: ""
        runtimeRoleArn: ""
        configuration:
          licenseServiceConfiguration:
            endpoint: ""
          activeDirectoryConfiguration:
            computerAttributes: ""
            directoryId: ""
            organizationalUnitDistinguishedName: ""
          computeFarmConfiguration:
            activeDirectoryUser: ""
            endpoint: ""
          sharedFileSystemConfiguration:
            windowsMountDrive: ""
            endpoint: ""
            fileSystemId: ""
            linuxMountPoint: ""
            shareName: ""
        subtype: ""
        name: ""
        description: ""
        ec2SecurityGroupIds: ""
        secureInitializationRoleArn: ""
        type: ""
      properties:
        configuration:
          $ref: '#/components/schemas/CreateStudioComponentRequest_configuration'
        description:
          allOf:
          - $ref: '#/components/schemas/StudioComponentDescription'
          - description: The description.
        ec2SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StudioComponentSecurityGroupIdList'
          - description: The EC2 security groups that control access to the studio
              component.
        initializationScripts:
          allOf:
          - $ref: '#/components/schemas/StudioComponentInitializationScriptList'
          - description: Initialization scripts for studio components.
        name:
          allOf:
          - $ref: '#/components/schemas/StudioComponentName'
          - description: The name for the studio component.
        runtimeRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: 'An IAM role attached to a Studio Component that gives the
              studio component access to Amazon Web Services resources at anytime
              while the instance is running. '
        scriptParameters:
          allOf:
          - $ref: '#/components/schemas/StudioComponentScriptParameterKeyValueList'
          - description: Parameters for the studio component scripts.
        secureInitializationRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: An IAM role attached to Studio Component when the system
              initialization script runs which give the studio component access to
              Amazon Web Services resources when the system initialization script
              runs.
        subtype:
          allOf:
          - $ref: '#/components/schemas/StudioComponentSubtype'
          - description: The specific subtype of a studio component.
        type:
          allOf:
          - $ref: '#/components/schemas/StudioComponentType'
          - description: The type of the studio component.
      title: UpdateStudioComponentRequest
      type: object
    UpdateStudioRequest:
      example:
        displayName: ""
        adminRoleArn: ""
        userRoleArn: ""
      properties:
        adminRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The IAM role that Studio Admins will assume when logging
              in to the Nimble Studio portal.
        displayName:
          allOf:
          - $ref: '#/components/schemas/StudioDisplayName'
          - description: A friendly name for the studio.
        userRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The IAM role that Studio Users will assume when logging in
              to the Nimble Studio portal.
      title: UpdateStudioRequest
      type: object
    ValidationResult:
      description: The launch profile validation result.
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileValidationState'
          - description: The current state.
        statusCode:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileValidationStatusCode'
          - description: The status code. This will contain the failure reason if
              the state is <code>VALIDATION_FAILED</code>.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileValidationStatusMessage'
          - description: The status message for the validation result.
        type:
          allOf:
          - $ref: '#/components/schemas/LaunchProfileValidationType'
          - description: The type of the validation result.
      required:
      - state
      - statusCode
      - statusMessage
      - type
      type: object
    VolumeIops:
      maximum: 16000
      minimum: 3000
      type: integer
    VolumeSizeInGiB:
      maximum: 16000
      minimum: 100
      type: integer
    VolumeThroughputInMiBs:
      maximum: 1000
      minimum: 125
      type: integer
    AcceptEulas_request:
      properties:
        eulaIds:
          description: The EULA ID.
          items:
            $ref: '#/components/schemas/String'
          type: array
      type: object
    CreateLaunchProfile_request_streamConfiguration_sessionBackup:
      allOf:
      - $ref: '#/components/schemas/StreamConfigurationSessionBackup'
      - description: Configures how streaming sessions are backed up when launched
          from this launch profile.
      example:
        mode: ""
        maxBackupsToRetain: ""
    CreateLaunchProfile_request_streamConfiguration_sessionStorage:
      allOf:
      - $ref: '#/components/schemas/StreamConfigurationSessionStorage'
      - description: The upload storage for a streaming workstation that is created
          using this launch profile.
      example:
        mode: ""
        root:
          linux: ""
          windows: ""
    CreateLaunchProfile_request_streamConfiguration_volumeConfiguration:
      allOf:
      - $ref: '#/components/schemas/VolumeConfiguration'
      - description: <p>Custom volume configuration for the root volumes that are
          attached to streaming sessions.</p> <p>This parameter is only allowed when
          <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.</p>
      example:
        size: ""
        iops: ""
        throughput: ""
    CreateLaunchProfile_request_streamConfiguration:
      description: Configuration for streaming workstations created using this launch
        profile.
      properties:
        automaticTerminationMode:
          allOf:
          - $ref: '#/components/schemas/AutomaticTerminationMode'
          - description: "<p>Indicates if a streaming session created from this launch\
              \ profile should be terminated automatically or retained without termination\
              \ after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When\
              \ <code>ACTIVATED</code>, the streaming session is scheduled for termination\
              \ after being in the <code>STOPPED</code> state for the time specified\
              \ in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When\
              \ <code>DEACTIVATED</code>, the streaming session can remain in the\
              \ <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter\
              \ is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.\
              \ When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>"
        clipboardMode:
          allOf:
          - $ref: '#/components/schemas/StreamingClipboardMode'
          - description: Allows or deactivates the use of the system clipboard to
              copy and paste between the streaming session and streaming client.
        ec2InstanceTypes:
          allOf:
          - $ref: '#/components/schemas/StreamingInstanceTypeList'
          - description: The EC2 instance types that users can select from when launching
              a streaming session with this launch profile.
        maxSessionLengthInMinutes:
          allOf:
          - $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'
          - description: "The length of time, in minutes, that a streaming session\
              \ can be active before it is stopped or terminated. After this point,\
              \ Nimble Studio automatically terminates or stops the session. The default\
              \ length of time is 690 minutes, and the maximum length of time is 30\
              \ days."
        maxStoppedSessionLengthInMinutes:
          allOf:
          - $ref: '#/components/schemas/StreamConfigurationMaxStoppedSessionLengthInMinutes'
          - description: "<p>Integer that determines if you can start and stop your\
              \ sessions and how long a session can stay in the <code>STOPPED</code>\
              \ state. The default value is 0. The maximum value is 5760.</p> <p>This\
              \ field is allowed only when <code>sessionPersistenceMode</code> is\
              \ <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is\
              \ <code>ACTIVATED</code>.</p> <p>If the value is set to 0, your sessions\
              \ canâ€™t be <code>STOPPED</code>. If you then call <code>StopStreamingSession</code>,\
              \ the session fails. If the time that a session stays in the <code>READY</code>\
              \ state exceeds the <code>maxSessionLengthInMinutes</code> value, the\
              \ session will automatically be terminated (instead of <code>STOPPED</code>).</p>\
              \ <p>If the value is set to a positive number, the session can be stopped.\
              \ You can call <code>StopStreamingSession</code> to stop sessions in\
              \ the <code>READY</code> state. If the time that a session stays in\
              \ the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code>\
              \ value, the session will automatically be stopped (instead of terminated).</p>"
        sessionBackup:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration_sessionBackup'
        sessionPersistenceMode:
          allOf:
          - $ref: '#/components/schemas/SessionPersistenceMode'
          - description: Determine if a streaming session created from this launch
              profile can configure persistent storage. This means that <code>volumeConfiguration</code>
              and <code>automaticTerminationMode</code> are configured.
        sessionStorage:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration_sessionStorage'
        streamingImageIds:
          allOf:
          - $ref: '#/components/schemas/StreamingImageIdList'
          - description: The streaming images that users can select from when launching
              a streaming session with this launch profile.
        volumeConfiguration:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration_volumeConfiguration'
      type: object
    CreateLaunchProfile_request:
      properties:
        description:
          description: A human-readable description of the launch profile.
          format: password
          maxLength: 256
          minLength: 0
          type: string
        ec2SubnetIds:
          description: 'Specifies the IDs of the EC2 subnets where streaming sessions
            will be accessible from. These subnets must support the specified instance
            types. '
          items:
            $ref: '#/components/schemas/EC2SubnetId'
          maxItems: 6
          minItems: 0
          type: array
        launchProfileProtocolVersions:
          description: The version number of the protocol that is used by the launch
            profile. The only valid version is "2021-03-31".
          items:
            $ref: '#/components/schemas/LaunchProfileProtocolVersion'
          type: array
        name:
          description: The name for the launch profile.
          format: password
          maxLength: 64
          minLength: 1
          type: string
        streamConfiguration:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration'
        studioComponentIds:
          description: Unique identifiers for a collection of studio components that
            can be used with this launch profile.
          items:
            $ref: '#/components/schemas/String'
          maxItems: 100
          minItems: 1
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: "A collection of labels, in the form of key-value pairs, that\
            \ apply to this resource."
          type: object
      required:
      - ec2SubnetIds
      - launchProfileProtocolVersions
      - name
      - streamConfiguration
      - studioComponentIds
      type: object
    CreateStreamingImage_request:
      properties:
        description:
          description: The description.
          format: password
          maxLength: 256
          minLength: 0
          type: string
        ec2ImageId:
          description: The ID of an EC2 machine image with which to create this streaming
            image.
          pattern: "^ami-[0-9A-z]+$"
          type: string
        name:
          description: A friendly name for a streaming image resource.
          format: password
          maxLength: 64
          minLength: 0
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: "A collection of labels, in the form of key-value pairs, that\
            \ apply to this resource."
          type: object
      required:
      - ec2ImageId
      - name
      type: object
    CreateStreamingSession_request:
      properties:
        ec2InstanceType:
          description: The EC2 Instance type used for the streaming session.
          enum:
          - g4dn.xlarge
          - g4dn.2xlarge
          - g4dn.4xlarge
          - g4dn.8xlarge
          - g4dn.12xlarge
          - g4dn.16xlarge
          - g3.4xlarge
          - g3s.xlarge
          - g5.xlarge
          - g5.2xlarge
          - g5.4xlarge
          - g5.8xlarge
          - g5.16xlarge
          type: string
        launchProfileId:
          description: The ID of the launch profile used to control access from the
            streaming session.
          type: string
        ownedBy:
          description: The user ID of the user that owns the streaming session. The
            user that owns the session will be logging into the session and interacting
            with the virtual workstation.
          type: string
        streamingImageId:
          description: The ID of the streaming image.
          maxLength: 22
          minLength: 0
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: "A collection of labels, in the form of key-value pairs, that\
            \ apply to this resource."
          type: object
      required:
      - launchProfileId
      type: object
    CreateStreamingSessionStream_request:
      properties:
        expirationInSeconds:
          description: The expiration time in seconds.
          maximum: 3600
          minimum: 60
          type: integer
      type: object
    CreateStudio_request_studioEncryptionConfiguration:
      description: Configuration of the encryption method that is used for the studio.
      properties:
        keyArn:
          allOf:
          - $ref: '#/components/schemas/StudioEncryptionConfigurationKeyArn'
          - description: The ARN for a KMS key that is used to encrypt studio data.
        keyType:
          allOf:
          - $ref: '#/components/schemas/StudioEncryptionConfigurationKeyType'
          - description: The type of KMS key that is used to encrypt studio data.
      type: object
    CreateStudio_request:
      properties:
        adminRoleArn:
          description: The IAM role that studio admins will assume when logging in
            to the Nimble Studio portal.
          maxLength: 2048
          minLength: 0
          type: string
        displayName:
          description: A friendly name for the studio.
          format: password
          maxLength: 64
          minLength: 0
          type: string
        studioEncryptionConfiguration:
          $ref: '#/components/schemas/CreateStudio_request_studioEncryptionConfiguration'
        studioName:
          description: The studio name that is used in the URL of the Nimble Studio
            portal when accessed by Nimble Studio users.
          maxLength: 64
          minLength: 3
          pattern: "^[a-z0-9]*$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: "A collection of labels, in the form of key-value pairs, that\
            \ apply to this resource."
          type: object
        userRoleArn:
          description: The IAM role that studio users will assume when logging in
            to the Nimble Studio portal.
          maxLength: 2048
          minLength: 0
          type: string
      required:
      - adminRoleArn
      - displayName
      - studioName
      - userRoleArn
      type: object
    CreateStudioComponent_request_configuration_activeDirectoryConfiguration:
      allOf:
      - $ref: '#/components/schemas/ActiveDirectoryConfiguration'
      - description: The configuration for a Directory Service for Microsoft Active
          Directory studio resource.
      example:
        computerAttributes: ""
        directoryId: ""
        organizationalUnitDistinguishedName: ""
    CreateStudioComponent_request_configuration_computeFarmConfiguration:
      allOf:
      - $ref: '#/components/schemas/ComputeFarmConfiguration'
      - description: The configuration for a render farm that is associated with a
          studio resource.
      example:
        activeDirectoryUser: ""
        endpoint: ""
    CreateStudioComponent_request_configuration_licenseServiceConfiguration:
      allOf:
      - $ref: '#/components/schemas/LicenseServiceConfiguration'
      - description: The configuration for a license service that is associated with
          a studio resource.
      example:
        endpoint: ""
    CreateStudioComponent_request_configuration_sharedFileSystemConfiguration:
      allOf:
      - $ref: '#/components/schemas/SharedFileSystemConfiguration'
      - description: The configuration for a shared file storage system that is associated
          with a studio resource.
      example:
        windowsMountDrive: ""
        endpoint: ""
        fileSystemId: ""
        linuxMountPoint: ""
        shareName: ""
    CreateStudioComponent_request_configuration:
      description: "The configuration of the studio component, based on component\
        \ type."
      properties:
        activeDirectoryConfiguration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration_activeDirectoryConfiguration'
        computeFarmConfiguration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration_computeFarmConfiguration'
        licenseServiceConfiguration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration_licenseServiceConfiguration'
        sharedFileSystemConfiguration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration_sharedFileSystemConfiguration'
      type: object
    CreateStudioComponent_request:
      properties:
        configuration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration'
        description:
          description: The description.
          format: password
          maxLength: 256
          minLength: 0
          type: string
        ec2SecurityGroupIds:
          description: The EC2 security groups that control access to the studio component.
          items:
            $ref: '#/components/schemas/SecurityGroupId'
          maxItems: 30
          minItems: 0
          type: array
        initializationScripts:
          description: Initialization scripts for studio components.
          items:
            $ref: '#/components/schemas/StudioComponentInitializationScript'
          type: array
        name:
          description: The name for the studio component.
          format: password
          maxLength: 64
          minLength: 0
          type: string
        runtimeRoleArn:
          description: 'An IAM role attached to a Studio Component that gives the
            studio component access to Amazon Web Services resources at anytime while
            the instance is running. '
          maxLength: 2048
          minLength: 0
          type: string
        scriptParameters:
          description: Parameters for the studio component scripts.
          items:
            $ref: '#/components/schemas/ScriptParameterKeyValue'
          maxItems: 30
          minItems: 0
          type: array
        secureInitializationRoleArn:
          description: An IAM role attached to Studio Component when the system initialization
            script runs which give the studio component access to Amazon Web Services
            resources when the system initialization script runs.
          maxLength: 2048
          minLength: 0
          type: string
        subtype:
          description: The specific subtype of a studio component.
          enum:
          - AWS_MANAGED_MICROSOFT_AD
          - AMAZON_FSX_FOR_WINDOWS
          - AMAZON_FSX_FOR_LUSTRE
          - CUSTOM
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: "A collection of labels, in the form of key-value pairs, that\
            \ apply to this resource."
          type: object
        type:
          description: The type of the studio component.
          enum:
          - ACTIVE_DIRECTORY
          - SHARED_FILE_SYSTEM
          - COMPUTE_FARM
          - LICENSE_SERVICE
          - CUSTOM
          type: string
      required:
      - name
      - type
      type: object
    UpdateLaunchProfile_request:
      properties:
        description:
          description: A human-readable description of the launch profile.
          format: password
          maxLength: 256
          minLength: 0
          type: string
        launchProfileProtocolVersions:
          description: The version number of the protocol that is used by the launch
            profile. The only valid version is "2021-03-31".
          items:
            $ref: '#/components/schemas/LaunchProfileProtocolVersion'
          type: array
        name:
          description: The name for the launch profile.
          format: password
          maxLength: 64
          minLength: 1
          type: string
        streamConfiguration:
          $ref: '#/components/schemas/CreateLaunchProfile_request_streamConfiguration'
        studioComponentIds:
          description: Unique identifiers for a collection of studio components that
            can be used with this launch profile.
          items:
            $ref: '#/components/schemas/String'
          maxItems: 100
          minItems: 1
          type: array
      type: object
    UpdateLaunchProfileMember_request:
      properties:
        persona:
          description: The persona.
          enum:
          - USER
          type: string
      required:
      - persona
      type: object
    UpdateStreamingImage_request:
      properties:
        description:
          description: The description.
          format: password
          maxLength: 256
          minLength: 0
          type: string
        name:
          description: A friendly name for a streaming image resource.
          format: password
          maxLength: 64
          minLength: 0
          type: string
      type: object
    UpdateStudio_request:
      properties:
        adminRoleArn:
          description: The IAM role that Studio Admins will assume when logging in
            to the Nimble Studio portal.
          maxLength: 2048
          minLength: 0
          type: string
        displayName:
          description: A friendly name for the studio.
          format: password
          maxLength: 64
          minLength: 0
          type: string
        userRoleArn:
          description: The IAM role that Studio Users will assume when logging in
            to the Nimble Studio portal.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    UpdateStudioComponent_request:
      properties:
        configuration:
          $ref: '#/components/schemas/CreateStudioComponent_request_configuration'
        description:
          description: The description.
          format: password
          maxLength: 256
          minLength: 0
          type: string
        ec2SecurityGroupIds:
          description: The EC2 security groups that control access to the studio component.
          items:
            $ref: '#/components/schemas/SecurityGroupId'
          maxItems: 30
          minItems: 0
          type: array
        initializationScripts:
          description: Initialization scripts for studio components.
          items:
            $ref: '#/components/schemas/StudioComponentInitializationScript'
          type: array
        name:
          description: The name for the studio component.
          format: password
          maxLength: 64
          minLength: 0
          type: string
        runtimeRoleArn:
          description: 'An IAM role attached to a Studio Component that gives the
            studio component access to Amazon Web Services resources at anytime while
            the instance is running. '
          maxLength: 2048
          minLength: 0
          type: string
        scriptParameters:
          description: Parameters for the studio component scripts.
          items:
            $ref: '#/components/schemas/ScriptParameterKeyValue'
          maxItems: 30
          minItems: 0
          type: array
        secureInitializationRoleArn:
          description: An IAM role attached to Studio Component when the system initialization
            script runs which give the studio component access to Amazon Web Services
            resources when the system initialization script runs.
          maxLength: 2048
          minLength: 0
          type: string
        subtype:
          description: The specific subtype of a studio component.
          enum:
          - AWS_MANAGED_MICROSOFT_AD
          - AMAZON_FSX_FOR_WINDOWS
          - AMAZON_FSX_FOR_LUSTRE
          - CUSTOM
          type: string
        type:
          description: The type of the studio component.
          enum:
          - ACTIVE_DIRECTORY
          - SHARED_FILE_SYSTEM
          - COMPUTE_FARM
          - LICENSE_SERVICE
          - CUSTOM
          type: string
      type: object
    PutLaunchProfileMembers_request:
      properties:
        identityStoreId:
          description: The ID of the identity store.
          type: string
        members:
          description: A list of members.
          items:
            $ref: '#/components/schemas/NewLaunchProfileMember'
          maxItems: 20
          minItems: 1
          type: array
      required:
      - identityStoreId
      - members
      type: object
    PutStudioMembers_request:
      properties:
        identityStoreId:
          description: The ID of the identity store.
          type: string
        members:
          description: A list of members.
          items:
            $ref: '#/components/schemas/NewStudioMember'
          maxItems: 20
          minItems: 1
          type: array
      required:
      - identityStoreId
      - members
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: "A collection of labels, in the form of key-value pairs, that\
            \ apply to this resource."
          type: object
      type: object
    StartStreamingSession_request:
      properties:
        backupId:
          description: The ID of the backup.
          type: string
      type: object
    StopStreamingSession_request:
      properties:
        volumeRetentionMode:
          description: Adds additional instructions to a streaming session stop action
            to either retain the EBS volumes or delete the EBS volumes.
          enum:
          - RETAIN
          - DELETE
          type: string
      type: object
    CreateLaunchProfileResponse_launchProfile:
      allOf:
      - $ref: '#/components/schemas/LaunchProfile'
      - description: The launch profile.
      example:
        studioComponentIds: ""
        updatedBy: ""
        description: ""
        launchProfileId: ""
        streamConfiguration:
          automaticTerminationMode: ""
          volumeConfiguration:
            size: ""
            iops: ""
            throughput: ""
          clipboardMode: ""
          ec2InstanceTypes: ""
          sessionStorage:
            mode: ""
            root:
              linux: ""
              windows: ""
          streamingImageIds: ""
          maxSessionLengthInMinutes: ""
          sessionBackup:
            mode: ""
            maxBackupsToRetain: ""
          maxStoppedSessionLengthInMinutes: ""
          sessionPersistenceMode: ""
        statusMessage: ""
        tags: ""
        createdAt: ""
        ec2SubnetIds: ""
        validationResults: ""
        createdBy: ""
        launchProfileProtocolVersions: ""
        name: ""
        state: ""
        arn: ""
        statusCode: ""
        updatedAt: ""
    StreamConfigurationSessionStorage_root:
      allOf:
      - $ref: '#/components/schemas/StreamingSessionStorageRoot'
      - description: The configuration for the upload storage root of the streaming
          session.
      example:
        linux: ""
        windows: ""
    CreateStreamingImageResponse_streamingImage:
      allOf:
      - $ref: '#/components/schemas/StreamingImage'
      - description: The streaming image.
      example:
        owner: ""
        eulaIds: ""
        description: ""
        platform: ""
        statusMessage: ""
        tags: ""
        streamingImageId: ""
        name: ""
        encryptionConfiguration:
          keyArn: ""
          keyType: ""
        ec2ImageId: ""
        state: ""
        arn: ""
        statusCode: ""
    CreateStreamingSessionResponse_session:
      allOf:
      - $ref: '#/components/schemas/StreamingSession'
      - description: The session.
      example:
        stopAt: ""
        maxBackupsToRetain: ""
        startedAt: ""
        volumeRetentionMode: ""
        terminateAt: ""
        createdAt: ""
        backupMode: ""
        stoppedBy: ""
        state: ""
        arn: ""
        updatedAt: ""
        volumeConfiguration:
          size: ""
          iops: ""
          throughput: ""
        ec2InstanceType: ""
        updatedBy: ""
        startedFromBackupId: ""
        startedBy: ""
        sessionId: ""
        launchProfileId: ""
        sessionPersistenceMode: ""
        statusMessage: ""
        tags: ""
        automaticTerminationMode: ""
        stoppedAt: ""
        streamingImageId: ""
        createdBy: ""
        ownedBy: ""
        statusCode: ""
    CreateStreamingSessionStreamResponse_stream:
      allOf:
      - $ref: '#/components/schemas/StreamingSessionStream'
      - description: The stream.
      example:
        createdAt: ""
        streamId: ""
        createdBy: ""
        state: ""
        ownedBy: ""
        expiresAt: ""
        url: ""
        statusCode: ""
    CreateStudioResponse_studio:
      allOf:
      - $ref: '#/components/schemas/Studio'
      - description: Information about a studio.
      example:
        studioEncryptionConfiguration:
          keyArn: ""
          keyType: ""
        studioId: ""
        displayName: ""
        studioUrl: ""
        studioName: ""
        statusMessage: ""
        tags: ""
        userRoleArn: ""
        ssoClientId: ""
        createdAt: ""
        homeRegion: ""
        state: ""
        arn: ""
        adminRoleArn: ""
        statusCode: ""
        updatedAt: ""
    CreateStudioComponentResponse_studioComponent:
      allOf:
      - $ref: '#/components/schemas/StudioComponent'
      - description: Information about the studio component.
      example:
        updatedBy: ""
        configuration:
          licenseServiceConfiguration:
            endpoint: ""
          activeDirectoryConfiguration:
            computerAttributes: ""
            directoryId: ""
            organizationalUnitDistinguishedName: ""
          computeFarmConfiguration:
            activeDirectoryUser: ""
            endpoint: ""
          sharedFileSystemConfiguration:
            windowsMountDrive: ""
            endpoint: ""
            fileSystemId: ""
            linuxMountPoint: ""
            shareName: ""
        description: ""
        ec2SecurityGroupIds: ""
        secureInitializationRoleArn: ""
        type: ""
        statusMessage: ""
        tags: ""
        initializationScripts: ""
        scriptParameters: ""
        createdAt: ""
        runtimeRoleArn: ""
        createdBy: ""
        subtype: ""
        name: ""
        studioComponentId: ""
        state: ""
        arn: ""
        statusCode: ""
        updatedAt: ""
    GetEulaResponse_eula:
      allOf:
      - $ref: '#/components/schemas/Eula'
      - description: The EULA.
      example:
        createdAt: ""
        name: ""
        eulaId: ""
        content: ""
        updatedAt: ""
    GetLaunchProfileInitializationResponse_launchProfileInitialization:
      allOf:
      - $ref: '#/components/schemas/LaunchProfileInitialization'
      - description: The launch profile initialization.
      example:
        launchProfileProtocolVersion: ""
        userInitializationScripts: ""
        name: ""
        ec2SecurityGroupIds: ""
        launchPurpose: ""
        launchProfileId: ""
        systemInitializationScripts: ""
        activeDirectory:
          dnsIpAddresses: ""
          computerAttributes: ""
          studioComponentId: ""
          directoryId: ""
          organizationalUnitDistinguishedName: ""
          directoryName: ""
          studioComponentName: ""
        platform: ""
    GetLaunchProfileMemberResponse_member:
      allOf:
      - $ref: '#/components/schemas/LaunchProfileMembership'
      - description: The member.
      example:
        persona: ""
        principalId: ""
        identityStoreId: ""
        sid: ""
    GetStreamingSessionBackupResponse_streamingSessionBackup:
      allOf:
      - $ref: '#/components/schemas/StreamingSessionBackup'
      - description: Information about the streaming session backup.
      example:
        createdAt: ""
        backupId: ""
        sessionId: ""
        state: CREATE_IN_PROGRESS
        arn: ""
        launchProfileId: ""
        ownedBy: ""
        statusMessage: ""
        statusCode: ""
        tags: ""
    GetStudioMemberResponse_member:
      allOf:
      - $ref: '#/components/schemas/StudioMembership'
      - description: The member.
      example:
        persona: ""
        principalId: ""
        identityStoreId: ""
        sid: ""
    UpdateLaunchProfileMemberResponse_member:
      allOf:
      - $ref: '#/components/schemas/LaunchProfileMembership'
      - description: 'The updated member. '
      example:
        persona: ""
        principalId: ""
        identityStoreId: ""
        sid: ""
    CreateLaunchProfileRequest_streamConfiguration:
      allOf:
      - $ref: '#/components/schemas/StreamConfigurationCreate'
      - description: A configuration for a streaming session.
      example:
        automaticTerminationMode: ""
        volumeConfiguration:
          size: ""
          iops: ""
          throughput: ""
        clipboardMode: ""
        ec2InstanceTypes: ""
        sessionStorage:
          mode: ""
          root:
            linux: ""
            windows: ""
        streamingImageIds: ""
        maxSessionLengthInMinutes: ""
        sessionBackup:
          mode: ""
          maxBackupsToRetain: ""
        maxStoppedSessionLengthInMinutes: ""
        sessionPersistenceMode: ""
    LaunchProfile_streamConfiguration:
      allOf:
      - $ref: '#/components/schemas/StreamConfiguration'
      - description: A configuration for a streaming session.
      example:
        automaticTerminationMode: ""
        volumeConfiguration:
          size: ""
          iops: ""
          throughput: ""
        clipboardMode: ""
        ec2InstanceTypes: ""
        sessionStorage:
          mode: ""
          root:
            linux: ""
            windows: ""
        streamingImageIds: ""
        maxSessionLengthInMinutes: ""
        sessionBackup:
          mode: ""
          maxBackupsToRetain: ""
        maxStoppedSessionLengthInMinutes: ""
        sessionPersistenceMode: ""
    StreamingImage_encryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/StreamingImageEncryptionConfiguration'
      - description: The encryption configuration.
      example:
        keyArn: ""
        keyType: ""
    CreateStudioComponentRequest_configuration:
      allOf:
      - $ref: '#/components/schemas/StudioComponentConfiguration'
      - description: "The configuration of the studio component, based on component\
          \ type."
      example:
        licenseServiceConfiguration:
          endpoint: ""
        activeDirectoryConfiguration:
          computerAttributes: ""
          directoryId: ""
          organizationalUnitDistinguishedName: ""
        computeFarmConfiguration:
          activeDirectoryUser: ""
          endpoint: ""
        sharedFileSystemConfiguration:
          windowsMountDrive: ""
          endpoint: ""
          fileSystemId: ""
          linuxMountPoint: ""
          shareName: ""
    CreateStudioRequest_studioEncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/StudioEncryptionConfiguration'
      - description: The studio encryption configuration.
      example:
        keyArn: ""
        keyType: ""
    Studio_studioEncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/StudioEncryptionConfiguration'
      - description: Configuration of the encryption method that is used for the studio.
      example:
        keyArn: ""
        keyType: ""
    LaunchProfileInitialization_activeDirectory:
      allOf:
      - $ref: '#/components/schemas/LaunchProfileInitializationActiveDirectory'
      - description: A <code>LaunchProfileInitializationActiveDirectory</code> resource.
      example:
        dnsIpAddresses: ""
        computerAttributes: ""
        studioComponentId: ""
        directoryId: ""
        organizationalUnitDistinguishedName: ""
        directoryName: ""
        studioComponentName: ""
    StreamConfiguration_sessionBackup:
      allOf:
      - $ref: '#/components/schemas/StreamConfigurationSessionBackup'
      - description: Information about the streaming session backup.
      example:
        mode: ""
        maxBackupsToRetain: ""
    StreamConfiguration_sessionStorage:
      allOf:
      - $ref: '#/components/schemas/StreamConfigurationSessionStorage'
      - description: The upload storage for a streaming session.
      example:
        mode: ""
        root:
          linux: ""
          windows: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

