/*
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LaunchProfileInitializationActiveDirectory;
import org.openapitools.client.model.LaunchProfilePlatform;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetLaunchProfileInitializationResponseLaunchProfileInitialization
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:48.375411-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetLaunchProfileInitializationResponseLaunchProfileInitialization {
  public static final String SERIALIZED_NAME_ACTIVE_DIRECTORY = "activeDirectory";
  @SerializedName(SERIALIZED_NAME_ACTIVE_DIRECTORY)
  private LaunchProfileInitializationActiveDirectory activeDirectory;

  public static final String SERIALIZED_NAME_EC2_SECURITY_GROUP_IDS = "ec2SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_EC2_SECURITY_GROUP_IDS)
  private List ec2SecurityGroupIds;

  public static final String SERIALIZED_NAME_LAUNCH_PROFILE_ID = "launchProfileId";
  @SerializedName(SERIALIZED_NAME_LAUNCH_PROFILE_ID)
  private String launchProfileId;

  public static final String SERIALIZED_NAME_LAUNCH_PROFILE_PROTOCOL_VERSION = "launchProfileProtocolVersion";
  @SerializedName(SERIALIZED_NAME_LAUNCH_PROFILE_PROTOCOL_VERSION)
  private String launchProfileProtocolVersion;

  public static final String SERIALIZED_NAME_LAUNCH_PURPOSE = "launchPurpose";
  @SerializedName(SERIALIZED_NAME_LAUNCH_PURPOSE)
  private String launchPurpose;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private LaunchProfilePlatform platform;

  public static final String SERIALIZED_NAME_SYSTEM_INITIALIZATION_SCRIPTS = "systemInitializationScripts";
  @SerializedName(SERIALIZED_NAME_SYSTEM_INITIALIZATION_SCRIPTS)
  private List systemInitializationScripts;

  public static final String SERIALIZED_NAME_USER_INITIALIZATION_SCRIPTS = "userInitializationScripts";
  @SerializedName(SERIALIZED_NAME_USER_INITIALIZATION_SCRIPTS)
  private List userInitializationScripts;

  public GetLaunchProfileInitializationResponseLaunchProfileInitialization() {
  }

  public GetLaunchProfileInitializationResponseLaunchProfileInitialization activeDirectory(LaunchProfileInitializationActiveDirectory activeDirectory) {
    this.activeDirectory = activeDirectory;
    return this;
  }

  /**
   * Get activeDirectory
   * @return activeDirectory
   */
  @javax.annotation.Nullable
  public LaunchProfileInitializationActiveDirectory getActiveDirectory() {
    return activeDirectory;
  }

  public void setActiveDirectory(LaunchProfileInitializationActiveDirectory activeDirectory) {
    this.activeDirectory = activeDirectory;
  }


  public GetLaunchProfileInitializationResponseLaunchProfileInitialization ec2SecurityGroupIds(List ec2SecurityGroupIds) {
    this.ec2SecurityGroupIds = ec2SecurityGroupIds;
    return this;
  }

  /**
   * Get ec2SecurityGroupIds
   * @return ec2SecurityGroupIds
   */
  @javax.annotation.Nullable
  public List getEc2SecurityGroupIds() {
    return ec2SecurityGroupIds;
  }

  public void setEc2SecurityGroupIds(List ec2SecurityGroupIds) {
    this.ec2SecurityGroupIds = ec2SecurityGroupIds;
  }


  public GetLaunchProfileInitializationResponseLaunchProfileInitialization launchProfileId(String launchProfileId) {
    this.launchProfileId = launchProfileId;
    return this;
  }

  /**
   * Get launchProfileId
   * @return launchProfileId
   */
  @javax.annotation.Nullable
  public String getLaunchProfileId() {
    return launchProfileId;
  }

  public void setLaunchProfileId(String launchProfileId) {
    this.launchProfileId = launchProfileId;
  }


  public GetLaunchProfileInitializationResponseLaunchProfileInitialization launchProfileProtocolVersion(String launchProfileProtocolVersion) {
    this.launchProfileProtocolVersion = launchProfileProtocolVersion;
    return this;
  }

  /**
   * Get launchProfileProtocolVersion
   * @return launchProfileProtocolVersion
   */
  @javax.annotation.Nullable
  public String getLaunchProfileProtocolVersion() {
    return launchProfileProtocolVersion;
  }

  public void setLaunchProfileProtocolVersion(String launchProfileProtocolVersion) {
    this.launchProfileProtocolVersion = launchProfileProtocolVersion;
  }


  public GetLaunchProfileInitializationResponseLaunchProfileInitialization launchPurpose(String launchPurpose) {
    this.launchPurpose = launchPurpose;
    return this;
  }

  /**
   * Get launchPurpose
   * @return launchPurpose
   */
  @javax.annotation.Nullable
  public String getLaunchPurpose() {
    return launchPurpose;
  }

  public void setLaunchPurpose(String launchPurpose) {
    this.launchPurpose = launchPurpose;
  }


  public GetLaunchProfileInitializationResponseLaunchProfileInitialization name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetLaunchProfileInitializationResponseLaunchProfileInitialization platform(LaunchProfilePlatform platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Get platform
   * @return platform
   */
  @javax.annotation.Nullable
  public LaunchProfilePlatform getPlatform() {
    return platform;
  }

  public void setPlatform(LaunchProfilePlatform platform) {
    this.platform = platform;
  }


  public GetLaunchProfileInitializationResponseLaunchProfileInitialization systemInitializationScripts(List systemInitializationScripts) {
    this.systemInitializationScripts = systemInitializationScripts;
    return this;
  }

  /**
   * Get systemInitializationScripts
   * @return systemInitializationScripts
   */
  @javax.annotation.Nullable
  public List getSystemInitializationScripts() {
    return systemInitializationScripts;
  }

  public void setSystemInitializationScripts(List systemInitializationScripts) {
    this.systemInitializationScripts = systemInitializationScripts;
  }


  public GetLaunchProfileInitializationResponseLaunchProfileInitialization userInitializationScripts(List userInitializationScripts) {
    this.userInitializationScripts = userInitializationScripts;
    return this;
  }

  /**
   * Get userInitializationScripts
   * @return userInitializationScripts
   */
  @javax.annotation.Nullable
  public List getUserInitializationScripts() {
    return userInitializationScripts;
  }

  public void setUserInitializationScripts(List userInitializationScripts) {
    this.userInitializationScripts = userInitializationScripts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetLaunchProfileInitializationResponseLaunchProfileInitialization getLaunchProfileInitializationResponseLaunchProfileInitialization = (GetLaunchProfileInitializationResponseLaunchProfileInitialization) o;
    return Objects.equals(this.activeDirectory, getLaunchProfileInitializationResponseLaunchProfileInitialization.activeDirectory) &&
        Objects.equals(this.ec2SecurityGroupIds, getLaunchProfileInitializationResponseLaunchProfileInitialization.ec2SecurityGroupIds) &&
        Objects.equals(this.launchProfileId, getLaunchProfileInitializationResponseLaunchProfileInitialization.launchProfileId) &&
        Objects.equals(this.launchProfileProtocolVersion, getLaunchProfileInitializationResponseLaunchProfileInitialization.launchProfileProtocolVersion) &&
        Objects.equals(this.launchPurpose, getLaunchProfileInitializationResponseLaunchProfileInitialization.launchPurpose) &&
        Objects.equals(this.name, getLaunchProfileInitializationResponseLaunchProfileInitialization.name) &&
        Objects.equals(this.platform, getLaunchProfileInitializationResponseLaunchProfileInitialization.platform) &&
        Objects.equals(this.systemInitializationScripts, getLaunchProfileInitializationResponseLaunchProfileInitialization.systemInitializationScripts) &&
        Objects.equals(this.userInitializationScripts, getLaunchProfileInitializationResponseLaunchProfileInitialization.userInitializationScripts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeDirectory, ec2SecurityGroupIds, launchProfileId, launchProfileProtocolVersion, launchPurpose, name, platform, systemInitializationScripts, userInitializationScripts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetLaunchProfileInitializationResponseLaunchProfileInitialization {\n");
    sb.append("    activeDirectory: ").append(toIndentedString(activeDirectory)).append("\n");
    sb.append("    ec2SecurityGroupIds: ").append(toIndentedString(ec2SecurityGroupIds)).append("\n");
    sb.append("    launchProfileId: ").append(toIndentedString(launchProfileId)).append("\n");
    sb.append("    launchProfileProtocolVersion: ").append(toIndentedString(launchProfileProtocolVersion)).append("\n");
    sb.append("    launchPurpose: ").append(toIndentedString(launchPurpose)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    systemInitializationScripts: ").append(toIndentedString(systemInitializationScripts)).append("\n");
    sb.append("    userInitializationScripts: ").append(toIndentedString(userInitializationScripts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activeDirectory");
    openapiFields.add("ec2SecurityGroupIds");
    openapiFields.add("launchProfileId");
    openapiFields.add("launchProfileProtocolVersion");
    openapiFields.add("launchPurpose");
    openapiFields.add("name");
    openapiFields.add("platform");
    openapiFields.add("systemInitializationScripts");
    openapiFields.add("userInitializationScripts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetLaunchProfileInitializationResponseLaunchProfileInitialization
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetLaunchProfileInitializationResponseLaunchProfileInitialization.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetLaunchProfileInitializationResponseLaunchProfileInitialization is not found in the empty JSON string", GetLaunchProfileInitializationResponseLaunchProfileInitialization.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetLaunchProfileInitializationResponseLaunchProfileInitialization.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetLaunchProfileInitializationResponseLaunchProfileInitialization` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `activeDirectory`
      if (jsonObj.get("activeDirectory") != null && !jsonObj.get("activeDirectory").isJsonNull()) {
        LaunchProfileInitializationActiveDirectory.validateJsonElement(jsonObj.get("activeDirectory"));
      }
      // validate the optional field `ec2SecurityGroupIds`
      if (jsonObj.get("ec2SecurityGroupIds") != null && !jsonObj.get("ec2SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ec2SecurityGroupIds"));
      }
      // validate the optional field `launchProfileId`
      if (jsonObj.get("launchProfileId") != null && !jsonObj.get("launchProfileId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("launchProfileId"));
      }
      // validate the optional field `launchProfileProtocolVersion`
      if (jsonObj.get("launchProfileProtocolVersion") != null && !jsonObj.get("launchProfileProtocolVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("launchProfileProtocolVersion"));
      }
      // validate the optional field `launchPurpose`
      if (jsonObj.get("launchPurpose") != null && !jsonObj.get("launchPurpose").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("launchPurpose"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `platform`
      if (jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) {
        LaunchProfilePlatform.validateJsonElement(jsonObj.get("platform"));
      }
      // validate the optional field `systemInitializationScripts`
      if (jsonObj.get("systemInitializationScripts") != null && !jsonObj.get("systemInitializationScripts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("systemInitializationScripts"));
      }
      // validate the optional field `userInitializationScripts`
      if (jsonObj.get("userInitializationScripts") != null && !jsonObj.get("userInitializationScripts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("userInitializationScripts"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetLaunchProfileInitializationResponseLaunchProfileInitialization.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetLaunchProfileInitializationResponseLaunchProfileInitialization' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetLaunchProfileInitializationResponseLaunchProfileInitialization> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetLaunchProfileInitializationResponseLaunchProfileInitialization.class));

       return (TypeAdapter<T>) new TypeAdapter<GetLaunchProfileInitializationResponseLaunchProfileInitialization>() {
           @Override
           public void write(JsonWriter out, GetLaunchProfileInitializationResponseLaunchProfileInitialization value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetLaunchProfileInitializationResponseLaunchProfileInitialization read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetLaunchProfileInitializationResponseLaunchProfileInitialization given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetLaunchProfileInitializationResponseLaunchProfileInitialization
   * @throws IOException if the JSON string is invalid with respect to GetLaunchProfileInitializationResponseLaunchProfileInitialization
   */
  public static GetLaunchProfileInitializationResponseLaunchProfileInitialization fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetLaunchProfileInitializationResponseLaunchProfileInitialization.class);
  }

  /**
   * Convert an instance of GetLaunchProfileInitializationResponseLaunchProfileInitialization to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

