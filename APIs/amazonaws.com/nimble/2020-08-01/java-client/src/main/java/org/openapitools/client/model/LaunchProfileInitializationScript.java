/*
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The launch profile initialization script is used when start streaming session runs.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:48.375411-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LaunchProfileInitializationScript {
  public static final String SERIALIZED_NAME_RUNTIME_ROLE_ARN = "runtimeRoleArn";
  @SerializedName(SERIALIZED_NAME_RUNTIME_ROLE_ARN)
  private String runtimeRoleArn;

  public static final String SERIALIZED_NAME_SCRIPT = "script";
  @SerializedName(SERIALIZED_NAME_SCRIPT)
  private String script;

  public static final String SERIALIZED_NAME_SECURE_INITIALIZATION_ROLE_ARN = "secureInitializationRoleArn";
  @SerializedName(SERIALIZED_NAME_SECURE_INITIALIZATION_ROLE_ARN)
  private String secureInitializationRoleArn;

  public static final String SERIALIZED_NAME_STUDIO_COMPONENT_ID = "studioComponentId";
  @SerializedName(SERIALIZED_NAME_STUDIO_COMPONENT_ID)
  private String studioComponentId;

  public static final String SERIALIZED_NAME_STUDIO_COMPONENT_NAME = "studioComponentName";
  @SerializedName(SERIALIZED_NAME_STUDIO_COMPONENT_NAME)
  private String studioComponentName;

  public LaunchProfileInitializationScript() {
  }

  public LaunchProfileInitializationScript runtimeRoleArn(String runtimeRoleArn) {
    this.runtimeRoleArn = runtimeRoleArn;
    return this;
  }

  /**
   * Get runtimeRoleArn
   * @return runtimeRoleArn
   */
  @javax.annotation.Nullable
  public String getRuntimeRoleArn() {
    return runtimeRoleArn;
  }

  public void setRuntimeRoleArn(String runtimeRoleArn) {
    this.runtimeRoleArn = runtimeRoleArn;
  }


  public LaunchProfileInitializationScript script(String script) {
    this.script = script;
    return this;
  }

  /**
   * Get script
   * @return script
   */
  @javax.annotation.Nullable
  public String getScript() {
    return script;
  }

  public void setScript(String script) {
    this.script = script;
  }


  public LaunchProfileInitializationScript secureInitializationRoleArn(String secureInitializationRoleArn) {
    this.secureInitializationRoleArn = secureInitializationRoleArn;
    return this;
  }

  /**
   * Get secureInitializationRoleArn
   * @return secureInitializationRoleArn
   */
  @javax.annotation.Nullable
  public String getSecureInitializationRoleArn() {
    return secureInitializationRoleArn;
  }

  public void setSecureInitializationRoleArn(String secureInitializationRoleArn) {
    this.secureInitializationRoleArn = secureInitializationRoleArn;
  }


  public LaunchProfileInitializationScript studioComponentId(String studioComponentId) {
    this.studioComponentId = studioComponentId;
    return this;
  }

  /**
   * Get studioComponentId
   * @return studioComponentId
   */
  @javax.annotation.Nullable
  public String getStudioComponentId() {
    return studioComponentId;
  }

  public void setStudioComponentId(String studioComponentId) {
    this.studioComponentId = studioComponentId;
  }


  public LaunchProfileInitializationScript studioComponentName(String studioComponentName) {
    this.studioComponentName = studioComponentName;
    return this;
  }

  /**
   * Get studioComponentName
   * @return studioComponentName
   */
  @javax.annotation.Nullable
  public String getStudioComponentName() {
    return studioComponentName;
  }

  public void setStudioComponentName(String studioComponentName) {
    this.studioComponentName = studioComponentName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LaunchProfileInitializationScript launchProfileInitializationScript = (LaunchProfileInitializationScript) o;
    return Objects.equals(this.runtimeRoleArn, launchProfileInitializationScript.runtimeRoleArn) &&
        Objects.equals(this.script, launchProfileInitializationScript.script) &&
        Objects.equals(this.secureInitializationRoleArn, launchProfileInitializationScript.secureInitializationRoleArn) &&
        Objects.equals(this.studioComponentId, launchProfileInitializationScript.studioComponentId) &&
        Objects.equals(this.studioComponentName, launchProfileInitializationScript.studioComponentName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(runtimeRoleArn, script, secureInitializationRoleArn, studioComponentId, studioComponentName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LaunchProfileInitializationScript {\n");
    sb.append("    runtimeRoleArn: ").append(toIndentedString(runtimeRoleArn)).append("\n");
    sb.append("    script: ").append(toIndentedString(script)).append("\n");
    sb.append("    secureInitializationRoleArn: ").append(toIndentedString(secureInitializationRoleArn)).append("\n");
    sb.append("    studioComponentId: ").append(toIndentedString(studioComponentId)).append("\n");
    sb.append("    studioComponentName: ").append(toIndentedString(studioComponentName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("runtimeRoleArn");
    openapiFields.add("script");
    openapiFields.add("secureInitializationRoleArn");
    openapiFields.add("studioComponentId");
    openapiFields.add("studioComponentName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LaunchProfileInitializationScript
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LaunchProfileInitializationScript.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LaunchProfileInitializationScript is not found in the empty JSON string", LaunchProfileInitializationScript.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LaunchProfileInitializationScript.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LaunchProfileInitializationScript` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `runtimeRoleArn`
      if (jsonObj.get("runtimeRoleArn") != null && !jsonObj.get("runtimeRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("runtimeRoleArn"));
      }
      // validate the optional field `script`
      if (jsonObj.get("script") != null && !jsonObj.get("script").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("script"));
      }
      // validate the optional field `secureInitializationRoleArn`
      if (jsonObj.get("secureInitializationRoleArn") != null && !jsonObj.get("secureInitializationRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("secureInitializationRoleArn"));
      }
      // validate the optional field `studioComponentId`
      if (jsonObj.get("studioComponentId") != null && !jsonObj.get("studioComponentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("studioComponentId"));
      }
      // validate the optional field `studioComponentName`
      if (jsonObj.get("studioComponentName") != null && !jsonObj.get("studioComponentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("studioComponentName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LaunchProfileInitializationScript.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LaunchProfileInitializationScript' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LaunchProfileInitializationScript> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LaunchProfileInitializationScript.class));

       return (TypeAdapter<T>) new TypeAdapter<LaunchProfileInitializationScript>() {
           @Override
           public void write(JsonWriter out, LaunchProfileInitializationScript value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LaunchProfileInitializationScript read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LaunchProfileInitializationScript given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LaunchProfileInitializationScript
   * @throws IOException if the JSON string is invalid with respect to LaunchProfileInitializationScript
   */
  public static LaunchProfileInitializationScript fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LaunchProfileInitializationScript.class);
  }

  /**
   * Convert an instance of LaunchProfileInitializationScript to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

