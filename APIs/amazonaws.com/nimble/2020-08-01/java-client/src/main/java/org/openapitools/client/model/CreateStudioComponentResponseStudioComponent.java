/*
 * AmazonNimbleStudio
 * <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateStudioComponentRequestConfiguration;
import org.openapitools.client.model.StudioComponentState;
import org.openapitools.client.model.StudioComponentStatusCode;
import org.openapitools.client.model.StudioComponentSubtype;
import org.openapitools.client.model.StudioComponentType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateStudioComponentResponseStudioComponent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:48.375411-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateStudioComponentResponseStudioComponent {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CONFIGURATION = "configuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION)
  private CreateStudioComponentRequestConfiguration _configuration;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EC2_SECURITY_GROUP_IDS = "ec2SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_EC2_SECURITY_GROUP_IDS)
  private List ec2SecurityGroupIds;

  public static final String SERIALIZED_NAME_INITIALIZATION_SCRIPTS = "initializationScripts";
  @SerializedName(SERIALIZED_NAME_INITIALIZATION_SCRIPTS)
  private List initializationScripts;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RUNTIME_ROLE_ARN = "runtimeRoleArn";
  @SerializedName(SERIALIZED_NAME_RUNTIME_ROLE_ARN)
  private String runtimeRoleArn;

  public static final String SERIALIZED_NAME_SCRIPT_PARAMETERS = "scriptParameters";
  @SerializedName(SERIALIZED_NAME_SCRIPT_PARAMETERS)
  private List scriptParameters;

  public static final String SERIALIZED_NAME_SECURE_INITIALIZATION_ROLE_ARN = "secureInitializationRoleArn";
  @SerializedName(SERIALIZED_NAME_SECURE_INITIALIZATION_ROLE_ARN)
  private String secureInitializationRoleArn;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StudioComponentState state;

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private StudioComponentStatusCode statusCode;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_STUDIO_COMPONENT_ID = "studioComponentId";
  @SerializedName(SERIALIZED_NAME_STUDIO_COMPONENT_ID)
  private String studioComponentId;

  public static final String SERIALIZED_NAME_SUBTYPE = "subtype";
  @SerializedName(SERIALIZED_NAME_SUBTYPE)
  private StudioComponentSubtype subtype;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private StudioComponentType type;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updatedBy";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private String updatedBy;

  public CreateStudioComponentResponseStudioComponent() {
  }

  public CreateStudioComponentResponseStudioComponent arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public CreateStudioComponentResponseStudioComponent _configuration(CreateStudioComponentRequestConfiguration _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * Get _configuration
   * @return _configuration
   */
  @javax.annotation.Nullable
  public CreateStudioComponentRequestConfiguration getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(CreateStudioComponentRequestConfiguration _configuration) {
    this._configuration = _configuration;
  }


  public CreateStudioComponentResponseStudioComponent createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public CreateStudioComponentResponseStudioComponent createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public CreateStudioComponentResponseStudioComponent description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateStudioComponentResponseStudioComponent ec2SecurityGroupIds(List ec2SecurityGroupIds) {
    this.ec2SecurityGroupIds = ec2SecurityGroupIds;
    return this;
  }

  /**
   * Get ec2SecurityGroupIds
   * @return ec2SecurityGroupIds
   */
  @javax.annotation.Nullable
  public List getEc2SecurityGroupIds() {
    return ec2SecurityGroupIds;
  }

  public void setEc2SecurityGroupIds(List ec2SecurityGroupIds) {
    this.ec2SecurityGroupIds = ec2SecurityGroupIds;
  }


  public CreateStudioComponentResponseStudioComponent initializationScripts(List initializationScripts) {
    this.initializationScripts = initializationScripts;
    return this;
  }

  /**
   * Get initializationScripts
   * @return initializationScripts
   */
  @javax.annotation.Nullable
  public List getInitializationScripts() {
    return initializationScripts;
  }

  public void setInitializationScripts(List initializationScripts) {
    this.initializationScripts = initializationScripts;
  }


  public CreateStudioComponentResponseStudioComponent name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateStudioComponentResponseStudioComponent runtimeRoleArn(String runtimeRoleArn) {
    this.runtimeRoleArn = runtimeRoleArn;
    return this;
  }

  /**
   * Get runtimeRoleArn
   * @return runtimeRoleArn
   */
  @javax.annotation.Nullable
  public String getRuntimeRoleArn() {
    return runtimeRoleArn;
  }

  public void setRuntimeRoleArn(String runtimeRoleArn) {
    this.runtimeRoleArn = runtimeRoleArn;
  }


  public CreateStudioComponentResponseStudioComponent scriptParameters(List scriptParameters) {
    this.scriptParameters = scriptParameters;
    return this;
  }

  /**
   * Get scriptParameters
   * @return scriptParameters
   */
  @javax.annotation.Nullable
  public List getScriptParameters() {
    return scriptParameters;
  }

  public void setScriptParameters(List scriptParameters) {
    this.scriptParameters = scriptParameters;
  }


  public CreateStudioComponentResponseStudioComponent secureInitializationRoleArn(String secureInitializationRoleArn) {
    this.secureInitializationRoleArn = secureInitializationRoleArn;
    return this;
  }

  /**
   * Get secureInitializationRoleArn
   * @return secureInitializationRoleArn
   */
  @javax.annotation.Nullable
  public String getSecureInitializationRoleArn() {
    return secureInitializationRoleArn;
  }

  public void setSecureInitializationRoleArn(String secureInitializationRoleArn) {
    this.secureInitializationRoleArn = secureInitializationRoleArn;
  }


  public CreateStudioComponentResponseStudioComponent state(StudioComponentState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public StudioComponentState getState() {
    return state;
  }

  public void setState(StudioComponentState state) {
    this.state = state;
  }


  public CreateStudioComponentResponseStudioComponent statusCode(StudioComponentStatusCode statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Get statusCode
   * @return statusCode
   */
  @javax.annotation.Nullable
  public StudioComponentStatusCode getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(StudioComponentStatusCode statusCode) {
    this.statusCode = statusCode;
  }


  public CreateStudioComponentResponseStudioComponent statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public CreateStudioComponentResponseStudioComponent studioComponentId(String studioComponentId) {
    this.studioComponentId = studioComponentId;
    return this;
  }

  /**
   * Get studioComponentId
   * @return studioComponentId
   */
  @javax.annotation.Nullable
  public String getStudioComponentId() {
    return studioComponentId;
  }

  public void setStudioComponentId(String studioComponentId) {
    this.studioComponentId = studioComponentId;
  }


  public CreateStudioComponentResponseStudioComponent subtype(StudioComponentSubtype subtype) {
    this.subtype = subtype;
    return this;
  }

  /**
   * Get subtype
   * @return subtype
   */
  @javax.annotation.Nullable
  public StudioComponentSubtype getSubtype() {
    return subtype;
  }

  public void setSubtype(StudioComponentSubtype subtype) {
    this.subtype = subtype;
  }


  public CreateStudioComponentResponseStudioComponent tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public CreateStudioComponentResponseStudioComponent type(StudioComponentType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public StudioComponentType getType() {
    return type;
  }

  public void setType(StudioComponentType type) {
    this.type = type;
  }


  public CreateStudioComponentResponseStudioComponent updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public CreateStudioComponentResponseStudioComponent updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

  /**
   * Get updatedBy
   * @return updatedBy
   */
  @javax.annotation.Nullable
  public String getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateStudioComponentResponseStudioComponent createStudioComponentResponseStudioComponent = (CreateStudioComponentResponseStudioComponent) o;
    return Objects.equals(this.arn, createStudioComponentResponseStudioComponent.arn) &&
        Objects.equals(this._configuration, createStudioComponentResponseStudioComponent._configuration) &&
        Objects.equals(this.createdAt, createStudioComponentResponseStudioComponent.createdAt) &&
        Objects.equals(this.createdBy, createStudioComponentResponseStudioComponent.createdBy) &&
        Objects.equals(this.description, createStudioComponentResponseStudioComponent.description) &&
        Objects.equals(this.ec2SecurityGroupIds, createStudioComponentResponseStudioComponent.ec2SecurityGroupIds) &&
        Objects.equals(this.initializationScripts, createStudioComponentResponseStudioComponent.initializationScripts) &&
        Objects.equals(this.name, createStudioComponentResponseStudioComponent.name) &&
        Objects.equals(this.runtimeRoleArn, createStudioComponentResponseStudioComponent.runtimeRoleArn) &&
        Objects.equals(this.scriptParameters, createStudioComponentResponseStudioComponent.scriptParameters) &&
        Objects.equals(this.secureInitializationRoleArn, createStudioComponentResponseStudioComponent.secureInitializationRoleArn) &&
        Objects.equals(this.state, createStudioComponentResponseStudioComponent.state) &&
        Objects.equals(this.statusCode, createStudioComponentResponseStudioComponent.statusCode) &&
        Objects.equals(this.statusMessage, createStudioComponentResponseStudioComponent.statusMessage) &&
        Objects.equals(this.studioComponentId, createStudioComponentResponseStudioComponent.studioComponentId) &&
        Objects.equals(this.subtype, createStudioComponentResponseStudioComponent.subtype) &&
        Objects.equals(this.tags, createStudioComponentResponseStudioComponent.tags) &&
        Objects.equals(this.type, createStudioComponentResponseStudioComponent.type) &&
        Objects.equals(this.updatedAt, createStudioComponentResponseStudioComponent.updatedAt) &&
        Objects.equals(this.updatedBy, createStudioComponentResponseStudioComponent.updatedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, _configuration, createdAt, createdBy, description, ec2SecurityGroupIds, initializationScripts, name, runtimeRoleArn, scriptParameters, secureInitializationRoleArn, state, statusCode, statusMessage, studioComponentId, subtype, tags, type, updatedAt, updatedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateStudioComponentResponseStudioComponent {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ec2SecurityGroupIds: ").append(toIndentedString(ec2SecurityGroupIds)).append("\n");
    sb.append("    initializationScripts: ").append(toIndentedString(initializationScripts)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    runtimeRoleArn: ").append(toIndentedString(runtimeRoleArn)).append("\n");
    sb.append("    scriptParameters: ").append(toIndentedString(scriptParameters)).append("\n");
    sb.append("    secureInitializationRoleArn: ").append(toIndentedString(secureInitializationRoleArn)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    studioComponentId: ").append(toIndentedString(studioComponentId)).append("\n");
    sb.append("    subtype: ").append(toIndentedString(subtype)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("configuration");
    openapiFields.add("createdAt");
    openapiFields.add("createdBy");
    openapiFields.add("description");
    openapiFields.add("ec2SecurityGroupIds");
    openapiFields.add("initializationScripts");
    openapiFields.add("name");
    openapiFields.add("runtimeRoleArn");
    openapiFields.add("scriptParameters");
    openapiFields.add("secureInitializationRoleArn");
    openapiFields.add("state");
    openapiFields.add("statusCode");
    openapiFields.add("statusMessage");
    openapiFields.add("studioComponentId");
    openapiFields.add("subtype");
    openapiFields.add("tags");
    openapiFields.add("type");
    openapiFields.add("updatedAt");
    openapiFields.add("updatedBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateStudioComponentResponseStudioComponent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateStudioComponentResponseStudioComponent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateStudioComponentResponseStudioComponent is not found in the empty JSON string", CreateStudioComponentResponseStudioComponent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateStudioComponentResponseStudioComponent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateStudioComponentResponseStudioComponent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `configuration`
      if (jsonObj.get("configuration") != null && !jsonObj.get("configuration").isJsonNull()) {
        CreateStudioComponentRequestConfiguration.validateJsonElement(jsonObj.get("configuration"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("createdBy"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `ec2SecurityGroupIds`
      if (jsonObj.get("ec2SecurityGroupIds") != null && !jsonObj.get("ec2SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ec2SecurityGroupIds"));
      }
      // validate the optional field `initializationScripts`
      if (jsonObj.get("initializationScripts") != null && !jsonObj.get("initializationScripts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("initializationScripts"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `runtimeRoleArn`
      if (jsonObj.get("runtimeRoleArn") != null && !jsonObj.get("runtimeRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("runtimeRoleArn"));
      }
      // validate the optional field `scriptParameters`
      if (jsonObj.get("scriptParameters") != null && !jsonObj.get("scriptParameters").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("scriptParameters"));
      }
      // validate the optional field `secureInitializationRoleArn`
      if (jsonObj.get("secureInitializationRoleArn") != null && !jsonObj.get("secureInitializationRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("secureInitializationRoleArn"));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StudioComponentState.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `statusCode`
      if (jsonObj.get("statusCode") != null && !jsonObj.get("statusCode").isJsonNull()) {
        StudioComponentStatusCode.validateJsonElement(jsonObj.get("statusCode"));
      }
      // validate the optional field `statusMessage`
      if (jsonObj.get("statusMessage") != null && !jsonObj.get("statusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusMessage"));
      }
      // validate the optional field `studioComponentId`
      if (jsonObj.get("studioComponentId") != null && !jsonObj.get("studioComponentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("studioComponentId"));
      }
      // validate the optional field `subtype`
      if (jsonObj.get("subtype") != null && !jsonObj.get("subtype").isJsonNull()) {
        StudioComponentSubtype.validateJsonElement(jsonObj.get("subtype"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        StudioComponentType.validateJsonElement(jsonObj.get("type"));
      }
      // validate the optional field `updatedAt`
      if (jsonObj.get("updatedAt") != null && !jsonObj.get("updatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("updatedAt"));
      }
      // validate the optional field `updatedBy`
      if (jsonObj.get("updatedBy") != null && !jsonObj.get("updatedBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("updatedBy"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateStudioComponentResponseStudioComponent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateStudioComponentResponseStudioComponent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateStudioComponentResponseStudioComponent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateStudioComponentResponseStudioComponent.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateStudioComponentResponseStudioComponent>() {
           @Override
           public void write(JsonWriter out, CreateStudioComponentResponseStudioComponent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateStudioComponentResponseStudioComponent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateStudioComponentResponseStudioComponent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateStudioComponentResponseStudioComponent
   * @throws IOException if the JSON string is invalid with respect to CreateStudioComponentResponseStudioComponent
   */
  public static CreateStudioComponentResponseStudioComponent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateStudioComponentResponseStudioComponent.class);
  }

  /**
   * Convert an instance of CreateStudioComponentResponseStudioComponent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

