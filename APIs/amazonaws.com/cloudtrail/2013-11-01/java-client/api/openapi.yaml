openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>CloudTrail</fullname> <p>This is the CloudTrail API Reference.\
    \ It provides descriptions of actions, data types, common parameters, and common\
    \ errors for CloudTrail.</p> <p>CloudTrail is a web service that records Amazon\
    \ Web Services API calls for your Amazon Web Services account and delivers log\
    \ files to an Amazon S3 bucket. The recorded information includes the identity\
    \ of the user, the start time of the Amazon Web Services API call, the source\
    \ IP address, the request parameters, and the response elements returned by the\
    \ service.</p> <note> <p>As an alternative to the API, you can use one of the\
    \ Amazon Web Services SDKs, which consist of libraries and sample code for various\
    \ programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.).\
    \ The SDKs provide programmatic access to CloudTrail. For example, the SDKs handle\
    \ cryptographically signing requests, managing errors, and retrying requests automatically.\
    \ For more information about the Amazon Web Services SDKs, including how to download\
    \ and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools to Build\
    \ on Amazon Web Services</a>.</p> </note> <p>See the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\"\
    >CloudTrail User Guide</a> for information about the data that is included with\
    \ each Amazon Web Services API call listed in the log files.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS CloudTrail
  version: 2013-11-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: cloudtrail
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cloudtrail-2013-11-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/cloudtrail/
servers:
- description: The CloudTrail multi-region endpoint
  url: "http://cloudtrail.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CloudTrail multi-region endpoint
  url: "https://cloudtrail.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CloudTrail endpoint for China (Beijing) and China (Ningxia)
  url: "http://cloudtrail.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The CloudTrail endpoint for China (Beijing) and China (Ningxia)
  url: "https://cloudtrail.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.AddTags:
    post:
      description: "Adds one or more tags to a trail, event data store, or channel,\
        \ up to a limit of 50. Overwrites an existing tag's value when a new value\
        \ is specified for an existing tag key. Tag key names must be unique; you\
        \ cannot have two keys with the same name but different values. If you specify\
        \ a key without a value, the tag will be created with the specified key and\
        \ a value of null. You can tag a trail or event data store that applies to\
        \ all Amazon Web Services Regions only from the Region in which the trail\
        \ or event data store was created (also known as its home Region)."
      operationId: AddTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.AddTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelARNInvalidException'
          description: ChannelARNInvalidException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
          description: ResourceTypeNotSupportedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsLimitExceededException'
          description: TagsLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagParameterException'
          description: InvalidTagParameterException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelNotFoundException'
          description: ChannelNotFoundException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CancelQuery:
    post:
      description: "Cancels a query if the query is not in a terminated state, such\
        \ as <code>CANCELLED</code>, <code>FAILED</code>, <code>TIMED_OUT</code>,\
        \ or <code>FINISHED</code>. You must specify an ARN value for <code>EventDataStore</code>.\
        \ The ID of the query that you want to cancel is also required. When you run\
        \ <code>CancelQuery</code>, the query status might show as <code>CANCELLED</code>\
        \ even if the operation is not yet finished."
      operationId: CancelQuery
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CancelQuery
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelQueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelQueryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveQueryException'
          description: InactiveQueryException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryIdNotFoundException'
          description: QueryIdNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CreateChannel:
    post:
      description: "Creates a channel for CloudTrail to ingest events from a partner\
        \ or external source. After you create a channel, a CloudTrail Lake event\
        \ data store can log events from the partner or source that you specify."
      operationId: CreateChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CreateChannel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMaxLimitExceededException'
          description: ChannelMaxLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSourceException'
          description: InvalidSourceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAlreadyExistsException'
          description: ChannelAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventDataStoreCategoryException'
          description: InvalidEventDataStoreCategoryException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagParameterException'
          description: InvalidTagParameterException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsLimitExceededException'
          description: TagsLimitExceededException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CreateEventDataStore:
    post:
      description: Creates a new event data store.
      operationId: CreateEventDataStore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CreateEventDataStore
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventDataStoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventDataStoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreAlreadyExistsException'
          description: EventDataStoreAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreMaxLimitExceededException'
          description: EventDataStoreMaxLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventSelectorsException'
          description: InvalidEventSelectorsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagParameterException'
          description: InvalidTagParameterException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientEncryptionPolicyException'
          description: InsufficientEncryptionPolicyException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKmsKeyIdException'
          description: InvalidKmsKeyIdException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyNotFoundException'
          description: KmsKeyNotFoundException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsException'
          description: KmsException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailAccessNotEnabledException'
          description: CloudTrailAccessNotEnabledException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsNotInUseException'
          description: OrganizationsNotInUseException
        "496":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotInAllFeaturesModeException'
          description: OrganizationNotInAllFeaturesModeException
        "497":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CreateTrail:
    post:
      description: 'Creates a trail that specifies the settings for delivery of log
        data to an Amazon S3 bucket. '
      operationId: CreateTrail
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CreateTrail
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaximumNumberOfTrailsExceededException'
          description: MaximumNumberOfTrailsExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailAlreadyExistsException'
          description: TrailAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3BucketDoesNotExistException'
          description: S3BucketDoesNotExistException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientS3BucketPolicyException'
          description: InsufficientS3BucketPolicyException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientSnsTopicPolicyException'
          description: InsufficientSnsTopicPolicyException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientEncryptionPolicyException'
          description: InsufficientEncryptionPolicyException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3BucketNameException'
          description: InvalidS3BucketNameException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3PrefixException'
          description: InvalidS3PrefixException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSnsTopicNameException'
          description: InvalidSnsTopicNameException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKmsKeyIdException'
          description: InvalidKmsKeyIdException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotProvidedException'
          description: TrailNotProvidedException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsLimitExceededException'
          description: TagsLimitExceededException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyNotFoundException'
          description: KmsKeyNotFoundException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyDisabledException'
          description: KmsKeyDisabledException
        "496":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsException'
          description: KmsException
        "497":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCloudWatchLogsLogGroupArnException'
          description: InvalidCloudWatchLogsLogGroupArnException
        "498":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCloudWatchLogsRoleArnException'
          description: InvalidCloudWatchLogsRoleArnException
        "499":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWatchLogsDeliveryUnavailableException'
          description: CloudWatchLogsDeliveryUnavailableException
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagParameterException'
          description: InvalidTagParameterException
        "501":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailAccessNotEnabledException'
          description: CloudTrailAccessNotEnabledException
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
        "505":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "506":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsNotInUseException'
          description: OrganizationsNotInUseException
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotInAllFeaturesModeException'
          description: OrganizationNotInAllFeaturesModeException
        "508":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "509":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailInvalidClientTokenIdException'
          description: CloudTrailInvalidClientTokenIdException
        "510":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteChannel:
    post:
      description: Deletes a channel.
      operationId: DeleteChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteChannel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChannelRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelARNInvalidException'
          description: ChannelARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelNotFoundException'
          description: ChannelNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteEventDataStore:
    post:
      description: "<p>Disables the event data store specified by <code>EventDataStore</code>,\
        \ which accepts an event data store ARN. After you run <code>DeleteEventDataStore</code>,\
        \ the event data store enters a <code>PENDING_DELETION</code> state, and is\
        \ automatically deleted after a wait period of seven days. <code>TerminationProtectionEnabled</code>\
        \ must be set to <code>False</code> on the event data store; this operation\
        \ cannot work if <code>TerminationProtectionEnabled</code> is <code>True</code>.</p>\
        \ <p>After you run <code>DeleteEventDataStore</code> on an event data store,\
        \ you cannot run <code>ListQueries</code>, <code>DescribeQuery</code>, or\
        \ <code>GetQueryResults</code> on queries that are using an event data store\
        \ in a <code>PENDING_DELETION</code> state. An event data store in the <code>PENDING_DELETION</code>\
        \ state does not incur costs.</p>"
      operationId: DeleteEventDataStore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteEventDataStore
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEventDataStoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEventDataStoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreTerminationProtectedException'
          description: EventDataStoreTerminationProtectedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreHasOngoingImportException'
          description: EventDataStoreHasOngoingImportException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelExistsForEDSException'
          description: ChannelExistsForEDSException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteResourcePolicy:
    post:
      description: ' Deletes the resource-based policy attached to the CloudTrail
        channel. '
      operationId: DeleteResourcePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourcePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceARNNotValidException'
          description: ResourceARNNotValidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePolicyNotFoundException'
          description: ResourcePolicyNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
          description: ResourceTypeNotSupportedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteTrail:
    post:
      description: Deletes a trail. This operation must be called from the Region
        in which the trail was created. <code>DeleteTrail</code> cannot be called
        on the shadow trails (replicated trails in other Regions) of a trail that
        is enabled in all Regions.
      operationId: DeleteTrail
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteTrail
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTrailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTrailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidHomeRegionException'
          description: InvalidHomeRegionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeregisterOrganizationDelegatedAdmin:
    post:
      description: Removes CloudTrail delegated administrator permissions from a member
        account in an organization.
      operationId: DeregisterOrganizationDelegatedAdmin
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeregisterOrganizationDelegatedAdmin
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterOrganizationDelegatedAdminRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterOrganizationDelegatedAdminResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'
          description: AccountNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotRegisteredException'
          description: AccountNotRegisteredException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailAccessNotEnabledException'
          description: CloudTrailAccessNotEnabledException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationManagementAccountException'
          description: NotOrganizationManagementAccountException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotInAllFeaturesModeException'
          description: OrganizationNotInAllFeaturesModeException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsNotInUseException'
          description: OrganizationsNotInUseException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DescribeQuery:
    post:
      description: "<p>Returns metadata about a query, including query run time in\
        \ milliseconds, number of events scanned and matched, and query status. If\
        \ the query results were delivered to an S3 bucket, the response also provides\
        \ the S3 URI and the delivery status.</p> <p>You must specify either a <code>QueryID</code>\
        \ or a <code>QueryAlias</code>. Specifying the <code>QueryAlias</code> parameter\
        \ returns information about the last query run for the alias.</p>"
      operationId: DescribeQuery
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DescribeQuery
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeQueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeQueryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryIdNotFoundException'
          description: QueryIdNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DescribeTrails:
    post:
      description: Retrieves settings for one or more trails associated with the current
        Region for your account.
      operationId: DescribeTrails
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DescribeTrails
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTrailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTrailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetChannel:
    post:
      description: ' Returns information about a specific channel. '
      operationId: GetChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetChannel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChannelRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelARNInvalidException'
          description: ChannelARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelNotFoundException'
          description: ChannelNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetEventDataStore:
    post:
      description: Returns information about an event data store specified as either
        an ARN or the ID portion of the ARN.
      operationId: GetEventDataStore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetEventDataStore
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEventDataStoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventDataStoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetEventSelectors:
    post:
      description: "<p>Describes the settings for the event selectors that you configured\
        \ for your trail. The information returned for your event selectors includes\
        \ the following:</p> <ul> <li> <p>If your event selector includes read-only\
        \ events, write-only events, or all events. This applies to both management\
        \ events and data events.</p> </li> <li> <p>If your event selector includes\
        \ management events.</p> </li> <li> <p>If your event selector includes data\
        \ events, the resources on which you are logging data events.</p> </li> </ul>\
        \ <p>For more information about logging management and data events, see the\
        \ following topics in the <i>CloudTrail User Guide</i>:</p> <ul> <li> <p>\
        \ <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-events-with-cloudtrail.html\"\
        >Logging management events</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html\"\
        >Logging data events</a> </p> </li> </ul>"
      operationId: GetEventSelectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetEventSelectors
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEventSelectorsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventSelectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetImport:
    post:
      description: ' Returns information about a specific import. '
      operationId: GetImport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetImport
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetImportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportNotFoundException'
          description: ImportNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetInsightSelectors:
    post:
      description: "<p>Describes the settings for the Insights event selectors that\
        \ you configured for your trail. <code>GetInsightSelectors</code> shows if\
        \ CloudTrail Insights event logging is enabled on the trail, and if it is,\
        \ which insight types are enabled. If you run <code>GetInsightSelectors</code>\
        \ on a trail that does not have Insights events enabled, the operation throws\
        \ the exception <code>InsightNotEnabledException</code> </p> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-insights-events-with-cloudtrail.html\"\
        >Logging CloudTrail Insights Events for Trails </a> in the <i>CloudTrail User\
        \ Guide</i>.</p>"
      operationId: GetInsightSelectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetInsightSelectors
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInsightSelectorsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInsightSelectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightNotEnabledException'
          description: InsightNotEnabledException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetQueryResults:
    post:
      description: Gets event data results of a query. You must specify the <code>QueryID</code>
        value returned by the <code>StartQuery</code> operation.
      operationId: GetQueryResults
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetQueryResults
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQueryResultsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueryResultsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMaxResultsException'
          description: InvalidMaxResultsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryIdNotFoundException'
          description: QueryIdNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientEncryptionPolicyException'
          description: InsufficientEncryptionPolicyException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetResourcePolicy:
    post:
      description: ' Retrieves the JSON text of the resource-based policy document
        attached to the CloudTrail channel. '
      operationId: GetResourcePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceARNNotValidException'
          description: ResourceARNNotValidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePolicyNotFoundException'
          description: ResourcePolicyNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
          description: ResourceTypeNotSupportedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetTrail:
    post:
      description: Returns settings information for a specified trail.
      operationId: GetTrail
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetTrail
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTrailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetTrailStatus:
    post:
      description: "Returns a JSON-formatted list of information about the specified\
        \ trail. Fields include information on delivery errors, Amazon SNS and Amazon\
        \ S3 errors, and start and stop logging times for each trail. This operation\
        \ returns trail status from a single Region. To return trail status from all\
        \ Regions, you must call the operation on each Region."
      operationId: GetTrailStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetTrailStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTrailStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrailStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListChannels:
    post:
      description: " Lists the channels in the current account, and their source names. "
      operationId: ListChannels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListChannels
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListChannelsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListEventDataStores:
    post:
      description: "Returns information about all event data stores in the account,\
        \ in the current Region."
      operationId: ListEventDataStores
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListEventDataStores
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEventDataStoresRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventDataStoresResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMaxResultsException'
          description: InvalidMaxResultsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListImportFailures:
    post:
      description: ' Returns a list of failures for the specified import. '
      operationId: ListImportFailures
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListImportFailures
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListImportFailuresRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportFailuresResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListImports:
    post:
      description: " Returns information on all imports, or a select set of imports\
        \ by <code>ImportStatus</code> or <code>Destination</code>. "
      operationId: ListImports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListImports
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListImportsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListPublicKeys:
    post:
      description: "<p>Returns all public keys whose private keys were used to sign\
        \ the digest files within the specified time range. The public key is needed\
        \ to validate digest files that were signed with its corresponding private\
        \ key.</p> <note> <p>CloudTrail uses different private and public key pairs\
        \ per Region. Each digest file is signed with a private key unique to its\
        \ Region. When you validate a digest file from a specific Region, you must\
        \ look in the same Region for its corresponding public key.</p> </note>"
      operationId: ListPublicKeys
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListPublicKeys
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPublicKeysRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPublicKeysResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTimeRangeException'
          description: InvalidTimeRangeException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTokenException'
          description: InvalidTokenException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListQueries:
    post:
      description: "Returns a list of queries and query statuses for the past seven\
        \ days. You must specify an ARN value for <code>EventDataStore</code>. Optionally,\
        \ to shorten the list of results, you can specify a time range, formatted\
        \ as timestamps, by adding <code>StartTime</code> and <code>EndTime</code>\
        \ parameters, and a <code>QueryStatus</code> value. Valid values for <code>QueryStatus</code>\
        \ include <code>QUEUED</code>, <code>RUNNING</code>, <code>FINISHED</code>,\
        \ <code>FAILED</code>, <code>TIMED_OUT</code>, or <code>CANCELLED</code>."
      operationId: ListQueries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListQueries
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListQueriesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueriesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDateRangeException'
          description: InvalidDateRangeException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMaxResultsException'
          description: InvalidMaxResultsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryStatusException'
          description: InvalidQueryStatusException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListTags:
    post:
      description: "Lists the tags for the specified trails, event data stores, or\
        \ channels in the current Region."
      operationId: ListTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelARNInvalidException'
          description: ChannelARNInvalidException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
          description: ResourceTypeNotSupportedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTokenException'
          description: InvalidTokenException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListTrails:
    post:
      description: Lists trails that are in the current account.
      operationId: ListTrails
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListTrails
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTrailsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.LookupEvents:
    post:
      description: "<p>Looks up <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events\"\
        >management events</a> or <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-insights-events\"\
        >CloudTrail Insights events</a> that are captured by CloudTrail. You can look\
        \ up events that occurred in a Region within the last 90 days. Lookup supports\
        \ the following attributes for management events:</p> <ul> <li> <p>Amazon\
        \ Web Services access key</p> </li> <li> <p>Event ID</p> </li> <li> <p>Event\
        \ name</p> </li> <li> <p>Event source</p> </li> <li> <p>Read only</p> </li>\
        \ <li> <p>Resource name</p> </li> <li> <p>Resource type</p> </li> <li> <p>User\
        \ name</p> </li> </ul> <p>Lookup supports the following attributes for Insights\
        \ events:</p> <ul> <li> <p>Event ID</p> </li> <li> <p>Event name</p> </li>\
        \ <li> <p>Event source</p> </li> </ul> <p>All attributes are optional. The\
        \ default number of results returned is 50, with a maximum of 50 possible.\
        \ The response includes a token that you can use to get the next page of results.</p>\
        \ <important> <p>The rate of lookup requests is limited to two per second,\
        \ per account, per Region. If this limit is exceeded, a throttling error occurs.</p>\
        \ </important>"
      operationId: LookupEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.LookupEvents
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupEventsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLookupAttributesException'
          description: InvalidLookupAttributesException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTimeRangeException'
          description: InvalidTimeRangeException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidMaxResultsException'
          description: InvalidMaxResultsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventCategoryException'
          description: InvalidEventCategoryException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.PutEventSelectors:
    post:
      description: "<p>Configures an event selector or advanced event selectors for\
        \ your trail. Use event selectors or advanced event selectors to specify management\
        \ and data event settings for your trail. If you want your trail to log Insights\
        \ events, be sure the event selector enables logging of the Insights event\
        \ types you want configured for your trail. For more information about logging\
        \ Insights events, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-insights-events-with-cloudtrail.html\"\
        >Logging Insights events for trails</a> in the <i>CloudTrail User Guide</i>.\
        \ By default, trails created without specific event selectors are configured\
        \ to log all read and write management events, and no data events.</p> <p>When\
        \ an event occurs in your account, CloudTrail evaluates the event selectors\
        \ or advanced event selectors in all trails. For each trail, if the event\
        \ matches any event selector, the trail processes and logs the event. If the\
        \ event doesn't match any event selector, the trail doesn't log the event.</p>\
        \ <p>Example</p> <ol> <li> <p>You create an event selector for a trail and\
        \ specify that you want write-only events.</p> </li> <li> <p>The EC2 <code>GetConsoleOutput</code>\
        \ and <code>RunInstances</code> API operations occur in your account.</p>\
        \ </li> <li> <p>CloudTrail evaluates whether the events match your event selectors.</p>\
        \ </li> <li> <p>The <code>RunInstances</code> is a write-only event and it\
        \ matches your event selector. The trail logs the event.</p> </li> <li> <p>The\
        \ <code>GetConsoleOutput</code> is a read-only event that doesn't match your\
        \ event selector. The trail doesn't log the event. </p> </li> </ol> <p>The\
        \ <code>PutEventSelectors</code> operation must be called from the Region\
        \ in which the trail was created; otherwise, an <code>InvalidHomeRegionException</code>\
        \ exception is thrown.</p> <p>You can configure up to five event selectors\
        \ for each trail. For more information, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-events-with-cloudtrail.html\"\
        >Logging management events</a>, <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html\"\
        >Logging data events</a>, and <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/WhatIsCloudTrail-Limits.html\"\
        >Quotas in CloudTrail</a> in the <i>CloudTrail User Guide</i>.</p> <p>You\
        \ can add advanced event selectors, and conditions for your advanced event\
        \ selectors, up to a maximum of 500 values for all conditions and selectors\
        \ on a trail. You can use either <code>AdvancedEventSelectors</code> or <code>EventSelectors</code>,\
        \ but not both. If you apply <code>AdvancedEventSelectors</code> to a trail,\
        \ any existing <code>EventSelectors</code> are overwritten. For more information\
        \ about advanced event selectors, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html\"\
        >Logging data events</a> in the <i>CloudTrail User Guide</i>.</p>"
      operationId: PutEventSelectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.PutEventSelectors
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEventSelectorsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEventSelectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidHomeRegionException'
          description: InvalidHomeRegionException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventSelectorsException'
          description: InvalidEventSelectorsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.PutInsightSelectors:
    post:
      description: "<p>Lets you enable Insights event logging by specifying the Insights\
        \ selectors that you want to enable on an existing trail. You also use <code>PutInsightSelectors</code>\
        \ to turn off Insights event logging, by passing an empty list of insight\
        \ types. The valid Insights event types in this release are <code>ApiErrorRateInsight</code>\
        \ and <code>ApiCallRateInsight</code>.</p> <p>To log CloudTrail Insights events\
        \ on API call volume, the trail must log <code>write</code> management events.\
        \ To log CloudTrail Insights events on API error rate, the trail must log\
        \ <code>read</code> or <code>write</code> management events. You can call\
        \ <code>GetEventSelectors</code> on a trail to check whether the trail logs\
        \ management events.</p>"
      operationId: PutInsightSelectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.PutInsightSelectors
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInsightSelectorsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInsightSelectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidHomeRegionException'
          description: InvalidHomeRegionException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInsightSelectorsException'
          description: InvalidInsightSelectorsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientS3BucketPolicyException'
          description: InsufficientS3BucketPolicyException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientEncryptionPolicyException'
          description: InsufficientEncryptionPolicyException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3BucketDoesNotExistException'
          description: S3BucketDoesNotExistException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsException'
          description: KmsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.PutResourcePolicy:
    post:
      description: " Attaches a resource-based permission policy to a CloudTrail channel\
        \ that is used for an integration with an event source outside of Amazon Web\
        \ Services. For more information about resource-based policies, see <a href=\"\
        https://docs.aws.amazon.com/awscloudtrail/latest/userguide/security_iam_resource-based-policy-examples.html\"\
        >CloudTrail resource-based policy examples</a> in the <i>CloudTrail User Guide</i>. "
      operationId: PutResourcePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.PutResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceARNNotValidException'
          description: ResourceARNNotValidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePolicyNotValidException'
          description: ResourcePolicyNotValidException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
          description: ResourceTypeNotSupportedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RegisterOrganizationDelegatedAdmin:
    post:
      description: Registers an organization’s member account as the CloudTrail delegated
        administrator.
      operationId: RegisterOrganizationDelegatedAdmin
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RegisterOrganizationDelegatedAdmin
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterOrganizationDelegatedAdminRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterOrganizationDelegatedAdminResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRegisteredException'
          description: AccountRegisteredException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'
          description: AccountNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CannotDelegateManagementAccountException'
          description: CannotDelegateManagementAccountException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailAccessNotEnabledException'
          description: CloudTrailAccessNotEnabledException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatedAdminAccountLimitExceededException'
          description: DelegatedAdminAccountLimitExceededException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationManagementAccountException'
          description: NotOrganizationManagementAccountException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotInAllFeaturesModeException'
          description: OrganizationNotInAllFeaturesModeException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsNotInUseException'
          description: OrganizationsNotInUseException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RemoveTags:
    post:
      description: "Removes the specified tags from a trail, event data store, or\
        \ channel."
      operationId: RemoveTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RemoveTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTagsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelARNInvalidException'
          description: ChannelARNInvalidException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTypeNotSupportedException'
          description: ResourceTypeNotSupportedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagParameterException'
          description: InvalidTagParameterException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelNotFoundException'
          description: ChannelNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RestoreEventDataStore:
    post:
      description: "Restores a deleted event data store specified by <code>EventDataStore</code>,\
        \ which accepts an event data store ARN. You can only restore a deleted event\
        \ data store within the seven-day wait period after deletion. Restoring an\
        \ event data store can take several minutes, depending on the size of the\
        \ event data store."
      operationId: RestoreEventDataStore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RestoreEventDataStore
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreEventDataStoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreEventDataStoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreMaxLimitExceededException'
          description: EventDataStoreMaxLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventDataStoreStatusException'
          description: InvalidEventDataStoreStatusException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailAccessNotEnabledException'
          description: CloudTrailAccessNotEnabledException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsNotInUseException'
          description: OrganizationsNotInUseException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotInAllFeaturesModeException'
          description: OrganizationNotInAllFeaturesModeException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartEventDataStoreIngestion:
    post:
      description: "Starts the ingestion of live events on an event data store specified\
        \ as either an ARN or the ID portion of the ARN. To start ingestion, the event\
        \ data store <code>Status</code> must be <code>STOPPED_INGESTION</code> and\
        \ the <code>eventCategory</code> must be <code>Management</code>, <code>Data</code>,\
        \ or <code>ConfigurationItem</code>."
      operationId: StartEventDataStoreIngestion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartEventDataStoreIngestion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartEventDataStoreIngestionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartEventDataStoreIngestionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventDataStoreStatusException'
          description: InvalidEventDataStoreStatusException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventDataStoreCategoryException'
          description: InvalidEventDataStoreCategoryException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartImport:
    post:
      description: "<p> Starts an import of logged trail events from a source S3 bucket\
        \ to a destination event data store. By default, CloudTrail only imports events\
        \ contained in the S3 bucket's <code>CloudTrail</code> prefix and the prefixes\
        \ inside the <code>CloudTrail</code> prefix, and does not check prefixes for\
        \ other Amazon Web Services services. If you want to import CloudTrail events\
        \ contained in another prefix, you must include the prefix in the <code>S3LocationUri</code>.\
        \ For more considerations about importing trail events, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-copy-trail-to-lake.html#cloudtrail-trail-copy-considerations\"\
        >Considerations</a>. </p> <p> When you start a new import, the <code>Destinations</code>\
        \ and <code>ImportSource</code> parameters are required. Before starting a\
        \ new import, disable any access control lists (ACLs) attached to the source\
        \ S3 bucket. For more information about disabling ACLs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html\"\
        >Controlling ownership of objects and disabling ACLs for your bucket</a>.\
        \ </p> <p> When you retry an import, the <code>ImportID</code> parameter is\
        \ required. </p> <note> <p> If the destination event data store is for an\
        \ organization, you must use the management account to import trail events.\
        \ You cannot use the delegated administrator account for the organization.\
        \ </p> </note>"
      operationId: StartImport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartImport
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartImportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartImportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHasOngoingImportException'
          description: AccountHasOngoingImportException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventDataStoreStatusException'
          description: InvalidEventDataStoreStatusException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventDataStoreCategoryException'
          description: InvalidEventDataStoreCategoryException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidImportSourceException'
          description: InvalidImportSourceException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportNotFoundException'
          description: ImportNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientEncryptionPolicyException'
          description: InsufficientEncryptionPolicyException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartLogging:
    post:
      description: "Starts the recording of Amazon Web Services API calls and log\
        \ file delivery for a trail. For a trail that is enabled in all Regions, this\
        \ operation must be called from the Region in which the trail was created.\
        \ This operation cannot be called on the shadow trails (replicated trails\
        \ in other Regions) of a trail that is enabled in all Regions."
      operationId: StartLogging
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartLogging
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartLoggingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartLoggingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidHomeRegionException'
          description: InvalidHomeRegionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartQuery:
    post:
      description: "<p>Starts a CloudTrail Lake query. Use the <code>QueryStatement</code>\
        \ parameter to provide your SQL query, enclosed in single quotation marks.\
        \ Use the optional <code>DeliveryS3Uri</code> parameter to deliver the query\
        \ results to an S3 bucket.</p> <p> <code>StartQuery</code> requires you specify\
        \ either the <code>QueryStatement</code> parameter, or a <code>QueryAlias</code>\
        \ and any <code>QueryParameters</code>. In the current release, the <code>QueryAlias</code>\
        \ and <code>QueryParameters</code> parameters are used only for the queries\
        \ that populate the CloudTrail Lake dashboards.</p>"
      operationId: StartQuery
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartQuery
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartQueryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartQueryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryStatementException'
          description: InvalidQueryStatementException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxConcurrentQueriesException'
          description: MaxConcurrentQueriesException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientEncryptionPolicyException'
          description: InsufficientEncryptionPolicyException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3PrefixException'
          description: InvalidS3PrefixException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3BucketNameException'
          description: InvalidS3BucketNameException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientS3BucketPolicyException'
          description: InsufficientS3BucketPolicyException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3BucketDoesNotExistException'
          description: S3BucketDoesNotExistException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StopEventDataStoreIngestion:
    post:
      description: "Stops the ingestion of live events on an event data store specified\
        \ as either an ARN or the ID portion of the ARN. To stop ingestion, the event\
        \ data store <code>Status</code> must be <code>ENABLED</code> and the <code>eventCategory</code>\
        \ must be <code>Management</code>, <code>Data</code>, or <code>ConfigurationItem</code>."
      operationId: StopEventDataStoreIngestion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StopEventDataStoreIngestion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopEventDataStoreIngestionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopEventDataStoreIngestionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventDataStoreStatusException'
          description: InvalidEventDataStoreStatusException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventDataStoreCategoryException'
          description: InvalidEventDataStoreCategoryException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StopImport:
    post:
      description: ' Stops a specified import. '
      operationId: StopImport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StopImport
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopImportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopImportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportNotFoundException'
          description: ImportNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StopLogging:
    post:
      description: "Suspends the recording of Amazon Web Services API calls and log\
        \ file delivery for the specified trail. Under most circumstances, there is\
        \ no need to use this action. You can update a trail without stopping it first.\
        \ This action is the only way to stop recording. For a trail enabled in all\
        \ Regions, this operation must be called from the Region in which the trail\
        \ was created, or an <code>InvalidHomeRegionException</code> will occur. This\
        \ operation cannot be called on the shadow trails (replicated trails in other\
        \ Regions) of a trail enabled in all Regions."
      operationId: StopLogging
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StopLogging
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopLoggingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopLoggingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidHomeRegionException'
          description: InvalidHomeRegionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.UpdateChannel:
    post:
      description: Updates a channel specified by a required channel ARN or UUID.
      operationId: UpdateChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.UpdateChannel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelARNInvalidException'
          description: ChannelARNInvalidException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelNotFoundException'
          description: ChannelNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAlreadyExistsException'
          description: ChannelAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventDataStoreCategoryException'
          description: InvalidEventDataStoreCategoryException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.UpdateEventDataStore:
    post:
      description: "<p>Updates an event data store. The required <code>EventDataStore</code>\
        \ value is an ARN or the ID portion of the ARN. Other parameters are optional,\
        \ but at least one optional parameter must be specified, or CloudTrail throws\
        \ an error. <code>RetentionPeriod</code> is in days, and valid values are\
        \ integers between 90 and 2557. By default, <code>TerminationProtection</code>\
        \ is enabled.</p> <p>For event data stores for CloudTrail events, <code>AdvancedEventSelectors</code>\
        \ includes or excludes management and data events in your event data store.\
        \ For more information about <code>AdvancedEventSelectors</code>, see <a href=\"\
        https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_AdvancedEventSelector.html\"\
        >AdvancedEventSelectors</a>.</p> <p> For event data stores for Config configuration\
        \ items, Audit Manager evidence, or non-Amazon Web Services events, <code>AdvancedEventSelectors</code>\
        \ includes events of that type in your event data store.</p>"
      operationId: UpdateEventDataStore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.UpdateEventDataStore
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventDataStoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEventDataStoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreAlreadyExistsException'
          description: EventDataStoreAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreARNInvalidException'
          description: EventDataStoreARNInvalidException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreNotFoundException'
          description: EventDataStoreNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventSelectorsException'
          description: InvalidEventSelectorsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataStoreHasOngoingImportException'
          description: EventDataStoreHasOngoingImportException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveEventDataStoreException'
          description: InactiveEventDataStoreException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientEncryptionPolicyException'
          description: InsufficientEncryptionPolicyException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKmsKeyIdException'
          description: InvalidKmsKeyIdException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyNotFoundException'
          description: KmsKeyNotFoundException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsException'
          description: KmsException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailAccessNotEnabledException'
          description: CloudTrailAccessNotEnabledException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsNotInUseException'
          description: OrganizationsNotInUseException
        "496":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "497":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "498":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotInAllFeaturesModeException'
          description: OrganizationNotInAllFeaturesModeException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.UpdateTrail:
    post:
      description: "Updates trail settings that control what events you are logging,\
        \ and how to handle log files. Changes to a trail do not require stopping\
        \ the CloudTrail service. Use this action to designate an existing bucket\
        \ for log delivery. If the existing bucket has previously been a target for\
        \ CloudTrail log files, an IAM policy exists for the bucket. <code>UpdateTrail</code>\
        \ must be called from the Region in which the trail was created; otherwise,\
        \ an <code>InvalidHomeRegionException</code> is thrown."
      operationId: UpdateTrail
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.UpdateTrail
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTrailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3BucketDoesNotExistException'
          description: S3BucketDoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientS3BucketPolicyException'
          description: InsufficientS3BucketPolicyException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientSnsTopicPolicyException'
          description: InsufficientSnsTopicPolicyException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientEncryptionPolicyException'
          description: InsufficientEncryptionPolicyException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotFoundException'
          description: TrailNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3BucketNameException'
          description: InvalidS3BucketNameException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3PrefixException'
          description: InvalidS3PrefixException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSnsTopicNameException'
          description: InvalidSnsTopicNameException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKmsKeyIdException'
          description: InvalidKmsKeyIdException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTrailNameException'
          description: InvalidTrailNameException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailNotProvidedException'
          description: TrailNotProvidedException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventSelectorsException'
          description: InvalidEventSelectorsException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailARNInvalidException'
          description: CloudTrailARNInvalidException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidHomeRegionException'
          description: InvalidHomeRegionException
        "496":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyNotFoundException'
          description: KmsKeyNotFoundException
        "497":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsKeyDisabledException'
          description: KmsKeyDisabledException
        "498":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsException'
          description: KmsException
        "499":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCloudWatchLogsLogGroupArnException'
          description: InvalidCloudWatchLogsLogGroupArnException
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCloudWatchLogsRoleArnException'
          description: InvalidCloudWatchLogsRoleArnException
        "501":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWatchLogsDeliveryUnavailableException'
          description: CloudWatchLogsDeliveryUnavailableException
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailAccessNotEnabledException'
          description: CloudTrailAccessNotEnabledException
        "505":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientDependencyServiceAccessPermissionException'
          description: InsufficientDependencyServiceAccessPermissionException
        "506":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsNotInUseException'
          description: OrganizationsNotInUseException
        "507":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotOrganizationMasterAccountException'
          description: NotOrganizationMasterAccountException
        "508":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotInAllFeaturesModeException'
          description: OrganizationNotInAllFeaturesModeException
        "509":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoManagementAccountSLRExistsException'
          description: NoManagementAccountSLRExistsException
        "510":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTrailInvalidClientTokenIdException'
          description: CloudTrailInvalidClientTokenIdException
        "511":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddTagsResponse:
      description: "Returns the objects or data if successful. Otherwise, returns\
        \ an error."
      properties: {}
      type: object
    AddTagsRequest:
      description: "Specifies the tags to add to a trail, event data store, or channel."
      example:
        ResourceId: ""
        TagsList: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the ARN of the trail, event data store, or\
              \ channel to which one or more tags will be added.</p> <p>The format\
              \ of a trail ARN is: <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>\
              \ </p> <p>The format of an event data store ARN is: <code>arn:aws:cloudtrail:us-east-2:123456789012:eventdatastore/EXAMPLE-f852-4e8f-8bd1-bcf6cEXAMPLE</code>\
              \ </p> <p>The format of a channel ARN is: <code>arn:aws:cloudtrail:us-east-2:123456789012:channel/01234567890</code>\
              \ </p>"
        TagsList:
          allOf:
          - $ref: '#/components/schemas/TagsList'
          - description: "Contains a list of tags, up to a limit of 50"
      required:
      - ResourceId
      - TagsList
      title: AddTagsRequest
      type: object
    ResourceNotFoundException: {}
    CloudTrailARNInvalidException: {}
    EventDataStoreARNInvalidException: {}
    ChannelARNInvalidException: {}
    ResourceTypeNotSupportedException: {}
    TagsLimitExceededException: {}
    InvalidTrailNameException: {}
    InvalidTagParameterException: {}
    InactiveEventDataStoreException: {}
    EventDataStoreNotFoundException: {}
    ChannelNotFoundException: {}
    UnsupportedOperationException: {}
    OperationNotPermittedException: {}
    NotOrganizationMasterAccountException: {}
    NoManagementAccountSLRExistsException: {}
    ConflictException: {}
    CancelQueryResponse:
      example:
        QueryId: ""
        QueryStatus: ""
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the canceled query.
        QueryStatus:
          allOf:
          - $ref: '#/components/schemas/QueryStatus'
          - description: "Shows the status of a query after a <code>CancelQuery</code>\
              \ request. Typically, the values shown are either <code>RUNNING</code>\
              \ or <code>CANCELLED</code>."
      required:
      - QueryId
      - QueryStatus
      type: object
    CancelQueryRequest:
      example:
        EventDataStore: ""
        QueryId: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - deprecated: true
            description: The ARN (or the ID suffix of the ARN) of an event data store
              on which the specified query is running.EventDataStore is no longer
              required by CancelQueryRequest
        QueryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the query that you want to cancel. The <code>QueryId</code>
              comes from the response of a <code>StartQuery</code> operation.
      required:
      - QueryId
      title: CancelQueryRequest
      type: object
    InactiveQueryException: {}
    InvalidParameterException: {}
    QueryIdNotFoundException: {}
    CreateChannelResponse:
      example:
        ChannelArn: ""
        Destinations: ""
        Source: ""
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        Name: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: The Amazon Resource Name (ARN) of the new channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: The name of the new channel.
        Source:
          allOf:
          - $ref: '#/components/schemas/Source'
          - description: The partner or external event source name.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/Destinations'
          - description: The event data stores that log the events arriving through
              the channel.
        Tags:
          description: A list of tags.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          type: array
      type: object
    CreateChannelRequest:
      example:
        Destinations: ""
        Source: ""
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: The name of the channel.
        Source:
          allOf:
          - $ref: '#/components/schemas/Source'
          - description: "<p>The name of the partner or external event source. You\
              \ cannot change this name after you create the channel. A maximum of\
              \ one channel is allowed per source.</p> <p> A source can be either\
              \ <code>Custom</code> for all valid non-Amazon Web Services events,\
              \ or the name of a partner event source. For information about the source\
              \ names for available partners, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/query-event-data-store-integration.html#cloudtrail-lake-partner-information\"\
              >Additional information about integration partners</a> in the CloudTrail\
              \ User Guide. </p>"
        Destinations:
          allOf:
          - $ref: '#/components/schemas/Destinations'
          - description: One or more event data stores to which events arriving through
              a channel will be logged.
        Tags:
          description: A list of tags.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          type: array
      required:
      - Destinations
      - Name
      - Source
      title: CreateChannelRequest
      type: object
    ChannelMaxLimitExceededException: {}
    InvalidSourceException: {}
    ChannelAlreadyExistsException: {}
    InvalidEventDataStoreCategoryException: {}
    CreateEventDataStoreResponse:
      example:
        Status: ""
        OrganizationEnabled: ""
        UpdatedTimestamp: ""
        EventDataStoreArn: ""
        CreatedTimestamp: ""
        KmsKeyId: ""
        AdvancedEventSelectors: ""
        TerminationProtectionEnabled: ""
        MultiRegionEnabled: ""
        RetentionPeriod: ""
        TagsList:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        Name: ""
      properties:
        EventDataStoreArn:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN of the event data store.
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreName'
          - description: The name of the event data store.
        Status:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreStatus'
          - description: The status of event data store creation.
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: The advanced event selectors that were used to select the
              events for the data store.
        MultiRegionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether the event data store collects events from\
              \ all Regions, or only from the Region in which it was created."
        OrganizationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether an event data store is collecting logged
              events for an organization in Organizations.
        RetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriod'
          - description: "The retention period of an event data store, in days."
        TerminationProtectionEnabled:
          allOf:
          - $ref: '#/components/schemas/TerminationProtectionEnabled'
          - description: Indicates whether termination protection is enabled for the
              event data store.
        TagsList:
          description: A list of tags.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          type: array
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp that shows when the event data store was created.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "The timestamp that shows when an event data store was updated,\
              \ if applicable. <code>UpdatedTimestamp</code> is always either the\
              \ same or newer than the time shown in <code>CreatedTimestamp</code>."
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreKmsKeyId'
          - description: <p>Specifies the KMS key ID that encrypts the events delivered
              by CloudTrail. The value is a fully specified ARN to a KMS key in the
              following format.</p> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>
              </p>
      type: object
    CreateEventDataStoreRequest:
      example:
        OrganizationEnabled: ""
        StartIngestion: ""
        KmsKeyId: ""
        AdvancedEventSelectors: ""
        TerminationProtectionEnabled: ""
        MultiRegionEnabled: ""
        RetentionPeriod: ""
        TagsList:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreName'
          - description: The name of the event data store.
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: "<p>The advanced event selectors to use to select the events\
              \ for the data store. You can configure up to five advanced event selectors\
              \ for each event data store.</p> <p> For more information about how\
              \ to use advanced event selectors to log CloudTrail events, see <a href=\"\
              https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced\"\
              >Log events by using advanced event selectors</a> in the CloudTrail\
              \ User Guide.</p> <p>For more information about how to use advanced\
              \ event selectors to include Config configuration items in your event\
              \ data store, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/query-lake-cli.html#lake-cli-create-eds-config\"\
              >Create an event data store for Config configuration items</a> in the\
              \ CloudTrail User Guide.</p> <p>For more information about how to use\
              \ advanced event selectors to include non-Amazon Web Services events\
              \ in your event data store, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/query-lake-cli.html#lake-cli-create-integration\"\
              >Create an integration to log events from outside Amazon Web Services</a>\
              \ in the CloudTrail User Guide.</p>"
        MultiRegionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether the event data store includes events from\
              \ all Regions, or only from the Region in which the event data store\
              \ is created."
        OrganizationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether an event data store collects events logged
              for an organization in Organizations.
        RetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriod'
          - description: "The retention period of the event data store, in days. You\
              \ can set a retention period of up to 2557 days, the equivalent of seven\
              \ years."
        TerminationProtectionEnabled:
          allOf:
          - $ref: '#/components/schemas/TerminationProtectionEnabled'
          - description: "Specifies whether termination protection is enabled for\
              \ the event data store. If termination protection is enabled, you cannot\
              \ delete the event data store until termination protection is disabled."
        TagsList:
          description: A list of tags.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          type: array
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreKmsKeyId'
          - description: "<p>Specifies the KMS key ID to use to encrypt the events\
              \ delivered by CloudTrail. The value can be an alias name prefixed by\
              \ <code>alias/</code>, a fully specified ARN to an alias, a fully specified\
              \ ARN to a key, or a globally unique identifier.</p> <important> <p>Disabling\
              \ or deleting the KMS key, or removing CloudTrail permissions on the\
              \ key, prevents CloudTrail from logging events to the event data store,\
              \ and prevents users from querying the data in the event data store\
              \ that was encrypted with the key. After you associate an event data\
              \ store with a KMS key, the KMS key cannot be removed or changed. Before\
              \ you disable or delete a KMS key that you are using with an event data\
              \ store, delete or back up your event data store.</p> </important> <p>CloudTrail\
              \ also supports KMS multi-Region keys. For more information about multi-Region\
              \ keys, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html\"\
              >Using multi-Region keys</a> in the <i>Key Management Service Developer\
              \ Guide</i>.</p> <p>Examples:</p> <ul> <li> <p> <code>alias/MyAliasName</code>\
              \ </p> </li> <li> <p> <code>arn:aws:kms:us-east-2:123456789012:alias/MyAliasName</code>\
              \ </p> </li> <li> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>\
              \ </p> </li> <li> <p> <code>12345678-1234-1234-1234-123456789012</code>\
              \ </p> </li> </ul>"
        StartIngestion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the event data store should start ingesting
              live events. The default is true.
      required:
      - Name
      title: CreateEventDataStoreRequest
      type: object
    EventDataStoreAlreadyExistsException: {}
    EventDataStoreMaxLimitExceededException: {}
    InvalidEventSelectorsException: {}
    InsufficientEncryptionPolicyException: {}
    InvalidKmsKeyIdException: {}
    KmsKeyNotFoundException: {}
    KmsException: {}
    CloudTrailAccessNotEnabledException: {}
    InsufficientDependencyServiceAccessPermissionException: {}
    OrganizationsNotInUseException: {}
    OrganizationNotInAllFeaturesModeException: {}
    CreateTrailResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      example:
        IncludeGlobalServiceEvents: ""
        KmsKeyId: ""
        CloudWatchLogsRoleArn: ""
        S3KeyPrefix: ""
        Name: ""
        IsOrganizationTrail: ""
        CloudWatchLogsLogGroupArn: ""
        SnsTopicName: ""
        LogFileValidationEnabled: ""
        IsMultiRegionTrail: ""
        S3BucketName: ""
        SnsTopicARN: ""
        TrailARN: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the trail.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the Amazon S3 bucket designated for
              publishing log files.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the Amazon S3 key prefix that comes after the\
              \ name of the bucket you have designated for log file delivery. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-find-log-files.html\"\
              >Finding Your CloudTrail Log Files</a>."
        SnsTopicName:
          allOf:
          - $ref: '#/components/schemas/String'
          - deprecated: true
            description: This field is no longer in use. Use <code>SnsTopicARN</code>.
        SnsTopicARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the ARN of the Amazon SNS topic that CloudTrail
              uses to send notifications when log files are delivered. The format
              of a topic ARN is:</p> <p> <code>arn:aws:sns:us-east-2:123456789012:MyTopic</code>
              </p>
        IncludeGlobalServiceEvents:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail is publishing events from global
              services such as IAM to the log files.
        IsMultiRegionTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail exists in one Region or in all
              Regions.
        TrailARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the ARN of the trail that was created. The format
              of a trail ARN is:</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>
              </p>
        LogFileValidationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether log file integrity validation is enabled.
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the Amazon Resource Name (ARN) of the log group
              to which CloudTrail logs will be delivered.
        CloudWatchLogsRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the role for the CloudWatch Logs endpoint to assume
              to write to a user's log group.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the KMS key ID that encrypts the events delivered
              by CloudTrail. The value is a fully specified ARN to a KMS key in the
              following format.</p> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>
              </p>
        IsOrganizationTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail is an organization trail.
      type: object
    CreateTrailRequest:
      description: Specifies the settings for each trail.
      example:
        CloudWatchLogsLogGroupArn: ""
        IncludeGlobalServiceEvents: ""
        SnsTopicName: ""
        KmsKeyId: ""
        CloudWatchLogsRoleArn: ""
        S3KeyPrefix: ""
        IsMultiRegionTrail: ""
        S3BucketName: ""
        EnableLogFileValidation: ""
        TagsList:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        Name: ""
        IsOrganizationTrail: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the name of the trail. The name must meet the\
              \ following requirements:</p> <ul> <li> <p>Contain only ASCII letters\
              \ (a-z, A-Z), numbers (0-9), periods (.), underscores (_), or dashes\
              \ (-)</p> </li> <li> <p>Start with a letter or number, and end with\
              \ a letter or number</p> </li> <li> <p>Be between 3 and 128 characters</p>\
              \ </li> <li> <p>Have no adjacent periods, underscores or dashes. Names\
              \ like <code>my-_namespace</code> and <code>my--namespace</code> are\
              \ not valid.</p> </li> <li> <p>Not be in IP address format (for example,\
              \ 192.168.5.4)</p> </li> </ul>"
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the Amazon S3 bucket designated for
              publishing log files. See <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/create_trail_naming_policy.html">Amazon
              S3 Bucket Naming Requirements</a>.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the Amazon S3 key prefix that comes after the\
              \ name of the bucket you have designated for log file delivery. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-find-log-files.html\"\
              >Finding Your CloudTrail Log Files</a>. The maximum length is 200 characters."
        SnsTopicName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the Amazon SNS topic defined for notification
              of log file delivery. The maximum length is 256 characters.
        IncludeGlobalServiceEvents:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail is publishing events from global
              services such as IAM to the log files.
        IsMultiRegionTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether the trail is created in the current Region\
              \ or in all Regions. The default is false, which creates a trail only\
              \ in the Region where you are signed in. As a best practice, consider\
              \ creating trails that log events in all Regions."
        EnableLogFileValidation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Specifies whether log file integrity validation is enabled.\
              \ The default is false.</p> <note> <p>When you disable log file integrity\
              \ validation, the chain of digest files is broken after one hour. CloudTrail\
              \ does not create digest files for log files that were delivered during\
              \ a period in which log file integrity validation was disabled. For\
              \ example, if you enable log file integrity validation at noon on January\
              \ 1, disable it at noon on January 2, and re-enable it at noon on January\
              \ 10, digest files will not be created for the log files delivered from\
              \ noon on January 2 to noon on January 10. The same applies whenever\
              \ you stop CloudTrail logging or delete a trail.</p> </note>"
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies a log group name using an Amazon Resource Name\
              \ (ARN), a unique identifier that represents the log group to which\
              \ CloudTrail logs will be delivered. You must use a log group that exists\
              \ in your account.</p> <p>Not required unless you specify <code>CloudWatchLogsRoleArn</code>.</p>"
        CloudWatchLogsRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the role for the CloudWatch Logs endpoint to assume
              to write to a user's log group. You must use a role that exists in your
              account.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the KMS key ID to use to encrypt the logs delivered\
              \ by CloudTrail. The value can be an alias name prefixed by <code>alias/</code>,\
              \ a fully specified ARN to an alias, a fully specified ARN to a key,\
              \ or a globally unique identifier.</p> <p>CloudTrail also supports KMS\
              \ multi-Region keys. For more information about multi-Region keys, see\
              \ <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html\"\
              >Using multi-Region keys</a> in the <i>Key Management Service Developer\
              \ Guide</i>.</p> <p>Examples:</p> <ul> <li> <p> <code>alias/MyAliasName</code>\
              \ </p> </li> <li> <p> <code>arn:aws:kms:us-east-2:123456789012:alias/MyAliasName</code>\
              \ </p> </li> <li> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>\
              \ </p> </li> <li> <p> <code>12345678-1234-1234-1234-123456789012</code>\
              \ </p> </li> </ul>"
        IsOrganizationTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether the trail is created for all accounts\
              \ in an organization in Organizations, or only for the current Amazon\
              \ Web Services account. The default is false, and cannot be true unless\
              \ the call is made on behalf of an Amazon Web Services account that\
              \ is the management account or delegated administrator account for an\
              \ organization in Organizations."
        TagsList:
          description: A list of tags.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          type: array
      required:
      - Name
      - S3BucketName
      title: CreateTrailRequest
      type: object
    MaximumNumberOfTrailsExceededException: {}
    TrailAlreadyExistsException: {}
    S3BucketDoesNotExistException: {}
    InsufficientS3BucketPolicyException: {}
    InsufficientSnsTopicPolicyException: {}
    InvalidS3BucketNameException: {}
    InvalidS3PrefixException: {}
    InvalidSnsTopicNameException: {}
    TrailNotProvidedException: {}
    InvalidParameterCombinationException: {}
    KmsKeyDisabledException: {}
    InvalidCloudWatchLogsLogGroupArnException: {}
    InvalidCloudWatchLogsRoleArnException: {}
    CloudWatchLogsDeliveryUnavailableException: {}
    CloudTrailInvalidClientTokenIdException: {}
    DeleteChannelResponse:
      properties: {}
      type: object
    DeleteChannelRequest:
      example:
        Channel: ""
      properties:
        Channel:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: The ARN or the <code>UUID</code> value of the channel that
              you want to delete.
      required:
      - Channel
      title: DeleteChannelRequest
      type: object
    DeleteEventDataStoreResponse:
      properties: {}
      type: object
    DeleteEventDataStoreRequest:
      example:
        EventDataStore: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN (or the ID suffix of the ARN) of the event data store
              to delete.
      required:
      - EventDataStore
      title: DeleteEventDataStoreRequest
      type: object
    EventDataStoreTerminationProtectedException: {}
    EventDataStoreHasOngoingImportException: {}
    ChannelExistsForEDSException: {}
    DeleteResourcePolicyResponse:
      properties: {}
      type: object
    DeleteResourcePolicyRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: " The Amazon Resource Name (ARN) of the CloudTrail channel\
              \ you're deleting the resource-based policy from. The following is the\
              \ format of a resource ARN: <code>arn:aws:cloudtrail:us-east-2:123456789012:channel/MyChannel</code>. "
      required:
      - ResourceArn
      title: DeleteResourcePolicyRequest
      type: object
    ResourceARNNotValidException: {}
    ResourcePolicyNotFoundException: {}
    DeleteTrailResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      properties: {}
      type: object
    DeleteTrailRequest:
      description: The request that specifies the name of a trail to delete.
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'Specifies the name or the CloudTrail ARN of the trail to
              be deleted. The following is the format of a trail ARN. <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code> '
      required:
      - Name
      title: DeleteTrailRequest
      type: object
    TrailNotFoundException: {}
    InvalidHomeRegionException: {}
    DeregisterOrganizationDelegatedAdminResponse:
      description: "Returns the following response if successful. Otherwise, returns\
        \ an error."
      properties: {}
      type: object
    DeregisterOrganizationDelegatedAdminRequest:
      description: Removes CloudTrail delegated administrator permissions from a specified
        member account in an organization that is currently designated as a delegated
        administrator.
      example:
        DelegatedAdminAccountId: ""
      properties:
        DelegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: A delegated administrator account ID. This is a member account
              in an organization that is currently designated as a delegated administrator.
      required:
      - DelegatedAdminAccountId
      title: DeregisterOrganizationDelegatedAdminRequest
      type: object
    AccountNotFoundException: {}
    AccountNotRegisteredException: {}
    NotOrganizationManagementAccountException: {}
    DescribeQueryResponse:
      example:
        DeliveryS3Uri: ""
        QueryStatistics:
          EventsScanned: ""
          EventsMatched: ""
          BytesScanned: ""
          CreationTime: ""
          ExecutionTimeInMillis: ""
        QueryString: ""
        QueryId: ""
        DeliveryStatus: ""
        ErrorMessage: ""
        QueryStatus: ""
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the query.
        QueryString:
          allOf:
          - $ref: '#/components/schemas/QueryStatement'
          - description: The SQL code of a query.
        QueryStatus:
          allOf:
          - $ref: '#/components/schemas/QueryStatus'
          - description: "The status of a query. Values for <code>QueryStatus</code>\
              \ include <code>QUEUED</code>, <code>RUNNING</code>, <code>FINISHED</code>,\
              \ <code>FAILED</code>, <code>TIMED_OUT</code>, or <code>CANCELLED</code> "
        QueryStatistics:
          $ref: '#/components/schemas/DescribeQueryResponse_QueryStatistics'
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The error message returned if a query failed.
        DeliveryS3Uri:
          allOf:
          - $ref: '#/components/schemas/DeliveryS3Uri'
          - description: "The URI for the S3 bucket where CloudTrail delivered query\
              \ results, if applicable."
        DeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatus'
          - description: The delivery status.
      type: object
    DescribeQueryRequest:
      example:
        EventDataStore: ""
        QueryId: ""
        QueryAlias: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - deprecated: true
            description: The ARN (or the ID suffix of the ARN) of an event data store
              on which the specified query was run.EventDataStore is no longer required
              by DescribeQueryRequest
        QueryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The query ID.
        QueryAlias:
          allOf:
          - $ref: '#/components/schemas/QueryAlias'
          - description: ' The alias that identifies a query template. '
      title: DescribeQueryRequest
      type: object
    DescribeTrailsResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      example:
        trailList: ""
      properties:
        trailList:
          allOf:
          - $ref: '#/components/schemas/TrailList'
          - description: "The list of trail objects. Trail objects with string values\
              \ are only returned if values for the objects exist in a trail's configuration.\
              \ For example, <code>SNSTopicName</code> and <code>SNSTopicARN</code>\
              \ are only returned in results if a trail is configured to send SNS\
              \ notifications. Similarly, <code>KMSKeyId</code> only appears in results\
              \ if a trail's log files are encrypted with KMS customer managed keys."
      type: object
    DescribeTrailsRequest:
      description: Returns information about the trail.
      example:
        trailNameList: ""
        includeShadowTrails: ""
      properties:
        trailNameList:
          allOf:
          - $ref: '#/components/schemas/TrailNameList'
          - description: "<p>Specifies a list of trail names, trail ARNs, or both,\
              \ of the trails to describe. The format of a trail ARN is:</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>\
              \ </p> <p>If an empty list is specified, information for the trail in\
              \ the current Region is returned.</p> <ul> <li> <p>If an empty list\
              \ is specified and <code>IncludeShadowTrails</code> is false, then information\
              \ for all trails in the current Region is returned.</p> </li> <li> <p>If\
              \ an empty list is specified and IncludeShadowTrails is null or true,\
              \ then information for all trails in the current Region and any associated\
              \ shadow trails in other Regions is returned.</p> </li> </ul> <note>\
              \ <p>If one or more trail names are specified, information is returned\
              \ only if the names match the names of trails belonging only to the\
              \ current Region and current account. To return information about a\
              \ trail in another Region, you must specify its trail ARN.</p> </note>"
        includeShadowTrails:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether to include shadow trails in the response.\
              \ A shadow trail is the replication in a Region of a trail that was\
              \ created in a different Region, or in the case of an organization trail,\
              \ the replication of an organization trail in member accounts. If you\
              \ do not include shadow trails, organization trails in a member account\
              \ and Region replication trails will not be returned. The default is\
              \ true."
      title: DescribeTrailsRequest
      type: object
    GetChannelResponse:
      example:
        ChannelArn: ""
        IngestionStatus:
          LatestIngestionSuccessEventID: ""
          LatestIngestionAttemptTime: ""
          LatestIngestionAttemptEventID: ""
          LatestIngestionSuccessTime: ""
          LatestIngestionErrorCode: ""
        SourceConfig:
          ApplyToAllRegions: ""
          AdvancedEventSelectors: ""
        Destinations: ""
        Source: ""
        Name: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: The ARN of an channel returned by a <code>GetChannel</code>
              request.
        Name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: " The name of the CloudTrail channel. For service-linked\
              \ channels, the name is <code>aws-service-channel/service-name/custom-suffix</code>\
              \ where <code>service-name</code> represents the name of the Amazon\
              \ Web Services service that created the channel and <code>custom-suffix</code>\
              \ represents the suffix generated by the Amazon Web Services service. "
        Source:
          allOf:
          - $ref: '#/components/schemas/Source'
          - description: The source for the CloudTrail channel.
        SourceConfig:
          $ref: '#/components/schemas/GetChannelResponse_SourceConfig'
        Destinations:
          allOf:
          - $ref: '#/components/schemas/Destinations'
          - description: "The destinations for the channel. For channels created for\
              \ integrations, the destinations are the event data stores that log\
              \ events arriving through the channel. For service-linked channels,\
              \ the destination is the Amazon Web Services service that created the\
              \ service-linked channel to receive events."
        IngestionStatus:
          $ref: '#/components/schemas/GetChannelResponse_IngestionStatus'
      type: object
    GetChannelRequest:
      example:
        Channel: ""
      properties:
        Channel:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: The ARN or <code>UUID</code> of a channel.
      required:
      - Channel
      title: GetChannelRequest
      type: object
    GetEventDataStoreResponse:
      example:
        Status: ""
        OrganizationEnabled: ""
        UpdatedTimestamp: ""
        EventDataStoreArn: ""
        CreatedTimestamp: ""
        KmsKeyId: ""
        AdvancedEventSelectors: ""
        TerminationProtectionEnabled: ""
        MultiRegionEnabled: ""
        RetentionPeriod: ""
        Name: ""
      properties:
        EventDataStoreArn:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The event data store Amazon Resource Number (ARN).
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreName'
          - description: The name of the event data store.
        Status:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreStatus'
          - description: The status of an event data store.
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: The advanced event selectors used to select events for the
              data store.
        MultiRegionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether the event data store includes events from\
              \ all Regions, or only from the Region in which it was created."
        OrganizationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether an event data store is collecting logged
              events for an organization in Organizations.
        RetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriod'
          - description: "The retention period of the event data store, in days."
        TerminationProtectionEnabled:
          allOf:
          - $ref: '#/components/schemas/TerminationProtectionEnabled'
          - description: Indicates that termination protection is enabled.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp of the event data store's creation.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "Shows the time that an event data store was updated, if\
              \ applicable. <code>UpdatedTimestamp</code> is always either the same\
              \ or newer than the time shown in <code>CreatedTimestamp</code>."
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreKmsKeyId'
          - description: <p>Specifies the KMS key ID that encrypts the events delivered
              by CloudTrail. The value is a fully specified ARN to a KMS key in the
              following format.</p> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>
              </p>
      type: object
    GetEventDataStoreRequest:
      example:
        EventDataStore: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN (or ID suffix of the ARN) of the event data store
              about which you want information.
      required:
      - EventDataStore
      title: GetEventDataStoreRequest
      type: object
    GetEventSelectorsResponse:
      example:
        EventSelectors: ""
        AdvancedEventSelectors: ""
        TrailARN: ""
      properties:
        TrailARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The specified trail ARN that has the event selectors.
        EventSelectors:
          allOf:
          - $ref: '#/components/schemas/EventSelectors'
          - description: The event selectors that are configured for the trail.
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: ' The advanced event selectors that are configured for the
              trail. '
      type: object
    GetEventSelectorsRequest:
      example:
        TrailName: ""
      properties:
        TrailName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the name of the trail or trail ARN. If you\
              \ specify a trail name, the string must meet the following requirements:</p>\
              \ <ul> <li> <p>Contain only ASCII letters (a-z, A-Z), numbers (0-9),\
              \ periods (.), underscores (_), or dashes (-)</p> </li> <li> <p>Start\
              \ with a letter or number, and end with a letter or number</p> </li>\
              \ <li> <p>Be between 3 and 128 characters</p> </li> <li> <p>Have no\
              \ adjacent periods, underscores or dashes. Names like <code>my-_namespace</code>\
              \ and <code>my--namespace</code> are not valid.</p> </li> <li> <p>Not\
              \ be in IP address format (for example, 192.168.5.4)</p> </li> </ul>\
              \ <p>If you specify a trail ARN, it must be in the format:</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>\
              \ </p>"
      required:
      - TrailName
      title: GetEventSelectorsRequest
      type: object
    GetImportResponse:
      example:
        UpdatedTimestamp: ""
        StartEventTime: ""
        CreatedTimestamp: ""
        ImportSource:
          S3:
            S3BucketAccessRoleArn: ""
            S3BucketRegion: ""
            S3LocationUri: ""
        EndEventTime: ""
        ImportStatus: ""
        Destinations: ""
        ImportId: ""
        ImportStatistics:
          PrefixesCompleted: ""
          EventsCompleted: ""
          PrefixesFound: ""
          FilesCompleted: ""
          FailedEntries: ""
      properties:
        ImportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ' The ID of the import. '
        Destinations:
          allOf:
          - $ref: '#/components/schemas/ImportDestinations'
          - description: ' The ARN of the destination event data store. '
        ImportSource:
          $ref: '#/components/schemas/GetImportResponse_ImportSource'
        StartEventTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: " Used with <code>EndEventTime</code> to bound a <code>StartImport</code>\
              \ request, and limit imported trail events to only those events logged\
              \ within a specified time period. "
        EndEventTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: " Used with <code>StartEventTime</code> to bound a <code>StartImport</code>\
              \ request, and limit imported trail events to only those events logged\
              \ within a specified time period. "
        ImportStatus:
          allOf:
          - $ref: '#/components/schemas/ImportStatus'
          - description: ' The status of the import. '
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' The timestamp of the import''s creation. '
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' The timestamp of when the import was updated. '
        ImportStatistics:
          $ref: '#/components/schemas/GetImportResponse_ImportStatistics'
      type: object
    GetImportRequest:
      example:
        ImportId: ""
      properties:
        ImportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ' The ID for the import. '
      required:
      - ImportId
      title: GetImportRequest
      type: object
    ImportNotFoundException: {}
    GetInsightSelectorsResponse:
      example:
        TrailARN: ""
        InsightSelectors: ""
      properties:
        TrailARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of a trail for which you want
              to get Insights selectors.
        InsightSelectors:
          allOf:
          - $ref: '#/components/schemas/InsightSelectors'
          - description: "A JSON string that contains the insight types you want to\
              \ log on a trail. In this release, <code>ApiErrorRateInsight</code>\
              \ and <code>ApiCallRateInsight</code> are supported as insight types."
      type: object
    GetInsightSelectorsRequest:
      example:
        TrailName: ""
      properties:
        TrailName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the name of the trail or trail ARN. If you\
              \ specify a trail name, the string must meet the following requirements:</p>\
              \ <ul> <li> <p>Contain only ASCII letters (a-z, A-Z), numbers (0-9),\
              \ periods (.), underscores (_), or dashes (-)</p> </li> <li> <p>Start\
              \ with a letter or number, and end with a letter or number</p> </li>\
              \ <li> <p>Be between 3 and 128 characters</p> </li> <li> <p>Have no\
              \ adjacent periods, underscores or dashes. Names like <code>my-_namespace</code>\
              \ and <code>my--namespace</code> are not valid.</p> </li> <li> <p>Not\
              \ be in IP address format (for example, 192.168.5.4)</p> </li> </ul>\
              \ <p>If you specify a trail ARN, it must be in the format:</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>\
              \ </p>"
      required:
      - TrailName
      title: GetInsightSelectorsRequest
      type: object
    InsightNotEnabledException: {}
    GetQueryResultsResponse:
      example:
        QueryResultRows: ""
        NextToken: ""
        QueryStatistics:
          ResultsCount: ""
          BytesScanned: ""
          TotalResultsCount: ""
        ErrorMessage: ""
        QueryStatus: ""
      properties:
        QueryStatus:
          allOf:
          - $ref: '#/components/schemas/QueryStatus'
          - description: "The status of the query. Values include <code>QUEUED</code>,\
              \ <code>RUNNING</code>, <code>FINISHED</code>, <code>FAILED</code>,\
              \ <code>TIMED_OUT</code>, or <code>CANCELLED</code>."
        QueryStatistics:
          $ref: '#/components/schemas/GetQueryResultsResponse_QueryStatistics'
        QueryResultRows:
          allOf:
          - $ref: '#/components/schemas/QueryResultRows'
          - description: Contains the individual event results of the query.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token you can use to get the next page of query results.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The error message returned if a query failed.
      type: object
    GetQueryResultsRequest:
      example:
        MaxQueryResults: ""
        EventDataStore: ""
        NextToken: ""
        QueryId: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - deprecated: true
            description: The ARN (or ID suffix of the ARN) of the event data store
              against which the query was run.EventDataStore is no longer required
              by GetQueryResultsRequest
        QueryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the query for which you want to get results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token you can use to get the next page of query results.
        MaxQueryResults:
          allOf:
          - $ref: '#/components/schemas/MaxQueryResults'
          - description: The maximum number of query results to display on a single
              page.
      required:
      - QueryId
      title: GetQueryResultsRequest
      type: object
    InvalidMaxResultsException: {}
    InvalidNextTokenException: {}
    GetResourcePolicyResponse:
      example:
        ResourceArn: ""
        ResourcePolicy: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: ' The Amazon Resource Name (ARN) of the CloudTrail channel
              attached to resource-based policy. '
        ResourcePolicy:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicy'
          - description: ' A JSON-formatted string that contains the resource-based
              policy attached to the CloudTrail channel. '
      type: object
    GetResourcePolicyRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: " The Amazon Resource Name (ARN) of the CloudTrail channel\
              \ attached to the resource-based policy. The following is the format\
              \ of a resource ARN: <code>arn:aws:cloudtrail:us-east-2:123456789012:channel/MyChannel</code>. "
      required:
      - ResourceArn
      title: GetResourcePolicyRequest
      type: object
    GetTrailResponse:
      example:
        Trail:
          IncludeGlobalServiceEvents: ""
          HasInsightSelectors: ""
          KmsKeyId: ""
          HomeRegion: ""
          CloudWatchLogsRoleArn: ""
          S3KeyPrefix: ""
          Name: ""
          IsOrganizationTrail: ""
          CloudWatchLogsLogGroupArn: ""
          HasCustomEventSelectors: ""
          SnsTopicName: ""
          LogFileValidationEnabled: ""
          IsMultiRegionTrail: ""
          S3BucketName: ""
          SnsTopicARN: ""
          TrailARN: ""
      properties:
        Trail:
          $ref: '#/components/schemas/Trail'
      type: object
    GetTrailRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name or the Amazon Resource Name (ARN) of the trail for
              which you want to retrieve settings information.
      required:
      - Name
      title: GetTrailRequest
      type: object
    GetTrailStatusResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      example:
        LatestNotificationError: ""
        LatestNotificationAttemptTime: ""
        StartLoggingTime: ""
        LatestDeliveryAttemptTime: ""
        StopLoggingTime: ""
        LatestNotificationAttemptSucceeded: ""
        LatestDigestDeliveryError: ""
        LatestDeliveryAttemptSucceeded: ""
        LatestDeliveryTime: ""
        TimeLoggingStarted: ""
        LatestCloudWatchLogsDeliveryError: ""
        LatestDigestDeliveryTime: ""
        LatestNotificationTime: ""
        LatestDeliveryError: ""
        LatestCloudWatchLogsDeliveryTime: ""
        IsLogging: ""
        TimeLoggingStopped: ""
      properties:
        IsLogging:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the CloudTrail trail is currently logging Amazon
              Web Services API calls.
        LatestDeliveryError:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Displays any Amazon S3 error that CloudTrail encountered\
              \ when attempting to deliver log files to the designated bucket. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html\"\
              >Error Responses</a> in the Amazon S3 API Reference. </p> <note> <p>This\
              \ error occurs only when there is a problem with the destination S3\
              \ bucket, and does not occur for requests that time out. To resolve\
              \ the issue, create a new bucket, and then call <code>UpdateTrail</code>\
              \ to specify the new bucket; or fix the existing objects so that CloudTrail\
              \ can again write to the bucket.</p> </note>"
        LatestNotificationError:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Displays any Amazon SNS error that CloudTrail encountered\
              \ when attempting to send a notification. For more information about\
              \ Amazon SNS errors, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/welcome.html\"\
              >Amazon SNS Developer Guide</a>. "
        LatestDeliveryTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Specifies the date and time that CloudTrail last delivered
              log files to an account's Amazon S3 bucket.
        LatestNotificationTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Specifies the date and time of the most recent Amazon SNS
              notification that CloudTrail has written a new log file to an account's
              Amazon S3 bucket.
        StartLoggingTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Specifies the most recent date and time when CloudTrail started
              recording API calls for an Amazon Web Services account.
        StopLoggingTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Specifies the most recent date and time when CloudTrail stopped
              recording API calls for an Amazon Web Services account.
        LatestCloudWatchLogsDeliveryError:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Displays any CloudWatch Logs error that CloudTrail encountered
              when attempting to deliver logs to CloudWatch Logs.
        LatestCloudWatchLogsDeliveryTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Displays the most recent date and time when CloudTrail delivered
              logs to CloudWatch Logs.
        LatestDigestDeliveryTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Specifies the date and time that CloudTrail last delivered
              a digest file to an account's Amazon S3 bucket.
        LatestDigestDeliveryError:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Displays any Amazon S3 error that CloudTrail encountered\
              \ when attempting to deliver a digest file to the designated bucket.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html\"\
              >Error Responses</a> in the Amazon S3 API Reference. </p> <note> <p>This\
              \ error occurs only when there is a problem with the destination S3\
              \ bucket, and does not occur for requests that time out. To resolve\
              \ the issue, create a new bucket, and then call <code>UpdateTrail</code>\
              \ to specify the new bucket; or fix the existing objects so that CloudTrail\
              \ can again write to the bucket.</p> </note>"
        LatestDeliveryAttemptTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This field is no longer in use.
        LatestNotificationAttemptTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This field is no longer in use.
        LatestNotificationAttemptSucceeded:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This field is no longer in use.
        LatestDeliveryAttemptSucceeded:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This field is no longer in use.
        TimeLoggingStarted:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This field is no longer in use.
        TimeLoggingStopped:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This field is no longer in use.
      type: object
    GetTrailStatusRequest:
      description: The name of a trail about which you want the current status.
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the name or the CloudTrail ARN of the trail\
              \ for which you are requesting status. To get the status of a shadow\
              \ trail (a replication of the trail in another Region), you must specify\
              \ its ARN. The following is the format of a trail ARN.</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>\
              \ </p>"
      required:
      - Name
      title: GetTrailStatusRequest
      type: object
    ListChannelsResponse:
      example:
        NextToken: ""
        Channels: ""
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          - description: ' The list of channels in the account. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The token to use to get the next page of results after a
              previous API call.
      type: object
    ListChannelsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListChannelsMaxResultsCount'
          - description: ' The maximum number of CloudTrail channels to display on
              a single page. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The token to use to get the next page of results after a\
              \ previous API call. This token must be passed in with the same parameters\
              \ that were specified in the original call. For example, if the original\
              \ call specified an AttributeKey of 'Username' with a value of 'root',\
              \ the call with NextToken should include those same parameters."
      title: ListChannelsRequest
      type: object
    ListEventDataStoresResponse:
      example:
        EventDataStores: ""
        NextToken: ""
      properties:
        EventDataStores:
          allOf:
          - $ref: '#/components/schemas/EventDataStores'
          - description: "Contains information about event data stores in the account,\
              \ in the current Region."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token you can use to get the next page of results.
      type: object
    ListEventDataStoresRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token you can use to get the next page of event data store
              results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListEventDataStoresMaxResultsCount'
          - description: The maximum number of event data stores to display on a single
              page.
      title: ListEventDataStoresRequest
      type: object
    ListImportFailuresResponse:
      example:
        NextToken: ""
        Failures: ""
      properties:
        Failures:
          allOf:
          - $ref: '#/components/schemas/ImportFailureList'
          - description: ' Contains information about the import failures. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: ' A token you can use to get the next page of results. '
      type: object
    ListImportFailuresRequest:
      example:
        NextToken: ""
        MaxResults: ""
        ImportId: ""
      properties:
        ImportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ' The ID of the import. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListImportFailuresMaxResultsCount'
          - description: ' The maximum number of failures to display on a single page. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: ' A token you can use to get the next page of import failures. '
      required:
      - ImportId
      title: ListImportFailuresRequest
      type: object
    ListImportsResponse:
      example:
        NextToken: ""
        Imports: ""
      properties:
        Imports:
          allOf:
          - $ref: '#/components/schemas/ImportsList'
          - description: ' The list of returned imports. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: ' A token you can use to get the next page of import results. '
      type: object
    ListImportsRequest:
      example:
        Destination: ""
        NextToken: ""
        ImportStatus: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListImportsMaxResultsCount'
          - description: ' The maximum number of imports to display on a single page. '
        Destination:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: ' The ARN of the destination event data store. '
        ImportStatus:
          allOf:
          - $ref: '#/components/schemas/ImportStatus'
          - description: ' The status of the import. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: ' A token you can use to get the next page of import results. '
      title: ListImportsRequest
      type: object
    ListPublicKeysResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      example:
        NextToken: ""
        PublicKeyList: ""
      properties:
        PublicKeyList:
          allOf:
          - $ref: '#/components/schemas/PublicKeyList'
          - description: <p>Contains an array of PublicKey objects.</p> <note> <p>The
              returned public keys may have validity time ranges that overlap.</p>
              </note>
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Reserved for future use.
      type: object
    ListPublicKeysRequest:
      description: Requests the public keys for a specified time range.
      example:
        EndTime: ""
        NextToken: ""
        StartTime: ""
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "Optionally specifies, in UTC, the start of the time range\
              \ to look up public keys for CloudTrail digest files. If not specified,\
              \ the current time is used, and the current public key is returned."
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "Optionally specifies, in UTC, the end of the time range\
              \ to look up public keys for CloudTrail digest files. If not specified,\
              \ the current time is used."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Reserved for future use.
      title: ListPublicKeysRequest
      type: object
    InvalidTimeRangeException: {}
    InvalidTokenException: {}
    ListQueriesResponse:
      example:
        Queries: ""
        NextToken: ""
      properties:
        Queries:
          allOf:
          - $ref: '#/components/schemas/Queries'
          - description: "Lists matching query results, and shows query ID, status,\
              \ and creation time of each query."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token you can use to get the next page of results.
      type: object
    ListQueriesRequest:
      example:
        EventDataStore: ""
        NextToken: ""
        EndTime: ""
        MaxResults: ""
        StartTime: ""
        QueryStatus: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN (or the ID suffix of the ARN) of an event data store
              on which queries were run.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token you can use to get the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListQueriesMaxResultsCount'
          - description: The maximum number of queries to show on a page.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "Use with <code>EndTime</code> to bound a <code>ListQueries</code>\
              \ request, and limit its results to only those queries run within a\
              \ specified time period."
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "Use with <code>StartTime</code> to bound a <code>ListQueries</code>\
              \ request, and limit its results to only those queries run within a\
              \ specified time period."
        QueryStatus:
          allOf:
          - $ref: '#/components/schemas/QueryStatus'
          - description: "The status of queries that you want to return in results.\
              \ Valid values for <code>QueryStatus</code> include <code>QUEUED</code>,\
              \ <code>RUNNING</code>, <code>FINISHED</code>, <code>FAILED</code>,\
              \ <code>TIMED_OUT</code>, or <code>CANCELLED</code>."
      required:
      - EventDataStore
      title: ListQueriesRequest
      type: object
    InvalidDateRangeException: {}
    InvalidQueryStatusException: {}
    ListTagsResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      example:
        NextToken: ""
        ResourceTagList: ""
      properties:
        ResourceTagList:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: A list of resource tags.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Reserved for future use.
      type: object
    ListTagsRequest:
      description: Specifies a list of tags to return.
      example:
        NextToken: ""
        ResourceIdList: ""
      properties:
        ResourceIdList:
          allOf:
          - $ref: '#/components/schemas/ResourceIdList'
          - description: "<p>Specifies a list of trail, event data store, or channel\
              \ ARNs whose tags will be listed. The list has a limit of 20 ARNs.</p>\
              \ <p> Example trail ARN format: <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>\
              \ </p> <p>Example event data store ARN format: <code>arn:aws:cloudtrail:us-east-2:123456789012:eventdatastore/EXAMPLE-f852-4e8f-8bd1-bcf6cEXAMPLE</code>\
              \ </p> <p>Example channel ARN format: <code>arn:aws:cloudtrail:us-east-2:123456789012:channel/01234567890</code>\
              \ </p>"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Reserved for future use.
      required:
      - ResourceIdList
      title: ListTagsRequest
      type: object
    ListTrailsResponse:
      example:
        NextToken: ""
        Trails: ""
      properties:
        Trails:
          allOf:
          - $ref: '#/components/schemas/Trails'
          - description: "Returns the name, ARN, and home Region of trails in the\
              \ current account."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token to use to get the next page of results after a\
              \ previous API call. If the token does not appear, there are no more\
              \ results to return. The token must be passed in with the same parameters\
              \ as the previous call. For example, if the original call specified\
              \ an AttributeKey of 'Username' with a value of 'root', the call with\
              \ NextToken should include those same parameters."
      type: object
    ListTrailsRequest:
      example:
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The token to use to get the next page of results after a\
              \ previous API call. This token must be passed in with the same parameters\
              \ that were specified in the original call. For example, if the original\
              \ call specified an AttributeKey of 'Username' with a value of 'root',\
              \ the call with NextToken should include those same parameters."
      title: ListTrailsRequest
      type: object
    LookupEventsResponse:
      description: Contains a response to a LookupEvents action.
      example:
        NextToken: ""
        Events: ""
      properties:
        Events:
          allOf:
          - $ref: '#/components/schemas/EventsList'
          - description: A list of events returned based on the lookup attributes
              specified and the CloudTrail event. The events list is sorted by time.
              The most recent event is listed first.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next page of results after a\
              \ previous API call. If the token does not appear, there are no more\
              \ results to return. The token must be passed in with the same parameters\
              \ as the previous call. For example, if the original call specified\
              \ an AttributeKey of 'Username' with a value of 'root', the call with\
              \ NextToken should include those same parameters."
      type: object
    LookupEventsRequest:
      description: Contains a request for LookupEvents.
      example:
        EventCategory: ""
        EndTime: ""
        NextToken: ""
        MaxResults: ""
        StartTime: ""
        LookupAttributes: ""
      properties:
        LookupAttributes:
          allOf:
          - $ref: '#/components/schemas/LookupAttributesList'
          - description: Contains a list of lookup attributes. Currently the list
              can contain only one item.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "Specifies that only events that occur after or at the specified\
              \ time are returned. If the specified start time is after the specified\
              \ end time, an error is returned."
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "Specifies that only events that occur before or at the specified\
              \ time are returned. If the specified end time is before the specified\
              \ start time, an error is returned."
        EventCategory:
          allOf:
          - $ref: '#/components/schemas/EventCategory'
          - description: "Specifies the event category. If you do not specify an event\
              \ category, events of the category are not returned in the response.\
              \ For example, if you do not specify <code>insight</code> as the value\
              \ of <code>EventCategory</code>, no Insights events are returned."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of events to return. Possible values are 1 through
              50. The default is 50.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next page of results after a\
              \ previous API call. This token must be passed in with the same parameters\
              \ that were specified in the original call. For example, if the original\
              \ call specified an AttributeKey of 'Username' with a value of 'root',\
              \ the call with NextToken should include those same parameters."
      title: LookupEventsRequest
      type: object
    InvalidLookupAttributesException: {}
    InvalidEventCategoryException: {}
    PutEventSelectorsResponse:
      example:
        EventSelectors: ""
        AdvancedEventSelectors: ""
        TrailARN: ""
      properties:
        TrailARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the ARN of the trail that was updated with event
              selectors. The following is the format of a trail ARN.</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>
              </p>
        EventSelectors:
          allOf:
          - $ref: '#/components/schemas/EventSelectors'
          - description: Specifies the event selectors configured for your trail.
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: Specifies the advanced event selectors configured for your
              trail.
      type: object
    PutEventSelectorsRequest:
      example:
        EventSelectors: ""
        TrailName: ""
        AdvancedEventSelectors: ""
      properties:
        TrailName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the name of the trail or trail ARN. If you\
              \ specify a trail name, the string must meet the following requirements:</p>\
              \ <ul> <li> <p>Contain only ASCII letters (a-z, A-Z), numbers (0-9),\
              \ periods (.), underscores (_), or dashes (-)</p> </li> <li> <p>Start\
              \ with a letter or number, and end with a letter or number</p> </li>\
              \ <li> <p>Be between 3 and 128 characters</p> </li> <li> <p>Have no\
              \ adjacent periods, underscores or dashes. Names like <code>my-_namespace</code>\
              \ and <code>my--namespace</code> are not valid.</p> </li> <li> <p>Not\
              \ be in IP address format (for example, 192.168.5.4)</p> </li> </ul>\
              \ <p>If you specify a trail ARN, it must be in the following format.</p>\
              \ <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>\
              \ </p>"
        EventSelectors:
          allOf:
          - $ref: '#/components/schemas/EventSelectors'
          - description: "Specifies the settings for your event selectors. You can\
              \ configure up to five event selectors for a trail. You can use either\
              \ <code>EventSelectors</code> or <code>AdvancedEventSelectors</code>\
              \ in a <code>PutEventSelectors</code> request, but not both. If you\
              \ apply <code>EventSelectors</code> to a trail, any existing <code>AdvancedEventSelectors</code>\
              \ are overwritten."
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: " Specifies the settings for advanced event selectors. You\
              \ can add advanced event selectors, and conditions for your advanced\
              \ event selectors, up to a maximum of 500 values for all conditions\
              \ and selectors on a trail. You can use either <code>AdvancedEventSelectors</code>\
              \ or <code>EventSelectors</code>, but not both. If you apply <code>AdvancedEventSelectors</code>\
              \ to a trail, any existing <code>EventSelectors</code> are overwritten.\
              \ For more information about advanced event selectors, see <a href=\"\
              https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html\"\
              >Logging data events</a> in the <i>CloudTrail User Guide</i>. "
      required:
      - TrailName
      title: PutEventSelectorsRequest
      type: object
    PutInsightSelectorsResponse:
      example:
        TrailARN: ""
        InsightSelectors: ""
      properties:
        TrailARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of a trail for which you want
              to change or add Insights selectors.
        InsightSelectors:
          allOf:
          - $ref: '#/components/schemas/InsightSelectors'
          - description: A JSON string that contains the Insights event types that
              you want to log on a trail. The valid Insights types in this release
              are <code>ApiErrorRateInsight</code> and <code>ApiCallRateInsight</code>.
      type: object
    PutInsightSelectorsRequest:
      example:
        TrailName: ""
        InsightSelectors: ""
      properties:
        TrailName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the CloudTrail trail for which you want to change
              or add Insights selectors.
        InsightSelectors:
          allOf:
          - $ref: '#/components/schemas/InsightSelectors'
          - description: <p>A JSON string that contains the insight types you want
              to log on a trail. <code>ApiCallRateInsight</code> and <code>ApiErrorRateInsight</code>
              are valid Insight types.</p> <p>The <code>ApiCallRateInsight</code>
              Insights type analyzes write-only management API calls that are aggregated
              per minute against a baseline API call volume.</p> <p>The <code>ApiErrorRateInsight</code>
              Insights type analyzes management API calls that result in error codes.
              The error is shown if the API call is unsuccessful.</p>
      required:
      - InsightSelectors
      - TrailName
      title: PutInsightSelectorsRequest
      type: object
    InvalidInsightSelectorsException: {}
    PutResourcePolicyResponse:
      example:
        ResourceArn: ""
        ResourcePolicy: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: ' The Amazon Resource Name (ARN) of the CloudTrail channel
              attached to the resource-based policy. '
        ResourcePolicy:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicy'
          - description: ' The JSON-formatted string of the Amazon Web Services resource-based
              policy attached to the CloudTrail channel. '
      type: object
    PutResourcePolicyRequest:
      example:
        ResourceArn: ""
        ResourcePolicy: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: " The Amazon Resource Name (ARN) of the CloudTrail channel\
              \ attached to the resource-based policy. The following is the format\
              \ of a resource ARN: <code>arn:aws:cloudtrail:us-east-2:123456789012:channel/MyChannel</code>. "
        ResourcePolicy:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicy'
          - description: "<p> A JSON-formatted string for an Amazon Web Services resource-based\
              \ policy. </p> <p>The following are requirements for the resource policy:</p>\
              \ <ul> <li> <p> Contains only one action: cloudtrail-data:PutAuditEvents\
              \ </p> </li> <li> <p> Contains at least one statement. The policy can\
              \ have a maximum of 20 statements. </p> </li> <li> <p> Each statement\
              \ contains at least one principal. A statement can have a maximum of\
              \ 50 principals. </p> </li> </ul>"
      required:
      - ResourceArn
      - ResourcePolicy
      title: PutResourcePolicyRequest
      type: object
    ResourcePolicyNotValidException: {}
    RegisterOrganizationDelegatedAdminResponse:
      description: "Returns the following response if successful. Otherwise, returns\
        \ an error."
      properties: {}
      type: object
    RegisterOrganizationDelegatedAdminRequest:
      description: Specifies an organization member account ID as a CloudTrail delegated
        administrator.
      example:
        MemberAccountId: ""
      properties:
        MemberAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: An organization member account ID that you want to designate
              as a delegated administrator.
      required:
      - MemberAccountId
      title: RegisterOrganizationDelegatedAdminRequest
      type: object
    AccountRegisteredException: {}
    CannotDelegateManagementAccountException: {}
    DelegatedAdminAccountLimitExceededException: {}
    RemoveTagsResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      properties: {}
      type: object
    RemoveTagsRequest:
      description: "Specifies the tags to remove from a trail, event data store, or\
        \ channel."
      example:
        ResourceId: ""
        TagsList: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the ARN of the trail, event data store, or\
              \ channel from which tags should be removed.</p> <p> Example trail ARN\
              \ format: <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>\
              \ </p> <p>Example event data store ARN format: <code>arn:aws:cloudtrail:us-east-2:123456789012:eventdatastore/EXAMPLE-f852-4e8f-8bd1-bcf6cEXAMPLE</code>\
              \ </p> <p>Example channel ARN format: <code>arn:aws:cloudtrail:us-east-2:123456789012:channel/01234567890</code>\
              \ </p>"
        TagsList:
          allOf:
          - $ref: '#/components/schemas/TagsList'
          - description: Specifies a list of tags to be removed.
      required:
      - ResourceId
      - TagsList
      title: RemoveTagsRequest
      type: object
    RestoreEventDataStoreResponse:
      example:
        Status: ""
        OrganizationEnabled: ""
        UpdatedTimestamp: ""
        EventDataStoreArn: ""
        CreatedTimestamp: ""
        KmsKeyId: ""
        AdvancedEventSelectors: ""
        TerminationProtectionEnabled: ""
        MultiRegionEnabled: ""
        RetentionPeriod: ""
        Name: ""
      properties:
        EventDataStoreArn:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The event data store ARN.
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreName'
          - description: The name of the event data store.
        Status:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreStatus'
          - description: The status of the event data store.
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: The advanced event selectors that were used to select events.
        MultiRegionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether the event data store is collecting events\
              \ from all Regions, or only from the Region in which the event data\
              \ store was created."
        OrganizationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether an event data store is collecting logged
              events for an organization in Organizations.
        RetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriod'
          - description: "The retention period, in days."
        TerminationProtectionEnabled:
          allOf:
          - $ref: '#/components/schemas/TerminationProtectionEnabled'
          - description: Indicates that termination protection is enabled and the
              event data store cannot be automatically deleted.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp of an event data store's creation.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "The timestamp that shows when an event data store was updated,\
              \ if applicable. <code>UpdatedTimestamp</code> is always either the\
              \ same or newer than the time shown in <code>CreatedTimestamp</code>."
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreKmsKeyId'
          - description: <p>Specifies the KMS key ID that encrypts the events delivered
              by CloudTrail. The value is a fully specified ARN to a KMS key in the
              following format.</p> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>
              </p>
      type: object
    RestoreEventDataStoreRequest:
      example:
        EventDataStore: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN (or the ID suffix of the ARN) of the event data store
              that you want to restore.
      required:
      - EventDataStore
      title: RestoreEventDataStoreRequest
      type: object
    InvalidEventDataStoreStatusException: {}
    StartEventDataStoreIngestionResponse:
      properties: {}
      type: object
    StartEventDataStoreIngestionRequest:
      example:
        EventDataStore: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN (or ID suffix of the ARN) of the event data store
              for which you want to start ingestion.
      required:
      - EventDataStore
      title: StartEventDataStoreIngestionRequest
      type: object
    StartImportResponse:
      example:
        UpdatedTimestamp: ""
        StartEventTime: ""
        CreatedTimestamp: ""
        ImportSource:
          S3:
            S3BucketAccessRoleArn: ""
            S3BucketRegion: ""
            S3LocationUri: ""
        EndEventTime: ""
        ImportStatus: ""
        Destinations: ""
        ImportId: ""
      properties:
        ImportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ' The ID of the import. '
        Destinations:
          allOf:
          - $ref: '#/components/schemas/ImportDestinations'
          - description: ' The ARN of the destination event data store. '
        ImportSource:
          $ref: '#/components/schemas/StartImportResponse_ImportSource'
        StartEventTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: " Used with <code>EndEventTime</code> to bound a <code>StartImport</code>\
              \ request, and limit imported trail events to only those events logged\
              \ within a specified time period. "
        EndEventTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: " Used with <code>StartEventTime</code> to bound a <code>StartImport</code>\
              \ request, and limit imported trail events to only those events logged\
              \ within a specified time period. "
        ImportStatus:
          allOf:
          - $ref: '#/components/schemas/ImportStatus'
          - description: " Shows the status of the import after a <code>StartImport</code>\
              \ request. An import finishes with a status of <code>COMPLETED</code>\
              \ if there were no failures, or <code>FAILED</code> if there were failures. "
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' The timestamp for the import''s creation. '
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: " The timestamp of the import's last update, if applicable. "
      type: object
    StartImportRequest:
      example:
        StartEventTime: ""
        ImportSource:
          S3:
            S3BucketAccessRoleArn: ""
            S3BucketRegion: ""
            S3LocationUri: ""
        EndEventTime: ""
        Destinations: ""
        ImportId: ""
      properties:
        Destinations:
          allOf:
          - $ref: '#/components/schemas/ImportDestinations'
          - description: ' The ARN of the destination event data store. Use this parameter
              for a new import. '
        ImportSource:
          $ref: '#/components/schemas/StartImportRequest_ImportSource'
        StartEventTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: " Use with <code>EndEventTime</code> to bound a <code>StartImport</code>\
              \ request, and limit imported trail events to only those events logged\
              \ within a specified time period. When you specify a time range, CloudTrail\
              \ checks the prefix and log file names to verify the names contain a\
              \ date between the specified <code>StartEventTime</code> and <code>EndEventTime</code>\
              \ before attempting to import events. "
        EndEventTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: " Use with <code>StartEventTime</code> to bound a <code>StartImport</code>\
              \ request, and limit imported trail events to only those events logged\
              \ within a specified time period. When you specify a time range, CloudTrail\
              \ checks the prefix and log file names to verify the names contain a\
              \ date between the specified <code>StartEventTime</code> and <code>EndEventTime</code>\
              \ before attempting to import events. "
        ImportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ' The ID of the import. Use this parameter when you are retrying
              an import. '
      title: StartImportRequest
      type: object
    AccountHasOngoingImportException: {}
    InvalidImportSourceException: {}
    StartLoggingResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      properties: {}
      type: object
    StartLoggingRequest:
      description: The request to CloudTrail to start logging Amazon Web Services
        API calls for an account.
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the name or the CloudTrail ARN of the trail
              for which CloudTrail logs Amazon Web Services API calls. The following
              is the format of a trail ARN.</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>
              </p>
      required:
      - Name
      title: StartLoggingRequest
      type: object
    StartQueryResponse:
      example:
        QueryId: ""
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the started query.
      type: object
    StartQueryRequest:
      example:
        DeliveryS3Uri: ""
        QueryAlias: ""
        QueryStatement: ""
        QueryParameters: ""
      properties:
        QueryStatement:
          allOf:
          - $ref: '#/components/schemas/QueryStatement'
          - description: The SQL code of your query.
        DeliveryS3Uri:
          allOf:
          - $ref: '#/components/schemas/DeliveryS3Uri'
          - description: ' The URI for the S3 bucket where CloudTrail delivers the
              query results. '
        QueryAlias:
          allOf:
          - $ref: '#/components/schemas/QueryAlias'
          - description: ' The alias that identifies a query template. '
        QueryParameters:
          allOf:
          - $ref: '#/components/schemas/QueryParameters'
          - description: ' The query parameters for the specified <code>QueryAlias</code>. '
      title: StartQueryRequest
      type: object
    InvalidQueryStatementException: {}
    MaxConcurrentQueriesException: {}
    StopEventDataStoreIngestionResponse:
      properties: {}
      type: object
    StopEventDataStoreIngestionRequest:
      example:
        EventDataStore: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN (or ID suffix of the ARN) of the event data store
              for which you want to stop ingestion.
      required:
      - EventDataStore
      title: StopEventDataStoreIngestionRequest
      type: object
    StopImportResponse:
      example:
        UpdatedTimestamp: ""
        StartEventTime: ""
        CreatedTimestamp: ""
        ImportSource:
          S3:
            S3BucketAccessRoleArn: ""
            S3BucketRegion: ""
            S3LocationUri: ""
        EndEventTime: ""
        ImportStatus: ""
        Destinations: ""
        ImportId: ""
        ImportStatistics:
          PrefixesCompleted: ""
          EventsCompleted: ""
          PrefixesFound: ""
          FilesCompleted: ""
          FailedEntries: ""
      properties:
        ImportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ' The ID for the import. '
        ImportSource:
          $ref: '#/components/schemas/StartImportResponse_ImportSource'
        Destinations:
          allOf:
          - $ref: '#/components/schemas/ImportDestinations'
          - description: ' The ARN of the destination event data store. '
        ImportStatus:
          allOf:
          - $ref: '#/components/schemas/ImportStatus'
          - description: ' The status of the import. '
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' The timestamp of the import''s creation. '
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' The timestamp of the import''s last update. '
        StartEventTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: " Used with <code>EndEventTime</code> to bound a <code>StartImport</code>\
              \ request, and limit imported trail events to only those events logged\
              \ within a specified time period. "
        EndEventTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: " Used with <code>StartEventTime</code> to bound a <code>StartImport</code>\
              \ request, and limit imported trail events to only those events logged\
              \ within a specified time period. "
        ImportStatistics:
          $ref: '#/components/schemas/StopImportResponse_ImportStatistics'
      type: object
    StopImportRequest:
      example:
        ImportId: ""
      properties:
        ImportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ' The ID of the import. '
      required:
      - ImportId
      title: StopImportRequest
      type: object
    StopLoggingResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      properties: {}
      type: object
    StopLoggingRequest:
      description: Passes the request to CloudTrail to stop logging Amazon Web Services
        API calls for the specified account.
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the name or the CloudTrail ARN of the trail
              for which CloudTrail will stop logging Amazon Web Services API calls.
              The following is the format of a trail ARN.</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>
              </p>
      required:
      - Name
      title: StopLoggingRequest
      type: object
    UpdateChannelResponse:
      example:
        ChannelArn: ""
        Destinations: ""
        Source: ""
        Name: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: The ARN of the channel that was updated.
        Name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: The name of the channel that was updated.
        Source:
          allOf:
          - $ref: '#/components/schemas/Source'
          - description: The event source of the channel that was updated.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/Destinations'
          - description: The event data stores that log events arriving through the
              channel.
      type: object
    UpdateChannelRequest:
      example:
        Channel: ""
        Destinations: ""
        Name: ""
      properties:
        Channel:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: The ARN or ID (the ARN suffix) of the channel that you want
              to update.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/Destinations'
          - description: The ARNs of event data stores that you want to log events
              arriving through the channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: ' Changes the name of the channel. '
      required:
      - Channel
      title: UpdateChannelRequest
      type: object
    UpdateEventDataStoreResponse:
      example:
        Status: ""
        OrganizationEnabled: ""
        UpdatedTimestamp: ""
        EventDataStoreArn: ""
        CreatedTimestamp: ""
        KmsKeyId: ""
        AdvancedEventSelectors: ""
        TerminationProtectionEnabled: ""
        MultiRegionEnabled: ""
        RetentionPeriod: ""
        Name: ""
      properties:
        EventDataStoreArn:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN of the event data store.
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreName'
          - description: The name of the event data store.
        Status:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreStatus'
          - description: The status of an event data store.
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: The advanced event selectors that are applied to the event
              data store.
        MultiRegionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether the event data store includes events from\
              \ all Regions, or only from the Region in which it was created."
        OrganizationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether an event data store is collecting logged
              events for an organization in Organizations.
        RetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriod'
          - description: "The retention period, in days."
        TerminationProtectionEnabled:
          allOf:
          - $ref: '#/components/schemas/TerminationProtectionEnabled'
          - description: Indicates whether termination protection is enabled for the
              event data store.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp that shows when an event data store was first
              created.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp that shows when the event data store was last
              updated. <code>UpdatedTimestamp</code> is always either the same or
              newer than the time shown in <code>CreatedTimestamp</code>.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreKmsKeyId'
          - description: <p>Specifies the KMS key ID that encrypts the events delivered
              by CloudTrail. The value is a fully specified ARN to a KMS key in the
              following format.</p> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>
              </p>
      type: object
    UpdateEventDataStoreRequest:
      example:
        OrganizationEnabled: ""
        EventDataStore: ""
        KmsKeyId: ""
        AdvancedEventSelectors: ""
        TerminationProtectionEnabled: ""
        MultiRegionEnabled: ""
        RetentionPeriod: ""
        Name: ""
      properties:
        EventDataStore:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN (or the ID suffix of the ARN) of the event data store
              that you want to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreName'
          - description: The event data store name.
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: The advanced event selectors used to select events for the
              event data store. You can configure up to five advanced event selectors
              for each event data store.
        MultiRegionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether an event data store collects events from\
              \ all Regions, or only from the Region in which it was created."
        OrganizationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether an event data store collects events logged
              for an organization in Organizations.
        RetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriod'
          - description: "The retention period, in days."
        TerminationProtectionEnabled:
          allOf:
          - $ref: '#/components/schemas/TerminationProtectionEnabled'
          - description: Indicates that termination protection is enabled and the
              event data store cannot be automatically deleted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreKmsKeyId'
          - description: "<p>Specifies the KMS key ID to use to encrypt the events\
              \ delivered by CloudTrail. The value can be an alias name prefixed by\
              \ <code>alias/</code>, a fully specified ARN to an alias, a fully specified\
              \ ARN to a key, or a globally unique identifier.</p> <important> <p>Disabling\
              \ or deleting the KMS key, or removing CloudTrail permissions on the\
              \ key, prevents CloudTrail from logging events to the event data store,\
              \ and prevents users from querying the data in the event data store\
              \ that was encrypted with the key. After you associate an event data\
              \ store with a KMS key, the KMS key cannot be removed or changed. Before\
              \ you disable or delete a KMS key that you are using with an event data\
              \ store, delete or back up your event data store.</p> </important> <p>CloudTrail\
              \ also supports KMS multi-Region keys. For more information about multi-Region\
              \ keys, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html\"\
              >Using multi-Region keys</a> in the <i>Key Management Service Developer\
              \ Guide</i>.</p> <p>Examples:</p> <ul> <li> <p> <code>alias/MyAliasName</code>\
              \ </p> </li> <li> <p> <code>arn:aws:kms:us-east-2:123456789012:alias/MyAliasName</code>\
              \ </p> </li> <li> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>\
              \ </p> </li> <li> <p> <code>12345678-1234-1234-1234-123456789012</code>\
              \ </p> </li> </ul>"
      required:
      - EventDataStore
      title: UpdateEventDataStoreRequest
      type: object
    UpdateTrailResponse:
      description: "Returns the objects or data listed below if successful. Otherwise,\
        \ returns an error."
      example:
        IncludeGlobalServiceEvents: ""
        KmsKeyId: ""
        CloudWatchLogsRoleArn: ""
        S3KeyPrefix: ""
        Name: ""
        IsOrganizationTrail: ""
        CloudWatchLogsLogGroupArn: ""
        SnsTopicName: ""
        LogFileValidationEnabled: ""
        IsMultiRegionTrail: ""
        S3BucketName: ""
        SnsTopicARN: ""
        TrailARN: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the trail.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the Amazon S3 bucket designated for
              publishing log files.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the Amazon S3 key prefix that comes after the\
              \ name of the bucket you have designated for log file delivery. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-find-log-files.html\"\
              >Finding Your IAM Log Files</a>."
        SnsTopicName:
          allOf:
          - $ref: '#/components/schemas/String'
          - deprecated: true
            description: This field is no longer in use. Use <code>SnsTopicARN</code>.
        SnsTopicARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the ARN of the Amazon SNS topic that CloudTrail
              uses to send notifications when log files are delivered. The following
              is the format of a topic ARN.</p> <p> <code>arn:aws:sns:us-east-2:123456789012:MyTopic</code>
              </p>
        IncludeGlobalServiceEvents:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail is publishing events from global
              services such as IAM to the log files.
        IsMultiRegionTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail exists in one Region or in all
              Regions.
        TrailARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the ARN of the trail that was updated. The following
              is the format of a trail ARN.</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>
              </p>
        LogFileValidationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether log file integrity validation is enabled.
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the Amazon Resource Name (ARN) of the log group
              to which CloudTrail logs are delivered.
        CloudWatchLogsRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the role for the CloudWatch Logs endpoint to assume
              to write to a user's log group.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the KMS key ID that encrypts the logs delivered
              by CloudTrail. The value is a fully specified ARN to a KMS key in the
              following format.</p> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>
              </p>
        IsOrganizationTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail is an organization trail.
      type: object
    UpdateTrailRequest:
      description: Specifies settings to update for the trail.
      example:
        CloudWatchLogsLogGroupArn: ""
        IncludeGlobalServiceEvents: ""
        SnsTopicName: ""
        KmsKeyId: ""
        CloudWatchLogsRoleArn: ""
        S3KeyPrefix: ""
        IsMultiRegionTrail: ""
        S3BucketName: ""
        EnableLogFileValidation: ""
        Name: ""
        IsOrganizationTrail: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the name of the trail or trail ARN. If <code>Name</code>\
              \ is a trail name, the string must meet the following requirements:</p>\
              \ <ul> <li> <p>Contain only ASCII letters (a-z, A-Z), numbers (0-9),\
              \ periods (.), underscores (_), or dashes (-)</p> </li> <li> <p>Start\
              \ with a letter or number, and end with a letter or number</p> </li>\
              \ <li> <p>Be between 3 and 128 characters</p> </li> <li> <p>Have no\
              \ adjacent periods, underscores or dashes. Names like <code>my-_namespace</code>\
              \ and <code>my--namespace</code> are not valid.</p> </li> <li> <p>Not\
              \ be in IP address format (for example, 192.168.5.4)</p> </li> </ul>\
              \ <p>If <code>Name</code> is a trail ARN, it must be in the following\
              \ format.</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>\
              \ </p>"
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the Amazon S3 bucket designated for
              publishing log files. See <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/create_trail_naming_policy.html">Amazon
              S3 Bucket Naming Requirements</a>.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the Amazon S3 key prefix that comes after the\
              \ name of the bucket you have designated for log file delivery. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-find-log-files.html\"\
              >Finding Your CloudTrail Log Files</a>. The maximum length is 200 characters."
        SnsTopicName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the Amazon SNS topic defined for notification
              of log file delivery. The maximum length is 256 characters.
        IncludeGlobalServiceEvents:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail is publishing events from global
              services such as IAM to the log files.
        IsMultiRegionTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether the trail applies only to the current\
              \ Region or to all Regions. The default is false. If the trail exists\
              \ only in the current Region and this value is set to true, shadow trails\
              \ (replications of the trail) will be created in the other Regions.\
              \ If the trail exists in all Regions and this value is set to false,\
              \ the trail will remain in the Region where it was created, and its\
              \ shadow trails in other Regions will be deleted. As a best practice,\
              \ consider using trails that log events in all Regions."
        EnableLogFileValidation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Specifies whether log file validation is enabled. The\
              \ default is false.</p> <note> <p>When you disable log file integrity\
              \ validation, the chain of digest files is broken after one hour. CloudTrail\
              \ does not create digest files for log files that were delivered during\
              \ a period in which log file integrity validation was disabled. For\
              \ example, if you enable log file integrity validation at noon on January\
              \ 1, disable it at noon on January 2, and re-enable it at noon on January\
              \ 10, digest files will not be created for the log files delivered from\
              \ noon on January 2 to noon on January 10. The same applies whenever\
              \ you stop CloudTrail logging or delete a trail.</p> </note>"
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies a log group name using an Amazon Resource Name\
              \ (ARN), a unique identifier that represents the log group to which\
              \ CloudTrail logs are delivered. You must use a log group that exists\
              \ in your account.</p> <p>Not required unless you specify <code>CloudWatchLogsRoleArn</code>.</p>"
        CloudWatchLogsRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the role for the CloudWatch Logs endpoint to assume
              to write to a user's log group. You must use a role that exists in your
              account.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the KMS key ID to use to encrypt the logs delivered\
              \ by CloudTrail. The value can be an alias name prefixed by \"alias/\"\
              , a fully specified ARN to an alias, a fully specified ARN to a key,\
              \ or a globally unique identifier.</p> <p>CloudTrail also supports KMS\
              \ multi-Region keys. For more information about multi-Region keys, see\
              \ <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html\"\
              >Using multi-Region keys</a> in the <i>Key Management Service Developer\
              \ Guide</i>.</p> <p>Examples:</p> <ul> <li> <p>alias/MyAliasName</p>\
              \ </li> <li> <p>arn:aws:kms:us-east-2:123456789012:alias/MyAliasName</p>\
              \ </li> <li> <p>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</p>\
              \ </li> <li> <p>12345678-1234-1234-1234-123456789012</p> </li> </ul>"
        IsOrganizationTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether the trail is applied to all accounts in\
              \ an organization in Organizations, or only for the current Amazon Web\
              \ Services account. The default is false, and cannot be true unless\
              \ the call is made on behalf of an Amazon Web Services account that\
              \ is the management account or delegated administrator account for an\
              \ organization in Organizations. If the trail is not an organization\
              \ trail and this is set to <code>true</code>, the trail will be created\
              \ in all Amazon Web Services accounts that belong to the organization.\
              \ If the trail is an organization trail and this is set to <code>false</code>,\
              \ the trail will remain in the current Amazon Web Services account but\
              \ be deleted from all member accounts in the organization."
      required:
      - Name
      title: UpdateTrailRequest
      type: object
    AccountId:
      maxLength: 16
      minLength: 12
      pattern: \d+
      type: string
    String:
      type: string
    TagsList:
      description: A list of tags.
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      type: array
    SelectorName:
      maxLength: 1000
      minLength: 0
      pattern: .*
      type: string
    AdvancedFieldSelectors:
      items:
        $ref: '#/components/schemas/AdvancedFieldSelector'
      minItems: 1
      type: array
    AdvancedEventSelector:
      description: "<p>Advanced event selectors let you create fine-grained selectors\
        \ for the following CloudTrail event record ﬁelds. They help you control costs\
        \ by logging only those events that are important to you. For more information\
        \ about advanced event selectors, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html\"\
        >Logging data events</a> in the <i>CloudTrail User Guide</i>.</p> <ul> <li>\
        \ <p> <code>readOnly</code> </p> </li> <li> <p> <code>eventSource</code> </p>\
        \ </li> <li> <p> <code>eventName</code> </p> </li> <li> <p> <code>eventCategory</code>\
        \ </p> </li> <li> <p> <code>resources.type</code> </p> </li> <li> <p> <code>resources.ARN</code>\
        \ </p> </li> </ul> <p>You cannot apply both event selectors and advanced event\
        \ selectors to a trail.</p>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SelectorName'
          - description: "An optional, descriptive name for an advanced event selector,\
              \ such as \"Log data events for only two S3 buckets\"."
        FieldSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedFieldSelectors'
          - description: Contains all selector statements in an advanced event selector.
      required:
      - FieldSelectors
      type: object
    AdvancedEventSelectors:
      items:
        $ref: '#/components/schemas/AdvancedEventSelector'
      type: array
    SelectorField:
      maxLength: 1000
      minLength: 1
      pattern: "[\\w|\\d|\\.|_]+"
      type: string
    Operator:
      items:
        $ref: '#/components/schemas/OperatorValue'
      minItems: 1
      type: array
    AdvancedFieldSelector:
      description: A single selector statement in an advanced event selector.
      properties:
        Field:
          allOf:
          - $ref: '#/components/schemas/SelectorField'
          - description: "<p> A field in a CloudTrail event record on which to filter\
              \ events to be logged. For event data stores for Config configuration\
              \ items, Audit Manager evidence, or non-Amazon Web Services events,\
              \ the field is used only for selecting events as filtering is not supported.\
              \ </p> <p> For CloudTrail event records, supported fields include <code>readOnly</code>,\
              \ <code>eventCategory</code>, <code>eventSource</code> (for management\
              \ events), <code>eventName</code>, <code>resources.type</code>, and\
              \ <code>resources.ARN</code>. </p> <p> For event data stores for Config\
              \ configuration items, Audit Manager evidence, or non-Amazon Web Services\
              \ events, the only supported field is <code>eventCategory</code>. </p>\
              \ <ul> <li> <p> <b> <code>readOnly</code> </b> - Optional. Can be set\
              \ to <code>Equals</code> a value of <code>true</code> or <code>false</code>.\
              \ If you do not add this field, CloudTrail logs both <code>read</code>\
              \ and <code>write</code> events. A value of <code>true</code> logs only\
              \ <code>read</code> events. A value of <code>false</code> logs only\
              \ <code>write</code> events.</p> </li> <li> <p> <b> <code>eventSource</code>\
              \ </b> - For filtering management events only. This can be set only\
              \ to <code>NotEquals</code> <code>kms.amazonaws.com</code>.</p> </li>\
              \ <li> <p> <b> <code>eventName</code> </b> - Can use any operator. You\
              \ can use it to ﬁlter in or ﬁlter out any data event logged to CloudTrail,\
              \ such as <code>PutBucket</code> or <code>GetSnapshotBlock</code>. You\
              \ can have multiple values for this ﬁeld, separated by commas.</p> </li>\
              \ <li> <p> <b> <code>eventCategory</code> </b> - This is required and\
              \ must be set to <code>Equals</code>. </p> <ul> <li> <p> For CloudTrail\
              \ event records, the value must be <code>Management</code> or <code>Data</code>.\
              \ </p> </li> <li> <p> For Config configuration items, the value must\
              \ be <code>ConfigurationItem</code>. </p> </li> <li> <p> For Audit Manager\
              \ evidence, the value must be <code>Evidence</code>. </p> </li> <li>\
              \ <p> For non-Amazon Web Services events, the value must be <code>ActivityAuditLog</code>.\
              \ </p> </li> </ul> </li> <li> <p> <b> <code>resources.type</code> </b>\
              \ - This ﬁeld is required for CloudTrail data events. <code>resources.type</code>\
              \ can only use the <code>Equals</code> operator, and the value can be\
              \ one of the following:</p> <ul> <li> <p> <code>AWS::DynamoDB::Table</code>\
              \ </p> </li> <li> <p> <code>AWS::Lambda::Function</code> </p> </li>\
              \ <li> <p> <code>AWS::S3::Object</code> </p> </li> <li> <p> <code>AWS::CloudTrail::Channel</code>\
              \ </p> </li> <li> <p> <code>AWS::CodeWhisperer::Profile</code> </p>\
              \ </li> <li> <p> <code>AWS::Cognito::IdentityPool</code> </p> </li>\
              \ <li> <p> <code>AWS::DynamoDB::Stream</code> </p> </li> <li> <p> <code>AWS::EC2::Snapshot</code>\
              \ </p> </li> <li> <p> <code>AWS::EMRWAL::Workspace</code> </p> </li>\
              \ <li> <p> <code>AWS::FinSpace::Environment</code> </p> </li> <li> <p>\
              \ <code>AWS::Glue::Table</code> </p> </li> <li> <p> <code>AWS::GuardDuty::Detector</code>\
              \ </p> </li> <li> <p> <code>AWS::KendraRanking::ExecutionPlan</code>\
              \ </p> </li> <li> <p> <code>AWS::ManagedBlockchain::Node</code> </p>\
              \ </li> <li> <p> <code>AWS::SageMaker::ExperimentTrialComponent</code>\
              \ </p> </li> <li> <p> <code>AWS::SageMaker::FeatureGroup</code> </p>\
              \ </li> <li> <p> <code>AWS::S3::AccessPoint</code> </p> </li> <li> <p>\
              \ <code>AWS::S3ObjectLambda::AccessPoint</code> </p> </li> <li> <p>\
              \ <code>AWS::S3Outposts::Object</code> </p> </li> </ul> <p> You can\
              \ have only one <code>resources.type</code> ﬁeld per selector. To log\
              \ data events on more than one resource type, add another selector.</p>\
              \ </li> <li> <p> <b> <code>resources.ARN</code> </b> - You can use any\
              \ operator with <code>resources.ARN</code>, but if you use <code>Equals</code>\
              \ or <code>NotEquals</code>, the value must exactly match the ARN of\
              \ a valid resource of the type you've speciﬁed in the template as the\
              \ value of resources.type. For example, if resources.type equals <code>AWS::S3::Object</code>,\
              \ the ARN must be in one of the following formats. To log all data events\
              \ for all objects in a specific S3 bucket, use the <code>StartsWith</code>\
              \ operator, and include only the bucket ARN as the matching value.</p>\
              \ <p>The trailing slash is intentional; do not exclude it. Replace the\
              \ text between less than and greater than symbols (&lt;&gt;) with resource-specific\
              \ information. </p> <ul> <li> <p> <code>arn:&lt;partition&gt;:s3:::&lt;bucket_name&gt;/</code>\
              \ </p> </li> <li> <p> <code>arn:&lt;partition&gt;:s3:::&lt;bucket_name&gt;/&lt;object_path&gt;/</code>\
              \ </p> </li> </ul> <p>When resources.type equals <code>AWS::DynamoDB::Table</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:dynamodb:&lt;region&gt;:&lt;account_ID&gt;:table/&lt;table_name&gt;</code>\
              \ </p> </li> </ul> <p>When resources.type equals <code>AWS::Lambda::Function</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:lambda:&lt;region&gt;:&lt;account_ID&gt;:function:&lt;function_name&gt;</code>\
              \ </p> </li> </ul> <p>When resources.type equals <code>AWS::CloudTrail::Channel</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:cloudtrail:&lt;region&gt;:&lt;account_ID&gt;:channel/&lt;channel_UUID&gt;</code>\
              \ </p> </li> </ul> <p>When resources.type equals <code>AWS::CodeWhisperer::Profile</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:codewhisperer:&lt;region&gt;:&lt;account_ID&gt;:profile/&lt;profile_ID&gt;</code>\
              \ </p> </li> </ul> <p>When resources.type equals <code>AWS::Cognito::IdentityPool</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:cognito-identity:&lt;region&gt;:&lt;account_ID&gt;:identitypool/&lt;identity_pool_ID&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::DynamoDB::Stream</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:dynamodb:&lt;region&gt;:&lt;account_ID&gt;:table/&lt;table_name&gt;/stream/&lt;date_time&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::EC2::Snapshot</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:ec2:&lt;region&gt;::snapshot/&lt;snapshot_ID&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::EMRWAL::Workspace</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:emrwal:&lt;region&gt;::workspace/&lt;workspace_name&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::FinSpace::Environment</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:finspace:&lt;region&gt;:&lt;account_ID&gt;:environment/&lt;environment_ID&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::Glue::Table</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:glue:&lt;region&gt;:&lt;account_ID&gt;:table/&lt;database_name&gt;/&lt;table_name&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::GuardDuty::Detector</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:guardduty:&lt;region&gt;:&lt;account_ID&gt;:detector/&lt;detector_ID&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::KendraRanking::ExecutionPlan</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:kendra-ranking:&lt;region&gt;:&lt;account_ID&gt;:rescore-execution-plan/&lt;rescore_execution_plan_ID&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::ManagedBlockchain::Node</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:managedblockchain:&lt;region&gt;:&lt;account_ID&gt;:nodes/&lt;node_ID&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::SageMaker::ExperimentTrialComponent</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:sagemaker:&lt;region&gt;:&lt;account_ID&gt;:experiment-trial-component/&lt;experiment_trial_component_name&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::SageMaker::FeatureGroup</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:sagemaker:&lt;region&gt;:&lt;account_ID&gt;:feature-group/&lt;feature_group_name&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::S3::AccessPoint</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in one of the following formats. To log events on\
              \ all objects in an S3 access point, we recommend that you use only\
              \ the access point ARN, don’t include the object path, and use the <code>StartsWith</code>\
              \ or <code>NotStartsWith</code> operators.</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:s3:&lt;region&gt;:&lt;account_ID&gt;:accesspoint/&lt;access_point_name&gt;</code>\
              \ </p> </li> <li> <p> <code>arn:&lt;partition&gt;:s3:&lt;region&gt;:&lt;account_ID&gt;:accesspoint/&lt;access_point_name&gt;/object/&lt;object_path&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::S3ObjectLambda::AccessPoint</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:s3-object-lambda:&lt;region&gt;:&lt;account_ID&gt;:accesspoint/&lt;access_point_name&gt;</code>\
              \ </p> </li> </ul> <p>When <code>resources.type</code> equals <code>AWS::S3Outposts::Object</code>,\
              \ and the operator is set to <code>Equals</code> or <code>NotEquals</code>,\
              \ the ARN must be in the following format:</p> <ul> <li> <p> <code>arn:&lt;partition&gt;:s3-outposts:&lt;region&gt;:&lt;account_ID&gt;:&lt;object_path&gt;</code>\
              \ </p> </li> </ul> </li> </ul>"
        Equals:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: " An operator that includes events that match the exact value\
              \ of the event record field specified as the value of <code>Field</code>.\
              \ This is the only valid operator that you can use with the <code>readOnly</code>,\
              \ <code>eventCategory</code>, and <code>resources.type</code> fields."
        StartsWith:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: An operator that includes events that match the first few
              characters of the event record field specified as the value of <code>Field</code>.
        EndsWith:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: An operator that includes events that match the last few
              characters of the event record field specified as the value of <code>Field</code>.
        NotEquals:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: ' An operator that excludes events that match the exact value
              of the event record field specified as the value of <code>Field</code>. '
        NotStartsWith:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: ' An operator that excludes events that match the first few
              characters of the event record field specified as the value of <code>Field</code>. '
        NotEndsWith:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: ' An operator that excludes events that match the last few
              characters of the event record field specified as the value of <code>Field</code>. '
      required:
      - Field
      type: object
    Boolean:
      type: boolean
    ByteBuffer:
      type: string
    EventDataStoreArn:
      maxLength: 256
      minLength: 3
      pattern: "^[a-zA-Z0-9._/\\-:]+$"
      type: string
    UUID:
      maxLength: 36
      minLength: 36
      pattern: "^[a-f0-9\\-]+$"
      type: string
    QueryStatus:
      enum:
      - QUEUED
      - RUNNING
      - FINISHED
      - FAILED
      - CANCELLED
      - TIMED_OUT
      type: string
    ChannelArn:
      maxLength: 256
      minLength: 3
      pattern: "^[a-zA-Z0-9._/\\-:]+$"
      type: string
    ChannelName:
      maxLength: 128
      minLength: 3
      pattern: "^[a-zA-Z0-9._\\-]+$"
      type: string
    Channel:
      description: Contains information about a returned CloudTrail channel.
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: The Amazon Resource Name (ARN) of a channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: " The name of the CloudTrail channel. For service-linked\
              \ channels, the name is <code>aws-service-channel/service-name/custom-suffix</code>\
              \ where <code>service-name</code> represents the name of the Amazon\
              \ Web Services service that created the channel and <code>custom-suffix</code>\
              \ represents the suffix created by the Amazon Web Services service. "
      type: object
    Channels:
      items:
        $ref: '#/components/schemas/Channel'
      type: array
    Source:
      maxLength: 256
      minLength: 1
      pattern: .*
      type: string
    Destinations:
      items:
        $ref: '#/components/schemas/Destination'
      maxItems: 200
      minItems: 1
      type: array
    EventDataStoreName:
      maxLength: 128
      minLength: 3
      pattern: "^[a-zA-Z0-9._\\-]+$"
      type: string
    RetentionPeriod:
      maximum: 2557
      minimum: 7
      type: integer
    TerminationProtectionEnabled:
      type: boolean
    EventDataStoreKmsKeyId:
      maxLength: 350
      minLength: 1
      pattern: "^[a-zA-Z0-9._/\\-:]+$"
      type: string
    EventDataStoreStatus:
      enum:
      - CREATED
      - ENABLED
      - PENDING_DELETION
      - STARTING_INGESTION
      - STOPPING_INGESTION
      - STOPPED_INGESTION
      type: string
    Date:
      format: date-time
      type: string
    DataResourceValues:
      items:
        $ref: '#/components/schemas/String'
      type: array
    DataResource:
      description: "<p>The Amazon S3 buckets, Lambda functions, or Amazon DynamoDB\
        \ tables that you specify in your event selectors for your trail to log data\
        \ events. Data events provide information about the resource operations performed\
        \ on or within a resource itself. These are also known as data plane operations.\
        \ You can specify up to 250 data resources for a trail.</p> <note> <p>The\
        \ total number of allowed data resources is 250. This number can be distributed\
        \ between 1 and 5 event selectors, but the total cannot exceed 250 across\
        \ all selectors for the trail.</p> <p>If you are using advanced event selectors,\
        \ the maximum total number of values for all conditions, across all advanced\
        \ event selectors for the trail, is 500.</p> </note> <p>The following example\
        \ demonstrates how logging works when you configure logging of all data events\
        \ for an S3 bucket named <code>bucket-1</code>. In this example, the CloudTrail\
        \ user specified an empty prefix, and the option to log both <code>Read</code>\
        \ and <code>Write</code> data events.</p> <ol> <li> <p>A user uploads an image\
        \ file to <code>bucket-1</code>.</p> </li> <li> <p>The <code>PutObject</code>\
        \ API operation is an Amazon S3 object-level API. It is recorded as a data\
        \ event in CloudTrail. Because the CloudTrail user specified an S3 bucket\
        \ with an empty prefix, events that occur on any object in that bucket are\
        \ logged. The trail processes and logs the event.</p> </li> <li> <p>A user\
        \ uploads an object to an Amazon S3 bucket named <code>arn:aws:s3:::bucket-2</code>.</p>\
        \ </li> <li> <p>The <code>PutObject</code> API operation occurred for an object\
        \ in an S3 bucket that the CloudTrail user didn't specify for the trail. The\
        \ trail doesn’t log the event.</p> </li> </ol> <p>The following example demonstrates\
        \ how logging works when you configure logging of Lambda data events for a\
        \ Lambda function named <i>MyLambdaFunction</i>, but not for all Lambda functions.</p>\
        \ <ol> <li> <p>A user runs a script that includes a call to the <i>MyLambdaFunction</i>\
        \ function and the <i>MyOtherLambdaFunction</i> function.</p> </li> <li> <p>The\
        \ <code>Invoke</code> API operation on <i>MyLambdaFunction</i> is an Lambda\
        \ API. It is recorded as a data event in CloudTrail. Because the CloudTrail\
        \ user specified logging data events for <i>MyLambdaFunction</i>, any invocations\
        \ of that function are logged. The trail processes and logs the event.</p>\
        \ </li> <li> <p>The <code>Invoke</code> API operation on <i>MyOtherLambdaFunction</i>\
        \ is an Lambda API. Because the CloudTrail user did not specify logging data\
        \ events for all Lambda functions, the <code>Invoke</code> operation for <i>MyOtherLambdaFunction</i>\
        \ does not match the function specified for the trail. The trail doesn’t log\
        \ the event. </p> </li> </ol>"
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The resource type in which you want to log data events.\
              \ You can specify the following <i>basic</i> event selector resource\
              \ types:</p> <ul> <li> <p> <code>AWS::DynamoDB::Table</code> </p> </li>\
              \ <li> <p> <code>AWS::Lambda::Function</code> </p> </li> <li> <p> <code>AWS::S3::Object</code>\
              \ </p> </li> </ul> <p>The following resource types are also available\
              \ through <i>advanced</i> event selectors. Basic event selector resource\
              \ types are valid in advanced event selectors, but advanced event selector\
              \ resource types are not valid in basic event selectors. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_AdvancedFieldSelector.html\"\
              >AdvancedFieldSelector</a>.</p> <ul> <li> <p> <code>AWS::CloudTrail::Channel</code>\
              \ </p> </li> <li> <p> <code>AWS::CodeWhisperer::Profile</code> </p>\
              \ </li> <li> <p> <code>AWS::Cognito::IdentityPool</code> </p> </li>\
              \ <li> <p> <code>AWS::DynamoDB::Stream</code> </p> </li> <li> <p> <code>AWS::EC2::Snapshot</code>\
              \ </p> </li> <li> <p> <code>AWS::EMRWAL::Workspace</code> </p> </li>\
              \ <li> <p> <code>AWS::FinSpace::Environment</code> </p> </li> <li> <p>\
              \ <code>AWS::Glue::Table</code> </p> </li> <li> <p> <code>AWS::GuardDuty::Detector</code>\
              \ </p> </li> <li> <p> <code>AWS::KendraRanking::ExecutionPlan</code>\
              \ </p> </li> <li> <p> <code>AWS::ManagedBlockchain::Node</code> </p>\
              \ </li> <li> <p> <code>AWS::SageMaker::ExperimentTrialComponent</code>\
              \ </p> </li> <li> <p> <code>AWS::SageMaker::FeatureGroup</code> </p>\
              \ </li> <li> <p> <code>AWS::S3::AccessPoint</code> </p> </li> <li> <p>\
              \ <code>AWS::S3ObjectLambda::AccessPoint</code> </p> </li> <li> <p>\
              \ <code>AWS::S3Outposts::Object</code> </p> </li> </ul>"
        Values:
          allOf:
          - $ref: '#/components/schemas/DataResourceValues'
          - description: "<p>An array of Amazon Resource Name (ARN) strings or partial\
              \ ARN strings for the specified objects.</p> <ul> <li> <p>To log data\
              \ events for all objects in all S3 buckets in your Amazon Web Services\
              \ account, specify the prefix as <code>arn:aws:s3</code>.</p> <note>\
              \ <p>This also enables logging of data event activity performed by any\
              \ user or role in your Amazon Web Services account, even if that activity\
              \ is performed on a bucket that belongs to another Amazon Web Services\
              \ account.</p> </note> </li> <li> <p>To log data events for all objects\
              \ in an S3 bucket, specify the bucket and an empty object prefix such\
              \ as <code>arn:aws:s3:::bucket-1/</code>. The trail logs data events\
              \ for all objects in this S3 bucket.</p> </li> <li> <p>To log data events\
              \ for specific objects, specify the S3 bucket and object prefix such\
              \ as <code>arn:aws:s3:::bucket-1/example-images</code>. The trail logs\
              \ data events for objects in this S3 bucket that match the prefix.</p>\
              \ </li> <li> <p>To log data events for all Lambda functions in your\
              \ Amazon Web Services account, specify the prefix as <code>arn:aws:lambda</code>.</p>\
              \ <note> <p>This also enables logging of <code>Invoke</code> activity\
              \ performed by any user or role in your Amazon Web Services account,\
              \ even if that activity is performed on a function that belongs to another\
              \ Amazon Web Services account. </p> </note> </li> <li> <p>To log data\
              \ events for a specific Lambda function, specify the function ARN.</p>\
              \ <note> <p>Lambda function ARNs are exact. For example, if you specify\
              \ a function ARN <i>arn:aws:lambda:us-west-2:111111111111:function:helloworld</i>,\
              \ data events will only be logged for <i>arn:aws:lambda:us-west-2:111111111111:function:helloworld</i>.\
              \ They will not be logged for <i>arn:aws:lambda:us-west-2:111111111111:function:helloworld2</i>.</p>\
              \ </note> </li> <li> <p>To log data events for all DynamoDB tables in\
              \ your Amazon Web Services account, specify the prefix as <code>arn:aws:dynamodb</code>.</p>\
              \ </li> </ul>"
      type: object
    DataResources:
      items:
        $ref: '#/components/schemas/DataResource'
      type: array
    ResourceArn:
      maxLength: 256
      minLength: 3
      pattern: "^[a-zA-Z0-9._/\\-:]+$"
      type: string
    DeliveryS3Uri:
      maxLength: 1024
      pattern: "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?"
      type: string
    DeliveryStatus:
      enum:
      - SUCCESS
      - FAILED
      - FAILED_SIGNING_FILE
      - PENDING
      - RESOURCE_NOT_FOUND
      - ACCESS_DENIED
      - ACCESS_DENIED_SIGNING_FILE
      - CANCELLED
      - UNKNOWN
      type: string
    QueryAlias:
      maxLength: 256
      minLength: 1
      pattern: "^[a-zA-Z][a-zA-Z0-9._\\-]*$"
      type: string
    QueryStatement:
      maxLength: 10000
      minLength: 1
      pattern: \(\?s\).*
      type: string
    QueryStatisticsForDescribeQuery:
      description: "Gets metadata about a query, including the number of events that\
        \ were matched, the total number of events scanned, the query run time in\
        \ milliseconds, and the query's creation time."
      properties:
        EventsMatched:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of events that matched a query.
        EventsScanned:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of events that the query scanned in the event
              data store.
        BytesScanned:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The total bytes that the query scanned in the event data\
              \ store. This value matches the number of bytes for which your account\
              \ is billed for the query, unless the query is still running."
        ExecutionTimeInMillis:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The query's run time, in milliseconds."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The creation time of the query.
      type: object
    ErrorMessage:
      maxLength: 1000
      minLength: 4
      pattern: .*
      type: string
    TrailNameList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    TrailList:
      items:
        $ref: '#/components/schemas/Trail'
      type: array
    DestinationType:
      enum:
      - EVENT_DATA_STORE
      - AWS_SERVICE
      type: string
    Location:
      maxLength: 1024
      minLength: 3
      pattern: "^[a-zA-Z0-9._/\\-:]+$"
      type: string
    Destination:
      description: Contains information about the destination receiving events.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/DestinationType'
          - description: "The type of destination for events arriving from a channel.\
              \ For channels used for a CloudTrail Lake integration, the value is\
              \ <code>EventDataStore</code>. For service-linked channels, the value\
              \ is <code>AWS_SERVICE</code>. "
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          - description: " For channels used for a CloudTrail Lake integration, the\
              \ location is the ARN of an event data store that receives events from\
              \ a channel. For service-linked channels, the location is the name of\
              \ the Amazon Web Services service."
      required:
      - Location
      - Type
      type: object
    ResourceList:
      description: A list of resources referenced by the event returned.
      items:
        $ref: '#/components/schemas/Resource'
      type: array
    Event:
      description: Contains information about an event that was returned by a lookup
        request. The result includes a representation of a CloudTrail event.
      properties:
        EventId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The CloudTrail ID of the event returned.
        EventName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the event returned.
        ReadOnly:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'Information about whether the event is a write event or
              a read event. '
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Web Services access key ID that was used to sign\
              \ the request. If the request was made with temporary security credentials,\
              \ this is the access key ID of the temporary credentials."
        EventTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time of the event returned.
        EventSource:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Web Services service to which the request was
              made.
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A user name or role name of the requester that called the
              API in the event returned.
        Resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          - description: A list of resources referenced by the event returned.
        CloudTrailEvent:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A JSON string that contains a representation of the event
              returned.
      type: object
    EventCategory:
      enum:
      - insight
      type: string
    EventDataStore:
      description: "A storage lake of event data against which you can run complex\
        \ SQL-based queries. An event data store can include events that you have\
        \ logged on your account from the last 90 to 2557 days (about three months\
        \ to up to seven years). To select events for an event data store, use <a\
        \ href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced\"\
        >advanced event selectors</a>."
      properties:
        EventDataStoreArn:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreArn'
          - description: The ARN of the event data store.
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreName'
          - description: The name of the event data store.
        TerminationProtectionEnabled:
          allOf:
          - $ref: '#/components/schemas/TerminationProtectionEnabled'
          - deprecated: true
            description: Indicates whether the event data store is protected from
              termination.TerminationProtectionEnabled is no longer returned by ListEventDataStores
        Status:
          allOf:
          - $ref: '#/components/schemas/EventDataStoreStatus'
          - deprecated: true
            description: The status of an event data store.Status is no longer returned
              by ListEventDataStores
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - deprecated: true
            description: The advanced event selectors that were used to select events
              for the data store.AdvancedEventSelectors is no longer returned by ListEventDataStores
        MultiRegionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - deprecated: true
            description: "Indicates whether the event data store includes events from\
              \ all Regions, or only from the Region in which it was created.MultiRegionEnabled\
              \ is no longer returned by ListEventDataStores"
        OrganizationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - deprecated: true
            description: Indicates that an event data store is collecting logged events
              for an organization.OrganizationEnabled is no longer returned by ListEventDataStores
        RetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriod'
          - deprecated: true
            description: "The retention period, in days.RetentionPeriod is no longer\
              \ returned by ListEventDataStores"
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - deprecated: true
            description: The timestamp of the event data store's creation.CreatedTimestamp
              is no longer returned by ListEventDataStores
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - deprecated: true
            description: "The timestamp showing when an event data store was updated,\
              \ if applicable. <code>UpdatedTimestamp</code> is always either the\
              \ same or newer than the time shown in <code>CreatedTimestamp</code>.UpdatedTimestamp\
              \ is no longer returned by ListEventDataStores"
      type: object
    EventDataStores:
      items:
        $ref: '#/components/schemas/EventDataStore'
      type: array
    ReadWriteType:
      enum:
      - ReadOnly
      - WriteOnly
      - All
      type: string
    ExcludeManagementEventSources:
      items:
        $ref: '#/components/schemas/String'
      type: array
    EventSelector:
      description: "<p>Use event selectors to further specify the management and data\
        \ event settings for your trail. By default, trails created without specific\
        \ event selectors will be configured to log all read and write management\
        \ events, and no data events. When an event occurs in your account, CloudTrail\
        \ evaluates the event selector for all trails. For each trail, if the event\
        \ matches any event selector, the trail processes and logs the event. If the\
        \ event doesn't match any event selector, the trail doesn't log the event.</p>\
        \ <p>You can configure up to five event selectors for a trail.</p> <p>You\
        \ cannot apply both event selectors and advanced event selectors to a trail.</p>"
      properties:
        ReadWriteType:
          allOf:
          - $ref: '#/components/schemas/ReadWriteType'
          - description: "<p>Specify if you want your trail to log read-only events,\
              \ write-only events, or all. For example, the EC2 <code>GetConsoleOutput</code>\
              \ is a read-only API operation and <code>RunInstances</code> is a write-only\
              \ API operation.</p> <p> By default, the value is <code>All</code>.</p>"
        IncludeManagementEvents:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Specify if you want your event selector to include management\
              \ events for your trail.</p> <p> For more information, see <a href=\"\
              https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-events-with-cloudtrail.html\"\
              >Management Events</a> in the <i>CloudTrail User Guide</i>.</p> <p>By\
              \ default, the value is <code>true</code>.</p> <p>The first copy of\
              \ management events is free. You are charged for additional copies of\
              \ management events that you are logging on any subsequent trail in\
              \ the same Region. For more information about CloudTrail pricing, see\
              \ <a href=\"http://aws.amazon.com/cloudtrail/pricing/\">CloudTrail Pricing</a>.</p>"
        DataResources:
          allOf:
          - $ref: '#/components/schemas/DataResources'
          - description: "<p>CloudTrail supports data event logging for Amazon S3\
              \ objects, Lambda functions, and Amazon DynamoDB tables with basic event\
              \ selectors. You can specify up to 250 resources for an individual event\
              \ selector, but the total number of data resources cannot exceed 250\
              \ across all event selectors in a trail. This limit does not apply if\
              \ you configure resource logging for all data events.</p> <p>For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html\"\
              >Data Events</a> and <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/WhatIsCloudTrail-Limits.html\"\
              >Limits in CloudTrail</a> in the <i>CloudTrail User Guide</i>.</p>"
        ExcludeManagementEventSources:
          allOf:
          - $ref: '#/components/schemas/ExcludeManagementEventSources'
          - description: "An optional list of service event sources from which you\
              \ do not want management events to be logged on your trail. In this\
              \ release, the list can be empty (disables the filter), or it can filter\
              \ out Key Management Service or Amazon RDS Data API events by containing\
              \ <code>kms.amazonaws.com</code> or <code>rdsdata.amazonaws.com</code>.\
              \ By default, <code>ExcludeManagementEventSources</code> is empty, and\
              \ KMS and Amazon RDS Data API events are logged to your trail. You can\
              \ exclude management event sources only in Regions that support the\
              \ event source."
      type: object
    EventSelectors:
      items:
        $ref: '#/components/schemas/EventSelector'
      type: array
    EventsList:
      items:
        $ref: '#/components/schemas/Event'
      type: array
    SourceConfig:
      description: ' Contains configuration information about the channel. '
      properties:
        ApplyToAllRegions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specifies whether the channel applies to a single Region
              or to all Regions.'
        AdvancedEventSelectors:
          allOf:
          - $ref: '#/components/schemas/AdvancedEventSelectors'
          - description: ' The advanced event selectors that are configured for the
              channel.'
      type: object
    IngestionStatus:
      description: A table showing information about the most recent successful and
        failed attempts to ingest events.
      properties:
        LatestIngestionSuccessTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time stamp of the most recent successful ingestion of
              events for the channel.
        LatestIngestionSuccessEventID:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The event ID of the most recent successful ingestion of events.
        LatestIngestionErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The error code for the most recent failure to ingest events.
        LatestIngestionAttemptTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time stamp of the most recent attempt to ingest events
              on the channel.
        LatestIngestionAttemptEventID:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The event ID of the most recent attempt to ingest events.
      type: object
    ImportDestinations:
      items:
        $ref: '#/components/schemas/EventDataStoreArn'
      maxItems: 1
      minItems: 1
      type: array
    ImportSource:
      description: ' The import source. '
      properties:
        S3:
          $ref: '#/components/schemas/ImportSource_S3'
      required:
      - S3
      type: object
    ImportStatus:
      enum:
      - INITIALIZING
      - IN_PROGRESS
      - FAILED
      - STOPPED
      - COMPLETED
      type: string
    ImportStatistics:
      description: " Provides statistics for the specified <code>ImportID</code>.\
        \ CloudTrail does not update import statistics in real-time. Returned values\
        \ for parameters such as <code>EventsCompleted</code> may be lower than the\
        \ actual value, because CloudTrail updates statistics incrementally over the\
        \ course of the import. "
      properties:
        PrefixesFound:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: ' The number of S3 prefixes found for the import. '
        PrefixesCompleted:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: ' The number of S3 prefixes that completed import. '
        FilesCompleted:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of log files that completed import.
        EventsCompleted:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: ' The number of trail events imported into the event data
              store. '
        FailedEntries:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: ' The number of failed entries. '
      type: object
    InsightSelectors:
      items:
        $ref: '#/components/schemas/InsightSelector'
      type: array
    PaginationToken:
      maxLength: 1000
      minLength: 4
      pattern: .*
      type: string
    MaxQueryResults:
      maximum: 1000
      minimum: 1
      type: integer
    QueryStatistics:
      description: "Metadata about a query, such as the number of results."
      properties:
        ResultsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of results returned.
        TotalResultsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of results returned by a query.
        BytesScanned:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The total bytes that the query scanned in the event data\
              \ store. This value matches the number of bytes for which your account\
              \ is billed for the query, unless the query is still running."
      type: object
    QueryResultRows:
      items:
        $ref: '#/components/schemas/QueryResultRow'
      type: array
    ResourcePolicy:
      maxLength: 8192
      minLength: 1
      type: string
    Trail:
      description: The settings for a trail.
      example:
        IncludeGlobalServiceEvents: ""
        HasInsightSelectors: ""
        KmsKeyId: ""
        HomeRegion: ""
        CloudWatchLogsRoleArn: ""
        S3KeyPrefix: ""
        Name: ""
        IsOrganizationTrail: ""
        CloudWatchLogsLogGroupArn: ""
        HasCustomEventSelectors: ""
        SnsTopicName: ""
        LogFileValidationEnabled: ""
        IsMultiRegionTrail: ""
        S3BucketName: ""
        SnsTopicARN: ""
        TrailARN: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the trail set by calling <a>CreateTrail</a>. The
              maximum length is 128 characters.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of the Amazon S3 bucket into which CloudTrail delivers
              your trail files. See <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/create_trail_naming_policy.html">Amazon
              S3 Bucket Naming Requirements</a>.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the Amazon S3 key prefix that comes after the\
              \ name of the bucket you have designated for log file delivery. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-find-log-files.html\"\
              >Finding Your CloudTrail Log Files</a>. The maximum length is 200 characters."
        SnsTopicName:
          allOf:
          - $ref: '#/components/schemas/String'
          - deprecated: true
            description: This field is no longer in use. Use <code>SnsTopicARN</code>.
        SnsTopicARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the ARN of the Amazon SNS topic that CloudTrail
              uses to send notifications when log files are delivered. The following
              is the format of a topic ARN.</p> <p> <code>arn:aws:sns:us-east-2:123456789012:MyTopic</code>
              </p>
        IncludeGlobalServiceEvents:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Set to <b>True</b> to include Amazon Web Services API calls\
              \ from Amazon Web Services global services such as IAM. Otherwise, <b>False</b>."
        IsMultiRegionTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail exists only in one Region or
              exists in all Regions.
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Region in which the trail was created.
        TrailARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the ARN of the trail. The following is the format
              of a trail ARN.</p> <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>
              </p>
        LogFileValidationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether log file validation is enabled.
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies an Amazon Resource Name (ARN), a unique identifier\
              \ that represents the log group to which CloudTrail logs will be delivered."
        CloudWatchLogsRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the role for the CloudWatch Logs endpoint to assume
              to write to a user's log group.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the KMS key ID that encrypts the logs delivered
              by CloudTrail. The value is a fully specified ARN to a KMS key in the
              following format.</p> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code>
              </p>
        HasCustomEventSelectors:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies if the trail has custom event selectors.
        HasInsightSelectors:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether a trail has insight types specified in
              an <code>InsightSelector</code> list.
        IsOrganizationTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the trail is an organization trail.
      type: object
    ImportFailureListItem:
      description: ' Provides information about an import failure. '
      properties:
        Location:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The location of the failure in the S3 bucket. '
        Status:
          allOf:
          - $ref: '#/components/schemas/ImportFailureStatus'
          - description: ' The status of the import. '
        ErrorType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The type of import error. '
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Provides the reason the import failed. '
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' When the import was last updated. '
      type: object
    ImportFailureList:
      items:
        $ref: '#/components/schemas/ImportFailureListItem'
      type: array
    ImportFailureStatus:
      enum:
      - FAILED
      - RETRY
      - SUCCEEDED
      type: string
    S3ImportSource:
      description: ' The settings for the source S3 bucket. '
      properties:
        S3LocationUri:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The URI for the source S3 bucket. '
        S3BucketRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The Region associated with the source S3 bucket. '
        S3BucketAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The IAM ARN role used to access the source S3 bucket. '
      required:
      - S3BucketAccessRoleArn
      - S3BucketRegion
      - S3LocationUri
      type: object
    Long:
      type: integer
    ImportsListItem:
      description: ' Contains information about an import that was returned by a lookup
        request. '
      properties:
        ImportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: ' The ID of the import. '
        ImportStatus:
          allOf:
          - $ref: '#/components/schemas/ImportStatus'
          - description: ' The status of the import. '
        Destinations:
          allOf:
          - $ref: '#/components/schemas/ImportDestinations'
          - description: ' The ARN of the destination event data store. '
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' The timestamp of the import''s creation. '
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: ' The timestamp of the import''s last update. '
      type: object
    ImportsList:
      items:
        $ref: '#/components/schemas/ImportsListItem'
      type: array
    InsightType:
      enum:
      - ApiCallRateInsight
      - ApiErrorRateInsight
      type: string
    InsightSelector:
      description: A JSON string that contains a list of Insights types that are logged
        on a trail.
      properties:
        InsightType:
          allOf:
          - $ref: '#/components/schemas/InsightType'
          - description: <p>The type of Insights events to log on a trail. <code>ApiCallRateInsight</code>
              and <code>ApiErrorRateInsight</code> are valid Insight types.</p> <p>The
              <code>ApiCallRateInsight</code> Insights type analyzes write-only management
              API calls that are aggregated per minute against a baseline API call
              volume.</p> <p>The <code>ApiErrorRateInsight</code> Insights type analyzes
              management API calls that result in error codes. The error is shown
              if the API call is unsuccessful.</p>
      type: object
    Integer:
      type: integer
    ListChannelsMaxResultsCount:
      maximum: 1000
      minimum: 1
      type: integer
    ListEventDataStoresMaxResultsCount:
      maximum: 1000
      minimum: 1
      type: integer
    ListImportFailuresMaxResultsCount:
      maximum: 1000
      minimum: 1
      type: integer
    ListImportsMaxResultsCount:
      maximum: 1000
      minimum: 1
      type: integer
    PublicKeyList:
      items:
        $ref: '#/components/schemas/PublicKey'
      type: array
    ListQueriesMaxResultsCount:
      maximum: 1000
      minimum: 1
      type: integer
    Queries:
      items:
        $ref: '#/components/schemas/Query'
      type: array
    ResourceIdList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ResourceTagList:
      items:
        $ref: '#/components/schemas/ResourceTag'
      type: array
    Trails:
      items:
        $ref: '#/components/schemas/TrailInfo'
      type: array
    LookupAttributeKey:
      enum:
      - EventId
      - EventName
      - ReadOnly
      - Username
      - ResourceType
      - ResourceName
      - EventSource
      - AccessKeyId
      type: string
    LookupAttributeValue:
      maxLength: 2000
      minLength: 1
      type: string
    LookupAttribute:
      description: Specifies an attribute and value that filter the events returned.
      properties:
        AttributeKey:
          allOf:
          - $ref: '#/components/schemas/LookupAttributeKey'
          - description: Specifies an attribute on which to filter the events returned.
        AttributeValue:
          allOf:
          - $ref: '#/components/schemas/LookupAttributeValue'
          - description: Specifies a value for the specified AttributeKey.
      required:
      - AttributeKey
      - AttributeValue
      type: object
    LookupAttributesList:
      items:
        $ref: '#/components/schemas/LookupAttribute'
      type: array
    MaxResults:
      maximum: 50
      minimum: 1
      type: integer
    NextToken:
      type: string
    OperatorValue:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    PublicKey:
      description: Contains information about a returned public key.
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/ByteBuffer'
          - description: The DER encoded public key value in PKCS#1 format.
        ValidityStartTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The starting time of validity of the public key.
        ValidityEndTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The ending time of validity of the public key.
        Fingerprint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The fingerprint of the public key.
      type: object
    Query:
      description: A SQL string of criteria about events that you want to collect
        in an event data store.
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of a query.
        QueryStatus:
          allOf:
          - $ref: '#/components/schemas/QueryStatus'
          - description: "The status of the query. This can be <code>QUEUED</code>,\
              \ <code>RUNNING</code>, <code>FINISHED</code>, <code>FAILED</code>,\
              \ <code>TIMED_OUT</code>, or <code>CANCELLED</code>."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The creation time of a query.
      type: object
    QueryParameter:
      maxLength: 1024
      minLength: 1
      pattern: .*
      type: string
    QueryParameters:
      items:
        $ref: '#/components/schemas/QueryParameter'
      maxItems: 10
      minItems: 1
      type: array
    QueryResultValue:
      type: string
    QueryResultColumn:
      additionalProperties:
        $ref: '#/components/schemas/QueryResultValue'
      type: object
    QueryResultKey:
      type: string
    QueryResultRow:
      items:
        $ref: '#/components/schemas/QueryResultColumn'
      type: array
    Resource:
      description: Specifies the type and name of a resource referenced by an event.
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of a resource referenced by the event returned.\
              \ When the resource type cannot be determined, null is returned. Some\
              \ examples of resource types are: <b>Instance</b> for EC2, <b>Trail</b>\
              \ for CloudTrail, <b>DBInstance</b> for Amazon RDS, and <b>AccessKey</b>\
              \ for IAM. To learn more about how to look up and filter events by the\
              \ resource types supported for a service, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/view-cloudtrail-events-console.html#filtering-cloudtrail-events\"\
              >Filtering CloudTrail Events</a>."
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the resource referenced by the event returned.\
              \ These are user-created names whose values will depend on the environment.\
              \ For example, the resource name might be \"auto-scaling-test-group\"\
              \ for an Auto Scaling Group or \"i-1234567\" for an EC2 Instance."
      type: object
    ResourceTag:
      description: A resource tag.
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the ARN of the resource.
        TagsList:
          allOf:
          - $ref: '#/components/schemas/TagsList'
          - description: A list of tags.
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    TagValue:
      maxLength: 256
      minLength: 1
      type: string
    Tag:
      description: "A custom key-value pair associated with a resource such as a CloudTrail\
        \ trail, event data store, or channel."
      example:
        Value: ""
        Key: ""
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key in a key-value pair. The key must be must be no longer
              than 128 Unicode characters. The key must be unique for the resource
              to which it applies.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value in a key-value pair of a tag. The value must be
              no longer than 256 Unicode characters.
      required:
      - Key
      type: object
    TrailInfo:
      description: "Information about a CloudTrail trail, including the trail's name,\
        \ home Region, and Amazon Resource Name (ARN)."
      properties:
        TrailARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of a trail.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a trail.
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Web Services Region in which a trail was created.
      type: object
    DescribeQueryResponse_QueryStatistics:
      allOf:
      - $ref: '#/components/schemas/QueryStatisticsForDescribeQuery'
      - description: "Metadata about a query, including the number of events that\
          \ were matched, the total number of events scanned, the query run time in\
          \ milliseconds, and the query's creation time."
      example:
        EventsScanned: ""
        EventsMatched: ""
        BytesScanned: ""
        CreationTime: ""
        ExecutionTimeInMillis: ""
    GetChannelResponse_SourceConfig:
      allOf:
      - $ref: '#/components/schemas/SourceConfig'
      - description: " Provides information about the advanced event selectors configured\
          \ for the channel, and whether the channel applies to all Regions or a single\
          \ Region. "
      example:
        ApplyToAllRegions: ""
        AdvancedEventSelectors: ""
    GetChannelResponse_IngestionStatus:
      allOf:
      - $ref: '#/components/schemas/IngestionStatus'
      - description: A table showing information about the most recent successful
          and failed attempts to ingest events.
      example:
        LatestIngestionSuccessEventID: ""
        LatestIngestionAttemptTime: ""
        LatestIngestionAttemptEventID: ""
        LatestIngestionSuccessTime: ""
        LatestIngestionErrorCode: ""
    GetImportResponse_ImportSource:
      allOf:
      - $ref: '#/components/schemas/ImportSource'
      - description: ' The source S3 bucket. '
      example:
        S3:
          S3BucketAccessRoleArn: ""
          S3BucketRegion: ""
          S3LocationUri: ""
    GetImportResponse_ImportStatistics:
      allOf:
      - $ref: '#/components/schemas/ImportStatistics'
      - description: " Provides statistics for the import. CloudTrail does not update\
          \ import statistics in real-time. Returned values for parameters such as\
          \ <code>EventsCompleted</code> may be lower than the actual value, because\
          \ CloudTrail updates statistics incrementally over the course of the import. "
      example:
        PrefixesCompleted: ""
        EventsCompleted: ""
        PrefixesFound: ""
        FilesCompleted: ""
        FailedEntries: ""
    GetQueryResultsResponse_QueryStatistics:
      allOf:
      - $ref: '#/components/schemas/QueryStatistics'
      - description: Shows the count of query results.
      example:
        ResultsCount: ""
        BytesScanned: ""
        TotalResultsCount: ""
    StartImportResponse_ImportSource:
      allOf:
      - $ref: '#/components/schemas/ImportSource'
      - description: ' The source S3 bucket for the import. '
      example:
        S3:
          S3BucketAccessRoleArn: ""
          S3BucketRegion: ""
          S3LocationUri: ""
    StartImportRequest_ImportSource:
      allOf:
      - $ref: '#/components/schemas/ImportSource'
      - description: ' The source S3 bucket for the import. Use this parameter for
          a new import. '
      example:
        S3:
          S3BucketAccessRoleArn: ""
          S3BucketRegion: ""
          S3LocationUri: ""
    StopImportResponse_ImportStatistics:
      allOf:
      - $ref: '#/components/schemas/ImportStatistics'
      - description: ' Returns information on the stopped import. '
      example:
        PrefixesCompleted: ""
        EventsCompleted: ""
        PrefixesFound: ""
        FilesCompleted: ""
        FailedEntries: ""
    ImportSource_S3:
      allOf:
      - $ref: '#/components/schemas/S3ImportSource'
      - description: ' The source S3 bucket. '
      example:
        S3BucketAccessRoleArn: ""
        S3BucketRegion: ""
        S3LocationUri: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

