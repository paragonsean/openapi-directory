/*
 * AWS CloudTrail
 * <fullname>CloudTrail</fullname> <p>This is the CloudTrail API Reference. It provides descriptions of actions, data types, common parameters, and common errors for CloudTrail.</p> <p>CloudTrail is a web service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. The recorded information includes the identity of the user, the start time of the Amazon Web Services API call, the source IP address, the request parameters, and the response elements returned by the service.</p> <note> <p>As an alternative to the API, you can use one of the Amazon Web Services SDKs, which consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide programmatic access to CloudTrail. For example, the SDKs handle cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools to Build on Amazon Web Services</a>.</p> </note> <p>See the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">CloudTrail User Guide</a> for information about the data that is included with each Amazon Web Services API call listed in the log files.</p>
 *
 * The version of the OpenAPI document: 2013-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Returns the objects or data listed below if successful. Otherwise, returns an error.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:14.442138-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateTrailResponse {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_S3_BUCKET_NAME = "S3BucketName";
  @SerializedName(SERIALIZED_NAME_S3_BUCKET_NAME)
  private String s3BucketName;

  public static final String SERIALIZED_NAME_S3_KEY_PREFIX = "S3KeyPrefix";
  @SerializedName(SERIALIZED_NAME_S3_KEY_PREFIX)
  private String s3KeyPrefix;

  public static final String SERIALIZED_NAME_SNS_TOPIC_NAME = "SnsTopicName";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC_NAME)
  private String snsTopicName;

  public static final String SERIALIZED_NAME_SNS_TOPIC_A_R_N = "SnsTopicARN";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC_A_R_N)
  private String snsTopicARN;

  public static final String SERIALIZED_NAME_INCLUDE_GLOBAL_SERVICE_EVENTS = "IncludeGlobalServiceEvents";
  @SerializedName(SERIALIZED_NAME_INCLUDE_GLOBAL_SERVICE_EVENTS)
  private Boolean includeGlobalServiceEvents;

  public static final String SERIALIZED_NAME_IS_MULTI_REGION_TRAIL = "IsMultiRegionTrail";
  @SerializedName(SERIALIZED_NAME_IS_MULTI_REGION_TRAIL)
  private Boolean isMultiRegionTrail;

  public static final String SERIALIZED_NAME_TRAIL_A_R_N = "TrailARN";
  @SerializedName(SERIALIZED_NAME_TRAIL_A_R_N)
  private String trailARN;

  public static final String SERIALIZED_NAME_LOG_FILE_VALIDATION_ENABLED = "LogFileValidationEnabled";
  @SerializedName(SERIALIZED_NAME_LOG_FILE_VALIDATION_ENABLED)
  private Boolean logFileValidationEnabled;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_LOGS_LOG_GROUP_ARN = "CloudWatchLogsLogGroupArn";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_LOGS_LOG_GROUP_ARN)
  private String cloudWatchLogsLogGroupArn;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_LOGS_ROLE_ARN = "CloudWatchLogsRoleArn";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_LOGS_ROLE_ARN)
  private String cloudWatchLogsRoleArn;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_IS_ORGANIZATION_TRAIL = "IsOrganizationTrail";
  @SerializedName(SERIALIZED_NAME_IS_ORGANIZATION_TRAIL)
  private Boolean isOrganizationTrail;

  public CreateTrailResponse() {
  }

  public CreateTrailResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateTrailResponse s3BucketName(String s3BucketName) {
    this.s3BucketName = s3BucketName;
    return this;
  }

  /**
   * Get s3BucketName
   * @return s3BucketName
   */
  @javax.annotation.Nullable
  public String getS3BucketName() {
    return s3BucketName;
  }

  public void setS3BucketName(String s3BucketName) {
    this.s3BucketName = s3BucketName;
  }


  public CreateTrailResponse s3KeyPrefix(String s3KeyPrefix) {
    this.s3KeyPrefix = s3KeyPrefix;
    return this;
  }

  /**
   * Get s3KeyPrefix
   * @return s3KeyPrefix
   */
  @javax.annotation.Nullable
  public String getS3KeyPrefix() {
    return s3KeyPrefix;
  }

  public void setS3KeyPrefix(String s3KeyPrefix) {
    this.s3KeyPrefix = s3KeyPrefix;
  }


  public CreateTrailResponse snsTopicName(String snsTopicName) {
    this.snsTopicName = snsTopicName;
    return this;
  }

  /**
   * Get snsTopicName
   * @return snsTopicName
   */
  @javax.annotation.Nullable
  public String getSnsTopicName() {
    return snsTopicName;
  }

  public void setSnsTopicName(String snsTopicName) {
    this.snsTopicName = snsTopicName;
  }


  public CreateTrailResponse snsTopicARN(String snsTopicARN) {
    this.snsTopicARN = snsTopicARN;
    return this;
  }

  /**
   * Get snsTopicARN
   * @return snsTopicARN
   */
  @javax.annotation.Nullable
  public String getSnsTopicARN() {
    return snsTopicARN;
  }

  public void setSnsTopicARN(String snsTopicARN) {
    this.snsTopicARN = snsTopicARN;
  }


  public CreateTrailResponse includeGlobalServiceEvents(Boolean includeGlobalServiceEvents) {
    this.includeGlobalServiceEvents = includeGlobalServiceEvents;
    return this;
  }

  /**
   * Get includeGlobalServiceEvents
   * @return includeGlobalServiceEvents
   */
  @javax.annotation.Nullable
  public Boolean getIncludeGlobalServiceEvents() {
    return includeGlobalServiceEvents;
  }

  public void setIncludeGlobalServiceEvents(Boolean includeGlobalServiceEvents) {
    this.includeGlobalServiceEvents = includeGlobalServiceEvents;
  }


  public CreateTrailResponse isMultiRegionTrail(Boolean isMultiRegionTrail) {
    this.isMultiRegionTrail = isMultiRegionTrail;
    return this;
  }

  /**
   * Get isMultiRegionTrail
   * @return isMultiRegionTrail
   */
  @javax.annotation.Nullable
  public Boolean getIsMultiRegionTrail() {
    return isMultiRegionTrail;
  }

  public void setIsMultiRegionTrail(Boolean isMultiRegionTrail) {
    this.isMultiRegionTrail = isMultiRegionTrail;
  }


  public CreateTrailResponse trailARN(String trailARN) {
    this.trailARN = trailARN;
    return this;
  }

  /**
   * Get trailARN
   * @return trailARN
   */
  @javax.annotation.Nullable
  public String getTrailARN() {
    return trailARN;
  }

  public void setTrailARN(String trailARN) {
    this.trailARN = trailARN;
  }


  public CreateTrailResponse logFileValidationEnabled(Boolean logFileValidationEnabled) {
    this.logFileValidationEnabled = logFileValidationEnabled;
    return this;
  }

  /**
   * Get logFileValidationEnabled
   * @return logFileValidationEnabled
   */
  @javax.annotation.Nullable
  public Boolean getLogFileValidationEnabled() {
    return logFileValidationEnabled;
  }

  public void setLogFileValidationEnabled(Boolean logFileValidationEnabled) {
    this.logFileValidationEnabled = logFileValidationEnabled;
  }


  public CreateTrailResponse cloudWatchLogsLogGroupArn(String cloudWatchLogsLogGroupArn) {
    this.cloudWatchLogsLogGroupArn = cloudWatchLogsLogGroupArn;
    return this;
  }

  /**
   * Get cloudWatchLogsLogGroupArn
   * @return cloudWatchLogsLogGroupArn
   */
  @javax.annotation.Nullable
  public String getCloudWatchLogsLogGroupArn() {
    return cloudWatchLogsLogGroupArn;
  }

  public void setCloudWatchLogsLogGroupArn(String cloudWatchLogsLogGroupArn) {
    this.cloudWatchLogsLogGroupArn = cloudWatchLogsLogGroupArn;
  }


  public CreateTrailResponse cloudWatchLogsRoleArn(String cloudWatchLogsRoleArn) {
    this.cloudWatchLogsRoleArn = cloudWatchLogsRoleArn;
    return this;
  }

  /**
   * Get cloudWatchLogsRoleArn
   * @return cloudWatchLogsRoleArn
   */
  @javax.annotation.Nullable
  public String getCloudWatchLogsRoleArn() {
    return cloudWatchLogsRoleArn;
  }

  public void setCloudWatchLogsRoleArn(String cloudWatchLogsRoleArn) {
    this.cloudWatchLogsRoleArn = cloudWatchLogsRoleArn;
  }


  public CreateTrailResponse kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public CreateTrailResponse isOrganizationTrail(Boolean isOrganizationTrail) {
    this.isOrganizationTrail = isOrganizationTrail;
    return this;
  }

  /**
   * Get isOrganizationTrail
   * @return isOrganizationTrail
   */
  @javax.annotation.Nullable
  public Boolean getIsOrganizationTrail() {
    return isOrganizationTrail;
  }

  public void setIsOrganizationTrail(Boolean isOrganizationTrail) {
    this.isOrganizationTrail = isOrganizationTrail;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTrailResponse createTrailResponse = (CreateTrailResponse) o;
    return Objects.equals(this.name, createTrailResponse.name) &&
        Objects.equals(this.s3BucketName, createTrailResponse.s3BucketName) &&
        Objects.equals(this.s3KeyPrefix, createTrailResponse.s3KeyPrefix) &&
        Objects.equals(this.snsTopicName, createTrailResponse.snsTopicName) &&
        Objects.equals(this.snsTopicARN, createTrailResponse.snsTopicARN) &&
        Objects.equals(this.includeGlobalServiceEvents, createTrailResponse.includeGlobalServiceEvents) &&
        Objects.equals(this.isMultiRegionTrail, createTrailResponse.isMultiRegionTrail) &&
        Objects.equals(this.trailARN, createTrailResponse.trailARN) &&
        Objects.equals(this.logFileValidationEnabled, createTrailResponse.logFileValidationEnabled) &&
        Objects.equals(this.cloudWatchLogsLogGroupArn, createTrailResponse.cloudWatchLogsLogGroupArn) &&
        Objects.equals(this.cloudWatchLogsRoleArn, createTrailResponse.cloudWatchLogsRoleArn) &&
        Objects.equals(this.kmsKeyId, createTrailResponse.kmsKeyId) &&
        Objects.equals(this.isOrganizationTrail, createTrailResponse.isOrganizationTrail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, s3BucketName, s3KeyPrefix, snsTopicName, snsTopicARN, includeGlobalServiceEvents, isMultiRegionTrail, trailARN, logFileValidationEnabled, cloudWatchLogsLogGroupArn, cloudWatchLogsRoleArn, kmsKeyId, isOrganizationTrail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTrailResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    s3BucketName: ").append(toIndentedString(s3BucketName)).append("\n");
    sb.append("    s3KeyPrefix: ").append(toIndentedString(s3KeyPrefix)).append("\n");
    sb.append("    snsTopicName: ").append(toIndentedString(snsTopicName)).append("\n");
    sb.append("    snsTopicARN: ").append(toIndentedString(snsTopicARN)).append("\n");
    sb.append("    includeGlobalServiceEvents: ").append(toIndentedString(includeGlobalServiceEvents)).append("\n");
    sb.append("    isMultiRegionTrail: ").append(toIndentedString(isMultiRegionTrail)).append("\n");
    sb.append("    trailARN: ").append(toIndentedString(trailARN)).append("\n");
    sb.append("    logFileValidationEnabled: ").append(toIndentedString(logFileValidationEnabled)).append("\n");
    sb.append("    cloudWatchLogsLogGroupArn: ").append(toIndentedString(cloudWatchLogsLogGroupArn)).append("\n");
    sb.append("    cloudWatchLogsRoleArn: ").append(toIndentedString(cloudWatchLogsRoleArn)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    isOrganizationTrail: ").append(toIndentedString(isOrganizationTrail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("S3BucketName");
    openapiFields.add("S3KeyPrefix");
    openapiFields.add("SnsTopicName");
    openapiFields.add("SnsTopicARN");
    openapiFields.add("IncludeGlobalServiceEvents");
    openapiFields.add("IsMultiRegionTrail");
    openapiFields.add("TrailARN");
    openapiFields.add("LogFileValidationEnabled");
    openapiFields.add("CloudWatchLogsLogGroupArn");
    openapiFields.add("CloudWatchLogsRoleArn");
    openapiFields.add("KmsKeyId");
    openapiFields.add("IsOrganizationTrail");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateTrailResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateTrailResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateTrailResponse is not found in the empty JSON string", CreateTrailResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateTrailResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateTrailResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `S3BucketName`
      if (jsonObj.get("S3BucketName") != null && !jsonObj.get("S3BucketName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("S3BucketName"));
      }
      // validate the optional field `S3KeyPrefix`
      if (jsonObj.get("S3KeyPrefix") != null && !jsonObj.get("S3KeyPrefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("S3KeyPrefix"));
      }
      // validate the optional field `SnsTopicName`
      if (jsonObj.get("SnsTopicName") != null && !jsonObj.get("SnsTopicName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnsTopicName"));
      }
      // validate the optional field `SnsTopicARN`
      if (jsonObj.get("SnsTopicARN") != null && !jsonObj.get("SnsTopicARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnsTopicARN"));
      }
      // validate the optional field `IncludeGlobalServiceEvents`
      if (jsonObj.get("IncludeGlobalServiceEvents") != null && !jsonObj.get("IncludeGlobalServiceEvents").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IncludeGlobalServiceEvents"));
      }
      // validate the optional field `IsMultiRegionTrail`
      if (jsonObj.get("IsMultiRegionTrail") != null && !jsonObj.get("IsMultiRegionTrail").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsMultiRegionTrail"));
      }
      // validate the optional field `TrailARN`
      if (jsonObj.get("TrailARN") != null && !jsonObj.get("TrailARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrailARN"));
      }
      // validate the optional field `LogFileValidationEnabled`
      if (jsonObj.get("LogFileValidationEnabled") != null && !jsonObj.get("LogFileValidationEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("LogFileValidationEnabled"));
      }
      // validate the optional field `CloudWatchLogsLogGroupArn`
      if (jsonObj.get("CloudWatchLogsLogGroupArn") != null && !jsonObj.get("CloudWatchLogsLogGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudWatchLogsLogGroupArn"));
      }
      // validate the optional field `CloudWatchLogsRoleArn`
      if (jsonObj.get("CloudWatchLogsRoleArn") != null && !jsonObj.get("CloudWatchLogsRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudWatchLogsRoleArn"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `IsOrganizationTrail`
      if (jsonObj.get("IsOrganizationTrail") != null && !jsonObj.get("IsOrganizationTrail").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsOrganizationTrail"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateTrailResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateTrailResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateTrailResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateTrailResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateTrailResponse>() {
           @Override
           public void write(JsonWriter out, CreateTrailResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateTrailResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateTrailResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateTrailResponse
   * @throws IOException if the JSON string is invalid with respect to CreateTrailResponse
   */
  public static CreateTrailResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateTrailResponse.class);
  }

  /**
   * Convert an instance of CreateTrailResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

