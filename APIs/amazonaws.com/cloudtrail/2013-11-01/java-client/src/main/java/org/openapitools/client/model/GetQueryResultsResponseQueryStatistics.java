/*
 * AWS CloudTrail
 * <fullname>CloudTrail</fullname> <p>This is the CloudTrail API Reference. It provides descriptions of actions, data types, common parameters, and common errors for CloudTrail.</p> <p>CloudTrail is a web service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. The recorded information includes the identity of the user, the start time of the Amazon Web Services API call, the source IP address, the request parameters, and the response elements returned by the service.</p> <note> <p>As an alternative to the API, you can use one of the Amazon Web Services SDKs, which consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide programmatic access to CloudTrail. For example, the SDKs handle cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools to Build on Amazon Web Services</a>.</p> </note> <p>See the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">CloudTrail User Guide</a> for information about the data that is included with each Amazon Web Services API call listed in the log files.</p>
 *
 * The version of the OpenAPI document: 2013-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetQueryResultsResponseQueryStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:14.442138-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetQueryResultsResponseQueryStatistics {
  public static final String SERIALIZED_NAME_RESULTS_COUNT = "ResultsCount";
  @SerializedName(SERIALIZED_NAME_RESULTS_COUNT)
  private Integer resultsCount;

  public static final String SERIALIZED_NAME_TOTAL_RESULTS_COUNT = "TotalResultsCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_RESULTS_COUNT)
  private Integer totalResultsCount;

  public static final String SERIALIZED_NAME_BYTES_SCANNED = "BytesScanned";
  @SerializedName(SERIALIZED_NAME_BYTES_SCANNED)
  private Integer bytesScanned;

  public GetQueryResultsResponseQueryStatistics() {
  }

  public GetQueryResultsResponseQueryStatistics resultsCount(Integer resultsCount) {
    this.resultsCount = resultsCount;
    return this;
  }

  /**
   * Get resultsCount
   * @return resultsCount
   */
  @javax.annotation.Nullable
  public Integer getResultsCount() {
    return resultsCount;
  }

  public void setResultsCount(Integer resultsCount) {
    this.resultsCount = resultsCount;
  }


  public GetQueryResultsResponseQueryStatistics totalResultsCount(Integer totalResultsCount) {
    this.totalResultsCount = totalResultsCount;
    return this;
  }

  /**
   * Get totalResultsCount
   * @return totalResultsCount
   */
  @javax.annotation.Nullable
  public Integer getTotalResultsCount() {
    return totalResultsCount;
  }

  public void setTotalResultsCount(Integer totalResultsCount) {
    this.totalResultsCount = totalResultsCount;
  }


  public GetQueryResultsResponseQueryStatistics bytesScanned(Integer bytesScanned) {
    this.bytesScanned = bytesScanned;
    return this;
  }

  /**
   * Get bytesScanned
   * @return bytesScanned
   */
  @javax.annotation.Nullable
  public Integer getBytesScanned() {
    return bytesScanned;
  }

  public void setBytesScanned(Integer bytesScanned) {
    this.bytesScanned = bytesScanned;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetQueryResultsResponseQueryStatistics getQueryResultsResponseQueryStatistics = (GetQueryResultsResponseQueryStatistics) o;
    return Objects.equals(this.resultsCount, getQueryResultsResponseQueryStatistics.resultsCount) &&
        Objects.equals(this.totalResultsCount, getQueryResultsResponseQueryStatistics.totalResultsCount) &&
        Objects.equals(this.bytesScanned, getQueryResultsResponseQueryStatistics.bytesScanned);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resultsCount, totalResultsCount, bytesScanned);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetQueryResultsResponseQueryStatistics {\n");
    sb.append("    resultsCount: ").append(toIndentedString(resultsCount)).append("\n");
    sb.append("    totalResultsCount: ").append(toIndentedString(totalResultsCount)).append("\n");
    sb.append("    bytesScanned: ").append(toIndentedString(bytesScanned)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ResultsCount");
    openapiFields.add("TotalResultsCount");
    openapiFields.add("BytesScanned");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetQueryResultsResponseQueryStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetQueryResultsResponseQueryStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetQueryResultsResponseQueryStatistics is not found in the empty JSON string", GetQueryResultsResponseQueryStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetQueryResultsResponseQueryStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetQueryResultsResponseQueryStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ResultsCount`
      if (jsonObj.get("ResultsCount") != null && !jsonObj.get("ResultsCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ResultsCount"));
      }
      // validate the optional field `TotalResultsCount`
      if (jsonObj.get("TotalResultsCount") != null && !jsonObj.get("TotalResultsCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalResultsCount"));
      }
      // validate the optional field `BytesScanned`
      if (jsonObj.get("BytesScanned") != null && !jsonObj.get("BytesScanned").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BytesScanned"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetQueryResultsResponseQueryStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetQueryResultsResponseQueryStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetQueryResultsResponseQueryStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetQueryResultsResponseQueryStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<GetQueryResultsResponseQueryStatistics>() {
           @Override
           public void write(JsonWriter out, GetQueryResultsResponseQueryStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetQueryResultsResponseQueryStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetQueryResultsResponseQueryStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetQueryResultsResponseQueryStatistics
   * @throws IOException if the JSON string is invalid with respect to GetQueryResultsResponseQueryStatistics
   */
  public static GetQueryResultsResponseQueryStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetQueryResultsResponseQueryStatistics.class);
  }

  /**
   * Convert an instance of GetQueryResultsResponseQueryStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

