# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.insight_type import InsightType
from openapi_server import util


class InsightSelector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, insight_type: InsightType=None):
        """InsightSelector - a model defined in OpenAPI

        :param insight_type: The insight_type of this InsightSelector.
        """
        self.openapi_types = {
            'insight_type': InsightType
        }

        self.attribute_map = {
            'insight_type': 'InsightType'
        }

        self._insight_type = insight_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsightSelector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InsightSelector of this InsightSelector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def insight_type(self):
        """Gets the insight_type of this InsightSelector.


        :return: The insight_type of this InsightSelector.
        :rtype: InsightType
        """
        return self._insight_type

    @insight_type.setter
    def insight_type(self, insight_type):
        """Sets the insight_type of this InsightSelector.


        :param insight_type: The insight_type of this InsightSelector.
        :type insight_type: InsightType
        """

        self._insight_type = insight_type
