# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Event(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_id: str=None, event_name: str=None, read_only: str=None, access_key_id: str=None, event_time: datetime=None, event_source: str=None, username: str=None, resources: List=None, cloud_trail_event: str=None):
        """Event - a model defined in OpenAPI

        :param event_id: The event_id of this Event.
        :param event_name: The event_name of this Event.
        :param read_only: The read_only of this Event.
        :param access_key_id: The access_key_id of this Event.
        :param event_time: The event_time of this Event.
        :param event_source: The event_source of this Event.
        :param username: The username of this Event.
        :param resources: The resources of this Event.
        :param cloud_trail_event: The cloud_trail_event of this Event.
        """
        self.openapi_types = {
            'event_id': str,
            'event_name': str,
            'read_only': str,
            'access_key_id': str,
            'event_time': datetime,
            'event_source': str,
            'username': str,
            'resources': List,
            'cloud_trail_event': str
        }

        self.attribute_map = {
            'event_id': 'EventId',
            'event_name': 'EventName',
            'read_only': 'ReadOnly',
            'access_key_id': 'AccessKeyId',
            'event_time': 'EventTime',
            'event_source': 'EventSource',
            'username': 'Username',
            'resources': 'Resources',
            'cloud_trail_event': 'CloudTrailEvent'
        }

        self._event_id = event_id
        self._event_name = event_name
        self._read_only = read_only
        self._access_key_id = access_key_id
        self._event_time = event_time
        self._event_source = event_source
        self._username = username
        self._resources = resources
        self._cloud_trail_event = cloud_trail_event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Event':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Event of this Event.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_id(self):
        """Gets the event_id of this Event.


        :return: The event_id of this Event.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this Event.


        :param event_id: The event_id of this Event.
        :type event_id: str
        """

        self._event_id = event_id

    @property
    def event_name(self):
        """Gets the event_name of this Event.


        :return: The event_name of this Event.
        :rtype: str
        """
        return self._event_name

    @event_name.setter
    def event_name(self, event_name):
        """Sets the event_name of this Event.


        :param event_name: The event_name of this Event.
        :type event_name: str
        """

        self._event_name = event_name

    @property
    def read_only(self):
        """Gets the read_only of this Event.


        :return: The read_only of this Event.
        :rtype: str
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only):
        """Sets the read_only of this Event.


        :param read_only: The read_only of this Event.
        :type read_only: str
        """

        self._read_only = read_only

    @property
    def access_key_id(self):
        """Gets the access_key_id of this Event.


        :return: The access_key_id of this Event.
        :rtype: str
        """
        return self._access_key_id

    @access_key_id.setter
    def access_key_id(self, access_key_id):
        """Sets the access_key_id of this Event.


        :param access_key_id: The access_key_id of this Event.
        :type access_key_id: str
        """

        self._access_key_id = access_key_id

    @property
    def event_time(self):
        """Gets the event_time of this Event.


        :return: The event_time of this Event.
        :rtype: datetime
        """
        return self._event_time

    @event_time.setter
    def event_time(self, event_time):
        """Sets the event_time of this Event.


        :param event_time: The event_time of this Event.
        :type event_time: datetime
        """

        self._event_time = event_time

    @property
    def event_source(self):
        """Gets the event_source of this Event.


        :return: The event_source of this Event.
        :rtype: str
        """
        return self._event_source

    @event_source.setter
    def event_source(self, event_source):
        """Sets the event_source of this Event.


        :param event_source: The event_source of this Event.
        :type event_source: str
        """

        self._event_source = event_source

    @property
    def username(self):
        """Gets the username of this Event.


        :return: The username of this Event.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this Event.


        :param username: The username of this Event.
        :type username: str
        """

        self._username = username

    @property
    def resources(self):
        """Gets the resources of this Event.


        :return: The resources of this Event.
        :rtype: List
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this Event.


        :param resources: The resources of this Event.
        :type resources: List
        """

        self._resources = resources

    @property
    def cloud_trail_event(self):
        """Gets the cloud_trail_event of this Event.


        :return: The cloud_trail_event of this Event.
        :rtype: str
        """
        return self._cloud_trail_event

    @cloud_trail_event.setter
    def cloud_trail_event(self, cloud_trail_event):
        """Sets the cloud_trail_event of this Event.


        :param cloud_trail_event: The cloud_trail_event of this Event.
        :type cloud_trail_event: str
        """

        self._cloud_trail_event = cloud_trail_event
