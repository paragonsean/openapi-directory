# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetChannelResponseSourceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apply_to_all_regions: bool=None, advanced_event_selectors: List=None):
        """GetChannelResponseSourceConfig - a model defined in OpenAPI

        :param apply_to_all_regions: The apply_to_all_regions of this GetChannelResponseSourceConfig.
        :param advanced_event_selectors: The advanced_event_selectors of this GetChannelResponseSourceConfig.
        """
        self.openapi_types = {
            'apply_to_all_regions': bool,
            'advanced_event_selectors': List
        }

        self.attribute_map = {
            'apply_to_all_regions': 'ApplyToAllRegions',
            'advanced_event_selectors': 'AdvancedEventSelectors'
        }

        self._apply_to_all_regions = apply_to_all_regions
        self._advanced_event_selectors = advanced_event_selectors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetChannelResponseSourceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetChannelResponse_SourceConfig of this GetChannelResponseSourceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apply_to_all_regions(self):
        """Gets the apply_to_all_regions of this GetChannelResponseSourceConfig.


        :return: The apply_to_all_regions of this GetChannelResponseSourceConfig.
        :rtype: bool
        """
        return self._apply_to_all_regions

    @apply_to_all_regions.setter
    def apply_to_all_regions(self, apply_to_all_regions):
        """Sets the apply_to_all_regions of this GetChannelResponseSourceConfig.


        :param apply_to_all_regions: The apply_to_all_regions of this GetChannelResponseSourceConfig.
        :type apply_to_all_regions: bool
        """

        self._apply_to_all_regions = apply_to_all_regions

    @property
    def advanced_event_selectors(self):
        """Gets the advanced_event_selectors of this GetChannelResponseSourceConfig.


        :return: The advanced_event_selectors of this GetChannelResponseSourceConfig.
        :rtype: List
        """
        return self._advanced_event_selectors

    @advanced_event_selectors.setter
    def advanced_event_selectors(self, advanced_event_selectors):
        """Sets the advanced_event_selectors of this GetChannelResponseSourceConfig.


        :param advanced_event_selectors: The advanced_event_selectors of this GetChannelResponseSourceConfig.
        :type advanced_event_selectors: List
        """

        self._advanced_event_selectors = advanced_event_selectors
