# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryStatisticsForDescribeQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, events_matched: int=None, events_scanned: int=None, bytes_scanned: int=None, execution_time_in_millis: int=None, creation_time: datetime=None):
        """QueryStatisticsForDescribeQuery - a model defined in OpenAPI

        :param events_matched: The events_matched of this QueryStatisticsForDescribeQuery.
        :param events_scanned: The events_scanned of this QueryStatisticsForDescribeQuery.
        :param bytes_scanned: The bytes_scanned of this QueryStatisticsForDescribeQuery.
        :param execution_time_in_millis: The execution_time_in_millis of this QueryStatisticsForDescribeQuery.
        :param creation_time: The creation_time of this QueryStatisticsForDescribeQuery.
        """
        self.openapi_types = {
            'events_matched': int,
            'events_scanned': int,
            'bytes_scanned': int,
            'execution_time_in_millis': int,
            'creation_time': datetime
        }

        self.attribute_map = {
            'events_matched': 'EventsMatched',
            'events_scanned': 'EventsScanned',
            'bytes_scanned': 'BytesScanned',
            'execution_time_in_millis': 'ExecutionTimeInMillis',
            'creation_time': 'CreationTime'
        }

        self._events_matched = events_matched
        self._events_scanned = events_scanned
        self._bytes_scanned = bytes_scanned
        self._execution_time_in_millis = execution_time_in_millis
        self._creation_time = creation_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryStatisticsForDescribeQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryStatisticsForDescribeQuery of this QueryStatisticsForDescribeQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def events_matched(self):
        """Gets the events_matched of this QueryStatisticsForDescribeQuery.


        :return: The events_matched of this QueryStatisticsForDescribeQuery.
        :rtype: int
        """
        return self._events_matched

    @events_matched.setter
    def events_matched(self, events_matched):
        """Sets the events_matched of this QueryStatisticsForDescribeQuery.


        :param events_matched: The events_matched of this QueryStatisticsForDescribeQuery.
        :type events_matched: int
        """

        self._events_matched = events_matched

    @property
    def events_scanned(self):
        """Gets the events_scanned of this QueryStatisticsForDescribeQuery.


        :return: The events_scanned of this QueryStatisticsForDescribeQuery.
        :rtype: int
        """
        return self._events_scanned

    @events_scanned.setter
    def events_scanned(self, events_scanned):
        """Sets the events_scanned of this QueryStatisticsForDescribeQuery.


        :param events_scanned: The events_scanned of this QueryStatisticsForDescribeQuery.
        :type events_scanned: int
        """

        self._events_scanned = events_scanned

    @property
    def bytes_scanned(self):
        """Gets the bytes_scanned of this QueryStatisticsForDescribeQuery.


        :return: The bytes_scanned of this QueryStatisticsForDescribeQuery.
        :rtype: int
        """
        return self._bytes_scanned

    @bytes_scanned.setter
    def bytes_scanned(self, bytes_scanned):
        """Sets the bytes_scanned of this QueryStatisticsForDescribeQuery.


        :param bytes_scanned: The bytes_scanned of this QueryStatisticsForDescribeQuery.
        :type bytes_scanned: int
        """

        self._bytes_scanned = bytes_scanned

    @property
    def execution_time_in_millis(self):
        """Gets the execution_time_in_millis of this QueryStatisticsForDescribeQuery.


        :return: The execution_time_in_millis of this QueryStatisticsForDescribeQuery.
        :rtype: int
        """
        return self._execution_time_in_millis

    @execution_time_in_millis.setter
    def execution_time_in_millis(self, execution_time_in_millis):
        """Sets the execution_time_in_millis of this QueryStatisticsForDescribeQuery.


        :param execution_time_in_millis: The execution_time_in_millis of this QueryStatisticsForDescribeQuery.
        :type execution_time_in_millis: int
        """

        self._execution_time_in_millis = execution_time_in_millis

    @property
    def creation_time(self):
        """Gets the creation_time of this QueryStatisticsForDescribeQuery.


        :return: The creation_time of this QueryStatisticsForDescribeQuery.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this QueryStatisticsForDescribeQuery.


        :param creation_time: The creation_time of this QueryStatisticsForDescribeQuery.
        :type creation_time: datetime
        """

        self._creation_time = creation_time
