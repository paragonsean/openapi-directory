# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetQueryResultsResponseQueryStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, results_count: int=None, total_results_count: int=None, bytes_scanned: int=None):
        """GetQueryResultsResponseQueryStatistics - a model defined in OpenAPI

        :param results_count: The results_count of this GetQueryResultsResponseQueryStatistics.
        :param total_results_count: The total_results_count of this GetQueryResultsResponseQueryStatistics.
        :param bytes_scanned: The bytes_scanned of this GetQueryResultsResponseQueryStatistics.
        """
        self.openapi_types = {
            'results_count': int,
            'total_results_count': int,
            'bytes_scanned': int
        }

        self.attribute_map = {
            'results_count': 'ResultsCount',
            'total_results_count': 'TotalResultsCount',
            'bytes_scanned': 'BytesScanned'
        }

        self._results_count = results_count
        self._total_results_count = total_results_count
        self._bytes_scanned = bytes_scanned

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetQueryResultsResponseQueryStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetQueryResultsResponse_QueryStatistics of this GetQueryResultsResponseQueryStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def results_count(self):
        """Gets the results_count of this GetQueryResultsResponseQueryStatistics.


        :return: The results_count of this GetQueryResultsResponseQueryStatistics.
        :rtype: int
        """
        return self._results_count

    @results_count.setter
    def results_count(self, results_count):
        """Sets the results_count of this GetQueryResultsResponseQueryStatistics.


        :param results_count: The results_count of this GetQueryResultsResponseQueryStatistics.
        :type results_count: int
        """

        self._results_count = results_count

    @property
    def total_results_count(self):
        """Gets the total_results_count of this GetQueryResultsResponseQueryStatistics.


        :return: The total_results_count of this GetQueryResultsResponseQueryStatistics.
        :rtype: int
        """
        return self._total_results_count

    @total_results_count.setter
    def total_results_count(self, total_results_count):
        """Sets the total_results_count of this GetQueryResultsResponseQueryStatistics.


        :param total_results_count: The total_results_count of this GetQueryResultsResponseQueryStatistics.
        :type total_results_count: int
        """

        self._total_results_count = total_results_count

    @property
    def bytes_scanned(self):
        """Gets the bytes_scanned of this GetQueryResultsResponseQueryStatistics.


        :return: The bytes_scanned of this GetQueryResultsResponseQueryStatistics.
        :rtype: int
        """
        return self._bytes_scanned

    @bytes_scanned.setter
    def bytes_scanned(self, bytes_scanned):
        """Sets the bytes_scanned of this GetQueryResultsResponseQueryStatistics.


        :param bytes_scanned: The bytes_scanned of this GetQueryResultsResponseQueryStatistics.
        :type bytes_scanned: int
        """

        self._bytes_scanned = bytes_scanned
