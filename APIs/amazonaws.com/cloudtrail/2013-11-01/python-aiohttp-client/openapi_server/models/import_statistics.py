# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prefixes_found: int=None, prefixes_completed: int=None, files_completed: int=None, events_completed: int=None, failed_entries: int=None):
        """ImportStatistics - a model defined in OpenAPI

        :param prefixes_found: The prefixes_found of this ImportStatistics.
        :param prefixes_completed: The prefixes_completed of this ImportStatistics.
        :param files_completed: The files_completed of this ImportStatistics.
        :param events_completed: The events_completed of this ImportStatistics.
        :param failed_entries: The failed_entries of this ImportStatistics.
        """
        self.openapi_types = {
            'prefixes_found': int,
            'prefixes_completed': int,
            'files_completed': int,
            'events_completed': int,
            'failed_entries': int
        }

        self.attribute_map = {
            'prefixes_found': 'PrefixesFound',
            'prefixes_completed': 'PrefixesCompleted',
            'files_completed': 'FilesCompleted',
            'events_completed': 'EventsCompleted',
            'failed_entries': 'FailedEntries'
        }

        self._prefixes_found = prefixes_found
        self._prefixes_completed = prefixes_completed
        self._files_completed = files_completed
        self._events_completed = events_completed
        self._failed_entries = failed_entries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportStatistics of this ImportStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prefixes_found(self):
        """Gets the prefixes_found of this ImportStatistics.


        :return: The prefixes_found of this ImportStatistics.
        :rtype: int
        """
        return self._prefixes_found

    @prefixes_found.setter
    def prefixes_found(self, prefixes_found):
        """Sets the prefixes_found of this ImportStatistics.


        :param prefixes_found: The prefixes_found of this ImportStatistics.
        :type prefixes_found: int
        """

        self._prefixes_found = prefixes_found

    @property
    def prefixes_completed(self):
        """Gets the prefixes_completed of this ImportStatistics.


        :return: The prefixes_completed of this ImportStatistics.
        :rtype: int
        """
        return self._prefixes_completed

    @prefixes_completed.setter
    def prefixes_completed(self, prefixes_completed):
        """Sets the prefixes_completed of this ImportStatistics.


        :param prefixes_completed: The prefixes_completed of this ImportStatistics.
        :type prefixes_completed: int
        """

        self._prefixes_completed = prefixes_completed

    @property
    def files_completed(self):
        """Gets the files_completed of this ImportStatistics.


        :return: The files_completed of this ImportStatistics.
        :rtype: int
        """
        return self._files_completed

    @files_completed.setter
    def files_completed(self, files_completed):
        """Sets the files_completed of this ImportStatistics.


        :param files_completed: The files_completed of this ImportStatistics.
        :type files_completed: int
        """

        self._files_completed = files_completed

    @property
    def events_completed(self):
        """Gets the events_completed of this ImportStatistics.


        :return: The events_completed of this ImportStatistics.
        :rtype: int
        """
        return self._events_completed

    @events_completed.setter
    def events_completed(self, events_completed):
        """Sets the events_completed of this ImportStatistics.


        :param events_completed: The events_completed of this ImportStatistics.
        :type events_completed: int
        """

        self._events_completed = events_completed

    @property
    def failed_entries(self):
        """Gets the failed_entries of this ImportStatistics.


        :return: The failed_entries of this ImportStatistics.
        :rtype: int
        """
        return self._failed_entries

    @failed_entries.setter
    def failed_entries(self, failed_entries):
        """Sets the failed_entries of this ImportStatistics.


        :param failed_entries: The failed_entries of this ImportStatistics.
        :type failed_entries: int
        """

        self._failed_entries = failed_entries
