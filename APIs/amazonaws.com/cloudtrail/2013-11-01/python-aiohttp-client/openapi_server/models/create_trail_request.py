# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag import Tag
from openapi_server import util


class CreateTrailRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, s3_bucket_name: str=None, s3_key_prefix: str=None, sns_topic_name: str=None, include_global_service_events: bool=None, is_multi_region_trail: bool=None, enable_log_file_validation: bool=None, cloud_watch_logs_log_group_arn: str=None, cloud_watch_logs_role_arn: str=None, kms_key_id: str=None, is_organization_trail: bool=None, tags_list: List[Tag]=None):
        """CreateTrailRequest - a model defined in OpenAPI

        :param name: The name of this CreateTrailRequest.
        :param s3_bucket_name: The s3_bucket_name of this CreateTrailRequest.
        :param s3_key_prefix: The s3_key_prefix of this CreateTrailRequest.
        :param sns_topic_name: The sns_topic_name of this CreateTrailRequest.
        :param include_global_service_events: The include_global_service_events of this CreateTrailRequest.
        :param is_multi_region_trail: The is_multi_region_trail of this CreateTrailRequest.
        :param enable_log_file_validation: The enable_log_file_validation of this CreateTrailRequest.
        :param cloud_watch_logs_log_group_arn: The cloud_watch_logs_log_group_arn of this CreateTrailRequest.
        :param cloud_watch_logs_role_arn: The cloud_watch_logs_role_arn of this CreateTrailRequest.
        :param kms_key_id: The kms_key_id of this CreateTrailRequest.
        :param is_organization_trail: The is_organization_trail of this CreateTrailRequest.
        :param tags_list: The tags_list of this CreateTrailRequest.
        """
        self.openapi_types = {
            'name': str,
            's3_bucket_name': str,
            's3_key_prefix': str,
            'sns_topic_name': str,
            'include_global_service_events': bool,
            'is_multi_region_trail': bool,
            'enable_log_file_validation': bool,
            'cloud_watch_logs_log_group_arn': str,
            'cloud_watch_logs_role_arn': str,
            'kms_key_id': str,
            'is_organization_trail': bool,
            'tags_list': List[Tag]
        }

        self.attribute_map = {
            'name': 'Name',
            's3_bucket_name': 'S3BucketName',
            's3_key_prefix': 'S3KeyPrefix',
            'sns_topic_name': 'SnsTopicName',
            'include_global_service_events': 'IncludeGlobalServiceEvents',
            'is_multi_region_trail': 'IsMultiRegionTrail',
            'enable_log_file_validation': 'EnableLogFileValidation',
            'cloud_watch_logs_log_group_arn': 'CloudWatchLogsLogGroupArn',
            'cloud_watch_logs_role_arn': 'CloudWatchLogsRoleArn',
            'kms_key_id': 'KmsKeyId',
            'is_organization_trail': 'IsOrganizationTrail',
            'tags_list': 'TagsList'
        }

        self._name = name
        self._s3_bucket_name = s3_bucket_name
        self._s3_key_prefix = s3_key_prefix
        self._sns_topic_name = sns_topic_name
        self._include_global_service_events = include_global_service_events
        self._is_multi_region_trail = is_multi_region_trail
        self._enable_log_file_validation = enable_log_file_validation
        self._cloud_watch_logs_log_group_arn = cloud_watch_logs_log_group_arn
        self._cloud_watch_logs_role_arn = cloud_watch_logs_role_arn
        self._kms_key_id = kms_key_id
        self._is_organization_trail = is_organization_trail
        self._tags_list = tags_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTrailRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTrailRequest of this CreateTrailRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateTrailRequest.


        :return: The name of this CreateTrailRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateTrailRequest.


        :param name: The name of this CreateTrailRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def s3_bucket_name(self):
        """Gets the s3_bucket_name of this CreateTrailRequest.


        :return: The s3_bucket_name of this CreateTrailRequest.
        :rtype: str
        """
        return self._s3_bucket_name

    @s3_bucket_name.setter
    def s3_bucket_name(self, s3_bucket_name):
        """Sets the s3_bucket_name of this CreateTrailRequest.


        :param s3_bucket_name: The s3_bucket_name of this CreateTrailRequest.
        :type s3_bucket_name: str
        """
        if s3_bucket_name is None:
            raise ValueError("Invalid value for `s3_bucket_name`, must not be `None`")

        self._s3_bucket_name = s3_bucket_name

    @property
    def s3_key_prefix(self):
        """Gets the s3_key_prefix of this CreateTrailRequest.


        :return: The s3_key_prefix of this CreateTrailRequest.
        :rtype: str
        """
        return self._s3_key_prefix

    @s3_key_prefix.setter
    def s3_key_prefix(self, s3_key_prefix):
        """Sets the s3_key_prefix of this CreateTrailRequest.


        :param s3_key_prefix: The s3_key_prefix of this CreateTrailRequest.
        :type s3_key_prefix: str
        """

        self._s3_key_prefix = s3_key_prefix

    @property
    def sns_topic_name(self):
        """Gets the sns_topic_name of this CreateTrailRequest.


        :return: The sns_topic_name of this CreateTrailRequest.
        :rtype: str
        """
        return self._sns_topic_name

    @sns_topic_name.setter
    def sns_topic_name(self, sns_topic_name):
        """Sets the sns_topic_name of this CreateTrailRequest.


        :param sns_topic_name: The sns_topic_name of this CreateTrailRequest.
        :type sns_topic_name: str
        """

        self._sns_topic_name = sns_topic_name

    @property
    def include_global_service_events(self):
        """Gets the include_global_service_events of this CreateTrailRequest.


        :return: The include_global_service_events of this CreateTrailRequest.
        :rtype: bool
        """
        return self._include_global_service_events

    @include_global_service_events.setter
    def include_global_service_events(self, include_global_service_events):
        """Sets the include_global_service_events of this CreateTrailRequest.


        :param include_global_service_events: The include_global_service_events of this CreateTrailRequest.
        :type include_global_service_events: bool
        """

        self._include_global_service_events = include_global_service_events

    @property
    def is_multi_region_trail(self):
        """Gets the is_multi_region_trail of this CreateTrailRequest.


        :return: The is_multi_region_trail of this CreateTrailRequest.
        :rtype: bool
        """
        return self._is_multi_region_trail

    @is_multi_region_trail.setter
    def is_multi_region_trail(self, is_multi_region_trail):
        """Sets the is_multi_region_trail of this CreateTrailRequest.


        :param is_multi_region_trail: The is_multi_region_trail of this CreateTrailRequest.
        :type is_multi_region_trail: bool
        """

        self._is_multi_region_trail = is_multi_region_trail

    @property
    def enable_log_file_validation(self):
        """Gets the enable_log_file_validation of this CreateTrailRequest.


        :return: The enable_log_file_validation of this CreateTrailRequest.
        :rtype: bool
        """
        return self._enable_log_file_validation

    @enable_log_file_validation.setter
    def enable_log_file_validation(self, enable_log_file_validation):
        """Sets the enable_log_file_validation of this CreateTrailRequest.


        :param enable_log_file_validation: The enable_log_file_validation of this CreateTrailRequest.
        :type enable_log_file_validation: bool
        """

        self._enable_log_file_validation = enable_log_file_validation

    @property
    def cloud_watch_logs_log_group_arn(self):
        """Gets the cloud_watch_logs_log_group_arn of this CreateTrailRequest.


        :return: The cloud_watch_logs_log_group_arn of this CreateTrailRequest.
        :rtype: str
        """
        return self._cloud_watch_logs_log_group_arn

    @cloud_watch_logs_log_group_arn.setter
    def cloud_watch_logs_log_group_arn(self, cloud_watch_logs_log_group_arn):
        """Sets the cloud_watch_logs_log_group_arn of this CreateTrailRequest.


        :param cloud_watch_logs_log_group_arn: The cloud_watch_logs_log_group_arn of this CreateTrailRequest.
        :type cloud_watch_logs_log_group_arn: str
        """

        self._cloud_watch_logs_log_group_arn = cloud_watch_logs_log_group_arn

    @property
    def cloud_watch_logs_role_arn(self):
        """Gets the cloud_watch_logs_role_arn of this CreateTrailRequest.


        :return: The cloud_watch_logs_role_arn of this CreateTrailRequest.
        :rtype: str
        """
        return self._cloud_watch_logs_role_arn

    @cloud_watch_logs_role_arn.setter
    def cloud_watch_logs_role_arn(self, cloud_watch_logs_role_arn):
        """Sets the cloud_watch_logs_role_arn of this CreateTrailRequest.


        :param cloud_watch_logs_role_arn: The cloud_watch_logs_role_arn of this CreateTrailRequest.
        :type cloud_watch_logs_role_arn: str
        """

        self._cloud_watch_logs_role_arn = cloud_watch_logs_role_arn

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this CreateTrailRequest.


        :return: The kms_key_id of this CreateTrailRequest.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this CreateTrailRequest.


        :param kms_key_id: The kms_key_id of this CreateTrailRequest.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def is_organization_trail(self):
        """Gets the is_organization_trail of this CreateTrailRequest.


        :return: The is_organization_trail of this CreateTrailRequest.
        :rtype: bool
        """
        return self._is_organization_trail

    @is_organization_trail.setter
    def is_organization_trail(self, is_organization_trail):
        """Sets the is_organization_trail of this CreateTrailRequest.


        :param is_organization_trail: The is_organization_trail of this CreateTrailRequest.
        :type is_organization_trail: bool
        """

        self._is_organization_trail = is_organization_trail

    @property
    def tags_list(self):
        """Gets the tags_list of this CreateTrailRequest.

        A list of tags.

        :return: The tags_list of this CreateTrailRequest.
        :rtype: List[Tag]
        """
        return self._tags_list

    @tags_list.setter
    def tags_list(self, tags_list):
        """Sets the tags_list of this CreateTrailRequest.

        A list of tags.

        :param tags_list: The tags_list of this CreateTrailRequest.
        :type tags_list: List[Tag]
        """
        if tags_list is not None and len(tags_list) > 200:
            raise ValueError("Invalid value for `tags_list`, number of items must be less than or equal to `200`")

        self._tags_list = tags_list
