# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel: str=None):
        """GetChannelRequest - a model defined in OpenAPI

        :param channel: The channel of this GetChannelRequest.
        """
        self.openapi_types = {
            'channel': str
        }

        self.attribute_map = {
            'channel': 'Channel'
        }

        self._channel = channel

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetChannelRequest of this GetChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self):
        """Gets the channel of this GetChannelRequest.


        :return: The channel of this GetChannelRequest.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this GetChannelRequest.


        :param channel: The channel of this GetChannelRequest.
        :type channel: str
        """
        if channel is None:
            raise ValueError("Invalid value for `channel`, must not be `None`")

        self._channel = channel
