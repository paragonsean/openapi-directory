# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_channel_response_ingestion_status import GetChannelResponseIngestionStatus
from openapi_server.models.get_channel_response_source_config import GetChannelResponseSourceConfig
from openapi_server import util


class GetChannelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_arn: str=None, name: str=None, source: str=None, source_config: GetChannelResponseSourceConfig=None, destinations: List=None, ingestion_status: GetChannelResponseIngestionStatus=None):
        """GetChannelResponse - a model defined in OpenAPI

        :param channel_arn: The channel_arn of this GetChannelResponse.
        :param name: The name of this GetChannelResponse.
        :param source: The source of this GetChannelResponse.
        :param source_config: The source_config of this GetChannelResponse.
        :param destinations: The destinations of this GetChannelResponse.
        :param ingestion_status: The ingestion_status of this GetChannelResponse.
        """
        self.openapi_types = {
            'channel_arn': str,
            'name': str,
            'source': str,
            'source_config': GetChannelResponseSourceConfig,
            'destinations': List,
            'ingestion_status': GetChannelResponseIngestionStatus
        }

        self.attribute_map = {
            'channel_arn': 'ChannelArn',
            'name': 'Name',
            'source': 'Source',
            'source_config': 'SourceConfig',
            'destinations': 'Destinations',
            'ingestion_status': 'IngestionStatus'
        }

        self._channel_arn = channel_arn
        self._name = name
        self._source = source
        self._source_config = source_config
        self._destinations = destinations
        self._ingestion_status = ingestion_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetChannelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetChannelResponse of this GetChannelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_arn(self):
        """Gets the channel_arn of this GetChannelResponse.


        :return: The channel_arn of this GetChannelResponse.
        :rtype: str
        """
        return self._channel_arn

    @channel_arn.setter
    def channel_arn(self, channel_arn):
        """Sets the channel_arn of this GetChannelResponse.


        :param channel_arn: The channel_arn of this GetChannelResponse.
        :type channel_arn: str
        """

        self._channel_arn = channel_arn

    @property
    def name(self):
        """Gets the name of this GetChannelResponse.


        :return: The name of this GetChannelResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetChannelResponse.


        :param name: The name of this GetChannelResponse.
        :type name: str
        """

        self._name = name

    @property
    def source(self):
        """Gets the source of this GetChannelResponse.


        :return: The source of this GetChannelResponse.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this GetChannelResponse.


        :param source: The source of this GetChannelResponse.
        :type source: str
        """

        self._source = source

    @property
    def source_config(self):
        """Gets the source_config of this GetChannelResponse.


        :return: The source_config of this GetChannelResponse.
        :rtype: GetChannelResponseSourceConfig
        """
        return self._source_config

    @source_config.setter
    def source_config(self, source_config):
        """Sets the source_config of this GetChannelResponse.


        :param source_config: The source_config of this GetChannelResponse.
        :type source_config: GetChannelResponseSourceConfig
        """

        self._source_config = source_config

    @property
    def destinations(self):
        """Gets the destinations of this GetChannelResponse.


        :return: The destinations of this GetChannelResponse.
        :rtype: List
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this GetChannelResponse.


        :param destinations: The destinations of this GetChannelResponse.
        :type destinations: List
        """

        self._destinations = destinations

    @property
    def ingestion_status(self):
        """Gets the ingestion_status of this GetChannelResponse.


        :return: The ingestion_status of this GetChannelResponse.
        :rtype: GetChannelResponseIngestionStatus
        """
        return self._ingestion_status

    @ingestion_status.setter
    def ingestion_status(self, ingestion_status):
        """Sets the ingestion_status of this GetChannelResponse.


        :param ingestion_status: The ingestion_status of this GetChannelResponse.
        :type ingestion_status: GetChannelResponseIngestionStatus
        """

        self._ingestion_status = ingestion_status
