# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_import_request_import_source import StartImportRequestImportSource
from openapi_server import util


class StartImportRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destinations: List=None, import_source: StartImportRequestImportSource=None, start_event_time: datetime=None, end_event_time: datetime=None, import_id: str=None):
        """StartImportRequest - a model defined in OpenAPI

        :param destinations: The destinations of this StartImportRequest.
        :param import_source: The import_source of this StartImportRequest.
        :param start_event_time: The start_event_time of this StartImportRequest.
        :param end_event_time: The end_event_time of this StartImportRequest.
        :param import_id: The import_id of this StartImportRequest.
        """
        self.openapi_types = {
            'destinations': List,
            'import_source': StartImportRequestImportSource,
            'start_event_time': datetime,
            'end_event_time': datetime,
            'import_id': str
        }

        self.attribute_map = {
            'destinations': 'Destinations',
            'import_source': 'ImportSource',
            'start_event_time': 'StartEventTime',
            'end_event_time': 'EndEventTime',
            'import_id': 'ImportId'
        }

        self._destinations = destinations
        self._import_source = import_source
        self._start_event_time = start_event_time
        self._end_event_time = end_event_time
        self._import_id = import_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartImportRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartImportRequest of this StartImportRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destinations(self):
        """Gets the destinations of this StartImportRequest.


        :return: The destinations of this StartImportRequest.
        :rtype: List
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this StartImportRequest.


        :param destinations: The destinations of this StartImportRequest.
        :type destinations: List
        """

        self._destinations = destinations

    @property
    def import_source(self):
        """Gets the import_source of this StartImportRequest.


        :return: The import_source of this StartImportRequest.
        :rtype: StartImportRequestImportSource
        """
        return self._import_source

    @import_source.setter
    def import_source(self, import_source):
        """Sets the import_source of this StartImportRequest.


        :param import_source: The import_source of this StartImportRequest.
        :type import_source: StartImportRequestImportSource
        """

        self._import_source = import_source

    @property
    def start_event_time(self):
        """Gets the start_event_time of this StartImportRequest.


        :return: The start_event_time of this StartImportRequest.
        :rtype: datetime
        """
        return self._start_event_time

    @start_event_time.setter
    def start_event_time(self, start_event_time):
        """Sets the start_event_time of this StartImportRequest.


        :param start_event_time: The start_event_time of this StartImportRequest.
        :type start_event_time: datetime
        """

        self._start_event_time = start_event_time

    @property
    def end_event_time(self):
        """Gets the end_event_time of this StartImportRequest.


        :return: The end_event_time of this StartImportRequest.
        :rtype: datetime
        """
        return self._end_event_time

    @end_event_time.setter
    def end_event_time(self, end_event_time):
        """Sets the end_event_time of this StartImportRequest.


        :param end_event_time: The end_event_time of this StartImportRequest.
        :type end_event_time: datetime
        """

        self._end_event_time = end_event_time

    @property
    def import_id(self):
        """Gets the import_id of this StartImportRequest.


        :return: The import_id of this StartImportRequest.
        :rtype: str
        """
        return self._import_id

    @import_id.setter
    def import_id(self, import_id):
        """Sets the import_id of this StartImportRequest.


        :param import_id: The import_id of this StartImportRequest.
        :type import_id: str
        """

        self._import_id = import_id
