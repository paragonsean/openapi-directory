# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_status import QueryStatus
from openapi_server import util


class ListQueriesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_data_store: str=None, next_token: str=None, max_results: int=None, start_time: datetime=None, end_time: datetime=None, query_status: QueryStatus=None):
        """ListQueriesRequest - a model defined in OpenAPI

        :param event_data_store: The event_data_store of this ListQueriesRequest.
        :param next_token: The next_token of this ListQueriesRequest.
        :param max_results: The max_results of this ListQueriesRequest.
        :param start_time: The start_time of this ListQueriesRequest.
        :param end_time: The end_time of this ListQueriesRequest.
        :param query_status: The query_status of this ListQueriesRequest.
        """
        self.openapi_types = {
            'event_data_store': str,
            'next_token': str,
            'max_results': int,
            'start_time': datetime,
            'end_time': datetime,
            'query_status': QueryStatus
        }

        self.attribute_map = {
            'event_data_store': 'EventDataStore',
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'query_status': 'QueryStatus'
        }

        self._event_data_store = event_data_store
        self._next_token = next_token
        self._max_results = max_results
        self._start_time = start_time
        self._end_time = end_time
        self._query_status = query_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListQueriesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListQueriesRequest of this ListQueriesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_data_store(self):
        """Gets the event_data_store of this ListQueriesRequest.


        :return: The event_data_store of this ListQueriesRequest.
        :rtype: str
        """
        return self._event_data_store

    @event_data_store.setter
    def event_data_store(self, event_data_store):
        """Sets the event_data_store of this ListQueriesRequest.


        :param event_data_store: The event_data_store of this ListQueriesRequest.
        :type event_data_store: str
        """
        if event_data_store is None:
            raise ValueError("Invalid value for `event_data_store`, must not be `None`")

        self._event_data_store = event_data_store

    @property
    def next_token(self):
        """Gets the next_token of this ListQueriesRequest.


        :return: The next_token of this ListQueriesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListQueriesRequest.


        :param next_token: The next_token of this ListQueriesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListQueriesRequest.


        :return: The max_results of this ListQueriesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListQueriesRequest.


        :param max_results: The max_results of this ListQueriesRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def start_time(self):
        """Gets the start_time of this ListQueriesRequest.


        :return: The start_time of this ListQueriesRequest.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ListQueriesRequest.


        :param start_time: The start_time of this ListQueriesRequest.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this ListQueriesRequest.


        :return: The end_time of this ListQueriesRequest.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ListQueriesRequest.


        :param end_time: The end_time of this ListQueriesRequest.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def query_status(self):
        """Gets the query_status of this ListQueriesRequest.


        :return: The query_status of this ListQueriesRequest.
        :rtype: QueryStatus
        """
        return self._query_status

    @query_status.setter
    def query_status(self, query_status):
        """Sets the query_status of this ListQueriesRequest.


        :param query_status: The query_status of this ListQueriesRequest.
        :type query_status: QueryStatus
        """

        self._query_status = query_status
