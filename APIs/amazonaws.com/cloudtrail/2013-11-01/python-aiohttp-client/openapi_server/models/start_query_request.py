# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartQueryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query_statement: str=None, delivery_s3_uri: str=None, query_alias: str=None, query_parameters: List=None):
        """StartQueryRequest - a model defined in OpenAPI

        :param query_statement: The query_statement of this StartQueryRequest.
        :param delivery_s3_uri: The delivery_s3_uri of this StartQueryRequest.
        :param query_alias: The query_alias of this StartQueryRequest.
        :param query_parameters: The query_parameters of this StartQueryRequest.
        """
        self.openapi_types = {
            'query_statement': str,
            'delivery_s3_uri': str,
            'query_alias': str,
            'query_parameters': List
        }

        self.attribute_map = {
            'query_statement': 'QueryStatement',
            'delivery_s3_uri': 'DeliveryS3Uri',
            'query_alias': 'QueryAlias',
            'query_parameters': 'QueryParameters'
        }

        self._query_statement = query_statement
        self._delivery_s3_uri = delivery_s3_uri
        self._query_alias = query_alias
        self._query_parameters = query_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartQueryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartQueryRequest of this StartQueryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_statement(self):
        """Gets the query_statement of this StartQueryRequest.


        :return: The query_statement of this StartQueryRequest.
        :rtype: str
        """
        return self._query_statement

    @query_statement.setter
    def query_statement(self, query_statement):
        """Sets the query_statement of this StartQueryRequest.


        :param query_statement: The query_statement of this StartQueryRequest.
        :type query_statement: str
        """

        self._query_statement = query_statement

    @property
    def delivery_s3_uri(self):
        """Gets the delivery_s3_uri of this StartQueryRequest.


        :return: The delivery_s3_uri of this StartQueryRequest.
        :rtype: str
        """
        return self._delivery_s3_uri

    @delivery_s3_uri.setter
    def delivery_s3_uri(self, delivery_s3_uri):
        """Sets the delivery_s3_uri of this StartQueryRequest.


        :param delivery_s3_uri: The delivery_s3_uri of this StartQueryRequest.
        :type delivery_s3_uri: str
        """

        self._delivery_s3_uri = delivery_s3_uri

    @property
    def query_alias(self):
        """Gets the query_alias of this StartQueryRequest.


        :return: The query_alias of this StartQueryRequest.
        :rtype: str
        """
        return self._query_alias

    @query_alias.setter
    def query_alias(self, query_alias):
        """Sets the query_alias of this StartQueryRequest.


        :param query_alias: The query_alias of this StartQueryRequest.
        :type query_alias: str
        """

        self._query_alias = query_alias

    @property
    def query_parameters(self):
        """Gets the query_parameters of this StartQueryRequest.


        :return: The query_parameters of this StartQueryRequest.
        :rtype: List
        """
        return self._query_parameters

    @query_parameters.setter
    def query_parameters(self, query_parameters):
        """Sets the query_parameters of this StartQueryRequest.


        :param query_parameters: The query_parameters of this StartQueryRequest.
        :type query_parameters: List
        """

        self._query_parameters = query_parameters
