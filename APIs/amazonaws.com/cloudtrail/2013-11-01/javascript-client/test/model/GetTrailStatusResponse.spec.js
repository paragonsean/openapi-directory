/**
 * AWS CloudTrail
 * <fullname>CloudTrail</fullname> <p>This is the CloudTrail API Reference. It provides descriptions of actions, data types, common parameters, and common errors for CloudTrail.</p> <p>CloudTrail is a web service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. The recorded information includes the identity of the user, the start time of the Amazon Web Services API call, the source IP address, the request parameters, and the response elements returned by the service.</p> <note> <p>As an alternative to the API, you can use one of the Amazon Web Services SDKs, which consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide programmatic access to CloudTrail. For example, the SDKs handle cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools to Build on Amazon Web Services</a>.</p> </note> <p>See the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">CloudTrail User Guide</a> for information about the data that is included with each Amazon Web Services API call listed in the log files.</p>
 *
 * The version of the OpenAPI document: 2013-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCloudTrail);
  }
}(this, function(expect, AwsCloudTrail) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCloudTrail.GetTrailStatusResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetTrailStatusResponse', function() {
    it('should create an instance of GetTrailStatusResponse', function() {
      // uncomment below and update the code to test GetTrailStatusResponse
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be.a(AwsCloudTrail.GetTrailStatusResponse);
    });

    it('should have the property isLogging (base name: "IsLogging")', function() {
      // uncomment below and update the code to test the property isLogging
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestDeliveryError (base name: "LatestDeliveryError")', function() {
      // uncomment below and update the code to test the property latestDeliveryError
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestNotificationError (base name: "LatestNotificationError")', function() {
      // uncomment below and update the code to test the property latestNotificationError
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestDeliveryTime (base name: "LatestDeliveryTime")', function() {
      // uncomment below and update the code to test the property latestDeliveryTime
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestNotificationTime (base name: "LatestNotificationTime")', function() {
      // uncomment below and update the code to test the property latestNotificationTime
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property startLoggingTime (base name: "StartLoggingTime")', function() {
      // uncomment below and update the code to test the property startLoggingTime
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property stopLoggingTime (base name: "StopLoggingTime")', function() {
      // uncomment below and update the code to test the property stopLoggingTime
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestCloudWatchLogsDeliveryError (base name: "LatestCloudWatchLogsDeliveryError")', function() {
      // uncomment below and update the code to test the property latestCloudWatchLogsDeliveryError
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestCloudWatchLogsDeliveryTime (base name: "LatestCloudWatchLogsDeliveryTime")', function() {
      // uncomment below and update the code to test the property latestCloudWatchLogsDeliveryTime
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestDigestDeliveryTime (base name: "LatestDigestDeliveryTime")', function() {
      // uncomment below and update the code to test the property latestDigestDeliveryTime
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestDigestDeliveryError (base name: "LatestDigestDeliveryError")', function() {
      // uncomment below and update the code to test the property latestDigestDeliveryError
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestDeliveryAttemptTime (base name: "LatestDeliveryAttemptTime")', function() {
      // uncomment below and update the code to test the property latestDeliveryAttemptTime
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestNotificationAttemptTime (base name: "LatestNotificationAttemptTime")', function() {
      // uncomment below and update the code to test the property latestNotificationAttemptTime
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestNotificationAttemptSucceeded (base name: "LatestNotificationAttemptSucceeded")', function() {
      // uncomment below and update the code to test the property latestNotificationAttemptSucceeded
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property latestDeliveryAttemptSucceeded (base name: "LatestDeliveryAttemptSucceeded")', function() {
      // uncomment below and update the code to test the property latestDeliveryAttemptSucceeded
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property timeLoggingStarted (base name: "TimeLoggingStarted")', function() {
      // uncomment below and update the code to test the property timeLoggingStarted
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

    it('should have the property timeLoggingStopped (base name: "TimeLoggingStopped")', function() {
      // uncomment below and update the code to test the property timeLoggingStopped
      //var instance = new AwsCloudTrail.GetTrailStatusResponse();
      //expect(instance).to.be();
    });

  });

}));
