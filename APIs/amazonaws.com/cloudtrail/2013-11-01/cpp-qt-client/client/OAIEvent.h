/**
 * AWS CloudTrail
 * <fullname>CloudTrail</fullname> <p>This is the CloudTrail API Reference. It provides descriptions of actions, data types, common parameters, and common errors for CloudTrail.</p> <p>CloudTrail is a web service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. The recorded information includes the identity of the user, the start time of the Amazon Web Services API call, the source IP address, the request parameters, and the response elements returned by the service.</p> <note> <p>As an alternative to the API, you can use one of the Amazon Web Services SDKs, which consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide programmatic access to CloudTrail. For example, the SDKs handle cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools to Build on Amazon Web Services</a>.</p> </note> <p>See the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">CloudTrail User Guide</a> for information about the data that is included with each Amazon Web Services API call listed in the log files.</p>
 *
 * The version of the OpenAPI document: 2013-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * Contains information about an event that was returned by a lookup request. The result includes a representation of a CloudTrail event.
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventId() const;
    void setEventId(const QString &event_id);
    bool is_event_id_Set() const;
    bool is_event_id_Valid() const;

    QString getEventName() const;
    void setEventName(const QString &event_name);
    bool is_event_name_Set() const;
    bool is_event_name_Valid() const;

    QString getReadOnly() const;
    void setReadOnly(const QString &read_only);
    bool is_read_only_Set() const;
    bool is_read_only_Valid() const;

    QString getAccessKeyId() const;
    void setAccessKeyId(const QString &access_key_id);
    bool is_access_key_id_Set() const;
    bool is_access_key_id_Valid() const;

    QDateTime getEventTime() const;
    void setEventTime(const QDateTime &event_time);
    bool is_event_time_Set() const;
    bool is_event_time_Valid() const;

    QString getEventSource() const;
    void setEventSource(const QString &event_source);
    bool is_event_source_Set() const;
    bool is_event_source_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QList getResources() const;
    void setResources(const QList &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    QString getCloudTrailEvent() const;
    void setCloudTrailEvent(const QString &cloud_trail_event);
    bool is_cloud_trail_event_Set() const;
    bool is_cloud_trail_event_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_id;
    bool m_event_id_isSet;
    bool m_event_id_isValid;

    QString m_event_name;
    bool m_event_name_isSet;
    bool m_event_name_isValid;

    QString m_read_only;
    bool m_read_only_isSet;
    bool m_read_only_isValid;

    QString m_access_key_id;
    bool m_access_key_id_isSet;
    bool m_access_key_id_isValid;

    QDateTime m_event_time;
    bool m_event_time_isSet;
    bool m_event_time_isValid;

    QString m_event_source;
    bool m_event_source_isSet;
    bool m_event_source_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QList m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    QString m_cloud_trail_event;
    bool m_cloud_trail_event_isSet;
    bool m_cloud_trail_event_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
