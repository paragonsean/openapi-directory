/**
 * AWS CloudTrail
 * <fullname>CloudTrail</fullname> <p>This is the CloudTrail API Reference. It provides descriptions of actions, data types, common parameters, and common errors for CloudTrail.</p> <p>CloudTrail is a web service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. The recorded information includes the identity of the user, the start time of the Amazon Web Services API call, the source IP address, the request parameters, and the response elements returned by the service.</p> <note> <p>As an alternative to the API, you can use one of the Amazon Web Services SDKs, which consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide programmatic access to CloudTrail. For example, the SDKs handle cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools to Build on Amazon Web Services</a>.</p> </note> <p>See the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">CloudTrail User Guide</a> for information about the data that is included with each Amazon Web Services API call listed in the log files.</p>
 *
 * The version of the OpenAPI document: 2013-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetChannelResponse.h
 *
 * 
 */

#ifndef OAIGetChannelResponse_H
#define OAIGetChannelResponse_H

#include <QJsonObject>

#include "OAIGetChannelResponse_IngestionStatus.h"
#include "OAIGetChannelResponse_SourceConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetChannelResponse_SourceConfig;
class OAIGetChannelResponse_IngestionStatus;

class OAIGetChannelResponse : public OAIObject {
public:
    OAIGetChannelResponse();
    OAIGetChannelResponse(QString json);
    ~OAIGetChannelResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChannelArn() const;
    void setChannelArn(const QString &channel_arn);
    bool is_channel_arn_Set() const;
    bool is_channel_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAIGetChannelResponse_SourceConfig getSourceConfig() const;
    void setSourceConfig(const OAIGetChannelResponse_SourceConfig &source_config);
    bool is_source_config_Set() const;
    bool is_source_config_Valid() const;

    QList getDestinations() const;
    void setDestinations(const QList &destinations);
    bool is_destinations_Set() const;
    bool is_destinations_Valid() const;

    OAIGetChannelResponse_IngestionStatus getIngestionStatus() const;
    void setIngestionStatus(const OAIGetChannelResponse_IngestionStatus &ingestion_status);
    bool is_ingestion_status_Set() const;
    bool is_ingestion_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_channel_arn;
    bool m_channel_arn_isSet;
    bool m_channel_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAIGetChannelResponse_SourceConfig m_source_config;
    bool m_source_config_isSet;
    bool m_source_config_isValid;

    QList m_destinations;
    bool m_destinations_isSet;
    bool m_destinations_isValid;

    OAIGetChannelResponse_IngestionStatus m_ingestion_status;
    bool m_ingestion_status_isSet;
    bool m_ingestion_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetChannelResponse)

#endif // OAIGetChannelResponse_H
