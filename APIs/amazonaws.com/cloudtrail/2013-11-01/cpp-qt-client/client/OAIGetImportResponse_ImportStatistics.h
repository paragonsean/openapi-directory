/**
 * AWS CloudTrail
 * <fullname>CloudTrail</fullname> <p>This is the CloudTrail API Reference. It provides descriptions of actions, data types, common parameters, and common errors for CloudTrail.</p> <p>CloudTrail is a web service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. The recorded information includes the identity of the user, the start time of the Amazon Web Services API call, the source IP address, the request parameters, and the response elements returned by the service.</p> <note> <p>As an alternative to the API, you can use one of the Amazon Web Services SDKs, which consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide programmatic access to CloudTrail. For example, the SDKs handle cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools to Build on Amazon Web Services</a>.</p> </note> <p>See the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">CloudTrail User Guide</a> for information about the data that is included with each Amazon Web Services API call listed in the log files.</p>
 *
 * The version of the OpenAPI document: 2013-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetImportResponse_ImportStatistics.h
 *
 * 
 */

#ifndef OAIGetImportResponse_ImportStatistics_H
#define OAIGetImportResponse_ImportStatistics_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetImportResponse_ImportStatistics : public OAIObject {
public:
    OAIGetImportResponse_ImportStatistics();
    OAIGetImportResponse_ImportStatistics(QString json);
    ~OAIGetImportResponse_ImportStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPrefixesFound() const;
    void setPrefixesFound(const qint32 &prefixes_found);
    bool is_prefixes_found_Set() const;
    bool is_prefixes_found_Valid() const;

    qint32 getPrefixesCompleted() const;
    void setPrefixesCompleted(const qint32 &prefixes_completed);
    bool is_prefixes_completed_Set() const;
    bool is_prefixes_completed_Valid() const;

    qint32 getFilesCompleted() const;
    void setFilesCompleted(const qint32 &files_completed);
    bool is_files_completed_Set() const;
    bool is_files_completed_Valid() const;

    qint32 getEventsCompleted() const;
    void setEventsCompleted(const qint32 &events_completed);
    bool is_events_completed_Set() const;
    bool is_events_completed_Valid() const;

    qint32 getFailedEntries() const;
    void setFailedEntries(const qint32 &failed_entries);
    bool is_failed_entries_Set() const;
    bool is_failed_entries_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_prefixes_found;
    bool m_prefixes_found_isSet;
    bool m_prefixes_found_isValid;

    qint32 m_prefixes_completed;
    bool m_prefixes_completed_isSet;
    bool m_prefixes_completed_isValid;

    qint32 m_files_completed;
    bool m_files_completed_isSet;
    bool m_files_completed_isValid;

    qint32 m_events_completed;
    bool m_events_completed_isSet;
    bool m_events_completed_isValid;

    qint32 m_failed_entries;
    bool m_failed_entries_isSet;
    bool m_failed_entries_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetImportResponse_ImportStatistics)

#endif // OAIGetImportResponse_ImportStatistics_H
