/**
 * AWS CloudTrail
 * <fullname>CloudTrail</fullname> <p>This is the CloudTrail API Reference. It provides descriptions of actions, data types, common parameters, and common errors for CloudTrail.</p> <p>CloudTrail is a web service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. The recorded information includes the identity of the user, the start time of the Amazon Web Services API call, the source IP address, the request parameters, and the response elements returned by the service.</p> <note> <p>As an alternative to the API, you can use one of the Amazon Web Services SDKs, which consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide programmatic access to CloudTrail. For example, the SDKs handle cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools to Build on Amazon Web Services</a>.</p> </note> <p>See the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">CloudTrail User Guide</a> for information about the data that is included with each Amazon Web Services API call listed in the log files.</p>
 *
 * The version of the OpenAPI document: 2013-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3ImportSource.h
 *
 *  The settings for the source S3 bucket. 
 */

#ifndef OAIS3ImportSource_H
#define OAIS3ImportSource_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIS3ImportSource : public OAIObject {
public:
    OAIS3ImportSource();
    OAIS3ImportSource(QString json);
    ~OAIS3ImportSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS3LocationUri() const;
    void setS3LocationUri(const QString &s3_location_uri);
    bool is_s3_location_uri_Set() const;
    bool is_s3_location_uri_Valid() const;

    QString getS3BucketRegion() const;
    void setS3BucketRegion(const QString &s3_bucket_region);
    bool is_s3_bucket_region_Set() const;
    bool is_s3_bucket_region_Valid() const;

    QString getS3BucketAccessRoleArn() const;
    void setS3BucketAccessRoleArn(const QString &s3_bucket_access_role_arn);
    bool is_s3_bucket_access_role_arn_Set() const;
    bool is_s3_bucket_access_role_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s3_location_uri;
    bool m_s3_location_uri_isSet;
    bool m_s3_location_uri_isValid;

    QString m_s3_bucket_region;
    bool m_s3_bucket_region_isSet;
    bool m_s3_bucket_region_isValid;

    QString m_s3_bucket_access_role_arn;
    bool m_s3_bucket_access_role_arn_isSet;
    bool m_s3_bucket_access_role_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3ImportSource)

#endif // OAIS3ImportSource_H
