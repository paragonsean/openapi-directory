/**
 * AWS CloudTrail
 * <fullname>CloudTrail</fullname> <p>This is the CloudTrail API Reference. It provides descriptions of actions, data types, common parameters, and common errors for CloudTrail.</p> <p>CloudTrail is a web service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. The recorded information includes the identity of the user, the start time of the Amazon Web Services API call, the source IP address, the request parameters, and the response elements returned by the service.</p> <note> <p>As an alternative to the API, you can use one of the Amazon Web Services SDKs, which consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide programmatic access to CloudTrail. For example, the SDKs handle cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools to Build on Amazon Web Services</a>.</p> </note> <p>See the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">CloudTrail User Guide</a> for information about the data that is included with each Amazon Web Services API call listed in the log files.</p>
 *
 * The version of the OpenAPI document: 2013-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTrailsRequest.h
 *
 * Returns information about the trail.
 */

#ifndef OAIDescribeTrailsRequest_H
#define OAIDescribeTrailsRequest_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeTrailsRequest : public OAIObject {
public:
    OAIDescribeTrailsRequest();
    OAIDescribeTrailsRequest(QString json);
    ~OAIDescribeTrailsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getTrailNameList() const;
    void setTrailNameList(const QList &trail_name_list);
    bool is_trail_name_list_Set() const;
    bool is_trail_name_list_Valid() const;

    bool getIncludeShadowTrails() const;
    void setIncludeShadowTrails(const bool &include_shadow_trails);
    bool is_include_shadow_trails_Set() const;
    bool is_include_shadow_trails_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_trail_name_list;
    bool m_trail_name_list_isSet;
    bool m_trail_name_list_isValid;

    bool m_include_shadow_trails;
    bool m_include_shadow_trails_isSet;
    bool m_include_shadow_trails_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTrailsRequest)

#endif // OAIDescribeTrailsRequest_H
