/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonImportExportSnowball);
  }
}(this, function(expect, AmazonImportExportSnowball) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonImportExportSnowball.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('cancelCluster', function() {
      it('should call cancelCluster successfully', function(done) {
        //uncomment below and update the code to test cancelCluster
        //instance.cancelCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelJob', function() {
      it('should call cancelJob successfully', function(done) {
        //uncomment below and update the code to test cancelJob
        //instance.cancelJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAddress', function() {
      it('should call createAddress successfully', function(done) {
        //uncomment below and update the code to test createAddress
        //instance.createAddress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCluster', function() {
      it('should call createCluster successfully', function(done) {
        //uncomment below and update the code to test createCluster
        //instance.createCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createJob', function() {
      it('should call createJob successfully', function(done) {
        //uncomment below and update the code to test createJob
        //instance.createJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLongTermPricing', function() {
      it('should call createLongTermPricing successfully', function(done) {
        //uncomment below and update the code to test createLongTermPricing
        //instance.createLongTermPricing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createReturnShippingLabel', function() {
      it('should call createReturnShippingLabel successfully', function(done) {
        //uncomment below and update the code to test createReturnShippingLabel
        //instance.createReturnShippingLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAddress', function() {
      it('should call describeAddress successfully', function(done) {
        //uncomment below and update the code to test describeAddress
        //instance.describeAddress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAddresses', function() {
      it('should call describeAddresses successfully', function(done) {
        //uncomment below and update the code to test describeAddresses
        //instance.describeAddresses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeCluster', function() {
      it('should call describeCluster successfully', function(done) {
        //uncomment below and update the code to test describeCluster
        //instance.describeCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeJob', function() {
      it('should call describeJob successfully', function(done) {
        //uncomment below and update the code to test describeJob
        //instance.describeJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeReturnShippingLabel', function() {
      it('should call describeReturnShippingLabel successfully', function(done) {
        //uncomment below and update the code to test describeReturnShippingLabel
        //instance.describeReturnShippingLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobManifest', function() {
      it('should call getJobManifest successfully', function(done) {
        //uncomment below and update the code to test getJobManifest
        //instance.getJobManifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobUnlockCode', function() {
      it('should call getJobUnlockCode successfully', function(done) {
        //uncomment below and update the code to test getJobUnlockCode
        //instance.getJobUnlockCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnowballUsage', function() {
      it('should call getSnowballUsage successfully', function(done) {
        //uncomment below and update the code to test getSnowballUsage
        //instance.getSnowballUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSoftwareUpdates', function() {
      it('should call getSoftwareUpdates successfully', function(done) {
        //uncomment below and update the code to test getSoftwareUpdates
        //instance.getSoftwareUpdates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterJobs', function() {
      it('should call listClusterJobs successfully', function(done) {
        //uncomment below and update the code to test listClusterJobs
        //instance.listClusterJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusters', function() {
      it('should call listClusters successfully', function(done) {
        //uncomment below and update the code to test listClusters
        //instance.listClusters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCompatibleImages', function() {
      it('should call listCompatibleImages successfully', function(done) {
        //uncomment below and update the code to test listCompatibleImages
        //instance.listCompatibleImages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listJobs', function() {
      it('should call listJobs successfully', function(done) {
        //uncomment below and update the code to test listJobs
        //instance.listJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLongTermPricing', function() {
      it('should call listLongTermPricing successfully', function(done) {
        //uncomment below and update the code to test listLongTermPricing
        //instance.listLongTermPricing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPickupLocations', function() {
      it('should call listPickupLocations successfully', function(done) {
        //uncomment below and update the code to test listPickupLocations
        //instance.listPickupLocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServiceVersions', function() {
      it('should call listServiceVersions successfully', function(done) {
        //uncomment below and update the code to test listServiceVersions
        //instance.listServiceVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCluster', function() {
      it('should call updateCluster successfully', function(done) {
        //uncomment below and update the code to test updateCluster
        //instance.updateCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJob', function() {
      it('should call updateJob successfully', function(done) {
        //uncomment below and update the code to test updateJob
        //instance.updateJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJobShipmentState', function() {
      it('should call updateJobShipmentState successfully', function(done) {
        //uncomment below and update the code to test updateJobShipmentState
        //instance.updateJobShipmentState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLongTermPricing', function() {
      it('should call updateLongTermPricing successfully', function(done) {
        //uncomment below and update the code to test updateLongTermPricing
        //instance.updateLongTermPricing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
