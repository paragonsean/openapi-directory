/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobLogs model module.
 * @module model/JobLogs
 * @version 2016-06-30
 */
class JobLogs {
    /**
     * Constructs a new <code>JobLogs</code>.
     * &lt;p&gt;Contains job logs. Whenever a Snow device is used to import data into or export data out of Amazon S3, you&#39;ll have the option of downloading a PDF job report. Job logs are returned as a part of the response syntax of the &lt;code&gt;DescribeJob&lt;/code&gt; action in the &lt;code&gt;JobMetadata&lt;/code&gt; data type. The job logs can be accessed for up to 60 minutes after this request has been made. To access any of the job logs after 60 minutes have passed, you&#39;ll have to make another call to the &lt;code&gt;DescribeJob&lt;/code&gt; action.&lt;/p&gt; &lt;p&gt;For import jobs, the PDF job report becomes available at the end of the import process. For export jobs, your job report typically becomes available while the Snow device for your job part is being delivered to you.&lt;/p&gt; &lt;p&gt;The job report provides you insight into the state of your Amazon S3 data transfer. The report includes details about your job or job part for your records.&lt;/p&gt; &lt;p&gt;For deeper visibility into the status of your transferred objects, you can look at the two associated logs: a success log and a failure log. The logs are saved in comma-separated value (CSV) format, and the name of each log includes the ID of the job or job part that the log describes.&lt;/p&gt;
     * @alias module:model/JobLogs
     */
    constructor() { 
        
        JobLogs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobLogs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobLogs} obj Optional instance to populate.
     * @return {module:model/JobLogs} The populated <code>JobLogs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobLogs();

            if (data.hasOwnProperty('JobCompletionReportURI')) {
                obj['JobCompletionReportURI'] = ApiClient.convertToType(data['JobCompletionReportURI'], 'String');
            }
            if (data.hasOwnProperty('JobSuccessLogURI')) {
                obj['JobSuccessLogURI'] = ApiClient.convertToType(data['JobSuccessLogURI'], 'String');
            }
            if (data.hasOwnProperty('JobFailureLogURI')) {
                obj['JobFailureLogURI'] = ApiClient.convertToType(data['JobFailureLogURI'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobLogs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobLogs</code>.
     */
    static validateJSON(data) {
        // validate the optional field `JobCompletionReportURI`
        if (data['JobCompletionReportURI']) { // data not null
          String.validateJSON(data['JobCompletionReportURI']);
        }
        // validate the optional field `JobSuccessLogURI`
        if (data['JobSuccessLogURI']) { // data not null
          String.validateJSON(data['JobSuccessLogURI']);
        }
        // validate the optional field `JobFailureLogURI`
        if (data['JobFailureLogURI']) { // data not null
          String.validateJSON(data['JobFailureLogURI']);
        }

        return true;
    }


}



/**
 * @member {String} JobCompletionReportURI
 */
JobLogs.prototype['JobCompletionReportURI'] = undefined;

/**
 * @member {String} JobSuccessLogURI
 */
JobLogs.prototype['JobSuccessLogURI'] = undefined;

/**
 * @member {String} JobFailureLogURI
 */
JobLogs.prototype['JobFailureLogURI'] = undefined;






export default JobLogs;

