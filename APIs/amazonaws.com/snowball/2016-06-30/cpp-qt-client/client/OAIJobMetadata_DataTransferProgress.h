/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobMetadata_DataTransferProgress.h
 *
 * 
 */

#ifndef OAIJobMetadata_DataTransferProgress_H
#define OAIJobMetadata_DataTransferProgress_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJobMetadata_DataTransferProgress : public OAIObject {
public:
    OAIJobMetadata_DataTransferProgress();
    OAIJobMetadata_DataTransferProgress(QString json);
    ~OAIJobMetadata_DataTransferProgress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBytesTransferred() const;
    void setBytesTransferred(const qint32 &bytes_transferred);
    bool is_bytes_transferred_Set() const;
    bool is_bytes_transferred_Valid() const;

    qint32 getObjectsTransferred() const;
    void setObjectsTransferred(const qint32 &objects_transferred);
    bool is_objects_transferred_Set() const;
    bool is_objects_transferred_Valid() const;

    qint32 getTotalBytes() const;
    void setTotalBytes(const qint32 &total_bytes);
    bool is_total_bytes_Set() const;
    bool is_total_bytes_Valid() const;

    qint32 getTotalObjects() const;
    void setTotalObjects(const qint32 &total_objects);
    bool is_total_objects_Set() const;
    bool is_total_objects_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_bytes_transferred;
    bool m_bytes_transferred_isSet;
    bool m_bytes_transferred_isValid;

    qint32 m_objects_transferred;
    bool m_objects_transferred_isSet;
    bool m_objects_transferred_isValid;

    qint32 m_total_bytes;
    bool m_total_bytes_isSet;
    bool m_total_bytes_isValid;

    qint32 m_total_objects;
    bool m_total_objects_isSet;
    bool m_total_objects_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobMetadata_DataTransferProgress)

#endif // OAIJobMetadata_DataTransferProgress_H
