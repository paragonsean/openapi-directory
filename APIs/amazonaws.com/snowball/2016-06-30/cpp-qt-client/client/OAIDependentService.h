/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDependentService.h
 *
 * The name and version of the service dependant on the requested service.
 */

#ifndef OAIDependentService_H
#define OAIDependentService_H

#include <QJsonObject>

#include "OAIDependentService_ServiceVersion.h"
#include "OAIServiceName.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDependentService_ServiceVersion;

class OAIDependentService : public OAIObject {
public:
    OAIDependentService();
    OAIDependentService(QString json);
    ~OAIDependentService() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIServiceName getServiceName() const;
    void setServiceName(const OAIServiceName &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    OAIDependentService_ServiceVersion getServiceVersion() const;
    void setServiceVersion(const OAIDependentService_ServiceVersion &service_version);
    bool is_service_version_Set() const;
    bool is_service_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIServiceName m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    OAIDependentService_ServiceVersion m_service_version;
    bool m_service_version_isSet;
    bool m_service_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDependentService)

#endif // OAIDependentService_H
