/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITGWOnDeviceServiceConfiguration.h
 *
 * An object that represents the metadata and configuration settings for the Storage Gateway service Tape Gateway type on an Amazon Web Services Snow Family device.
 */

#ifndef OAITGWOnDeviceServiceConfiguration_H
#define OAITGWOnDeviceServiceConfiguration_H

#include <QJsonObject>

#include "OAIStorageUnit.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITGWOnDeviceServiceConfiguration : public OAIObject {
public:
    OAITGWOnDeviceServiceConfiguration();
    OAITGWOnDeviceServiceConfiguration(QString json);
    ~OAITGWOnDeviceServiceConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getStorageLimit() const;
    void setStorageLimit(const qint32 &storage_limit);
    bool is_storage_limit_Set() const;
    bool is_storage_limit_Valid() const;

    OAIStorageUnit getStorageUnit() const;
    void setStorageUnit(const OAIStorageUnit &storage_unit);
    bool is_storage_unit_Set() const;
    bool is_storage_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_storage_limit;
    bool m_storage_limit_isSet;
    bool m_storage_limit_isValid;

    OAIStorageUnit m_storage_unit;
    bool m_storage_unit_isSet;
    bool m_storage_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITGWOnDeviceServiceConfiguration)

#endif // OAITGWOnDeviceServiceConfiguration_H
