/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateJobShipmentStateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateJobShipmentStateRequest::OAIUpdateJobShipmentStateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateJobShipmentStateRequest::OAIUpdateJobShipmentStateRequest() {
    this->initializeModel();
}

OAIUpdateJobShipmentStateRequest::~OAIUpdateJobShipmentStateRequest() {}

void OAIUpdateJobShipmentStateRequest::initializeModel() {

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_shipment_state_isSet = false;
    m_shipment_state_isValid = false;
}

void OAIUpdateJobShipmentStateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateJobShipmentStateRequest::fromJsonObject(QJsonObject json) {

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("JobId")]);
    m_job_id_isSet = !json[QString("JobId")].isNull() && m_job_id_isValid;

    m_shipment_state_isValid = ::OpenAPI::fromJsonValue(m_shipment_state, json[QString("ShipmentState")]);
    m_shipment_state_isSet = !json[QString("ShipmentState")].isNull() && m_shipment_state_isValid;
}

QString OAIUpdateJobShipmentStateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateJobShipmentStateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_job_id_isSet) {
        obj.insert(QString("JobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_shipment_state.isSet()) {
        obj.insert(QString("ShipmentState"), ::OpenAPI::toJsonValue(m_shipment_state));
    }
    return obj;
}

QString OAIUpdateJobShipmentStateRequest::getJobId() const {
    return m_job_id;
}
void OAIUpdateJobShipmentStateRequest::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIUpdateJobShipmentStateRequest::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIUpdateJobShipmentStateRequest::is_job_id_Valid() const{
    return m_job_id_isValid;
}

OAIShipmentState OAIUpdateJobShipmentStateRequest::getShipmentState() const {
    return m_shipment_state;
}
void OAIUpdateJobShipmentStateRequest::setShipmentState(const OAIShipmentState &shipment_state) {
    m_shipment_state = shipment_state;
    m_shipment_state_isSet = true;
}

bool OAIUpdateJobShipmentStateRequest::is_shipment_state_Set() const{
    return m_shipment_state_isSet;
}

bool OAIUpdateJobShipmentStateRequest::is_shipment_state_Valid() const{
    return m_shipment_state_isValid;
}

bool OAIUpdateJobShipmentStateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateJobShipmentStateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_job_id_isValid && m_shipment_state_isValid && true;
}

} // namespace OpenAPI
