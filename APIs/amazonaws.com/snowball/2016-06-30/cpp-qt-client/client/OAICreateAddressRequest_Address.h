/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAddressRequest_Address.h
 *
 * 
 */

#ifndef OAICreateAddressRequest_Address_H
#define OAICreateAddressRequest_Address_H

#include <QJsonObject>

#include "OAIAddressType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateAddressRequest_Address : public OAIObject {
public:
    OAICreateAddressRequest_Address();
    OAICreateAddressRequest_Address(QString json);
    ~OAICreateAddressRequest_Address() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddressId() const;
    void setAddressId(const QString &address_id);
    bool is_address_id_Set() const;
    bool is_address_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QString getStreet1() const;
    void setStreet1(const QString &street1);
    bool is_street1_Set() const;
    bool is_street1_Valid() const;

    QString getStreet2() const;
    void setStreet2(const QString &street2);
    bool is_street2_Set() const;
    bool is_street2_Valid() const;

    QString getStreet3() const;
    void setStreet3(const QString &street3);
    bool is_street3_Set() const;
    bool is_street3_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getStateOrProvince() const;
    void setStateOrProvince(const QString &state_or_province);
    bool is_state_or_province_Set() const;
    bool is_state_or_province_Valid() const;

    QString getPrefectureOrDistrict() const;
    void setPrefectureOrDistrict(const QString &prefecture_or_district);
    bool is_prefecture_or_district_Set() const;
    bool is_prefecture_or_district_Valid() const;

    QString getLandmark() const;
    void setLandmark(const QString &landmark);
    bool is_landmark_Set() const;
    bool is_landmark_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    bool getIsRestricted() const;
    void setIsRestricted(const bool &is_restricted);
    bool is_is_restricted_Set() const;
    bool is_is_restricted_Valid() const;

    OAIAddressType getType() const;
    void setType(const OAIAddressType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address_id;
    bool m_address_id_isSet;
    bool m_address_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QString m_street1;
    bool m_street1_isSet;
    bool m_street1_isValid;

    QString m_street2;
    bool m_street2_isSet;
    bool m_street2_isValid;

    QString m_street3;
    bool m_street3_isSet;
    bool m_street3_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_state_or_province;
    bool m_state_or_province_isSet;
    bool m_state_or_province_isValid;

    QString m_prefecture_or_district;
    bool m_prefecture_or_district_isSet;
    bool m_prefecture_or_district_isValid;

    QString m_landmark;
    bool m_landmark_isSet;
    bool m_landmark_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    bool m_is_restricted;
    bool m_is_restricted_isSet;
    bool m_is_restricted_isValid;

    OAIAddressType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAddressRequest_Address)

#endif // OAICreateAddressRequest_Address_H
