/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITargetOnDeviceService.h
 *
 * An object that represents the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family supports Amazon S3 and NFS (Network File System).
 */

#ifndef OAITargetOnDeviceService_H
#define OAITargetOnDeviceService_H

#include <QJsonObject>

#include "OAIDeviceServiceName.h"
#include "OAITransferOption.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITargetOnDeviceService : public OAIObject {
public:
    OAITargetOnDeviceService();
    OAITargetOnDeviceService(QString json);
    ~OAITargetOnDeviceService() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDeviceServiceName getServiceName() const;
    void setServiceName(const OAIDeviceServiceName &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    OAITransferOption getTransferOption() const;
    void setTransferOption(const OAITransferOption &transfer_option);
    bool is_transfer_option_Set() const;
    bool is_transfer_option_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDeviceServiceName m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    OAITransferOption m_transfer_option;
    bool m_transfer_option_isSet;
    bool m_transfer_option_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITargetOnDeviceService)

#endif // OAITargetOnDeviceService_H
