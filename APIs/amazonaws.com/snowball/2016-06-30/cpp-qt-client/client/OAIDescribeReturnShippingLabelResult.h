/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeReturnShippingLabelResult.h
 *
 * 
 */

#ifndef OAIDescribeReturnShippingLabelResult_H
#define OAIDescribeReturnShippingLabelResult_H

#include <QJsonObject>

#include "OAIShippingLabelStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeReturnShippingLabelResult : public OAIObject {
public:
    OAIDescribeReturnShippingLabelResult();
    OAIDescribeReturnShippingLabelResult(QString json);
    ~OAIDescribeReturnShippingLabelResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIShippingLabelStatus getStatus() const;
    void setStatus(const OAIShippingLabelStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QString getReturnShippingLabelUri() const;
    void setReturnShippingLabelUri(const QString &return_shipping_label_uri);
    bool is_return_shipping_label_uri_Set() const;
    bool is_return_shipping_label_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIShippingLabelStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QString m_return_shipping_label_uri;
    bool m_return_shipping_label_uri_isSet;
    bool m_return_shipping_label_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeReturnShippingLabelResult)

#endif // OAIDescribeReturnShippingLabelResult_H
