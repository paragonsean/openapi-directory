/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateReturnShippingLabelRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateReturnShippingLabelRequest::OAICreateReturnShippingLabelRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateReturnShippingLabelRequest::OAICreateReturnShippingLabelRequest() {
    this->initializeModel();
}

OAICreateReturnShippingLabelRequest::~OAICreateReturnShippingLabelRequest() {}

void OAICreateReturnShippingLabelRequest::initializeModel() {

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_shipping_option_isSet = false;
    m_shipping_option_isValid = false;
}

void OAICreateReturnShippingLabelRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateReturnShippingLabelRequest::fromJsonObject(QJsonObject json) {

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("JobId")]);
    m_job_id_isSet = !json[QString("JobId")].isNull() && m_job_id_isValid;

    m_shipping_option_isValid = ::OpenAPI::fromJsonValue(m_shipping_option, json[QString("ShippingOption")]);
    m_shipping_option_isSet = !json[QString("ShippingOption")].isNull() && m_shipping_option_isValid;
}

QString OAICreateReturnShippingLabelRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateReturnShippingLabelRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_job_id_isSet) {
        obj.insert(QString("JobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_shipping_option.isSet()) {
        obj.insert(QString("ShippingOption"), ::OpenAPI::toJsonValue(m_shipping_option));
    }
    return obj;
}

QString OAICreateReturnShippingLabelRequest::getJobId() const {
    return m_job_id;
}
void OAICreateReturnShippingLabelRequest::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAICreateReturnShippingLabelRequest::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAICreateReturnShippingLabelRequest::is_job_id_Valid() const{
    return m_job_id_isValid;
}

OAIShippingOption OAICreateReturnShippingLabelRequest::getShippingOption() const {
    return m_shipping_option;
}
void OAICreateReturnShippingLabelRequest::setShippingOption(const OAIShippingOption &shipping_option) {
    m_shipping_option = shipping_option;
    m_shipping_option_isSet = true;
}

bool OAICreateReturnShippingLabelRequest::is_shipping_option_Set() const{
    return m_shipping_option_isSet;
}

bool OAICreateReturnShippingLabelRequest::is_shipping_option_Valid() const{
    return m_shipping_option_isValid;
}

bool OAICreateReturnShippingLabelRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_option.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateReturnShippingLabelRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_job_id_isValid && true;
}

} // namespace OpenAPI
