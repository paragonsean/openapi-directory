/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterListEntry.h
 *
 * Contains a cluster&#39;s state, a cluster&#39;s ID, and other important information.
 */

#ifndef OAIClusterListEntry_H
#define OAIClusterListEntry_H

#include <QJsonObject>

#include "OAIClusterState.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClusterListEntry : public OAIObject {
public:
    OAIClusterListEntry();
    OAIClusterListEntry(QString json);
    ~OAIClusterListEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterId() const;
    void setClusterId(const QString &cluster_id);
    bool is_cluster_id_Set() const;
    bool is_cluster_id_Valid() const;

    OAIClusterState getClusterState() const;
    void setClusterState(const OAIClusterState &cluster_state);
    bool is_cluster_state_Set() const;
    bool is_cluster_state_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_id;
    bool m_cluster_id_isSet;
    bool m_cluster_id_isValid;

    OAIClusterState m_cluster_state;
    bool m_cluster_state_isSet;
    bool m_cluster_state_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterListEntry)

#endif // OAIClusterListEntry_H
