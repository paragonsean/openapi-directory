/**
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobMetadata_Notification.h
 *
 * 
 */

#ifndef OAIJobMetadata_Notification_H
#define OAIJobMetadata_Notification_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJobMetadata_Notification : public OAIObject {
public:
    OAIJobMetadata_Notification();
    OAIJobMetadata_Notification(QString json);
    ~OAIJobMetadata_Notification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSnsTopicArn() const;
    void setSnsTopicArn(const QString &sns_topic_arn);
    bool is_sns_topic_arn_Set() const;
    bool is_sns_topic_arn_Valid() const;

    QList getJobStatesToNotify() const;
    void setJobStatesToNotify(const QList &job_states_to_notify);
    bool is_job_states_to_notify_Set() const;
    bool is_job_states_to_notify_Valid() const;

    bool getNotifyAll() const;
    void setNotifyAll(const bool &notify_all);
    bool is_notify_all_Set() const;
    bool is_notify_all_Valid() const;

    QString getDevicePickupSnsTopicArn() const;
    void setDevicePickupSnsTopicArn(const QString &device_pickup_sns_topic_arn);
    bool is_device_pickup_sns_topic_arn_Set() const;
    bool is_device_pickup_sns_topic_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_sns_topic_arn;
    bool m_sns_topic_arn_isSet;
    bool m_sns_topic_arn_isValid;

    QList m_job_states_to_notify;
    bool m_job_states_to_notify_isSet;
    bool m_job_states_to_notify_isValid;

    bool m_notify_all;
    bool m_notify_all_isSet;
    bool m_notify_all_isValid;

    QString m_device_pickup_sns_topic_arn;
    bool m_device_pickup_sns_topic_arn_isSet;
    bool m_device_pickup_sns_topic_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobMetadata_Notification)

#endif // OAIJobMetadata_Notification_H
