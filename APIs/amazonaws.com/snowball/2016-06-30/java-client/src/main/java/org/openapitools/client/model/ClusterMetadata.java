/*
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ClusterMetadataOnDeviceServiceConfiguration;
import org.openapitools.client.model.ClusterMetadataResources;
import org.openapitools.client.model.ClusterState;
import org.openapitools.client.model.CreateClusterRequestNotification;
import org.openapitools.client.model.CreateClusterRequestTaxDocuments;
import org.openapitools.client.model.JobType;
import org.openapitools.client.model.ShippingOption;
import org.openapitools.client.model.SnowballType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains metadata about a specific cluster.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:55.026961-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ClusterMetadata {
  public static final String SERIALIZED_NAME_CLUSTER_ID = "ClusterId";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ID)
  private String clusterId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_KMS_KEY_A_R_N = "KmsKeyARN";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_A_R_N)
  private String kmsKeyARN;

  public static final String SERIALIZED_NAME_ROLE_A_R_N = "RoleARN";
  @SerializedName(SERIALIZED_NAME_ROLE_A_R_N)
  private String roleARN;

  public static final String SERIALIZED_NAME_CLUSTER_STATE = "ClusterState";
  @SerializedName(SERIALIZED_NAME_CLUSTER_STATE)
  private ClusterState clusterState;

  public static final String SERIALIZED_NAME_JOB_TYPE = "JobType";
  @SerializedName(SERIALIZED_NAME_JOB_TYPE)
  private JobType jobType;

  public static final String SERIALIZED_NAME_SNOWBALL_TYPE = "SnowballType";
  @SerializedName(SERIALIZED_NAME_SNOWBALL_TYPE)
  private SnowballType snowballType;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_RESOURCES = "Resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private ClusterMetadataResources resources;

  public static final String SERIALIZED_NAME_ADDRESS_ID = "AddressId";
  @SerializedName(SERIALIZED_NAME_ADDRESS_ID)
  private String addressId;

  public static final String SERIALIZED_NAME_SHIPPING_OPTION = "ShippingOption";
  @SerializedName(SERIALIZED_NAME_SHIPPING_OPTION)
  private ShippingOption shippingOption;

  public static final String SERIALIZED_NAME_NOTIFICATION = "Notification";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION)
  private CreateClusterRequestNotification notification;

  public static final String SERIALIZED_NAME_FORWARDING_ADDRESS_ID = "ForwardingAddressId";
  @SerializedName(SERIALIZED_NAME_FORWARDING_ADDRESS_ID)
  private String forwardingAddressId;

  public static final String SERIALIZED_NAME_TAX_DOCUMENTS = "TaxDocuments";
  @SerializedName(SERIALIZED_NAME_TAX_DOCUMENTS)
  private CreateClusterRequestTaxDocuments taxDocuments;

  public static final String SERIALIZED_NAME_ON_DEVICE_SERVICE_CONFIGURATION = "OnDeviceServiceConfiguration";
  @SerializedName(SERIALIZED_NAME_ON_DEVICE_SERVICE_CONFIGURATION)
  private ClusterMetadataOnDeviceServiceConfiguration onDeviceServiceConfiguration;

  public ClusterMetadata() {
  }

  public ClusterMetadata clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

  /**
   * Get clusterId
   * @return clusterId
   */
  @javax.annotation.Nullable
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }


  public ClusterMetadata description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ClusterMetadata kmsKeyARN(String kmsKeyARN) {
    this.kmsKeyARN = kmsKeyARN;
    return this;
  }

  /**
   * Get kmsKeyARN
   * @return kmsKeyARN
   */
  @javax.annotation.Nullable
  public String getKmsKeyARN() {
    return kmsKeyARN;
  }

  public void setKmsKeyARN(String kmsKeyARN) {
    this.kmsKeyARN = kmsKeyARN;
  }


  public ClusterMetadata roleARN(String roleARN) {
    this.roleARN = roleARN;
    return this;
  }

  /**
   * Get roleARN
   * @return roleARN
   */
  @javax.annotation.Nullable
  public String getRoleARN() {
    return roleARN;
  }

  public void setRoleARN(String roleARN) {
    this.roleARN = roleARN;
  }


  public ClusterMetadata clusterState(ClusterState clusterState) {
    this.clusterState = clusterState;
    return this;
  }

  /**
   * Get clusterState
   * @return clusterState
   */
  @javax.annotation.Nullable
  public ClusterState getClusterState() {
    return clusterState;
  }

  public void setClusterState(ClusterState clusterState) {
    this.clusterState = clusterState;
  }


  public ClusterMetadata jobType(JobType jobType) {
    this.jobType = jobType;
    return this;
  }

  /**
   * Get jobType
   * @return jobType
   */
  @javax.annotation.Nullable
  public JobType getJobType() {
    return jobType;
  }

  public void setJobType(JobType jobType) {
    this.jobType = jobType;
  }


  public ClusterMetadata snowballType(SnowballType snowballType) {
    this.snowballType = snowballType;
    return this;
  }

  /**
   * Get snowballType
   * @return snowballType
   */
  @javax.annotation.Nullable
  public SnowballType getSnowballType() {
    return snowballType;
  }

  public void setSnowballType(SnowballType snowballType) {
    this.snowballType = snowballType;
  }


  public ClusterMetadata creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public ClusterMetadata resources(ClusterMetadataResources resources) {
    this.resources = resources;
    return this;
  }

  /**
   * Get resources
   * @return resources
   */
  @javax.annotation.Nullable
  public ClusterMetadataResources getResources() {
    return resources;
  }

  public void setResources(ClusterMetadataResources resources) {
    this.resources = resources;
  }


  public ClusterMetadata addressId(String addressId) {
    this.addressId = addressId;
    return this;
  }

  /**
   * Get addressId
   * @return addressId
   */
  @javax.annotation.Nullable
  public String getAddressId() {
    return addressId;
  }

  public void setAddressId(String addressId) {
    this.addressId = addressId;
  }


  public ClusterMetadata shippingOption(ShippingOption shippingOption) {
    this.shippingOption = shippingOption;
    return this;
  }

  /**
   * Get shippingOption
   * @return shippingOption
   */
  @javax.annotation.Nullable
  public ShippingOption getShippingOption() {
    return shippingOption;
  }

  public void setShippingOption(ShippingOption shippingOption) {
    this.shippingOption = shippingOption;
  }


  public ClusterMetadata notification(CreateClusterRequestNotification notification) {
    this.notification = notification;
    return this;
  }

  /**
   * Get notification
   * @return notification
   */
  @javax.annotation.Nullable
  public CreateClusterRequestNotification getNotification() {
    return notification;
  }

  public void setNotification(CreateClusterRequestNotification notification) {
    this.notification = notification;
  }


  public ClusterMetadata forwardingAddressId(String forwardingAddressId) {
    this.forwardingAddressId = forwardingAddressId;
    return this;
  }

  /**
   * Get forwardingAddressId
   * @return forwardingAddressId
   */
  @javax.annotation.Nullable
  public String getForwardingAddressId() {
    return forwardingAddressId;
  }

  public void setForwardingAddressId(String forwardingAddressId) {
    this.forwardingAddressId = forwardingAddressId;
  }


  public ClusterMetadata taxDocuments(CreateClusterRequestTaxDocuments taxDocuments) {
    this.taxDocuments = taxDocuments;
    return this;
  }

  /**
   * Get taxDocuments
   * @return taxDocuments
   */
  @javax.annotation.Nullable
  public CreateClusterRequestTaxDocuments getTaxDocuments() {
    return taxDocuments;
  }

  public void setTaxDocuments(CreateClusterRequestTaxDocuments taxDocuments) {
    this.taxDocuments = taxDocuments;
  }


  public ClusterMetadata onDeviceServiceConfiguration(ClusterMetadataOnDeviceServiceConfiguration onDeviceServiceConfiguration) {
    this.onDeviceServiceConfiguration = onDeviceServiceConfiguration;
    return this;
  }

  /**
   * Get onDeviceServiceConfiguration
   * @return onDeviceServiceConfiguration
   */
  @javax.annotation.Nullable
  public ClusterMetadataOnDeviceServiceConfiguration getOnDeviceServiceConfiguration() {
    return onDeviceServiceConfiguration;
  }

  public void setOnDeviceServiceConfiguration(ClusterMetadataOnDeviceServiceConfiguration onDeviceServiceConfiguration) {
    this.onDeviceServiceConfiguration = onDeviceServiceConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterMetadata clusterMetadata = (ClusterMetadata) o;
    return Objects.equals(this.clusterId, clusterMetadata.clusterId) &&
        Objects.equals(this.description, clusterMetadata.description) &&
        Objects.equals(this.kmsKeyARN, clusterMetadata.kmsKeyARN) &&
        Objects.equals(this.roleARN, clusterMetadata.roleARN) &&
        Objects.equals(this.clusterState, clusterMetadata.clusterState) &&
        Objects.equals(this.jobType, clusterMetadata.jobType) &&
        Objects.equals(this.snowballType, clusterMetadata.snowballType) &&
        Objects.equals(this.creationDate, clusterMetadata.creationDate) &&
        Objects.equals(this.resources, clusterMetadata.resources) &&
        Objects.equals(this.addressId, clusterMetadata.addressId) &&
        Objects.equals(this.shippingOption, clusterMetadata.shippingOption) &&
        Objects.equals(this.notification, clusterMetadata.notification) &&
        Objects.equals(this.forwardingAddressId, clusterMetadata.forwardingAddressId) &&
        Objects.equals(this.taxDocuments, clusterMetadata.taxDocuments) &&
        Objects.equals(this.onDeviceServiceConfiguration, clusterMetadata.onDeviceServiceConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterId, description, kmsKeyARN, roleARN, clusterState, jobType, snowballType, creationDate, resources, addressId, shippingOption, notification, forwardingAddressId, taxDocuments, onDeviceServiceConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterMetadata {\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    kmsKeyARN: ").append(toIndentedString(kmsKeyARN)).append("\n");
    sb.append("    roleARN: ").append(toIndentedString(roleARN)).append("\n");
    sb.append("    clusterState: ").append(toIndentedString(clusterState)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    snowballType: ").append(toIndentedString(snowballType)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    addressId: ").append(toIndentedString(addressId)).append("\n");
    sb.append("    shippingOption: ").append(toIndentedString(shippingOption)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    forwardingAddressId: ").append(toIndentedString(forwardingAddressId)).append("\n");
    sb.append("    taxDocuments: ").append(toIndentedString(taxDocuments)).append("\n");
    sb.append("    onDeviceServiceConfiguration: ").append(toIndentedString(onDeviceServiceConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClusterId");
    openapiFields.add("Description");
    openapiFields.add("KmsKeyARN");
    openapiFields.add("RoleARN");
    openapiFields.add("ClusterState");
    openapiFields.add("JobType");
    openapiFields.add("SnowballType");
    openapiFields.add("CreationDate");
    openapiFields.add("Resources");
    openapiFields.add("AddressId");
    openapiFields.add("ShippingOption");
    openapiFields.add("Notification");
    openapiFields.add("ForwardingAddressId");
    openapiFields.add("TaxDocuments");
    openapiFields.add("OnDeviceServiceConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ClusterMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClusterMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClusterMetadata is not found in the empty JSON string", ClusterMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClusterMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClusterMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ClusterId`
      if (jsonObj.get("ClusterId") != null && !jsonObj.get("ClusterId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterId"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `KmsKeyARN`
      if (jsonObj.get("KmsKeyARN") != null && !jsonObj.get("KmsKeyARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyARN"));
      }
      // validate the optional field `RoleARN`
      if (jsonObj.get("RoleARN") != null && !jsonObj.get("RoleARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleARN"));
      }
      // validate the optional field `ClusterState`
      if (jsonObj.get("ClusterState") != null && !jsonObj.get("ClusterState").isJsonNull()) {
        ClusterState.validateJsonElement(jsonObj.get("ClusterState"));
      }
      // validate the optional field `JobType`
      if (jsonObj.get("JobType") != null && !jsonObj.get("JobType").isJsonNull()) {
        JobType.validateJsonElement(jsonObj.get("JobType"));
      }
      // validate the optional field `SnowballType`
      if (jsonObj.get("SnowballType") != null && !jsonObj.get("SnowballType").isJsonNull()) {
        SnowballType.validateJsonElement(jsonObj.get("SnowballType"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `Resources`
      if (jsonObj.get("Resources") != null && !jsonObj.get("Resources").isJsonNull()) {
        ClusterMetadataResources.validateJsonElement(jsonObj.get("Resources"));
      }
      // validate the optional field `AddressId`
      if (jsonObj.get("AddressId") != null && !jsonObj.get("AddressId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AddressId"));
      }
      // validate the optional field `ShippingOption`
      if (jsonObj.get("ShippingOption") != null && !jsonObj.get("ShippingOption").isJsonNull()) {
        ShippingOption.validateJsonElement(jsonObj.get("ShippingOption"));
      }
      // validate the optional field `Notification`
      if (jsonObj.get("Notification") != null && !jsonObj.get("Notification").isJsonNull()) {
        CreateClusterRequestNotification.validateJsonElement(jsonObj.get("Notification"));
      }
      // validate the optional field `ForwardingAddressId`
      if (jsonObj.get("ForwardingAddressId") != null && !jsonObj.get("ForwardingAddressId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ForwardingAddressId"));
      }
      // validate the optional field `TaxDocuments`
      if (jsonObj.get("TaxDocuments") != null && !jsonObj.get("TaxDocuments").isJsonNull()) {
        CreateClusterRequestTaxDocuments.validateJsonElement(jsonObj.get("TaxDocuments"));
      }
      // validate the optional field `OnDeviceServiceConfiguration`
      if (jsonObj.get("OnDeviceServiceConfiguration") != null && !jsonObj.get("OnDeviceServiceConfiguration").isJsonNull()) {
        ClusterMetadataOnDeviceServiceConfiguration.validateJsonElement(jsonObj.get("OnDeviceServiceConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClusterMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClusterMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClusterMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClusterMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<ClusterMetadata>() {
           @Override
           public void write(JsonWriter out, ClusterMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClusterMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ClusterMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ClusterMetadata
   * @throws IOException if the JSON string is invalid with respect to ClusterMetadata
   */
  public static ClusterMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClusterMetadata.class);
  }

  /**
   * Convert an instance of ClusterMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

