/*
 * Amazon Import/Export Snowball
 * The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.
 *
 * The version of the OpenAPI document: 2016-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateClusterRequestTaxDocuments;
import org.openapitools.client.model.CreateJobRequestDeviceConfiguration;
import org.openapitools.client.model.CreateJobRequestNotification;
import org.openapitools.client.model.CreateJobRequestOnDeviceServiceConfiguration;
import org.openapitools.client.model.CreateJobRequestPickupDetails;
import org.openapitools.client.model.CreateJobRequestResources;
import org.openapitools.client.model.ImpactLevel;
import org.openapitools.client.model.JobType;
import org.openapitools.client.model.RemoteManagement;
import org.openapitools.client.model.ShippingOption;
import org.openapitools.client.model.SnowballCapacity;
import org.openapitools.client.model.SnowballType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateJobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:55.026961-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateJobRequest {
  public static final String SERIALIZED_NAME_JOB_TYPE = "JobType";
  @SerializedName(SERIALIZED_NAME_JOB_TYPE)
  private JobType jobType;

  public static final String SERIALIZED_NAME_RESOURCES = "Resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private CreateJobRequestResources resources;

  public static final String SERIALIZED_NAME_ON_DEVICE_SERVICE_CONFIGURATION = "OnDeviceServiceConfiguration";
  @SerializedName(SERIALIZED_NAME_ON_DEVICE_SERVICE_CONFIGURATION)
  private CreateJobRequestOnDeviceServiceConfiguration onDeviceServiceConfiguration;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ADDRESS_ID = "AddressId";
  @SerializedName(SERIALIZED_NAME_ADDRESS_ID)
  private String addressId;

  public static final String SERIALIZED_NAME_KMS_KEY_A_R_N = "KmsKeyARN";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_A_R_N)
  private String kmsKeyARN;

  public static final String SERIALIZED_NAME_ROLE_A_R_N = "RoleARN";
  @SerializedName(SERIALIZED_NAME_ROLE_A_R_N)
  private String roleARN;

  public static final String SERIALIZED_NAME_SNOWBALL_CAPACITY_PREFERENCE = "SnowballCapacityPreference";
  @SerializedName(SERIALIZED_NAME_SNOWBALL_CAPACITY_PREFERENCE)
  private SnowballCapacity snowballCapacityPreference;

  public static final String SERIALIZED_NAME_SHIPPING_OPTION = "ShippingOption";
  @SerializedName(SERIALIZED_NAME_SHIPPING_OPTION)
  private ShippingOption shippingOption;

  public static final String SERIALIZED_NAME_NOTIFICATION = "Notification";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION)
  private CreateJobRequestNotification notification;

  public static final String SERIALIZED_NAME_CLUSTER_ID = "ClusterId";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ID)
  private String clusterId;

  public static final String SERIALIZED_NAME_SNOWBALL_TYPE = "SnowballType";
  @SerializedName(SERIALIZED_NAME_SNOWBALL_TYPE)
  private SnowballType snowballType;

  public static final String SERIALIZED_NAME_FORWARDING_ADDRESS_ID = "ForwardingAddressId";
  @SerializedName(SERIALIZED_NAME_FORWARDING_ADDRESS_ID)
  private String forwardingAddressId;

  public static final String SERIALIZED_NAME_TAX_DOCUMENTS = "TaxDocuments";
  @SerializedName(SERIALIZED_NAME_TAX_DOCUMENTS)
  private CreateClusterRequestTaxDocuments taxDocuments;

  public static final String SERIALIZED_NAME_DEVICE_CONFIGURATION = "DeviceConfiguration";
  @SerializedName(SERIALIZED_NAME_DEVICE_CONFIGURATION)
  private CreateJobRequestDeviceConfiguration deviceConfiguration;

  public static final String SERIALIZED_NAME_REMOTE_MANAGEMENT = "RemoteManagement";
  @SerializedName(SERIALIZED_NAME_REMOTE_MANAGEMENT)
  private RemoteManagement remoteManagement;

  public static final String SERIALIZED_NAME_LONG_TERM_PRICING_ID = "LongTermPricingId";
  @SerializedName(SERIALIZED_NAME_LONG_TERM_PRICING_ID)
  private String longTermPricingId;

  public static final String SERIALIZED_NAME_IMPACT_LEVEL = "ImpactLevel";
  @SerializedName(SERIALIZED_NAME_IMPACT_LEVEL)
  private ImpactLevel impactLevel;

  public static final String SERIALIZED_NAME_PICKUP_DETAILS = "PickupDetails";
  @SerializedName(SERIALIZED_NAME_PICKUP_DETAILS)
  private CreateJobRequestPickupDetails pickupDetails;

  public CreateJobRequest() {
  }

  public CreateJobRequest jobType(JobType jobType) {
    this.jobType = jobType;
    return this;
  }

  /**
   * Get jobType
   * @return jobType
   */
  @javax.annotation.Nullable
  public JobType getJobType() {
    return jobType;
  }

  public void setJobType(JobType jobType) {
    this.jobType = jobType;
  }


  public CreateJobRequest resources(CreateJobRequestResources resources) {
    this.resources = resources;
    return this;
  }

  /**
   * Get resources
   * @return resources
   */
  @javax.annotation.Nullable
  public CreateJobRequestResources getResources() {
    return resources;
  }

  public void setResources(CreateJobRequestResources resources) {
    this.resources = resources;
  }


  public CreateJobRequest onDeviceServiceConfiguration(CreateJobRequestOnDeviceServiceConfiguration onDeviceServiceConfiguration) {
    this.onDeviceServiceConfiguration = onDeviceServiceConfiguration;
    return this;
  }

  /**
   * Get onDeviceServiceConfiguration
   * @return onDeviceServiceConfiguration
   */
  @javax.annotation.Nullable
  public CreateJobRequestOnDeviceServiceConfiguration getOnDeviceServiceConfiguration() {
    return onDeviceServiceConfiguration;
  }

  public void setOnDeviceServiceConfiguration(CreateJobRequestOnDeviceServiceConfiguration onDeviceServiceConfiguration) {
    this.onDeviceServiceConfiguration = onDeviceServiceConfiguration;
  }


  public CreateJobRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateJobRequest addressId(String addressId) {
    this.addressId = addressId;
    return this;
  }

  /**
   * Get addressId
   * @return addressId
   */
  @javax.annotation.Nullable
  public String getAddressId() {
    return addressId;
  }

  public void setAddressId(String addressId) {
    this.addressId = addressId;
  }


  public CreateJobRequest kmsKeyARN(String kmsKeyARN) {
    this.kmsKeyARN = kmsKeyARN;
    return this;
  }

  /**
   * Get kmsKeyARN
   * @return kmsKeyARN
   */
  @javax.annotation.Nullable
  public String getKmsKeyARN() {
    return kmsKeyARN;
  }

  public void setKmsKeyARN(String kmsKeyARN) {
    this.kmsKeyARN = kmsKeyARN;
  }


  public CreateJobRequest roleARN(String roleARN) {
    this.roleARN = roleARN;
    return this;
  }

  /**
   * Get roleARN
   * @return roleARN
   */
  @javax.annotation.Nullable
  public String getRoleARN() {
    return roleARN;
  }

  public void setRoleARN(String roleARN) {
    this.roleARN = roleARN;
  }


  public CreateJobRequest snowballCapacityPreference(SnowballCapacity snowballCapacityPreference) {
    this.snowballCapacityPreference = snowballCapacityPreference;
    return this;
  }

  /**
   * Get snowballCapacityPreference
   * @return snowballCapacityPreference
   */
  @javax.annotation.Nullable
  public SnowballCapacity getSnowballCapacityPreference() {
    return snowballCapacityPreference;
  }

  public void setSnowballCapacityPreference(SnowballCapacity snowballCapacityPreference) {
    this.snowballCapacityPreference = snowballCapacityPreference;
  }


  public CreateJobRequest shippingOption(ShippingOption shippingOption) {
    this.shippingOption = shippingOption;
    return this;
  }

  /**
   * Get shippingOption
   * @return shippingOption
   */
  @javax.annotation.Nullable
  public ShippingOption getShippingOption() {
    return shippingOption;
  }

  public void setShippingOption(ShippingOption shippingOption) {
    this.shippingOption = shippingOption;
  }


  public CreateJobRequest notification(CreateJobRequestNotification notification) {
    this.notification = notification;
    return this;
  }

  /**
   * Get notification
   * @return notification
   */
  @javax.annotation.Nullable
  public CreateJobRequestNotification getNotification() {
    return notification;
  }

  public void setNotification(CreateJobRequestNotification notification) {
    this.notification = notification;
  }


  public CreateJobRequest clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

  /**
   * Get clusterId
   * @return clusterId
   */
  @javax.annotation.Nullable
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }


  public CreateJobRequest snowballType(SnowballType snowballType) {
    this.snowballType = snowballType;
    return this;
  }

  /**
   * Get snowballType
   * @return snowballType
   */
  @javax.annotation.Nullable
  public SnowballType getSnowballType() {
    return snowballType;
  }

  public void setSnowballType(SnowballType snowballType) {
    this.snowballType = snowballType;
  }


  public CreateJobRequest forwardingAddressId(String forwardingAddressId) {
    this.forwardingAddressId = forwardingAddressId;
    return this;
  }

  /**
   * Get forwardingAddressId
   * @return forwardingAddressId
   */
  @javax.annotation.Nullable
  public String getForwardingAddressId() {
    return forwardingAddressId;
  }

  public void setForwardingAddressId(String forwardingAddressId) {
    this.forwardingAddressId = forwardingAddressId;
  }


  public CreateJobRequest taxDocuments(CreateClusterRequestTaxDocuments taxDocuments) {
    this.taxDocuments = taxDocuments;
    return this;
  }

  /**
   * Get taxDocuments
   * @return taxDocuments
   */
  @javax.annotation.Nullable
  public CreateClusterRequestTaxDocuments getTaxDocuments() {
    return taxDocuments;
  }

  public void setTaxDocuments(CreateClusterRequestTaxDocuments taxDocuments) {
    this.taxDocuments = taxDocuments;
  }


  public CreateJobRequest deviceConfiguration(CreateJobRequestDeviceConfiguration deviceConfiguration) {
    this.deviceConfiguration = deviceConfiguration;
    return this;
  }

  /**
   * Get deviceConfiguration
   * @return deviceConfiguration
   */
  @javax.annotation.Nullable
  public CreateJobRequestDeviceConfiguration getDeviceConfiguration() {
    return deviceConfiguration;
  }

  public void setDeviceConfiguration(CreateJobRequestDeviceConfiguration deviceConfiguration) {
    this.deviceConfiguration = deviceConfiguration;
  }


  public CreateJobRequest remoteManagement(RemoteManagement remoteManagement) {
    this.remoteManagement = remoteManagement;
    return this;
  }

  /**
   * Get remoteManagement
   * @return remoteManagement
   */
  @javax.annotation.Nullable
  public RemoteManagement getRemoteManagement() {
    return remoteManagement;
  }

  public void setRemoteManagement(RemoteManagement remoteManagement) {
    this.remoteManagement = remoteManagement;
  }


  public CreateJobRequest longTermPricingId(String longTermPricingId) {
    this.longTermPricingId = longTermPricingId;
    return this;
  }

  /**
   * Get longTermPricingId
   * @return longTermPricingId
   */
  @javax.annotation.Nullable
  public String getLongTermPricingId() {
    return longTermPricingId;
  }

  public void setLongTermPricingId(String longTermPricingId) {
    this.longTermPricingId = longTermPricingId;
  }


  public CreateJobRequest impactLevel(ImpactLevel impactLevel) {
    this.impactLevel = impactLevel;
    return this;
  }

  /**
   * Get impactLevel
   * @return impactLevel
   */
  @javax.annotation.Nullable
  public ImpactLevel getImpactLevel() {
    return impactLevel;
  }

  public void setImpactLevel(ImpactLevel impactLevel) {
    this.impactLevel = impactLevel;
  }


  public CreateJobRequest pickupDetails(CreateJobRequestPickupDetails pickupDetails) {
    this.pickupDetails = pickupDetails;
    return this;
  }

  /**
   * Get pickupDetails
   * @return pickupDetails
   */
  @javax.annotation.Nullable
  public CreateJobRequestPickupDetails getPickupDetails() {
    return pickupDetails;
  }

  public void setPickupDetails(CreateJobRequestPickupDetails pickupDetails) {
    this.pickupDetails = pickupDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateJobRequest createJobRequest = (CreateJobRequest) o;
    return Objects.equals(this.jobType, createJobRequest.jobType) &&
        Objects.equals(this.resources, createJobRequest.resources) &&
        Objects.equals(this.onDeviceServiceConfiguration, createJobRequest.onDeviceServiceConfiguration) &&
        Objects.equals(this.description, createJobRequest.description) &&
        Objects.equals(this.addressId, createJobRequest.addressId) &&
        Objects.equals(this.kmsKeyARN, createJobRequest.kmsKeyARN) &&
        Objects.equals(this.roleARN, createJobRequest.roleARN) &&
        Objects.equals(this.snowballCapacityPreference, createJobRequest.snowballCapacityPreference) &&
        Objects.equals(this.shippingOption, createJobRequest.shippingOption) &&
        Objects.equals(this.notification, createJobRequest.notification) &&
        Objects.equals(this.clusterId, createJobRequest.clusterId) &&
        Objects.equals(this.snowballType, createJobRequest.snowballType) &&
        Objects.equals(this.forwardingAddressId, createJobRequest.forwardingAddressId) &&
        Objects.equals(this.taxDocuments, createJobRequest.taxDocuments) &&
        Objects.equals(this.deviceConfiguration, createJobRequest.deviceConfiguration) &&
        Objects.equals(this.remoteManagement, createJobRequest.remoteManagement) &&
        Objects.equals(this.longTermPricingId, createJobRequest.longTermPricingId) &&
        Objects.equals(this.impactLevel, createJobRequest.impactLevel) &&
        Objects.equals(this.pickupDetails, createJobRequest.pickupDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobType, resources, onDeviceServiceConfiguration, description, addressId, kmsKeyARN, roleARN, snowballCapacityPreference, shippingOption, notification, clusterId, snowballType, forwardingAddressId, taxDocuments, deviceConfiguration, remoteManagement, longTermPricingId, impactLevel, pickupDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateJobRequest {\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    onDeviceServiceConfiguration: ").append(toIndentedString(onDeviceServiceConfiguration)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    addressId: ").append(toIndentedString(addressId)).append("\n");
    sb.append("    kmsKeyARN: ").append(toIndentedString(kmsKeyARN)).append("\n");
    sb.append("    roleARN: ").append(toIndentedString(roleARN)).append("\n");
    sb.append("    snowballCapacityPreference: ").append(toIndentedString(snowballCapacityPreference)).append("\n");
    sb.append("    shippingOption: ").append(toIndentedString(shippingOption)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    snowballType: ").append(toIndentedString(snowballType)).append("\n");
    sb.append("    forwardingAddressId: ").append(toIndentedString(forwardingAddressId)).append("\n");
    sb.append("    taxDocuments: ").append(toIndentedString(taxDocuments)).append("\n");
    sb.append("    deviceConfiguration: ").append(toIndentedString(deviceConfiguration)).append("\n");
    sb.append("    remoteManagement: ").append(toIndentedString(remoteManagement)).append("\n");
    sb.append("    longTermPricingId: ").append(toIndentedString(longTermPricingId)).append("\n");
    sb.append("    impactLevel: ").append(toIndentedString(impactLevel)).append("\n");
    sb.append("    pickupDetails: ").append(toIndentedString(pickupDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("JobType");
    openapiFields.add("Resources");
    openapiFields.add("OnDeviceServiceConfiguration");
    openapiFields.add("Description");
    openapiFields.add("AddressId");
    openapiFields.add("KmsKeyARN");
    openapiFields.add("RoleARN");
    openapiFields.add("SnowballCapacityPreference");
    openapiFields.add("ShippingOption");
    openapiFields.add("Notification");
    openapiFields.add("ClusterId");
    openapiFields.add("SnowballType");
    openapiFields.add("ForwardingAddressId");
    openapiFields.add("TaxDocuments");
    openapiFields.add("DeviceConfiguration");
    openapiFields.add("RemoteManagement");
    openapiFields.add("LongTermPricingId");
    openapiFields.add("ImpactLevel");
    openapiFields.add("PickupDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateJobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateJobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateJobRequest is not found in the empty JSON string", CreateJobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateJobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateJobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `JobType`
      if (jsonObj.get("JobType") != null && !jsonObj.get("JobType").isJsonNull()) {
        JobType.validateJsonElement(jsonObj.get("JobType"));
      }
      // validate the optional field `Resources`
      if (jsonObj.get("Resources") != null && !jsonObj.get("Resources").isJsonNull()) {
        CreateJobRequestResources.validateJsonElement(jsonObj.get("Resources"));
      }
      // validate the optional field `OnDeviceServiceConfiguration`
      if (jsonObj.get("OnDeviceServiceConfiguration") != null && !jsonObj.get("OnDeviceServiceConfiguration").isJsonNull()) {
        CreateJobRequestOnDeviceServiceConfiguration.validateJsonElement(jsonObj.get("OnDeviceServiceConfiguration"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `AddressId`
      if (jsonObj.get("AddressId") != null && !jsonObj.get("AddressId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AddressId"));
      }
      // validate the optional field `KmsKeyARN`
      if (jsonObj.get("KmsKeyARN") != null && !jsonObj.get("KmsKeyARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyARN"));
      }
      // validate the optional field `RoleARN`
      if (jsonObj.get("RoleARN") != null && !jsonObj.get("RoleARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleARN"));
      }
      // validate the optional field `SnowballCapacityPreference`
      if (jsonObj.get("SnowballCapacityPreference") != null && !jsonObj.get("SnowballCapacityPreference").isJsonNull()) {
        SnowballCapacity.validateJsonElement(jsonObj.get("SnowballCapacityPreference"));
      }
      // validate the optional field `ShippingOption`
      if (jsonObj.get("ShippingOption") != null && !jsonObj.get("ShippingOption").isJsonNull()) {
        ShippingOption.validateJsonElement(jsonObj.get("ShippingOption"));
      }
      // validate the optional field `Notification`
      if (jsonObj.get("Notification") != null && !jsonObj.get("Notification").isJsonNull()) {
        CreateJobRequestNotification.validateJsonElement(jsonObj.get("Notification"));
      }
      // validate the optional field `ClusterId`
      if (jsonObj.get("ClusterId") != null && !jsonObj.get("ClusterId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterId"));
      }
      // validate the optional field `SnowballType`
      if (jsonObj.get("SnowballType") != null && !jsonObj.get("SnowballType").isJsonNull()) {
        SnowballType.validateJsonElement(jsonObj.get("SnowballType"));
      }
      // validate the optional field `ForwardingAddressId`
      if (jsonObj.get("ForwardingAddressId") != null && !jsonObj.get("ForwardingAddressId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ForwardingAddressId"));
      }
      // validate the optional field `TaxDocuments`
      if (jsonObj.get("TaxDocuments") != null && !jsonObj.get("TaxDocuments").isJsonNull()) {
        CreateClusterRequestTaxDocuments.validateJsonElement(jsonObj.get("TaxDocuments"));
      }
      // validate the optional field `DeviceConfiguration`
      if (jsonObj.get("DeviceConfiguration") != null && !jsonObj.get("DeviceConfiguration").isJsonNull()) {
        CreateJobRequestDeviceConfiguration.validateJsonElement(jsonObj.get("DeviceConfiguration"));
      }
      // validate the optional field `RemoteManagement`
      if (jsonObj.get("RemoteManagement") != null && !jsonObj.get("RemoteManagement").isJsonNull()) {
        RemoteManagement.validateJsonElement(jsonObj.get("RemoteManagement"));
      }
      // validate the optional field `LongTermPricingId`
      if (jsonObj.get("LongTermPricingId") != null && !jsonObj.get("LongTermPricingId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LongTermPricingId"));
      }
      // validate the optional field `ImpactLevel`
      if (jsonObj.get("ImpactLevel") != null && !jsonObj.get("ImpactLevel").isJsonNull()) {
        ImpactLevel.validateJsonElement(jsonObj.get("ImpactLevel"));
      }
      // validate the optional field `PickupDetails`
      if (jsonObj.get("PickupDetails") != null && !jsonObj.get("PickupDetails").isJsonNull()) {
        CreateJobRequestPickupDetails.validateJsonElement(jsonObj.get("PickupDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateJobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateJobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateJobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateJobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateJobRequest>() {
           @Override
           public void write(JsonWriter out, CreateJobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateJobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateJobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateJobRequest
   * @throws IOException if the JSON string is invalid with respect to CreateJobRequest
   */
  public static CreateJobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateJobRequest.class);
  }

  /**
   * Convert an instance of CreateJobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

