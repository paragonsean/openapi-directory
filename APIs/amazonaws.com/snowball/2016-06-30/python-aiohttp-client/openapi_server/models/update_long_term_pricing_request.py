# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateLongTermPricingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, long_term_pricing_id: str=None, replacement_job: str=None, is_long_term_pricing_auto_renew: bool=None):
        """UpdateLongTermPricingRequest - a model defined in OpenAPI

        :param long_term_pricing_id: The long_term_pricing_id of this UpdateLongTermPricingRequest.
        :param replacement_job: The replacement_job of this UpdateLongTermPricingRequest.
        :param is_long_term_pricing_auto_renew: The is_long_term_pricing_auto_renew of this UpdateLongTermPricingRequest.
        """
        self.openapi_types = {
            'long_term_pricing_id': str,
            'replacement_job': str,
            'is_long_term_pricing_auto_renew': bool
        }

        self.attribute_map = {
            'long_term_pricing_id': 'LongTermPricingId',
            'replacement_job': 'ReplacementJob',
            'is_long_term_pricing_auto_renew': 'IsLongTermPricingAutoRenew'
        }

        self._long_term_pricing_id = long_term_pricing_id
        self._replacement_job = replacement_job
        self._is_long_term_pricing_auto_renew = is_long_term_pricing_auto_renew

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateLongTermPricingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateLongTermPricingRequest of this UpdateLongTermPricingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def long_term_pricing_id(self):
        """Gets the long_term_pricing_id of this UpdateLongTermPricingRequest.


        :return: The long_term_pricing_id of this UpdateLongTermPricingRequest.
        :rtype: str
        """
        return self._long_term_pricing_id

    @long_term_pricing_id.setter
    def long_term_pricing_id(self, long_term_pricing_id):
        """Sets the long_term_pricing_id of this UpdateLongTermPricingRequest.


        :param long_term_pricing_id: The long_term_pricing_id of this UpdateLongTermPricingRequest.
        :type long_term_pricing_id: str
        """
        if long_term_pricing_id is None:
            raise ValueError("Invalid value for `long_term_pricing_id`, must not be `None`")

        self._long_term_pricing_id = long_term_pricing_id

    @property
    def replacement_job(self):
        """Gets the replacement_job of this UpdateLongTermPricingRequest.


        :return: The replacement_job of this UpdateLongTermPricingRequest.
        :rtype: str
        """
        return self._replacement_job

    @replacement_job.setter
    def replacement_job(self, replacement_job):
        """Sets the replacement_job of this UpdateLongTermPricingRequest.


        :param replacement_job: The replacement_job of this UpdateLongTermPricingRequest.
        :type replacement_job: str
        """

        self._replacement_job = replacement_job

    @property
    def is_long_term_pricing_auto_renew(self):
        """Gets the is_long_term_pricing_auto_renew of this UpdateLongTermPricingRequest.


        :return: The is_long_term_pricing_auto_renew of this UpdateLongTermPricingRequest.
        :rtype: bool
        """
        return self._is_long_term_pricing_auto_renew

    @is_long_term_pricing_auto_renew.setter
    def is_long_term_pricing_auto_renew(self, is_long_term_pricing_auto_renew):
        """Sets the is_long_term_pricing_auto_renew of this UpdateLongTermPricingRequest.


        :param is_long_term_pricing_auto_renew: The is_long_term_pricing_auto_renew of this UpdateLongTermPricingRequest.
        :type is_long_term_pricing_auto_renew: bool
        """

        self._is_long_term_pricing_auto_renew = is_long_term_pricing_auto_renew
