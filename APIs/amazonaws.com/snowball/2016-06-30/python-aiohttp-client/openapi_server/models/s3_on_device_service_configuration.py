# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_unit import StorageUnit
from openapi_server import util


class S3OnDeviceServiceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, storage_limit: float=None, storage_unit: StorageUnit=None, service_size: int=None, fault_tolerance: int=None):
        """S3OnDeviceServiceConfiguration - a model defined in OpenAPI

        :param storage_limit: The storage_limit of this S3OnDeviceServiceConfiguration.
        :param storage_unit: The storage_unit of this S3OnDeviceServiceConfiguration.
        :param service_size: The service_size of this S3OnDeviceServiceConfiguration.
        :param fault_tolerance: The fault_tolerance of this S3OnDeviceServiceConfiguration.
        """
        self.openapi_types = {
            'storage_limit': float,
            'storage_unit': StorageUnit,
            'service_size': int,
            'fault_tolerance': int
        }

        self.attribute_map = {
            'storage_limit': 'StorageLimit',
            'storage_unit': 'StorageUnit',
            'service_size': 'ServiceSize',
            'fault_tolerance': 'FaultTolerance'
        }

        self._storage_limit = storage_limit
        self._storage_unit = storage_unit
        self._service_size = service_size
        self._fault_tolerance = fault_tolerance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3OnDeviceServiceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3OnDeviceServiceConfiguration of this S3OnDeviceServiceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def storage_limit(self):
        """Gets the storage_limit of this S3OnDeviceServiceConfiguration.


        :return: The storage_limit of this S3OnDeviceServiceConfiguration.
        :rtype: float
        """
        return self._storage_limit

    @storage_limit.setter
    def storage_limit(self, storage_limit):
        """Sets the storage_limit of this S3OnDeviceServiceConfiguration.


        :param storage_limit: The storage_limit of this S3OnDeviceServiceConfiguration.
        :type storage_limit: float
        """

        self._storage_limit = storage_limit

    @property
    def storage_unit(self):
        """Gets the storage_unit of this S3OnDeviceServiceConfiguration.


        :return: The storage_unit of this S3OnDeviceServiceConfiguration.
        :rtype: StorageUnit
        """
        return self._storage_unit

    @storage_unit.setter
    def storage_unit(self, storage_unit):
        """Sets the storage_unit of this S3OnDeviceServiceConfiguration.


        :param storage_unit: The storage_unit of this S3OnDeviceServiceConfiguration.
        :type storage_unit: StorageUnit
        """

        self._storage_unit = storage_unit

    @property
    def service_size(self):
        """Gets the service_size of this S3OnDeviceServiceConfiguration.


        :return: The service_size of this S3OnDeviceServiceConfiguration.
        :rtype: int
        """
        return self._service_size

    @service_size.setter
    def service_size(self, service_size):
        """Sets the service_size of this S3OnDeviceServiceConfiguration.


        :param service_size: The service_size of this S3OnDeviceServiceConfiguration.
        :type service_size: int
        """

        self._service_size = service_size

    @property
    def fault_tolerance(self):
        """Gets the fault_tolerance of this S3OnDeviceServiceConfiguration.


        :return: The fault_tolerance of this S3OnDeviceServiceConfiguration.
        :rtype: int
        """
        return self._fault_tolerance

    @fault_tolerance.setter
    def fault_tolerance(self, fault_tolerance):
        """Sets the fault_tolerance of this S3OnDeviceServiceConfiguration.


        :param fault_tolerance: The fault_tolerance of this S3OnDeviceServiceConfiguration.
        :type fault_tolerance: int
        """

        self._fault_tolerance = fault_tolerance
