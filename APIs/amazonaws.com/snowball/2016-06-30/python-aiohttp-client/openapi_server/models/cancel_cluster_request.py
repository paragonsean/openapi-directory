# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CancelClusterRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_id: str=None):
        """CancelClusterRequest - a model defined in OpenAPI

        :param cluster_id: The cluster_id of this CancelClusterRequest.
        """
        self.openapi_types = {
            'cluster_id': str
        }

        self.attribute_map = {
            'cluster_id': 'ClusterId'
        }

        self._cluster_id = cluster_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CancelClusterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CancelClusterRequest of this CancelClusterRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_id(self):
        """Gets the cluster_id of this CancelClusterRequest.


        :return: The cluster_id of this CancelClusterRequest.
        :rtype: str
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """Sets the cluster_id of this CancelClusterRequest.


        :param cluster_id: The cluster_id of this CancelClusterRequest.
        :type cluster_id: str
        """
        if cluster_id is None:
            raise ValueError("Invalid value for `cluster_id`, must not be `None`")

        self._cluster_id = cluster_id
