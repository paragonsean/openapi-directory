# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_metadata_on_device_service_configuration import ClusterMetadataOnDeviceServiceConfiguration
from openapi_server.models.create_job_request_pickup_details import CreateJobRequestPickupDetails
from openapi_server.models.device_configuration import DeviceConfiguration
from openapi_server.models.impact_level import ImpactLevel
from openapi_server.models.job_metadata_data_transfer_progress import JobMetadataDataTransferProgress
from openapi_server.models.job_metadata_job_log_info import JobMetadataJobLogInfo
from openapi_server.models.job_metadata_notification import JobMetadataNotification
from openapi_server.models.job_metadata_resources import JobMetadataResources
from openapi_server.models.job_metadata_shipping_details import JobMetadataShippingDetails
from openapi_server.models.job_metadata_tax_documents import JobMetadataTaxDocuments
from openapi_server.models.job_state import JobState
from openapi_server.models.job_type import JobType
from openapi_server.models.remote_management import RemoteManagement
from openapi_server.models.snowball_capacity import SnowballCapacity
from openapi_server.models.snowball_type import SnowballType
from openapi_server import util


class DescribeJobResultJobMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_id: str=None, job_state: JobState=None, job_type: JobType=None, snowball_type: SnowballType=None, creation_date: datetime=None, resources: JobMetadataResources=None, description: str=None, kms_key_arn: str=None, role_arn: str=None, address_id: str=None, shipping_details: JobMetadataShippingDetails=None, snowball_capacity_preference: SnowballCapacity=None, notification: JobMetadataNotification=None, data_transfer_progress: JobMetadataDataTransferProgress=None, job_log_info: JobMetadataJobLogInfo=None, cluster_id: str=None, forwarding_address_id: str=None, tax_documents: JobMetadataTaxDocuments=None, device_configuration: DeviceConfiguration=None, remote_management: RemoteManagement=None, long_term_pricing_id: str=None, on_device_service_configuration: ClusterMetadataOnDeviceServiceConfiguration=None, impact_level: ImpactLevel=None, pickup_details: CreateJobRequestPickupDetails=None, snowball_id: str=None):
        """DescribeJobResultJobMetadata - a model defined in OpenAPI

        :param job_id: The job_id of this DescribeJobResultJobMetadata.
        :param job_state: The job_state of this DescribeJobResultJobMetadata.
        :param job_type: The job_type of this DescribeJobResultJobMetadata.
        :param snowball_type: The snowball_type of this DescribeJobResultJobMetadata.
        :param creation_date: The creation_date of this DescribeJobResultJobMetadata.
        :param resources: The resources of this DescribeJobResultJobMetadata.
        :param description: The description of this DescribeJobResultJobMetadata.
        :param kms_key_arn: The kms_key_arn of this DescribeJobResultJobMetadata.
        :param role_arn: The role_arn of this DescribeJobResultJobMetadata.
        :param address_id: The address_id of this DescribeJobResultJobMetadata.
        :param shipping_details: The shipping_details of this DescribeJobResultJobMetadata.
        :param snowball_capacity_preference: The snowball_capacity_preference of this DescribeJobResultJobMetadata.
        :param notification: The notification of this DescribeJobResultJobMetadata.
        :param data_transfer_progress: The data_transfer_progress of this DescribeJobResultJobMetadata.
        :param job_log_info: The job_log_info of this DescribeJobResultJobMetadata.
        :param cluster_id: The cluster_id of this DescribeJobResultJobMetadata.
        :param forwarding_address_id: The forwarding_address_id of this DescribeJobResultJobMetadata.
        :param tax_documents: The tax_documents of this DescribeJobResultJobMetadata.
        :param device_configuration: The device_configuration of this DescribeJobResultJobMetadata.
        :param remote_management: The remote_management of this DescribeJobResultJobMetadata.
        :param long_term_pricing_id: The long_term_pricing_id of this DescribeJobResultJobMetadata.
        :param on_device_service_configuration: The on_device_service_configuration of this DescribeJobResultJobMetadata.
        :param impact_level: The impact_level of this DescribeJobResultJobMetadata.
        :param pickup_details: The pickup_details of this DescribeJobResultJobMetadata.
        :param snowball_id: The snowball_id of this DescribeJobResultJobMetadata.
        """
        self.openapi_types = {
            'job_id': str,
            'job_state': JobState,
            'job_type': JobType,
            'snowball_type': SnowballType,
            'creation_date': datetime,
            'resources': JobMetadataResources,
            'description': str,
            'kms_key_arn': str,
            'role_arn': str,
            'address_id': str,
            'shipping_details': JobMetadataShippingDetails,
            'snowball_capacity_preference': SnowballCapacity,
            'notification': JobMetadataNotification,
            'data_transfer_progress': JobMetadataDataTransferProgress,
            'job_log_info': JobMetadataJobLogInfo,
            'cluster_id': str,
            'forwarding_address_id': str,
            'tax_documents': JobMetadataTaxDocuments,
            'device_configuration': DeviceConfiguration,
            'remote_management': RemoteManagement,
            'long_term_pricing_id': str,
            'on_device_service_configuration': ClusterMetadataOnDeviceServiceConfiguration,
            'impact_level': ImpactLevel,
            'pickup_details': CreateJobRequestPickupDetails,
            'snowball_id': str
        }

        self.attribute_map = {
            'job_id': 'JobId',
            'job_state': 'JobState',
            'job_type': 'JobType',
            'snowball_type': 'SnowballType',
            'creation_date': 'CreationDate',
            'resources': 'Resources',
            'description': 'Description',
            'kms_key_arn': 'KmsKeyARN',
            'role_arn': 'RoleARN',
            'address_id': 'AddressId',
            'shipping_details': 'ShippingDetails',
            'snowball_capacity_preference': 'SnowballCapacityPreference',
            'notification': 'Notification',
            'data_transfer_progress': 'DataTransferProgress',
            'job_log_info': 'JobLogInfo',
            'cluster_id': 'ClusterId',
            'forwarding_address_id': 'ForwardingAddressId',
            'tax_documents': 'TaxDocuments',
            'device_configuration': 'DeviceConfiguration',
            'remote_management': 'RemoteManagement',
            'long_term_pricing_id': 'LongTermPricingId',
            'on_device_service_configuration': 'OnDeviceServiceConfiguration',
            'impact_level': 'ImpactLevel',
            'pickup_details': 'PickupDetails',
            'snowball_id': 'SnowballId'
        }

        self._job_id = job_id
        self._job_state = job_state
        self._job_type = job_type
        self._snowball_type = snowball_type
        self._creation_date = creation_date
        self._resources = resources
        self._description = description
        self._kms_key_arn = kms_key_arn
        self._role_arn = role_arn
        self._address_id = address_id
        self._shipping_details = shipping_details
        self._snowball_capacity_preference = snowball_capacity_preference
        self._notification = notification
        self._data_transfer_progress = data_transfer_progress
        self._job_log_info = job_log_info
        self._cluster_id = cluster_id
        self._forwarding_address_id = forwarding_address_id
        self._tax_documents = tax_documents
        self._device_configuration = device_configuration
        self._remote_management = remote_management
        self._long_term_pricing_id = long_term_pricing_id
        self._on_device_service_configuration = on_device_service_configuration
        self._impact_level = impact_level
        self._pickup_details = pickup_details
        self._snowball_id = snowball_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeJobResultJobMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeJobResult_JobMetadata of this DescribeJobResultJobMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self):
        """Gets the job_id of this DescribeJobResultJobMetadata.


        :return: The job_id of this DescribeJobResultJobMetadata.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this DescribeJobResultJobMetadata.


        :param job_id: The job_id of this DescribeJobResultJobMetadata.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def job_state(self):
        """Gets the job_state of this DescribeJobResultJobMetadata.


        :return: The job_state of this DescribeJobResultJobMetadata.
        :rtype: JobState
        """
        return self._job_state

    @job_state.setter
    def job_state(self, job_state):
        """Sets the job_state of this DescribeJobResultJobMetadata.


        :param job_state: The job_state of this DescribeJobResultJobMetadata.
        :type job_state: JobState
        """

        self._job_state = job_state

    @property
    def job_type(self):
        """Gets the job_type of this DescribeJobResultJobMetadata.


        :return: The job_type of this DescribeJobResultJobMetadata.
        :rtype: JobType
        """
        return self._job_type

    @job_type.setter
    def job_type(self, job_type):
        """Sets the job_type of this DescribeJobResultJobMetadata.


        :param job_type: The job_type of this DescribeJobResultJobMetadata.
        :type job_type: JobType
        """

        self._job_type = job_type

    @property
    def snowball_type(self):
        """Gets the snowball_type of this DescribeJobResultJobMetadata.


        :return: The snowball_type of this DescribeJobResultJobMetadata.
        :rtype: SnowballType
        """
        return self._snowball_type

    @snowball_type.setter
    def snowball_type(self, snowball_type):
        """Sets the snowball_type of this DescribeJobResultJobMetadata.


        :param snowball_type: The snowball_type of this DescribeJobResultJobMetadata.
        :type snowball_type: SnowballType
        """

        self._snowball_type = snowball_type

    @property
    def creation_date(self):
        """Gets the creation_date of this DescribeJobResultJobMetadata.


        :return: The creation_date of this DescribeJobResultJobMetadata.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this DescribeJobResultJobMetadata.


        :param creation_date: The creation_date of this DescribeJobResultJobMetadata.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def resources(self):
        """Gets the resources of this DescribeJobResultJobMetadata.


        :return: The resources of this DescribeJobResultJobMetadata.
        :rtype: JobMetadataResources
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this DescribeJobResultJobMetadata.


        :param resources: The resources of this DescribeJobResultJobMetadata.
        :type resources: JobMetadataResources
        """

        self._resources = resources

    @property
    def description(self):
        """Gets the description of this DescribeJobResultJobMetadata.


        :return: The description of this DescribeJobResultJobMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeJobResultJobMetadata.


        :param description: The description of this DescribeJobResultJobMetadata.
        :type description: str
        """

        self._description = description

    @property
    def kms_key_arn(self):
        """Gets the kms_key_arn of this DescribeJobResultJobMetadata.


        :return: The kms_key_arn of this DescribeJobResultJobMetadata.
        :rtype: str
        """
        return self._kms_key_arn

    @kms_key_arn.setter
    def kms_key_arn(self, kms_key_arn):
        """Sets the kms_key_arn of this DescribeJobResultJobMetadata.


        :param kms_key_arn: The kms_key_arn of this DescribeJobResultJobMetadata.
        :type kms_key_arn: str
        """

        self._kms_key_arn = kms_key_arn

    @property
    def role_arn(self):
        """Gets the role_arn of this DescribeJobResultJobMetadata.


        :return: The role_arn of this DescribeJobResultJobMetadata.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this DescribeJobResultJobMetadata.


        :param role_arn: The role_arn of this DescribeJobResultJobMetadata.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def address_id(self):
        """Gets the address_id of this DescribeJobResultJobMetadata.


        :return: The address_id of this DescribeJobResultJobMetadata.
        :rtype: str
        """
        return self._address_id

    @address_id.setter
    def address_id(self, address_id):
        """Sets the address_id of this DescribeJobResultJobMetadata.


        :param address_id: The address_id of this DescribeJobResultJobMetadata.
        :type address_id: str
        """

        self._address_id = address_id

    @property
    def shipping_details(self):
        """Gets the shipping_details of this DescribeJobResultJobMetadata.


        :return: The shipping_details of this DescribeJobResultJobMetadata.
        :rtype: JobMetadataShippingDetails
        """
        return self._shipping_details

    @shipping_details.setter
    def shipping_details(self, shipping_details):
        """Sets the shipping_details of this DescribeJobResultJobMetadata.


        :param shipping_details: The shipping_details of this DescribeJobResultJobMetadata.
        :type shipping_details: JobMetadataShippingDetails
        """

        self._shipping_details = shipping_details

    @property
    def snowball_capacity_preference(self):
        """Gets the snowball_capacity_preference of this DescribeJobResultJobMetadata.


        :return: The snowball_capacity_preference of this DescribeJobResultJobMetadata.
        :rtype: SnowballCapacity
        """
        return self._snowball_capacity_preference

    @snowball_capacity_preference.setter
    def snowball_capacity_preference(self, snowball_capacity_preference):
        """Sets the snowball_capacity_preference of this DescribeJobResultJobMetadata.


        :param snowball_capacity_preference: The snowball_capacity_preference of this DescribeJobResultJobMetadata.
        :type snowball_capacity_preference: SnowballCapacity
        """

        self._snowball_capacity_preference = snowball_capacity_preference

    @property
    def notification(self):
        """Gets the notification of this DescribeJobResultJobMetadata.


        :return: The notification of this DescribeJobResultJobMetadata.
        :rtype: JobMetadataNotification
        """
        return self._notification

    @notification.setter
    def notification(self, notification):
        """Sets the notification of this DescribeJobResultJobMetadata.


        :param notification: The notification of this DescribeJobResultJobMetadata.
        :type notification: JobMetadataNotification
        """

        self._notification = notification

    @property
    def data_transfer_progress(self):
        """Gets the data_transfer_progress of this DescribeJobResultJobMetadata.


        :return: The data_transfer_progress of this DescribeJobResultJobMetadata.
        :rtype: JobMetadataDataTransferProgress
        """
        return self._data_transfer_progress

    @data_transfer_progress.setter
    def data_transfer_progress(self, data_transfer_progress):
        """Sets the data_transfer_progress of this DescribeJobResultJobMetadata.


        :param data_transfer_progress: The data_transfer_progress of this DescribeJobResultJobMetadata.
        :type data_transfer_progress: JobMetadataDataTransferProgress
        """

        self._data_transfer_progress = data_transfer_progress

    @property
    def job_log_info(self):
        """Gets the job_log_info of this DescribeJobResultJobMetadata.


        :return: The job_log_info of this DescribeJobResultJobMetadata.
        :rtype: JobMetadataJobLogInfo
        """
        return self._job_log_info

    @job_log_info.setter
    def job_log_info(self, job_log_info):
        """Sets the job_log_info of this DescribeJobResultJobMetadata.


        :param job_log_info: The job_log_info of this DescribeJobResultJobMetadata.
        :type job_log_info: JobMetadataJobLogInfo
        """

        self._job_log_info = job_log_info

    @property
    def cluster_id(self):
        """Gets the cluster_id of this DescribeJobResultJobMetadata.


        :return: The cluster_id of this DescribeJobResultJobMetadata.
        :rtype: str
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """Sets the cluster_id of this DescribeJobResultJobMetadata.


        :param cluster_id: The cluster_id of this DescribeJobResultJobMetadata.
        :type cluster_id: str
        """

        self._cluster_id = cluster_id

    @property
    def forwarding_address_id(self):
        """Gets the forwarding_address_id of this DescribeJobResultJobMetadata.


        :return: The forwarding_address_id of this DescribeJobResultJobMetadata.
        :rtype: str
        """
        return self._forwarding_address_id

    @forwarding_address_id.setter
    def forwarding_address_id(self, forwarding_address_id):
        """Sets the forwarding_address_id of this DescribeJobResultJobMetadata.


        :param forwarding_address_id: The forwarding_address_id of this DescribeJobResultJobMetadata.
        :type forwarding_address_id: str
        """

        self._forwarding_address_id = forwarding_address_id

    @property
    def tax_documents(self):
        """Gets the tax_documents of this DescribeJobResultJobMetadata.


        :return: The tax_documents of this DescribeJobResultJobMetadata.
        :rtype: JobMetadataTaxDocuments
        """
        return self._tax_documents

    @tax_documents.setter
    def tax_documents(self, tax_documents):
        """Sets the tax_documents of this DescribeJobResultJobMetadata.


        :param tax_documents: The tax_documents of this DescribeJobResultJobMetadata.
        :type tax_documents: JobMetadataTaxDocuments
        """

        self._tax_documents = tax_documents

    @property
    def device_configuration(self):
        """Gets the device_configuration of this DescribeJobResultJobMetadata.


        :return: The device_configuration of this DescribeJobResultJobMetadata.
        :rtype: DeviceConfiguration
        """
        return self._device_configuration

    @device_configuration.setter
    def device_configuration(self, device_configuration):
        """Sets the device_configuration of this DescribeJobResultJobMetadata.


        :param device_configuration: The device_configuration of this DescribeJobResultJobMetadata.
        :type device_configuration: DeviceConfiguration
        """

        self._device_configuration = device_configuration

    @property
    def remote_management(self):
        """Gets the remote_management of this DescribeJobResultJobMetadata.


        :return: The remote_management of this DescribeJobResultJobMetadata.
        :rtype: RemoteManagement
        """
        return self._remote_management

    @remote_management.setter
    def remote_management(self, remote_management):
        """Sets the remote_management of this DescribeJobResultJobMetadata.


        :param remote_management: The remote_management of this DescribeJobResultJobMetadata.
        :type remote_management: RemoteManagement
        """

        self._remote_management = remote_management

    @property
    def long_term_pricing_id(self):
        """Gets the long_term_pricing_id of this DescribeJobResultJobMetadata.


        :return: The long_term_pricing_id of this DescribeJobResultJobMetadata.
        :rtype: str
        """
        return self._long_term_pricing_id

    @long_term_pricing_id.setter
    def long_term_pricing_id(self, long_term_pricing_id):
        """Sets the long_term_pricing_id of this DescribeJobResultJobMetadata.


        :param long_term_pricing_id: The long_term_pricing_id of this DescribeJobResultJobMetadata.
        :type long_term_pricing_id: str
        """

        self._long_term_pricing_id = long_term_pricing_id

    @property
    def on_device_service_configuration(self):
        """Gets the on_device_service_configuration of this DescribeJobResultJobMetadata.


        :return: The on_device_service_configuration of this DescribeJobResultJobMetadata.
        :rtype: ClusterMetadataOnDeviceServiceConfiguration
        """
        return self._on_device_service_configuration

    @on_device_service_configuration.setter
    def on_device_service_configuration(self, on_device_service_configuration):
        """Sets the on_device_service_configuration of this DescribeJobResultJobMetadata.


        :param on_device_service_configuration: The on_device_service_configuration of this DescribeJobResultJobMetadata.
        :type on_device_service_configuration: ClusterMetadataOnDeviceServiceConfiguration
        """

        self._on_device_service_configuration = on_device_service_configuration

    @property
    def impact_level(self):
        """Gets the impact_level of this DescribeJobResultJobMetadata.


        :return: The impact_level of this DescribeJobResultJobMetadata.
        :rtype: ImpactLevel
        """
        return self._impact_level

    @impact_level.setter
    def impact_level(self, impact_level):
        """Sets the impact_level of this DescribeJobResultJobMetadata.


        :param impact_level: The impact_level of this DescribeJobResultJobMetadata.
        :type impact_level: ImpactLevel
        """

        self._impact_level = impact_level

    @property
    def pickup_details(self):
        """Gets the pickup_details of this DescribeJobResultJobMetadata.


        :return: The pickup_details of this DescribeJobResultJobMetadata.
        :rtype: CreateJobRequestPickupDetails
        """
        return self._pickup_details

    @pickup_details.setter
    def pickup_details(self, pickup_details):
        """Sets the pickup_details of this DescribeJobResultJobMetadata.


        :param pickup_details: The pickup_details of this DescribeJobResultJobMetadata.
        :type pickup_details: CreateJobRequestPickupDetails
        """

        self._pickup_details = pickup_details

    @property
    def snowball_id(self):
        """Gets the snowball_id of this DescribeJobResultJobMetadata.


        :return: The snowball_id of this DescribeJobResultJobMetadata.
        :rtype: str
        """
        return self._snowball_id

    @snowball_id.setter
    def snowball_id(self, snowball_id):
        """Sets the snowball_id of this DescribeJobResultJobMetadata.


        :param snowball_id: The snowball_id of this DescribeJobResultJobMetadata.
        :type snowball_id: str
        """

        self._snowball_id = snowball_id
