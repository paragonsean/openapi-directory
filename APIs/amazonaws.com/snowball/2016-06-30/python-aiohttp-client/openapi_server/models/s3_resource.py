# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_resource_key_range import S3ResourceKeyRange
from openapi_server import util


class S3Resource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_arn: str=None, key_range: S3ResourceKeyRange=None, target_on_device_services: List=None):
        """S3Resource - a model defined in OpenAPI

        :param bucket_arn: The bucket_arn of this S3Resource.
        :param key_range: The key_range of this S3Resource.
        :param target_on_device_services: The target_on_device_services of this S3Resource.
        """
        self.openapi_types = {
            'bucket_arn': str,
            'key_range': S3ResourceKeyRange,
            'target_on_device_services': List
        }

        self.attribute_map = {
            'bucket_arn': 'BucketArn',
            'key_range': 'KeyRange',
            'target_on_device_services': 'TargetOnDeviceServices'
        }

        self._bucket_arn = bucket_arn
        self._key_range = key_range
        self._target_on_device_services = target_on_device_services

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3Resource of this S3Resource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_arn(self):
        """Gets the bucket_arn of this S3Resource.


        :return: The bucket_arn of this S3Resource.
        :rtype: str
        """
        return self._bucket_arn

    @bucket_arn.setter
    def bucket_arn(self, bucket_arn):
        """Sets the bucket_arn of this S3Resource.


        :param bucket_arn: The bucket_arn of this S3Resource.
        :type bucket_arn: str
        """

        self._bucket_arn = bucket_arn

    @property
    def key_range(self):
        """Gets the key_range of this S3Resource.


        :return: The key_range of this S3Resource.
        :rtype: S3ResourceKeyRange
        """
        return self._key_range

    @key_range.setter
    def key_range(self, key_range):
        """Sets the key_range of this S3Resource.


        :param key_range: The key_range of this S3Resource.
        :type key_range: S3ResourceKeyRange
        """

        self._key_range = key_range

    @property
    def target_on_device_services(self):
        """Gets the target_on_device_services of this S3Resource.


        :return: The target_on_device_services of this S3Resource.
        :rtype: List
        """
        return self._target_on_device_services

    @target_on_device_services.setter
    def target_on_device_services(self, target_on_device_services):
        """Sets the target_on_device_services of this S3Resource.


        :param target_on_device_services: The target_on_device_services of this S3Resource.
        :type target_on_device_services: List
        """

        self._target_on_device_services = target_on_device_services
