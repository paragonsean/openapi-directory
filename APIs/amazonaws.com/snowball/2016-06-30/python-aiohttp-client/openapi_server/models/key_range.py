# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeyRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin_marker: str=None, end_marker: str=None):
        """KeyRange - a model defined in OpenAPI

        :param begin_marker: The begin_marker of this KeyRange.
        :param end_marker: The end_marker of this KeyRange.
        """
        self.openapi_types = {
            'begin_marker': str,
            'end_marker': str
        }

        self.attribute_map = {
            'begin_marker': 'BeginMarker',
            'end_marker': 'EndMarker'
        }

        self._begin_marker = begin_marker
        self._end_marker = end_marker

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyRange of this KeyRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin_marker(self):
        """Gets the begin_marker of this KeyRange.


        :return: The begin_marker of this KeyRange.
        :rtype: str
        """
        return self._begin_marker

    @begin_marker.setter
    def begin_marker(self, begin_marker):
        """Sets the begin_marker of this KeyRange.


        :param begin_marker: The begin_marker of this KeyRange.
        :type begin_marker: str
        """

        self._begin_marker = begin_marker

    @property
    def end_marker(self):
        """Gets the end_marker of this KeyRange.


        :return: The end_marker of this KeyRange.
        :rtype: str
        """
        return self._end_marker

    @end_marker.setter
    def end_marker(self, end_marker):
        """Sets the end_marker of this KeyRange.


        :param end_marker: The end_marker of this KeyRange.
        :type end_marker: str
        """

        self._end_marker = end_marker
