# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateClusterRequestResources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_resources: List=None, lambda_resources: List=None, ec2_ami_resources: List=None):
        """CreateClusterRequestResources - a model defined in OpenAPI

        :param s3_resources: The s3_resources of this CreateClusterRequestResources.
        :param lambda_resources: The lambda_resources of this CreateClusterRequestResources.
        :param ec2_ami_resources: The ec2_ami_resources of this CreateClusterRequestResources.
        """
        self.openapi_types = {
            's3_resources': List,
            'lambda_resources': List,
            'ec2_ami_resources': List
        }

        self.attribute_map = {
            's3_resources': 'S3Resources',
            'lambda_resources': 'LambdaResources',
            'ec2_ami_resources': 'Ec2AmiResources'
        }

        self._s3_resources = s3_resources
        self._lambda_resources = lambda_resources
        self._ec2_ami_resources = ec2_ami_resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClusterRequestResources':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateClusterRequest_Resources of this CreateClusterRequestResources.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_resources(self):
        """Gets the s3_resources of this CreateClusterRequestResources.


        :return: The s3_resources of this CreateClusterRequestResources.
        :rtype: List
        """
        return self._s3_resources

    @s3_resources.setter
    def s3_resources(self, s3_resources):
        """Sets the s3_resources of this CreateClusterRequestResources.


        :param s3_resources: The s3_resources of this CreateClusterRequestResources.
        :type s3_resources: List
        """

        self._s3_resources = s3_resources

    @property
    def lambda_resources(self):
        """Gets the lambda_resources of this CreateClusterRequestResources.


        :return: The lambda_resources of this CreateClusterRequestResources.
        :rtype: List
        """
        return self._lambda_resources

    @lambda_resources.setter
    def lambda_resources(self, lambda_resources):
        """Sets the lambda_resources of this CreateClusterRequestResources.


        :param lambda_resources: The lambda_resources of this CreateClusterRequestResources.
        :type lambda_resources: List
        """

        self._lambda_resources = lambda_resources

    @property
    def ec2_ami_resources(self):
        """Gets the ec2_ami_resources of this CreateClusterRequestResources.


        :return: The ec2_ami_resources of this CreateClusterRequestResources.
        :rtype: List
        """
        return self._ec2_ami_resources

    @ec2_ami_resources.setter
    def ec2_ami_resources(self, ec2_ami_resources):
        """Sets the ec2_ami_resources of this CreateClusterRequestResources.


        :param ec2_ami_resources: The ec2_ami_resources of this CreateClusterRequestResources.
        :type ec2_ami_resources: List
        """

        self._ec2_ami_resources = ec2_ami_resources
