# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.on_device_service_configuration_ekson_device_service import OnDeviceServiceConfigurationEKSOnDeviceService
from openapi_server.models.on_device_service_configuration_nfson_device_service import OnDeviceServiceConfigurationNFSOnDeviceService
from openapi_server.models.on_device_service_configuration_s3_on_device_service import OnDeviceServiceConfigurationS3OnDeviceService
from openapi_server.models.on_device_service_configuration_tgwon_device_service import OnDeviceServiceConfigurationTGWOnDeviceService
from openapi_server import util


class OnDeviceServiceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nfson_device_service: OnDeviceServiceConfigurationNFSOnDeviceService=None, tgwon_device_service: OnDeviceServiceConfigurationTGWOnDeviceService=None, ekson_device_service: OnDeviceServiceConfigurationEKSOnDeviceService=None, s3_on_device_service: OnDeviceServiceConfigurationS3OnDeviceService=None):
        """OnDeviceServiceConfiguration - a model defined in OpenAPI

        :param nfson_device_service: The nfson_device_service of this OnDeviceServiceConfiguration.
        :param tgwon_device_service: The tgwon_device_service of this OnDeviceServiceConfiguration.
        :param ekson_device_service: The ekson_device_service of this OnDeviceServiceConfiguration.
        :param s3_on_device_service: The s3_on_device_service of this OnDeviceServiceConfiguration.
        """
        self.openapi_types = {
            'nfson_device_service': OnDeviceServiceConfigurationNFSOnDeviceService,
            'tgwon_device_service': OnDeviceServiceConfigurationTGWOnDeviceService,
            'ekson_device_service': OnDeviceServiceConfigurationEKSOnDeviceService,
            's3_on_device_service': OnDeviceServiceConfigurationS3OnDeviceService
        }

        self.attribute_map = {
            'nfson_device_service': 'NFSOnDeviceService',
            'tgwon_device_service': 'TGWOnDeviceService',
            'ekson_device_service': 'EKSOnDeviceService',
            's3_on_device_service': 'S3OnDeviceService'
        }

        self._nfson_device_service = nfson_device_service
        self._tgwon_device_service = tgwon_device_service
        self._ekson_device_service = ekson_device_service
        self._s3_on_device_service = s3_on_device_service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnDeviceServiceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OnDeviceServiceConfiguration of this OnDeviceServiceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nfson_device_service(self):
        """Gets the nfson_device_service of this OnDeviceServiceConfiguration.


        :return: The nfson_device_service of this OnDeviceServiceConfiguration.
        :rtype: OnDeviceServiceConfigurationNFSOnDeviceService
        """
        return self._nfson_device_service

    @nfson_device_service.setter
    def nfson_device_service(self, nfson_device_service):
        """Sets the nfson_device_service of this OnDeviceServiceConfiguration.


        :param nfson_device_service: The nfson_device_service of this OnDeviceServiceConfiguration.
        :type nfson_device_service: OnDeviceServiceConfigurationNFSOnDeviceService
        """

        self._nfson_device_service = nfson_device_service

    @property
    def tgwon_device_service(self):
        """Gets the tgwon_device_service of this OnDeviceServiceConfiguration.


        :return: The tgwon_device_service of this OnDeviceServiceConfiguration.
        :rtype: OnDeviceServiceConfigurationTGWOnDeviceService
        """
        return self._tgwon_device_service

    @tgwon_device_service.setter
    def tgwon_device_service(self, tgwon_device_service):
        """Sets the tgwon_device_service of this OnDeviceServiceConfiguration.


        :param tgwon_device_service: The tgwon_device_service of this OnDeviceServiceConfiguration.
        :type tgwon_device_service: OnDeviceServiceConfigurationTGWOnDeviceService
        """

        self._tgwon_device_service = tgwon_device_service

    @property
    def ekson_device_service(self):
        """Gets the ekson_device_service of this OnDeviceServiceConfiguration.


        :return: The ekson_device_service of this OnDeviceServiceConfiguration.
        :rtype: OnDeviceServiceConfigurationEKSOnDeviceService
        """
        return self._ekson_device_service

    @ekson_device_service.setter
    def ekson_device_service(self, ekson_device_service):
        """Sets the ekson_device_service of this OnDeviceServiceConfiguration.


        :param ekson_device_service: The ekson_device_service of this OnDeviceServiceConfiguration.
        :type ekson_device_service: OnDeviceServiceConfigurationEKSOnDeviceService
        """

        self._ekson_device_service = ekson_device_service

    @property
    def s3_on_device_service(self):
        """Gets the s3_on_device_service of this OnDeviceServiceConfiguration.


        :return: The s3_on_device_service of this OnDeviceServiceConfiguration.
        :rtype: OnDeviceServiceConfigurationS3OnDeviceService
        """
        return self._s3_on_device_service

    @s3_on_device_service.setter
    def s3_on_device_service(self, s3_on_device_service):
        """Sets the s3_on_device_service of this OnDeviceServiceConfiguration.


        :param s3_on_device_service: The s3_on_device_service of this OnDeviceServiceConfiguration.
        :type s3_on_device_service: OnDeviceServiceConfigurationS3OnDeviceService
        """

        self._s3_on_device_service = s3_on_device_service
