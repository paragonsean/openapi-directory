# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PickupDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, phone_number: str=None, email: str=None, identification_number: str=None, identification_expiration_date: datetime=None, identification_issuing_org: str=None, device_pickup_id: str=None):
        """PickupDetails - a model defined in OpenAPI

        :param name: The name of this PickupDetails.
        :param phone_number: The phone_number of this PickupDetails.
        :param email: The email of this PickupDetails.
        :param identification_number: The identification_number of this PickupDetails.
        :param identification_expiration_date: The identification_expiration_date of this PickupDetails.
        :param identification_issuing_org: The identification_issuing_org of this PickupDetails.
        :param device_pickup_id: The device_pickup_id of this PickupDetails.
        """
        self.openapi_types = {
            'name': str,
            'phone_number': str,
            'email': str,
            'identification_number': str,
            'identification_expiration_date': datetime,
            'identification_issuing_org': str,
            'device_pickup_id': str
        }

        self.attribute_map = {
            'name': 'Name',
            'phone_number': 'PhoneNumber',
            'email': 'Email',
            'identification_number': 'IdentificationNumber',
            'identification_expiration_date': 'IdentificationExpirationDate',
            'identification_issuing_org': 'IdentificationIssuingOrg',
            'device_pickup_id': 'DevicePickupId'
        }

        self._name = name
        self._phone_number = phone_number
        self._email = email
        self._identification_number = identification_number
        self._identification_expiration_date = identification_expiration_date
        self._identification_issuing_org = identification_issuing_org
        self._device_pickup_id = device_pickup_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PickupDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PickupDetails of this PickupDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PickupDetails.


        :return: The name of this PickupDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PickupDetails.


        :param name: The name of this PickupDetails.
        :type name: str
        """

        self._name = name

    @property
    def phone_number(self):
        """Gets the phone_number of this PickupDetails.


        :return: The phone_number of this PickupDetails.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this PickupDetails.


        :param phone_number: The phone_number of this PickupDetails.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def email(self):
        """Gets the email of this PickupDetails.


        :return: The email of this PickupDetails.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this PickupDetails.


        :param email: The email of this PickupDetails.
        :type email: str
        """

        self._email = email

    @property
    def identification_number(self):
        """Gets the identification_number of this PickupDetails.


        :return: The identification_number of this PickupDetails.
        :rtype: str
        """
        return self._identification_number

    @identification_number.setter
    def identification_number(self, identification_number):
        """Sets the identification_number of this PickupDetails.


        :param identification_number: The identification_number of this PickupDetails.
        :type identification_number: str
        """

        self._identification_number = identification_number

    @property
    def identification_expiration_date(self):
        """Gets the identification_expiration_date of this PickupDetails.


        :return: The identification_expiration_date of this PickupDetails.
        :rtype: datetime
        """
        return self._identification_expiration_date

    @identification_expiration_date.setter
    def identification_expiration_date(self, identification_expiration_date):
        """Sets the identification_expiration_date of this PickupDetails.


        :param identification_expiration_date: The identification_expiration_date of this PickupDetails.
        :type identification_expiration_date: datetime
        """

        self._identification_expiration_date = identification_expiration_date

    @property
    def identification_issuing_org(self):
        """Gets the identification_issuing_org of this PickupDetails.


        :return: The identification_issuing_org of this PickupDetails.
        :rtype: str
        """
        return self._identification_issuing_org

    @identification_issuing_org.setter
    def identification_issuing_org(self, identification_issuing_org):
        """Sets the identification_issuing_org of this PickupDetails.


        :param identification_issuing_org: The identification_issuing_org of this PickupDetails.
        :type identification_issuing_org: str
        """

        self._identification_issuing_org = identification_issuing_org

    @property
    def device_pickup_id(self):
        """Gets the device_pickup_id of this PickupDetails.


        :return: The device_pickup_id of this PickupDetails.
        :rtype: str
        """
        return self._device_pickup_id

    @device_pickup_id.setter
    def device_pickup_id(self, device_pickup_id):
        """Sets the device_pickup_id of this PickupDetails.


        :param device_pickup_id: The device_pickup_id of this PickupDetails.
        :type device_pickup_id: str
        """

        self._device_pickup_id = device_pickup_id
