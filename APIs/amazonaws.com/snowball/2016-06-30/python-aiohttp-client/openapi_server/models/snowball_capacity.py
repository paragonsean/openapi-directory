# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SnowballCapacity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    T50 = 'T50'
    T80 = 'T80'
    T100 = 'T100'
    T42 = 'T42'
    T98 = 'T98'
    T8 = 'T8'
    T14 = 'T14'
    T32 = 'T32'
    NOPREFERENCE = 'NoPreference'
    T240 = 'T240'
    T13 = 'T13'

    def __init__(self):
        """SnowballCapacity - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SnowballCapacity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SnowballCapacity of this SnowballCapacity.
        """
        return util.deserialize_model(dikt, cls)
