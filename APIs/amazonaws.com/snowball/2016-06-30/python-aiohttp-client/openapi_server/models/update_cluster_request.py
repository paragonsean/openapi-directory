# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_cluster_request_on_device_service_configuration import CreateClusterRequestOnDeviceServiceConfiguration
from openapi_server.models.shipping_option import ShippingOption
from openapi_server.models.update_cluster_request_notification import UpdateClusterRequestNotification
from openapi_server.models.update_cluster_request_resources import UpdateClusterRequestResources
from openapi_server import util


class UpdateClusterRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_id: str=None, role_arn: str=None, description: str=None, resources: UpdateClusterRequestResources=None, on_device_service_configuration: CreateClusterRequestOnDeviceServiceConfiguration=None, address_id: str=None, shipping_option: ShippingOption=None, notification: UpdateClusterRequestNotification=None, forwarding_address_id: str=None):
        """UpdateClusterRequest - a model defined in OpenAPI

        :param cluster_id: The cluster_id of this UpdateClusterRequest.
        :param role_arn: The role_arn of this UpdateClusterRequest.
        :param description: The description of this UpdateClusterRequest.
        :param resources: The resources of this UpdateClusterRequest.
        :param on_device_service_configuration: The on_device_service_configuration of this UpdateClusterRequest.
        :param address_id: The address_id of this UpdateClusterRequest.
        :param shipping_option: The shipping_option of this UpdateClusterRequest.
        :param notification: The notification of this UpdateClusterRequest.
        :param forwarding_address_id: The forwarding_address_id of this UpdateClusterRequest.
        """
        self.openapi_types = {
            'cluster_id': str,
            'role_arn': str,
            'description': str,
            'resources': UpdateClusterRequestResources,
            'on_device_service_configuration': CreateClusterRequestOnDeviceServiceConfiguration,
            'address_id': str,
            'shipping_option': ShippingOption,
            'notification': UpdateClusterRequestNotification,
            'forwarding_address_id': str
        }

        self.attribute_map = {
            'cluster_id': 'ClusterId',
            'role_arn': 'RoleARN',
            'description': 'Description',
            'resources': 'Resources',
            'on_device_service_configuration': 'OnDeviceServiceConfiguration',
            'address_id': 'AddressId',
            'shipping_option': 'ShippingOption',
            'notification': 'Notification',
            'forwarding_address_id': 'ForwardingAddressId'
        }

        self._cluster_id = cluster_id
        self._role_arn = role_arn
        self._description = description
        self._resources = resources
        self._on_device_service_configuration = on_device_service_configuration
        self._address_id = address_id
        self._shipping_option = shipping_option
        self._notification = notification
        self._forwarding_address_id = forwarding_address_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateClusterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateClusterRequest of this UpdateClusterRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_id(self):
        """Gets the cluster_id of this UpdateClusterRequest.


        :return: The cluster_id of this UpdateClusterRequest.
        :rtype: str
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """Sets the cluster_id of this UpdateClusterRequest.


        :param cluster_id: The cluster_id of this UpdateClusterRequest.
        :type cluster_id: str
        """
        if cluster_id is None:
            raise ValueError("Invalid value for `cluster_id`, must not be `None`")

        self._cluster_id = cluster_id

    @property
    def role_arn(self):
        """Gets the role_arn of this UpdateClusterRequest.


        :return: The role_arn of this UpdateClusterRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this UpdateClusterRequest.


        :param role_arn: The role_arn of this UpdateClusterRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def description(self):
        """Gets the description of this UpdateClusterRequest.


        :return: The description of this UpdateClusterRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateClusterRequest.


        :param description: The description of this UpdateClusterRequest.
        :type description: str
        """

        self._description = description

    @property
    def resources(self):
        """Gets the resources of this UpdateClusterRequest.


        :return: The resources of this UpdateClusterRequest.
        :rtype: UpdateClusterRequestResources
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this UpdateClusterRequest.


        :param resources: The resources of this UpdateClusterRequest.
        :type resources: UpdateClusterRequestResources
        """

        self._resources = resources

    @property
    def on_device_service_configuration(self):
        """Gets the on_device_service_configuration of this UpdateClusterRequest.


        :return: The on_device_service_configuration of this UpdateClusterRequest.
        :rtype: CreateClusterRequestOnDeviceServiceConfiguration
        """
        return self._on_device_service_configuration

    @on_device_service_configuration.setter
    def on_device_service_configuration(self, on_device_service_configuration):
        """Sets the on_device_service_configuration of this UpdateClusterRequest.


        :param on_device_service_configuration: The on_device_service_configuration of this UpdateClusterRequest.
        :type on_device_service_configuration: CreateClusterRequestOnDeviceServiceConfiguration
        """

        self._on_device_service_configuration = on_device_service_configuration

    @property
    def address_id(self):
        """Gets the address_id of this UpdateClusterRequest.


        :return: The address_id of this UpdateClusterRequest.
        :rtype: str
        """
        return self._address_id

    @address_id.setter
    def address_id(self, address_id):
        """Sets the address_id of this UpdateClusterRequest.


        :param address_id: The address_id of this UpdateClusterRequest.
        :type address_id: str
        """

        self._address_id = address_id

    @property
    def shipping_option(self):
        """Gets the shipping_option of this UpdateClusterRequest.


        :return: The shipping_option of this UpdateClusterRequest.
        :rtype: ShippingOption
        """
        return self._shipping_option

    @shipping_option.setter
    def shipping_option(self, shipping_option):
        """Sets the shipping_option of this UpdateClusterRequest.


        :param shipping_option: The shipping_option of this UpdateClusterRequest.
        :type shipping_option: ShippingOption
        """

        self._shipping_option = shipping_option

    @property
    def notification(self):
        """Gets the notification of this UpdateClusterRequest.


        :return: The notification of this UpdateClusterRequest.
        :rtype: UpdateClusterRequestNotification
        """
        return self._notification

    @notification.setter
    def notification(self, notification):
        """Sets the notification of this UpdateClusterRequest.


        :param notification: The notification of this UpdateClusterRequest.
        :type notification: UpdateClusterRequestNotification
        """

        self._notification = notification

    @property
    def forwarding_address_id(self):
        """Gets the forwarding_address_id of this UpdateClusterRequest.


        :return: The forwarding_address_id of this UpdateClusterRequest.
        :rtype: str
        """
        return self._forwarding_address_id

    @forwarding_address_id.setter
    def forwarding_address_id(self, forwarding_address_id):
        """Sets the forwarding_address_id of this UpdateClusterRequest.


        :param forwarding_address_id: The forwarding_address_id of this UpdateClusterRequest.
        :type forwarding_address_id: str
        """

        self._forwarding_address_id = forwarding_address_id
