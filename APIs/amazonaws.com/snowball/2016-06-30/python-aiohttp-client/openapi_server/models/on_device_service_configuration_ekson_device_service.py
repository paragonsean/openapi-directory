# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OnDeviceServiceConfigurationEKSOnDeviceService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kubernetes_version: str=None, eks_anywhere_version: str=None):
        """OnDeviceServiceConfigurationEKSOnDeviceService - a model defined in OpenAPI

        :param kubernetes_version: The kubernetes_version of this OnDeviceServiceConfigurationEKSOnDeviceService.
        :param eks_anywhere_version: The eks_anywhere_version of this OnDeviceServiceConfigurationEKSOnDeviceService.
        """
        self.openapi_types = {
            'kubernetes_version': str,
            'eks_anywhere_version': str
        }

        self.attribute_map = {
            'kubernetes_version': 'KubernetesVersion',
            'eks_anywhere_version': 'EKSAnywhereVersion'
        }

        self._kubernetes_version = kubernetes_version
        self._eks_anywhere_version = eks_anywhere_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnDeviceServiceConfigurationEKSOnDeviceService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OnDeviceServiceConfiguration_EKSOnDeviceService of this OnDeviceServiceConfigurationEKSOnDeviceService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kubernetes_version(self):
        """Gets the kubernetes_version of this OnDeviceServiceConfigurationEKSOnDeviceService.


        :return: The kubernetes_version of this OnDeviceServiceConfigurationEKSOnDeviceService.
        :rtype: str
        """
        return self._kubernetes_version

    @kubernetes_version.setter
    def kubernetes_version(self, kubernetes_version):
        """Sets the kubernetes_version of this OnDeviceServiceConfigurationEKSOnDeviceService.


        :param kubernetes_version: The kubernetes_version of this OnDeviceServiceConfigurationEKSOnDeviceService.
        :type kubernetes_version: str
        """

        self._kubernetes_version = kubernetes_version

    @property
    def eks_anywhere_version(self):
        """Gets the eks_anywhere_version of this OnDeviceServiceConfigurationEKSOnDeviceService.


        :return: The eks_anywhere_version of this OnDeviceServiceConfigurationEKSOnDeviceService.
        :rtype: str
        """
        return self._eks_anywhere_version

    @eks_anywhere_version.setter
    def eks_anywhere_version(self, eks_anywhere_version):
        """Sets the eks_anywhere_version of this OnDeviceServiceConfigurationEKSOnDeviceService.


        :param eks_anywhere_version: The eks_anywhere_version of this OnDeviceServiceConfigurationEKSOnDeviceService.
        :type eks_anywhere_version: str
        """

        self._eks_anywhere_version = eks_anywhere_version
