# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSnowballUsageResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snowball_limit: int=None, snowballs_in_use: int=None):
        """GetSnowballUsageResult - a model defined in OpenAPI

        :param snowball_limit: The snowball_limit of this GetSnowballUsageResult.
        :param snowballs_in_use: The snowballs_in_use of this GetSnowballUsageResult.
        """
        self.openapi_types = {
            'snowball_limit': int,
            'snowballs_in_use': int
        }

        self.attribute_map = {
            'snowball_limit': 'SnowballLimit',
            'snowballs_in_use': 'SnowballsInUse'
        }

        self._snowball_limit = snowball_limit
        self._snowballs_in_use = snowballs_in_use

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSnowballUsageResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSnowballUsageResult of this GetSnowballUsageResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snowball_limit(self):
        """Gets the snowball_limit of this GetSnowballUsageResult.


        :return: The snowball_limit of this GetSnowballUsageResult.
        :rtype: int
        """
        return self._snowball_limit

    @snowball_limit.setter
    def snowball_limit(self, snowball_limit):
        """Sets the snowball_limit of this GetSnowballUsageResult.


        :param snowball_limit: The snowball_limit of this GetSnowballUsageResult.
        :type snowball_limit: int
        """

        self._snowball_limit = snowball_limit

    @property
    def snowballs_in_use(self):
        """Gets the snowballs_in_use of this GetSnowballUsageResult.


        :return: The snowballs_in_use of this GetSnowballUsageResult.
        :rtype: int
        """
        return self._snowballs_in_use

    @snowballs_in_use.setter
    def snowballs_in_use(self, snowballs_in_use):
        """Sets the snowballs_in_use of this GetSnowballUsageResult.


        :param snowballs_in_use: The snowballs_in_use of this GetSnowballUsageResult.
        :type snowballs_in_use: int
        """

        self._snowballs_in_use = snowballs_in_use
