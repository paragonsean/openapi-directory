# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EntityFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_arns: List=None, entity_arns: List=None, entity_values: List=None, last_updated_times: List=None, tags: List=None, status_codes: List=None):
        """EntityFilter - a model defined in OpenAPI

        :param event_arns: The event_arns of this EntityFilter.
        :param entity_arns: The entity_arns of this EntityFilter.
        :param entity_values: The entity_values of this EntityFilter.
        :param last_updated_times: The last_updated_times of this EntityFilter.
        :param tags: The tags of this EntityFilter.
        :param status_codes: The status_codes of this EntityFilter.
        """
        self.openapi_types = {
            'event_arns': List,
            'entity_arns': List,
            'entity_values': List,
            'last_updated_times': List,
            'tags': List,
            'status_codes': List
        }

        self.attribute_map = {
            'event_arns': 'eventArns',
            'entity_arns': 'entityArns',
            'entity_values': 'entityValues',
            'last_updated_times': 'lastUpdatedTimes',
            'tags': 'tags',
            'status_codes': 'statusCodes'
        }

        self._event_arns = event_arns
        self._entity_arns = entity_arns
        self._entity_values = entity_values
        self._last_updated_times = last_updated_times
        self._tags = tags
        self._status_codes = status_codes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityFilter of this EntityFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_arns(self):
        """Gets the event_arns of this EntityFilter.


        :return: The event_arns of this EntityFilter.
        :rtype: List
        """
        return self._event_arns

    @event_arns.setter
    def event_arns(self, event_arns):
        """Sets the event_arns of this EntityFilter.


        :param event_arns: The event_arns of this EntityFilter.
        :type event_arns: List
        """
        if event_arns is None:
            raise ValueError("Invalid value for `event_arns`, must not be `None`")

        self._event_arns = event_arns

    @property
    def entity_arns(self):
        """Gets the entity_arns of this EntityFilter.


        :return: The entity_arns of this EntityFilter.
        :rtype: List
        """
        return self._entity_arns

    @entity_arns.setter
    def entity_arns(self, entity_arns):
        """Sets the entity_arns of this EntityFilter.


        :param entity_arns: The entity_arns of this EntityFilter.
        :type entity_arns: List
        """

        self._entity_arns = entity_arns

    @property
    def entity_values(self):
        """Gets the entity_values of this EntityFilter.


        :return: The entity_values of this EntityFilter.
        :rtype: List
        """
        return self._entity_values

    @entity_values.setter
    def entity_values(self, entity_values):
        """Sets the entity_values of this EntityFilter.


        :param entity_values: The entity_values of this EntityFilter.
        :type entity_values: List
        """

        self._entity_values = entity_values

    @property
    def last_updated_times(self):
        """Gets the last_updated_times of this EntityFilter.


        :return: The last_updated_times of this EntityFilter.
        :rtype: List
        """
        return self._last_updated_times

    @last_updated_times.setter
    def last_updated_times(self, last_updated_times):
        """Sets the last_updated_times of this EntityFilter.


        :param last_updated_times: The last_updated_times of this EntityFilter.
        :type last_updated_times: List
        """

        self._last_updated_times = last_updated_times

    @property
    def tags(self):
        """Gets the tags of this EntityFilter.


        :return: The tags of this EntityFilter.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this EntityFilter.


        :param tags: The tags of this EntityFilter.
        :type tags: List
        """

        self._tags = tags

    @property
    def status_codes(self):
        """Gets the status_codes of this EntityFilter.


        :return: The status_codes of this EntityFilter.
        :rtype: List
        """
        return self._status_codes

    @status_codes.setter
    def status_codes(self, status_codes):
        """Sets the status_codes of this EntityFilter.


        :param status_codes: The status_codes of this EntityFilter.
        :type status_codes: List
        """

        self._status_codes = status_codes
