# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event import Event
from openapi_server.models.event_description import EventDescription
from openapi_server import util


class OrganizationEventDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aws_account_id: str=None, event: Event=None, event_description: EventDescription=None, event_metadata: Dict=None):
        """OrganizationEventDetails - a model defined in OpenAPI

        :param aws_account_id: The aws_account_id of this OrganizationEventDetails.
        :param event: The event of this OrganizationEventDetails.
        :param event_description: The event_description of this OrganizationEventDetails.
        :param event_metadata: The event_metadata of this OrganizationEventDetails.
        """
        self.openapi_types = {
            'aws_account_id': str,
            'event': Event,
            'event_description': EventDescription,
            'event_metadata': Dict
        }

        self.attribute_map = {
            'aws_account_id': 'awsAccountId',
            'event': 'event',
            'event_description': 'eventDescription',
            'event_metadata': 'eventMetadata'
        }

        self._aws_account_id = aws_account_id
        self._event = event
        self._event_description = event_description
        self._event_metadata = event_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationEventDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationEventDetails of this OrganizationEventDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aws_account_id(self):
        """Gets the aws_account_id of this OrganizationEventDetails.


        :return: The aws_account_id of this OrganizationEventDetails.
        :rtype: str
        """
        return self._aws_account_id

    @aws_account_id.setter
    def aws_account_id(self, aws_account_id):
        """Sets the aws_account_id of this OrganizationEventDetails.


        :param aws_account_id: The aws_account_id of this OrganizationEventDetails.
        :type aws_account_id: str
        """

        self._aws_account_id = aws_account_id

    @property
    def event(self):
        """Gets the event of this OrganizationEventDetails.


        :return: The event of this OrganizationEventDetails.
        :rtype: Event
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this OrganizationEventDetails.


        :param event: The event of this OrganizationEventDetails.
        :type event: Event
        """

        self._event = event

    @property
    def event_description(self):
        """Gets the event_description of this OrganizationEventDetails.


        :return: The event_description of this OrganizationEventDetails.
        :rtype: EventDescription
        """
        return self._event_description

    @event_description.setter
    def event_description(self, event_description):
        """Sets the event_description of this OrganizationEventDetails.


        :param event_description: The event_description of this OrganizationEventDetails.
        :type event_description: EventDescription
        """

        self._event_description = event_description

    @property
    def event_metadata(self):
        """Gets the event_metadata of this OrganizationEventDetails.


        :return: The event_metadata of this OrganizationEventDetails.
        :rtype: Dict
        """
        return self._event_metadata

    @event_metadata.setter
    def event_metadata(self, event_metadata):
        """Sets the event_metadata of this OrganizationEventDetails.


        :param event_metadata: The event_metadata of this OrganizationEventDetails.
        :type event_metadata: Dict
        """

        self._event_metadata = event_metadata
