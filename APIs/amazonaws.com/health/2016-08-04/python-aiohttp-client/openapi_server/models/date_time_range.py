# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DateTimeRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _from: datetime=None, to: datetime=None):
        """DateTimeRange - a model defined in OpenAPI

        :param _from: The _from of this DateTimeRange.
        :param to: The to of this DateTimeRange.
        """
        self.openapi_types = {
            '_from': datetime,
            'to': datetime
        }

        self.attribute_map = {
            '_from': 'from',
            'to': 'to'
        }

        self.__from = _from
        self._to = to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DateTimeRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DateTimeRange of this DateTimeRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _from(self):
        """Gets the _from of this DateTimeRange.


        :return: The _from of this DateTimeRange.
        :rtype: datetime
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this DateTimeRange.


        :param _from: The _from of this DateTimeRange.
        :type _from: datetime
        """

        self.__from = _from

    @property
    def to(self):
        """Gets the to of this DateTimeRange.


        :return: The to of this DateTimeRange.
        :rtype: datetime
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this DateTimeRange.


        :param to: The to of this DateTimeRange.
        :type to: datetime
        """

        self._to = to
