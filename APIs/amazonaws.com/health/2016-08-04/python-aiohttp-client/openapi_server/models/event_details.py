# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_details_event import EventDetailsEvent
from openapi_server.models.event_details_event_description import EventDetailsEventDescription
from openapi_server import util


class EventDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event: EventDetailsEvent=None, event_description: EventDetailsEventDescription=None, event_metadata: Dict=None):
        """EventDetails - a model defined in OpenAPI

        :param event: The event of this EventDetails.
        :param event_description: The event_description of this EventDetails.
        :param event_metadata: The event_metadata of this EventDetails.
        """
        self.openapi_types = {
            'event': EventDetailsEvent,
            'event_description': EventDetailsEventDescription,
            'event_metadata': Dict
        }

        self.attribute_map = {
            'event': 'event',
            'event_description': 'eventDescription',
            'event_metadata': 'eventMetadata'
        }

        self._event = event
        self._event_description = event_description
        self._event_metadata = event_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventDetails of this EventDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event(self):
        """Gets the event of this EventDetails.


        :return: The event of this EventDetails.
        :rtype: EventDetailsEvent
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this EventDetails.


        :param event: The event of this EventDetails.
        :type event: EventDetailsEvent
        """

        self._event = event

    @property
    def event_description(self):
        """Gets the event_description of this EventDetails.


        :return: The event_description of this EventDetails.
        :rtype: EventDetailsEventDescription
        """
        return self._event_description

    @event_description.setter
    def event_description(self, event_description):
        """Sets the event_description of this EventDetails.


        :param event_description: The event_description of this EventDetails.
        :type event_description: EventDetailsEventDescription
        """

        self._event_description = event_description

    @property
    def event_metadata(self):
        """Gets the event_metadata of this EventDetails.


        :return: The event_metadata of this EventDetails.
        :rtype: Dict
        """
        return self._event_metadata

    @event_metadata.setter
    def event_metadata(self, event_metadata):
        """Sets the event_metadata of this EventDetails.


        :param event_metadata: The event_metadata of this EventDetails.
        :type event_metadata: Dict
        """

        self._event_metadata = event_metadata
