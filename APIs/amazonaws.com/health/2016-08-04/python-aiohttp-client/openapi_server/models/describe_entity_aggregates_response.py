# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeEntityAggregatesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_aggregates: List=None):
        """DescribeEntityAggregatesResponse - a model defined in OpenAPI

        :param entity_aggregates: The entity_aggregates of this DescribeEntityAggregatesResponse.
        """
        self.openapi_types = {
            'entity_aggregates': List
        }

        self.attribute_map = {
            'entity_aggregates': 'entityAggregates'
        }

        self._entity_aggregates = entity_aggregates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEntityAggregatesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEntityAggregatesResponse of this DescribeEntityAggregatesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_aggregates(self):
        """Gets the entity_aggregates of this DescribeEntityAggregatesResponse.


        :return: The entity_aggregates of this DescribeEntityAggregatesResponse.
        :rtype: List
        """
        return self._entity_aggregates

    @entity_aggregates.setter
    def entity_aggregates(self, entity_aggregates):
        """Sets the entity_aggregates of this DescribeEntityAggregatesResponse.


        :param entity_aggregates: The entity_aggregates of this DescribeEntityAggregatesResponse.
        :type entity_aggregates: List
        """

        self._entity_aggregates = entity_aggregates
