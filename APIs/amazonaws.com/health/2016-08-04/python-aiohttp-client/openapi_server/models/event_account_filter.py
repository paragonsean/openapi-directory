# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventAccountFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_arn: str=None, aws_account_id: str=None):
        """EventAccountFilter - a model defined in OpenAPI

        :param event_arn: The event_arn of this EventAccountFilter.
        :param aws_account_id: The aws_account_id of this EventAccountFilter.
        """
        self.openapi_types = {
            'event_arn': str,
            'aws_account_id': str
        }

        self.attribute_map = {
            'event_arn': 'eventArn',
            'aws_account_id': 'awsAccountId'
        }

        self._event_arn = event_arn
        self._aws_account_id = aws_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventAccountFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventAccountFilter of this EventAccountFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_arn(self):
        """Gets the event_arn of this EventAccountFilter.


        :return: The event_arn of this EventAccountFilter.
        :rtype: str
        """
        return self._event_arn

    @event_arn.setter
    def event_arn(self, event_arn):
        """Sets the event_arn of this EventAccountFilter.


        :param event_arn: The event_arn of this EventAccountFilter.
        :type event_arn: str
        """
        if event_arn is None:
            raise ValueError("Invalid value for `event_arn`, must not be `None`")

        self._event_arn = event_arn

    @property
    def aws_account_id(self):
        """Gets the aws_account_id of this EventAccountFilter.


        :return: The aws_account_id of this EventAccountFilter.
        :rtype: str
        """
        return self._aws_account_id

    @aws_account_id.setter
    def aws_account_id(self, aws_account_id):
        """Sets the aws_account_id of this EventAccountFilter.


        :param aws_account_id: The aws_account_id of this EventAccountFilter.
        :type aws_account_id: str
        """

        self._aws_account_id = aws_account_id
