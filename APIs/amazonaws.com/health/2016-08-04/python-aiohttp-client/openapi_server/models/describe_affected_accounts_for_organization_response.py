# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_scope_code import EventScopeCode
from openapi_server import util


class DescribeAffectedAccountsForOrganizationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, affected_accounts: List=None, event_scope_code: EventScopeCode=None, next_token: str=None):
        """DescribeAffectedAccountsForOrganizationResponse - a model defined in OpenAPI

        :param affected_accounts: The affected_accounts of this DescribeAffectedAccountsForOrganizationResponse.
        :param event_scope_code: The event_scope_code of this DescribeAffectedAccountsForOrganizationResponse.
        :param next_token: The next_token of this DescribeAffectedAccountsForOrganizationResponse.
        """
        self.openapi_types = {
            'affected_accounts': List,
            'event_scope_code': EventScopeCode,
            'next_token': str
        }

        self.attribute_map = {
            'affected_accounts': 'affectedAccounts',
            'event_scope_code': 'eventScopeCode',
            'next_token': 'nextToken'
        }

        self._affected_accounts = affected_accounts
        self._event_scope_code = event_scope_code
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAffectedAccountsForOrganizationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAffectedAccountsForOrganizationResponse of this DescribeAffectedAccountsForOrganizationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def affected_accounts(self):
        """Gets the affected_accounts of this DescribeAffectedAccountsForOrganizationResponse.


        :return: The affected_accounts of this DescribeAffectedAccountsForOrganizationResponse.
        :rtype: List
        """
        return self._affected_accounts

    @affected_accounts.setter
    def affected_accounts(self, affected_accounts):
        """Sets the affected_accounts of this DescribeAffectedAccountsForOrganizationResponse.


        :param affected_accounts: The affected_accounts of this DescribeAffectedAccountsForOrganizationResponse.
        :type affected_accounts: List
        """

        self._affected_accounts = affected_accounts

    @property
    def event_scope_code(self):
        """Gets the event_scope_code of this DescribeAffectedAccountsForOrganizationResponse.


        :return: The event_scope_code of this DescribeAffectedAccountsForOrganizationResponse.
        :rtype: EventScopeCode
        """
        return self._event_scope_code

    @event_scope_code.setter
    def event_scope_code(self, event_scope_code):
        """Sets the event_scope_code of this DescribeAffectedAccountsForOrganizationResponse.


        :param event_scope_code: The event_scope_code of this DescribeAffectedAccountsForOrganizationResponse.
        :type event_scope_code: EventScopeCode
        """

        self._event_scope_code = event_scope_code

    @property
    def next_token(self):
        """Gets the next_token of this DescribeAffectedAccountsForOrganizationResponse.


        :return: The next_token of this DescribeAffectedAccountsForOrganizationResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeAffectedAccountsForOrganizationResponse.


        :param next_token: The next_token of this DescribeAffectedAccountsForOrganizationResponse.
        :type next_token: str
        """

        self._next_token = next_token
