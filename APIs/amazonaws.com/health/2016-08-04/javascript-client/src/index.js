/**
 * AWS Health APIs and Notifications
 * <fullname>Health</fullname> <p>The Health API provides access to the Health information that appears in the <a href=\"https://health.aws.amazon.com/health/home\">Health Dashboard</a>. You can use the API operations to get information about events that might affect your Amazon Web Services and resources.</p> <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan from <a href=\"http://aws.amazon.com/premiumsupport/\">Amazon Web Services Support</a> to use the Health API. If you call the Health API from an Amazon Web Services account that doesn't have a Business, Enterprise On-Ramp, or Enterprise Support plan, you receive a <code>SubscriptionRequiredException</code> error.</p> <p>For API access, you need an access key ID and a secret access key. Use temporary credentials instead of long-term access keys when possible. Temporary credentials include an access key ID, a secret access key, and a security token that indicates when the credentials expire. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html\">Best practices for managing Amazon Web Services access keys</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can use the Health endpoint health.us-east-1.amazonaws.com (HTTPS) to call the Health API operations. Health supports a multi-Region application architecture and has two regional endpoints in an active-passive configuration. You can use the high availability endpoint example to determine which Amazon Web Services Region is active, so that you can get the latest information from the API. For more information, see <a href=\"https://docs.aws.amazon.com/health/latest/ug/health-api.html\">Accessing the Health API</a> in the <i>Health User Guide</i>.</p> <p>For authentication of requests, Health uses the <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>.</p> <p>If your Amazon Web Services account is part of Organizations, you can use the Health organizational view feature. This feature provides a centralized view of Health events across all accounts in your organization. You can aggregate Health events in real time to identify accounts in your organization that are affected by an operational event or get notified of security vulnerabilities. Use the organizational view API operations to enable this feature and return event information. For more information, see <a href=\"https://docs.aws.amazon.com/health/latest/ug/aggregate-events.html\">Aggregating Health events</a> in the <i>Health User Guide</i>.</p> <note> <p>When you use the Health API operations to return Health events, see the following recommendations:</p> <ul> <li> <p>Use the <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html#AWSHealth-Type-Event-eventScopeCode\">eventScopeCode</a> parameter to specify whether to return Health events that are public or account-specific.</p> </li> <li> <p>Use pagination to view all events from the response. For example, if you call the <code>DescribeEventsForOrganization</code> operation to get all events in your organization, you might receive several page results. Specify the <code>nextToken</code> in the next request to return more results.</p> </li> </ul> </note>
 *
 * The version of the OpenAPI document: 2016-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AffectedEntity from './model/AffectedEntity';
import DateTimeRange from './model/DateTimeRange';
import DescribeAffectedAccountsForOrganizationRequest from './model/DescribeAffectedAccountsForOrganizationRequest';
import DescribeAffectedAccountsForOrganizationResponse from './model/DescribeAffectedAccountsForOrganizationResponse';
import DescribeAffectedEntitiesForOrganizationRequest from './model/DescribeAffectedEntitiesForOrganizationRequest';
import DescribeAffectedEntitiesForOrganizationResponse from './model/DescribeAffectedEntitiesForOrganizationResponse';
import DescribeAffectedEntitiesRequest from './model/DescribeAffectedEntitiesRequest';
import DescribeAffectedEntitiesRequestFilter from './model/DescribeAffectedEntitiesRequestFilter';
import DescribeAffectedEntitiesResponse from './model/DescribeAffectedEntitiesResponse';
import DescribeEntityAggregatesRequest from './model/DescribeEntityAggregatesRequest';
import DescribeEntityAggregatesResponse from './model/DescribeEntityAggregatesResponse';
import DescribeEventAggregatesRequest from './model/DescribeEventAggregatesRequest';
import DescribeEventAggregatesRequestFilter from './model/DescribeEventAggregatesRequestFilter';
import DescribeEventAggregatesResponse from './model/DescribeEventAggregatesResponse';
import DescribeEventDetailsForOrganizationRequest from './model/DescribeEventDetailsForOrganizationRequest';
import DescribeEventDetailsForOrganizationResponse from './model/DescribeEventDetailsForOrganizationResponse';
import DescribeEventDetailsRequest from './model/DescribeEventDetailsRequest';
import DescribeEventDetailsResponse from './model/DescribeEventDetailsResponse';
import DescribeEventTypesRequest from './model/DescribeEventTypesRequest';
import DescribeEventTypesRequestFilter from './model/DescribeEventTypesRequestFilter';
import DescribeEventTypesResponse from './model/DescribeEventTypesResponse';
import DescribeEventsForOrganizationRequest from './model/DescribeEventsForOrganizationRequest';
import DescribeEventsForOrganizationRequestFilter from './model/DescribeEventsForOrganizationRequestFilter';
import DescribeEventsForOrganizationResponse from './model/DescribeEventsForOrganizationResponse';
import DescribeEventsRequest from './model/DescribeEventsRequest';
import DescribeEventsResponse from './model/DescribeEventsResponse';
import DescribeHealthServiceStatusForOrganizationResponse from './model/DescribeHealthServiceStatusForOrganizationResponse';
import EntityAggregate from './model/EntityAggregate';
import EntityFilter from './model/EntityFilter';
import EntityStatusCode from './model/EntityStatusCode';
import Event from './model/Event';
import EventAccountFilter from './model/EventAccountFilter';
import EventAggregate from './model/EventAggregate';
import EventAggregateField from './model/EventAggregateField';
import EventDescription from './model/EventDescription';
import EventDetails from './model/EventDetails';
import EventDetailsErrorItem from './model/EventDetailsErrorItem';
import EventDetailsEvent from './model/EventDetailsEvent';
import EventDetailsEventDescription from './model/EventDetailsEventDescription';
import EventFilter from './model/EventFilter';
import EventScopeCode from './model/EventScopeCode';
import EventStatusCode from './model/EventStatusCode';
import EventTypeCategory from './model/EventTypeCategory';
import EventTypeFilter from './model/EventTypeFilter';
import OrganizationAffectedEntitiesErrorItem from './model/OrganizationAffectedEntitiesErrorItem';
import OrganizationEvent from './model/OrganizationEvent';
import OrganizationEventDetails from './model/OrganizationEventDetails';
import OrganizationEventDetailsErrorItem from './model/OrganizationEventDetailsErrorItem';
import OrganizationEventFilter from './model/OrganizationEventFilter';
import DefaultApi from './api/DefaultApi';


/**
* &lt;fullname&gt;Health&lt;/fullname&gt; &lt;p&gt;The Health API provides access to the Health information that appears in the &lt;a href&#x3D;\&quot;https://health.aws.amazon.com/health/home\&quot;&gt;Health Dashboard&lt;/a&gt;. You can use the API operations to get information about events that might affect your Amazon Web Services and resources.&lt;/p&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan from &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt; to use the Health API. If you call the Health API from an Amazon Web Services account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, you receive a &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error.&lt;/p&gt; &lt;p&gt;For API access, you need an access key ID and a secret access key. Use temporary credentials instead of long-term access keys when possible. Temporary credentials include an access key ID, a secret access key, and a security token that indicates when the credentials expire. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html\&quot;&gt;Best practices for managing Amazon Web Services access keys&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;You can use the Health endpoint health.us-east-1.amazonaws.com (HTTPS) to call the Health API operations. Health supports a multi-Region application architecture and has two regional endpoints in an active-passive configuration. You can use the high availability endpoint example to determine which Amazon Web Services Region is active, so that you can get the latest information from the API. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/health/latest/ug/health-api.html\&quot;&gt;Accessing the Health API&lt;/a&gt; in the &lt;i&gt;Health User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For authentication of requests, Health uses the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\&quot;&gt;Signature Version 4 Signing Process&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If your Amazon Web Services account is part of Organizations, you can use the Health organizational view feature. This feature provides a centralized view of Health events across all accounts in your organization. You can aggregate Health events in real time to identify accounts in your organization that are affected by an operational event or get notified of security vulnerabilities. Use the organizational view API operations to enable this feature and return event information. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/health/latest/ug/aggregate-events.html\&quot;&gt;Aggregating Health events&lt;/a&gt; in the &lt;i&gt;Health User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;When you use the Health API operations to return Health events, see the following recommendations:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html#AWSHealth-Type-Event-eventScopeCode\&quot;&gt;eventScopeCode&lt;/a&gt; parameter to specify whether to return Health events that are public or account-specific.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use pagination to view all events from the response. For example, if you call the &lt;code&gt;DescribeEventsForOrganization&lt;/code&gt; operation to get all events in your organization, you might receive several page results. Specify the &lt;code&gt;nextToken&lt;/code&gt; in the next request to return more results.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsHealthApisAndNotifications = require('index'); // See note below*.
* var xxxSvc = new AwsHealthApisAndNotifications.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsHealthApisAndNotifications.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsHealthApisAndNotifications.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsHealthApisAndNotifications.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-08-04
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AffectedEntity model constructor.
     * @property {module:model/AffectedEntity}
     */
    AffectedEntity,

    /**
     * The DateTimeRange model constructor.
     * @property {module:model/DateTimeRange}
     */
    DateTimeRange,

    /**
     * The DescribeAffectedAccountsForOrganizationRequest model constructor.
     * @property {module:model/DescribeAffectedAccountsForOrganizationRequest}
     */
    DescribeAffectedAccountsForOrganizationRequest,

    /**
     * The DescribeAffectedAccountsForOrganizationResponse model constructor.
     * @property {module:model/DescribeAffectedAccountsForOrganizationResponse}
     */
    DescribeAffectedAccountsForOrganizationResponse,

    /**
     * The DescribeAffectedEntitiesForOrganizationRequest model constructor.
     * @property {module:model/DescribeAffectedEntitiesForOrganizationRequest}
     */
    DescribeAffectedEntitiesForOrganizationRequest,

    /**
     * The DescribeAffectedEntitiesForOrganizationResponse model constructor.
     * @property {module:model/DescribeAffectedEntitiesForOrganizationResponse}
     */
    DescribeAffectedEntitiesForOrganizationResponse,

    /**
     * The DescribeAffectedEntitiesRequest model constructor.
     * @property {module:model/DescribeAffectedEntitiesRequest}
     */
    DescribeAffectedEntitiesRequest,

    /**
     * The DescribeAffectedEntitiesRequestFilter model constructor.
     * @property {module:model/DescribeAffectedEntitiesRequestFilter}
     */
    DescribeAffectedEntitiesRequestFilter,

    /**
     * The DescribeAffectedEntitiesResponse model constructor.
     * @property {module:model/DescribeAffectedEntitiesResponse}
     */
    DescribeAffectedEntitiesResponse,

    /**
     * The DescribeEntityAggregatesRequest model constructor.
     * @property {module:model/DescribeEntityAggregatesRequest}
     */
    DescribeEntityAggregatesRequest,

    /**
     * The DescribeEntityAggregatesResponse model constructor.
     * @property {module:model/DescribeEntityAggregatesResponse}
     */
    DescribeEntityAggregatesResponse,

    /**
     * The DescribeEventAggregatesRequest model constructor.
     * @property {module:model/DescribeEventAggregatesRequest}
     */
    DescribeEventAggregatesRequest,

    /**
     * The DescribeEventAggregatesRequestFilter model constructor.
     * @property {module:model/DescribeEventAggregatesRequestFilter}
     */
    DescribeEventAggregatesRequestFilter,

    /**
     * The DescribeEventAggregatesResponse model constructor.
     * @property {module:model/DescribeEventAggregatesResponse}
     */
    DescribeEventAggregatesResponse,

    /**
     * The DescribeEventDetailsForOrganizationRequest model constructor.
     * @property {module:model/DescribeEventDetailsForOrganizationRequest}
     */
    DescribeEventDetailsForOrganizationRequest,

    /**
     * The DescribeEventDetailsForOrganizationResponse model constructor.
     * @property {module:model/DescribeEventDetailsForOrganizationResponse}
     */
    DescribeEventDetailsForOrganizationResponse,

    /**
     * The DescribeEventDetailsRequest model constructor.
     * @property {module:model/DescribeEventDetailsRequest}
     */
    DescribeEventDetailsRequest,

    /**
     * The DescribeEventDetailsResponse model constructor.
     * @property {module:model/DescribeEventDetailsResponse}
     */
    DescribeEventDetailsResponse,

    /**
     * The DescribeEventTypesRequest model constructor.
     * @property {module:model/DescribeEventTypesRequest}
     */
    DescribeEventTypesRequest,

    /**
     * The DescribeEventTypesRequestFilter model constructor.
     * @property {module:model/DescribeEventTypesRequestFilter}
     */
    DescribeEventTypesRequestFilter,

    /**
     * The DescribeEventTypesResponse model constructor.
     * @property {module:model/DescribeEventTypesResponse}
     */
    DescribeEventTypesResponse,

    /**
     * The DescribeEventsForOrganizationRequest model constructor.
     * @property {module:model/DescribeEventsForOrganizationRequest}
     */
    DescribeEventsForOrganizationRequest,

    /**
     * The DescribeEventsForOrganizationRequestFilter model constructor.
     * @property {module:model/DescribeEventsForOrganizationRequestFilter}
     */
    DescribeEventsForOrganizationRequestFilter,

    /**
     * The DescribeEventsForOrganizationResponse model constructor.
     * @property {module:model/DescribeEventsForOrganizationResponse}
     */
    DescribeEventsForOrganizationResponse,

    /**
     * The DescribeEventsRequest model constructor.
     * @property {module:model/DescribeEventsRequest}
     */
    DescribeEventsRequest,

    /**
     * The DescribeEventsResponse model constructor.
     * @property {module:model/DescribeEventsResponse}
     */
    DescribeEventsResponse,

    /**
     * The DescribeHealthServiceStatusForOrganizationResponse model constructor.
     * @property {module:model/DescribeHealthServiceStatusForOrganizationResponse}
     */
    DescribeHealthServiceStatusForOrganizationResponse,

    /**
     * The EntityAggregate model constructor.
     * @property {module:model/EntityAggregate}
     */
    EntityAggregate,

    /**
     * The EntityFilter model constructor.
     * @property {module:model/EntityFilter}
     */
    EntityFilter,

    /**
     * The EntityStatusCode model constructor.
     * @property {module:model/EntityStatusCode}
     */
    EntityStatusCode,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventAccountFilter model constructor.
     * @property {module:model/EventAccountFilter}
     */
    EventAccountFilter,

    /**
     * The EventAggregate model constructor.
     * @property {module:model/EventAggregate}
     */
    EventAggregate,

    /**
     * The EventAggregateField model constructor.
     * @property {module:model/EventAggregateField}
     */
    EventAggregateField,

    /**
     * The EventDescription model constructor.
     * @property {module:model/EventDescription}
     */
    EventDescription,

    /**
     * The EventDetails model constructor.
     * @property {module:model/EventDetails}
     */
    EventDetails,

    /**
     * The EventDetailsErrorItem model constructor.
     * @property {module:model/EventDetailsErrorItem}
     */
    EventDetailsErrorItem,

    /**
     * The EventDetailsEvent model constructor.
     * @property {module:model/EventDetailsEvent}
     */
    EventDetailsEvent,

    /**
     * The EventDetailsEventDescription model constructor.
     * @property {module:model/EventDetailsEventDescription}
     */
    EventDetailsEventDescription,

    /**
     * The EventFilter model constructor.
     * @property {module:model/EventFilter}
     */
    EventFilter,

    /**
     * The EventScopeCode model constructor.
     * @property {module:model/EventScopeCode}
     */
    EventScopeCode,

    /**
     * The EventStatusCode model constructor.
     * @property {module:model/EventStatusCode}
     */
    EventStatusCode,

    /**
     * The EventTypeCategory model constructor.
     * @property {module:model/EventTypeCategory}
     */
    EventTypeCategory,

    /**
     * The EventTypeFilter model constructor.
     * @property {module:model/EventTypeFilter}
     */
    EventTypeFilter,

    /**
     * The OrganizationAffectedEntitiesErrorItem model constructor.
     * @property {module:model/OrganizationAffectedEntitiesErrorItem}
     */
    OrganizationAffectedEntitiesErrorItem,

    /**
     * The OrganizationEvent model constructor.
     * @property {module:model/OrganizationEvent}
     */
    OrganizationEvent,

    /**
     * The OrganizationEventDetails model constructor.
     * @property {module:model/OrganizationEventDetails}
     */
    OrganizationEventDetails,

    /**
     * The OrganizationEventDetailsErrorItem model constructor.
     * @property {module:model/OrganizationEventDetailsErrorItem}
     */
    OrganizationEventDetailsErrorItem,

    /**
     * The OrganizationEventFilter model constructor.
     * @property {module:model/OrganizationEventFilter}
     */
    OrganizationEventFilter,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
