# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_error_code import EventErrorCode
from openapi_server.models.event_name import EventName
from openapi_server import util


class Event(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_code: EventErrorCode=None, event_time: datetime=None, name: EventName=None, participant_id: str=None, remote_participant_id: str=None):
        """Event - a model defined in OpenAPI

        :param error_code: The error_code of this Event.
        :param event_time: The event_time of this Event.
        :param name: The name of this Event.
        :param participant_id: The participant_id of this Event.
        :param remote_participant_id: The remote_participant_id of this Event.
        """
        self.openapi_types = {
            'error_code': EventErrorCode,
            'event_time': datetime,
            'name': EventName,
            'participant_id': str,
            'remote_participant_id': str
        }

        self.attribute_map = {
            'error_code': 'errorCode',
            'event_time': 'eventTime',
            'name': 'name',
            'participant_id': 'participantId',
            'remote_participant_id': 'remoteParticipantId'
        }

        self._error_code = error_code
        self._event_time = event_time
        self._name = name
        self._participant_id = participant_id
        self._remote_participant_id = remote_participant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Event':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Event of this Event.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_code(self):
        """Gets the error_code of this Event.


        :return: The error_code of this Event.
        :rtype: EventErrorCode
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this Event.


        :param error_code: The error_code of this Event.
        :type error_code: EventErrorCode
        """

        self._error_code = error_code

    @property
    def event_time(self):
        """Gets the event_time of this Event.


        :return: The event_time of this Event.
        :rtype: datetime
        """
        return self._event_time

    @event_time.setter
    def event_time(self, event_time):
        """Sets the event_time of this Event.


        :param event_time: The event_time of this Event.
        :type event_time: datetime
        """

        self._event_time = event_time

    @property
    def name(self):
        """Gets the name of this Event.


        :return: The name of this Event.
        :rtype: EventName
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Event.


        :param name: The name of this Event.
        :type name: EventName
        """

        self._name = name

    @property
    def participant_id(self):
        """Gets the participant_id of this Event.


        :return: The participant_id of this Event.
        :rtype: str
        """
        return self._participant_id

    @participant_id.setter
    def participant_id(self, participant_id):
        """Sets the participant_id of this Event.


        :param participant_id: The participant_id of this Event.
        :type participant_id: str
        """

        self._participant_id = participant_id

    @property
    def remote_participant_id(self):
        """Gets the remote_participant_id of this Event.


        :return: The remote_participant_id of this Event.
        :rtype: str
        """
        return self._remote_participant_id

    @remote_participant_id.setter
    def remote_participant_id(self, remote_participant_id):
        """Sets the remote_participant_id of this Event.


        :param remote_participant_id: The remote_participant_id of this Event.
        :type remote_participant_id: str
        """

        self._remote_participant_id = remote_participant_id
