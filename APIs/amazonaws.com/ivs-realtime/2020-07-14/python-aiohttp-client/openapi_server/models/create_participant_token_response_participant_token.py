# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateParticipantTokenResponseParticipantToken(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: Dict=None, capabilities: List=None, duration: int=None, expiration_time: datetime=None, participant_id: str=None, token: str=None, user_id: str=None):
        """CreateParticipantTokenResponseParticipantToken - a model defined in OpenAPI

        :param attributes: The attributes of this CreateParticipantTokenResponseParticipantToken.
        :param capabilities: The capabilities of this CreateParticipantTokenResponseParticipantToken.
        :param duration: The duration of this CreateParticipantTokenResponseParticipantToken.
        :param expiration_time: The expiration_time of this CreateParticipantTokenResponseParticipantToken.
        :param participant_id: The participant_id of this CreateParticipantTokenResponseParticipantToken.
        :param token: The token of this CreateParticipantTokenResponseParticipantToken.
        :param user_id: The user_id of this CreateParticipantTokenResponseParticipantToken.
        """
        self.openapi_types = {
            'attributes': Dict,
            'capabilities': List,
            'duration': int,
            'expiration_time': datetime,
            'participant_id': str,
            'token': str,
            'user_id': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'capabilities': 'capabilities',
            'duration': 'duration',
            'expiration_time': 'expirationTime',
            'participant_id': 'participantId',
            'token': 'token',
            'user_id': 'userId'
        }

        self._attributes = attributes
        self._capabilities = capabilities
        self._duration = duration
        self._expiration_time = expiration_time
        self._participant_id = participant_id
        self._token = token
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateParticipantTokenResponseParticipantToken':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateParticipantTokenResponse_participantToken of this CreateParticipantTokenResponseParticipantToken.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this CreateParticipantTokenResponseParticipantToken.


        :return: The attributes of this CreateParticipantTokenResponseParticipantToken.
        :rtype: Dict
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this CreateParticipantTokenResponseParticipantToken.


        :param attributes: The attributes of this CreateParticipantTokenResponseParticipantToken.
        :type attributes: Dict
        """

        self._attributes = attributes

    @property
    def capabilities(self):
        """Gets the capabilities of this CreateParticipantTokenResponseParticipantToken.


        :return: The capabilities of this CreateParticipantTokenResponseParticipantToken.
        :rtype: List
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this CreateParticipantTokenResponseParticipantToken.


        :param capabilities: The capabilities of this CreateParticipantTokenResponseParticipantToken.
        :type capabilities: List
        """

        self._capabilities = capabilities

    @property
    def duration(self):
        """Gets the duration of this CreateParticipantTokenResponseParticipantToken.


        :return: The duration of this CreateParticipantTokenResponseParticipantToken.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this CreateParticipantTokenResponseParticipantToken.


        :param duration: The duration of this CreateParticipantTokenResponseParticipantToken.
        :type duration: int
        """

        self._duration = duration

    @property
    def expiration_time(self):
        """Gets the expiration_time of this CreateParticipantTokenResponseParticipantToken.


        :return: The expiration_time of this CreateParticipantTokenResponseParticipantToken.
        :rtype: datetime
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this CreateParticipantTokenResponseParticipantToken.


        :param expiration_time: The expiration_time of this CreateParticipantTokenResponseParticipantToken.
        :type expiration_time: datetime
        """

        self._expiration_time = expiration_time

    @property
    def participant_id(self):
        """Gets the participant_id of this CreateParticipantTokenResponseParticipantToken.


        :return: The participant_id of this CreateParticipantTokenResponseParticipantToken.
        :rtype: str
        """
        return self._participant_id

    @participant_id.setter
    def participant_id(self, participant_id):
        """Sets the participant_id of this CreateParticipantTokenResponseParticipantToken.


        :param participant_id: The participant_id of this CreateParticipantTokenResponseParticipantToken.
        :type participant_id: str
        """

        self._participant_id = participant_id

    @property
    def token(self):
        """Gets the token of this CreateParticipantTokenResponseParticipantToken.


        :return: The token of this CreateParticipantTokenResponseParticipantToken.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this CreateParticipantTokenResponseParticipantToken.


        :param token: The token of this CreateParticipantTokenResponseParticipantToken.
        :type token: str
        """

        self._token = token

    @property
    def user_id(self):
        """Gets the user_id of this CreateParticipantTokenResponseParticipantToken.


        :return: The user_id of this CreateParticipantTokenResponseParticipantToken.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this CreateParticipantTokenResponseParticipantToken.


        :param user_id: The user_id of this CreateParticipantTokenResponseParticipantToken.
        :type user_id: str
        """

        self._user_id = user_id
