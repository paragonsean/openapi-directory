# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ParticipantTokenConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: Dict=None, capabilities: List=None, duration: int=None, user_id: str=None):
        """ParticipantTokenConfiguration - a model defined in OpenAPI

        :param attributes: The attributes of this ParticipantTokenConfiguration.
        :param capabilities: The capabilities of this ParticipantTokenConfiguration.
        :param duration: The duration of this ParticipantTokenConfiguration.
        :param user_id: The user_id of this ParticipantTokenConfiguration.
        """
        self.openapi_types = {
            'attributes': Dict,
            'capabilities': List,
            'duration': int,
            'user_id': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'capabilities': 'capabilities',
            'duration': 'duration',
            'user_id': 'userId'
        }

        self._attributes = attributes
        self._capabilities = capabilities
        self._duration = duration
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParticipantTokenConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParticipantTokenConfiguration of this ParticipantTokenConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this ParticipantTokenConfiguration.


        :return: The attributes of this ParticipantTokenConfiguration.
        :rtype: Dict
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ParticipantTokenConfiguration.


        :param attributes: The attributes of this ParticipantTokenConfiguration.
        :type attributes: Dict
        """

        self._attributes = attributes

    @property
    def capabilities(self):
        """Gets the capabilities of this ParticipantTokenConfiguration.


        :return: The capabilities of this ParticipantTokenConfiguration.
        :rtype: List
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this ParticipantTokenConfiguration.


        :param capabilities: The capabilities of this ParticipantTokenConfiguration.
        :type capabilities: List
        """

        self._capabilities = capabilities

    @property
    def duration(self):
        """Gets the duration of this ParticipantTokenConfiguration.


        :return: The duration of this ParticipantTokenConfiguration.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ParticipantTokenConfiguration.


        :param duration: The duration of this ParticipantTokenConfiguration.
        :type duration: int
        """

        self._duration = duration

    @property
    def user_id(self):
        """Gets the user_id of this ParticipantTokenConfiguration.


        :return: The user_id of this ParticipantTokenConfiguration.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ParticipantTokenConfiguration.


        :param user_id: The user_id of this ParticipantTokenConfiguration.
        :type user_id: str
        """

        self._user_id = user_id
