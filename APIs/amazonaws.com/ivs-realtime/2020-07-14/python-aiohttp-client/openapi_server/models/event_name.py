# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    JOINED = 'JOINED'
    LEFT = 'LEFT'
    PUBLISH_STARTED = 'PUBLISH_STARTED'
    PUBLISH_STOPPED = 'PUBLISH_STOPPED'
    SUBSCRIBE_STARTED = 'SUBSCRIBE_STARTED'
    SUBSCRIBE_STOPPED = 'SUBSCRIBE_STOPPED'
    PUBLISH_ERROR = 'PUBLISH_ERROR'
    SUBSCRIBE_ERROR = 'SUBSCRIBE_ERROR'
    JOIN_ERROR = 'JOIN_ERROR'

    def __init__(self):
        """EventName - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventName of this EventName.
        """
        return util.deserialize_model(dikt, cls)
