/**
 * Amazon Interactive Video Service RealTime
 * <p> <b>Introduction</b> </p> <p>The Amazon Interactive Video Service (IVS) real-time API is REST compatible, using a standard HTTP API and an AWS EventBridge event stream for responses. JSON is used for both requests and responses, including errors. </p> <p>Terminology:</p> <ul> <li> <p>A <i>stage</i> is a virtual space where participants can exchange video in real time.</p> </li> <li> <p>A <i>participant token</i> is a token that authenticates a participant when they join a stage.</p> </li> <li> <p>A <i>participant object</i> represents participants (people) in the stage and contains information about them. When a token is created, it includes a participant ID; when a participant uses that token to join a stage, the participant is associated with that participant ID There is a 1:1 mapping between participant tokens and participants.</p> </li> </ul> <p> <b>Resources</b> </p> <p>The following resources contain information about your IVS live stream (see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/getting-started.html\">Getting Started with Amazon IVS Real-Time Streaming</a>):</p> <ul> <li> <p> <b>Stage</b> — A stage is a virtual space where participants can exchange video in real time.</p> </li> </ul> <p> <b>Tagging</b> </p> <p>A <i>tag</i> is a metadata label that you assign to an AWS resource. A tag comprises a <i>key</i> and a <i>value</i>, both set by you. For example, you might set a tag as <code>topic:nature</code> to label a particular video category. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS Resources</a> for more information, including restrictions that apply to tags and \"Tag naming limits and requirements\"; Amazon IVS stages has no service-specific constraints beyond what is documented there.</p> <p>Tags can help you identify and organize your AWS resources. For example, you can use the same tag for different resources to indicate that they are related. You can also use tags to manage access (see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Access Tags</a>).</p> <p>The Amazon IVS real-time API has these tag-related endpoints: <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>. The following resource supports tagging: Stage.</p> <p>At most 50 tags can be applied to a resource.</p> <p> <b>Stages Endpoints</b> </p> <ul> <li> <p> <a>CreateParticipantToken</a> — Creates an additional token for a specified stage. This can be done after stage creation or when tokens expire.</p> </li> <li> <p> <a>CreateStage</a> — Creates a new stage (and optionally participant tokens).</p> </li> <li> <p> <a>DeleteStage</a> — Shuts down and deletes the specified stage (disconnecting all participants).</p> </li> <li> <p> <a>DisconnectParticipant</a> — Disconnects a specified participant and revokes the participant permanently from a specified stage.</p> </li> <li> <p> <a>GetParticipant</a> — Gets information about the specified participant token.</p> </li> <li> <p> <a>GetStage</a> — Gets information for the specified stage.</p> </li> <li> <p> <a>GetStageSession</a> — Gets information for the specified stage session.</p> </li> <li> <p> <a>ListParticipantEvents</a> — Lists events for a specified participant that occurred during a specified stage session.</p> </li> <li> <p> <a>ListParticipants</a> — Lists all participants in a specified stage session.</p> </li> <li> <p> <a>ListStages</a> — Gets summary information about all stages in your account, in the AWS region where the API request is processed.</p> </li> <li> <p> <a>ListStageSessions</a> — Gets all sessions for a specified stage.</p> </li> <li> <p> <a>UpdateStage</a> — Updates a stage’s configuration.</p> </li> </ul> <p> <b>Tags Endpoints</b> </p> <ul> <li> <p> <a>ListTagsForResource</a> — Gets information about AWS tags for the specified ARN.</p> </li> <li> <p> <a>TagResource</a> — Adds or updates tags for the AWS resource with the specified ARN.</p> </li> <li> <p> <a>UntagResource</a> — Removes tags from the resource with the specified ARN.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2020-07-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CreateParticipantTokenRequest from './model/CreateParticipantTokenRequest';
import CreateParticipantTokenResponse from './model/CreateParticipantTokenResponse';
import CreateParticipantTokenResponseParticipantToken from './model/CreateParticipantTokenResponseParticipantToken';
import CreateStageRequest from './model/CreateStageRequest';
import CreateStageResponse from './model/CreateStageResponse';
import CreateStageResponseStage from './model/CreateStageResponseStage';
import DeleteStageRequest from './model/DeleteStageRequest';
import DisconnectParticipantRequest from './model/DisconnectParticipantRequest';
import Event from './model/Event';
import EventErrorCode from './model/EventErrorCode';
import EventName from './model/EventName';
import GetParticipantRequest from './model/GetParticipantRequest';
import GetParticipantResponse from './model/GetParticipantResponse';
import GetParticipantResponseParticipant from './model/GetParticipantResponseParticipant';
import GetStageRequest from './model/GetStageRequest';
import GetStageResponse from './model/GetStageResponse';
import GetStageResponseStage from './model/GetStageResponseStage';
import GetStageSessionRequest from './model/GetStageSessionRequest';
import GetStageSessionResponse from './model/GetStageSessionResponse';
import GetStageSessionResponseStageSession from './model/GetStageSessionResponseStageSession';
import ListParticipantEventsRequest from './model/ListParticipantEventsRequest';
import ListParticipantEventsResponse from './model/ListParticipantEventsResponse';
import ListParticipantsRequest from './model/ListParticipantsRequest';
import ListParticipantsResponse from './model/ListParticipantsResponse';
import ListStageSessionsRequest from './model/ListStageSessionsRequest';
import ListStageSessionsResponse from './model/ListStageSessionsResponse';
import ListStagesRequest from './model/ListStagesRequest';
import ListStagesResponse from './model/ListStagesResponse';
import ListTagsForResourceResponse from './model/ListTagsForResourceResponse';
import Participant from './model/Participant';
import ParticipantState from './model/ParticipantState';
import ParticipantSummary from './model/ParticipantSummary';
import ParticipantToken from './model/ParticipantToken';
import ParticipantTokenCapability from './model/ParticipantTokenCapability';
import ParticipantTokenConfiguration from './model/ParticipantTokenConfiguration';
import Stage from './model/Stage';
import StageSession from './model/StageSession';
import StageSessionSummary from './model/StageSessionSummary';
import StageSummary from './model/StageSummary';
import TagResourceRequest from './model/TagResourceRequest';
import UpdateStageRequest from './model/UpdateStageRequest';
import UpdateStageResponse from './model/UpdateStageResponse';
import UpdateStageResponseStage from './model/UpdateStageResponseStage';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt; &lt;b&gt;Introduction&lt;/b&gt; &lt;/p&gt; &lt;p&gt;The Amazon Interactive Video Service (IVS) real-time API is REST compatible, using a standard HTTP API and an AWS EventBridge event stream for responses. JSON is used for both requests and responses, including errors. &lt;/p&gt; &lt;p&gt;Terminology:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A &lt;i&gt;stage&lt;/i&gt; is a virtual space where participants can exchange video in real time.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;i&gt;participant token&lt;/i&gt; is a token that authenticates a participant when they join a stage.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;i&gt;participant object&lt;/i&gt; represents participants (people) in the stage and contains information about them. When a token is created, it includes a participant ID; when a participant uses that token to join a stage, the participant is associated with that participant ID There is a 1:1 mapping between participant tokens and participants.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Resources&lt;/b&gt; &lt;/p&gt; &lt;p&gt;The following resources contain information about your IVS live stream (see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/getting-started.html\&quot;&gt;Getting Started with Amazon IVS Real-Time Streaming&lt;/a&gt;):&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Stage&lt;/b&gt; — A stage is a virtual space where participants can exchange video in real time.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Tagging&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A &lt;i&gt;tag&lt;/i&gt; is a metadata label that you assign to an AWS resource. A tag comprises a &lt;i&gt;key&lt;/i&gt; and a &lt;i&gt;value&lt;/i&gt;, both set by you. For example, you might set a tag as &lt;code&gt;topic:nature&lt;/code&gt; to label a particular video category. See &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\&quot;&gt;Tagging AWS Resources&lt;/a&gt; for more information, including restrictions that apply to tags and \&quot;Tag naming limits and requirements\&quot;; Amazon IVS stages has no service-specific constraints beyond what is documented there.&lt;/p&gt; &lt;p&gt;Tags can help you identify and organize your AWS resources. For example, you can use the same tag for different resources to indicate that they are related. You can also use tags to manage access (see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\&quot;&gt;Access Tags&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;The Amazon IVS real-time API has these tag-related endpoints: &lt;a&gt;TagResource&lt;/a&gt;, &lt;a&gt;UntagResource&lt;/a&gt;, and &lt;a&gt;ListTagsForResource&lt;/a&gt;. The following resource supports tagging: Stage.&lt;/p&gt; &lt;p&gt;At most 50 tags can be applied to a resource.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Stages Endpoints&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateParticipantToken&lt;/a&gt; — Creates an additional token for a specified stage. This can be done after stage creation or when tokens expire.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateStage&lt;/a&gt; — Creates a new stage (and optionally participant tokens).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteStage&lt;/a&gt; — Shuts down and deletes the specified stage (disconnecting all participants).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DisconnectParticipant&lt;/a&gt; — Disconnects a specified participant and revokes the participant permanently from a specified stage.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetParticipant&lt;/a&gt; — Gets information about the specified participant token.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetStage&lt;/a&gt; — Gets information for the specified stage.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetStageSession&lt;/a&gt; — Gets information for the specified stage session.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListParticipantEvents&lt;/a&gt; — Lists events for a specified participant that occurred during a specified stage session.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListParticipants&lt;/a&gt; — Lists all participants in a specified stage session.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListStages&lt;/a&gt; — Gets summary information about all stages in your account, in the AWS region where the API request is processed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListStageSessions&lt;/a&gt; — Gets all sessions for a specified stage.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdateStage&lt;/a&gt; — Updates a stage’s configuration.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Tags Endpoints&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListTagsForResource&lt;/a&gt; — Gets information about AWS tags for the specified ARN.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TagResource&lt;/a&gt; — Adds or updates tags for the AWS resource with the specified ARN.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UntagResource&lt;/a&gt; — Removes tags from the resource with the specified ARN.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonInteractiveVideoServiceRealTime = require('index'); // See note below*.
* var xxxSvc = new AmazonInteractiveVideoServiceRealTime.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonInteractiveVideoServiceRealTime.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonInteractiveVideoServiceRealTime.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonInteractiveVideoServiceRealTime.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2020-07-14
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CreateParticipantTokenRequest model constructor.
     * @property {module:model/CreateParticipantTokenRequest}
     */
    CreateParticipantTokenRequest,

    /**
     * The CreateParticipantTokenResponse model constructor.
     * @property {module:model/CreateParticipantTokenResponse}
     */
    CreateParticipantTokenResponse,

    /**
     * The CreateParticipantTokenResponseParticipantToken model constructor.
     * @property {module:model/CreateParticipantTokenResponseParticipantToken}
     */
    CreateParticipantTokenResponseParticipantToken,

    /**
     * The CreateStageRequest model constructor.
     * @property {module:model/CreateStageRequest}
     */
    CreateStageRequest,

    /**
     * The CreateStageResponse model constructor.
     * @property {module:model/CreateStageResponse}
     */
    CreateStageResponse,

    /**
     * The CreateStageResponseStage model constructor.
     * @property {module:model/CreateStageResponseStage}
     */
    CreateStageResponseStage,

    /**
     * The DeleteStageRequest model constructor.
     * @property {module:model/DeleteStageRequest}
     */
    DeleteStageRequest,

    /**
     * The DisconnectParticipantRequest model constructor.
     * @property {module:model/DisconnectParticipantRequest}
     */
    DisconnectParticipantRequest,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventErrorCode model constructor.
     * @property {module:model/EventErrorCode}
     */
    EventErrorCode,

    /**
     * The EventName model constructor.
     * @property {module:model/EventName}
     */
    EventName,

    /**
     * The GetParticipantRequest model constructor.
     * @property {module:model/GetParticipantRequest}
     */
    GetParticipantRequest,

    /**
     * The GetParticipantResponse model constructor.
     * @property {module:model/GetParticipantResponse}
     */
    GetParticipantResponse,

    /**
     * The GetParticipantResponseParticipant model constructor.
     * @property {module:model/GetParticipantResponseParticipant}
     */
    GetParticipantResponseParticipant,

    /**
     * The GetStageRequest model constructor.
     * @property {module:model/GetStageRequest}
     */
    GetStageRequest,

    /**
     * The GetStageResponse model constructor.
     * @property {module:model/GetStageResponse}
     */
    GetStageResponse,

    /**
     * The GetStageResponseStage model constructor.
     * @property {module:model/GetStageResponseStage}
     */
    GetStageResponseStage,

    /**
     * The GetStageSessionRequest model constructor.
     * @property {module:model/GetStageSessionRequest}
     */
    GetStageSessionRequest,

    /**
     * The GetStageSessionResponse model constructor.
     * @property {module:model/GetStageSessionResponse}
     */
    GetStageSessionResponse,

    /**
     * The GetStageSessionResponseStageSession model constructor.
     * @property {module:model/GetStageSessionResponseStageSession}
     */
    GetStageSessionResponseStageSession,

    /**
     * The ListParticipantEventsRequest model constructor.
     * @property {module:model/ListParticipantEventsRequest}
     */
    ListParticipantEventsRequest,

    /**
     * The ListParticipantEventsResponse model constructor.
     * @property {module:model/ListParticipantEventsResponse}
     */
    ListParticipantEventsResponse,

    /**
     * The ListParticipantsRequest model constructor.
     * @property {module:model/ListParticipantsRequest}
     */
    ListParticipantsRequest,

    /**
     * The ListParticipantsResponse model constructor.
     * @property {module:model/ListParticipantsResponse}
     */
    ListParticipantsResponse,

    /**
     * The ListStageSessionsRequest model constructor.
     * @property {module:model/ListStageSessionsRequest}
     */
    ListStageSessionsRequest,

    /**
     * The ListStageSessionsResponse model constructor.
     * @property {module:model/ListStageSessionsResponse}
     */
    ListStageSessionsResponse,

    /**
     * The ListStagesRequest model constructor.
     * @property {module:model/ListStagesRequest}
     */
    ListStagesRequest,

    /**
     * The ListStagesResponse model constructor.
     * @property {module:model/ListStagesResponse}
     */
    ListStagesResponse,

    /**
     * The ListTagsForResourceResponse model constructor.
     * @property {module:model/ListTagsForResourceResponse}
     */
    ListTagsForResourceResponse,

    /**
     * The Participant model constructor.
     * @property {module:model/Participant}
     */
    Participant,

    /**
     * The ParticipantState model constructor.
     * @property {module:model/ParticipantState}
     */
    ParticipantState,

    /**
     * The ParticipantSummary model constructor.
     * @property {module:model/ParticipantSummary}
     */
    ParticipantSummary,

    /**
     * The ParticipantToken model constructor.
     * @property {module:model/ParticipantToken}
     */
    ParticipantToken,

    /**
     * The ParticipantTokenCapability model constructor.
     * @property {module:model/ParticipantTokenCapability}
     */
    ParticipantTokenCapability,

    /**
     * The ParticipantTokenConfiguration model constructor.
     * @property {module:model/ParticipantTokenConfiguration}
     */
    ParticipantTokenConfiguration,

    /**
     * The Stage model constructor.
     * @property {module:model/Stage}
     */
    Stage,

    /**
     * The StageSession model constructor.
     * @property {module:model/StageSession}
     */
    StageSession,

    /**
     * The StageSessionSummary model constructor.
     * @property {module:model/StageSessionSummary}
     */
    StageSessionSummary,

    /**
     * The StageSummary model constructor.
     * @property {module:model/StageSummary}
     */
    StageSummary,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
     * The UpdateStageRequest model constructor.
     * @property {module:model/UpdateStageRequest}
     */
    UpdateStageRequest,

    /**
     * The UpdateStageResponse model constructor.
     * @property {module:model/UpdateStageResponse}
     */
    UpdateStageResponse,

    /**
     * The UpdateStageResponseStage model constructor.
     * @property {module:model/UpdateStageResponseStage}
     */
    UpdateStageResponseStage,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
