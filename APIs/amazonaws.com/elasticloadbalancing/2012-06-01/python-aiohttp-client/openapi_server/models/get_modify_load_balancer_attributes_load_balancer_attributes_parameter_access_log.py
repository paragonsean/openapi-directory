# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, s3_bucket_name: str=None, emit_interval: int=None, s3_bucket_prefix: str=None):
        """GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog - a model defined in OpenAPI

        :param enabled: The enabled of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :param s3_bucket_name: The s3_bucket_name of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :param emit_interval: The emit_interval of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :param s3_bucket_prefix: The s3_bucket_prefix of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        """
        self.openapi_types = {
            'enabled': bool,
            's3_bucket_name': str,
            'emit_interval': int,
            's3_bucket_prefix': str
        }

        self.attribute_map = {
            'enabled': 'Enabled',
            's3_bucket_name': 'S3BucketName',
            'emit_interval': 'EmitInterval',
            's3_bucket_prefix': 'S3BucketPrefix'
        }

        self._enabled = enabled
        self._s3_bucket_name = s3_bucket_name
        self._emit_interval = emit_interval
        self._s3_bucket_prefix = s3_bucket_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_AccessLog of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.


        :return: The enabled of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.


        :param enabled: The enabled of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :type enabled: bool
        """
        if enabled is None:
            raise ValueError("Invalid value for `enabled`, must not be `None`")

        self._enabled = enabled

    @property
    def s3_bucket_name(self):
        """Gets the s3_bucket_name of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.


        :return: The s3_bucket_name of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :rtype: str
        """
        return self._s3_bucket_name

    @s3_bucket_name.setter
    def s3_bucket_name(self, s3_bucket_name):
        """Sets the s3_bucket_name of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.


        :param s3_bucket_name: The s3_bucket_name of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :type s3_bucket_name: str
        """

        self._s3_bucket_name = s3_bucket_name

    @property
    def emit_interval(self):
        """Gets the emit_interval of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.


        :return: The emit_interval of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :rtype: int
        """
        return self._emit_interval

    @emit_interval.setter
    def emit_interval(self, emit_interval):
        """Sets the emit_interval of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.


        :param emit_interval: The emit_interval of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :type emit_interval: int
        """

        self._emit_interval = emit_interval

    @property
    def s3_bucket_prefix(self):
        """Gets the s3_bucket_prefix of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.


        :return: The s3_bucket_prefix of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :rtype: str
        """
        return self._s3_bucket_prefix

    @s3_bucket_prefix.setter
    def s3_bucket_prefix(self, s3_bucket_prefix):
        """Sets the s3_bucket_prefix of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.


        :param s3_bucket_prefix: The s3_bucket_prefix of this GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog.
        :type s3_bucket_prefix: str
        """

        self._s3_bucket_prefix = s3_bucket_prefix
