# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.listener_description_listener import ListenerDescriptionListener
from openapi_server import util


class ListenerDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, listener: ListenerDescriptionListener=None, policy_names: List=None):
        """ListenerDescription - a model defined in OpenAPI

        :param listener: The listener of this ListenerDescription.
        :param policy_names: The policy_names of this ListenerDescription.
        """
        self.openapi_types = {
            'listener': ListenerDescriptionListener,
            'policy_names': List
        }

        self.attribute_map = {
            'listener': 'Listener',
            'policy_names': 'PolicyNames'
        }

        self._listener = listener
        self._policy_names = policy_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListenerDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListenerDescription of this ListenerDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def listener(self):
        """Gets the listener of this ListenerDescription.


        :return: The listener of this ListenerDescription.
        :rtype: ListenerDescriptionListener
        """
        return self._listener

    @listener.setter
    def listener(self, listener):
        """Sets the listener of this ListenerDescription.


        :param listener: The listener of this ListenerDescription.
        :type listener: ListenerDescriptionListener
        """

        self._listener = listener

    @property
    def policy_names(self):
        """Gets the policy_names of this ListenerDescription.


        :return: The policy_names of this ListenerDescription.
        :rtype: List
        """
        return self._policy_names

    @policy_names.setter
    def policy_names(self, policy_names):
        """Sets the policy_names of this ListenerDescription.


        :param policy_names: The policy_names of this ListenerDescription.
        :type policy_names: List
        """

        self._policy_names = policy_names
