# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectionSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, idle_timeout: int=None):
        """ConnectionSettings - a model defined in OpenAPI

        :param idle_timeout: The idle_timeout of this ConnectionSettings.
        """
        self.openapi_types = {
            'idle_timeout': int
        }

        self.attribute_map = {
            'idle_timeout': 'IdleTimeout'
        }

        self._idle_timeout = idle_timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectionSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectionSettings of this ConnectionSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idle_timeout(self):
        """Gets the idle_timeout of this ConnectionSettings.


        :return: The idle_timeout of this ConnectionSettings.
        :rtype: int
        """
        return self._idle_timeout

    @idle_timeout.setter
    def idle_timeout(self, idle_timeout):
        """Sets the idle_timeout of this ConnectionSettings.


        :param idle_timeout: The idle_timeout of this ConnectionSettings.
        :type idle_timeout: int
        """
        if idle_timeout is None:
            raise ValueError("Invalid value for `idle_timeout`, must not be `None`")

        self._idle_timeout = idle_timeout
