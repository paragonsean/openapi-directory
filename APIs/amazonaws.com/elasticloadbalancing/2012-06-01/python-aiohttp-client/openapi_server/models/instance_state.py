# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_id: str=None, state: str=None, reason_code: str=None, description: str=None):
        """InstanceState - a model defined in OpenAPI

        :param instance_id: The instance_id of this InstanceState.
        :param state: The state of this InstanceState.
        :param reason_code: The reason_code of this InstanceState.
        :param description: The description of this InstanceState.
        """
        self.openapi_types = {
            'instance_id': str,
            'state': str,
            'reason_code': str,
            'description': str
        }

        self.attribute_map = {
            'instance_id': 'InstanceId',
            'state': 'State',
            'reason_code': 'ReasonCode',
            'description': 'Description'
        }

        self._instance_id = instance_id
        self._state = state
        self._reason_code = reason_code
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceState of this InstanceState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_id(self):
        """Gets the instance_id of this InstanceState.


        :return: The instance_id of this InstanceState.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this InstanceState.


        :param instance_id: The instance_id of this InstanceState.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def state(self):
        """Gets the state of this InstanceState.


        :return: The state of this InstanceState.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this InstanceState.


        :param state: The state of this InstanceState.
        :type state: str
        """

        self._state = state

    @property
    def reason_code(self):
        """Gets the reason_code of this InstanceState.


        :return: The reason_code of this InstanceState.
        :rtype: str
        """
        return self._reason_code

    @reason_code.setter
    def reason_code(self, reason_code):
        """Sets the reason_code of this InstanceState.


        :param reason_code: The reason_code of this InstanceState.
        :type reason_code: str
        """

        self._reason_code = reason_code

    @property
    def description(self):
        """Gets the description of this InstanceState.


        :return: The description of this InstanceState.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InstanceState.


        :param description: The description of this InstanceState.
        :type description: str
        """

        self._description = description
