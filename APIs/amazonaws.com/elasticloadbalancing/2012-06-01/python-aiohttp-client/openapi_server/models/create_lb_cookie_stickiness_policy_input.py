# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateLBCookieStickinessPolicyInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, load_balancer_name: str=None, policy_name: str=None, cookie_expiration_period: int=None):
        """CreateLBCookieStickinessPolicyInput - a model defined in OpenAPI

        :param load_balancer_name: The load_balancer_name of this CreateLBCookieStickinessPolicyInput.
        :param policy_name: The policy_name of this CreateLBCookieStickinessPolicyInput.
        :param cookie_expiration_period: The cookie_expiration_period of this CreateLBCookieStickinessPolicyInput.
        """
        self.openapi_types = {
            'load_balancer_name': str,
            'policy_name': str,
            'cookie_expiration_period': int
        }

        self.attribute_map = {
            'load_balancer_name': 'LoadBalancerName',
            'policy_name': 'PolicyName',
            'cookie_expiration_period': 'CookieExpirationPeriod'
        }

        self._load_balancer_name = load_balancer_name
        self._policy_name = policy_name
        self._cookie_expiration_period = cookie_expiration_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLBCookieStickinessPolicyInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLBCookieStickinessPolicyInput of this CreateLBCookieStickinessPolicyInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def load_balancer_name(self):
        """Gets the load_balancer_name of this CreateLBCookieStickinessPolicyInput.


        :return: The load_balancer_name of this CreateLBCookieStickinessPolicyInput.
        :rtype: str
        """
        return self._load_balancer_name

    @load_balancer_name.setter
    def load_balancer_name(self, load_balancer_name):
        """Sets the load_balancer_name of this CreateLBCookieStickinessPolicyInput.


        :param load_balancer_name: The load_balancer_name of this CreateLBCookieStickinessPolicyInput.
        :type load_balancer_name: str
        """
        if load_balancer_name is None:
            raise ValueError("Invalid value for `load_balancer_name`, must not be `None`")

        self._load_balancer_name = load_balancer_name

    @property
    def policy_name(self):
        """Gets the policy_name of this CreateLBCookieStickinessPolicyInput.


        :return: The policy_name of this CreateLBCookieStickinessPolicyInput.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this CreateLBCookieStickinessPolicyInput.


        :param policy_name: The policy_name of this CreateLBCookieStickinessPolicyInput.
        :type policy_name: str
        """
        if policy_name is None:
            raise ValueError("Invalid value for `policy_name`, must not be `None`")

        self._policy_name = policy_name

    @property
    def cookie_expiration_period(self):
        """Gets the cookie_expiration_period of this CreateLBCookieStickinessPolicyInput.


        :return: The cookie_expiration_period of this CreateLBCookieStickinessPolicyInput.
        :rtype: int
        """
        return self._cookie_expiration_period

    @cookie_expiration_period.setter
    def cookie_expiration_period(self, cookie_expiration_period):
        """Sets the cookie_expiration_period of this CreateLBCookieStickinessPolicyInput.


        :param cookie_expiration_period: The cookie_expiration_period of this CreateLBCookieStickinessPolicyInput.
        :type cookie_expiration_period: int
        """

        self._cookie_expiration_period = cookie_expiration_period
