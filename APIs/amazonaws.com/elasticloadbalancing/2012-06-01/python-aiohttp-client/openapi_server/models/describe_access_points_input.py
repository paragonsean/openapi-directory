# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeAccessPointsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, load_balancer_names: List=None, marker: str=None, page_size: int=None):
        """DescribeAccessPointsInput - a model defined in OpenAPI

        :param load_balancer_names: The load_balancer_names of this DescribeAccessPointsInput.
        :param marker: The marker of this DescribeAccessPointsInput.
        :param page_size: The page_size of this DescribeAccessPointsInput.
        """
        self.openapi_types = {
            'load_balancer_names': List,
            'marker': str,
            'page_size': int
        }

        self.attribute_map = {
            'load_balancer_names': 'LoadBalancerNames',
            'marker': 'Marker',
            'page_size': 'PageSize'
        }

        self._load_balancer_names = load_balancer_names
        self._marker = marker
        self._page_size = page_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAccessPointsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAccessPointsInput of this DescribeAccessPointsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def load_balancer_names(self):
        """Gets the load_balancer_names of this DescribeAccessPointsInput.


        :return: The load_balancer_names of this DescribeAccessPointsInput.
        :rtype: List
        """
        return self._load_balancer_names

    @load_balancer_names.setter
    def load_balancer_names(self, load_balancer_names):
        """Sets the load_balancer_names of this DescribeAccessPointsInput.


        :param load_balancer_names: The load_balancer_names of this DescribeAccessPointsInput.
        :type load_balancer_names: List
        """

        self._load_balancer_names = load_balancer_names

    @property
    def marker(self):
        """Gets the marker of this DescribeAccessPointsInput.


        :return: The marker of this DescribeAccessPointsInput.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this DescribeAccessPointsInput.


        :param marker: The marker of this DescribeAccessPointsInput.
        :type marker: str
        """

        self._marker = marker

    @property
    def page_size(self):
        """Gets the page_size of this DescribeAccessPointsInput.


        :return: The page_size of this DescribeAccessPointsInput.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this DescribeAccessPointsInput.


        :param page_size: The page_size of this DescribeAccessPointsInput.
        :type page_size: int
        """

        self._page_size = page_size
