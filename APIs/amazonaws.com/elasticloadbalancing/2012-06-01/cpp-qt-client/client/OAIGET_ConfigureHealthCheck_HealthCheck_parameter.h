/**
 * Elastic Load Balancing
 * <fullname>Elastic Load Balancing</fullname> <p>A load balancer can distribute incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.</p> <p>Elastic Load Balancing supports three types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. You can select a load balancer based on your application needs. For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers and Network Load Balancers.</p> <p>To get started, create a load balancer with one or more listeners using <a>CreateLoadBalancer</a>. Register your instances with the load balancer using <a>RegisterInstancesWithLoadBalancer</a>.</p> <p>All Elastic Load Balancing operations are <i>idempotent</i>, which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code.</p>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGET_ConfigureHealthCheck_HealthCheck_parameter.h
 *
 * Information about a health check.
 */

#ifndef OAIGET_ConfigureHealthCheck_HealthCheck_parameter_H
#define OAIGET_ConfigureHealthCheck_HealthCheck_parameter_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGET_ConfigureHealthCheck_HealthCheck_parameter : public OAIObject {
public:
    OAIGET_ConfigureHealthCheck_HealthCheck_parameter();
    OAIGET_ConfigureHealthCheck_HealthCheck_parameter(QString json);
    ~OAIGET_ConfigureHealthCheck_HealthCheck_parameter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    qint32 getInterval() const;
    void setInterval(const qint32 &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    qint32 getUnhealthyThreshold() const;
    void setUnhealthyThreshold(const qint32 &unhealthy_threshold);
    bool is_unhealthy_threshold_Set() const;
    bool is_unhealthy_threshold_Valid() const;

    qint32 getHealthyThreshold() const;
    void setHealthyThreshold(const qint32 &healthy_threshold);
    bool is_healthy_threshold_Set() const;
    bool is_healthy_threshold_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    qint32 m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    qint32 m_unhealthy_threshold;
    bool m_unhealthy_threshold_isSet;
    bool m_unhealthy_threshold_isValid;

    qint32 m_healthy_threshold;
    bool m_healthy_threshold_isSet;
    bool m_healthy_threshold_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGET_ConfigureHealthCheck_HealthCheck_parameter)

#endif // OAIGET_ConfigureHealthCheck_HealthCheck_parameter_H
