/**
 * Elastic Load Balancing
 * <fullname>Elastic Load Balancing</fullname> <p>A load balancer can distribute incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.</p> <p>Elastic Load Balancing supports three types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. You can select a load balancer based on your application needs. For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers and Network Load Balancers.</p> <p>To get started, create a load balancer with one or more listeners using <a>CreateLoadBalancer</a>. Register your instances with the load balancer using <a>RegisterInstancesWithLoadBalancer</a>.</p> <p>All Elastic Load Balancing operations are <i>idempotent</i>, which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code.</p>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModifyLoadBalancerAttributesInput_LoadBalancerAttributes.h
 *
 * 
 */

#ifndef OAIModifyLoadBalancerAttributesInput_LoadBalancerAttributes_H
#define OAIModifyLoadBalancerAttributesInput_LoadBalancerAttributes_H

#include <QJsonObject>

#include "OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_AccessLog.h"
#include "OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionDraining.h"
#include "OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionSettings.h"
#include "OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_CrossZoneLoadBalancing.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_CrossZoneLoadBalancing;
class OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_AccessLog;
class OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionDraining;
class OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionSettings;

class OAIModifyLoadBalancerAttributesInput_LoadBalancerAttributes : public OAIObject {
public:
    OAIModifyLoadBalancerAttributesInput_LoadBalancerAttributes();
    OAIModifyLoadBalancerAttributesInput_LoadBalancerAttributes(QString json);
    ~OAIModifyLoadBalancerAttributesInput_LoadBalancerAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_CrossZoneLoadBalancing getCrossZoneLoadBalancing() const;
    void setCrossZoneLoadBalancing(const OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_CrossZoneLoadBalancing &cross_zone_load_balancing);
    bool is_cross_zone_load_balancing_Set() const;
    bool is_cross_zone_load_balancing_Valid() const;

    OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_AccessLog getAccessLog() const;
    void setAccessLog(const OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_AccessLog &access_log);
    bool is_access_log_Set() const;
    bool is_access_log_Valid() const;

    OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionDraining getConnectionDraining() const;
    void setConnectionDraining(const OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionDraining &connection_draining);
    bool is_connection_draining_Set() const;
    bool is_connection_draining_Valid() const;

    OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionSettings getConnectionSettings() const;
    void setConnectionSettings(const OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionSettings &connection_settings);
    bool is_connection_settings_Set() const;
    bool is_connection_settings_Valid() const;

    QList getAdditionalAttributes() const;
    void setAdditionalAttributes(const QList &additional_attributes);
    bool is_additional_attributes_Set() const;
    bool is_additional_attributes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_CrossZoneLoadBalancing m_cross_zone_load_balancing;
    bool m_cross_zone_load_balancing_isSet;
    bool m_cross_zone_load_balancing_isValid;

    OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_AccessLog m_access_log;
    bool m_access_log_isSet;
    bool m_access_log_isValid;

    OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionDraining m_connection_draining;
    bool m_connection_draining_isSet;
    bool m_connection_draining_isValid;

    OAIGET_ModifyLoadBalancerAttributes_LoadBalancerAttributes_parameter_ConnectionSettings m_connection_settings;
    bool m_connection_settings_isSet;
    bool m_connection_settings_isValid;

    QList m_additional_attributes;
    bool m_additional_attributes_isSet;
    bool m_additional_attributes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModifyLoadBalancerAttributesInput_LoadBalancerAttributes)

#endif // OAIModifyLoadBalancerAttributesInput_LoadBalancerAttributes_H
