/**
 * Elastic Load Balancing
 * <fullname>Elastic Load Balancing</fullname> <p>A load balancer can distribute incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.</p> <p>Elastic Load Balancing supports three types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. You can select a load balancer based on your application needs. For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers and Network Load Balancers.</p> <p>To get started, create a load balancer with one or more listeners using <a>CreateLoadBalancer</a>. Register your instances with the load balancer using <a>RegisterInstancesWithLoadBalancer</a>.</p> <p>All Elastic Load Balancing operations are <i>idempotent</i>, which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code.</p>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoadBalancerDescriptionHealthCheck from './LoadBalancerDescriptionHealthCheck';
import LoadBalancerDescriptionPolicies from './LoadBalancerDescriptionPolicies';
import LoadBalancerDescriptionSourceSecurityGroup from './LoadBalancerDescriptionSourceSecurityGroup';

/**
 * The LoadBalancerDescription model module.
 * @module model/LoadBalancerDescription
 * @version 2012-06-01
 */
class LoadBalancerDescription {
    /**
     * Constructs a new <code>LoadBalancerDescription</code>.
     * Information about a load balancer.
     * @alias module:model/LoadBalancerDescription
     */
    constructor() { 
        
        LoadBalancerDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoadBalancerDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoadBalancerDescription} obj Optional instance to populate.
     * @return {module:model/LoadBalancerDescription} The populated <code>LoadBalancerDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoadBalancerDescription();

            if (data.hasOwnProperty('LoadBalancerName')) {
                obj['LoadBalancerName'] = ApiClient.convertToType(data['LoadBalancerName'], 'String');
            }
            if (data.hasOwnProperty('DNSName')) {
                obj['DNSName'] = ApiClient.convertToType(data['DNSName'], 'String');
            }
            if (data.hasOwnProperty('CanonicalHostedZoneName')) {
                obj['CanonicalHostedZoneName'] = ApiClient.convertToType(data['CanonicalHostedZoneName'], 'String');
            }
            if (data.hasOwnProperty('CanonicalHostedZoneNameID')) {
                obj['CanonicalHostedZoneNameID'] = ApiClient.convertToType(data['CanonicalHostedZoneNameID'], 'String');
            }
            if (data.hasOwnProperty('ListenerDescriptions')) {
                obj['ListenerDescriptions'] = ApiClient.convertToType(data['ListenerDescriptions'], Array);
            }
            if (data.hasOwnProperty('Policies')) {
                obj['Policies'] = LoadBalancerDescriptionPolicies.constructFromObject(data['Policies']);
            }
            if (data.hasOwnProperty('BackendServerDescriptions')) {
                obj['BackendServerDescriptions'] = ApiClient.convertToType(data['BackendServerDescriptions'], Array);
            }
            if (data.hasOwnProperty('AvailabilityZones')) {
                obj['AvailabilityZones'] = ApiClient.convertToType(data['AvailabilityZones'], Array);
            }
            if (data.hasOwnProperty('Subnets')) {
                obj['Subnets'] = ApiClient.convertToType(data['Subnets'], Array);
            }
            if (data.hasOwnProperty('VPCId')) {
                obj['VPCId'] = ApiClient.convertToType(data['VPCId'], 'String');
            }
            if (data.hasOwnProperty('Instances')) {
                obj['Instances'] = ApiClient.convertToType(data['Instances'], Array);
            }
            if (data.hasOwnProperty('HealthCheck')) {
                obj['HealthCheck'] = LoadBalancerDescriptionHealthCheck.constructFromObject(data['HealthCheck']);
            }
            if (data.hasOwnProperty('SourceSecurityGroup')) {
                obj['SourceSecurityGroup'] = LoadBalancerDescriptionSourceSecurityGroup.constructFromObject(data['SourceSecurityGroup']);
            }
            if (data.hasOwnProperty('SecurityGroups')) {
                obj['SecurityGroups'] = ApiClient.convertToType(data['SecurityGroups'], Array);
            }
            if (data.hasOwnProperty('CreatedTime')) {
                obj['CreatedTime'] = ApiClient.convertToType(data['CreatedTime'], 'Date');
            }
            if (data.hasOwnProperty('Scheme')) {
                obj['Scheme'] = ApiClient.convertToType(data['Scheme'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoadBalancerDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoadBalancerDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `LoadBalancerName`
        if (data['LoadBalancerName']) { // data not null
          String.validateJSON(data['LoadBalancerName']);
        }
        // validate the optional field `DNSName`
        if (data['DNSName']) { // data not null
          String.validateJSON(data['DNSName']);
        }
        // validate the optional field `CanonicalHostedZoneName`
        if (data['CanonicalHostedZoneName']) { // data not null
          String.validateJSON(data['CanonicalHostedZoneName']);
        }
        // validate the optional field `CanonicalHostedZoneNameID`
        if (data['CanonicalHostedZoneNameID']) { // data not null
          String.validateJSON(data['CanonicalHostedZoneNameID']);
        }
        // validate the optional field `ListenerDescriptions`
        if (data['ListenerDescriptions']) { // data not null
          Array.validateJSON(data['ListenerDescriptions']);
        }
        // validate the optional field `Policies`
        if (data['Policies']) { // data not null
          LoadBalancerDescriptionPolicies.validateJSON(data['Policies']);
        }
        // validate the optional field `BackendServerDescriptions`
        if (data['BackendServerDescriptions']) { // data not null
          Array.validateJSON(data['BackendServerDescriptions']);
        }
        // validate the optional field `AvailabilityZones`
        if (data['AvailabilityZones']) { // data not null
          Array.validateJSON(data['AvailabilityZones']);
        }
        // validate the optional field `Subnets`
        if (data['Subnets']) { // data not null
          Array.validateJSON(data['Subnets']);
        }
        // validate the optional field `VPCId`
        if (data['VPCId']) { // data not null
          String.validateJSON(data['VPCId']);
        }
        // validate the optional field `Instances`
        if (data['Instances']) { // data not null
          Array.validateJSON(data['Instances']);
        }
        // validate the optional field `HealthCheck`
        if (data['HealthCheck']) { // data not null
          LoadBalancerDescriptionHealthCheck.validateJSON(data['HealthCheck']);
        }
        // validate the optional field `SourceSecurityGroup`
        if (data['SourceSecurityGroup']) { // data not null
          LoadBalancerDescriptionSourceSecurityGroup.validateJSON(data['SourceSecurityGroup']);
        }
        // validate the optional field `SecurityGroups`
        if (data['SecurityGroups']) { // data not null
          Array.validateJSON(data['SecurityGroups']);
        }
        // validate the optional field `CreatedTime`
        if (data['CreatedTime']) { // data not null
          Date.validateJSON(data['CreatedTime']);
        }
        // validate the optional field `Scheme`
        if (data['Scheme']) { // data not null
          String.validateJSON(data['Scheme']);
        }

        return true;
    }


}



/**
 * @member {String} LoadBalancerName
 */
LoadBalancerDescription.prototype['LoadBalancerName'] = undefined;

/**
 * @member {String} DNSName
 */
LoadBalancerDescription.prototype['DNSName'] = undefined;

/**
 * @member {String} CanonicalHostedZoneName
 */
LoadBalancerDescription.prototype['CanonicalHostedZoneName'] = undefined;

/**
 * @member {String} CanonicalHostedZoneNameID
 */
LoadBalancerDescription.prototype['CanonicalHostedZoneNameID'] = undefined;

/**
 * @member {Array} ListenerDescriptions
 */
LoadBalancerDescription.prototype['ListenerDescriptions'] = undefined;

/**
 * @member {module:model/LoadBalancerDescriptionPolicies} Policies
 */
LoadBalancerDescription.prototype['Policies'] = undefined;

/**
 * @member {Array} BackendServerDescriptions
 */
LoadBalancerDescription.prototype['BackendServerDescriptions'] = undefined;

/**
 * @member {Array} AvailabilityZones
 */
LoadBalancerDescription.prototype['AvailabilityZones'] = undefined;

/**
 * @member {Array} Subnets
 */
LoadBalancerDescription.prototype['Subnets'] = undefined;

/**
 * @member {String} VPCId
 */
LoadBalancerDescription.prototype['VPCId'] = undefined;

/**
 * @member {Array} Instances
 */
LoadBalancerDescription.prototype['Instances'] = undefined;

/**
 * @member {module:model/LoadBalancerDescriptionHealthCheck} HealthCheck
 */
LoadBalancerDescription.prototype['HealthCheck'] = undefined;

/**
 * @member {module:model/LoadBalancerDescriptionSourceSecurityGroup} SourceSecurityGroup
 */
LoadBalancerDescription.prototype['SourceSecurityGroup'] = undefined;

/**
 * @member {Array} SecurityGroups
 */
LoadBalancerDescription.prototype['SecurityGroups'] = undefined;

/**
 * @member {Date} CreatedTime
 */
LoadBalancerDescription.prototype['CreatedTime'] = undefined;

/**
 * @member {String} Scheme
 */
LoadBalancerDescription.prototype['Scheme'] = undefined;






export default LoadBalancerDescription;

