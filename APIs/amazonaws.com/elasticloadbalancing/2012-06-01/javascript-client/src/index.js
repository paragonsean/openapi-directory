/**
 * Elastic Load Balancing
 * <fullname>Elastic Load Balancing</fullname> <p>A load balancer can distribute incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.</p> <p>Elastic Load Balancing supports three types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. You can select a load balancer based on your application needs. For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers and Network Load Balancers.</p> <p>To get started, create a load balancer with one or more listeners using <a>CreateLoadBalancer</a>. Register your instances with the load balancer using <a>RegisterInstancesWithLoadBalancer</a>.</p> <p>All Elastic Load Balancing operations are <i>idempotent</i>, which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code.</p>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessLog from './model/AccessLog';
import AddAvailabilityZonesInput from './model/AddAvailabilityZonesInput';
import AddAvailabilityZonesOutput from './model/AddAvailabilityZonesOutput';
import AddTagsInput from './model/AddTagsInput';
import AdditionalAttribute from './model/AdditionalAttribute';
import AppCookieStickinessPolicy from './model/AppCookieStickinessPolicy';
import ApplySecurityGroupsToLoadBalancerInput from './model/ApplySecurityGroupsToLoadBalancerInput';
import ApplySecurityGroupsToLoadBalancerOutput from './model/ApplySecurityGroupsToLoadBalancerOutput';
import AttachLoadBalancerToSubnetsInput from './model/AttachLoadBalancerToSubnetsInput';
import AttachLoadBalancerToSubnetsOutput from './model/AttachLoadBalancerToSubnetsOutput';
import BackendServerDescription from './model/BackendServerDescription';
import ConfigureHealthCheckInput from './model/ConfigureHealthCheckInput';
import ConfigureHealthCheckInputHealthCheck from './model/ConfigureHealthCheckInputHealthCheck';
import ConfigureHealthCheckOutput from './model/ConfigureHealthCheckOutput';
import ConfigureHealthCheckOutputHealthCheck from './model/ConfigureHealthCheckOutputHealthCheck';
import ConnectionDraining from './model/ConnectionDraining';
import ConnectionSettings from './model/ConnectionSettings';
import CreateAccessPointInput from './model/CreateAccessPointInput';
import CreateAccessPointOutput from './model/CreateAccessPointOutput';
import CreateAppCookieStickinessPolicyInput from './model/CreateAppCookieStickinessPolicyInput';
import CreateLBCookieStickinessPolicyInput from './model/CreateLBCookieStickinessPolicyInput';
import CreateLoadBalancerListenerInput from './model/CreateLoadBalancerListenerInput';
import CreateLoadBalancerPolicyInput from './model/CreateLoadBalancerPolicyInput';
import CrossZoneLoadBalancing from './model/CrossZoneLoadBalancing';
import DeleteAccessPointInput from './model/DeleteAccessPointInput';
import DeleteLoadBalancerListenerInput from './model/DeleteLoadBalancerListenerInput';
import DeleteLoadBalancerPolicyInput from './model/DeleteLoadBalancerPolicyInput';
import DeregisterEndPointsInput from './model/DeregisterEndPointsInput';
import DeregisterEndPointsOutput from './model/DeregisterEndPointsOutput';
import DescribeAccessPointsInput from './model/DescribeAccessPointsInput';
import DescribeAccessPointsOutput from './model/DescribeAccessPointsOutput';
import DescribeAccountLimitsInput from './model/DescribeAccountLimitsInput';
import DescribeAccountLimitsOutput from './model/DescribeAccountLimitsOutput';
import DescribeEndPointStateInput from './model/DescribeEndPointStateInput';
import DescribeEndPointStateOutput from './model/DescribeEndPointStateOutput';
import DescribeLoadBalancerAttributesInput from './model/DescribeLoadBalancerAttributesInput';
import DescribeLoadBalancerAttributesOutput from './model/DescribeLoadBalancerAttributesOutput';
import DescribeLoadBalancerAttributesOutputLoadBalancerAttributes from './model/DescribeLoadBalancerAttributesOutputLoadBalancerAttributes';
import DescribeLoadBalancerPoliciesInput from './model/DescribeLoadBalancerPoliciesInput';
import DescribeLoadBalancerPoliciesOutput from './model/DescribeLoadBalancerPoliciesOutput';
import DescribeLoadBalancerPolicyTypesInput from './model/DescribeLoadBalancerPolicyTypesInput';
import DescribeLoadBalancerPolicyTypesOutput from './model/DescribeLoadBalancerPolicyTypesOutput';
import DescribeTagsInput from './model/DescribeTagsInput';
import DescribeTagsOutput from './model/DescribeTagsOutput';
import DetachLoadBalancerFromSubnetsInput from './model/DetachLoadBalancerFromSubnetsInput';
import DetachLoadBalancerFromSubnetsOutput from './model/DetachLoadBalancerFromSubnetsOutput';
import GETConfigureHealthCheckHealthCheckParameter from './model/GETConfigureHealthCheckHealthCheckParameter';
import GETModifyLoadBalancerAttributesLoadBalancerAttributesParameter from './model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameter';
import GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog from './model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog';
import GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionDraining from './model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionDraining';
import GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionSettings from './model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionSettings';
import GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterCrossZoneLoadBalancing from './model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterCrossZoneLoadBalancing';
import HealthCheck from './model/HealthCheck';
import Instance from './model/Instance';
import InstanceState from './model/InstanceState';
import LBCookieStickinessPolicy from './model/LBCookieStickinessPolicy';
import Limit from './model/Limit';
import Listener from './model/Listener';
import ListenerDescription from './model/ListenerDescription';
import ListenerDescriptionListener from './model/ListenerDescriptionListener';
import LoadBalancerAttributes from './model/LoadBalancerAttributes';
import LoadBalancerDescription from './model/LoadBalancerDescription';
import LoadBalancerDescriptionHealthCheck from './model/LoadBalancerDescriptionHealthCheck';
import LoadBalancerDescriptionPolicies from './model/LoadBalancerDescriptionPolicies';
import LoadBalancerDescriptionSourceSecurityGroup from './model/LoadBalancerDescriptionSourceSecurityGroup';
import ModifyLoadBalancerAttributesInput from './model/ModifyLoadBalancerAttributesInput';
import ModifyLoadBalancerAttributesInputLoadBalancerAttributes from './model/ModifyLoadBalancerAttributesInputLoadBalancerAttributes';
import ModifyLoadBalancerAttributesOutput from './model/ModifyLoadBalancerAttributesOutput';
import Policies from './model/Policies';
import PolicyAttribute from './model/PolicyAttribute';
import PolicyAttributeDescription from './model/PolicyAttributeDescription';
import PolicyAttributeTypeDescription from './model/PolicyAttributeTypeDescription';
import PolicyDescription from './model/PolicyDescription';
import PolicyTypeDescription from './model/PolicyTypeDescription';
import RegisterEndPointsInput from './model/RegisterEndPointsInput';
import RegisterEndPointsOutput from './model/RegisterEndPointsOutput';
import RemoveAvailabilityZonesInput from './model/RemoveAvailabilityZonesInput';
import RemoveAvailabilityZonesOutput from './model/RemoveAvailabilityZonesOutput';
import RemoveTagsInput from './model/RemoveTagsInput';
import SetLoadBalancerListenerSSLCertificateInput from './model/SetLoadBalancerListenerSSLCertificateInput';
import SetLoadBalancerPoliciesForBackendServerInput from './model/SetLoadBalancerPoliciesForBackendServerInput';
import SetLoadBalancerPoliciesOfListenerInput from './model/SetLoadBalancerPoliciesOfListenerInput';
import SourceSecurityGroup from './model/SourceSecurityGroup';
import Tag from './model/Tag';
import TagDescription from './model/TagDescription';
import TagKeyOnly from './model/TagKeyOnly';
import DefaultApi from './api/DefaultApi';


/**
* &lt;fullname&gt;Elastic Load Balancing&lt;/fullname&gt; &lt;p&gt;A load balancer can distribute incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.&lt;/p&gt; &lt;p&gt;Elastic Load Balancing supports three types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. You can select a load balancer based on your application needs. For more information, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\&quot;&gt;Elastic Load Balancing User Guide&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers and Network Load Balancers.&lt;/p&gt; &lt;p&gt;To get started, create a load balancer with one or more listeners using &lt;a&gt;CreateLoadBalancer&lt;/a&gt;. Register your instances with the load balancer using &lt;a&gt;RegisterInstancesWithLoadBalancer&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;All Elastic Load Balancing operations are &lt;i&gt;idempotent&lt;/i&gt;, which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ElasticLoadBalancing = require('index'); // See note below*.
* var xxxSvc = new ElasticLoadBalancing.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ElasticLoadBalancing.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ElasticLoadBalancing.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ElasticLoadBalancing.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2012-06-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessLog model constructor.
     * @property {module:model/AccessLog}
     */
    AccessLog,

    /**
     * The AddAvailabilityZonesInput model constructor.
     * @property {module:model/AddAvailabilityZonesInput}
     */
    AddAvailabilityZonesInput,

    /**
     * The AddAvailabilityZonesOutput model constructor.
     * @property {module:model/AddAvailabilityZonesOutput}
     */
    AddAvailabilityZonesOutput,

    /**
     * The AddTagsInput model constructor.
     * @property {module:model/AddTagsInput}
     */
    AddTagsInput,

    /**
     * The AdditionalAttribute model constructor.
     * @property {module:model/AdditionalAttribute}
     */
    AdditionalAttribute,

    /**
     * The AppCookieStickinessPolicy model constructor.
     * @property {module:model/AppCookieStickinessPolicy}
     */
    AppCookieStickinessPolicy,

    /**
     * The ApplySecurityGroupsToLoadBalancerInput model constructor.
     * @property {module:model/ApplySecurityGroupsToLoadBalancerInput}
     */
    ApplySecurityGroupsToLoadBalancerInput,

    /**
     * The ApplySecurityGroupsToLoadBalancerOutput model constructor.
     * @property {module:model/ApplySecurityGroupsToLoadBalancerOutput}
     */
    ApplySecurityGroupsToLoadBalancerOutput,

    /**
     * The AttachLoadBalancerToSubnetsInput model constructor.
     * @property {module:model/AttachLoadBalancerToSubnetsInput}
     */
    AttachLoadBalancerToSubnetsInput,

    /**
     * The AttachLoadBalancerToSubnetsOutput model constructor.
     * @property {module:model/AttachLoadBalancerToSubnetsOutput}
     */
    AttachLoadBalancerToSubnetsOutput,

    /**
     * The BackendServerDescription model constructor.
     * @property {module:model/BackendServerDescription}
     */
    BackendServerDescription,

    /**
     * The ConfigureHealthCheckInput model constructor.
     * @property {module:model/ConfigureHealthCheckInput}
     */
    ConfigureHealthCheckInput,

    /**
     * The ConfigureHealthCheckInputHealthCheck model constructor.
     * @property {module:model/ConfigureHealthCheckInputHealthCheck}
     */
    ConfigureHealthCheckInputHealthCheck,

    /**
     * The ConfigureHealthCheckOutput model constructor.
     * @property {module:model/ConfigureHealthCheckOutput}
     */
    ConfigureHealthCheckOutput,

    /**
     * The ConfigureHealthCheckOutputHealthCheck model constructor.
     * @property {module:model/ConfigureHealthCheckOutputHealthCheck}
     */
    ConfigureHealthCheckOutputHealthCheck,

    /**
     * The ConnectionDraining model constructor.
     * @property {module:model/ConnectionDraining}
     */
    ConnectionDraining,

    /**
     * The ConnectionSettings model constructor.
     * @property {module:model/ConnectionSettings}
     */
    ConnectionSettings,

    /**
     * The CreateAccessPointInput model constructor.
     * @property {module:model/CreateAccessPointInput}
     */
    CreateAccessPointInput,

    /**
     * The CreateAccessPointOutput model constructor.
     * @property {module:model/CreateAccessPointOutput}
     */
    CreateAccessPointOutput,

    /**
     * The CreateAppCookieStickinessPolicyInput model constructor.
     * @property {module:model/CreateAppCookieStickinessPolicyInput}
     */
    CreateAppCookieStickinessPolicyInput,

    /**
     * The CreateLBCookieStickinessPolicyInput model constructor.
     * @property {module:model/CreateLBCookieStickinessPolicyInput}
     */
    CreateLBCookieStickinessPolicyInput,

    /**
     * The CreateLoadBalancerListenerInput model constructor.
     * @property {module:model/CreateLoadBalancerListenerInput}
     */
    CreateLoadBalancerListenerInput,

    /**
     * The CreateLoadBalancerPolicyInput model constructor.
     * @property {module:model/CreateLoadBalancerPolicyInput}
     */
    CreateLoadBalancerPolicyInput,

    /**
     * The CrossZoneLoadBalancing model constructor.
     * @property {module:model/CrossZoneLoadBalancing}
     */
    CrossZoneLoadBalancing,

    /**
     * The DeleteAccessPointInput model constructor.
     * @property {module:model/DeleteAccessPointInput}
     */
    DeleteAccessPointInput,

    /**
     * The DeleteLoadBalancerListenerInput model constructor.
     * @property {module:model/DeleteLoadBalancerListenerInput}
     */
    DeleteLoadBalancerListenerInput,

    /**
     * The DeleteLoadBalancerPolicyInput model constructor.
     * @property {module:model/DeleteLoadBalancerPolicyInput}
     */
    DeleteLoadBalancerPolicyInput,

    /**
     * The DeregisterEndPointsInput model constructor.
     * @property {module:model/DeregisterEndPointsInput}
     */
    DeregisterEndPointsInput,

    /**
     * The DeregisterEndPointsOutput model constructor.
     * @property {module:model/DeregisterEndPointsOutput}
     */
    DeregisterEndPointsOutput,

    /**
     * The DescribeAccessPointsInput model constructor.
     * @property {module:model/DescribeAccessPointsInput}
     */
    DescribeAccessPointsInput,

    /**
     * The DescribeAccessPointsOutput model constructor.
     * @property {module:model/DescribeAccessPointsOutput}
     */
    DescribeAccessPointsOutput,

    /**
     * The DescribeAccountLimitsInput model constructor.
     * @property {module:model/DescribeAccountLimitsInput}
     */
    DescribeAccountLimitsInput,

    /**
     * The DescribeAccountLimitsOutput model constructor.
     * @property {module:model/DescribeAccountLimitsOutput}
     */
    DescribeAccountLimitsOutput,

    /**
     * The DescribeEndPointStateInput model constructor.
     * @property {module:model/DescribeEndPointStateInput}
     */
    DescribeEndPointStateInput,

    /**
     * The DescribeEndPointStateOutput model constructor.
     * @property {module:model/DescribeEndPointStateOutput}
     */
    DescribeEndPointStateOutput,

    /**
     * The DescribeLoadBalancerAttributesInput model constructor.
     * @property {module:model/DescribeLoadBalancerAttributesInput}
     */
    DescribeLoadBalancerAttributesInput,

    /**
     * The DescribeLoadBalancerAttributesOutput model constructor.
     * @property {module:model/DescribeLoadBalancerAttributesOutput}
     */
    DescribeLoadBalancerAttributesOutput,

    /**
     * The DescribeLoadBalancerAttributesOutputLoadBalancerAttributes model constructor.
     * @property {module:model/DescribeLoadBalancerAttributesOutputLoadBalancerAttributes}
     */
    DescribeLoadBalancerAttributesOutputLoadBalancerAttributes,

    /**
     * The DescribeLoadBalancerPoliciesInput model constructor.
     * @property {module:model/DescribeLoadBalancerPoliciesInput}
     */
    DescribeLoadBalancerPoliciesInput,

    /**
     * The DescribeLoadBalancerPoliciesOutput model constructor.
     * @property {module:model/DescribeLoadBalancerPoliciesOutput}
     */
    DescribeLoadBalancerPoliciesOutput,

    /**
     * The DescribeLoadBalancerPolicyTypesInput model constructor.
     * @property {module:model/DescribeLoadBalancerPolicyTypesInput}
     */
    DescribeLoadBalancerPolicyTypesInput,

    /**
     * The DescribeLoadBalancerPolicyTypesOutput model constructor.
     * @property {module:model/DescribeLoadBalancerPolicyTypesOutput}
     */
    DescribeLoadBalancerPolicyTypesOutput,

    /**
     * The DescribeTagsInput model constructor.
     * @property {module:model/DescribeTagsInput}
     */
    DescribeTagsInput,

    /**
     * The DescribeTagsOutput model constructor.
     * @property {module:model/DescribeTagsOutput}
     */
    DescribeTagsOutput,

    /**
     * The DetachLoadBalancerFromSubnetsInput model constructor.
     * @property {module:model/DetachLoadBalancerFromSubnetsInput}
     */
    DetachLoadBalancerFromSubnetsInput,

    /**
     * The DetachLoadBalancerFromSubnetsOutput model constructor.
     * @property {module:model/DetachLoadBalancerFromSubnetsOutput}
     */
    DetachLoadBalancerFromSubnetsOutput,

    /**
     * The GETConfigureHealthCheckHealthCheckParameter model constructor.
     * @property {module:model/GETConfigureHealthCheckHealthCheckParameter}
     */
    GETConfigureHealthCheckHealthCheckParameter,

    /**
     * The GETModifyLoadBalancerAttributesLoadBalancerAttributesParameter model constructor.
     * @property {module:model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameter}
     */
    GETModifyLoadBalancerAttributesLoadBalancerAttributesParameter,

    /**
     * The GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog model constructor.
     * @property {module:model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog}
     */
    GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterAccessLog,

    /**
     * The GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionDraining model constructor.
     * @property {module:model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionDraining}
     */
    GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionDraining,

    /**
     * The GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionSettings model constructor.
     * @property {module:model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionSettings}
     */
    GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterConnectionSettings,

    /**
     * The GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterCrossZoneLoadBalancing model constructor.
     * @property {module:model/GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterCrossZoneLoadBalancing}
     */
    GETModifyLoadBalancerAttributesLoadBalancerAttributesParameterCrossZoneLoadBalancing,

    /**
     * The HealthCheck model constructor.
     * @property {module:model/HealthCheck}
     */
    HealthCheck,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The InstanceState model constructor.
     * @property {module:model/InstanceState}
     */
    InstanceState,

    /**
     * The LBCookieStickinessPolicy model constructor.
     * @property {module:model/LBCookieStickinessPolicy}
     */
    LBCookieStickinessPolicy,

    /**
     * The Limit model constructor.
     * @property {module:model/Limit}
     */
    Limit,

    /**
     * The Listener model constructor.
     * @property {module:model/Listener}
     */
    Listener,

    /**
     * The ListenerDescription model constructor.
     * @property {module:model/ListenerDescription}
     */
    ListenerDescription,

    /**
     * The ListenerDescriptionListener model constructor.
     * @property {module:model/ListenerDescriptionListener}
     */
    ListenerDescriptionListener,

    /**
     * The LoadBalancerAttributes model constructor.
     * @property {module:model/LoadBalancerAttributes}
     */
    LoadBalancerAttributes,

    /**
     * The LoadBalancerDescription model constructor.
     * @property {module:model/LoadBalancerDescription}
     */
    LoadBalancerDescription,

    /**
     * The LoadBalancerDescriptionHealthCheck model constructor.
     * @property {module:model/LoadBalancerDescriptionHealthCheck}
     */
    LoadBalancerDescriptionHealthCheck,

    /**
     * The LoadBalancerDescriptionPolicies model constructor.
     * @property {module:model/LoadBalancerDescriptionPolicies}
     */
    LoadBalancerDescriptionPolicies,

    /**
     * The LoadBalancerDescriptionSourceSecurityGroup model constructor.
     * @property {module:model/LoadBalancerDescriptionSourceSecurityGroup}
     */
    LoadBalancerDescriptionSourceSecurityGroup,

    /**
     * The ModifyLoadBalancerAttributesInput model constructor.
     * @property {module:model/ModifyLoadBalancerAttributesInput}
     */
    ModifyLoadBalancerAttributesInput,

    /**
     * The ModifyLoadBalancerAttributesInputLoadBalancerAttributes model constructor.
     * @property {module:model/ModifyLoadBalancerAttributesInputLoadBalancerAttributes}
     */
    ModifyLoadBalancerAttributesInputLoadBalancerAttributes,

    /**
     * The ModifyLoadBalancerAttributesOutput model constructor.
     * @property {module:model/ModifyLoadBalancerAttributesOutput}
     */
    ModifyLoadBalancerAttributesOutput,

    /**
     * The Policies model constructor.
     * @property {module:model/Policies}
     */
    Policies,

    /**
     * The PolicyAttribute model constructor.
     * @property {module:model/PolicyAttribute}
     */
    PolicyAttribute,

    /**
     * The PolicyAttributeDescription model constructor.
     * @property {module:model/PolicyAttributeDescription}
     */
    PolicyAttributeDescription,

    /**
     * The PolicyAttributeTypeDescription model constructor.
     * @property {module:model/PolicyAttributeTypeDescription}
     */
    PolicyAttributeTypeDescription,

    /**
     * The PolicyDescription model constructor.
     * @property {module:model/PolicyDescription}
     */
    PolicyDescription,

    /**
     * The PolicyTypeDescription model constructor.
     * @property {module:model/PolicyTypeDescription}
     */
    PolicyTypeDescription,

    /**
     * The RegisterEndPointsInput model constructor.
     * @property {module:model/RegisterEndPointsInput}
     */
    RegisterEndPointsInput,

    /**
     * The RegisterEndPointsOutput model constructor.
     * @property {module:model/RegisterEndPointsOutput}
     */
    RegisterEndPointsOutput,

    /**
     * The RemoveAvailabilityZonesInput model constructor.
     * @property {module:model/RemoveAvailabilityZonesInput}
     */
    RemoveAvailabilityZonesInput,

    /**
     * The RemoveAvailabilityZonesOutput model constructor.
     * @property {module:model/RemoveAvailabilityZonesOutput}
     */
    RemoveAvailabilityZonesOutput,

    /**
     * The RemoveTagsInput model constructor.
     * @property {module:model/RemoveTagsInput}
     */
    RemoveTagsInput,

    /**
     * The SetLoadBalancerListenerSSLCertificateInput model constructor.
     * @property {module:model/SetLoadBalancerListenerSSLCertificateInput}
     */
    SetLoadBalancerListenerSSLCertificateInput,

    /**
     * The SetLoadBalancerPoliciesForBackendServerInput model constructor.
     * @property {module:model/SetLoadBalancerPoliciesForBackendServerInput}
     */
    SetLoadBalancerPoliciesForBackendServerInput,

    /**
     * The SetLoadBalancerPoliciesOfListenerInput model constructor.
     * @property {module:model/SetLoadBalancerPoliciesOfListenerInput}
     */
    SetLoadBalancerPoliciesOfListenerInput,

    /**
     * The SourceSecurityGroup model constructor.
     * @property {module:model/SourceSecurityGroup}
     */
    SourceSecurityGroup,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TagDescription model constructor.
     * @property {module:model/TagDescription}
     */
    TagDescription,

    /**
     * The TagKeyOnly model constructor.
     * @property {module:model/TagKeyOnly}
     */
    TagKeyOnly,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
