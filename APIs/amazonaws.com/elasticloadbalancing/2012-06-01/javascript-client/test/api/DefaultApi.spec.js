/**
 * Elastic Load Balancing
 * <fullname>Elastic Load Balancing</fullname> <p>A load balancer can distribute incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.</p> <p>Elastic Load Balancing supports three types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. You can select a load balancer based on your application needs. For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers and Network Load Balancers.</p> <p>To get started, create a load balancer with one or more listeners using <a>CreateLoadBalancer</a>. Register your instances with the load balancer using <a>RegisterInstancesWithLoadBalancer</a>.</p> <p>All Elastic Load Balancing operations are <i>idempotent</i>, which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code.</p>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ElasticLoadBalancing);
  }
}(this, function(expect, ElasticLoadBalancing) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ElasticLoadBalancing.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('gETAddTags', function() {
      it('should call gETAddTags successfully', function(done) {
        //uncomment below and update the code to test gETAddTags
        //instance.gETAddTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETApplySecurityGroupsToLoadBalancer', function() {
      it('should call gETApplySecurityGroupsToLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test gETApplySecurityGroupsToLoadBalancer
        //instance.gETApplySecurityGroupsToLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETAttachLoadBalancerToSubnets', function() {
      it('should call gETAttachLoadBalancerToSubnets successfully', function(done) {
        //uncomment below and update the code to test gETAttachLoadBalancerToSubnets
        //instance.gETAttachLoadBalancerToSubnets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETConfigureHealthCheck', function() {
      it('should call gETConfigureHealthCheck successfully', function(done) {
        //uncomment below and update the code to test gETConfigureHealthCheck
        //instance.gETConfigureHealthCheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateAppCookieStickinessPolicy', function() {
      it('should call gETCreateAppCookieStickinessPolicy successfully', function(done) {
        //uncomment below and update the code to test gETCreateAppCookieStickinessPolicy
        //instance.gETCreateAppCookieStickinessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateLBCookieStickinessPolicy', function() {
      it('should call gETCreateLBCookieStickinessPolicy successfully', function(done) {
        //uncomment below and update the code to test gETCreateLBCookieStickinessPolicy
        //instance.gETCreateLBCookieStickinessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateLoadBalancer', function() {
      it('should call gETCreateLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test gETCreateLoadBalancer
        //instance.gETCreateLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateLoadBalancerListeners', function() {
      it('should call gETCreateLoadBalancerListeners successfully', function(done) {
        //uncomment below and update the code to test gETCreateLoadBalancerListeners
        //instance.gETCreateLoadBalancerListeners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateLoadBalancerPolicy', function() {
      it('should call gETCreateLoadBalancerPolicy successfully', function(done) {
        //uncomment below and update the code to test gETCreateLoadBalancerPolicy
        //instance.gETCreateLoadBalancerPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteLoadBalancer', function() {
      it('should call gETDeleteLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test gETDeleteLoadBalancer
        //instance.gETDeleteLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteLoadBalancerListeners', function() {
      it('should call gETDeleteLoadBalancerListeners successfully', function(done) {
        //uncomment below and update the code to test gETDeleteLoadBalancerListeners
        //instance.gETDeleteLoadBalancerListeners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteLoadBalancerPolicy', function() {
      it('should call gETDeleteLoadBalancerPolicy successfully', function(done) {
        //uncomment below and update the code to test gETDeleteLoadBalancerPolicy
        //instance.gETDeleteLoadBalancerPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeregisterInstancesFromLoadBalancer', function() {
      it('should call gETDeregisterInstancesFromLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test gETDeregisterInstancesFromLoadBalancer
        //instance.gETDeregisterInstancesFromLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAccountLimits', function() {
      it('should call gETDescribeAccountLimits successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAccountLimits
        //instance.gETDescribeAccountLimits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeInstanceHealth', function() {
      it('should call gETDescribeInstanceHealth successfully', function(done) {
        //uncomment below and update the code to test gETDescribeInstanceHealth
        //instance.gETDescribeInstanceHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeLoadBalancerAttributes', function() {
      it('should call gETDescribeLoadBalancerAttributes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeLoadBalancerAttributes
        //instance.gETDescribeLoadBalancerAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeLoadBalancerPolicies', function() {
      it('should call gETDescribeLoadBalancerPolicies successfully', function(done) {
        //uncomment below and update the code to test gETDescribeLoadBalancerPolicies
        //instance.gETDescribeLoadBalancerPolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeLoadBalancerPolicyTypes', function() {
      it('should call gETDescribeLoadBalancerPolicyTypes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeLoadBalancerPolicyTypes
        //instance.gETDescribeLoadBalancerPolicyTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeLoadBalancers', function() {
      it('should call gETDescribeLoadBalancers successfully', function(done) {
        //uncomment below and update the code to test gETDescribeLoadBalancers
        //instance.gETDescribeLoadBalancers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeTags', function() {
      it('should call gETDescribeTags successfully', function(done) {
        //uncomment below and update the code to test gETDescribeTags
        //instance.gETDescribeTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDetachLoadBalancerFromSubnets', function() {
      it('should call gETDetachLoadBalancerFromSubnets successfully', function(done) {
        //uncomment below and update the code to test gETDetachLoadBalancerFromSubnets
        //instance.gETDetachLoadBalancerFromSubnets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDisableAvailabilityZonesForLoadBalancer', function() {
      it('should call gETDisableAvailabilityZonesForLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test gETDisableAvailabilityZonesForLoadBalancer
        //instance.gETDisableAvailabilityZonesForLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETEnableAvailabilityZonesForLoadBalancer', function() {
      it('should call gETEnableAvailabilityZonesForLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test gETEnableAvailabilityZonesForLoadBalancer
        //instance.gETEnableAvailabilityZonesForLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETModifyLoadBalancerAttributes', function() {
      it('should call gETModifyLoadBalancerAttributes successfully', function(done) {
        //uncomment below and update the code to test gETModifyLoadBalancerAttributes
        //instance.gETModifyLoadBalancerAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRegisterInstancesWithLoadBalancer', function() {
      it('should call gETRegisterInstancesWithLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test gETRegisterInstancesWithLoadBalancer
        //instance.gETRegisterInstancesWithLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRemoveTags', function() {
      it('should call gETRemoveTags successfully', function(done) {
        //uncomment below and update the code to test gETRemoveTags
        //instance.gETRemoveTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSetLoadBalancerListenerSSLCertificate', function() {
      it('should call gETSetLoadBalancerListenerSSLCertificate successfully', function(done) {
        //uncomment below and update the code to test gETSetLoadBalancerListenerSSLCertificate
        //instance.gETSetLoadBalancerListenerSSLCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSetLoadBalancerPoliciesForBackendServer', function() {
      it('should call gETSetLoadBalancerPoliciesForBackendServer successfully', function(done) {
        //uncomment below and update the code to test gETSetLoadBalancerPoliciesForBackendServer
        //instance.gETSetLoadBalancerPoliciesForBackendServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSetLoadBalancerPoliciesOfListener', function() {
      it('should call gETSetLoadBalancerPoliciesOfListener successfully', function(done) {
        //uncomment below and update the code to test gETSetLoadBalancerPoliciesOfListener
        //instance.gETSetLoadBalancerPoliciesOfListener(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAddTags', function() {
      it('should call pOSTAddTags successfully', function(done) {
        //uncomment below and update the code to test pOSTAddTags
        //instance.pOSTAddTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTApplySecurityGroupsToLoadBalancer', function() {
      it('should call pOSTApplySecurityGroupsToLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test pOSTApplySecurityGroupsToLoadBalancer
        //instance.pOSTApplySecurityGroupsToLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAttachLoadBalancerToSubnets', function() {
      it('should call pOSTAttachLoadBalancerToSubnets successfully', function(done) {
        //uncomment below and update the code to test pOSTAttachLoadBalancerToSubnets
        //instance.pOSTAttachLoadBalancerToSubnets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTConfigureHealthCheck', function() {
      it('should call pOSTConfigureHealthCheck successfully', function(done) {
        //uncomment below and update the code to test pOSTConfigureHealthCheck
        //instance.pOSTConfigureHealthCheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateAppCookieStickinessPolicy', function() {
      it('should call pOSTCreateAppCookieStickinessPolicy successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateAppCookieStickinessPolicy
        //instance.pOSTCreateAppCookieStickinessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateLBCookieStickinessPolicy', function() {
      it('should call pOSTCreateLBCookieStickinessPolicy successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateLBCookieStickinessPolicy
        //instance.pOSTCreateLBCookieStickinessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateLoadBalancer', function() {
      it('should call pOSTCreateLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateLoadBalancer
        //instance.pOSTCreateLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateLoadBalancerListeners', function() {
      it('should call pOSTCreateLoadBalancerListeners successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateLoadBalancerListeners
        //instance.pOSTCreateLoadBalancerListeners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateLoadBalancerPolicy', function() {
      it('should call pOSTCreateLoadBalancerPolicy successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateLoadBalancerPolicy
        //instance.pOSTCreateLoadBalancerPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteLoadBalancer', function() {
      it('should call pOSTDeleteLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteLoadBalancer
        //instance.pOSTDeleteLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteLoadBalancerListeners', function() {
      it('should call pOSTDeleteLoadBalancerListeners successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteLoadBalancerListeners
        //instance.pOSTDeleteLoadBalancerListeners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteLoadBalancerPolicy', function() {
      it('should call pOSTDeleteLoadBalancerPolicy successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteLoadBalancerPolicy
        //instance.pOSTDeleteLoadBalancerPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeregisterInstancesFromLoadBalancer', function() {
      it('should call pOSTDeregisterInstancesFromLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test pOSTDeregisterInstancesFromLoadBalancer
        //instance.pOSTDeregisterInstancesFromLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAccountLimits', function() {
      it('should call pOSTDescribeAccountLimits successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAccountLimits
        //instance.pOSTDescribeAccountLimits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeInstanceHealth', function() {
      it('should call pOSTDescribeInstanceHealth successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeInstanceHealth
        //instance.pOSTDescribeInstanceHealth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeLoadBalancerAttributes', function() {
      it('should call pOSTDescribeLoadBalancerAttributes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeLoadBalancerAttributes
        //instance.pOSTDescribeLoadBalancerAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeLoadBalancerPolicies', function() {
      it('should call pOSTDescribeLoadBalancerPolicies successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeLoadBalancerPolicies
        //instance.pOSTDescribeLoadBalancerPolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeLoadBalancerPolicyTypes', function() {
      it('should call pOSTDescribeLoadBalancerPolicyTypes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeLoadBalancerPolicyTypes
        //instance.pOSTDescribeLoadBalancerPolicyTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeLoadBalancers', function() {
      it('should call pOSTDescribeLoadBalancers successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeLoadBalancers
        //instance.pOSTDescribeLoadBalancers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeTags', function() {
      it('should call pOSTDescribeTags successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeTags
        //instance.pOSTDescribeTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDetachLoadBalancerFromSubnets', function() {
      it('should call pOSTDetachLoadBalancerFromSubnets successfully', function(done) {
        //uncomment below and update the code to test pOSTDetachLoadBalancerFromSubnets
        //instance.pOSTDetachLoadBalancerFromSubnets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDisableAvailabilityZonesForLoadBalancer', function() {
      it('should call pOSTDisableAvailabilityZonesForLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test pOSTDisableAvailabilityZonesForLoadBalancer
        //instance.pOSTDisableAvailabilityZonesForLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTEnableAvailabilityZonesForLoadBalancer', function() {
      it('should call pOSTEnableAvailabilityZonesForLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test pOSTEnableAvailabilityZonesForLoadBalancer
        //instance.pOSTEnableAvailabilityZonesForLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTModifyLoadBalancerAttributes', function() {
      it('should call pOSTModifyLoadBalancerAttributes successfully', function(done) {
        //uncomment below and update the code to test pOSTModifyLoadBalancerAttributes
        //instance.pOSTModifyLoadBalancerAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRegisterInstancesWithLoadBalancer', function() {
      it('should call pOSTRegisterInstancesWithLoadBalancer successfully', function(done) {
        //uncomment below and update the code to test pOSTRegisterInstancesWithLoadBalancer
        //instance.pOSTRegisterInstancesWithLoadBalancer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRemoveTags', function() {
      it('should call pOSTRemoveTags successfully', function(done) {
        //uncomment below and update the code to test pOSTRemoveTags
        //instance.pOSTRemoveTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSetLoadBalancerListenerSSLCertificate', function() {
      it('should call pOSTSetLoadBalancerListenerSSLCertificate successfully', function(done) {
        //uncomment below and update the code to test pOSTSetLoadBalancerListenerSSLCertificate
        //instance.pOSTSetLoadBalancerListenerSSLCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSetLoadBalancerPoliciesForBackendServer', function() {
      it('should call pOSTSetLoadBalancerPoliciesForBackendServer successfully', function(done) {
        //uncomment below and update the code to test pOSTSetLoadBalancerPoliciesForBackendServer
        //instance.pOSTSetLoadBalancerPoliciesForBackendServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSetLoadBalancerPoliciesOfListener', function() {
      it('should call pOSTSetLoadBalancerPoliciesOfListener successfully', function(done) {
        //uncomment below and update the code to test pOSTSetLoadBalancerPoliciesOfListener
        //instance.pOSTSetLoadBalancerPoliciesOfListener(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
