/*
 * Elastic Load Balancing
 * <fullname>Elastic Load Balancing</fullname> <p>A load balancer can distribute incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.</p> <p>Elastic Load Balancing supports three types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers. You can select a load balancer based on your application needs. For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers and Network Load Balancers.</p> <p>To get started, create a load balancer with one or more listeners using <a>CreateLoadBalancer</a>. Register your instances with the load balancer using <a>RegisterInstancesWithLoadBalancer</a>.</p> <p>All Elastic Load Balancing operations are <i>idempotent</i>, which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code.</p>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LoadBalancerDescriptionHealthCheck;
import org.openapitools.client.model.LoadBalancerDescriptionPolicies;
import org.openapitools.client.model.LoadBalancerDescriptionSourceSecurityGroup;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a load balancer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:22.346579-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LoadBalancerDescription {
  public static final String SERIALIZED_NAME_LOAD_BALANCER_NAME = "LoadBalancerName";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_NAME)
  private String loadBalancerName;

  public static final String SERIALIZED_NAME_DN_S_NAME = "DNSName";
  @SerializedName(SERIALIZED_NAME_DN_S_NAME)
  private String dnSName;

  public static final String SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_NAME = "CanonicalHostedZoneName";
  @SerializedName(SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_NAME)
  private String canonicalHostedZoneName;

  public static final String SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_NAME_I_D = "CanonicalHostedZoneNameID";
  @SerializedName(SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_NAME_I_D)
  private String canonicalHostedZoneNameID;

  public static final String SERIALIZED_NAME_LISTENER_DESCRIPTIONS = "ListenerDescriptions";
  @SerializedName(SERIALIZED_NAME_LISTENER_DESCRIPTIONS)
  private List listenerDescriptions;

  public static final String SERIALIZED_NAME_POLICIES = "Policies";
  @SerializedName(SERIALIZED_NAME_POLICIES)
  private LoadBalancerDescriptionPolicies policies;

  public static final String SERIALIZED_NAME_BACKEND_SERVER_DESCRIPTIONS = "BackendServerDescriptions";
  @SerializedName(SERIALIZED_NAME_BACKEND_SERVER_DESCRIPTIONS)
  private List backendServerDescriptions;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONES = "AvailabilityZones";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONES)
  private List availabilityZones;

  public static final String SERIALIZED_NAME_SUBNETS = "Subnets";
  @SerializedName(SERIALIZED_NAME_SUBNETS)
  private List subnets;

  public static final String SERIALIZED_NAME_VP_C_ID = "VPCId";
  @SerializedName(SERIALIZED_NAME_VP_C_ID)
  private String vpCId;

  public static final String SERIALIZED_NAME_INSTANCES = "Instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private List instances;

  public static final String SERIALIZED_NAME_HEALTH_CHECK = "HealthCheck";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK)
  private LoadBalancerDescriptionHealthCheck healthCheck;

  public static final String SERIALIZED_NAME_SOURCE_SECURITY_GROUP = "SourceSecurityGroup";
  @SerializedName(SERIALIZED_NAME_SOURCE_SECURITY_GROUP)
  private LoadBalancerDescriptionSourceSecurityGroup sourceSecurityGroup;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_CREATED_TIME = "CreatedTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private OffsetDateTime createdTime;

  public static final String SERIALIZED_NAME_SCHEME = "Scheme";
  @SerializedName(SERIALIZED_NAME_SCHEME)
  private String scheme;

  public LoadBalancerDescription() {
  }

  public LoadBalancerDescription loadBalancerName(String loadBalancerName) {
    this.loadBalancerName = loadBalancerName;
    return this;
  }

  /**
   * Get loadBalancerName
   * @return loadBalancerName
   */
  @javax.annotation.Nullable
  public String getLoadBalancerName() {
    return loadBalancerName;
  }

  public void setLoadBalancerName(String loadBalancerName) {
    this.loadBalancerName = loadBalancerName;
  }


  public LoadBalancerDescription dnSName(String dnSName) {
    this.dnSName = dnSName;
    return this;
  }

  /**
   * Get dnSName
   * @return dnSName
   */
  @javax.annotation.Nullable
  public String getDnSName() {
    return dnSName;
  }

  public void setDnSName(String dnSName) {
    this.dnSName = dnSName;
  }


  public LoadBalancerDescription canonicalHostedZoneName(String canonicalHostedZoneName) {
    this.canonicalHostedZoneName = canonicalHostedZoneName;
    return this;
  }

  /**
   * Get canonicalHostedZoneName
   * @return canonicalHostedZoneName
   */
  @javax.annotation.Nullable
  public String getCanonicalHostedZoneName() {
    return canonicalHostedZoneName;
  }

  public void setCanonicalHostedZoneName(String canonicalHostedZoneName) {
    this.canonicalHostedZoneName = canonicalHostedZoneName;
  }


  public LoadBalancerDescription canonicalHostedZoneNameID(String canonicalHostedZoneNameID) {
    this.canonicalHostedZoneNameID = canonicalHostedZoneNameID;
    return this;
  }

  /**
   * Get canonicalHostedZoneNameID
   * @return canonicalHostedZoneNameID
   */
  @javax.annotation.Nullable
  public String getCanonicalHostedZoneNameID() {
    return canonicalHostedZoneNameID;
  }

  public void setCanonicalHostedZoneNameID(String canonicalHostedZoneNameID) {
    this.canonicalHostedZoneNameID = canonicalHostedZoneNameID;
  }


  public LoadBalancerDescription listenerDescriptions(List listenerDescriptions) {
    this.listenerDescriptions = listenerDescriptions;
    return this;
  }

  /**
   * Get listenerDescriptions
   * @return listenerDescriptions
   */
  @javax.annotation.Nullable
  public List getListenerDescriptions() {
    return listenerDescriptions;
  }

  public void setListenerDescriptions(List listenerDescriptions) {
    this.listenerDescriptions = listenerDescriptions;
  }


  public LoadBalancerDescription policies(LoadBalancerDescriptionPolicies policies) {
    this.policies = policies;
    return this;
  }

  /**
   * Get policies
   * @return policies
   */
  @javax.annotation.Nullable
  public LoadBalancerDescriptionPolicies getPolicies() {
    return policies;
  }

  public void setPolicies(LoadBalancerDescriptionPolicies policies) {
    this.policies = policies;
  }


  public LoadBalancerDescription backendServerDescriptions(List backendServerDescriptions) {
    this.backendServerDescriptions = backendServerDescriptions;
    return this;
  }

  /**
   * Get backendServerDescriptions
   * @return backendServerDescriptions
   */
  @javax.annotation.Nullable
  public List getBackendServerDescriptions() {
    return backendServerDescriptions;
  }

  public void setBackendServerDescriptions(List backendServerDescriptions) {
    this.backendServerDescriptions = backendServerDescriptions;
  }


  public LoadBalancerDescription availabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  /**
   * Get availabilityZones
   * @return availabilityZones
   */
  @javax.annotation.Nullable
  public List getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public LoadBalancerDescription subnets(List subnets) {
    this.subnets = subnets;
    return this;
  }

  /**
   * Get subnets
   * @return subnets
   */
  @javax.annotation.Nullable
  public List getSubnets() {
    return subnets;
  }

  public void setSubnets(List subnets) {
    this.subnets = subnets;
  }


  public LoadBalancerDescription vpCId(String vpCId) {
    this.vpCId = vpCId;
    return this;
  }

  /**
   * Get vpCId
   * @return vpCId
   */
  @javax.annotation.Nullable
  public String getVpCId() {
    return vpCId;
  }

  public void setVpCId(String vpCId) {
    this.vpCId = vpCId;
  }


  public LoadBalancerDescription instances(List instances) {
    this.instances = instances;
    return this;
  }

  /**
   * Get instances
   * @return instances
   */
  @javax.annotation.Nullable
  public List getInstances() {
    return instances;
  }

  public void setInstances(List instances) {
    this.instances = instances;
  }


  public LoadBalancerDescription healthCheck(LoadBalancerDescriptionHealthCheck healthCheck) {
    this.healthCheck = healthCheck;
    return this;
  }

  /**
   * Get healthCheck
   * @return healthCheck
   */
  @javax.annotation.Nullable
  public LoadBalancerDescriptionHealthCheck getHealthCheck() {
    return healthCheck;
  }

  public void setHealthCheck(LoadBalancerDescriptionHealthCheck healthCheck) {
    this.healthCheck = healthCheck;
  }


  public LoadBalancerDescription sourceSecurityGroup(LoadBalancerDescriptionSourceSecurityGroup sourceSecurityGroup) {
    this.sourceSecurityGroup = sourceSecurityGroup;
    return this;
  }

  /**
   * Get sourceSecurityGroup
   * @return sourceSecurityGroup
   */
  @javax.annotation.Nullable
  public LoadBalancerDescriptionSourceSecurityGroup getSourceSecurityGroup() {
    return sourceSecurityGroup;
  }

  public void setSourceSecurityGroup(LoadBalancerDescriptionSourceSecurityGroup sourceSecurityGroup) {
    this.sourceSecurityGroup = sourceSecurityGroup;
  }


  public LoadBalancerDescription securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public LoadBalancerDescription createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public LoadBalancerDescription scheme(String scheme) {
    this.scheme = scheme;
    return this;
  }

  /**
   * Get scheme
   * @return scheme
   */
  @javax.annotation.Nullable
  public String getScheme() {
    return scheme;
  }

  public void setScheme(String scheme) {
    this.scheme = scheme;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadBalancerDescription loadBalancerDescription = (LoadBalancerDescription) o;
    return Objects.equals(this.loadBalancerName, loadBalancerDescription.loadBalancerName) &&
        Objects.equals(this.dnSName, loadBalancerDescription.dnSName) &&
        Objects.equals(this.canonicalHostedZoneName, loadBalancerDescription.canonicalHostedZoneName) &&
        Objects.equals(this.canonicalHostedZoneNameID, loadBalancerDescription.canonicalHostedZoneNameID) &&
        Objects.equals(this.listenerDescriptions, loadBalancerDescription.listenerDescriptions) &&
        Objects.equals(this.policies, loadBalancerDescription.policies) &&
        Objects.equals(this.backendServerDescriptions, loadBalancerDescription.backendServerDescriptions) &&
        Objects.equals(this.availabilityZones, loadBalancerDescription.availabilityZones) &&
        Objects.equals(this.subnets, loadBalancerDescription.subnets) &&
        Objects.equals(this.vpCId, loadBalancerDescription.vpCId) &&
        Objects.equals(this.instances, loadBalancerDescription.instances) &&
        Objects.equals(this.healthCheck, loadBalancerDescription.healthCheck) &&
        Objects.equals(this.sourceSecurityGroup, loadBalancerDescription.sourceSecurityGroup) &&
        Objects.equals(this.securityGroups, loadBalancerDescription.securityGroups) &&
        Objects.equals(this.createdTime, loadBalancerDescription.createdTime) &&
        Objects.equals(this.scheme, loadBalancerDescription.scheme);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loadBalancerName, dnSName, canonicalHostedZoneName, canonicalHostedZoneNameID, listenerDescriptions, policies, backendServerDescriptions, availabilityZones, subnets, vpCId, instances, healthCheck, sourceSecurityGroup, securityGroups, createdTime, scheme);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadBalancerDescription {\n");
    sb.append("    loadBalancerName: ").append(toIndentedString(loadBalancerName)).append("\n");
    sb.append("    dnSName: ").append(toIndentedString(dnSName)).append("\n");
    sb.append("    canonicalHostedZoneName: ").append(toIndentedString(canonicalHostedZoneName)).append("\n");
    sb.append("    canonicalHostedZoneNameID: ").append(toIndentedString(canonicalHostedZoneNameID)).append("\n");
    sb.append("    listenerDescriptions: ").append(toIndentedString(listenerDescriptions)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    backendServerDescriptions: ").append(toIndentedString(backendServerDescriptions)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    subnets: ").append(toIndentedString(subnets)).append("\n");
    sb.append("    vpCId: ").append(toIndentedString(vpCId)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    healthCheck: ").append(toIndentedString(healthCheck)).append("\n");
    sb.append("    sourceSecurityGroup: ").append(toIndentedString(sourceSecurityGroup)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LoadBalancerName");
    openapiFields.add("DNSName");
    openapiFields.add("CanonicalHostedZoneName");
    openapiFields.add("CanonicalHostedZoneNameID");
    openapiFields.add("ListenerDescriptions");
    openapiFields.add("Policies");
    openapiFields.add("BackendServerDescriptions");
    openapiFields.add("AvailabilityZones");
    openapiFields.add("Subnets");
    openapiFields.add("VPCId");
    openapiFields.add("Instances");
    openapiFields.add("HealthCheck");
    openapiFields.add("SourceSecurityGroup");
    openapiFields.add("SecurityGroups");
    openapiFields.add("CreatedTime");
    openapiFields.add("Scheme");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LoadBalancerDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LoadBalancerDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LoadBalancerDescription is not found in the empty JSON string", LoadBalancerDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LoadBalancerDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LoadBalancerDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `LoadBalancerName`
      if (jsonObj.get("LoadBalancerName") != null && !jsonObj.get("LoadBalancerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LoadBalancerName"));
      }
      // validate the optional field `DNSName`
      if (jsonObj.get("DNSName") != null && !jsonObj.get("DNSName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DNSName"));
      }
      // validate the optional field `CanonicalHostedZoneName`
      if (jsonObj.get("CanonicalHostedZoneName") != null && !jsonObj.get("CanonicalHostedZoneName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CanonicalHostedZoneName"));
      }
      // validate the optional field `CanonicalHostedZoneNameID`
      if (jsonObj.get("CanonicalHostedZoneNameID") != null && !jsonObj.get("CanonicalHostedZoneNameID").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CanonicalHostedZoneNameID"));
      }
      // validate the optional field `ListenerDescriptions`
      if (jsonObj.get("ListenerDescriptions") != null && !jsonObj.get("ListenerDescriptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ListenerDescriptions"));
      }
      // validate the optional field `Policies`
      if (jsonObj.get("Policies") != null && !jsonObj.get("Policies").isJsonNull()) {
        LoadBalancerDescriptionPolicies.validateJsonElement(jsonObj.get("Policies"));
      }
      // validate the optional field `BackendServerDescriptions`
      if (jsonObj.get("BackendServerDescriptions") != null && !jsonObj.get("BackendServerDescriptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("BackendServerDescriptions"));
      }
      // validate the optional field `AvailabilityZones`
      if (jsonObj.get("AvailabilityZones") != null && !jsonObj.get("AvailabilityZones").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AvailabilityZones"));
      }
      // validate the optional field `Subnets`
      if (jsonObj.get("Subnets") != null && !jsonObj.get("Subnets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Subnets"));
      }
      // validate the optional field `VPCId`
      if (jsonObj.get("VPCId") != null && !jsonObj.get("VPCId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VPCId"));
      }
      // validate the optional field `Instances`
      if (jsonObj.get("Instances") != null && !jsonObj.get("Instances").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Instances"));
      }
      // validate the optional field `HealthCheck`
      if (jsonObj.get("HealthCheck") != null && !jsonObj.get("HealthCheck").isJsonNull()) {
        LoadBalancerDescriptionHealthCheck.validateJsonElement(jsonObj.get("HealthCheck"));
      }
      // validate the optional field `SourceSecurityGroup`
      if (jsonObj.get("SourceSecurityGroup") != null && !jsonObj.get("SourceSecurityGroup").isJsonNull()) {
        LoadBalancerDescriptionSourceSecurityGroup.validateJsonElement(jsonObj.get("SourceSecurityGroup"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `CreatedTime`
      if (jsonObj.get("CreatedTime") != null && !jsonObj.get("CreatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTime"));
      }
      // validate the optional field `Scheme`
      if (jsonObj.get("Scheme") != null && !jsonObj.get("Scheme").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Scheme"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoadBalancerDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoadBalancerDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoadBalancerDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoadBalancerDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<LoadBalancerDescription>() {
           @Override
           public void write(JsonWriter out, LoadBalancerDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoadBalancerDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LoadBalancerDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoadBalancerDescription
   * @throws IOException if the JSON string is invalid with respect to LoadBalancerDescription
   */
  public static LoadBalancerDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoadBalancerDescription.class);
  }

  /**
   * Convert an instance of LoadBalancerDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

