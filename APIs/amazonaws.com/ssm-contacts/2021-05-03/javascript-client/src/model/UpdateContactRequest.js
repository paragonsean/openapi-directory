/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateContactRequestPlan from './UpdateContactRequestPlan';

/**
 * The UpdateContactRequest model module.
 * @module model/UpdateContactRequest
 * @version 2021-05-03
 */
class UpdateContactRequest {
    /**
     * Constructs a new <code>UpdateContactRequest</code>.
     * @alias module:model/UpdateContactRequest
     * @param contactId {String} 
     */
    constructor(contactId) { 
        
        UpdateContactRequest.initialize(this, contactId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contactId) { 
        obj['ContactId'] = contactId;
    }

    /**
     * Constructs a <code>UpdateContactRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateContactRequest} obj Optional instance to populate.
     * @return {module:model/UpdateContactRequest} The populated <code>UpdateContactRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateContactRequest();

            if (data.hasOwnProperty('ContactId')) {
                obj['ContactId'] = ApiClient.convertToType(data['ContactId'], 'String');
            }
            if (data.hasOwnProperty('DisplayName')) {
                obj['DisplayName'] = ApiClient.convertToType(data['DisplayName'], 'String');
            }
            if (data.hasOwnProperty('Plan')) {
                obj['Plan'] = UpdateContactRequestPlan.constructFromObject(data['Plan']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateContactRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateContactRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateContactRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ContactId`
        if (data['ContactId']) { // data not null
          String.validateJSON(data['ContactId']);
        }
        // validate the optional field `DisplayName`
        if (data['DisplayName']) { // data not null
          String.validateJSON(data['DisplayName']);
        }
        // validate the optional field `Plan`
        if (data['Plan']) { // data not null
          UpdateContactRequestPlan.validateJSON(data['Plan']);
        }

        return true;
    }


}

UpdateContactRequest.RequiredProperties = ["ContactId"];

/**
 * @member {String} ContactId
 */
UpdateContactRequest.prototype['ContactId'] = undefined;

/**
 * @member {String} DisplayName
 */
UpdateContactRequest.prototype['DisplayName'] = undefined;

/**
 * @member {module:model/UpdateContactRequestPlan} Plan
 */
UpdateContactRequest.prototype['Plan'] = undefined;






export default UpdateContactRequest;

