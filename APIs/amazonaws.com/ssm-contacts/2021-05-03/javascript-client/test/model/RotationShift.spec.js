/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsSystemsManagerIncidentManagerContacts);
  }
}(this, function(expect, AwsSystemsManagerIncidentManagerContacts) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsSystemsManagerIncidentManagerContacts.RotationShift();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RotationShift', function() {
    it('should create an instance of RotationShift', function() {
      // uncomment below and update the code to test RotationShift
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationShift();
      //expect(instance).to.be.a(AwsSystemsManagerIncidentManagerContacts.RotationShift);
    });

    it('should have the property contactIds (base name: "ContactIds")', function() {
      // uncomment below and update the code to test the property contactIds
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationShift();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "StartTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationShift();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "EndTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationShift();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationShift();
      //expect(instance).to.be();
    });

    it('should have the property shiftDetails (base name: "ShiftDetails")', function() {
      // uncomment below and update the code to test the property shiftDetails
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationShift();
      //expect(instance).to.be();
    });

  });

}));
