/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsSystemsManagerIncidentManagerContacts);
  }
}(this, function(expect, AwsSystemsManagerIncidentManagerContacts) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsSystemsManagerIncidentManagerContacts.RotationRecurrence();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RotationRecurrence', function() {
    it('should create an instance of RotationRecurrence', function() {
      // uncomment below and update the code to test RotationRecurrence
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationRecurrence();
      //expect(instance).to.be.a(AwsSystemsManagerIncidentManagerContacts.RotationRecurrence);
    });

    it('should have the property monthlySettings (base name: "MonthlySettings")', function() {
      // uncomment below and update the code to test the property monthlySettings
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationRecurrence();
      //expect(instance).to.be();
    });

    it('should have the property weeklySettings (base name: "WeeklySettings")', function() {
      // uncomment below and update the code to test the property weeklySettings
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationRecurrence();
      //expect(instance).to.be();
    });

    it('should have the property dailySettings (base name: "DailySettings")', function() {
      // uncomment below and update the code to test the property dailySettings
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationRecurrence();
      //expect(instance).to.be();
    });

    it('should have the property numberOfOnCalls (base name: "NumberOfOnCalls")', function() {
      // uncomment below and update the code to test the property numberOfOnCalls
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationRecurrence();
      //expect(instance).to.be();
    });

    it('should have the property shiftCoverages (base name: "ShiftCoverages")', function() {
      // uncomment below and update the code to test the property shiftCoverages
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationRecurrence();
      //expect(instance).to.be();
    });

    it('should have the property recurrenceMultiplier (base name: "RecurrenceMultiplier")', function() {
      // uncomment below and update the code to test the property recurrenceMultiplier
      //var instance = new AwsSystemsManagerIncidentManagerContacts.RotationRecurrence();
      //expect(instance).to.be();
    });

  });

}));
