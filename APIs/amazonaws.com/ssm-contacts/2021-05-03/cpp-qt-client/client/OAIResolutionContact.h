/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResolutionContact.h
 *
 * &lt;p&gt;Information about the engagement resolution steps. The resolution starts from the first contact, which can be an escalation plan, then resolves to an on-call rotation, and finally to a personal contact.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;ResolutionContact&lt;/code&gt; structure describes the information for each node or step in that process. It contains information about different contact types, such as the escalation, rotation, and personal contacts.&lt;/p&gt;
 */

#ifndef OAIResolutionContact_H
#define OAIResolutionContact_H

#include <QJsonObject>

#include "OAIContactType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResolutionContact : public OAIObject {
public:
    OAIResolutionContact();
    OAIResolutionContact(QString json);
    ~OAIResolutionContact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContactArn() const;
    void setContactArn(const QString &contact_arn);
    bool is_contact_arn_Set() const;
    bool is_contact_arn_Valid() const;

    OAIContactType getType() const;
    void setType(const OAIContactType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getStageIndex() const;
    void setStageIndex(const qint32 &stage_index);
    bool is_stage_index_Set() const;
    bool is_stage_index_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contact_arn;
    bool m_contact_arn_isSet;
    bool m_contact_arn_isValid;

    OAIContactType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_stage_index;
    bool m_stage_index_isSet;
    bool m_stage_index_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResolutionContact)

#endif // OAIResolutionContact_H
