/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRotationShift.h
 *
 * Information about a shift that belongs to an on-call rotation.
 */

#ifndef OAIRotationShift_H
#define OAIRotationShift_H

#include <QJsonObject>

#include "OAIRotationShift_ShiftDetails.h"
#include "OAIShiftType.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRotationShift_ShiftDetails;

class OAIRotationShift : public OAIObject {
public:
    OAIRotationShift();
    OAIRotationShift(QString json);
    ~OAIRotationShift() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getContactIds() const;
    void setContactIds(const QList &contact_ids);
    bool is_contact_ids_Set() const;
    bool is_contact_ids_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIShiftType getType() const;
    void setType(const OAIShiftType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIRotationShift_ShiftDetails getShiftDetails() const;
    void setShiftDetails(const OAIRotationShift_ShiftDetails &shift_details);
    bool is_shift_details_Set() const;
    bool is_shift_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_contact_ids;
    bool m_contact_ids_isSet;
    bool m_contact_ids_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIShiftType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIRotationShift_ShiftDetails m_shift_details;
    bool m_shift_details_isSet;
    bool m_shift_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRotationShift)

#endif // OAIRotationShift_H
