/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAcceptPageRequest.h
 *
 * 
 */

#ifndef OAIAcceptPageRequest_H
#define OAIAcceptPageRequest_H

#include <QJsonObject>

#include "OAIAcceptCodeValidation.h"
#include "OAIAcceptType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAcceptPageRequest : public OAIObject {
public:
    OAIAcceptPageRequest();
    OAIAcceptPageRequest(QString json);
    ~OAIAcceptPageRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPageId() const;
    void setPageId(const QString &page_id);
    bool is_page_id_Set() const;
    bool is_page_id_Valid() const;

    QString getContactChannelId() const;
    void setContactChannelId(const QString &contact_channel_id);
    bool is_contact_channel_id_Set() const;
    bool is_contact_channel_id_Valid() const;

    OAIAcceptType getAcceptType() const;
    void setAcceptType(const OAIAcceptType &accept_type);
    bool is_accept_type_Set() const;
    bool is_accept_type_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getAcceptCode() const;
    void setAcceptCode(const QString &accept_code);
    bool is_accept_code_Set() const;
    bool is_accept_code_Valid() const;

    OAIAcceptCodeValidation getAcceptCodeValidation() const;
    void setAcceptCodeValidation(const OAIAcceptCodeValidation &accept_code_validation);
    bool is_accept_code_validation_Set() const;
    bool is_accept_code_validation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_page_id;
    bool m_page_id_isSet;
    bool m_page_id_isValid;

    QString m_contact_channel_id;
    bool m_contact_channel_id_isSet;
    bool m_contact_channel_id_isValid;

    OAIAcceptType m_accept_type;
    bool m_accept_type_isSet;
    bool m_accept_type_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_accept_code;
    bool m_accept_code_isSet;
    bool m_accept_code_isValid;

    OAIAcceptCodeValidation m_accept_code_validation;
    bool m_accept_code_validation_isSet;
    bool m_accept_code_validation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAcceptPageRequest)

#endif // OAIAcceptPageRequest_H
