/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetRotationResult.h
 *
 * 
 */

#ifndef OAIGetRotationResult_H
#define OAIGetRotationResult_H

#include <QJsonObject>

#include "OAIGetRotationResult_Recurrence.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetRotationResult_Recurrence;

class OAIGetRotationResult : public OAIObject {
public:
    OAIGetRotationResult();
    OAIGetRotationResult(QString json);
    ~OAIGetRotationResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRotationArn() const;
    void setRotationArn(const QString &rotation_arn);
    bool is_rotation_arn_Set() const;
    bool is_rotation_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getContactIds() const;
    void setContactIds(const QList &contact_ids);
    bool is_contact_ids_Set() const;
    bool is_contact_ids_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getTimeZoneId() const;
    void setTimeZoneId(const QString &time_zone_id);
    bool is_time_zone_id_Set() const;
    bool is_time_zone_id_Valid() const;

    OAIGetRotationResult_Recurrence getRecurrence() const;
    void setRecurrence(const OAIGetRotationResult_Recurrence &recurrence);
    bool is_recurrence_Set() const;
    bool is_recurrence_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_rotation_arn;
    bool m_rotation_arn_isSet;
    bool m_rotation_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_contact_ids;
    bool m_contact_ids_isSet;
    bool m_contact_ids_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_time_zone_id;
    bool m_time_zone_id_isSet;
    bool m_time_zone_id_isValid;

    OAIGetRotationResult_Recurrence m_recurrence;
    bool m_recurrence_isSet;
    bool m_recurrence_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetRotationResult)

#endif // OAIGetRotationResult_H
