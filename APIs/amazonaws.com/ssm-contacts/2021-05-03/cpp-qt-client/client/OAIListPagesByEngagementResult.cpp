/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListPagesByEngagementResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListPagesByEngagementResult::OAIListPagesByEngagementResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListPagesByEngagementResult::OAIListPagesByEngagementResult() {
    this->initializeModel();
}

OAIListPagesByEngagementResult::~OAIListPagesByEngagementResult() {}

void OAIListPagesByEngagementResult::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_pages_isSet = false;
    m_pages_isValid = false;
}

void OAIListPagesByEngagementResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListPagesByEngagementResult::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;

    m_pages_isValid = ::OpenAPI::fromJsonValue(m_pages, json[QString("Pages")]);
    m_pages_isSet = !json[QString("Pages")].isNull() && m_pages_isValid;
}

QString OAIListPagesByEngagementResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListPagesByEngagementResult::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_pages.isSet()) {
        obj.insert(QString("Pages"), ::OpenAPI::toJsonValue(m_pages));
    }
    return obj;
}

QString OAIListPagesByEngagementResult::getNextToken() const {
    return m_next_token;
}
void OAIListPagesByEngagementResult::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListPagesByEngagementResult::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListPagesByEngagementResult::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListPagesByEngagementResult::getPages() const {
    return m_pages;
}
void OAIListPagesByEngagementResult::setPages(const QList &pages) {
    m_pages = pages;
    m_pages_isSet = true;
}

bool OAIListPagesByEngagementResult::is_pages_Set() const{
    return m_pages_isSet;
}

bool OAIListPagesByEngagementResult::is_pages_Valid() const{
    return m_pages_isValid;
}

bool OAIListPagesByEngagementResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListPagesByEngagementResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pages_isValid && true;
}

} // namespace OpenAPI
