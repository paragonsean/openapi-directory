/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWeeklySetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWeeklySetting::OAIWeeklySetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWeeklySetting::OAIWeeklySetting() {
    this->initializeModel();
}

OAIWeeklySetting::~OAIWeeklySetting() {}

void OAIWeeklySetting::initializeModel() {

    m_day_of_week_isSet = false;
    m_day_of_week_isValid = false;

    m_hand_off_time_isSet = false;
    m_hand_off_time_isValid = false;
}

void OAIWeeklySetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWeeklySetting::fromJsonObject(QJsonObject json) {

    m_day_of_week_isValid = ::OpenAPI::fromJsonValue(m_day_of_week, json[QString("DayOfWeek")]);
    m_day_of_week_isSet = !json[QString("DayOfWeek")].isNull() && m_day_of_week_isValid;

    m_hand_off_time_isValid = ::OpenAPI::fromJsonValue(m_hand_off_time, json[QString("HandOffTime")]);
    m_hand_off_time_isSet = !json[QString("HandOffTime")].isNull() && m_hand_off_time_isValid;
}

QString OAIWeeklySetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWeeklySetting::asJsonObject() const {
    QJsonObject obj;
    if (m_day_of_week.isSet()) {
        obj.insert(QString("DayOfWeek"), ::OpenAPI::toJsonValue(m_day_of_week));
    }
    if (m_hand_off_time.isSet()) {
        obj.insert(QString("HandOffTime"), ::OpenAPI::toJsonValue(m_hand_off_time));
    }
    return obj;
}

OAIDayOfWeek OAIWeeklySetting::getDayOfWeek() const {
    return m_day_of_week;
}
void OAIWeeklySetting::setDayOfWeek(const OAIDayOfWeek &day_of_week) {
    m_day_of_week = day_of_week;
    m_day_of_week_isSet = true;
}

bool OAIWeeklySetting::is_day_of_week_Set() const{
    return m_day_of_week_isSet;
}

bool OAIWeeklySetting::is_day_of_week_Valid() const{
    return m_day_of_week_isValid;
}

OAIWeeklySetting_HandOffTime OAIWeeklySetting::getHandOffTime() const {
    return m_hand_off_time;
}
void OAIWeeklySetting::setHandOffTime(const OAIWeeklySetting_HandOffTime &hand_off_time) {
    m_hand_off_time = hand_off_time;
    m_hand_off_time_isSet = true;
}

bool OAIWeeklySetting::is_hand_off_time_Set() const{
    return m_hand_off_time_isSet;
}

bool OAIWeeklySetting::is_hand_off_time_Valid() const{
    return m_hand_off_time_isValid;
}

bool OAIWeeklySetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_of_week.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hand_off_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWeeklySetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_day_of_week_isValid && m_hand_off_time_isValid && true;
}

} // namespace OpenAPI
