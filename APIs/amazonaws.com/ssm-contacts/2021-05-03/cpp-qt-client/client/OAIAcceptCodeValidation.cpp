/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcceptCodeValidation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcceptCodeValidation::OAIAcceptCodeValidation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcceptCodeValidation::OAIAcceptCodeValidation() {
    this->initializeModel();
}

OAIAcceptCodeValidation::~OAIAcceptCodeValidation() {}

void OAIAcceptCodeValidation::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAcceptCodeValidation::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAcceptCodeValidation::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IGNORE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAcceptCodeValidation::IGNORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ENFORCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAcceptCodeValidation::ENFORCE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAcceptCodeValidation::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAcceptCodeValidation::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAcceptCodeValidation::IGNORE:
            val = "IGNORE";
            break;
        case eOAIAcceptCodeValidation::ENFORCE:
            val = "ENFORCE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAcceptCodeValidation::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAcceptCodeValidation::eOAIAcceptCodeValidation OAIAcceptCodeValidation::getValue() const {
    return m_value;
}

void OAIAcceptCodeValidation::setValue(const OAIAcceptCodeValidation::eOAIAcceptCodeValidation& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAcceptCodeValidation::isSet() const {
    
    return m_value_isSet;
}

bool OAIAcceptCodeValidation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
