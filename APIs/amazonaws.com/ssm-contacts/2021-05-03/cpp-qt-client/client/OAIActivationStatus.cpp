/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivationStatus::OAIActivationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivationStatus::OAIActivationStatus() {
    this->initializeModel();
}

OAIActivationStatus::~OAIActivationStatus() {}

void OAIActivationStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIActivationStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIActivationStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACTIVATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIActivationStatus::ACTIVATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOT_ACTIVATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIActivationStatus::NOT_ACTIVATED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIActivationStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIActivationStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIActivationStatus::ACTIVATED:
            val = "ACTIVATED";
            break;
        case eOAIActivationStatus::NOT_ACTIVATED:
            val = "NOT_ACTIVATED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIActivationStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIActivationStatus::eOAIActivationStatus OAIActivationStatus::getValue() const {
    return m_value;
}

void OAIActivationStatus::setValue(const OAIActivationStatus::eOAIActivationStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIActivationStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIActivationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
