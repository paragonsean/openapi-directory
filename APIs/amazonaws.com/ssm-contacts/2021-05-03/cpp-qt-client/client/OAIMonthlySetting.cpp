/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMonthlySetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMonthlySetting::OAIMonthlySetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMonthlySetting::OAIMonthlySetting() {
    this->initializeModel();
}

OAIMonthlySetting::~OAIMonthlySetting() {}

void OAIMonthlySetting::initializeModel() {

    m_day_of_month_isSet = false;
    m_day_of_month_isValid = false;

    m_hand_off_time_isSet = false;
    m_hand_off_time_isValid = false;
}

void OAIMonthlySetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMonthlySetting::fromJsonObject(QJsonObject json) {

    m_day_of_month_isValid = ::OpenAPI::fromJsonValue(m_day_of_month, json[QString("DayOfMonth")]);
    m_day_of_month_isSet = !json[QString("DayOfMonth")].isNull() && m_day_of_month_isValid;

    m_hand_off_time_isValid = ::OpenAPI::fromJsonValue(m_hand_off_time, json[QString("HandOffTime")]);
    m_hand_off_time_isSet = !json[QString("HandOffTime")].isNull() && m_hand_off_time_isValid;
}

QString OAIMonthlySetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMonthlySetting::asJsonObject() const {
    QJsonObject obj;
    if (m_day_of_month_isSet) {
        obj.insert(QString("DayOfMonth"), ::OpenAPI::toJsonValue(m_day_of_month));
    }
    if (m_hand_off_time.isSet()) {
        obj.insert(QString("HandOffTime"), ::OpenAPI::toJsonValue(m_hand_off_time));
    }
    return obj;
}

qint32 OAIMonthlySetting::getDayOfMonth() const {
    return m_day_of_month;
}
void OAIMonthlySetting::setDayOfMonth(const qint32 &day_of_month) {
    m_day_of_month = day_of_month;
    m_day_of_month_isSet = true;
}

bool OAIMonthlySetting::is_day_of_month_Set() const{
    return m_day_of_month_isSet;
}

bool OAIMonthlySetting::is_day_of_month_Valid() const{
    return m_day_of_month_isValid;
}

OAIMonthlySetting_HandOffTime OAIMonthlySetting::getHandOffTime() const {
    return m_hand_off_time;
}
void OAIMonthlySetting::setHandOffTime(const OAIMonthlySetting_HandOffTime &hand_off_time) {
    m_hand_off_time = hand_off_time;
    m_hand_off_time_isSet = true;
}

bool OAIMonthlySetting::is_hand_off_time_Set() const{
    return m_hand_off_time_isSet;
}

bool OAIMonthlySetting::is_hand_off_time_Valid() const{
    return m_hand_off_time_isValid;
}

bool OAIMonthlySetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_of_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hand_off_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMonthlySetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_day_of_month_isValid && m_hand_off_time_isValid && true;
}

} // namespace OpenAPI
