/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEngagement.h
 *
 * Incident Manager reaching out to a contact or escalation plan to engage contact during an incident.
 */

#ifndef OAIEngagement_H
#define OAIEngagement_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEngagement : public OAIObject {
public:
    OAIEngagement();
    OAIEngagement(QString json);
    ~OAIEngagement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEngagementArn() const;
    void setEngagementArn(const QString &engagement_arn);
    bool is_engagement_arn_Set() const;
    bool is_engagement_arn_Valid() const;

    QString getContactArn() const;
    void setContactArn(const QString &contact_arn);
    bool is_contact_arn_Set() const;
    bool is_contact_arn_Valid() const;

    QString getSender() const;
    void setSender(const QString &sender);
    bool is_sender_Set() const;
    bool is_sender_Valid() const;

    QString getIncidentId() const;
    void setIncidentId(const QString &incident_id);
    bool is_incident_id_Set() const;
    bool is_incident_id_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getStopTime() const;
    void setStopTime(const QDateTime &stop_time);
    bool is_stop_time_Set() const;
    bool is_stop_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_engagement_arn;
    bool m_engagement_arn_isSet;
    bool m_engagement_arn_isValid;

    QString m_contact_arn;
    bool m_contact_arn_isSet;
    bool m_contact_arn_isValid;

    QString m_sender;
    bool m_sender_isSet;
    bool m_sender_isValid;

    QString m_incident_id;
    bool m_incident_id_isSet;
    bool m_incident_id_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_stop_time;
    bool m_stop_time_isSet;
    bool m_stop_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEngagement)

#endif // OAIEngagement_H
