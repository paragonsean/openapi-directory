/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateContactChannelRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateContactChannelRequest::OAIUpdateContactChannelRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateContactChannelRequest::OAIUpdateContactChannelRequest() {
    this->initializeModel();
}

OAIUpdateContactChannelRequest::~OAIUpdateContactChannelRequest() {}

void OAIUpdateContactChannelRequest::initializeModel() {

    m_contact_channel_id_isSet = false;
    m_contact_channel_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_delivery_address_isSet = false;
    m_delivery_address_isValid = false;
}

void OAIUpdateContactChannelRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateContactChannelRequest::fromJsonObject(QJsonObject json) {

    m_contact_channel_id_isValid = ::OpenAPI::fromJsonValue(m_contact_channel_id, json[QString("ContactChannelId")]);
    m_contact_channel_id_isSet = !json[QString("ContactChannelId")].isNull() && m_contact_channel_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_delivery_address_isValid = ::OpenAPI::fromJsonValue(m_delivery_address, json[QString("DeliveryAddress")]);
    m_delivery_address_isSet = !json[QString("DeliveryAddress")].isNull() && m_delivery_address_isValid;
}

QString OAIUpdateContactChannelRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateContactChannelRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_channel_id_isSet) {
        obj.insert(QString("ContactChannelId"), ::OpenAPI::toJsonValue(m_contact_channel_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_delivery_address.isSet()) {
        obj.insert(QString("DeliveryAddress"), ::OpenAPI::toJsonValue(m_delivery_address));
    }
    return obj;
}

QString OAIUpdateContactChannelRequest::getContactChannelId() const {
    return m_contact_channel_id;
}
void OAIUpdateContactChannelRequest::setContactChannelId(const QString &contact_channel_id) {
    m_contact_channel_id = contact_channel_id;
    m_contact_channel_id_isSet = true;
}

bool OAIUpdateContactChannelRequest::is_contact_channel_id_Set() const{
    return m_contact_channel_id_isSet;
}

bool OAIUpdateContactChannelRequest::is_contact_channel_id_Valid() const{
    return m_contact_channel_id_isValid;
}

QString OAIUpdateContactChannelRequest::getName() const {
    return m_name;
}
void OAIUpdateContactChannelRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateContactChannelRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateContactChannelRequest::is_name_Valid() const{
    return m_name_isValid;
}

OAIGetContactChannelResult_DeliveryAddress OAIUpdateContactChannelRequest::getDeliveryAddress() const {
    return m_delivery_address;
}
void OAIUpdateContactChannelRequest::setDeliveryAddress(const OAIGetContactChannelResult_DeliveryAddress &delivery_address) {
    m_delivery_address = delivery_address;
    m_delivery_address_isSet = true;
}

bool OAIUpdateContactChannelRequest::is_delivery_address_Set() const{
    return m_delivery_address_isSet;
}

bool OAIUpdateContactChannelRequest::is_delivery_address_Valid() const{
    return m_delivery_address_isValid;
}

bool OAIUpdateContactChannelRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_channel_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_address.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateContactChannelRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_contact_channel_id_isValid && true;
}

} // namespace OpenAPI
