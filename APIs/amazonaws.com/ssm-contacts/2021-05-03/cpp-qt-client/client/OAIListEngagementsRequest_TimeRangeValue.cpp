/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListEngagementsRequest_TimeRangeValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListEngagementsRequest_TimeRangeValue::OAIListEngagementsRequest_TimeRangeValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListEngagementsRequest_TimeRangeValue::OAIListEngagementsRequest_TimeRangeValue() {
    this->initializeModel();
}

OAIListEngagementsRequest_TimeRangeValue::~OAIListEngagementsRequest_TimeRangeValue() {}

void OAIListEngagementsRequest_TimeRangeValue::initializeModel() {

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;
}

void OAIListEngagementsRequest_TimeRangeValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListEngagementsRequest_TimeRangeValue::fromJsonObject(QJsonObject json) {

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("StartTime")]);
    m_start_time_isSet = !json[QString("StartTime")].isNull() && m_start_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("EndTime")]);
    m_end_time_isSet = !json[QString("EndTime")].isNull() && m_end_time_isValid;
}

QString OAIListEngagementsRequest_TimeRangeValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListEngagementsRequest_TimeRangeValue::asJsonObject() const {
    QJsonObject obj;
    if (m_start_time_isSet) {
        obj.insert(QString("StartTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("EndTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    return obj;
}

QDateTime OAIListEngagementsRequest_TimeRangeValue::getStartTime() const {
    return m_start_time;
}
void OAIListEngagementsRequest_TimeRangeValue::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIListEngagementsRequest_TimeRangeValue::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIListEngagementsRequest_TimeRangeValue::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QDateTime OAIListEngagementsRequest_TimeRangeValue::getEndTime() const {
    return m_end_time;
}
void OAIListEngagementsRequest_TimeRangeValue::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIListEngagementsRequest_TimeRangeValue::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIListEngagementsRequest_TimeRangeValue::is_end_time_Valid() const{
    return m_end_time_isValid;
}

bool OAIListEngagementsRequest_TimeRangeValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListEngagementsRequest_TimeRangeValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
