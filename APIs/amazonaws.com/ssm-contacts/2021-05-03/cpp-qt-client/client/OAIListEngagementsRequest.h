/**
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListEngagementsRequest.h
 *
 * 
 */

#ifndef OAIListEngagementsRequest_H
#define OAIListEngagementsRequest_H

#include <QJsonObject>

#include "OAIListEngagementsRequest_TimeRangeValue.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListEngagementsRequest_TimeRangeValue;

class OAIListEngagementsRequest : public OAIObject {
public:
    OAIListEngagementsRequest();
    OAIListEngagementsRequest(QString json);
    ~OAIListEngagementsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getIncidentId() const;
    void setIncidentId(const QString &incident_id);
    bool is_incident_id_Set() const;
    bool is_incident_id_Valid() const;

    OAIListEngagementsRequest_TimeRangeValue getTimeRangeValue() const;
    void setTimeRangeValue(const OAIListEngagementsRequest_TimeRangeValue &time_range_value);
    bool is_time_range_value_Set() const;
    bool is_time_range_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_incident_id;
    bool m_incident_id_isSet;
    bool m_incident_id_isValid;

    OAIListEngagementsRequest_TimeRangeValue m_time_range_value;
    bool m_time_range_value_isSet;
    bool m_time_range_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListEngagementsRequest)

#endif // OAIListEngagementsRequest_H
