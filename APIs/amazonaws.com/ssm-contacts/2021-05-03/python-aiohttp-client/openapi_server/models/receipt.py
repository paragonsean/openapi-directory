# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.receipt_type import ReceiptType
from openapi_server import util


class Receipt(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_channel_arn: str=None, receipt_type: ReceiptType=None, receipt_info: str=None, receipt_time: datetime=None):
        """Receipt - a model defined in OpenAPI

        :param contact_channel_arn: The contact_channel_arn of this Receipt.
        :param receipt_type: The receipt_type of this Receipt.
        :param receipt_info: The receipt_info of this Receipt.
        :param receipt_time: The receipt_time of this Receipt.
        """
        self.openapi_types = {
            'contact_channel_arn': str,
            'receipt_type': ReceiptType,
            'receipt_info': str,
            'receipt_time': datetime
        }

        self.attribute_map = {
            'contact_channel_arn': 'ContactChannelArn',
            'receipt_type': 'ReceiptType',
            'receipt_info': 'ReceiptInfo',
            'receipt_time': 'ReceiptTime'
        }

        self._contact_channel_arn = contact_channel_arn
        self._receipt_type = receipt_type
        self._receipt_info = receipt_info
        self._receipt_time = receipt_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Receipt':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Receipt of this Receipt.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_channel_arn(self):
        """Gets the contact_channel_arn of this Receipt.


        :return: The contact_channel_arn of this Receipt.
        :rtype: str
        """
        return self._contact_channel_arn

    @contact_channel_arn.setter
    def contact_channel_arn(self, contact_channel_arn):
        """Sets the contact_channel_arn of this Receipt.


        :param contact_channel_arn: The contact_channel_arn of this Receipt.
        :type contact_channel_arn: str
        """

        self._contact_channel_arn = contact_channel_arn

    @property
    def receipt_type(self):
        """Gets the receipt_type of this Receipt.


        :return: The receipt_type of this Receipt.
        :rtype: ReceiptType
        """
        return self._receipt_type

    @receipt_type.setter
    def receipt_type(self, receipt_type):
        """Sets the receipt_type of this Receipt.


        :param receipt_type: The receipt_type of this Receipt.
        :type receipt_type: ReceiptType
        """
        if receipt_type is None:
            raise ValueError("Invalid value for `receipt_type`, must not be `None`")

        self._receipt_type = receipt_type

    @property
    def receipt_info(self):
        """Gets the receipt_info of this Receipt.


        :return: The receipt_info of this Receipt.
        :rtype: str
        """
        return self._receipt_info

    @receipt_info.setter
    def receipt_info(self, receipt_info):
        """Sets the receipt_info of this Receipt.


        :param receipt_info: The receipt_info of this Receipt.
        :type receipt_info: str
        """

        self._receipt_info = receipt_info

    @property
    def receipt_time(self):
        """Gets the receipt_time of this Receipt.


        :return: The receipt_time of this Receipt.
        :rtype: datetime
        """
        return self._receipt_time

    @receipt_time.setter
    def receipt_time(self, receipt_time):
        """Sets the receipt_time of this Receipt.


        :param receipt_time: The receipt_time of this Receipt.
        :type receipt_time: datetime
        """
        if receipt_time is None:
            raise ValueError("Invalid value for `receipt_time`, must not be `None`")

        self._receipt_time = receipt_time
