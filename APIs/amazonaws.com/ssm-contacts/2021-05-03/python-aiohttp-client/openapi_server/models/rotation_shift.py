# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rotation_shift_shift_details import RotationShiftShiftDetails
from openapi_server.models.shift_type import ShiftType
from openapi_server import util


class RotationShift(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_ids: List=None, start_time: datetime=None, end_time: datetime=None, type: ShiftType=None, shift_details: RotationShiftShiftDetails=None):
        """RotationShift - a model defined in OpenAPI

        :param contact_ids: The contact_ids of this RotationShift.
        :param start_time: The start_time of this RotationShift.
        :param end_time: The end_time of this RotationShift.
        :param type: The type of this RotationShift.
        :param shift_details: The shift_details of this RotationShift.
        """
        self.openapi_types = {
            'contact_ids': List,
            'start_time': datetime,
            'end_time': datetime,
            'type': ShiftType,
            'shift_details': RotationShiftShiftDetails
        }

        self.attribute_map = {
            'contact_ids': 'ContactIds',
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'type': 'Type',
            'shift_details': 'ShiftDetails'
        }

        self._contact_ids = contact_ids
        self._start_time = start_time
        self._end_time = end_time
        self._type = type
        self._shift_details = shift_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RotationShift':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RotationShift of this RotationShift.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_ids(self):
        """Gets the contact_ids of this RotationShift.


        :return: The contact_ids of this RotationShift.
        :rtype: List
        """
        return self._contact_ids

    @contact_ids.setter
    def contact_ids(self, contact_ids):
        """Sets the contact_ids of this RotationShift.


        :param contact_ids: The contact_ids of this RotationShift.
        :type contact_ids: List
        """

        self._contact_ids = contact_ids

    @property
    def start_time(self):
        """Gets the start_time of this RotationShift.


        :return: The start_time of this RotationShift.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this RotationShift.


        :param start_time: The start_time of this RotationShift.
        :type start_time: datetime
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this RotationShift.


        :return: The end_time of this RotationShift.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this RotationShift.


        :param end_time: The end_time of this RotationShift.
        :type end_time: datetime
        """
        if end_time is None:
            raise ValueError("Invalid value for `end_time`, must not be `None`")

        self._end_time = end_time

    @property
    def type(self):
        """Gets the type of this RotationShift.


        :return: The type of this RotationShift.
        :rtype: ShiftType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this RotationShift.


        :param type: The type of this RotationShift.
        :type type: ShiftType
        """

        self._type = type

    @property
    def shift_details(self):
        """Gets the shift_details of this RotationShift.


        :return: The shift_details of this RotationShift.
        :rtype: RotationShiftShiftDetails
        """
        return self._shift_details

    @shift_details.setter
    def shift_details(self, shift_details):
        """Sets the shift_details of this RotationShift.


        :param shift_details: The shift_details of this RotationShift.
        :type shift_details: RotationShiftShiftDetails
        """

        self._shift_details = shift_details
