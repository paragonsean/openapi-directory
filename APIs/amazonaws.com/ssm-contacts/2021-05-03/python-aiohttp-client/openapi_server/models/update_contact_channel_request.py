# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_contact_channel_result_delivery_address import GetContactChannelResultDeliveryAddress
from openapi_server import util


class UpdateContactChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_channel_id: str=None, name: str=None, delivery_address: GetContactChannelResultDeliveryAddress=None):
        """UpdateContactChannelRequest - a model defined in OpenAPI

        :param contact_channel_id: The contact_channel_id of this UpdateContactChannelRequest.
        :param name: The name of this UpdateContactChannelRequest.
        :param delivery_address: The delivery_address of this UpdateContactChannelRequest.
        """
        self.openapi_types = {
            'contact_channel_id': str,
            'name': str,
            'delivery_address': GetContactChannelResultDeliveryAddress
        }

        self.attribute_map = {
            'contact_channel_id': 'ContactChannelId',
            'name': 'Name',
            'delivery_address': 'DeliveryAddress'
        }

        self._contact_channel_id = contact_channel_id
        self._name = name
        self._delivery_address = delivery_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateContactChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateContactChannelRequest of this UpdateContactChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_channel_id(self):
        """Gets the contact_channel_id of this UpdateContactChannelRequest.


        :return: The contact_channel_id of this UpdateContactChannelRequest.
        :rtype: str
        """
        return self._contact_channel_id

    @contact_channel_id.setter
    def contact_channel_id(self, contact_channel_id):
        """Sets the contact_channel_id of this UpdateContactChannelRequest.


        :param contact_channel_id: The contact_channel_id of this UpdateContactChannelRequest.
        :type contact_channel_id: str
        """
        if contact_channel_id is None:
            raise ValueError("Invalid value for `contact_channel_id`, must not be `None`")

        self._contact_channel_id = contact_channel_id

    @property
    def name(self):
        """Gets the name of this UpdateContactChannelRequest.


        :return: The name of this UpdateContactChannelRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateContactChannelRequest.


        :param name: The name of this UpdateContactChannelRequest.
        :type name: str
        """

        self._name = name

    @property
    def delivery_address(self):
        """Gets the delivery_address of this UpdateContactChannelRequest.


        :return: The delivery_address of this UpdateContactChannelRequest.
        :rtype: GetContactChannelResultDeliveryAddress
        """
        return self._delivery_address

    @delivery_address.setter
    def delivery_address(self, delivery_address):
        """Sets the delivery_address of this UpdateContactChannelRequest.


        :param delivery_address: The delivery_address of this UpdateContactChannelRequest.
        :type delivery_address: GetContactChannelResultDeliveryAddress
        """

        self._delivery_address = delivery_address
