# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelTargetInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_channel_id: str=None, retry_interval_in_minutes: int=None):
        """ChannelTargetInfo - a model defined in OpenAPI

        :param contact_channel_id: The contact_channel_id of this ChannelTargetInfo.
        :param retry_interval_in_minutes: The retry_interval_in_minutes of this ChannelTargetInfo.
        """
        self.openapi_types = {
            'contact_channel_id': str,
            'retry_interval_in_minutes': int
        }

        self.attribute_map = {
            'contact_channel_id': 'ContactChannelId',
            'retry_interval_in_minutes': 'RetryIntervalInMinutes'
        }

        self._contact_channel_id = contact_channel_id
        self._retry_interval_in_minutes = retry_interval_in_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelTargetInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelTargetInfo of this ChannelTargetInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_channel_id(self):
        """Gets the contact_channel_id of this ChannelTargetInfo.


        :return: The contact_channel_id of this ChannelTargetInfo.
        :rtype: str
        """
        return self._contact_channel_id

    @contact_channel_id.setter
    def contact_channel_id(self, contact_channel_id):
        """Sets the contact_channel_id of this ChannelTargetInfo.


        :param contact_channel_id: The contact_channel_id of this ChannelTargetInfo.
        :type contact_channel_id: str
        """
        if contact_channel_id is None:
            raise ValueError("Invalid value for `contact_channel_id`, must not be `None`")

        self._contact_channel_id = contact_channel_id

    @property
    def retry_interval_in_minutes(self):
        """Gets the retry_interval_in_minutes of this ChannelTargetInfo.


        :return: The retry_interval_in_minutes of this ChannelTargetInfo.
        :rtype: int
        """
        return self._retry_interval_in_minutes

    @retry_interval_in_minutes.setter
    def retry_interval_in_minutes(self, retry_interval_in_minutes):
        """Sets the retry_interval_in_minutes of this ChannelTargetInfo.


        :param retry_interval_in_minutes: The retry_interval_in_minutes of this ChannelTargetInfo.
        :type retry_interval_in_minutes: int
        """

        self._retry_interval_in_minutes = retry_interval_in_minutes
