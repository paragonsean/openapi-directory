# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribePageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page_id: str=None):
        """DescribePageRequest - a model defined in OpenAPI

        :param page_id: The page_id of this DescribePageRequest.
        """
        self.openapi_types = {
            'page_id': str
        }

        self.attribute_map = {
            'page_id': 'PageId'
        }

        self._page_id = page_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePageRequest of this DescribePageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page_id(self):
        """Gets the page_id of this DescribePageRequest.


        :return: The page_id of this DescribePageRequest.
        :rtype: str
        """
        return self._page_id

    @page_id.setter
    def page_id(self, page_id):
        """Sets the page_id of this DescribePageRequest.


        :param page_id: The page_id of this DescribePageRequest.
        :type page_id: str
        """
        if page_id is None:
            raise ValueError("Invalid value for `page_id`, must not be `None`")

        self._page_id = page_id
