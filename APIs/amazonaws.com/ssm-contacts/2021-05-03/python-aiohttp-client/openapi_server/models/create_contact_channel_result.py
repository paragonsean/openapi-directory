# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateContactChannelResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_channel_arn: str=None):
        """CreateContactChannelResult - a model defined in OpenAPI

        :param contact_channel_arn: The contact_channel_arn of this CreateContactChannelResult.
        """
        self.openapi_types = {
            'contact_channel_arn': str
        }

        self.attribute_map = {
            'contact_channel_arn': 'ContactChannelArn'
        }

        self._contact_channel_arn = contact_channel_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateContactChannelResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateContactChannelResult of this CreateContactChannelResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_channel_arn(self):
        """Gets the contact_channel_arn of this CreateContactChannelResult.


        :return: The contact_channel_arn of this CreateContactChannelResult.
        :rtype: str
        """
        return self._contact_channel_arn

    @contact_channel_arn.setter
    def contact_channel_arn(self, contact_channel_arn):
        """Sets the contact_channel_arn of this CreateContactChannelResult.


        :param contact_channel_arn: The contact_channel_arn of this CreateContactChannelResult.
        :type contact_channel_arn: str
        """
        if contact_channel_arn is None:
            raise ValueError("Invalid value for `contact_channel_arn`, must not be `None`")

        self._contact_channel_arn = contact_channel_arn
