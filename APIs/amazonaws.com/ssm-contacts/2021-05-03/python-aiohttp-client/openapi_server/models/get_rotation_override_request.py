# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetRotationOverrideRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rotation_id: str=None, rotation_override_id: str=None):
        """GetRotationOverrideRequest - a model defined in OpenAPI

        :param rotation_id: The rotation_id of this GetRotationOverrideRequest.
        :param rotation_override_id: The rotation_override_id of this GetRotationOverrideRequest.
        """
        self.openapi_types = {
            'rotation_id': str,
            'rotation_override_id': str
        }

        self.attribute_map = {
            'rotation_id': 'RotationId',
            'rotation_override_id': 'RotationOverrideId'
        }

        self._rotation_id = rotation_id
        self._rotation_override_id = rotation_override_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetRotationOverrideRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetRotationOverrideRequest of this GetRotationOverrideRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rotation_id(self):
        """Gets the rotation_id of this GetRotationOverrideRequest.


        :return: The rotation_id of this GetRotationOverrideRequest.
        :rtype: str
        """
        return self._rotation_id

    @rotation_id.setter
    def rotation_id(self, rotation_id):
        """Sets the rotation_id of this GetRotationOverrideRequest.


        :param rotation_id: The rotation_id of this GetRotationOverrideRequest.
        :type rotation_id: str
        """
        if rotation_id is None:
            raise ValueError("Invalid value for `rotation_id`, must not be `None`")

        self._rotation_id = rotation_id

    @property
    def rotation_override_id(self):
        """Gets the rotation_override_id of this GetRotationOverrideRequest.


        :return: The rotation_override_id of this GetRotationOverrideRequest.
        :rtype: str
        """
        return self._rotation_override_id

    @rotation_override_id.setter
    def rotation_override_id(self, rotation_override_id):
        """Sets the rotation_override_id of this GetRotationOverrideRequest.


        :param rotation_override_id: The rotation_override_id of this GetRotationOverrideRequest.
        :type rotation_override_id: str
        """
        if rotation_override_id is None:
            raise ValueError("Invalid value for `rotation_override_id`, must not be `None`")

        self._rotation_override_id = rotation_override_id
