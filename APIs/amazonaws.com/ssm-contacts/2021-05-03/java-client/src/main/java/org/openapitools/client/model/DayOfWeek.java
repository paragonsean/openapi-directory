/*
 * AWS Systems Manager Incident Manager Contacts
 * <p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.</p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.</p>
 *
 * The version of the OpenAPI document: 2021-05-03
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets DayOfWeek
 */
@JsonAdapter(DayOfWeek.Adapter.class)
public enum DayOfWeek {
  
  MON("MON"),
  
  TUE("TUE"),
  
  WED("WED"),
  
  THU("THU"),
  
  FRI("FRI"),
  
  SAT("SAT"),
  
  SUN("SUN");

  private String value;

  DayOfWeek(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DayOfWeek fromValue(String value) {
    for (DayOfWeek b : DayOfWeek.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DayOfWeek> {
    @Override
    public void write(final JsonWriter jsonWriter, final DayOfWeek enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DayOfWeek read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DayOfWeek.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    DayOfWeek.fromValue(value);
  }
}

