/**
 * Amazon HealthLake
 * AWS HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeFHIRExportJobResponse_ExportJobProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeFHIRExportJobResponse_ExportJobProperties::OAIDescribeFHIRExportJobResponse_ExportJobProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeFHIRExportJobResponse_ExportJobProperties::OAIDescribeFHIRExportJobResponse_ExportJobProperties() {
    this->initializeModel();
}

OAIDescribeFHIRExportJobResponse_ExportJobProperties::~OAIDescribeFHIRExportJobResponse_ExportJobProperties() {}

void OAIDescribeFHIRExportJobResponse_ExportJobProperties::initializeModel() {

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_job_name_isSet = false;
    m_job_name_isValid = false;

    m_job_status_isSet = false;
    m_job_status_isValid = false;

    m_submit_time_isSet = false;
    m_submit_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_datastore_id_isSet = false;
    m_datastore_id_isValid = false;

    m_output_data_config_isSet = false;
    m_output_data_config_isValid = false;

    m_data_access_role_arn_isSet = false;
    m_data_access_role_arn_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIDescribeFHIRExportJobResponse_ExportJobProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeFHIRExportJobResponse_ExportJobProperties::fromJsonObject(QJsonObject json) {

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("JobId")]);
    m_job_id_isSet = !json[QString("JobId")].isNull() && m_job_id_isValid;

    m_job_name_isValid = ::OpenAPI::fromJsonValue(m_job_name, json[QString("JobName")]);
    m_job_name_isSet = !json[QString("JobName")].isNull() && m_job_name_isValid;

    m_job_status_isValid = ::OpenAPI::fromJsonValue(m_job_status, json[QString("JobStatus")]);
    m_job_status_isSet = !json[QString("JobStatus")].isNull() && m_job_status_isValid;

    m_submit_time_isValid = ::OpenAPI::fromJsonValue(m_submit_time, json[QString("SubmitTime")]);
    m_submit_time_isSet = !json[QString("SubmitTime")].isNull() && m_submit_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("EndTime")]);
    m_end_time_isSet = !json[QString("EndTime")].isNull() && m_end_time_isValid;

    m_datastore_id_isValid = ::OpenAPI::fromJsonValue(m_datastore_id, json[QString("DatastoreId")]);
    m_datastore_id_isSet = !json[QString("DatastoreId")].isNull() && m_datastore_id_isValid;

    m_output_data_config_isValid = ::OpenAPI::fromJsonValue(m_output_data_config, json[QString("OutputDataConfig")]);
    m_output_data_config_isSet = !json[QString("OutputDataConfig")].isNull() && m_output_data_config_isValid;

    m_data_access_role_arn_isValid = ::OpenAPI::fromJsonValue(m_data_access_role_arn, json[QString("DataAccessRoleArn")]);
    m_data_access_role_arn_isSet = !json[QString("DataAccessRoleArn")].isNull() && m_data_access_role_arn_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("Message")]);
    m_message_isSet = !json[QString("Message")].isNull() && m_message_isValid;
}

QString OAIDescribeFHIRExportJobResponse_ExportJobProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeFHIRExportJobResponse_ExportJobProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_job_id_isSet) {
        obj.insert(QString("JobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_job_name_isSet) {
        obj.insert(QString("JobName"), ::OpenAPI::toJsonValue(m_job_name));
    }
    if (m_job_status.isSet()) {
        obj.insert(QString("JobStatus"), ::OpenAPI::toJsonValue(m_job_status));
    }
    if (m_submit_time_isSet) {
        obj.insert(QString("SubmitTime"), ::OpenAPI::toJsonValue(m_submit_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("EndTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_datastore_id_isSet) {
        obj.insert(QString("DatastoreId"), ::OpenAPI::toJsonValue(m_datastore_id));
    }
    if (m_output_data_config.isSet()) {
        obj.insert(QString("OutputDataConfig"), ::OpenAPI::toJsonValue(m_output_data_config));
    }
    if (m_data_access_role_arn_isSet) {
        obj.insert(QString("DataAccessRoleArn"), ::OpenAPI::toJsonValue(m_data_access_role_arn));
    }
    if (m_message_isSet) {
        obj.insert(QString("Message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

QString OAIDescribeFHIRExportJobResponse_ExportJobProperties::getJobId() const {
    return m_job_id;
}
void OAIDescribeFHIRExportJobResponse_ExportJobProperties::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIDescribeFHIRExportJobResponse_ExportJobProperties::getJobName() const {
    return m_job_name;
}
void OAIDescribeFHIRExportJobResponse_ExportJobProperties::setJobName(const QString &job_name) {
    m_job_name = job_name;
    m_job_name_isSet = true;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_job_name_Set() const{
    return m_job_name_isSet;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_job_name_Valid() const{
    return m_job_name_isValid;
}

OAIJobStatus OAIDescribeFHIRExportJobResponse_ExportJobProperties::getJobStatus() const {
    return m_job_status;
}
void OAIDescribeFHIRExportJobResponse_ExportJobProperties::setJobStatus(const OAIJobStatus &job_status) {
    m_job_status = job_status;
    m_job_status_isSet = true;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_job_status_Set() const{
    return m_job_status_isSet;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_job_status_Valid() const{
    return m_job_status_isValid;
}

QDateTime OAIDescribeFHIRExportJobResponse_ExportJobProperties::getSubmitTime() const {
    return m_submit_time;
}
void OAIDescribeFHIRExportJobResponse_ExportJobProperties::setSubmitTime(const QDateTime &submit_time) {
    m_submit_time = submit_time;
    m_submit_time_isSet = true;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_submit_time_Set() const{
    return m_submit_time_isSet;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_submit_time_Valid() const{
    return m_submit_time_isValid;
}

QDateTime OAIDescribeFHIRExportJobResponse_ExportJobProperties::getEndTime() const {
    return m_end_time;
}
void OAIDescribeFHIRExportJobResponse_ExportJobProperties::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIDescribeFHIRExportJobResponse_ExportJobProperties::getDatastoreId() const {
    return m_datastore_id;
}
void OAIDescribeFHIRExportJobResponse_ExportJobProperties::setDatastoreId(const QString &datastore_id) {
    m_datastore_id = datastore_id;
    m_datastore_id_isSet = true;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_datastore_id_Set() const{
    return m_datastore_id_isSet;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_datastore_id_Valid() const{
    return m_datastore_id_isValid;
}

OAIStartFHIRExportJobRequest_OutputDataConfig OAIDescribeFHIRExportJobResponse_ExportJobProperties::getOutputDataConfig() const {
    return m_output_data_config;
}
void OAIDescribeFHIRExportJobResponse_ExportJobProperties::setOutputDataConfig(const OAIStartFHIRExportJobRequest_OutputDataConfig &output_data_config) {
    m_output_data_config = output_data_config;
    m_output_data_config_isSet = true;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_output_data_config_Set() const{
    return m_output_data_config_isSet;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_output_data_config_Valid() const{
    return m_output_data_config_isValid;
}

QString OAIDescribeFHIRExportJobResponse_ExportJobProperties::getDataAccessRoleArn() const {
    return m_data_access_role_arn;
}
void OAIDescribeFHIRExportJobResponse_ExportJobProperties::setDataAccessRoleArn(const QString &data_access_role_arn) {
    m_data_access_role_arn = data_access_role_arn;
    m_data_access_role_arn_isSet = true;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_data_access_role_arn_Set() const{
    return m_data_access_role_arn_isSet;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_data_access_role_arn_Valid() const{
    return m_data_access_role_arn_isValid;
}

QString OAIDescribeFHIRExportJobResponse_ExportJobProperties::getMessage() const {
    return m_message;
}
void OAIDescribeFHIRExportJobResponse_ExportJobProperties::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_message_Set() const{
    return m_message_isSet;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_submit_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_datastore_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_data_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_access_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeFHIRExportJobResponse_ExportJobProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_job_id_isValid && m_job_status_isValid && m_submit_time_isValid && m_datastore_id_isValid && m_output_data_config_isValid && true;
}

} // namespace OpenAPI
