/**
 * Amazon HealthLake
 * AWS HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteFHIRDatastoreResponse.h
 *
 * 
 */

#ifndef OAIDeleteFHIRDatastoreResponse_H
#define OAIDeleteFHIRDatastoreResponse_H

#include <QJsonObject>

#include "OAIDatastoreStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteFHIRDatastoreResponse : public OAIObject {
public:
    OAIDeleteFHIRDatastoreResponse();
    OAIDeleteFHIRDatastoreResponse(QString json);
    ~OAIDeleteFHIRDatastoreResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatastoreId() const;
    void setDatastoreId(const QString &datastore_id);
    bool is_datastore_id_Set() const;
    bool is_datastore_id_Valid() const;

    QString getDatastoreArn() const;
    void setDatastoreArn(const QString &datastore_arn);
    bool is_datastore_arn_Set() const;
    bool is_datastore_arn_Valid() const;

    OAIDatastoreStatus getDatastoreStatus() const;
    void setDatastoreStatus(const OAIDatastoreStatus &datastore_status);
    bool is_datastore_status_Set() const;
    bool is_datastore_status_Valid() const;

    QString getDatastoreEndpoint() const;
    void setDatastoreEndpoint(const QString &datastore_endpoint);
    bool is_datastore_endpoint_Set() const;
    bool is_datastore_endpoint_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_datastore_id;
    bool m_datastore_id_isSet;
    bool m_datastore_id_isValid;

    QString m_datastore_arn;
    bool m_datastore_arn_isSet;
    bool m_datastore_arn_isValid;

    OAIDatastoreStatus m_datastore_status;
    bool m_datastore_status_isSet;
    bool m_datastore_status_isValid;

    QString m_datastore_endpoint;
    bool m_datastore_endpoint_isSet;
    bool m_datastore_endpoint_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteFHIRDatastoreResponse)

#endif // OAIDeleteFHIRDatastoreResponse_H
