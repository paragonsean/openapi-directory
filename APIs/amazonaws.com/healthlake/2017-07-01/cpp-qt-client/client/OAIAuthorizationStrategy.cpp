/**
 * Amazon HealthLake
 * AWS HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthorizationStrategy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthorizationStrategy::OAIAuthorizationStrategy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthorizationStrategy::OAIAuthorizationStrategy() {
    this->initializeModel();
}

OAIAuthorizationStrategy::~OAIAuthorizationStrategy() {}

void OAIAuthorizationStrategy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAuthorizationStrategy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAuthorizationStrategy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SMART_ON_FHIR_V1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAuthorizationStrategy::SMART_ON_FHIR_V1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AWS_AUTH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAuthorizationStrategy::AWS_AUTH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAuthorizationStrategy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAuthorizationStrategy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAuthorizationStrategy::SMART_ON_FHIR_V1:
            val = "SMART_ON_FHIR_V1";
            break;
        case eOAIAuthorizationStrategy::AWS_AUTH:
            val = "AWS_AUTH";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAuthorizationStrategy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAuthorizationStrategy::eOAIAuthorizationStrategy OAIAuthorizationStrategy::getValue() const {
    return m_value;
}

void OAIAuthorizationStrategy::setValue(const OAIAuthorizationStrategy::eOAIAuthorizationStrategy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAuthorizationStrategy::isSet() const {
    
    return m_value_isSet;
}

bool OAIAuthorizationStrategy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
