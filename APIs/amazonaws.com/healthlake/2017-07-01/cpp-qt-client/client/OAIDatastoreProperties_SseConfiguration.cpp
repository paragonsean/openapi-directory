/**
 * Amazon HealthLake
 * AWS HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatastoreProperties_SseConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatastoreProperties_SseConfiguration::OAIDatastoreProperties_SseConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatastoreProperties_SseConfiguration::OAIDatastoreProperties_SseConfiguration() {
    this->initializeModel();
}

OAIDatastoreProperties_SseConfiguration::~OAIDatastoreProperties_SseConfiguration() {}

void OAIDatastoreProperties_SseConfiguration::initializeModel() {

    m_kms_encryption_config_isSet = false;
    m_kms_encryption_config_isValid = false;
}

void OAIDatastoreProperties_SseConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatastoreProperties_SseConfiguration::fromJsonObject(QJsonObject json) {

    m_kms_encryption_config_isValid = ::OpenAPI::fromJsonValue(m_kms_encryption_config, json[QString("KmsEncryptionConfig")]);
    m_kms_encryption_config_isSet = !json[QString("KmsEncryptionConfig")].isNull() && m_kms_encryption_config_isValid;
}

QString OAIDatastoreProperties_SseConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatastoreProperties_SseConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_kms_encryption_config.isSet()) {
        obj.insert(QString("KmsEncryptionConfig"), ::OpenAPI::toJsonValue(m_kms_encryption_config));
    }
    return obj;
}

OAISseConfiguration_KmsEncryptionConfig OAIDatastoreProperties_SseConfiguration::getKmsEncryptionConfig() const {
    return m_kms_encryption_config;
}
void OAIDatastoreProperties_SseConfiguration::setKmsEncryptionConfig(const OAISseConfiguration_KmsEncryptionConfig &kms_encryption_config) {
    m_kms_encryption_config = kms_encryption_config;
    m_kms_encryption_config_isSet = true;
}

bool OAIDatastoreProperties_SseConfiguration::is_kms_encryption_config_Set() const{
    return m_kms_encryption_config_isSet;
}

bool OAIDatastoreProperties_SseConfiguration::is_kms_encryption_config_Valid() const{
    return m_kms_encryption_config_isValid;
}

bool OAIDatastoreProperties_SseConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kms_encryption_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatastoreProperties_SseConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_kms_encryption_config_isValid && true;
}

} // namespace OpenAPI
