/**
 * Amazon HealthLake
 * AWS HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatastoreStatus from './DatastoreStatus';

/**
 * The DatastoreFilter model module.
 * @module model/DatastoreFilter
 * @version 2017-07-01
 */
class DatastoreFilter {
    /**
     * Constructs a new <code>DatastoreFilter</code>.
     * The filters applied to data store query.
     * @alias module:model/DatastoreFilter
     */
    constructor() { 
        
        DatastoreFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatastoreFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatastoreFilter} obj Optional instance to populate.
     * @return {module:model/DatastoreFilter} The populated <code>DatastoreFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatastoreFilter();

            if (data.hasOwnProperty('DatastoreName')) {
                obj['DatastoreName'] = ApiClient.convertToType(data['DatastoreName'], 'String');
            }
            if (data.hasOwnProperty('DatastoreStatus')) {
                obj['DatastoreStatus'] = ApiClient.convertToType(data['DatastoreStatus'], DatastoreStatus);
            }
            if (data.hasOwnProperty('CreatedBefore')) {
                obj['CreatedBefore'] = ApiClient.convertToType(data['CreatedBefore'], 'Date');
            }
            if (data.hasOwnProperty('CreatedAfter')) {
                obj['CreatedAfter'] = ApiClient.convertToType(data['CreatedAfter'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatastoreFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatastoreFilter</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DatastoreName`
        if (data['DatastoreName']) { // data not null
          String.validateJSON(data['DatastoreName']);
        }
        // validate the optional field `DatastoreStatus`
        if (data['DatastoreStatus']) { // data not null
          DatastoreStatus.validateJSON(data['DatastoreStatus']);
        }
        // validate the optional field `CreatedBefore`
        if (data['CreatedBefore']) { // data not null
          Date.validateJSON(data['CreatedBefore']);
        }
        // validate the optional field `CreatedAfter`
        if (data['CreatedAfter']) { // data not null
          Date.validateJSON(data['CreatedAfter']);
        }

        return true;
    }


}



/**
 * @member {String} DatastoreName
 */
DatastoreFilter.prototype['DatastoreName'] = undefined;

/**
 * @member {module:model/DatastoreStatus} DatastoreStatus
 */
DatastoreFilter.prototype['DatastoreStatus'] = undefined;

/**
 * @member {Date} CreatedBefore
 */
DatastoreFilter.prototype['CreatedBefore'] = undefined;

/**
 * @member {Date} CreatedAfter
 */
DatastoreFilter.prototype['CreatedAfter'] = undefined;






export default DatastoreFilter;

