/*
 * Amazon HealthLake
 * AWS HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateFHIRDatastoreRequestIdentityProviderConfiguration;
import org.openapitools.client.model.CreateFHIRDatastoreRequestPreloadDataConfig;
import org.openapitools.client.model.CreateFHIRDatastoreRequestSseConfiguration;
import org.openapitools.client.model.FHIRVersion;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateFHIRDatastoreRequest
 */
public class CreateFHIRDatastoreRequestTest {
    private final CreateFHIRDatastoreRequest model = new CreateFHIRDatastoreRequest();

    /**
     * Model tests for CreateFHIRDatastoreRequest
     */
    @Test
    public void testCreateFHIRDatastoreRequest() {
        // TODO: test CreateFHIRDatastoreRequest
    }

    /**
     * Test the property 'datastoreName'
     */
    @Test
    public void datastoreNameTest() {
        // TODO: test datastoreName
    }

    /**
     * Test the property 'datastoreTypeVersion'
     */
    @Test
    public void datastoreTypeVersionTest() {
        // TODO: test datastoreTypeVersion
    }

    /**
     * Test the property 'sseConfiguration'
     */
    @Test
    public void sseConfigurationTest() {
        // TODO: test sseConfiguration
    }

    /**
     * Test the property 'preloadDataConfig'
     */
    @Test
    public void preloadDataConfigTest() {
        // TODO: test preloadDataConfig
    }

    /**
     * Test the property 'clientToken'
     */
    @Test
    public void clientTokenTest() {
        // TODO: test clientToken
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'identityProviderConfiguration'
     */
    @Test
    public void identityProviderConfigurationTest() {
        // TODO: test identityProviderConfiguration
    }

}
