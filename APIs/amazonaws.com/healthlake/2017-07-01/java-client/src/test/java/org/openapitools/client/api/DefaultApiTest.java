/*
 * Amazon HealthLake
 * AWS HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateFHIRDatastoreRequest;
import org.openapitools.client.model.CreateFHIRDatastoreResponse;
import org.openapitools.client.model.DeleteFHIRDatastoreRequest;
import org.openapitools.client.model.DeleteFHIRDatastoreResponse;
import org.openapitools.client.model.DescribeFHIRDatastoreRequest;
import org.openapitools.client.model.DescribeFHIRDatastoreResponse;
import org.openapitools.client.model.DescribeFHIRExportJobRequest;
import org.openapitools.client.model.DescribeFHIRExportJobResponse;
import org.openapitools.client.model.DescribeFHIRImportJobRequest;
import org.openapitools.client.model.DescribeFHIRImportJobResponse;
import org.openapitools.client.model.ListFHIRDatastoresRequest;
import org.openapitools.client.model.ListFHIRDatastoresResponse;
import org.openapitools.client.model.ListFHIRExportJobsRequest;
import org.openapitools.client.model.ListFHIRExportJobsResponse;
import org.openapitools.client.model.ListFHIRImportJobsRequest;
import org.openapitools.client.model.ListFHIRImportJobsResponse;
import org.openapitools.client.model.ListTagsForResourceRequest;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.StartFHIRExportJobRequest;
import org.openapitools.client.model.StartFHIRExportJobResponse;
import org.openapitools.client.model.StartFHIRImportJobRequest;
import org.openapitools.client.model.StartFHIRImportJobResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UntagResourceRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Creates a data store that can ingest and export FHIR formatted data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFHIRDatastoreTest() throws ApiException {
        String xAmzTarget = null;
        CreateFHIRDatastoreRequest createFHIRDatastoreRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateFHIRDatastoreResponse response = api.createFHIRDatastore(xAmzTarget, createFHIRDatastoreRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a data store. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFHIRDatastoreTest() throws ApiException {
        String xAmzTarget = null;
        DeleteFHIRDatastoreRequest deleteFHIRDatastoreRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteFHIRDatastoreResponse response = api.deleteFHIRDatastore(xAmzTarget, deleteFHIRDatastoreRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the properties associated with the FHIR data store, including the data store ID, data store ARN, data store name, data store status, when the data store was created, data store type version, and the data store&#39;s endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeFHIRDatastoreTest() throws ApiException {
        String xAmzTarget = null;
        DescribeFHIRDatastoreRequest describeFHIRDatastoreRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeFHIRDatastoreResponse response = api.describeFHIRDatastore(xAmzTarget, describeFHIRDatastoreRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Displays the properties of a FHIR export job, including the ID, ARN, name, and the status of the job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeFHIRExportJobTest() throws ApiException {
        String xAmzTarget = null;
        DescribeFHIRExportJobRequest describeFHIRExportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeFHIRExportJobResponse response = api.describeFHIRExportJob(xAmzTarget, describeFHIRExportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Displays the properties of a FHIR import job, including the ID, ARN, name, and the status of the job. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeFHIRImportJobTest() throws ApiException {
        String xAmzTarget = null;
        DescribeFHIRImportJobRequest describeFHIRImportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeFHIRImportJobResponse response = api.describeFHIRImportJob(xAmzTarget, describeFHIRImportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists all FHIR data stores that are in the userâ€™s account, regardless of data store status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFHIRDatastoresTest() throws ApiException {
        String xAmzTarget = null;
        ListFHIRDatastoresRequest listFHIRDatastoresRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListFHIRDatastoresResponse response = api.listFHIRDatastores(xAmzTarget, listFHIRDatastoresRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     *  Lists all FHIR export jobs associated with an account and their statuses. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFHIRExportJobsTest() throws ApiException {
        String xAmzTarget = null;
        ListFHIRExportJobsRequest listFHIRExportJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListFHIRExportJobsResponse response = api.listFHIRExportJobs(xAmzTarget, listFHIRExportJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     *  Lists all FHIR import jobs associated with an account and their statuses. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFHIRImportJobsTest() throws ApiException {
        String xAmzTarget = null;
        ListFHIRImportJobsRequest listFHIRImportJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListFHIRImportJobsResponse response = api.listFHIRImportJobs(xAmzTarget, listFHIRImportJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     *  Returns a list of all existing tags associated with a data store. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String xAmzTarget = null;
        ListTagsForResourceRequest listTagsForResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(xAmzTarget, listTagsForResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Begins a FHIR export job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startFHIRExportJobTest() throws ApiException {
        String xAmzTarget = null;
        StartFHIRExportJobRequest startFHIRExportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartFHIRExportJobResponse response = api.startFHIRExportJob(xAmzTarget, startFHIRExportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Begins a FHIR Import job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startFHIRImportJobTest() throws ApiException {
        String xAmzTarget = null;
        StartFHIRImportJobRequest startFHIRImportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartFHIRImportJobResponse response = api.startFHIRImportJob(xAmzTarget, startFHIRImportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Adds a user specified key and value tag to a data store. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String xAmzTarget = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(xAmzTarget, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Removes tags from a data store. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String xAmzTarget = null;
        UntagResourceRequest untagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(xAmzTarget, untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
