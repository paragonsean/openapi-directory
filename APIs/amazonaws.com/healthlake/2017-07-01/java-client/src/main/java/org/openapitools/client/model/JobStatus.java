/*
 * Amazon HealthLake
 * AWS HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets JobStatus
 */
@JsonAdapter(JobStatus.Adapter.class)
public enum JobStatus {
  
  SUBMITTED("SUBMITTED"),
  
  IN_PROGRESS("IN_PROGRESS"),
  
  COMPLETED_WITH_ERRORS("COMPLETED_WITH_ERRORS"),
  
  COMPLETED("COMPLETED"),
  
  FAILED("FAILED"),
  
  CANCEL_SUBMITTED("CANCEL_SUBMITTED"),
  
  CANCEL_IN_PROGRESS("CANCEL_IN_PROGRESS"),
  
  CANCEL_COMPLETED("CANCEL_COMPLETED"),
  
  CANCEL_FAILED("CANCEL_FAILED");

  private String value;

  JobStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static JobStatus fromValue(String value) {
    for (JobStatus b : JobStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<JobStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final JobStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public JobStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return JobStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    JobStatus.fromValue(value);
  }
}

