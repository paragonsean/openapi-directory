openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "AWS HealthLake is a HIPAA eligibile service that allows customers\
    \ to store, transform, query, and analyze their FHIR-formatted data in a consistent\
    \ fashion in the cloud."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon HealthLake
  version: 2017-07-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: healthlake
  x-aws-signingName: healthlake
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/healthlake-2017-07-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/healthlake/
servers:
- description: The HealthLake multi-region endpoint
  url: "http://healthlake.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The HealthLake multi-region endpoint
  url: "https://healthlake.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The HealthLake endpoint for China (Beijing) and China (Ningxia)
  url: "http://healthlake.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The HealthLake endpoint for China (Beijing) and China (Ningxia)
  url: "https://healthlake.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=HealthLake.CreateFHIRDatastore:
    post:
      description: Creates a data store that can ingest and export FHIR formatted
        data.
      operationId: CreateFHIRDatastore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.CreateFHIRDatastore
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFHIRDatastoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFHIRDatastoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.DeleteFHIRDatastore:
    post:
      description: 'Deletes a data store. '
      operationId: DeleteFHIRDatastore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.DeleteFHIRDatastore
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFHIRDatastoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFHIRDatastoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.DescribeFHIRDatastore:
    post:
      description: "Gets the properties associated with the FHIR data store, including\
        \ the data store ID, data store ARN, data store name, data store status, when\
        \ the data store was created, data store type version, and the data store's\
        \ endpoint."
      operationId: DescribeFHIRDatastore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.DescribeFHIRDatastore
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFHIRDatastoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFHIRDatastoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.DescribeFHIRExportJob:
    post:
      description: "Displays the properties of a FHIR export job, including the ID,\
        \ ARN, name, and the status of the job."
      operationId: DescribeFHIRExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.DescribeFHIRExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFHIRExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFHIRExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.DescribeFHIRImportJob:
    post:
      description: "Displays the properties of a FHIR import job, including the ID,\
        \ ARN, name, and the status of the job. "
      operationId: DescribeFHIRImportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.DescribeFHIRImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFHIRImportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFHIRImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.ListFHIRDatastores:
    post:
      description: "Lists all FHIR data stores that are in the user’s account, regardless\
        \ of data store status."
      operationId: ListFHIRDatastores
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.ListFHIRDatastores
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFHIRDatastoresRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFHIRDatastoresResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.ListFHIRExportJobs:
    post:
      description: ' Lists all FHIR export jobs associated with an account and their
        statuses. '
      operationId: ListFHIRExportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.ListFHIRExportJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFHIRExportJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFHIRExportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.ListFHIRImportJobs:
    post:
      description: ' Lists all FHIR import jobs associated with an account and their
        statuses. '
      operationId: ListFHIRImportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.ListFHIRImportJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFHIRImportJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFHIRImportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.ListTagsForResource:
    post:
      description: ' Returns a list of all existing tags associated with a data store. '
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.StartFHIRExportJob:
    post:
      description: Begins a FHIR export job.
      operationId: StartFHIRExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.StartFHIRExportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFHIRExportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFHIRExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.StartFHIRImportJob:
    post:
      description: Begins a FHIR Import job.
      operationId: StartFHIRImportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.StartFHIRImportJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFHIRImportJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFHIRImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.TagResource:
    post:
      description: ' Adds a user specified key and value tag to a data store. '
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=HealthLake.UntagResource:
    post:
      description: ' Removes tags from a data store. '
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - HealthLake.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateFHIRDatastoreResponse:
      example:
        DatastoreArn: ""
        DatastoreId: ""
        DatastoreStatus: ""
        DatastoreEndpoint: ""
      properties:
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS-generated data store id. This id is in the output
              from the initial data store creation call.
        DatastoreArn:
          allOf:
          - $ref: '#/components/schemas/DatastoreArn'
          - description: The data store ARN is generated during the creation of the
              data store and can be found in the output from the initial data store
              creation call.
        DatastoreStatus:
          allOf:
          - $ref: '#/components/schemas/DatastoreStatus'
          - description: The status of the FHIR data store.
        DatastoreEndpoint:
          allOf:
          - $ref: '#/components/schemas/BoundedLengthString'
          - description: The AWS endpoint for the created data store.
      required:
      - DatastoreArn
      - DatastoreEndpoint
      - DatastoreId
      - DatastoreStatus
      type: object
    CreateFHIRDatastoreRequest:
      example:
        DatastoreTypeVersion: ""
        DatastoreName: ""
        IdentityProviderConfiguration:
          AuthorizationStrategy: ""
          IdpLambdaArn: ""
          FineGrainedAuthorizationEnabled: ""
          Metadata: ""
        ClientToken: ""
        Tags: ""
        SseConfiguration:
          KmsEncryptionConfig:
            KmsKeyId: ""
            CmkType: ""
        PreloadDataConfig:
          PreloadDataType: ""
      properties:
        DatastoreName:
          allOf:
          - $ref: '#/components/schemas/DatastoreName'
          - description: The user generated name for the data store.
        DatastoreTypeVersion:
          allOf:
          - $ref: '#/components/schemas/FHIRVersion'
          - description: The FHIR version of the data store. The only supported version
              is R4.
        SseConfiguration:
          $ref: '#/components/schemas/CreateFHIRDatastoreRequest_SseConfiguration'
        PreloadDataConfig:
          $ref: '#/components/schemas/CreateFHIRDatastoreRequest_PreloadDataConfig'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: Optional user provided token used for ensuring idempotency.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: ' Resource tags that are applied to a data store when it
              is created. '
        IdentityProviderConfiguration:
          $ref: '#/components/schemas/CreateFHIRDatastoreRequest_IdentityProviderConfiguration'
      required:
      - DatastoreTypeVersion
      title: CreateFHIRDatastoreRequest
      type: object
    ValidationException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    DeleteFHIRDatastoreResponse:
      example:
        DatastoreArn: ""
        DatastoreId: ""
        DatastoreStatus: ""
        DatastoreEndpoint: ""
      properties:
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS-generated ID for the data store to be deleted.
        DatastoreArn:
          allOf:
          - $ref: '#/components/schemas/DatastoreArn'
          - description: The Amazon Resource Name (ARN) that gives AWS HealthLake
              access permission.
        DatastoreStatus:
          allOf:
          - $ref: '#/components/schemas/DatastoreStatus'
          - description: 'The status of the data store that the user has requested
              to be deleted. '
        DatastoreEndpoint:
          allOf:
          - $ref: '#/components/schemas/BoundedLengthString'
          - description: The AWS endpoint for the data store the user has requested
              to be deleted.
      required:
      - DatastoreArn
      - DatastoreEndpoint
      - DatastoreId
      - DatastoreStatus
      type: object
    DeleteFHIRDatastoreRequest:
      example:
        DatastoreId: ""
      properties:
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: ' The AWS-generated ID for the data store to be deleted.'
      required:
      - DatastoreId
      title: DeleteFHIRDatastoreRequest
      type: object
    ConflictException: {}
    ResourceNotFoundException: {}
    DescribeFHIRDatastoreResponse:
      example:
        DatastoreProperties:
          DatastoreArn: ""
          DatastoreTypeVersion: ""
          DatastoreId: ""
          DatastoreStatus: ""
          CreatedAt: ""
          DatastoreName: ""
          IdentityProviderConfiguration:
            AuthorizationStrategy: ""
            IdpLambdaArn: ""
            FineGrainedAuthorizationEnabled: ""
            Metadata: ""
          DatastoreEndpoint: ""
          SseConfiguration:
            KmsEncryptionConfig:
              KmsKeyId: ""
              CmkType: ""
          PreloadDataConfig:
            PreloadDataType: ""
      properties:
        DatastoreProperties:
          $ref: '#/components/schemas/DescribeFHIRDatastoreResponse_DatastoreProperties'
      required:
      - DatastoreProperties
      type: object
    DescribeFHIRDatastoreRequest:
      example:
        DatastoreId: ""
      properties:
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS-generated data store ID.
      required:
      - DatastoreId
      title: DescribeFHIRDatastoreRequest
      type: object
    DescribeFHIRExportJobResponse:
      example:
        ExportJobProperties:
          JobStatus: ""
          DataAccessRoleArn: ""
          EndTime: ""
          Message: ""
          DatastoreId: ""
          OutputDataConfig:
            S3Configuration:
              KmsKeyId: ""
              S3Uri: ""
          JobName: ""
          SubmitTime: ""
          JobId: ""
      properties:
        ExportJobProperties:
          $ref: '#/components/schemas/DescribeFHIRExportJobResponse_ExportJobProperties'
      required:
      - ExportJobProperties
      type: object
    DescribeFHIRExportJobRequest:
      example:
        DatastoreId: ""
        JobId: ""
      properties:
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS generated ID for the data store from which files
              are being exported from for an export job.
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The AWS generated ID for an export job.
      required:
      - DatastoreId
      - JobId
      title: DescribeFHIRExportJobRequest
      type: object
    DescribeFHIRImportJobResponse:
      example:
        ImportJobProperties:
          JobStatus: ""
          DataAccessRoleArn: ""
          EndTime: ""
          Message: ""
          DatastoreId: ""
          JobName: ""
          JobOutputDataConfig:
            S3Configuration:
              KmsKeyId: ""
              S3Uri: ""
          SubmitTime: ""
          InputDataConfig:
            S3Uri: ""
          JobId: ""
      properties:
        ImportJobProperties:
          $ref: '#/components/schemas/DescribeFHIRImportJobResponse_ImportJobProperties'
      required:
      - ImportJobProperties
      type: object
    DescribeFHIRImportJobRequest:
      example:
        DatastoreId: ""
        JobId: ""
      properties:
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS-generated ID of the data store.
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The AWS-generated job ID.
      required:
      - DatastoreId
      - JobId
      title: DescribeFHIRImportJobRequest
      type: object
    ListFHIRDatastoresResponse:
      example:
        NextToken: ""
        DatastorePropertiesList: ""
      properties:
        DatastorePropertiesList:
          allOf:
          - $ref: '#/components/schemas/DatastorePropertiesList'
          - description: All properties associated with the listed data stores.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Pagination token that can be used to retrieve the next page
              of results.
      required:
      - DatastorePropertiesList
      type: object
    ListFHIRDatastoresRequest:
      example:
        NextToken: ""
        Filter:
          DatastoreStatus: ""
          CreatedAfter: ""
          DatastoreName: ""
          CreatedBefore: ""
        MaxResults: ""
      properties:
        Filter:
          $ref: '#/components/schemas/ListFHIRDatastoresRequest_Filter'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Fetches the next page of data stores when results are paginated.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsInteger'
          - description: The maximum number of data stores returned in a single page
              of a ListFHIRDatastoresRequest call.
      title: ListFHIRDatastoresRequest
      type: object
    ListFHIRExportJobsResponse:
      example:
        NextToken: ""
        ExportJobPropertiesList: ""
      properties:
        ExportJobPropertiesList:
          allOf:
          - $ref: '#/components/schemas/ExportJobPropertiesList'
          - description: " The properties of listed FHIR export jobs, including the\
              \ ID, ARN, name, and the status of the job. "
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' A pagination token used to identify the next page of results
              to return for a ListFHIRExportJobs query. '
      required:
      - ExportJobPropertiesList
      type: object
    ListFHIRExportJobsRequest:
      example:
        JobStatus: ""
        SubmittedBefore: ""
        SubmittedAfter: ""
        NextToken: ""
        DatastoreId: ""
        MaxResults: ""
        JobName: ""
      properties:
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: ' This parameter limits the response to the export job with
              the specified data store ID. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' A pagination token used to identify the next page of results
              to return for a ListFHIRExportJobs query. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsInteger'
          - description: ' This parameter limits the number of results returned for
              a ListFHIRExportJobs to a maximum quantity specified by the user. '
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: ' This parameter limits the response to the export job with
              the specified job name. '
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: ' This parameter limits the response to the export jobs with
              the specified job status. '
        SubmittedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' This parameter limits the response to FHIR export jobs
              submitted before a user specified date. '
        SubmittedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' This parameter limits the response to FHIR export jobs
              submitted after a user specified date. '
      required:
      - DatastoreId
      title: ListFHIRExportJobsRequest
      type: object
    ListFHIRImportJobsResponse:
      example:
        NextToken: ""
        ImportJobPropertiesList: ""
      properties:
        ImportJobPropertiesList:
          allOf:
          - $ref: '#/components/schemas/ImportJobPropertiesList'
          - description: " The properties of a listed FHIR import jobs, including\
              \ the ID, ARN, name, and the status of the job. "
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' A pagination token used to identify the next page of results
              to return for a ListFHIRImportJobs query. '
      required:
      - ImportJobPropertiesList
      type: object
    ListFHIRImportJobsRequest:
      example:
        JobStatus: ""
        SubmittedBefore: ""
        SubmittedAfter: ""
        NextToken: ""
        DatastoreId: ""
        MaxResults: ""
        JobName: ""
      properties:
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: ' This parameter limits the response to the import job with
              the specified data store ID. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' A pagination token used to identify the next page of results
              to return for a ListFHIRImportJobs query. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsInteger'
          - description: ' This parameter limits the number of results returned for
              a ListFHIRImportJobs to a maximum quantity specified by the user. '
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: ' This parameter limits the response to the import job with
              the specified job name. '
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: ' This parameter limits the response to the import job with
              the specified job status. '
        SubmittedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' This parameter limits the response to FHIR import jobs
              submitted before a user specified date. '
        SubmittedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' This parameter limits the response to FHIR import jobs
              submitted after a user specified date. '
      required:
      - DatastoreId
      title: ListFHIRImportJobsRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: ' Returns a list of tags associated with a data store. '
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceARN: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: ' The Amazon Resource Name(ARN) of the data store for which
              tags are being added. '
      required:
      - ResourceARN
      title: ListTagsForResourceRequest
      type: object
    StartFHIRExportJobResponse:
      example:
        JobStatus: ""
        DatastoreId: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The AWS generated ID for an export job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: "The status of a FHIR export job. Possible statuses are SUBMITTED,\
              \ IN_PROGRESS, COMPLETED, or FAILED."
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS generated ID for the data store from which files
              are being exported for an export job.
      required:
      - JobId
      - JobStatus
      type: object
    StartFHIRExportJobRequest:
      example:
        DataAccessRoleArn: ""
        OutputDataConfig:
          S3Configuration:
            KmsKeyId: ""
            S3Uri: ""
        DatastoreId: ""
        JobName: ""
        ClientToken: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The user generated name for an export job.
        OutputDataConfig:
          $ref: '#/components/schemas/StartFHIRExportJobRequest_OutputDataConfig'
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS generated ID for the data store from which files
              are being exported for an export job.
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The Amazon Resource Name used during the initiation of the
              job.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: An optional user provided token used for ensuring idempotency.
      required:
      - ClientToken
      - DataAccessRoleArn
      - DatastoreId
      - OutputDataConfig
      title: StartFHIRExportJobRequest
      type: object
    StartFHIRImportJobResponse:
      example:
        JobStatus: ""
        DatastoreId: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The AWS-generated job ID.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The status of an import job.
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS-generated data store ID.
      required:
      - JobId
      - JobStatus
      type: object
    StartFHIRImportJobRequest:
      example:
        DataAccessRoleArn: ""
        DatastoreId: ""
        JobName: ""
        JobOutputDataConfig:
          S3Configuration:
            KmsKeyId: ""
            S3Uri: ""
        ClientToken: ""
        InputDataConfig:
          S3Uri: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The name of the FHIR Import job in the StartFHIRImport job
              request.
        InputDataConfig:
          $ref: '#/components/schemas/StartFHIRImportJobRequest_InputDataConfig'
        JobOutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS-generated data store ID.
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The Amazon Resource Name (ARN) that gives AWS HealthLake
              access permission.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: Optional user provided token used for ensuring idempotency.
      required:
      - ClientToken
      - DataAccessRoleArn
      - DatastoreId
      - InputDataConfig
      - JobOutputDataConfig
      title: StartFHIRImportJobRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceARN: ""
        Tags: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: ' The Amazon Resource Name(ARN)that gives AWS HealthLake
              access to the data store which tags are being added to. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: ' The user specified key and value pair tags being added
              to a data store. '
      required:
      - ResourceARN
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceARN: ""
        TagKeys: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name(ARN) of the data store for which
              tags are being removed.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: ' The keys for the tags to be removed from the HealthLake
              data store. '
      required:
      - ResourceARN
      - TagKeys
      title: UntagResourceRequest
      type: object
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      pattern: "^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-z0-9-]+:\\\
        d{12}:datastore\\/fhir\\/.{32}"
      type: string
    AuthorizationStrategy:
      enum:
      - SMART_ON_FHIR_V1
      - AWS_AUTH
      type: string
    Boolean:
      type: boolean
    BoundedLengthString:
      maxLength: 5000
      minLength: 1
      pattern: "[\\P{M}\\p{M}]{1,5000}"
      type: string
    ClientTokenString:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9-]+$"
      type: string
    CmkType:
      enum:
      - CUSTOMER_MANAGED_KMS_KEY
      - AWS_OWNED_KMS_KEY
      type: string
    ConfigurationMetadata:
      type: string
    DatastoreName:
      maxLength: 256
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    FHIRVersion:
      enum:
      - R4
      type: string
    SseConfiguration:
      description: ' The server-side encryption key configuration for a customer provided
        encryption key. '
      properties:
        KmsEncryptionConfig:
          $ref: '#/components/schemas/SseConfiguration_KmsEncryptionConfig'
      required:
      - KmsEncryptionConfig
      type: object
    PreloadDataConfig:
      description: ' The input properties for the preloaded data store. Only data
        preloaded from Synthea is supported.'
      properties:
        PreloadDataType:
          allOf:
          - $ref: '#/components/schemas/PreloadDataType'
          - description: The type of preloaded data. Only Synthea preloaded data is
              supported.
      required:
      - PreloadDataType
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    IdentityProviderConfiguration:
      description: The identity provider configuration that you gave when the data
        store was created.
      properties:
        AuthorizationStrategy:
          allOf:
          - $ref: '#/components/schemas/AuthorizationStrategy'
          - description: The authorization strategy that you selected when you created
              the data store.
        FineGrainedAuthorizationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: If you enabled fine-grained authorization when you created
              the data store.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/ConfigurationMetadata'
          - description: "<p>The JSON metadata elements that you want to use in your\
              \ identity provider configuration. Required elements are listed based\
              \ on the launch specification of the SMART application. For more information\
              \ on all possible elements, see <a href=\"https://build.fhir.org/ig/HL7/smart-app-launch/conformance.html#metadata\"\
              >Metadata</a> in SMART's App Launch specification.</p> <p> <code>authorization_endpoint</code>:\
              \ The URL to the OAuth2 authorization endpoint.</p> <p> <code>grant_types_supported</code>:\
              \ An array of grant types that are supported at the token endpoint.\
              \ You must provide at least one grant type option. Valid options are\
              \ <code>authorization_code</code> and <code>client_credentials</code>.</p>\
              \ <p> <code>token_endpoint</code>: The URL to the OAuth2 token endpoint.</p>\
              \ <p> <code>capabilities</code>: An array of strings of the SMART capabilities\
              \ that the authorization server supports.</p> <p> <code>code_challenge_methods_supported</code>:\
              \ An array of strings of supported PKCE code challenge methods. You\
              \ must include the <code>S256</code> method in the array of PKCE code\
              \ challenge methods.</p>"
        IdpLambdaArn:
          allOf:
          - $ref: '#/components/schemas/LambdaArn'
          - description: The Amazon Resource Name (ARN) of the Lambda function that
              you want to use to decode the access token created by the authorization
              server.
      required:
      - AuthorizationStrategy
      type: object
    DatastoreId:
      maxLength: 32
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    DatastoreArn:
      pattern: "^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?"
      type: string
    DatastoreStatus:
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - DELETED
      type: string
    Timestamp:
      format: date-time
      type: string
    DatastoreFilter:
      description: The filters applied to data store query.
      properties:
        DatastoreName:
          allOf:
          - $ref: '#/components/schemas/DatastoreName'
          - description: Allows the user to filter data store results by name.
        DatastoreStatus:
          allOf:
          - $ref: '#/components/schemas/DatastoreStatus'
          - description: Allows the user to filter data store results by status.
        CreatedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A filter that allows the user to set cutoff dates for records.
              All data stores created before the specified date will be included in
              the results. '
        CreatedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A filter that allows the user to set cutoff dates for records.
              All data stores created after the specified date will be included in
              the results.
      type: object
    String:
      maxLength: 10000
      pattern: "[\\P{M}\\p{M}]{0,10000}"
      type: string
    DatastoreProperties:
      description: "Displays the properties of the data store, including the ID, ARN,\
        \ name, and the status of the data store."
      properties:
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS-generated ID number for the data store.
        DatastoreArn:
          allOf:
          - $ref: '#/components/schemas/DatastoreArn'
          - description: The Amazon Resource Name used in the creation of the data
              store.
        DatastoreName:
          allOf:
          - $ref: '#/components/schemas/DatastoreName'
          - description: The user-generated name for the data store.
        DatastoreStatus:
          allOf:
          - $ref: '#/components/schemas/DatastoreStatus'
          - description: The status of the data store.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The time that a data store was created. '
        DatastoreTypeVersion:
          allOf:
          - $ref: '#/components/schemas/FHIRVersion'
          - description: The FHIR version. Only R4 version data is supported.
        DatastoreEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The AWS endpoint for the data store. Each data store will
              have it's own endpoint with data store ID in the endpoint URL.
        SseConfiguration:
          $ref: '#/components/schemas/DatastoreProperties_SseConfiguration'
        PreloadDataConfig:
          $ref: '#/components/schemas/DatastoreProperties_PreloadDataConfig'
        IdentityProviderConfiguration:
          $ref: '#/components/schemas/DatastoreProperties_IdentityProviderConfiguration'
      required:
      - DatastoreArn
      - DatastoreEndpoint
      - DatastoreId
      - DatastoreStatus
      - DatastoreTypeVersion
      type: object
    DatastorePropertiesList:
      items:
        $ref: '#/components/schemas/DatastoreProperties'
      type: array
    JobId:
      maxLength: 32
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    ExportJobProperties:
      description: "The properties of a FHIR export job, including the ID, ARN, name,\
        \ and the status of the job."
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The AWS generated ID for an export job.
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The user generated name for an export job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: "The status of a FHIR export job. Possible statuses are SUBMITTED,\
              \ IN_PROGRESS, COMPLETED, or FAILED."
        SubmitTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time an export job was initiated.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time an export job completed.
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The AWS generated ID for the data store from which files
              are being exported for an export job.
        OutputDataConfig:
          $ref: '#/components/schemas/StartFHIRExportJobRequest_OutputDataConfig'
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The Amazon Resource Name used during the initiation of the
              job.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: An explanation of any errors that may have occurred during
              the export job.
      required:
      - DatastoreId
      - JobId
      - JobStatus
      - OutputDataConfig
      - SubmitTime
      type: object
    ImportJobProperties:
      description: "Displays the properties of the import job, including the ID, Arn,\
        \ Name, and the status of the data store."
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The AWS-generated id number for the Import job.
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The user-generated name for an Import job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: "The job status for an Import job. Possible statuses are\
              \ SUBMITTED, IN_PROGRESS, COMPLETED_WITH_ERRORS, COMPLETED, FAILED."
        SubmitTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the Import job was submitted for processing.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the Import job was completed.
        DatastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: 'The datastore id used when the Import job was created. '
        InputDataConfig:
          $ref: '#/components/schemas/ImportJobProperties_InputDataConfig'
        JobOutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The Amazon Resource Name (ARN) that gives AWS HealthLake
              access to your input data.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: 'An explanation of any errors that may have occurred during
              the FHIR import job. '
      required:
      - DatastoreId
      - InputDataConfig
      - JobId
      - JobStatus
      - SubmitTime
      type: object
    EncryptionKeyID:
      maxLength: 400
      minLength: 1
      pattern: "(arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\\\
        d:)?(\\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))"
      type: string
    JobName:
      maxLength: 64
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    JobStatus:
      enum:
      - SUBMITTED
      - IN_PROGRESS
      - COMPLETED_WITH_ERRORS
      - COMPLETED
      - FAILED
      - CANCEL_SUBMITTED
      - CANCEL_IN_PROGRESS
      - CANCEL_COMPLETED
      - CANCEL_FAILED
      type: string
    OutputDataConfig:
      description: The output data configuration that was supplied when the export
        job was created.
      example:
        S3Configuration:
          KmsKeyId: ""
          S3Uri: ""
      properties:
        S3Configuration:
          $ref: '#/components/schemas/OutputDataConfig_S3Configuration'
      type: object
    IamRoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+"
      type: string
    Message:
      maxLength: 2048
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    ExportJobPropertiesList:
      items:
        $ref: '#/components/schemas/ExportJobProperties'
      type: array
    LambdaArn:
      maxLength: 256
      minLength: 49
      pattern: "arn:aws:lambda:[a-z]{2}-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9\\\
        -_\\.]+(:(\\$LATEST|[a-zA-Z0-9\\-_]+))?"
      type: string
    InputDataConfig:
      description: ' The input properties for an import job.'
      properties:
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: 'The S3Uri is the user specified S3 location of the FHIR
              data to be imported into AWS HealthLake. '
      type: object
    ImportJobPropertiesList:
      items:
        $ref: '#/components/schemas/ImportJobProperties'
      type: array
    S3Uri:
      maxLength: 1024
      pattern: "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?"
      type: string
    KmsEncryptionConfig:
      description: " The customer-managed-key(CMK) used when creating a data store.\
        \ If a customer owned key is not specified, an AWS owned key will be used\
        \ for encryption. "
      properties:
        CmkType:
          allOf:
          - $ref: '#/components/schemas/CmkType'
          - description: ' The type of customer-managed-key(CMK) used for encryption.
              The two types of supported CMKs are customer owned CMKs and AWS owned
              CMKs. '
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyID'
          - description: ' The KMS encryption key id/alias used to encrypt the data
              store contents at rest. '
      required:
      - CmkType
      type: object
    NextToken:
      maxLength: 8192
      pattern: "\\p{ASCII}{0,8192}"
      type: string
    MaxResultsInteger:
      maximum: 500
      minimum: 1
      type: integer
    S3Configuration:
      description: ' The configuration of the S3 bucket for either an import or export
        job. This includes assigning permissions for access. '
      properties:
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: ' The S3Uri is the user specified S3 location of the FHIR
              data to be imported into AWS HealthLake. '
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyID'
          - description: ' The KMS key ID used to access the S3 bucket. '
      required:
      - KmsKeyId
      - S3Uri
      type: object
    PreloadDataType:
      enum:
      - SYNTHEA
      type: string
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    Tag:
      description: " A tag is a label consisting of a user-defined key and value.\
        \ The form for tags is {\"Key\", \"Value\"} "
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: ' The key portion of a tag. Tag keys are case sensitive. '
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: ' The value portion of a tag. Tag values are case sensitive. '
      required:
      - Key
      - Value
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    CreateFHIRDatastoreRequest_SseConfiguration:
      allOf:
      - $ref: '#/components/schemas/SseConfiguration'
      - description: ' The server-side encryption key configuration for a customer
          provided encryption key specified for creating a data store. '
      example:
        KmsEncryptionConfig:
          KmsKeyId: ""
          CmkType: ""
    CreateFHIRDatastoreRequest_PreloadDataConfig:
      allOf:
      - $ref: '#/components/schemas/PreloadDataConfig'
      - description: "Optional parameter to preload data upon creation of the data\
          \ store. Currently, the only supported preloaded data is synthetic data\
          \ generated from Synthea."
      example:
        PreloadDataType: ""
    CreateFHIRDatastoreRequest_IdentityProviderConfiguration:
      allOf:
      - $ref: '#/components/schemas/IdentityProviderConfiguration'
      - description: The configuration of the identity provider that you want to use
          for your data store.
      example:
        AuthorizationStrategy: ""
        IdpLambdaArn: ""
        FineGrainedAuthorizationEnabled: ""
        Metadata: ""
    DescribeFHIRDatastoreResponse_DatastoreProperties:
      allOf:
      - $ref: '#/components/schemas/DatastoreProperties'
      - description: "All properties associated with a data store, including the data\
          \ store ID, data store ARN, data store name, data store status, when the\
          \ data store was created, data store type version, and the data store's\
          \ endpoint."
      example:
        DatastoreArn: ""
        DatastoreTypeVersion: ""
        DatastoreId: ""
        DatastoreStatus: ""
        CreatedAt: ""
        DatastoreName: ""
        IdentityProviderConfiguration:
          AuthorizationStrategy: ""
          IdpLambdaArn: ""
          FineGrainedAuthorizationEnabled: ""
          Metadata: ""
        DatastoreEndpoint: ""
        SseConfiguration:
          KmsEncryptionConfig:
            KmsKeyId: ""
            CmkType: ""
        PreloadDataConfig:
          PreloadDataType: ""
    DescribeFHIRExportJobResponse_ExportJobProperties:
      allOf:
      - $ref: '#/components/schemas/ExportJobProperties'
      - description: "Displays the properties of the export job, including the ID,\
          \ Arn, Name, and the status of the job. "
      example:
        JobStatus: ""
        DataAccessRoleArn: ""
        EndTime: ""
        Message: ""
        DatastoreId: ""
        OutputDataConfig:
          S3Configuration:
            KmsKeyId: ""
            S3Uri: ""
        JobName: ""
        SubmitTime: ""
        JobId: ""
    DescribeFHIRImportJobResponse_ImportJobProperties:
      allOf:
      - $ref: '#/components/schemas/ImportJobProperties'
      - description: "The properties of the Import job request, including the ID,\
          \ ARN, name, and the status of the job."
      example:
        JobStatus: ""
        DataAccessRoleArn: ""
        EndTime: ""
        Message: ""
        DatastoreId: ""
        JobName: ""
        JobOutputDataConfig:
          S3Configuration:
            KmsKeyId: ""
            S3Uri: ""
        SubmitTime: ""
        InputDataConfig:
          S3Uri: ""
        JobId: ""
    ListFHIRDatastoresRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/DatastoreFilter'
      - description: Lists all filters associated with a FHIR data store request.
      example:
        DatastoreStatus: ""
        CreatedAfter: ""
        DatastoreName: ""
        CreatedBefore: ""
    StartFHIRExportJobRequest_OutputDataConfig:
      allOf:
      - $ref: '#/components/schemas/OutputDataConfig'
      - description: The output data configuration that was supplied when the export
          job was created.
      example:
        S3Configuration:
          KmsKeyId: ""
          S3Uri: ""
    StartFHIRImportJobRequest_InputDataConfig:
      allOf:
      - $ref: '#/components/schemas/InputDataConfig'
      - description: The input properties of the FHIR Import job in the StartFHIRImport
          job request.
      example:
        S3Uri: ""
    SseConfiguration_KmsEncryptionConfig:
      allOf:
      - $ref: '#/components/schemas/KmsEncryptionConfig'
      - description: ' The KMS encryption configuration used to provide details for
          data encryption. '
      example:
        KmsKeyId: ""
        CmkType: ""
    DatastoreProperties_SseConfiguration:
      allOf:
      - $ref: '#/components/schemas/SseConfiguration'
      - description: ' The server-side encryption key configuration for a customer
          provided encryption key (CMK). '
      example:
        KmsEncryptionConfig:
          KmsKeyId: ""
          CmkType: ""
    DatastoreProperties_PreloadDataConfig:
      allOf:
      - $ref: '#/components/schemas/PreloadDataConfig'
      - description: The preloaded data configuration for the data store. Only data
          preloaded from Synthea is supported.
      example:
        PreloadDataType: ""
    DatastoreProperties_IdentityProviderConfiguration:
      allOf:
      - $ref: '#/components/schemas/IdentityProviderConfiguration'
      - description: The identity provider that you selected when you created the
          data store.
      example:
        AuthorizationStrategy: ""
        IdpLambdaArn: ""
        FineGrainedAuthorizationEnabled: ""
        Metadata: ""
    ImportJobProperties_InputDataConfig:
      allOf:
      - $ref: '#/components/schemas/InputDataConfig'
      - description: The input data configuration that was supplied when the Import
          job was created.
      example:
        S3Uri: ""
    OutputDataConfig_S3Configuration:
      allOf:
      - $ref: '#/components/schemas/S3Configuration'
      - description: ' The output data configuration that was supplied when the export
          job was created. '
      example:
        KmsKeyId: ""
        S3Uri: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

