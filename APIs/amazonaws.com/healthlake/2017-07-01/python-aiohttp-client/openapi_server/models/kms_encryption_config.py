# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cmk_type import CmkType
from openapi_server import util


class KmsEncryptionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cmk_type: CmkType=None, kms_key_id: str=None):
        """KmsEncryptionConfig - a model defined in OpenAPI

        :param cmk_type: The cmk_type of this KmsEncryptionConfig.
        :param kms_key_id: The kms_key_id of this KmsEncryptionConfig.
        """
        self.openapi_types = {
            'cmk_type': CmkType,
            'kms_key_id': str
        }

        self.attribute_map = {
            'cmk_type': 'CmkType',
            'kms_key_id': 'KmsKeyId'
        }

        self._cmk_type = cmk_type
        self._kms_key_id = kms_key_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KmsEncryptionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KmsEncryptionConfig of this KmsEncryptionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cmk_type(self):
        """Gets the cmk_type of this KmsEncryptionConfig.


        :return: The cmk_type of this KmsEncryptionConfig.
        :rtype: CmkType
        """
        return self._cmk_type

    @cmk_type.setter
    def cmk_type(self, cmk_type):
        """Sets the cmk_type of this KmsEncryptionConfig.


        :param cmk_type: The cmk_type of this KmsEncryptionConfig.
        :type cmk_type: CmkType
        """
        if cmk_type is None:
            raise ValueError("Invalid value for `cmk_type`, must not be `None`")

        self._cmk_type = cmk_type

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this KmsEncryptionConfig.


        :return: The kms_key_id of this KmsEncryptionConfig.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this KmsEncryptionConfig.


        :param kms_key_id: The kms_key_id of this KmsEncryptionConfig.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id
