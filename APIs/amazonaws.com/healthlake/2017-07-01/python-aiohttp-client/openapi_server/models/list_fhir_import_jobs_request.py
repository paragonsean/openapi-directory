# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_status import JobStatus
from openapi_server import util


class ListFHIRImportJobsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datastore_id: str=None, next_token: str=None, max_results: int=None, job_name: str=None, job_status: JobStatus=None, submitted_before: datetime=None, submitted_after: datetime=None):
        """ListFHIRImportJobsRequest - a model defined in OpenAPI

        :param datastore_id: The datastore_id of this ListFHIRImportJobsRequest.
        :param next_token: The next_token of this ListFHIRImportJobsRequest.
        :param max_results: The max_results of this ListFHIRImportJobsRequest.
        :param job_name: The job_name of this ListFHIRImportJobsRequest.
        :param job_status: The job_status of this ListFHIRImportJobsRequest.
        :param submitted_before: The submitted_before of this ListFHIRImportJobsRequest.
        :param submitted_after: The submitted_after of this ListFHIRImportJobsRequest.
        """
        self.openapi_types = {
            'datastore_id': str,
            'next_token': str,
            'max_results': int,
            'job_name': str,
            'job_status': JobStatus,
            'submitted_before': datetime,
            'submitted_after': datetime
        }

        self.attribute_map = {
            'datastore_id': 'DatastoreId',
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'job_name': 'JobName',
            'job_status': 'JobStatus',
            'submitted_before': 'SubmittedBefore',
            'submitted_after': 'SubmittedAfter'
        }

        self._datastore_id = datastore_id
        self._next_token = next_token
        self._max_results = max_results
        self._job_name = job_name
        self._job_status = job_status
        self._submitted_before = submitted_before
        self._submitted_after = submitted_after

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListFHIRImportJobsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListFHIRImportJobsRequest of this ListFHIRImportJobsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datastore_id(self):
        """Gets the datastore_id of this ListFHIRImportJobsRequest.


        :return: The datastore_id of this ListFHIRImportJobsRequest.
        :rtype: str
        """
        return self._datastore_id

    @datastore_id.setter
    def datastore_id(self, datastore_id):
        """Sets the datastore_id of this ListFHIRImportJobsRequest.


        :param datastore_id: The datastore_id of this ListFHIRImportJobsRequest.
        :type datastore_id: str
        """
        if datastore_id is None:
            raise ValueError("Invalid value for `datastore_id`, must not be `None`")

        self._datastore_id = datastore_id

    @property
    def next_token(self):
        """Gets the next_token of this ListFHIRImportJobsRequest.


        :return: The next_token of this ListFHIRImportJobsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListFHIRImportJobsRequest.


        :param next_token: The next_token of this ListFHIRImportJobsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListFHIRImportJobsRequest.


        :return: The max_results of this ListFHIRImportJobsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListFHIRImportJobsRequest.


        :param max_results: The max_results of this ListFHIRImportJobsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def job_name(self):
        """Gets the job_name of this ListFHIRImportJobsRequest.


        :return: The job_name of this ListFHIRImportJobsRequest.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this ListFHIRImportJobsRequest.


        :param job_name: The job_name of this ListFHIRImportJobsRequest.
        :type job_name: str
        """

        self._job_name = job_name

    @property
    def job_status(self):
        """Gets the job_status of this ListFHIRImportJobsRequest.


        :return: The job_status of this ListFHIRImportJobsRequest.
        :rtype: JobStatus
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this ListFHIRImportJobsRequest.


        :param job_status: The job_status of this ListFHIRImportJobsRequest.
        :type job_status: JobStatus
        """

        self._job_status = job_status

    @property
    def submitted_before(self):
        """Gets the submitted_before of this ListFHIRImportJobsRequest.


        :return: The submitted_before of this ListFHIRImportJobsRequest.
        :rtype: datetime
        """
        return self._submitted_before

    @submitted_before.setter
    def submitted_before(self, submitted_before):
        """Sets the submitted_before of this ListFHIRImportJobsRequest.


        :param submitted_before: The submitted_before of this ListFHIRImportJobsRequest.
        :type submitted_before: datetime
        """

        self._submitted_before = submitted_before

    @property
    def submitted_after(self):
        """Gets the submitted_after of this ListFHIRImportJobsRequest.


        :return: The submitted_after of this ListFHIRImportJobsRequest.
        :rtype: datetime
        """
        return self._submitted_after

    @submitted_after.setter
    def submitted_after(self, submitted_after):
        """Sets the submitted_after of this ListFHIRImportJobsRequest.


        :param submitted_after: The submitted_after of this ListFHIRImportJobsRequest.
        :type submitted_after: datetime
        """

        self._submitted_after = submitted_after
