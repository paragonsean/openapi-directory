# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_fhir_import_job_response_import_job_properties import DescribeFHIRImportJobResponseImportJobProperties
from openapi_server import util


class DescribeFHIRImportJobResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, import_job_properties: DescribeFHIRImportJobResponseImportJobProperties=None):
        """DescribeFHIRImportJobResponse - a model defined in OpenAPI

        :param import_job_properties: The import_job_properties of this DescribeFHIRImportJobResponse.
        """
        self.openapi_types = {
            'import_job_properties': DescribeFHIRImportJobResponseImportJobProperties
        }

        self.attribute_map = {
            'import_job_properties': 'ImportJobProperties'
        }

        self._import_job_properties = import_job_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeFHIRImportJobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeFHIRImportJobResponse of this DescribeFHIRImportJobResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def import_job_properties(self):
        """Gets the import_job_properties of this DescribeFHIRImportJobResponse.


        :return: The import_job_properties of this DescribeFHIRImportJobResponse.
        :rtype: DescribeFHIRImportJobResponseImportJobProperties
        """
        return self._import_job_properties

    @import_job_properties.setter
    def import_job_properties(self, import_job_properties):
        """Sets the import_job_properties of this DescribeFHIRImportJobResponse.


        :param import_job_properties: The import_job_properties of this DescribeFHIRImportJobResponse.
        :type import_job_properties: DescribeFHIRImportJobResponseImportJobProperties
        """
        if import_job_properties is None:
            raise ValueError("Invalid value for `import_job_properties`, must not be `None`")

        self._import_job_properties = import_job_properties
