# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sse_configuration_kms_encryption_config import SseConfigurationKmsEncryptionConfig
from openapi_server import util


class CreateFHIRDatastoreRequestSseConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kms_encryption_config: SseConfigurationKmsEncryptionConfig=None):
        """CreateFHIRDatastoreRequestSseConfiguration - a model defined in OpenAPI

        :param kms_encryption_config: The kms_encryption_config of this CreateFHIRDatastoreRequestSseConfiguration.
        """
        self.openapi_types = {
            'kms_encryption_config': SseConfigurationKmsEncryptionConfig
        }

        self.attribute_map = {
            'kms_encryption_config': 'KmsEncryptionConfig'
        }

        self._kms_encryption_config = kms_encryption_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFHIRDatastoreRequestSseConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFHIRDatastoreRequest_SseConfiguration of this CreateFHIRDatastoreRequestSseConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kms_encryption_config(self):
        """Gets the kms_encryption_config of this CreateFHIRDatastoreRequestSseConfiguration.


        :return: The kms_encryption_config of this CreateFHIRDatastoreRequestSseConfiguration.
        :rtype: SseConfigurationKmsEncryptionConfig
        """
        return self._kms_encryption_config

    @kms_encryption_config.setter
    def kms_encryption_config(self, kms_encryption_config):
        """Sets the kms_encryption_config of this CreateFHIRDatastoreRequestSseConfiguration.


        :param kms_encryption_config: The kms_encryption_config of this CreateFHIRDatastoreRequestSseConfiguration.
        :type kms_encryption_config: SseConfigurationKmsEncryptionConfig
        """
        if kms_encryption_config is None:
            raise ValueError("Invalid value for `kms_encryption_config`, must not be `None`")

        self._kms_encryption_config = kms_encryption_config
