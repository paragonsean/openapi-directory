# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_fhir_datastore_response_datastore_properties import DescribeFHIRDatastoreResponseDatastoreProperties
from openapi_server import util


class DescribeFHIRDatastoreResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datastore_properties: DescribeFHIRDatastoreResponseDatastoreProperties=None):
        """DescribeFHIRDatastoreResponse - a model defined in OpenAPI

        :param datastore_properties: The datastore_properties of this DescribeFHIRDatastoreResponse.
        """
        self.openapi_types = {
            'datastore_properties': DescribeFHIRDatastoreResponseDatastoreProperties
        }

        self.attribute_map = {
            'datastore_properties': 'DatastoreProperties'
        }

        self._datastore_properties = datastore_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeFHIRDatastoreResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeFHIRDatastoreResponse of this DescribeFHIRDatastoreResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datastore_properties(self):
        """Gets the datastore_properties of this DescribeFHIRDatastoreResponse.


        :return: The datastore_properties of this DescribeFHIRDatastoreResponse.
        :rtype: DescribeFHIRDatastoreResponseDatastoreProperties
        """
        return self._datastore_properties

    @datastore_properties.setter
    def datastore_properties(self, datastore_properties):
        """Sets the datastore_properties of this DescribeFHIRDatastoreResponse.


        :param datastore_properties: The datastore_properties of this DescribeFHIRDatastoreResponse.
        :type datastore_properties: DescribeFHIRDatastoreResponseDatastoreProperties
        """
        if datastore_properties is None:
            raise ValueError("Invalid value for `datastore_properties`, must not be `None`")

        self._datastore_properties = datastore_properties
