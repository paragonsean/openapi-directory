# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_job_properties_input_data_config import ImportJobPropertiesInputDataConfig
from openapi_server.models.job_status import JobStatus
from openapi_server.models.output_data_config import OutputDataConfig
from openapi_server import util


class DescribeFHIRImportJobResponseImportJobProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_id: str=None, job_name: str=None, job_status: JobStatus=None, submit_time: datetime=None, end_time: datetime=None, datastore_id: str=None, input_data_config: ImportJobPropertiesInputDataConfig=None, job_output_data_config: OutputDataConfig=None, data_access_role_arn: str=None, message: str=None):
        """DescribeFHIRImportJobResponseImportJobProperties - a model defined in OpenAPI

        :param job_id: The job_id of this DescribeFHIRImportJobResponseImportJobProperties.
        :param job_name: The job_name of this DescribeFHIRImportJobResponseImportJobProperties.
        :param job_status: The job_status of this DescribeFHIRImportJobResponseImportJobProperties.
        :param submit_time: The submit_time of this DescribeFHIRImportJobResponseImportJobProperties.
        :param end_time: The end_time of this DescribeFHIRImportJobResponseImportJobProperties.
        :param datastore_id: The datastore_id of this DescribeFHIRImportJobResponseImportJobProperties.
        :param input_data_config: The input_data_config of this DescribeFHIRImportJobResponseImportJobProperties.
        :param job_output_data_config: The job_output_data_config of this DescribeFHIRImportJobResponseImportJobProperties.
        :param data_access_role_arn: The data_access_role_arn of this DescribeFHIRImportJobResponseImportJobProperties.
        :param message: The message of this DescribeFHIRImportJobResponseImportJobProperties.
        """
        self.openapi_types = {
            'job_id': str,
            'job_name': str,
            'job_status': JobStatus,
            'submit_time': datetime,
            'end_time': datetime,
            'datastore_id': str,
            'input_data_config': ImportJobPropertiesInputDataConfig,
            'job_output_data_config': OutputDataConfig,
            'data_access_role_arn': str,
            'message': str
        }

        self.attribute_map = {
            'job_id': 'JobId',
            'job_name': 'JobName',
            'job_status': 'JobStatus',
            'submit_time': 'SubmitTime',
            'end_time': 'EndTime',
            'datastore_id': 'DatastoreId',
            'input_data_config': 'InputDataConfig',
            'job_output_data_config': 'JobOutputDataConfig',
            'data_access_role_arn': 'DataAccessRoleArn',
            'message': 'Message'
        }

        self._job_id = job_id
        self._job_name = job_name
        self._job_status = job_status
        self._submit_time = submit_time
        self._end_time = end_time
        self._datastore_id = datastore_id
        self._input_data_config = input_data_config
        self._job_output_data_config = job_output_data_config
        self._data_access_role_arn = data_access_role_arn
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeFHIRImportJobResponseImportJobProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeFHIRImportJobResponse_ImportJobProperties of this DescribeFHIRImportJobResponseImportJobProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self):
        """Gets the job_id of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The job_id of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this DescribeFHIRImportJobResponseImportJobProperties.


        :param job_id: The job_id of this DescribeFHIRImportJobResponseImportJobProperties.
        :type job_id: str
        """
        if job_id is None:
            raise ValueError("Invalid value for `job_id`, must not be `None`")

        self._job_id = job_id

    @property
    def job_name(self):
        """Gets the job_name of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The job_name of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this DescribeFHIRImportJobResponseImportJobProperties.


        :param job_name: The job_name of this DescribeFHIRImportJobResponseImportJobProperties.
        :type job_name: str
        """

        self._job_name = job_name

    @property
    def job_status(self):
        """Gets the job_status of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The job_status of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: JobStatus
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this DescribeFHIRImportJobResponseImportJobProperties.


        :param job_status: The job_status of this DescribeFHIRImportJobResponseImportJobProperties.
        :type job_status: JobStatus
        """
        if job_status is None:
            raise ValueError("Invalid value for `job_status`, must not be `None`")

        self._job_status = job_status

    @property
    def submit_time(self):
        """Gets the submit_time of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The submit_time of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: datetime
        """
        return self._submit_time

    @submit_time.setter
    def submit_time(self, submit_time):
        """Sets the submit_time of this DescribeFHIRImportJobResponseImportJobProperties.


        :param submit_time: The submit_time of this DescribeFHIRImportJobResponseImportJobProperties.
        :type submit_time: datetime
        """
        if submit_time is None:
            raise ValueError("Invalid value for `submit_time`, must not be `None`")

        self._submit_time = submit_time

    @property
    def end_time(self):
        """Gets the end_time of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The end_time of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this DescribeFHIRImportJobResponseImportJobProperties.


        :param end_time: The end_time of this DescribeFHIRImportJobResponseImportJobProperties.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def datastore_id(self):
        """Gets the datastore_id of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The datastore_id of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: str
        """
        return self._datastore_id

    @datastore_id.setter
    def datastore_id(self, datastore_id):
        """Sets the datastore_id of this DescribeFHIRImportJobResponseImportJobProperties.


        :param datastore_id: The datastore_id of this DescribeFHIRImportJobResponseImportJobProperties.
        :type datastore_id: str
        """
        if datastore_id is None:
            raise ValueError("Invalid value for `datastore_id`, must not be `None`")

        self._datastore_id = datastore_id

    @property
    def input_data_config(self):
        """Gets the input_data_config of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The input_data_config of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: ImportJobPropertiesInputDataConfig
        """
        return self._input_data_config

    @input_data_config.setter
    def input_data_config(self, input_data_config):
        """Sets the input_data_config of this DescribeFHIRImportJobResponseImportJobProperties.


        :param input_data_config: The input_data_config of this DescribeFHIRImportJobResponseImportJobProperties.
        :type input_data_config: ImportJobPropertiesInputDataConfig
        """
        if input_data_config is None:
            raise ValueError("Invalid value for `input_data_config`, must not be `None`")

        self._input_data_config = input_data_config

    @property
    def job_output_data_config(self):
        """Gets the job_output_data_config of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The job_output_data_config of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: OutputDataConfig
        """
        return self._job_output_data_config

    @job_output_data_config.setter
    def job_output_data_config(self, job_output_data_config):
        """Sets the job_output_data_config of this DescribeFHIRImportJobResponseImportJobProperties.


        :param job_output_data_config: The job_output_data_config of this DescribeFHIRImportJobResponseImportJobProperties.
        :type job_output_data_config: OutputDataConfig
        """

        self._job_output_data_config = job_output_data_config

    @property
    def data_access_role_arn(self):
        """Gets the data_access_role_arn of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The data_access_role_arn of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: str
        """
        return self._data_access_role_arn

    @data_access_role_arn.setter
    def data_access_role_arn(self, data_access_role_arn):
        """Sets the data_access_role_arn of this DescribeFHIRImportJobResponseImportJobProperties.


        :param data_access_role_arn: The data_access_role_arn of this DescribeFHIRImportJobResponseImportJobProperties.
        :type data_access_role_arn: str
        """

        self._data_access_role_arn = data_access_role_arn

    @property
    def message(self):
        """Gets the message of this DescribeFHIRImportJobResponseImportJobProperties.


        :return: The message of this DescribeFHIRImportJobResponseImportJobProperties.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DescribeFHIRImportJobResponseImportJobProperties.


        :param message: The message of this DescribeFHIRImportJobResponseImportJobProperties.
        :type message: str
        """

        self._message = message
