openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon Connect Wisdom delivers agents the information they need to\
    \ solve customer issues as they're actively speaking with customers. Agents can\
    \ search across connected repositories from within their agent desktop to find\
    \ answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge\
    \ base, for example, or manage content by uploading custom files."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Connect Wisdom Service
  version: 2020-10-19
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: wisdom
  x-aws-signingName: wisdom
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/wisdom-2020-10-19.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/wisdom/
servers:
- description: The Amazon Connect Wisdom Service multi-region endpoint
  url: "http://wisdom.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Connect Wisdom Service multi-region endpoint
  url: "https://wisdom.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Connect Wisdom Service endpoint for China (Beijing) and
    China (Ningxia)
  url: "http://wisdom.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Connect Wisdom Service endpoint for China (Beijing) and
    China (Ningxia)
  url: "https://wisdom.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /assistants:
    get:
      description: Lists information about assistants.
      operationId: ListAssistants
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssistantsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: Creates an Amazon Connect Wisdom assistant.
      operationId: CreateAssistant
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssistant_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssistantResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /assistants/{assistantId}/associations:
    get:
      description: Lists information about assistant associations.
      operationId: ListAssistantAssociations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssistantAssociationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: "Creates an association between an Amazon Connect Wisdom assistant\
        \ and another resource. Currently, the only supported association is with\
        \ a knowledge base. An assistant can have only a single association."
      operationId: CreateAssistantAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssistantAssociation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssistantAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /knowledgeBases/{knowledgeBaseId}/contents:
    get:
      description: Lists the content.
      operationId: ListContents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: "Creates Wisdom content. Before to calling this API, use <a href=\"\
        https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html\"\
        >StartContentUpload</a> to upload an asset."
      operationId: CreateContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /knowledgeBases:
    get:
      description: Lists the knowledge bases.
      operationId: ListKnowledgeBases
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKnowledgeBasesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates a knowledge base.</p> <note> <p>When using this API,\
        \ you cannot reuse <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/Welcome.html\"\
        >Amazon AppIntegrations</a> DataIntegrations with external knowledge bases\
        \ such as Salesforce and ServiceNow. If you do, you'll get an <code>InvalidRequestException</code>\
        \ error. </p> <p>For example, you're programmatically managing your external\
        \ knowledge base, and you want to add or remove one of the fields that is\
        \ being ingested from Salesforce. Do the following:</p> <ol> <li> <p>Call\
        \ <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_DeleteKnowledgeBase.html\"\
        >DeleteKnowledgeBase</a>.</p> </li> <li> <p>Call <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_DeleteDataIntegration.html\"\
        >DeleteDataIntegration</a>.</p> </li> <li> <p>Call <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html\"\
        >CreateDataIntegration</a> to recreate the DataIntegration or a create different\
        \ one.</p> </li> <li> <p>Call CreateKnowledgeBase.</p> </li> </ol> </note>"
      operationId: CreateKnowledgeBase
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKnowledgeBase_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKnowledgeBaseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /assistants/{assistantId}/sessions:
    post:
      description: Creates a session. A session is a contextual container used for
        generating recommendations. Amazon Connect creates a new Wisdom session for
        each contact on which Wisdom is enabled.
      operationId: CreateSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSession_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /assistants/{assistantId}:
    delete:
      description: Deletes an assistant.
      operationId: DeleteAssistant
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssistantResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about an assistant.
      operationId: GetAssistant
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssistantResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /assistants/{assistantId}/associations/{assistantAssociationId}:
    delete:
      description: Deletes an assistant association.
      operationId: DeleteAssistantAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the assistant association. Can be either the
          ID or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantAssociationId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssistantAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about an assistant association.
      operationId: GetAssistantAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the assistant association. Can be either the
          ID or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantAssociationId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssistantAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /knowledgeBases/{knowledgeBaseId}/contents/{contentId}:
    delete:
      description: Deletes the content.
      operationId: DeleteContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the content. Can be either the ID or the ARN.
          URLs cannot contain the ARN.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: "Retrieves content, including a pre-signed URL to download the\
        \ content."
      operationId: GetContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the content. Can be either the ID or the ARN.
          URLs cannot contain the ARN.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: Updates information about the content.
      operationId: UpdateContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the content. Can be either the ID or the ARN.
          URLs cannot contain the ARN.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
          description: PreconditionFailedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /knowledgeBases/{knowledgeBaseId}:
    delete:
      description: "<p>Deletes the knowledge base.</p> <note> <p>When you use this\
        \ API to delete an external knowledge base such as Salesforce or ServiceNow,\
        \ you must also delete the <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/Welcome.html\"\
        >Amazon AppIntegrations</a> DataIntegration. This is because you can't reuse\
        \ the DataIntegration after it's been associated with an external knowledge\
        \ base. However, you can delete and recreate it. See <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_DeleteDataIntegration.html\"\
        >DeleteDataIntegration</a> and <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html\"\
        >CreateDataIntegration</a> in the <i>Amazon AppIntegrations API Reference</i>.</p>\
        \ </note>"
      operationId: DeleteKnowledgeBase
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The knowledge base to delete content from. Can be either the
          ID or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBaseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the knowledge base.
      operationId: GetKnowledgeBase
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKnowledgeBaseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /knowledgeBases/{knowledgeBaseId}/contents/{contentId}/summary:
    get:
      description: Retrieves summary information about the content.
      operationId: GetContentSummary
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the content. Can be either the ID or the ARN.
          URLs cannot contain the ARN.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContentSummaryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /assistants/{assistantId}/sessions/{sessionId}/recommendations:
    get:
      description: "Retrieves recommendations for the specified session. To avoid\
        \ retrieving the same recommendations in subsequent calls, use <a href=\"\
        https://docs.aws.amazon.com/wisdom/latest/APIReference/API_NotifyRecommendationsReceived.html\"\
        >NotifyRecommendationsReceived</a>. This API supports long-polling behavior\
        \ with the <code>waitTimeSeconds</code> parameter. Short poll is the default\
        \ behavior and only returns recommendations already available. To perform\
        \ a manual query against an assistant, use <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_QueryAssistant.html\"\
        >QueryAssistant</a>."
      operationId: GetRecommendations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The identifier of the session. Can be either the ID or the ARN.
          URLs cannot contain the ARN.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: "The duration (in seconds) for which the call waits for a recommendation\
          \ to be made available before returning. If a recommendation is available,\
          \ the call returns sooner than <code>WaitTimeSeconds</code>. If no messages\
          \ are available and the wait time expires, the call returns successfully\
          \ with an empty list."
        explode: true
        in: query
        name: waitTimeSeconds
        required: false
        schema:
          maximum: 20
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecommendationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /assistants/{assistantId}/sessions/{sessionId}:
    get:
      description: Retrieves information for a specified session.
      operationId: GetSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The identifier of the session. Can be either the ID or the ARN.
          URLs cannot contain the ARN.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Lists the tags for the specified resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: Adds the specified tags to the specified resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /assistants/{assistantId}/sessions/{sessionId}/recommendations/notify:
    post:
      description: Removes the specified recommendations from the specified assistant's
        queue of newly available recommendations. You can use this API in conjunction
        with <a href="https://docs.aws.amazon.com/wisdom/latest/APIReference/API_GetRecommendations.html">GetRecommendations</a>
        and a <code>waitTimeSeconds</code> input for long-polling behavior and avoiding
        duplicate recommendations.
      operationId: NotifyRecommendationsReceived
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The identifier of the session. Can be either the ID or the ARN.
          URLs cannot contain the ARN.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyRecommendationsReceived_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyRecommendationsReceivedResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /assistants/{assistantId}/query:
    post:
      description: "Performs a manual search against the specified assistant. To retrieve\
        \ recommendations for an assistant, use <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_GetRecommendations.html\"\
        >GetRecommendations</a>. "
      operationId: QueryAssistant
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAssistant_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryAssistantResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /knowledgeBases/{knowledgeBaseId}/templateUri:
    delete:
      description: Removes a URI template from a knowledge base.
      operationId: RemoveKnowledgeBaseTemplateUri
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveKnowledgeBaseTemplateUriResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: "Updates the template URI of a knowledge base. This is only supported\
        \ for knowledge bases of type EXTERNAL. Include a single variable in <code>${variable}</code>\
        \ format; this interpolated by Wisdom using ingested content. For example,\
        \ if you ingest a Salesforce article, it has an <code>Id</code> value, and\
        \ you can set the template URI to <code>https://myInstanceName.lightning.force.com/lightning/r/Knowledge__kav/*${Id}*/view</code>. "
      operationId: UpdateKnowledgeBaseTemplateUri
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKnowledgeBaseTemplateUri_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKnowledgeBaseTemplateUriResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /knowledgeBases/{knowledgeBaseId}/search:
    post:
      description: Searches for content in a specified knowledge base. Can be used
        to get a specific content resource by its name.
      operationId: SearchContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchContent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchContentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /assistants/{assistantId}/searchSessions:
    post:
      description: Searches for sessions.
      operationId: SearchSessions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Wisdom assistant. Can be either the ID
          or the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: assistantId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchContent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSessionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /knowledgeBases/{knowledgeBaseId}/upload:
    post:
      description: "Get a URL to upload content to a knowledge base. To upload content,\
        \ first make a PUT request to the returned URL with your file, making sure\
        \ to include the required headers. Then use <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_CreateContent.html\"\
        >CreateContent</a> to finalize the content creation process or <a href=\"\
        https://docs.aws.amazon.com/wisdom/latest/APIReference/API_UpdateContent.html\"\
        >UpdateContent</a> to modify an existing resource. You can only upload content\
        \ to a knowledge base of type CUSTOM."
      operationId: StartContentUpload
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the knowledge base. Can be either the ID or
          the ARN. URLs cannot contain the ARN.
        explode: false
        in: path
        name: knowledgeBaseId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartContentUpload_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartContentUploadResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes the specified tags from the specified resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
          type: string
        style: simple
      - description: The tag keys.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAssistantResponse:
      example:
        assistant:
          assistantArn: ""
          assistantId: ""
          serverSideEncryptionConfiguration:
            kmsKeyId: ""
          integrationConfiguration:
            topicIntegrationArn: ""
          name: ""
          description: ""
          type: ""
          status: ""
          tags: ""
      properties:
        assistant:
          $ref: '#/components/schemas/CreateAssistantResponse_assistant'
      type: object
    NonEmptyString:
      maxLength: 4096
      minLength: 1
      type: string
    TagValue:
      maxLength: 256
      minLength: 1
      type: string
    ConflictException: {}
    ValidationException: {}
    ServiceQuotaExceededException: {}
    AccessDeniedException: {}
    CreateAssistantAssociationResponse:
      example:
        assistantAssociation:
          assistantArn: ""
          assistantId: ""
          assistantAssociationArn: ""
          associationType: ""
          assistantAssociationId: ""
          associationData:
            knowledgeBaseAssociation:
              knowledgeBaseId: ""
              knowledgeBaseArn: ""
          tags: ""
      properties:
        assistantAssociation:
          $ref: '#/components/schemas/CreateAssistantAssociationResponse_assistantAssociation'
      type: object
    Uuid:
      pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      type: string
    ResourceNotFoundException: {}
    CreateContentResponse:
      example:
        content:
          contentArn: ""
          metadata: ""
          linkOutUri: ""
          contentId: ""
          title: ""
          url: ""
          tags: ""
          revisionId: ""
          name: ""
          urlExpiry: ""
          knowledgeBaseId: ""
          knowledgeBaseArn: ""
          contentType: ""
          status: ""
      properties:
        content:
          $ref: '#/components/schemas/CreateContentResponse_content'
      type: object
    CreateKnowledgeBaseResponse:
      example:
        knowledgeBase:
          lastContentModificationTime: ""
          renderingConfiguration:
            templateUri: ""
          serverSideEncryptionConfiguration:
            kmsKeyId: ""
          sourceConfiguration:
            appIntegrations:
              appIntegrationArn: ""
              objectFields: ""
          name: ""
          description: ""
          knowledgeBaseId: ""
          knowledgeBaseArn: ""
          knowledgeBaseType: ""
          status: ""
          tags: ""
      properties:
        knowledgeBase:
          $ref: '#/components/schemas/CreateKnowledgeBaseResponse_knowledgeBase'
      type: object
    Uri:
      maxLength: 4096
      minLength: 1
      type: string
    AppIntegrationsConfiguration:
      description: Configuration information for Amazon AppIntegrations to automatically
        ingest content.
      properties:
        appIntegrationArn:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          - description: "<p>The Amazon Resource Name (ARN) of the AppIntegrations\
              \ DataIntegration to use for ingesting content.</p> <ul> <li> <p> For\
              \ <a href=\"https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm\"\
              > Salesforce</a>, your AppIntegrations DataIntegration must have an\
              \ ObjectConfiguration if objectFields is not provided, including at\
              \ least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>,\
              \ <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code>\
              \ as source fields. </p> </li> <li> <p> For <a href=\"https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api\"\
              > ServiceNow</a>, your AppIntegrations DataIntegration must have an\
              \ ObjectConfiguration if objectFields is not provided, including at\
              \ least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>,\
              \ <code>workflow_state</code>, and <code>active</code> as source fields.\
              \ </p> </li> <li> <p> For <a href=\"https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/\"\
              > Zendesk</a>, your AppIntegrations DataIntegration must have an ObjectConfiguration\
              \ if <code>objectFields</code> is not provided, including at least <code>id</code>,\
              \ <code>title</code>, <code>updated_at</code>, and <code>draft</code>\
              \ as source fields. </p> </li> <li> <p> For <a href=\"https://learn.microsoft.com/en-us/sharepoint/dev/sp-add-ins/sharepoint-net-server-csom-jsom-and-rest-api-index\"\
              > SharePoint</a>, your AppIntegrations DataIntegration must have a FileConfiguration,\
              \ including only file extensions that are among <code>docx</code>, <code>pdf</code>,\
              \ <code>html</code>, <code>htm</code>, and <code>txt</code>. </p> </li>\
              \ </ul>"
        objectFields:
          allOf:
          - $ref: '#/components/schemas/ObjectFieldsList'
          - description: "<p>The fields from the source that are made available to\
              \ your agents in Wisdom. Optional if ObjectConfiguration is included\
              \ in the provided DataIntegration. </p> <ul> <li> <p> For <a href=\"\
              https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm\"\
              > Salesforce</a>, you must include at least <code>Id</code>, <code>ArticleNumber</code>,\
              \ <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>,\
              \ and <code>IsDeleted</code>. </p> </li> <li> <p>For <a href=\"https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api\"\
              > ServiceNow</a>, you must include at least <code>number</code>, <code>short_description</code>,\
              \ <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code>.\
              \ </p> </li> <li> <p>For <a href=\"https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/\"\
              > Zendesk</a>, you must include at least <code>id</code>, <code>title</code>,\
              \ <code>updated_at</code>, and <code>draft</code>. </p> </li> </ul>\
              \ <p>Make sure to include additional fields. These fields are indexed\
              \ and used to source recommendations. </p>"
      required:
      - appIntegrationArn
      type: object
    CreateSessionResponse:
      example:
        session:
          integrationConfiguration:
            topicIntegrationArn: ""
          name: ""
          description: ""
          sessionArn: ""
          sessionId: ""
          tags: ""
      properties:
        session:
          $ref: '#/components/schemas/CreateSessionResponse_session'
      type: object
    DeleteAssistantResponse:
      properties: {}
      type: object
    DeleteAssistantAssociationResponse:
      properties: {}
      type: object
    DeleteContentResponse:
      properties: {}
      type: object
    DeleteKnowledgeBaseResponse:
      properties: {}
      type: object
    GetAssistantResponse:
      example:
        assistant:
          assistantArn: ""
          assistantId: ""
          serverSideEncryptionConfiguration:
            kmsKeyId: ""
          integrationConfiguration:
            topicIntegrationArn: ""
          name: ""
          description: ""
          type: ""
          status: ""
          tags: ""
      properties:
        assistant:
          $ref: '#/components/schemas/CreateAssistantResponse_assistant'
      type: object
    GetAssistantAssociationResponse:
      example:
        assistantAssociation:
          assistantArn: ""
          assistantId: ""
          assistantAssociationArn: ""
          associationType: ""
          assistantAssociationId: ""
          associationData:
            knowledgeBaseAssociation:
              knowledgeBaseId: ""
              knowledgeBaseArn: ""
          tags: ""
      properties:
        assistantAssociation:
          $ref: '#/components/schemas/CreateAssistantAssociationResponse_assistantAssociation'
      type: object
    GetContentResponse:
      example:
        content:
          contentArn: ""
          metadata: ""
          linkOutUri: ""
          contentId: ""
          title: ""
          url: ""
          tags: ""
          revisionId: ""
          name: ""
          urlExpiry: ""
          knowledgeBaseId: ""
          knowledgeBaseArn: ""
          contentType: ""
          status: ""
      properties:
        content:
          $ref: '#/components/schemas/CreateContentResponse_content'
      type: object
    GetContentSummaryResponse:
      example:
        contentSummary:
          contentArn: ""
          revisionId: ""
          metadata: ""
          contentId: ""
          name: ""
          knowledgeBaseId: ""
          knowledgeBaseArn: ""
          title: ""
          contentType: ""
          status: ""
          tags: ""
      properties:
        contentSummary:
          $ref: '#/components/schemas/GetContentSummaryResponse_contentSummary'
      type: object
    GetKnowledgeBaseResponse:
      example:
        knowledgeBase:
          lastContentModificationTime: ""
          renderingConfiguration:
            templateUri: ""
          serverSideEncryptionConfiguration:
            kmsKeyId: ""
          sourceConfiguration:
            appIntegrations:
              appIntegrationArn: ""
              objectFields: ""
          name: ""
          description: ""
          knowledgeBaseId: ""
          knowledgeBaseArn: ""
          knowledgeBaseType: ""
          status: ""
          tags: ""
      properties:
        knowledgeBase:
          $ref: '#/components/schemas/CreateKnowledgeBaseResponse_knowledgeBase'
      type: object
    GetRecommendationsResponse:
      example:
        triggers: ""
        recommendations: ""
      properties:
        recommendations:
          allOf:
          - $ref: '#/components/schemas/RecommendationList'
          - description: The recommendations.
        triggers:
          allOf:
          - $ref: '#/components/schemas/RecommendationTriggerList'
          - description: The triggers corresponding to recommendations.
      required:
      - recommendations
      type: object
    GetSessionResponse:
      example:
        session:
          integrationConfiguration:
            topicIntegrationArn: ""
          name: ""
          description: ""
          sessionArn: ""
          sessionId: ""
          tags: ""
      properties:
        session:
          $ref: '#/components/schemas/CreateSessionResponse_session'
      type: object
    ListAssistantAssociationsResponse:
      example:
        assistantAssociationSummaries: ""
        nextToken: ""
      properties:
        assistantAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/AssistantAssociationSummaryList'
          - description: Summary information about assistant associations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
      required:
      - assistantAssociationSummaries
      type: object
    ListAssistantsResponse:
      example:
        assistantSummaries: ""
        nextToken: ""
      properties:
        assistantSummaries:
          allOf:
          - $ref: '#/components/schemas/AssistantList'
          - description: Information about the assistants.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
      required:
      - assistantSummaries
      type: object
    ListContentsResponse:
      example:
        nextToken: ""
        contentSummaries: ""
      properties:
        contentSummaries:
          allOf:
          - $ref: '#/components/schemas/ContentSummaryList'
          - description: Information about the content.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
      required:
      - contentSummaries
      type: object
    ListKnowledgeBasesResponse:
      example:
        nextToken: ""
        knowledgeBaseSummaries: ""
      properties:
        knowledgeBaseSummaries:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseList'
          - description: Information about the knowledge bases.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
      required:
      - knowledgeBaseSummaries
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      type: object
    NotifyRecommendationsReceivedResponse:
      example:
        recommendationIds: ""
        errors: ""
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/NotifyRecommendationsReceivedErrorList'
          - description: The identifiers of recommendations that are causing errors.
        recommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          - description: The identifiers of the recommendations.
      type: object
    String:
      type: string
    QueryAssistantResponse:
      example:
        nextToken: ""
        results: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
        results:
          allOf:
          - $ref: '#/components/schemas/QueryResultsList'
          - description: The results of the query.
      required:
      - results
      type: object
    RemoveKnowledgeBaseTemplateUriResponse:
      properties: {}
      type: object
    SearchContentResponse:
      example:
        nextToken: ""
        contentSummaries: ""
      properties:
        contentSummaries:
          allOf:
          - $ref: '#/components/schemas/ContentSummaryList'
          - description: Summary information about the content.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
      required:
      - contentSummaries
      type: object
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      type: array
    SearchSessionsResponse:
      example:
        nextToken: ""
        sessionSummaries: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
        sessionSummaries:
          allOf:
          - $ref: '#/components/schemas/SessionSummaries'
          - description: Summary information about the sessions.
      required:
      - sessionSummaries
      type: object
    StartContentUploadResponse:
      example:
        uploadId: ""
        headersToInclude: ""
        urlExpiry: ""
        url: ""
      properties:
        headersToInclude:
          allOf:
          - $ref: '#/components/schemas/Headers'
          - description: The headers to include in the upload.
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          - description: The identifier of the upload.
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL of the upload.
        urlExpiry:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_epoch_seconds'
          - description: The expiration time of the URL as an epoch timestamp.
      required:
      - headersToInclude
      - uploadId
      - url
      - urlExpiry
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TooManyTagsException: {}
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      type: string
    UpdateContentResponse:
      example:
        content:
          contentArn: ""
          metadata: ""
          linkOutUri: ""
          contentId: ""
          title: ""
          url: ""
          tags: ""
          revisionId: ""
          name: ""
          urlExpiry: ""
          knowledgeBaseId: ""
          knowledgeBaseArn: ""
          contentType: ""
          status: ""
      properties:
        content:
          $ref: '#/components/schemas/CreateContentResponse_content'
      type: object
    PreconditionFailedException: {}
    UpdateKnowledgeBaseTemplateUriResponse:
      example:
        knowledgeBase:
          lastContentModificationTime: ""
          renderingConfiguration:
            templateUri: ""
          serverSideEncryptionConfiguration:
            kmsKeyId: ""
          sourceConfiguration:
            appIntegrations:
              appIntegrationArn: ""
              objectFields: ""
          name: ""
          description: ""
          knowledgeBaseId: ""
          knowledgeBaseArn: ""
          knowledgeBaseType: ""
          status: ""
          tags: ""
      properties:
        knowledgeBase:
          $ref: '#/components/schemas/UpdateKnowledgeBaseTemplateUriResponse_knowledgeBase'
      type: object
    GenericArn:
      maxLength: 2048
      minLength: 1
      pattern: "^arn:[a-z-]+?:[a-z-]+?:[a-z0-9-]*?:([0-9]{12})?:[a-zA-Z0-9-:/]+$"
      type: string
    ObjectFieldsList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 100
      minItems: 1
      type: array
    Arn:
      pattern: "^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
      type: string
    AssistantAssociationOutputData:
      description: The data that is output as a result of the assistant association.
      properties:
        knowledgeBaseAssociation:
          $ref: '#/components/schemas/AssistantAssociationOutputData_knowledgeBaseAssociation'
      type: object
    AssociationType:
      enum:
      - KNOWLEDGE_BASE
      type: string
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    AssistantAssociationData:
      description: Information about the assistant association.
      properties:
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Wisdom assistant.
        assistantAssociationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the assistant association.
        assistantAssociationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the assistant association.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the Wisdom assistant.
        associationData:
          $ref: '#/components/schemas/AssistantAssociationData_associationData'
        associationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          - description: The type of association.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - assistantArn
      - assistantAssociationArn
      - assistantAssociationId
      - assistantId
      - associationData
      - associationType
      type: object
    AssistantAssociationInputData:
      description: The data that is input into Wisdom as a result of the assistant
        association.
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the knowledge base.
      type: object
    KnowledgeBaseAssociationData:
      description: Association information about the knowledge base.
      properties:
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the knowledge base.
      type: object
    AssistantAssociationSummary:
      description: Summary information about the assistant association.
      properties:
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Wisdom assistant.
        assistantAssociationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the assistant association.
        assistantAssociationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the assistant association.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the Wisdom assistant.
        associationData:
          $ref: '#/components/schemas/AssistantAssociationSummary_associationData'
        associationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          - description: The type of association.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - assistantArn
      - assistantAssociationArn
      - assistantAssociationId
      - assistantId
      - associationData
      - associationType
      type: object
    AssistantAssociationSummaryList:
      items:
        $ref: '#/components/schemas/AssistantAssociationSummary'
      type: array
    Description:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\s_.,-]+"
      type: string
    AssistantIntegrationConfiguration:
      description: The configuration information for the Wisdom assistant integration.
      properties:
        topicIntegrationArn:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          - description: The Amazon Resource Name (ARN) of the integrated Amazon SNS
              topic used for streaming chat messages.
      type: object
    Name:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\s_.,-]+"
      type: string
    ServerSideEncryptionConfiguration:
      description: The KMS key used for encryption.
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: "The KMS key. For information about valid ID values, see\
              \ <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id\"\
              >Key identifiers (KeyId)</a>."
      type: object
    AssistantStatus:
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - ACTIVE
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETED
      type: string
    AssistantType:
      enum:
      - AGENT
      type: string
    AssistantData:
      description: The assistant data.
      properties:
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Wisdom assistant.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the Wisdom assistant.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description.
        integrationConfiguration:
          $ref: '#/components/schemas/AssistantData_integrationConfiguration'
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name.
        serverSideEncryptionConfiguration:
          $ref: '#/components/schemas/AssistantData_serverSideEncryptionConfiguration'
        status:
          allOf:
          - $ref: '#/components/schemas/AssistantStatus'
          - description: The status of the assistant.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
        type:
          allOf:
          - $ref: '#/components/schemas/AssistantType'
          - description: The type of assistant.
      required:
      - assistantArn
      - assistantId
      - name
      - status
      - type
      type: object
    AssistantSummary:
      description: Summary information about the assistant.
      properties:
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Wisdom assistant.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the Wisdom assistant.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the assistant.
        integrationConfiguration:
          $ref: '#/components/schemas/AssistantData_integrationConfiguration'
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the assistant.
        serverSideEncryptionConfiguration:
          $ref: '#/components/schemas/AssistantData_serverSideEncryptionConfiguration'
        status:
          allOf:
          - $ref: '#/components/schemas/AssistantStatus'
          - description: The status of the assistant.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
        type:
          allOf:
          - $ref: '#/components/schemas/AssistantType'
          - description: The type of the assistant.
      required:
      - assistantArn
      - assistantId
      - name
      - status
      - type
      type: object
    AssistantList:
      items:
        $ref: '#/components/schemas/AssistantSummary'
      type: array
    Boolean:
      type: boolean
    ClientToken:
      maxLength: 4096
      minLength: 1
      type: string
    ContentType:
      pattern: ^(text/(plain|html))|(application/(pdf|vnd\.openxmlformats-officedocument\.wordprocessingml\.document))|(application/x\.wisdom-json;source=(salesforce|servicenow|zendesk))$
      type: string
    ContentMetadata:
      additionalProperties:
        $ref: '#/components/schemas/NonEmptyString'
      maxProperties: 10
      minProperties: 0
      type: object
    ContentStatus:
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - ACTIVE
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETED
      - UPDATE_FAILED
      type: string
    ContentTitle:
      maxLength: 255
      minLength: 1
      type: string
    Url:
      format: password
      maxLength: 4096
      minLength: 1
      type: string
    SyntheticTimestamp_epoch_seconds:
      format: date-time
      type: string
    ContentData:
      description: Information about the content.
      properties:
        contentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the content.
        contentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the content.
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: The media type of the content.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the knowledge base.
        linkOutUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: The URI of the content.
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          - description: "A key/value map to store attributes without affecting tagging\
              \ or recommendations. For example, when synchronizing data between an\
              \ external system and Wisdom, you can store an external version identifier\
              \ as metadata to utilize for determining drift."
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the content.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The identifier of the content revision.
        status:
          allOf:
          - $ref: '#/components/schemas/ContentStatus'
          - description: The status of the content.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
        title:
          allOf:
          - $ref: '#/components/schemas/ContentTitle'
          - description: The title of the content.
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL of the content.
        urlExpiry:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_epoch_seconds'
          - description: The expiration time of the URL as an epoch timestamp.
      required:
      - contentArn
      - contentId
      - contentType
      - knowledgeBaseArn
      - knowledgeBaseId
      - metadata
      - name
      - revisionId
      - status
      - title
      - url
      - urlExpiry
      type: object
    ContentReference:
      description: Reference information about the content.
      properties:
        contentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the content.
        contentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the content.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the knowledge base.
      type: object
    ContentSummary:
      description: Summary information about the content.
      properties:
        contentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the content.
        contentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the content.
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: The media type of the content.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the knowledge base.
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          - description: "A key/value map to store attributes without affecting tagging\
              \ or recommendations. For example, when synchronizing data between an\
              \ external system and Wisdom, you can store an external version identifier\
              \ as metadata to utilize for determining drift."
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the content.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The identifier of the revision of the content.
        status:
          allOf:
          - $ref: '#/components/schemas/ContentStatus'
          - description: The status of the content.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
        title:
          allOf:
          - $ref: '#/components/schemas/ContentTitle'
          - description: The title of the content.
      required:
      - contentArn
      - contentId
      - contentType
      - knowledgeBaseArn
      - knowledgeBaseId
      - metadata
      - name
      - revisionId
      - status
      - title
      type: object
    ContentSummaryList:
      items:
        $ref: '#/components/schemas/ContentSummary'
      type: array
    UuidOrArn:
      pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"
      type: string
    CreateAssistantAssociationRequest:
      example:
        clientToken: ""
        associationType: ""
        association:
          knowledgeBaseId: ""
        tags: ""
      properties:
        association:
          $ref: '#/components/schemas/CreateAssistantAssociationRequest_association'
        associationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          - description: The type of association.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If not provided, the Amazon\
              \ Web Services SDK populates this field. For more information about\
              \ idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
              >Making retries safe with idempotent APIs</a>."
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - association
      - associationType
      title: CreateAssistantAssociationRequest
      type: object
    CreateAssistantRequest:
      example:
        serverSideEncryptionConfiguration:
          kmsKeyId: ""
        clientToken: ""
        name: ""
        description: ""
        type: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If not provided, the Amazon\
              \ Web Services SDK populates this field. For more information about\
              \ idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
              >Making retries safe with idempotent APIs</a>."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the assistant.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the assistant.
        serverSideEncryptionConfiguration:
          $ref: '#/components/schemas/AssistantData_serverSideEncryptionConfiguration'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
        type:
          allOf:
          - $ref: '#/components/schemas/AssistantType'
          - description: The type of assistant.
      required:
      - name
      - type
      title: CreateAssistantRequest
      type: object
    UploadId:
      maxLength: 1200
      minLength: 1
      type: string
    CreateContentRequest:
      example:
        metadata: ""
        overrideLinkOutUri: ""
        uploadId: ""
        clientToken: ""
        name: ""
        title: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If not provided, the Amazon\
              \ Web Services SDK populates this field. For more information about\
              \ idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
              >Making retries safe with idempotent APIs</a>."
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          - description: "A key/value map to store attributes without affecting tagging\
              \ or recommendations. For example, when synchronizing data between an\
              \ external system and Wisdom, you can store an external version identifier\
              \ as metadata to utilize for determining drift."
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the content. Each piece of content in a knowledge
              base must have a unique name. You can retrieve a piece of content using
              only its knowledge base and its name with the <a href="https://docs.aws.amazon.com/wisdom/latest/APIReference/API_SearchContent.html">SearchContent</a>
              API.
        overrideLinkOutUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "The URI you want to use for the article. If the knowledge\
              \ base has a templateUri, setting this argument overrides it for this\
              \ piece of content."
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
        title:
          allOf:
          - $ref: '#/components/schemas/ContentTitle'
          - description: "The title of the content. If not set, the title is equal\
              \ to the name."
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          - description: A pointer to the uploaded asset. This value is returned by
              <a href="https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html">StartContentUpload</a>.
      required:
      - name
      - uploadId
      title: CreateContentRequest
      type: object
    KnowledgeBaseType:
      enum:
      - EXTERNAL
      - CUSTOM
      type: string
    RenderingConfiguration:
      description: Information about how to render the content.
      properties:
        templateUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "<p>A URI template containing exactly one variable in <code>${variableName}\
              \ </code>format. This can only be set for <code>EXTERNAL</code> knowledge\
              \ bases. For Salesforce, ServiceNow, and Zendesk, the variable must\
              \ be one of the following:</p> <ul> <li> <p>Salesforce: <code>Id</code>,\
              \ <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>,\
              \ <code>PublishStatus</code>, or <code>IsDeleted</code> </p> </li> <li>\
              \ <p>ServiceNow: <code>number</code>, <code>short_description</code>,\
              \ <code>sys_mod_count</code>, <code>workflow_state</code>, or <code>active</code>\
              \ </p> </li> <li> <p>Zendesk: <code>id</code>, <code>title</code>, <code>updated_at</code>,\
              \ or <code>draft</code> </p> </li> </ul> <p>The variable is replaced\
              \ with the actual value for a piece of content when calling <a href=\"\
              https://docs.aws.amazon.com/wisdom/latest/APIReference/API_GetContent.html\"\
              >GetContent</a>. </p>"
      type: object
    SourceConfiguration:
      description: Configuration information about the external data source.
      properties:
        appIntegrations:
          $ref: '#/components/schemas/CreateKnowledgeBase_request_sourceConfiguration_appIntegrations'
      type: object
    CreateKnowledgeBaseRequest:
      example:
        renderingConfiguration:
          templateUri: ""
        serverSideEncryptionConfiguration:
          kmsKeyId: ""
        sourceConfiguration:
          appIntegrations:
            appIntegrationArn: ""
            objectFields: ""
        clientToken: ""
        name: ""
        description: ""
        knowledgeBaseType: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If not provided, the Amazon\
              \ Web Services SDK populates this field. For more information about\
              \ idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
              >Making retries safe with idempotent APIs</a>."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description.
        knowledgeBaseType:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseType'
          - description: 'The type of knowledge base. Only CUSTOM knowledge bases
              allow you to upload your own content. EXTERNAL knowledge bases support
              integrations with third-party systems whose content is synchronized
              automatically. '
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the knowledge base.
        renderingConfiguration:
          $ref: '#/components/schemas/CreateKnowledgeBaseRequest_renderingConfiguration'
        serverSideEncryptionConfiguration:
          $ref: '#/components/schemas/AssistantData_serverSideEncryptionConfiguration'
        sourceConfiguration:
          $ref: '#/components/schemas/CreateKnowledgeBaseRequest_sourceConfiguration'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - knowledgeBaseType
      - name
      title: CreateKnowledgeBaseRequest
      type: object
    KnowledgeBaseData:
      description: Information about the knowledge base.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the knowledge base.
        knowledgeBaseType:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseType'
          - description: The type of knowledge base.
        lastContentModificationTime:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_epoch_seconds'
          - description: "An epoch timestamp indicating the most recent content modification\
              \ inside the knowledge base. If no content exists in a knowledge base,\
              \ this value is unset."
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the knowledge base.
        renderingConfiguration:
          $ref: '#/components/schemas/CreateKnowledgeBaseRequest_renderingConfiguration'
        serverSideEncryptionConfiguration:
          $ref: '#/components/schemas/AssistantData_serverSideEncryptionConfiguration'
        sourceConfiguration:
          $ref: '#/components/schemas/KnowledgeBaseData_sourceConfiguration'
        status:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseStatus'
          - description: The status of the knowledge base.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - knowledgeBaseArn
      - knowledgeBaseId
      - knowledgeBaseType
      - name
      - status
      type: object
    CreateSessionRequest:
      example:
        clientToken: ""
        name: ""
        description: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If not provided, the Amazon\
              \ Web Services SDK populates this field. For more information about\
              \ idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
              >Making retries safe with idempotent APIs</a>."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the session.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - name
      title: CreateSessionRequest
      type: object
    SessionData:
      description: Information about the session.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the session.
        integrationConfiguration:
          $ref: '#/components/schemas/SessionData_integrationConfiguration'
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the session.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - name
      - sessionArn
      - sessionId
      type: object
    DeleteAssistantAssociationRequest:
      properties: {}
      title: DeleteAssistantAssociationRequest
      type: object
    DeleteAssistantRequest:
      properties: {}
      title: DeleteAssistantRequest
      type: object
    DeleteContentRequest:
      properties: {}
      title: DeleteContentRequest
      type: object
    DeleteKnowledgeBaseRequest:
      properties: {}
      title: DeleteKnowledgeBaseRequest
      type: object
    DocumentText:
      description: The text of the document.
      properties:
        highlights:
          allOf:
          - $ref: '#/components/schemas/Highlights'
          - description: Highlights in the document text.
        text:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: Text in the document.
      type: object
    Document:
      description: The document.
      properties:
        contentReference:
          $ref: '#/components/schemas/Document_contentReference'
        excerpt:
          $ref: '#/components/schemas/Document_excerpt'
        title:
          $ref: '#/components/schemas/Document_title'
      required:
      - contentReference
      type: object
    Highlights:
      items:
        $ref: '#/components/schemas/Highlight'
      type: array
    SensitiveString:
      format: password
      type: string
    FilterField:
      enum:
      - NAME
      type: string
    FilterOperator:
      enum:
      - EQUALS
      type: string
    Filter:
      description: A search filter.
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/FilterField'
          - description: The field on which to filter.
        operator:
          allOf:
          - $ref: '#/components/schemas/FilterOperator'
          - description: The operator to use for comparing the field’s value with
              the provided value.
        value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The desired field value on which to filter.
      required:
      - field
      - operator
      - value
      type: object
    GetAssistantAssociationRequest:
      properties: {}
      title: GetAssistantAssociationRequest
      type: object
    GetAssistantRequest:
      properties: {}
      title: GetAssistantRequest
      type: object
    GetContentRequest:
      properties: {}
      title: GetContentRequest
      type: object
    GetContentSummaryRequest:
      properties: {}
      title: GetContentSummaryRequest
      type: object
    GetKnowledgeBaseRequest:
      properties: {}
      title: GetKnowledgeBaseRequest
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    WaitTimeSeconds:
      maximum: 20
      minimum: 0
      type: integer
    GetRecommendationsRequest:
      properties: {}
      title: GetRecommendationsRequest
      type: object
    RecommendationList:
      items:
        $ref: '#/components/schemas/RecommendationData'
      type: array
    RecommendationTriggerList:
      items:
        $ref: '#/components/schemas/RecommendationTrigger'
      type: array
    GetSessionRequest:
      properties: {}
      title: GetSessionRequest
      type: object
    Headers:
      additionalProperties:
        $ref: '#/components/schemas/NonEmptyString'
      type: object
    HighlightOffset:
      type: integer
    Highlight:
      description: Offset specification to describe highlighting of document excerpts
        for rendering search results and recommendations.
      properties:
        beginOffsetInclusive:
          allOf:
          - $ref: '#/components/schemas/HighlightOffset'
          - description: The offset for the start of the highlight.
        endOffsetExclusive:
          allOf:
          - $ref: '#/components/schemas/HighlightOffset'
          - description: The offset for the end of the highlight.
      type: object
    KnowledgeBaseStatus:
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - ACTIVE
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETED
      type: string
    KnowledgeBaseSummary:
      description: Summary information about the knowledge base.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the knowledge base.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the knowledge base.
        knowledgeBaseType:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseType'
          - description: The type of knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the knowledge base.
        renderingConfiguration:
          $ref: '#/components/schemas/CreateKnowledgeBaseRequest_renderingConfiguration'
        serverSideEncryptionConfiguration:
          $ref: '#/components/schemas/AssistantData_serverSideEncryptionConfiguration'
        sourceConfiguration:
          $ref: '#/components/schemas/KnowledgeBaseSummary_sourceConfiguration'
        status:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseStatus'
          - description: The status of the knowledge base summary.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - knowledgeBaseArn
      - knowledgeBaseId
      - knowledgeBaseType
      - name
      - status
      type: object
    KnowledgeBaseList:
      items:
        $ref: '#/components/schemas/KnowledgeBaseSummary'
      type: array
    NextToken:
      maxLength: 2048
      minLength: 1
      type: string
    ListAssistantAssociationsRequest:
      properties: {}
      title: ListAssistantAssociationsRequest
      type: object
    ListAssistantsRequest:
      properties: {}
      title: ListAssistantsRequest
      type: object
    ListContentsRequest:
      properties: {}
      title: ListContentsRequest
      type: object
    ListKnowledgeBasesRequest:
      properties: {}
      title: ListKnowledgeBasesRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    NotifyRecommendationsReceivedErrorMessage:
      type: string
    NotifyRecommendationsReceivedError:
      description: An error occurred when creating a recommendation.
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/NotifyRecommendationsReceivedErrorMessage'
          - description: A recommendation is causing an error.
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the recommendation that is in error.
      type: object
    NotifyRecommendationsReceivedErrorList:
      items:
        $ref: '#/components/schemas/NotifyRecommendationsReceivedError'
      type: array
    RecommendationIdList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    NotifyRecommendationsReceivedRequest:
      example:
        recommendationIds: ""
      properties:
        recommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          - description: The identifiers of the recommendations.
      required:
      - recommendationIds
      title: NotifyRecommendationsReceivedRequest
      type: object
    QueryText:
      format: password
      type: string
    QueryAssistantRequest:
      example:
        maxResults: ""
        nextToken: ""
        queryText: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return per page.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of results. Use the value returned
              in the previous response in the next request to retrieve the next set
              of results.
        queryText:
          allOf:
          - $ref: '#/components/schemas/QueryText'
          - description: The text to search for.
      required:
      - queryText
      title: QueryAssistantRequest
      type: object
    QueryResultsList:
      items:
        $ref: '#/components/schemas/ResultData'
      type: array
    QueryRecommendationTriggerData:
      description: Data associated with the QUERY RecommendationTriggerType.
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/QueryText'
          - description: The text associated with the recommendation trigger.
      type: object
    ResultData:
      description: Information about the result.
      properties:
        document:
          $ref: '#/components/schemas/ResultData_document'
        relevanceScore:
          allOf:
          - $ref: '#/components/schemas/RelevanceScore'
          - description: The relevance score of the results.
        resultId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the result data.
      required:
      - document
      - resultId
      type: object
    RelevanceLevel:
      enum:
      - HIGH
      - MEDIUM
      - LOW
      type: string
    RelevanceScore:
      format: double
      minimum: 0
      type: number
    RecommendationType:
      enum:
      - KNOWLEDGE_CONTENT
      type: string
    RecommendationData:
      description: Information about the recommendation.
      properties:
        document:
          $ref: '#/components/schemas/RecommendationData_document'
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the recommendation.
        relevanceLevel:
          allOf:
          - $ref: '#/components/schemas/RelevanceLevel'
          - description: The relevance level of the recommendation.
        relevanceScore:
          allOf:
          - $ref: '#/components/schemas/RelevanceScore'
          - description: The relevance score of the recommendation.
        type:
          allOf:
          - $ref: '#/components/schemas/RecommendationType'
          - description: The type of recommendation.
      required:
      - document
      - recommendationId
      type: object
    RecommendationSourceType:
      enum:
      - ISSUE_DETECTION
      - RULE_EVALUATION
      - OTHER
      type: string
    RecommendationTriggerData:
      description: A union type containing information related to the trigger.
      properties:
        query:
          $ref: '#/components/schemas/RecommendationTriggerData_query'
      type: object
    RecommendationTriggerType:
      enum:
      - QUERY
      type: string
    RecommendationTrigger:
      description: A recommendation trigger provides context on the event that produced
        the referenced recommendations. Recommendations are only referenced in <code>recommendationIds</code>
        by a single RecommendationTrigger.
      properties:
        data:
          $ref: '#/components/schemas/RecommendationTrigger_data'
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the recommendation trigger.
        recommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          - description: The identifiers of the recommendations.
        source:
          allOf:
          - $ref: '#/components/schemas/RecommendationSourceType'
          - description: "<p>The source of the recommendation trigger.</p> <ul> <li>\
              \ <p>ISSUE_DETECTION: The corresponding recommendations were triggered\
              \ by a Contact Lens issue.</p> </li> <li> <p>RULE_EVALUATION: The corresponding\
              \ recommendations were triggered by a Contact Lens rule.</p> </li> </ul>"
        type:
          allOf:
          - $ref: '#/components/schemas/RecommendationTriggerType'
          - description: The type of recommendation trigger.
      required:
      - data
      - id
      - recommendationIds
      - source
      - type
      type: object
    RemoveKnowledgeBaseTemplateUriRequest:
      properties: {}
      title: RemoveKnowledgeBaseTemplateUriRequest
      type: object
    SearchExpression:
      description: The search expression.
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: The search expression filters.
      required:
      - filters
      type: object
    SearchContentRequest:
      example:
        searchExpression:
          filters: ""
      properties:
        searchExpression:
          $ref: '#/components/schemas/SearchContentRequest_searchExpression'
      required:
      - searchExpression
      title: SearchContentRequest
      type: object
    SearchSessionsRequest:
      properties:
        searchExpression:
          $ref: '#/components/schemas/SearchContentRequest_searchExpression'
      required:
      - searchExpression
      title: SearchSessionsRequest
      type: object
    SessionSummaries:
      items:
        $ref: '#/components/schemas/SessionSummary'
      type: array
    SessionIntegrationConfiguration:
      description: The configuration information for the session integration.
      properties:
        topicIntegrationArn:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          - description: The Amazon Resource Name (ARN) of the integrated Amazon SNS
              topic used for streaming chat messages.
      type: object
    SessionSummary:
      description: Summary information about the session.
      properties:
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Wisdom assistant.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the Wisdom assistant.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the session.
      required:
      - assistantArn
      - assistantId
      - sessionArn
      - sessionId
      type: object
    StartContentUploadRequest:
      example:
        contentType: ""
      properties:
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: The type of content to upload.
      required:
      - contentType
      title: StartContentUploadRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateContentRequest:
      example:
        revisionId: ""
        metadata: ""
        removeOverrideLinkOutUri: ""
        overrideLinkOutUri: ""
        uploadId: ""
        title: ""
      properties:
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          - description: "A key/value map to store attributes without affecting tagging\
              \ or recommendations. For example, when synchronizing data between an\
              \ external system and Wisdom, you can store an external version identifier\
              \ as metadata to utilize for determining drift."
        overrideLinkOutUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "The URI for the article. If the knowledge base has a templateUri,\
              \ setting this argument overrides it for this piece of content. To remove\
              \ an existing <code>overrideLinkOurUri</code>, exclude this argument\
              \ and set <code>removeOverrideLinkOutUri</code> to true."
        removeOverrideLinkOutUri:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Unset the existing <code>overrideLinkOutUri</code> if it
              exists.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: "The <code>revisionId</code> of the content resource to update,\
              \ taken from an earlier call to <code>GetContent</code>, <code>GetContentSummary</code>,\
              \ <code>SearchContent</code>, or <code>ListContents</code>. If included,\
              \ this argument acts as an optimistic lock to ensure content was not\
              \ modified since it was last read. If it has been modified, this API\
              \ throws a <code>PreconditionFailedException</code>."
        title:
          allOf:
          - $ref: '#/components/schemas/ContentTitle'
          - description: The title of the content.
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          - description: 'A pointer to the uploaded asset. This value is returned
              by <a href="https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html">StartContentUpload</a>. '
      title: UpdateContentRequest
      type: object
    UpdateKnowledgeBaseTemplateUriRequest:
      example:
        templateUri: ""
      properties:
        templateUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: The template URI to update.
      required:
      - templateUri
      title: UpdateKnowledgeBaseTemplateUriRequest
      type: object
    CreateAssistant_request_serverSideEncryptionConfiguration:
      description: The KMS key used for encryption.
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: "The KMS key. For information about valid ID values, see\
              \ <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id\"\
              >Key identifiers (KeyId)</a>."
      type: object
    CreateAssistant_request:
      properties:
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If not provided, the Amazon Web Services\
            \ SDK populates this field. For more information about idempotency, see\
            \ <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
            >Making retries safe with idempotent APIs</a>."
          maxLength: 4096
          minLength: 1
          type: string
        description:
          description: The description of the assistant.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\s_.,-]+"
          type: string
        name:
          description: The name of the assistant.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\s_.,-]+"
          type: string
        serverSideEncryptionConfiguration:
          $ref: '#/components/schemas/CreateAssistant_request_serverSideEncryptionConfiguration'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          type: object
        type:
          description: The type of assistant.
          enum:
          - AGENT
          type: string
      required:
      - name
      - type
      type: object
    CreateAssistantAssociation_request_association:
      description: The data that is input into Wisdom as a result of the assistant
        association.
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier of the knowledge base.
      type: object
    CreateAssistantAssociation_request:
      properties:
        association:
          $ref: '#/components/schemas/CreateAssistantAssociation_request_association'
        associationType:
          description: The type of association.
          enum:
          - KNOWLEDGE_BASE
          type: string
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If not provided, the Amazon Web Services\
            \ SDK populates this field. For more information about idempotency, see\
            \ <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
            >Making retries safe with idempotent APIs</a>."
          maxLength: 4096
          minLength: 1
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          type: object
      required:
      - association
      - associationType
      type: object
    CreateContent_request:
      properties:
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If not provided, the Amazon Web Services\
            \ SDK populates this field. For more information about idempotency, see\
            \ <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
            >Making retries safe with idempotent APIs</a>."
          maxLength: 4096
          minLength: 1
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/NonEmptyString'
          description: "A key/value map to store attributes without affecting tagging\
            \ or recommendations. For example, when synchronizing data between an\
            \ external system and Wisdom, you can store an external version identifier\
            \ as metadata to utilize for determining drift."
          maxProperties: 10
          minProperties: 0
          type: object
        name:
          description: The name of the content. Each piece of content in a knowledge
            base must have a unique name. You can retrieve a piece of content using
            only its knowledge base and its name with the <a href="https://docs.aws.amazon.com/wisdom/latest/APIReference/API_SearchContent.html">SearchContent</a>
            API.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\s_.,-]+"
          type: string
        overrideLinkOutUri:
          description: "The URI you want to use for the article. If the knowledge\
            \ base has a templateUri, setting this argument overrides it for this\
            \ piece of content."
          maxLength: 4096
          minLength: 1
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          type: object
        title:
          description: "The title of the content. If not set, the title is equal to\
            \ the name."
          maxLength: 255
          minLength: 1
          type: string
        uploadId:
          description: A pointer to the uploaded asset. This value is returned by
            <a href="https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html">StartContentUpload</a>.
          maxLength: 1200
          minLength: 1
          type: string
      required:
      - name
      - uploadId
      type: object
    CreateKnowledgeBase_request_renderingConfiguration:
      description: Information about how to render the content.
      properties:
        templateUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "<p>A URI template containing exactly one variable in <code>${variableName}\
              \ </code>format. This can only be set for <code>EXTERNAL</code> knowledge\
              \ bases. For Salesforce, ServiceNow, and Zendesk, the variable must\
              \ be one of the following:</p> <ul> <li> <p>Salesforce: <code>Id</code>,\
              \ <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>,\
              \ <code>PublishStatus</code>, or <code>IsDeleted</code> </p> </li> <li>\
              \ <p>ServiceNow: <code>number</code>, <code>short_description</code>,\
              \ <code>sys_mod_count</code>, <code>workflow_state</code>, or <code>active</code>\
              \ </p> </li> <li> <p>Zendesk: <code>id</code>, <code>title</code>, <code>updated_at</code>,\
              \ or <code>draft</code> </p> </li> </ul> <p>The variable is replaced\
              \ with the actual value for a piece of content when calling <a href=\"\
              https://docs.aws.amazon.com/wisdom/latest/APIReference/API_GetContent.html\"\
              >GetContent</a>. </p>"
      type: object
    CreateKnowledgeBase_request_sourceConfiguration_appIntegrations:
      allOf:
      - $ref: '#/components/schemas/AppIntegrationsConfiguration'
      - description: Configuration information for Amazon AppIntegrations to automatically
          ingest content.
      example:
        appIntegrationArn: ""
        objectFields: ""
    CreateKnowledgeBase_request_sourceConfiguration:
      description: Configuration information about the external data source.
      properties:
        appIntegrations:
          $ref: '#/components/schemas/CreateKnowledgeBase_request_sourceConfiguration_appIntegrations'
      type: object
    CreateKnowledgeBase_request:
      properties:
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If not provided, the Amazon Web Services\
            \ SDK populates this field. For more information about idempotency, see\
            \ <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
            >Making retries safe with idempotent APIs</a>."
          maxLength: 4096
          minLength: 1
          type: string
        description:
          description: The description.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\s_.,-]+"
          type: string
        knowledgeBaseType:
          description: 'The type of knowledge base. Only CUSTOM knowledge bases allow
            you to upload your own content. EXTERNAL knowledge bases support integrations
            with third-party systems whose content is synchronized automatically. '
          enum:
          - EXTERNAL
          - CUSTOM
          type: string
        name:
          description: The name of the knowledge base.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\s_.,-]+"
          type: string
        renderingConfiguration:
          $ref: '#/components/schemas/CreateKnowledgeBase_request_renderingConfiguration'
        serverSideEncryptionConfiguration:
          $ref: '#/components/schemas/CreateAssistant_request_serverSideEncryptionConfiguration'
        sourceConfiguration:
          $ref: '#/components/schemas/CreateKnowledgeBase_request_sourceConfiguration'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          type: object
      required:
      - knowledgeBaseType
      - name
      type: object
    CreateSession_request:
      properties:
        clientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request. If not provided, the Amazon Web Services\
            \ SDK populates this field. For more information about idempotency, see\
            \ <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
            >Making retries safe with idempotent APIs</a>."
          maxLength: 4096
          minLength: 1
          type: string
        description:
          description: The description.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\s_.,-]+"
          type: string
        name:
          description: The name of the session.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\s_.,-]+"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          type: object
      required:
      - name
      type: object
    UpdateContent_request:
      properties:
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/NonEmptyString'
          description: "A key/value map to store attributes without affecting tagging\
            \ or recommendations. For example, when synchronizing data between an\
            \ external system and Wisdom, you can store an external version identifier\
            \ as metadata to utilize for determining drift."
          maxProperties: 10
          minProperties: 0
          type: object
        overrideLinkOutUri:
          description: "The URI for the article. If the knowledge base has a templateUri,\
            \ setting this argument overrides it for this piece of content. To remove\
            \ an existing <code>overrideLinkOurUri</code>, exclude this argument and\
            \ set <code>removeOverrideLinkOutUri</code> to true."
          maxLength: 4096
          minLength: 1
          type: string
        removeOverrideLinkOutUri:
          description: Unset the existing <code>overrideLinkOutUri</code> if it exists.
          type: boolean
        revisionId:
          description: "The <code>revisionId</code> of the content resource to update,\
            \ taken from an earlier call to <code>GetContent</code>, <code>GetContentSummary</code>,\
            \ <code>SearchContent</code>, or <code>ListContents</code>. If included,\
            \ this argument acts as an optimistic lock to ensure content was not modified\
            \ since it was last read. If it has been modified, this API throws a <code>PreconditionFailedException</code>."
          maxLength: 4096
          minLength: 1
          type: string
        title:
          description: The title of the content.
          maxLength: 255
          minLength: 1
          type: string
        uploadId:
          description: 'A pointer to the uploaded asset. This value is returned by
            <a href="https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html">StartContentUpload</a>. '
          maxLength: 1200
          minLength: 1
          type: string
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          type: object
      required:
      - tags
      type: object
    NotifyRecommendationsReceived_request:
      properties:
        recommendationIds:
          description: The identifiers of the recommendations.
          items:
            $ref: '#/components/schemas/String'
          type: array
      required:
      - recommendationIds
      type: object
    QueryAssistant_request:
      properties:
        maxResults:
          description: The maximum number of results to return per page.
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
          maxLength: 2048
          minLength: 1
          type: string
        queryText:
          description: The text to search for.
          format: password
          type: string
      required:
      - queryText
      type: object
    UpdateKnowledgeBaseTemplateUri_request:
      properties:
        templateUri:
          description: The template URI to update.
          maxLength: 4096
          minLength: 1
          type: string
      required:
      - templateUri
      type: object
    SearchContent_request_searchExpression:
      description: The search expression.
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: The search expression filters.
      type: object
    SearchContent_request:
      properties:
        searchExpression:
          $ref: '#/components/schemas/SearchContent_request_searchExpression'
      required:
      - searchExpression
      type: object
    StartContentUpload_request:
      properties:
        contentType:
          description: The type of content to upload.
          pattern: ^(text/(plain|html))|(application/(pdf|vnd\.openxmlformats-officedocument\.wordprocessingml\.document))|(application/x\.wisdom-json;source=(salesforce|servicenow|zendesk))$
          type: string
      required:
      - contentType
      type: object
    CreateAssistantResponse_assistant:
      allOf:
      - $ref: '#/components/schemas/AssistantData'
      - description: Information about the assistant.
      example:
        assistantArn: ""
        assistantId: ""
        serverSideEncryptionConfiguration:
          kmsKeyId: ""
        integrationConfiguration:
          topicIntegrationArn: ""
        name: ""
        description: ""
        type: ""
        status: ""
        tags: ""
    CreateAssistantAssociationResponse_assistantAssociation:
      allOf:
      - $ref: '#/components/schemas/AssistantAssociationData'
      - description: The assistant association.
      example:
        assistantArn: ""
        assistantId: ""
        assistantAssociationArn: ""
        associationType: ""
        assistantAssociationId: ""
        associationData:
          knowledgeBaseAssociation:
            knowledgeBaseId: ""
            knowledgeBaseArn: ""
        tags: ""
    CreateContentResponse_content:
      allOf:
      - $ref: '#/components/schemas/ContentData'
      - description: The content.
      example:
        contentArn: ""
        metadata: ""
        linkOutUri: ""
        contentId: ""
        title: ""
        url: ""
        tags: ""
        revisionId: ""
        name: ""
        urlExpiry: ""
        knowledgeBaseId: ""
        knowledgeBaseArn: ""
        contentType: ""
        status: ""
    CreateKnowledgeBaseResponse_knowledgeBase:
      allOf:
      - $ref: '#/components/schemas/KnowledgeBaseData'
      - description: The knowledge base.
      example:
        lastContentModificationTime: ""
        renderingConfiguration:
          templateUri: ""
        serverSideEncryptionConfiguration:
          kmsKeyId: ""
        sourceConfiguration:
          appIntegrations:
            appIntegrationArn: ""
            objectFields: ""
        name: ""
        description: ""
        knowledgeBaseId: ""
        knowledgeBaseArn: ""
        knowledgeBaseType: ""
        status: ""
        tags: ""
    CreateSessionResponse_session:
      allOf:
      - $ref: '#/components/schemas/SessionData'
      - description: The session.
      example:
        integrationConfiguration:
          topicIntegrationArn: ""
        name: ""
        description: ""
        sessionArn: ""
        sessionId: ""
        tags: ""
    GetContentSummaryResponse_contentSummary:
      allOf:
      - $ref: '#/components/schemas/ContentSummary'
      - description: The content summary.
      example:
        contentArn: ""
        revisionId: ""
        metadata: ""
        contentId: ""
        name: ""
        knowledgeBaseId: ""
        knowledgeBaseArn: ""
        title: ""
        contentType: ""
        status: ""
        tags: ""
    UpdateKnowledgeBaseTemplateUriResponse_knowledgeBase:
      allOf:
      - $ref: '#/components/schemas/KnowledgeBaseData'
      - description: The knowledge base to update.
      example:
        lastContentModificationTime: ""
        renderingConfiguration:
          templateUri: ""
        serverSideEncryptionConfiguration:
          kmsKeyId: ""
        sourceConfiguration:
          appIntegrations:
            appIntegrationArn: ""
            objectFields: ""
        name: ""
        description: ""
        knowledgeBaseId: ""
        knowledgeBaseArn: ""
        knowledgeBaseType: ""
        status: ""
        tags: ""
    AssistantAssociationOutputData_knowledgeBaseAssociation:
      allOf:
      - $ref: '#/components/schemas/KnowledgeBaseAssociationData'
      - description: The knowledge base where output data is sent.
      example:
        knowledgeBaseId: ""
        knowledgeBaseArn: ""
    AssistantAssociationData_associationData:
      allOf:
      - $ref: '#/components/schemas/AssistantAssociationOutputData'
      - description: "A union type that currently has a single argument, the knowledge\
          \ base ID."
      example:
        knowledgeBaseAssociation:
          knowledgeBaseId: ""
          knowledgeBaseArn: ""
    AssistantAssociationSummary_associationData:
      allOf:
      - $ref: '#/components/schemas/AssistantAssociationOutputData'
      - description: The association data.
    AssistantData_integrationConfiguration:
      allOf:
      - $ref: '#/components/schemas/AssistantIntegrationConfiguration'
      - description: The configuration information for the Wisdom assistant integration.
      example:
        topicIntegrationArn: ""
    AssistantData_serverSideEncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
      - description: The KMS key used for encryption.
      example:
        kmsKeyId: ""
    CreateAssistantAssociationRequest_association:
      allOf:
      - $ref: '#/components/schemas/AssistantAssociationInputData'
      - description: The identifier of the associated resource.
      example:
        knowledgeBaseId: ""
    CreateKnowledgeBaseRequest_renderingConfiguration:
      allOf:
      - $ref: '#/components/schemas/RenderingConfiguration'
      - description: Information about how to render the content.
      example:
        templateUri: ""
    CreateKnowledgeBaseRequest_sourceConfiguration:
      allOf:
      - $ref: '#/components/schemas/SourceConfiguration'
      - description: The source of the knowledge base content. Only set this argument
          for EXTERNAL knowledge bases.
      example:
        appIntegrations:
          appIntegrationArn: ""
          objectFields: ""
    KnowledgeBaseData_sourceConfiguration:
      allOf:
      - $ref: '#/components/schemas/SourceConfiguration'
      - description: Source configuration information about the knowledge base.
      example:
        appIntegrations:
          appIntegrationArn: ""
          objectFields: ""
    SessionData_integrationConfiguration:
      allOf:
      - $ref: '#/components/schemas/SessionIntegrationConfiguration'
      - description: The configuration information for the session integration.
      example:
        topicIntegrationArn: ""
    Document_contentReference:
      allOf:
      - $ref: '#/components/schemas/ContentReference'
      - description: A reference to the content resource.
    Document_excerpt:
      allOf:
      - $ref: '#/components/schemas/DocumentText'
      - description: The excerpt from the document.
    Document_title:
      allOf:
      - $ref: '#/components/schemas/DocumentText'
      - description: The title of the document.
    KnowledgeBaseSummary_sourceConfiguration:
      allOf:
      - $ref: '#/components/schemas/SourceConfiguration'
      - description: Configuration information about the external data source.
    ResultData_document:
      allOf:
      - $ref: '#/components/schemas/Document'
      - description: The document.
    RecommendationData_document:
      allOf:
      - $ref: '#/components/schemas/Document'
      - description: The recommended document.
    RecommendationTriggerData_query:
      allOf:
      - $ref: '#/components/schemas/QueryRecommendationTriggerData'
      - description: Data associated with the QUERY RecommendationTriggerType.
    RecommendationTrigger_data:
      allOf:
      - $ref: '#/components/schemas/RecommendationTriggerData'
      - description: A union type containing information related to the trigger.
    SearchContentRequest_searchExpression:
      allOf:
      - $ref: '#/components/schemas/SearchExpression'
      - description: The search expression to filter results.
      example:
        filters: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

