/*
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateAssistantRequestServerSideEncryptionConfiguration;
import org.openapitools.client.model.CreateKnowledgeBaseRequestRenderingConfiguration;
import org.openapitools.client.model.CreateKnowledgeBaseRequestSourceConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateKnowledgeBaseRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:30.807270-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateKnowledgeBaseRequest {
  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "clientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * The type of knowledge base. Only CUSTOM knowledge bases allow you to upload your own content. EXTERNAL knowledge bases support integrations with third-party systems whose content is synchronized automatically. 
   */
  @JsonAdapter(KnowledgeBaseTypeEnum.Adapter.class)
  public enum KnowledgeBaseTypeEnum {
    EXTERNAL("EXTERNAL"),
    
    CUSTOM("CUSTOM");

    private String value;

    KnowledgeBaseTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KnowledgeBaseTypeEnum fromValue(String value) {
      for (KnowledgeBaseTypeEnum b : KnowledgeBaseTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<KnowledgeBaseTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KnowledgeBaseTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KnowledgeBaseTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return KnowledgeBaseTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      KnowledgeBaseTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_KNOWLEDGE_BASE_TYPE = "knowledgeBaseType";
  @SerializedName(SERIALIZED_NAME_KNOWLEDGE_BASE_TYPE)
  private KnowledgeBaseTypeEnum knowledgeBaseType;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RENDERING_CONFIGURATION = "renderingConfiguration";
  @SerializedName(SERIALIZED_NAME_RENDERING_CONFIGURATION)
  private CreateKnowledgeBaseRequestRenderingConfiguration renderingConfiguration;

  public static final String SERIALIZED_NAME_SERVER_SIDE_ENCRYPTION_CONFIGURATION = "serverSideEncryptionConfiguration";
  @SerializedName(SERIALIZED_NAME_SERVER_SIDE_ENCRYPTION_CONFIGURATION)
  private CreateAssistantRequestServerSideEncryptionConfiguration serverSideEncryptionConfiguration;

  public static final String SERIALIZED_NAME_SOURCE_CONFIGURATION = "sourceConfiguration";
  @SerializedName(SERIALIZED_NAME_SOURCE_CONFIGURATION)
  private CreateKnowledgeBaseRequestSourceConfiguration sourceConfiguration;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public CreateKnowledgeBaseRequest() {
  }

  public CreateKnowledgeBaseRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see &lt;a href&#x3D;\&quot;https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\&quot;&gt;Making retries safe with idempotent APIs&lt;/a&gt;.
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public CreateKnowledgeBaseRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateKnowledgeBaseRequest knowledgeBaseType(KnowledgeBaseTypeEnum knowledgeBaseType) {
    this.knowledgeBaseType = knowledgeBaseType;
    return this;
  }

  /**
   * The type of knowledge base. Only CUSTOM knowledge bases allow you to upload your own content. EXTERNAL knowledge bases support integrations with third-party systems whose content is synchronized automatically. 
   * @return knowledgeBaseType
   */
  @javax.annotation.Nonnull
  public KnowledgeBaseTypeEnum getKnowledgeBaseType() {
    return knowledgeBaseType;
  }

  public void setKnowledgeBaseType(KnowledgeBaseTypeEnum knowledgeBaseType) {
    this.knowledgeBaseType = knowledgeBaseType;
  }


  public CreateKnowledgeBaseRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the knowledge base.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateKnowledgeBaseRequest renderingConfiguration(CreateKnowledgeBaseRequestRenderingConfiguration renderingConfiguration) {
    this.renderingConfiguration = renderingConfiguration;
    return this;
  }

  /**
   * Get renderingConfiguration
   * @return renderingConfiguration
   */
  @javax.annotation.Nullable
  public CreateKnowledgeBaseRequestRenderingConfiguration getRenderingConfiguration() {
    return renderingConfiguration;
  }

  public void setRenderingConfiguration(CreateKnowledgeBaseRequestRenderingConfiguration renderingConfiguration) {
    this.renderingConfiguration = renderingConfiguration;
  }


  public CreateKnowledgeBaseRequest serverSideEncryptionConfiguration(CreateAssistantRequestServerSideEncryptionConfiguration serverSideEncryptionConfiguration) {
    this.serverSideEncryptionConfiguration = serverSideEncryptionConfiguration;
    return this;
  }

  /**
   * Get serverSideEncryptionConfiguration
   * @return serverSideEncryptionConfiguration
   */
  @javax.annotation.Nullable
  public CreateAssistantRequestServerSideEncryptionConfiguration getServerSideEncryptionConfiguration() {
    return serverSideEncryptionConfiguration;
  }

  public void setServerSideEncryptionConfiguration(CreateAssistantRequestServerSideEncryptionConfiguration serverSideEncryptionConfiguration) {
    this.serverSideEncryptionConfiguration = serverSideEncryptionConfiguration;
  }


  public CreateKnowledgeBaseRequest sourceConfiguration(CreateKnowledgeBaseRequestSourceConfiguration sourceConfiguration) {
    this.sourceConfiguration = sourceConfiguration;
    return this;
  }

  /**
   * Get sourceConfiguration
   * @return sourceConfiguration
   */
  @javax.annotation.Nullable
  public CreateKnowledgeBaseRequestSourceConfiguration getSourceConfiguration() {
    return sourceConfiguration;
  }

  public void setSourceConfiguration(CreateKnowledgeBaseRequestSourceConfiguration sourceConfiguration) {
    this.sourceConfiguration = sourceConfiguration;
  }


  public CreateKnowledgeBaseRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateKnowledgeBaseRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * The tags used to organize, track, or control access for this resource.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateKnowledgeBaseRequest createKnowledgeBaseRequest = (CreateKnowledgeBaseRequest) o;
    return Objects.equals(this.clientToken, createKnowledgeBaseRequest.clientToken) &&
        Objects.equals(this.description, createKnowledgeBaseRequest.description) &&
        Objects.equals(this.knowledgeBaseType, createKnowledgeBaseRequest.knowledgeBaseType) &&
        Objects.equals(this.name, createKnowledgeBaseRequest.name) &&
        Objects.equals(this.renderingConfiguration, createKnowledgeBaseRequest.renderingConfiguration) &&
        Objects.equals(this.serverSideEncryptionConfiguration, createKnowledgeBaseRequest.serverSideEncryptionConfiguration) &&
        Objects.equals(this.sourceConfiguration, createKnowledgeBaseRequest.sourceConfiguration) &&
        Objects.equals(this.tags, createKnowledgeBaseRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientToken, description, knowledgeBaseType, name, renderingConfiguration, serverSideEncryptionConfiguration, sourceConfiguration, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateKnowledgeBaseRequest {\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    knowledgeBaseType: ").append(toIndentedString(knowledgeBaseType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    renderingConfiguration: ").append(toIndentedString(renderingConfiguration)).append("\n");
    sb.append("    serverSideEncryptionConfiguration: ").append(toIndentedString(serverSideEncryptionConfiguration)).append("\n");
    sb.append("    sourceConfiguration: ").append(toIndentedString(sourceConfiguration)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clientToken");
    openapiFields.add("description");
    openapiFields.add("knowledgeBaseType");
    openapiFields.add("name");
    openapiFields.add("renderingConfiguration");
    openapiFields.add("serverSideEncryptionConfiguration");
    openapiFields.add("sourceConfiguration");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("knowledgeBaseType");
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateKnowledgeBaseRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateKnowledgeBaseRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateKnowledgeBaseRequest is not found in the empty JSON string", CreateKnowledgeBaseRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateKnowledgeBaseRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateKnowledgeBaseRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateKnowledgeBaseRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("clientToken") != null && !jsonObj.get("clientToken").isJsonNull()) && !jsonObj.get("clientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientToken").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("knowledgeBaseType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `knowledgeBaseType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("knowledgeBaseType").toString()));
      }
      // validate the required field `knowledgeBaseType`
      KnowledgeBaseTypeEnum.validateJsonElement(jsonObj.get("knowledgeBaseType"));
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `renderingConfiguration`
      if (jsonObj.get("renderingConfiguration") != null && !jsonObj.get("renderingConfiguration").isJsonNull()) {
        CreateKnowledgeBaseRequestRenderingConfiguration.validateJsonElement(jsonObj.get("renderingConfiguration"));
      }
      // validate the optional field `serverSideEncryptionConfiguration`
      if (jsonObj.get("serverSideEncryptionConfiguration") != null && !jsonObj.get("serverSideEncryptionConfiguration").isJsonNull()) {
        CreateAssistantRequestServerSideEncryptionConfiguration.validateJsonElement(jsonObj.get("serverSideEncryptionConfiguration"));
      }
      // validate the optional field `sourceConfiguration`
      if (jsonObj.get("sourceConfiguration") != null && !jsonObj.get("sourceConfiguration").isJsonNull()) {
        CreateKnowledgeBaseRequestSourceConfiguration.validateJsonElement(jsonObj.get("sourceConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateKnowledgeBaseRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateKnowledgeBaseRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateKnowledgeBaseRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateKnowledgeBaseRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateKnowledgeBaseRequest>() {
           @Override
           public void write(JsonWriter out, CreateKnowledgeBaseRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateKnowledgeBaseRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateKnowledgeBaseRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateKnowledgeBaseRequest
   * @throws IOException if the JSON string is invalid with respect to CreateKnowledgeBaseRequest
   */
  public static CreateKnowledgeBaseRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateKnowledgeBaseRequest.class);
  }

  /**
   * Convert an instance of CreateKnowledgeBaseRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

