/*
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.AssistantDataServerSideEncryptionConfiguration;
import org.openapitools.client.model.CreateKnowledgeBaseRequestRenderingConfiguration;
import org.openapitools.client.model.KnowledgeBaseDataSourceConfiguration;
import org.openapitools.client.model.KnowledgeBaseStatus;
import org.openapitools.client.model.KnowledgeBaseType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateKnowledgeBaseResponseKnowledgeBase
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:30.807270-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateKnowledgeBaseResponseKnowledgeBase {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_KNOWLEDGE_BASE_ARN = "knowledgeBaseArn";
  @SerializedName(SERIALIZED_NAME_KNOWLEDGE_BASE_ARN)
  private String knowledgeBaseArn;

  public static final String SERIALIZED_NAME_KNOWLEDGE_BASE_ID = "knowledgeBaseId";
  @SerializedName(SERIALIZED_NAME_KNOWLEDGE_BASE_ID)
  private String knowledgeBaseId;

  public static final String SERIALIZED_NAME_KNOWLEDGE_BASE_TYPE = "knowledgeBaseType";
  @SerializedName(SERIALIZED_NAME_KNOWLEDGE_BASE_TYPE)
  private KnowledgeBaseType knowledgeBaseType;

  public static final String SERIALIZED_NAME_LAST_CONTENT_MODIFICATION_TIME = "lastContentModificationTime";
  @SerializedName(SERIALIZED_NAME_LAST_CONTENT_MODIFICATION_TIME)
  private OffsetDateTime lastContentModificationTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RENDERING_CONFIGURATION = "renderingConfiguration";
  @SerializedName(SERIALIZED_NAME_RENDERING_CONFIGURATION)
  private CreateKnowledgeBaseRequestRenderingConfiguration renderingConfiguration;

  public static final String SERIALIZED_NAME_SERVER_SIDE_ENCRYPTION_CONFIGURATION = "serverSideEncryptionConfiguration";
  @SerializedName(SERIALIZED_NAME_SERVER_SIDE_ENCRYPTION_CONFIGURATION)
  private AssistantDataServerSideEncryptionConfiguration serverSideEncryptionConfiguration;

  public static final String SERIALIZED_NAME_SOURCE_CONFIGURATION = "sourceConfiguration";
  @SerializedName(SERIALIZED_NAME_SOURCE_CONFIGURATION)
  private KnowledgeBaseDataSourceConfiguration sourceConfiguration;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private KnowledgeBaseStatus status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public CreateKnowledgeBaseResponseKnowledgeBase() {
  }

  public CreateKnowledgeBaseResponseKnowledgeBase description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase knowledgeBaseArn(String knowledgeBaseArn) {
    this.knowledgeBaseArn = knowledgeBaseArn;
    return this;
  }

  /**
   * Get knowledgeBaseArn
   * @return knowledgeBaseArn
   */
  @javax.annotation.Nonnull
  public String getKnowledgeBaseArn() {
    return knowledgeBaseArn;
  }

  public void setKnowledgeBaseArn(String knowledgeBaseArn) {
    this.knowledgeBaseArn = knowledgeBaseArn;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase knowledgeBaseId(String knowledgeBaseId) {
    this.knowledgeBaseId = knowledgeBaseId;
    return this;
  }

  /**
   * Get knowledgeBaseId
   * @return knowledgeBaseId
   */
  @javax.annotation.Nonnull
  public String getKnowledgeBaseId() {
    return knowledgeBaseId;
  }

  public void setKnowledgeBaseId(String knowledgeBaseId) {
    this.knowledgeBaseId = knowledgeBaseId;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase knowledgeBaseType(KnowledgeBaseType knowledgeBaseType) {
    this.knowledgeBaseType = knowledgeBaseType;
    return this;
  }

  /**
   * Get knowledgeBaseType
   * @return knowledgeBaseType
   */
  @javax.annotation.Nonnull
  public KnowledgeBaseType getKnowledgeBaseType() {
    return knowledgeBaseType;
  }

  public void setKnowledgeBaseType(KnowledgeBaseType knowledgeBaseType) {
    this.knowledgeBaseType = knowledgeBaseType;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase lastContentModificationTime(OffsetDateTime lastContentModificationTime) {
    this.lastContentModificationTime = lastContentModificationTime;
    return this;
  }

  /**
   * Get lastContentModificationTime
   * @return lastContentModificationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastContentModificationTime() {
    return lastContentModificationTime;
  }

  public void setLastContentModificationTime(OffsetDateTime lastContentModificationTime) {
    this.lastContentModificationTime = lastContentModificationTime;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase renderingConfiguration(CreateKnowledgeBaseRequestRenderingConfiguration renderingConfiguration) {
    this.renderingConfiguration = renderingConfiguration;
    return this;
  }

  /**
   * Get renderingConfiguration
   * @return renderingConfiguration
   */
  @javax.annotation.Nullable
  public CreateKnowledgeBaseRequestRenderingConfiguration getRenderingConfiguration() {
    return renderingConfiguration;
  }

  public void setRenderingConfiguration(CreateKnowledgeBaseRequestRenderingConfiguration renderingConfiguration) {
    this.renderingConfiguration = renderingConfiguration;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase serverSideEncryptionConfiguration(AssistantDataServerSideEncryptionConfiguration serverSideEncryptionConfiguration) {
    this.serverSideEncryptionConfiguration = serverSideEncryptionConfiguration;
    return this;
  }

  /**
   * Get serverSideEncryptionConfiguration
   * @return serverSideEncryptionConfiguration
   */
  @javax.annotation.Nullable
  public AssistantDataServerSideEncryptionConfiguration getServerSideEncryptionConfiguration() {
    return serverSideEncryptionConfiguration;
  }

  public void setServerSideEncryptionConfiguration(AssistantDataServerSideEncryptionConfiguration serverSideEncryptionConfiguration) {
    this.serverSideEncryptionConfiguration = serverSideEncryptionConfiguration;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase sourceConfiguration(KnowledgeBaseDataSourceConfiguration sourceConfiguration) {
    this.sourceConfiguration = sourceConfiguration;
    return this;
  }

  /**
   * Get sourceConfiguration
   * @return sourceConfiguration
   */
  @javax.annotation.Nullable
  public KnowledgeBaseDataSourceConfiguration getSourceConfiguration() {
    return sourceConfiguration;
  }

  public void setSourceConfiguration(KnowledgeBaseDataSourceConfiguration sourceConfiguration) {
    this.sourceConfiguration = sourceConfiguration;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase status(KnowledgeBaseStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public KnowledgeBaseStatus getStatus() {
    return status;
  }

  public void setStatus(KnowledgeBaseStatus status) {
    this.status = status;
  }


  public CreateKnowledgeBaseResponseKnowledgeBase tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateKnowledgeBaseResponseKnowledgeBase createKnowledgeBaseResponseKnowledgeBase = (CreateKnowledgeBaseResponseKnowledgeBase) o;
    return Objects.equals(this.description, createKnowledgeBaseResponseKnowledgeBase.description) &&
        Objects.equals(this.knowledgeBaseArn, createKnowledgeBaseResponseKnowledgeBase.knowledgeBaseArn) &&
        Objects.equals(this.knowledgeBaseId, createKnowledgeBaseResponseKnowledgeBase.knowledgeBaseId) &&
        Objects.equals(this.knowledgeBaseType, createKnowledgeBaseResponseKnowledgeBase.knowledgeBaseType) &&
        Objects.equals(this.lastContentModificationTime, createKnowledgeBaseResponseKnowledgeBase.lastContentModificationTime) &&
        Objects.equals(this.name, createKnowledgeBaseResponseKnowledgeBase.name) &&
        Objects.equals(this.renderingConfiguration, createKnowledgeBaseResponseKnowledgeBase.renderingConfiguration) &&
        Objects.equals(this.serverSideEncryptionConfiguration, createKnowledgeBaseResponseKnowledgeBase.serverSideEncryptionConfiguration) &&
        Objects.equals(this.sourceConfiguration, createKnowledgeBaseResponseKnowledgeBase.sourceConfiguration) &&
        Objects.equals(this.status, createKnowledgeBaseResponseKnowledgeBase.status) &&
        Objects.equals(this.tags, createKnowledgeBaseResponseKnowledgeBase.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, knowledgeBaseArn, knowledgeBaseId, knowledgeBaseType, lastContentModificationTime, name, renderingConfiguration, serverSideEncryptionConfiguration, sourceConfiguration, status, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateKnowledgeBaseResponseKnowledgeBase {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    knowledgeBaseArn: ").append(toIndentedString(knowledgeBaseArn)).append("\n");
    sb.append("    knowledgeBaseId: ").append(toIndentedString(knowledgeBaseId)).append("\n");
    sb.append("    knowledgeBaseType: ").append(toIndentedString(knowledgeBaseType)).append("\n");
    sb.append("    lastContentModificationTime: ").append(toIndentedString(lastContentModificationTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    renderingConfiguration: ").append(toIndentedString(renderingConfiguration)).append("\n");
    sb.append("    serverSideEncryptionConfiguration: ").append(toIndentedString(serverSideEncryptionConfiguration)).append("\n");
    sb.append("    sourceConfiguration: ").append(toIndentedString(sourceConfiguration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("knowledgeBaseArn");
    openapiFields.add("knowledgeBaseId");
    openapiFields.add("knowledgeBaseType");
    openapiFields.add("lastContentModificationTime");
    openapiFields.add("name");
    openapiFields.add("renderingConfiguration");
    openapiFields.add("serverSideEncryptionConfiguration");
    openapiFields.add("sourceConfiguration");
    openapiFields.add("status");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("knowledgeBaseArn");
    openapiRequiredFields.add("knowledgeBaseId");
    openapiRequiredFields.add("knowledgeBaseType");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("status");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateKnowledgeBaseResponseKnowledgeBase
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateKnowledgeBaseResponseKnowledgeBase.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateKnowledgeBaseResponseKnowledgeBase is not found in the empty JSON string", CreateKnowledgeBaseResponseKnowledgeBase.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateKnowledgeBaseResponseKnowledgeBase.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateKnowledgeBaseResponseKnowledgeBase` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateKnowledgeBaseResponseKnowledgeBase.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the required field `knowledgeBaseArn`
      String.validateJsonElement(jsonObj.get("knowledgeBaseArn"));
      // validate the required field `knowledgeBaseId`
      String.validateJsonElement(jsonObj.get("knowledgeBaseId"));
      // validate the required field `knowledgeBaseType`
      KnowledgeBaseType.validateJsonElement(jsonObj.get("knowledgeBaseType"));
      // validate the optional field `lastContentModificationTime`
      if (jsonObj.get("lastContentModificationTime") != null && !jsonObj.get("lastContentModificationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastContentModificationTime"));
      }
      // validate the required field `name`
      String.validateJsonElement(jsonObj.get("name"));
      // validate the optional field `renderingConfiguration`
      if (jsonObj.get("renderingConfiguration") != null && !jsonObj.get("renderingConfiguration").isJsonNull()) {
        CreateKnowledgeBaseRequestRenderingConfiguration.validateJsonElement(jsonObj.get("renderingConfiguration"));
      }
      // validate the optional field `serverSideEncryptionConfiguration`
      if (jsonObj.get("serverSideEncryptionConfiguration") != null && !jsonObj.get("serverSideEncryptionConfiguration").isJsonNull()) {
        AssistantDataServerSideEncryptionConfiguration.validateJsonElement(jsonObj.get("serverSideEncryptionConfiguration"));
      }
      // validate the optional field `sourceConfiguration`
      if (jsonObj.get("sourceConfiguration") != null && !jsonObj.get("sourceConfiguration").isJsonNull()) {
        KnowledgeBaseDataSourceConfiguration.validateJsonElement(jsonObj.get("sourceConfiguration"));
      }
      // validate the required field `status`
      KnowledgeBaseStatus.validateJsonElement(jsonObj.get("status"));
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateKnowledgeBaseResponseKnowledgeBase.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateKnowledgeBaseResponseKnowledgeBase' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateKnowledgeBaseResponseKnowledgeBase> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateKnowledgeBaseResponseKnowledgeBase.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateKnowledgeBaseResponseKnowledgeBase>() {
           @Override
           public void write(JsonWriter out, CreateKnowledgeBaseResponseKnowledgeBase value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateKnowledgeBaseResponseKnowledgeBase read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateKnowledgeBaseResponseKnowledgeBase given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateKnowledgeBaseResponseKnowledgeBase
   * @throws IOException if the JSON string is invalid with respect to CreateKnowledgeBaseResponseKnowledgeBase
   */
  public static CreateKnowledgeBaseResponseKnowledgeBase fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateKnowledgeBaseResponseKnowledgeBase.class);
  }

  /**
   * Convert an instance of CreateKnowledgeBaseResponseKnowledgeBase to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

