/*
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets AssistantStatus
 */
@JsonAdapter(AssistantStatus.Adapter.class)
public enum AssistantStatus {
  
  CREATE_IN_PROGRESS("CREATE_IN_PROGRESS"),
  
  CREATE_FAILED("CREATE_FAILED"),
  
  ACTIVE("ACTIVE"),
  
  DELETE_IN_PROGRESS("DELETE_IN_PROGRESS"),
  
  DELETE_FAILED("DELETE_FAILED"),
  
  DELETED("DELETED");

  private String value;

  AssistantStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AssistantStatus fromValue(String value) {
    for (AssistantStatus b : AssistantStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AssistantStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final AssistantStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AssistantStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AssistantStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AssistantStatus.fromValue(value);
  }
}

