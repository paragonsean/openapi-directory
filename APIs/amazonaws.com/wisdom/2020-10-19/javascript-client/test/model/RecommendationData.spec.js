/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonConnectWisdomService);
  }
}(this, function(expect, AmazonConnectWisdomService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonConnectWisdomService.RecommendationData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RecommendationData', function() {
    it('should create an instance of RecommendationData', function() {
      // uncomment below and update the code to test RecommendationData
      //var instance = new AmazonConnectWisdomService.RecommendationData();
      //expect(instance).to.be.a(AmazonConnectWisdomService.RecommendationData);
    });

    it('should have the property document (base name: "document")', function() {
      // uncomment below and update the code to test the property document
      //var instance = new AmazonConnectWisdomService.RecommendationData();
      //expect(instance).to.be();
    });

    it('should have the property recommendationId (base name: "recommendationId")', function() {
      // uncomment below and update the code to test the property recommendationId
      //var instance = new AmazonConnectWisdomService.RecommendationData();
      //expect(instance).to.be();
    });

    it('should have the property relevanceLevel (base name: "relevanceLevel")', function() {
      // uncomment below and update the code to test the property relevanceLevel
      //var instance = new AmazonConnectWisdomService.RecommendationData();
      //expect(instance).to.be();
    });

    it('should have the property relevanceScore (base name: "relevanceScore")', function() {
      // uncomment below and update the code to test the property relevanceScore
      //var instance = new AmazonConnectWisdomService.RecommendationData();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AmazonConnectWisdomService.RecommendationData();
      //expect(instance).to.be();
    });

  });

}));
