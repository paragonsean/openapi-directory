/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonConnectWisdomService);
  }
}(this, function(expect, AmazonConnectWisdomService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetContentSummaryResponseContentSummary', function() {
    it('should create an instance of GetContentSummaryResponseContentSummary', function() {
      // uncomment below and update the code to test GetContentSummaryResponseContentSummary
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be.a(AmazonConnectWisdomService.GetContentSummaryResponseContentSummary);
    });

    it('should have the property contentArn (base name: "contentArn")', function() {
      // uncomment below and update the code to test the property contentArn
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property contentId (base name: "contentId")', function() {
      // uncomment below and update the code to test the property contentId
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property contentType (base name: "contentType")', function() {
      // uncomment below and update the code to test the property contentType
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property knowledgeBaseArn (base name: "knowledgeBaseArn")', function() {
      // uncomment below and update the code to test the property knowledgeBaseArn
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property knowledgeBaseId (base name: "knowledgeBaseId")', function() {
      // uncomment below and update the code to test the property knowledgeBaseId
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property revisionId (base name: "revisionId")', function() {
      // uncomment below and update the code to test the property revisionId
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new AmazonConnectWisdomService.GetContentSummaryResponseContentSummary();
      //expect(instance).to.be();
    });

  });

}));
