/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateContentRequest model module.
 * @module model/UpdateContentRequest
 * @version 2020-10-19
 */
class UpdateContentRequest {
    /**
     * Constructs a new <code>UpdateContentRequest</code>.
     * @alias module:model/UpdateContentRequest
     */
    constructor() { 
        
        UpdateContentRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateContentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateContentRequest} obj Optional instance to populate.
     * @return {module:model/UpdateContentRequest} The populated <code>UpdateContentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateContentRequest();

            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('overrideLinkOutUri')) {
                obj['overrideLinkOutUri'] = ApiClient.convertToType(data['overrideLinkOutUri'], 'String');
            }
            if (data.hasOwnProperty('removeOverrideLinkOutUri')) {
                obj['removeOverrideLinkOutUri'] = ApiClient.convertToType(data['removeOverrideLinkOutUri'], 'Boolean');
            }
            if (data.hasOwnProperty('revisionId')) {
                obj['revisionId'] = ApiClient.convertToType(data['revisionId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('uploadId')) {
                obj['uploadId'] = ApiClient.convertToType(data['uploadId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateContentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateContentRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['overrideLinkOutUri'] && !(typeof data['overrideLinkOutUri'] === 'string' || data['overrideLinkOutUri'] instanceof String)) {
            throw new Error("Expected the field `overrideLinkOutUri` to be a primitive type in the JSON string but got " + data['overrideLinkOutUri']);
        }
        // ensure the json data is a string
        if (data['revisionId'] && !(typeof data['revisionId'] === 'string' || data['revisionId'] instanceof String)) {
            throw new Error("Expected the field `revisionId` to be a primitive type in the JSON string but got " + data['revisionId']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['uploadId'] && !(typeof data['uploadId'] === 'string' || data['uploadId'] instanceof String)) {
            throw new Error("Expected the field `uploadId` to be a primitive type in the JSON string but got " + data['uploadId']);
        }

        return true;
    }


}



/**
 * A key/value map to store attributes without affecting tagging or recommendations. For example, when synchronizing data between an external system and Wisdom, you can store an external version identifier as metadata to utilize for determining drift.
 * @member {Object.<String, String>} metadata
 */
UpdateContentRequest.prototype['metadata'] = undefined;

/**
 * The URI for the article. If the knowledge base has a templateUri, setting this argument overrides it for this piece of content. To remove an existing <code>overrideLinkOurUri</code>, exclude this argument and set <code>removeOverrideLinkOutUri</code> to true.
 * @member {String} overrideLinkOutUri
 */
UpdateContentRequest.prototype['overrideLinkOutUri'] = undefined;

/**
 * Unset the existing <code>overrideLinkOutUri</code> if it exists.
 * @member {Boolean} removeOverrideLinkOutUri
 */
UpdateContentRequest.prototype['removeOverrideLinkOutUri'] = undefined;

/**
 * The <code>revisionId</code> of the content resource to update, taken from an earlier call to <code>GetContent</code>, <code>GetContentSummary</code>, <code>SearchContent</code>, or <code>ListContents</code>. If included, this argument acts as an optimistic lock to ensure content was not modified since it was last read. If it has been modified, this API throws a <code>PreconditionFailedException</code>.
 * @member {String} revisionId
 */
UpdateContentRequest.prototype['revisionId'] = undefined;

/**
 * The title of the content.
 * @member {String} title
 */
UpdateContentRequest.prototype['title'] = undefined;

/**
 * A pointer to the uploaded asset. This value is returned by <a href=\"https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html\">StartContentUpload</a>. 
 * @member {String} uploadId
 */
UpdateContentRequest.prototype['uploadId'] = undefined;






export default UpdateContentRequest;

