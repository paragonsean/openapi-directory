# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateKnowledgeBaseRequestRenderingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, template_uri: str=None):
        """CreateKnowledgeBaseRequestRenderingConfiguration - a model defined in OpenAPI

        :param template_uri: The template_uri of this CreateKnowledgeBaseRequestRenderingConfiguration.
        """
        self.openapi_types = {
            'template_uri': str
        }

        self.attribute_map = {
            'template_uri': 'templateUri'
        }

        self._template_uri = template_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateKnowledgeBaseRequestRenderingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateKnowledgeBaseRequest_renderingConfiguration of this CreateKnowledgeBaseRequestRenderingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def template_uri(self):
        """Gets the template_uri of this CreateKnowledgeBaseRequestRenderingConfiguration.


        :return: The template_uri of this CreateKnowledgeBaseRequestRenderingConfiguration.
        :rtype: str
        """
        return self._template_uri

    @template_uri.setter
    def template_uri(self, template_uri):
        """Sets the template_uri of this CreateKnowledgeBaseRequestRenderingConfiguration.


        :param template_uri: The template_uri of this CreateKnowledgeBaseRequestRenderingConfiguration.
        :type template_uri: str
        """

        self._template_uri = template_uri
