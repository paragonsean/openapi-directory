# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_assistant_association_response_assistant_association import CreateAssistantAssociationResponseAssistantAssociation
from openapi_server import util


class GetAssistantAssociationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assistant_association: CreateAssistantAssociationResponseAssistantAssociation=None):
        """GetAssistantAssociationResponse - a model defined in OpenAPI

        :param assistant_association: The assistant_association of this GetAssistantAssociationResponse.
        """
        self.openapi_types = {
            'assistant_association': CreateAssistantAssociationResponseAssistantAssociation
        }

        self.attribute_map = {
            'assistant_association': 'assistantAssociation'
        }

        self._assistant_association = assistant_association

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAssistantAssociationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAssistantAssociationResponse of this GetAssistantAssociationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assistant_association(self):
        """Gets the assistant_association of this GetAssistantAssociationResponse.


        :return: The assistant_association of this GetAssistantAssociationResponse.
        :rtype: CreateAssistantAssociationResponseAssistantAssociation
        """
        return self._assistant_association

    @assistant_association.setter
    def assistant_association(self, assistant_association):
        """Sets the assistant_association of this GetAssistantAssociationResponse.


        :param assistant_association: The assistant_association of this GetAssistantAssociationResponse.
        :type assistant_association: CreateAssistantAssociationResponseAssistantAssociation
        """

        self._assistant_association = assistant_association
