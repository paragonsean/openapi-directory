# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DocumentContentReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_arn: str=None, content_id: str=None, knowledge_base_arn: str=None, knowledge_base_id: str=None):
        """DocumentContentReference - a model defined in OpenAPI

        :param content_arn: The content_arn of this DocumentContentReference.
        :param content_id: The content_id of this DocumentContentReference.
        :param knowledge_base_arn: The knowledge_base_arn of this DocumentContentReference.
        :param knowledge_base_id: The knowledge_base_id of this DocumentContentReference.
        """
        self.openapi_types = {
            'content_arn': str,
            'content_id': str,
            'knowledge_base_arn': str,
            'knowledge_base_id': str
        }

        self.attribute_map = {
            'content_arn': 'contentArn',
            'content_id': 'contentId',
            'knowledge_base_arn': 'knowledgeBaseArn',
            'knowledge_base_id': 'knowledgeBaseId'
        }

        self._content_arn = content_arn
        self._content_id = content_id
        self._knowledge_base_arn = knowledge_base_arn
        self._knowledge_base_id = knowledge_base_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentContentReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Document_contentReference of this DocumentContentReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_arn(self):
        """Gets the content_arn of this DocumentContentReference.


        :return: The content_arn of this DocumentContentReference.
        :rtype: str
        """
        return self._content_arn

    @content_arn.setter
    def content_arn(self, content_arn):
        """Sets the content_arn of this DocumentContentReference.


        :param content_arn: The content_arn of this DocumentContentReference.
        :type content_arn: str
        """

        self._content_arn = content_arn

    @property
    def content_id(self):
        """Gets the content_id of this DocumentContentReference.


        :return: The content_id of this DocumentContentReference.
        :rtype: str
        """
        return self._content_id

    @content_id.setter
    def content_id(self, content_id):
        """Sets the content_id of this DocumentContentReference.


        :param content_id: The content_id of this DocumentContentReference.
        :type content_id: str
        """

        self._content_id = content_id

    @property
    def knowledge_base_arn(self):
        """Gets the knowledge_base_arn of this DocumentContentReference.


        :return: The knowledge_base_arn of this DocumentContentReference.
        :rtype: str
        """
        return self._knowledge_base_arn

    @knowledge_base_arn.setter
    def knowledge_base_arn(self, knowledge_base_arn):
        """Sets the knowledge_base_arn of this DocumentContentReference.


        :param knowledge_base_arn: The knowledge_base_arn of this DocumentContentReference.
        :type knowledge_base_arn: str
        """

        self._knowledge_base_arn = knowledge_base_arn

    @property
    def knowledge_base_id(self):
        """Gets the knowledge_base_id of this DocumentContentReference.


        :return: The knowledge_base_id of this DocumentContentReference.
        :rtype: str
        """
        return self._knowledge_base_id

    @knowledge_base_id.setter
    def knowledge_base_id(self, knowledge_base_id):
        """Sets the knowledge_base_id of this DocumentContentReference.


        :param knowledge_base_id: The knowledge_base_id of this DocumentContentReference.
        :type knowledge_base_id: str
        """

        self._knowledge_base_id = knowledge_base_id
