/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateKnowledgeBaseResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateKnowledgeBaseResponse::OAICreateKnowledgeBaseResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateKnowledgeBaseResponse::OAICreateKnowledgeBaseResponse() {
    this->initializeModel();
}

OAICreateKnowledgeBaseResponse::~OAICreateKnowledgeBaseResponse() {}

void OAICreateKnowledgeBaseResponse::initializeModel() {

    m_knowledge_base_isSet = false;
    m_knowledge_base_isValid = false;
}

void OAICreateKnowledgeBaseResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateKnowledgeBaseResponse::fromJsonObject(QJsonObject json) {

    m_knowledge_base_isValid = ::OpenAPI::fromJsonValue(m_knowledge_base, json[QString("knowledgeBase")]);
    m_knowledge_base_isSet = !json[QString("knowledgeBase")].isNull() && m_knowledge_base_isValid;
}

QString OAICreateKnowledgeBaseResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateKnowledgeBaseResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_knowledge_base.isSet()) {
        obj.insert(QString("knowledgeBase"), ::OpenAPI::toJsonValue(m_knowledge_base));
    }
    return obj;
}

OAICreateKnowledgeBaseResponse_knowledgeBase OAICreateKnowledgeBaseResponse::getKnowledgeBase() const {
    return m_knowledge_base;
}
void OAICreateKnowledgeBaseResponse::setKnowledgeBase(const OAICreateKnowledgeBaseResponse_knowledgeBase &knowledge_base) {
    m_knowledge_base = knowledge_base;
    m_knowledge_base_isSet = true;
}

bool OAICreateKnowledgeBaseResponse::is_knowledge_base_Set() const{
    return m_knowledge_base_isSet;
}

bool OAICreateKnowledgeBaseResponse::is_knowledge_base_Valid() const{
    return m_knowledge_base_isValid;
}

bool OAICreateKnowledgeBaseResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_knowledge_base.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateKnowledgeBaseResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
