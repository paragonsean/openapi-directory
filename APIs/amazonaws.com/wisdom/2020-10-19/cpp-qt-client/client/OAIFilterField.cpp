/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilterField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilterField::OAIFilterField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilterField::OAIFilterField() {
    this->initializeModel();
}

OAIFilterField::~OAIFilterField() {}

void OAIFilterField::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFilterField::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFilterField::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterField::NAME;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFilterField::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFilterField::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFilterField::NAME:
            val = "NAME";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFilterField::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFilterField::eOAIFilterField OAIFilterField::getValue() const {
    return m_value;
}

void OAIFilterField::setValue(const OAIFilterField::eOAIFilterField& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFilterField::isSet() const {
    
    return m_value_isSet;
}

bool OAIFilterField::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
