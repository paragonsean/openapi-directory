/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartContentUploadResponse.h
 *
 * 
 */

#ifndef OAIStartContentUploadResponse_H
#define OAIStartContentUploadResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStartContentUploadResponse : public OAIObject {
public:
    OAIStartContentUploadResponse();
    OAIStartContentUploadResponse(QString json);
    ~OAIStartContentUploadResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap getHeadersToInclude() const;
    void setHeadersToInclude(const QMap &headers_to_include);
    bool is_headers_to_include_Set() const;
    bool is_headers_to_include_Valid() const;

    QString getUploadId() const;
    void setUploadId(const QString &upload_id);
    bool is_upload_id_Set() const;
    bool is_upload_id_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QDateTime getUrlExpiry() const;
    void setUrlExpiry(const QDateTime &url_expiry);
    bool is_url_expiry_Set() const;
    bool is_url_expiry_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap m_headers_to_include;
    bool m_headers_to_include_isSet;
    bool m_headers_to_include_isValid;

    QString m_upload_id;
    bool m_upload_id_isSet;
    bool m_upload_id_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QDateTime m_url_expiry;
    bool m_url_expiry_isSet;
    bool m_url_expiry_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartContentUploadResponse)

#endif // OAIStartContentUploadResponse_H
