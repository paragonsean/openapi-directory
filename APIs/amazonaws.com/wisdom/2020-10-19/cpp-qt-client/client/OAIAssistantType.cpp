/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssistantType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssistantType::OAIAssistantType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssistantType::OAIAssistantType() {
    this->initializeModel();
}

OAIAssistantType::~OAIAssistantType() {}

void OAIAssistantType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssistantType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssistantType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AGENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssistantType::AGENT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssistantType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssistantType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssistantType::AGENT:
            val = "AGENT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssistantType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssistantType::eOAIAssistantType OAIAssistantType::getValue() const {
    return m_value;
}

void OAIAssistantType::setValue(const OAIAssistantType::eOAIAssistantType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssistantType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssistantType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
