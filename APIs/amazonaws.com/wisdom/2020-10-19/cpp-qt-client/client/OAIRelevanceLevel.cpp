/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelevanceLevel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelevanceLevel::OAIRelevanceLevel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelevanceLevel::OAIRelevanceLevel() {
    this->initializeModel();
}

OAIRelevanceLevel::~OAIRelevanceLevel() {}

void OAIRelevanceLevel::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRelevanceLevel::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRelevanceLevel::fromJson(QString jsonString) {
    
    if ( jsonString.compare("HIGH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelevanceLevel::HIGH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MEDIUM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelevanceLevel::MEDIUM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LOW", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelevanceLevel::LOW;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRelevanceLevel::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRelevanceLevel::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRelevanceLevel::HIGH:
            val = "HIGH";
            break;
        case eOAIRelevanceLevel::MEDIUM:
            val = "MEDIUM";
            break;
        case eOAIRelevanceLevel::LOW:
            val = "LOW";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRelevanceLevel::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRelevanceLevel::eOAIRelevanceLevel OAIRelevanceLevel::getValue() const {
    return m_value;
}

void OAIRelevanceLevel::setValue(const OAIRelevanceLevel::eOAIRelevanceLevel& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRelevanceLevel::isSet() const {
    
    return m_value_isSet;
}

bool OAIRelevanceLevel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
