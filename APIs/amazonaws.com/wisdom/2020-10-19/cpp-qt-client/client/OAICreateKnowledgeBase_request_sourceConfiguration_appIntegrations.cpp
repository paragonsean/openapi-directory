/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations() {
    this->initializeModel();
}

OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::~OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations() {}

void OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::initializeModel() {

    m_app_integration_arn_isSet = false;
    m_app_integration_arn_isValid = false;

    m_object_fields_isSet = false;
    m_object_fields_isValid = false;
}

void OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::fromJsonObject(QJsonObject json) {

    m_app_integration_arn_isValid = ::OpenAPI::fromJsonValue(m_app_integration_arn, json[QString("appIntegrationArn")]);
    m_app_integration_arn_isSet = !json[QString("appIntegrationArn")].isNull() && m_app_integration_arn_isValid;

    m_object_fields_isValid = ::OpenAPI::fromJsonValue(m_object_fields, json[QString("objectFields")]);
    m_object_fields_isSet = !json[QString("objectFields")].isNull() && m_object_fields_isValid;
}

QString OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::asJsonObject() const {
    QJsonObject obj;
    if (m_app_integration_arn_isSet) {
        obj.insert(QString("appIntegrationArn"), ::OpenAPI::toJsonValue(m_app_integration_arn));
    }
    if (m_object_fields.isSet()) {
        obj.insert(QString("objectFields"), ::OpenAPI::toJsonValue(m_object_fields));
    }
    return obj;
}

QString OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::getAppIntegrationArn() const {
    return m_app_integration_arn;
}
void OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::setAppIntegrationArn(const QString &app_integration_arn) {
    m_app_integration_arn = app_integration_arn;
    m_app_integration_arn_isSet = true;
}

bool OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::is_app_integration_arn_Set() const{
    return m_app_integration_arn_isSet;
}

bool OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::is_app_integration_arn_Valid() const{
    return m_app_integration_arn_isValid;
}

QList OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::getObjectFields() const {
    return m_object_fields;
}
void OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::setObjectFields(const QList &object_fields) {
    m_object_fields = object_fields;
    m_object_fields_isSet = true;
}

bool OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::is_object_fields_Set() const{
    return m_object_fields_isSet;
}

bool OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::is_object_fields_Valid() const{
    return m_object_fields_isValid;
}

bool OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_integration_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateKnowledgeBase_request_sourceConfiguration_appIntegrations::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_integration_arn_isValid && true;
}

} // namespace OpenAPI
