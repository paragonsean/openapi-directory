/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateContentResponse_content.h
 *
 * 
 */

#ifndef OAICreateContentResponse_content_H
#define OAICreateContentResponse_content_H

#include <QJsonObject>

#include "OAIContentStatus.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateContentResponse_content : public OAIObject {
public:
    OAICreateContentResponse_content();
    OAICreateContentResponse_content(QString json);
    ~OAICreateContentResponse_content() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContentArn() const;
    void setContentArn(const QString &content_arn);
    bool is_content_arn_Set() const;
    bool is_content_arn_Valid() const;

    QString getContentId() const;
    void setContentId(const QString &content_id);
    bool is_content_id_Set() const;
    bool is_content_id_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getKnowledgeBaseArn() const;
    void setKnowledgeBaseArn(const QString &knowledge_base_arn);
    bool is_knowledge_base_arn_Set() const;
    bool is_knowledge_base_arn_Valid() const;

    QString getKnowledgeBaseId() const;
    void setKnowledgeBaseId(const QString &knowledge_base_id);
    bool is_knowledge_base_id_Set() const;
    bool is_knowledge_base_id_Valid() const;

    QString getLinkOutUri() const;
    void setLinkOutUri(const QString &link_out_uri);
    bool is_link_out_uri_Set() const;
    bool is_link_out_uri_Valid() const;

    QMap getMetadata() const;
    void setMetadata(const QMap &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRevisionId() const;
    void setRevisionId(const QString &revision_id);
    bool is_revision_id_Set() const;
    bool is_revision_id_Valid() const;

    OAIContentStatus getStatus() const;
    void setStatus(const OAIContentStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QDateTime getUrlExpiry() const;
    void setUrlExpiry(const QDateTime &url_expiry);
    bool is_url_expiry_Set() const;
    bool is_url_expiry_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content_arn;
    bool m_content_arn_isSet;
    bool m_content_arn_isValid;

    QString m_content_id;
    bool m_content_id_isSet;
    bool m_content_id_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_knowledge_base_arn;
    bool m_knowledge_base_arn_isSet;
    bool m_knowledge_base_arn_isValid;

    QString m_knowledge_base_id;
    bool m_knowledge_base_id_isSet;
    bool m_knowledge_base_id_isValid;

    QString m_link_out_uri;
    bool m_link_out_uri_isSet;
    bool m_link_out_uri_isValid;

    QMap m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_revision_id;
    bool m_revision_id_isSet;
    bool m_revision_id_isValid;

    OAIContentStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QDateTime m_url_expiry;
    bool m_url_expiry_isSet;
    bool m_url_expiry_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateContentResponse_content)

#endif // OAICreateContentResponse_content_H
