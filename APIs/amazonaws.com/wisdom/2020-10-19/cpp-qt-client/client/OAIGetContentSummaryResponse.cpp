/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetContentSummaryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetContentSummaryResponse::OAIGetContentSummaryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetContentSummaryResponse::OAIGetContentSummaryResponse() {
    this->initializeModel();
}

OAIGetContentSummaryResponse::~OAIGetContentSummaryResponse() {}

void OAIGetContentSummaryResponse::initializeModel() {

    m_content_summary_isSet = false;
    m_content_summary_isValid = false;
}

void OAIGetContentSummaryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetContentSummaryResponse::fromJsonObject(QJsonObject json) {

    m_content_summary_isValid = ::OpenAPI::fromJsonValue(m_content_summary, json[QString("contentSummary")]);
    m_content_summary_isSet = !json[QString("contentSummary")].isNull() && m_content_summary_isValid;
}

QString OAIGetContentSummaryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetContentSummaryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_content_summary.isSet()) {
        obj.insert(QString("contentSummary"), ::OpenAPI::toJsonValue(m_content_summary));
    }
    return obj;
}

OAIGetContentSummaryResponse_contentSummary OAIGetContentSummaryResponse::getContentSummary() const {
    return m_content_summary;
}
void OAIGetContentSummaryResponse::setContentSummary(const OAIGetContentSummaryResponse_contentSummary &content_summary) {
    m_content_summary = content_summary;
    m_content_summary_isSet = true;
}

bool OAIGetContentSummaryResponse::is_content_summary_Set() const{
    return m_content_summary_isSet;
}

bool OAIGetContentSummaryResponse::is_content_summary_Valid() const{
    return m_content_summary_isValid;
}

bool OAIGetContentSummaryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetContentSummaryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
