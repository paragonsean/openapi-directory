/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKnowledgeBaseData.h
 *
 * Information about the knowledge base.
 */

#ifndef OAIKnowledgeBaseData_H
#define OAIKnowledgeBaseData_H

#include <QJsonObject>

#include "OAIAssistantData_serverSideEncryptionConfiguration.h"
#include "OAICreateKnowledgeBaseRequest_renderingConfiguration.h"
#include "OAIKnowledgeBaseData_sourceConfiguration.h"
#include "OAIKnowledgeBaseStatus.h"
#include "OAIKnowledgeBaseType.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateKnowledgeBaseRequest_renderingConfiguration;
class OAIAssistantData_serverSideEncryptionConfiguration;
class OAIKnowledgeBaseData_sourceConfiguration;

class OAIKnowledgeBaseData : public OAIObject {
public:
    OAIKnowledgeBaseData();
    OAIKnowledgeBaseData(QString json);
    ~OAIKnowledgeBaseData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getKnowledgeBaseArn() const;
    void setKnowledgeBaseArn(const QString &knowledge_base_arn);
    bool is_knowledge_base_arn_Set() const;
    bool is_knowledge_base_arn_Valid() const;

    QString getKnowledgeBaseId() const;
    void setKnowledgeBaseId(const QString &knowledge_base_id);
    bool is_knowledge_base_id_Set() const;
    bool is_knowledge_base_id_Valid() const;

    OAIKnowledgeBaseType getKnowledgeBaseType() const;
    void setKnowledgeBaseType(const OAIKnowledgeBaseType &knowledge_base_type);
    bool is_knowledge_base_type_Set() const;
    bool is_knowledge_base_type_Valid() const;

    QDateTime getLastContentModificationTime() const;
    void setLastContentModificationTime(const QDateTime &last_content_modification_time);
    bool is_last_content_modification_time_Set() const;
    bool is_last_content_modification_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICreateKnowledgeBaseRequest_renderingConfiguration getRenderingConfiguration() const;
    void setRenderingConfiguration(const OAICreateKnowledgeBaseRequest_renderingConfiguration &rendering_configuration);
    bool is_rendering_configuration_Set() const;
    bool is_rendering_configuration_Valid() const;

    OAIAssistantData_serverSideEncryptionConfiguration getServerSideEncryptionConfiguration() const;
    void setServerSideEncryptionConfiguration(const OAIAssistantData_serverSideEncryptionConfiguration &server_side_encryption_configuration);
    bool is_server_side_encryption_configuration_Set() const;
    bool is_server_side_encryption_configuration_Valid() const;

    OAIKnowledgeBaseData_sourceConfiguration getSourceConfiguration() const;
    void setSourceConfiguration(const OAIKnowledgeBaseData_sourceConfiguration &source_configuration);
    bool is_source_configuration_Set() const;
    bool is_source_configuration_Valid() const;

    OAIKnowledgeBaseStatus getStatus() const;
    void setStatus(const OAIKnowledgeBaseStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_knowledge_base_arn;
    bool m_knowledge_base_arn_isSet;
    bool m_knowledge_base_arn_isValid;

    QString m_knowledge_base_id;
    bool m_knowledge_base_id_isSet;
    bool m_knowledge_base_id_isValid;

    OAIKnowledgeBaseType m_knowledge_base_type;
    bool m_knowledge_base_type_isSet;
    bool m_knowledge_base_type_isValid;

    QDateTime m_last_content_modification_time;
    bool m_last_content_modification_time_isSet;
    bool m_last_content_modification_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICreateKnowledgeBaseRequest_renderingConfiguration m_rendering_configuration;
    bool m_rendering_configuration_isSet;
    bool m_rendering_configuration_isValid;

    OAIAssistantData_serverSideEncryptionConfiguration m_server_side_encryption_configuration;
    bool m_server_side_encryption_configuration_isSet;
    bool m_server_side_encryption_configuration_isValid;

    OAIKnowledgeBaseData_sourceConfiguration m_source_configuration;
    bool m_source_configuration_isSet;
    bool m_source_configuration_isValid;

    OAIKnowledgeBaseStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKnowledgeBaseData)

#endif // OAIKnowledgeBaseData_H
