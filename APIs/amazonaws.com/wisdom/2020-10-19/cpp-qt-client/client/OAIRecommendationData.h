/**
 * Amazon Connect Wisdom Service
 * Amazon Connect Wisdom delivers agents the information they need to solve customer issues as they're actively speaking with customers. Agents can search across connected repositories from within their agent desktop to find answers quickly. Use Amazon Connect Wisdom to create an assistant and a knowledge base, for example, or manage content by uploading custom files.
 *
 * The version of the OpenAPI document: 2020-10-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecommendationData.h
 *
 * Information about the recommendation.
 */

#ifndef OAIRecommendationData_H
#define OAIRecommendationData_H

#include <QJsonObject>

#include "OAIRecommendationData_document.h"
#include "OAIRecommendationType.h"
#include "OAIRelevanceLevel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecommendationData_document;

class OAIRecommendationData : public OAIObject {
public:
    OAIRecommendationData();
    OAIRecommendationData(QString json);
    ~OAIRecommendationData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRecommendationData_document getDocument() const;
    void setDocument(const OAIRecommendationData_document &document);
    bool is_document_Set() const;
    bool is_document_Valid() const;

    QString getRecommendationId() const;
    void setRecommendationId(const QString &recommendation_id);
    bool is_recommendation_id_Set() const;
    bool is_recommendation_id_Valid() const;

    OAIRelevanceLevel getRelevanceLevel() const;
    void setRelevanceLevel(const OAIRelevanceLevel &relevance_level);
    bool is_relevance_level_Set() const;
    bool is_relevance_level_Valid() const;

    double getRelevanceScore() const;
    void setRelevanceScore(const double &relevance_score);
    bool is_relevance_score_Set() const;
    bool is_relevance_score_Valid() const;

    OAIRecommendationType getType() const;
    void setType(const OAIRecommendationType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRecommendationData_document m_document;
    bool m_document_isSet;
    bool m_document_isValid;

    QString m_recommendation_id;
    bool m_recommendation_id_isSet;
    bool m_recommendation_id_isValid;

    OAIRelevanceLevel m_relevance_level;
    bool m_relevance_level_isSet;
    bool m_relevance_level_isValid;

    double m_relevance_score;
    bool m_relevance_score_isSet;
    bool m_relevance_score_isValid;

    OAIRecommendationType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecommendationData)

#endif // OAIRecommendationData_H
