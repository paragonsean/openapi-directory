/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFacetAttributeUpdate_Attribute.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFacetAttributeUpdate_Attribute::OAIFacetAttributeUpdate_Attribute(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFacetAttributeUpdate_Attribute::OAIFacetAttributeUpdate_Attribute() {
    this->initializeModel();
}

OAIFacetAttributeUpdate_Attribute::~OAIFacetAttributeUpdate_Attribute() {}

void OAIFacetAttributeUpdate_Attribute::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_attribute_definition_isSet = false;
    m_attribute_definition_isValid = false;

    m_attribute_reference_isSet = false;
    m_attribute_reference_isValid = false;

    m_required_behavior_isSet = false;
    m_required_behavior_isValid = false;
}

void OAIFacetAttributeUpdate_Attribute::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFacetAttributeUpdate_Attribute::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_attribute_definition_isValid = ::OpenAPI::fromJsonValue(m_attribute_definition, json[QString("AttributeDefinition")]);
    m_attribute_definition_isSet = !json[QString("AttributeDefinition")].isNull() && m_attribute_definition_isValid;

    m_attribute_reference_isValid = ::OpenAPI::fromJsonValue(m_attribute_reference, json[QString("AttributeReference")]);
    m_attribute_reference_isSet = !json[QString("AttributeReference")].isNull() && m_attribute_reference_isValid;

    m_required_behavior_isValid = ::OpenAPI::fromJsonValue(m_required_behavior, json[QString("RequiredBehavior")]);
    m_required_behavior_isSet = !json[QString("RequiredBehavior")].isNull() && m_required_behavior_isValid;
}

QString OAIFacetAttributeUpdate_Attribute::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFacetAttributeUpdate_Attribute::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_attribute_definition.isSet()) {
        obj.insert(QString("AttributeDefinition"), ::OpenAPI::toJsonValue(m_attribute_definition));
    }
    if (m_attribute_reference.isSet()) {
        obj.insert(QString("AttributeReference"), ::OpenAPI::toJsonValue(m_attribute_reference));
    }
    if (m_required_behavior.isSet()) {
        obj.insert(QString("RequiredBehavior"), ::OpenAPI::toJsonValue(m_required_behavior));
    }
    return obj;
}

QString OAIFacetAttributeUpdate_Attribute::getName() const {
    return m_name;
}
void OAIFacetAttributeUpdate_Attribute::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFacetAttributeUpdate_Attribute::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFacetAttributeUpdate_Attribute::is_name_Valid() const{
    return m_name_isValid;
}

OAIFacetAttribute_AttributeDefinition OAIFacetAttributeUpdate_Attribute::getAttributeDefinition() const {
    return m_attribute_definition;
}
void OAIFacetAttributeUpdate_Attribute::setAttributeDefinition(const OAIFacetAttribute_AttributeDefinition &attribute_definition) {
    m_attribute_definition = attribute_definition;
    m_attribute_definition_isSet = true;
}

bool OAIFacetAttributeUpdate_Attribute::is_attribute_definition_Set() const{
    return m_attribute_definition_isSet;
}

bool OAIFacetAttributeUpdate_Attribute::is_attribute_definition_Valid() const{
    return m_attribute_definition_isValid;
}

OAIFacetAttribute_AttributeReference OAIFacetAttributeUpdate_Attribute::getAttributeReference() const {
    return m_attribute_reference;
}
void OAIFacetAttributeUpdate_Attribute::setAttributeReference(const OAIFacetAttribute_AttributeReference &attribute_reference) {
    m_attribute_reference = attribute_reference;
    m_attribute_reference_isSet = true;
}

bool OAIFacetAttributeUpdate_Attribute::is_attribute_reference_Set() const{
    return m_attribute_reference_isSet;
}

bool OAIFacetAttributeUpdate_Attribute::is_attribute_reference_Valid() const{
    return m_attribute_reference_isValid;
}

OAIRequiredAttributeBehavior OAIFacetAttributeUpdate_Attribute::getRequiredBehavior() const {
    return m_required_behavior;
}
void OAIFacetAttributeUpdate_Attribute::setRequiredBehavior(const OAIRequiredAttributeBehavior &required_behavior) {
    m_required_behavior = required_behavior;
    m_required_behavior_isSet = true;
}

bool OAIFacetAttributeUpdate_Attribute::is_required_behavior_Set() const{
    return m_required_behavior_isSet;
}

bool OAIFacetAttributeUpdate_Attribute::is_required_behavior_Valid() const{
    return m_required_behavior_isValid;
}

bool OAIFacetAttributeUpdate_Attribute::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_behavior.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFacetAttributeUpdate_Attribute::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
