/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchReadOperationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchReadOperationResponse::OAIBatchReadOperationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchReadOperationResponse::OAIBatchReadOperationResponse() {
    this->initializeModel();
}

OAIBatchReadOperationResponse::~OAIBatchReadOperationResponse() {}

void OAIBatchReadOperationResponse::initializeModel() {

    m_successful_response_isSet = false;
    m_successful_response_isValid = false;

    m_exception_response_isSet = false;
    m_exception_response_isValid = false;
}

void OAIBatchReadOperationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchReadOperationResponse::fromJsonObject(QJsonObject json) {

    m_successful_response_isValid = ::OpenAPI::fromJsonValue(m_successful_response, json[QString("SuccessfulResponse")]);
    m_successful_response_isSet = !json[QString("SuccessfulResponse")].isNull() && m_successful_response_isValid;

    m_exception_response_isValid = ::OpenAPI::fromJsonValue(m_exception_response, json[QString("ExceptionResponse")]);
    m_exception_response_isSet = !json[QString("ExceptionResponse")].isNull() && m_exception_response_isValid;
}

QString OAIBatchReadOperationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchReadOperationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_successful_response.isSet()) {
        obj.insert(QString("SuccessfulResponse"), ::OpenAPI::toJsonValue(m_successful_response));
    }
    if (m_exception_response.isSet()) {
        obj.insert(QString("ExceptionResponse"), ::OpenAPI::toJsonValue(m_exception_response));
    }
    return obj;
}

OAIBatchReadOperationResponse_SuccessfulResponse OAIBatchReadOperationResponse::getSuccessfulResponse() const {
    return m_successful_response;
}
void OAIBatchReadOperationResponse::setSuccessfulResponse(const OAIBatchReadOperationResponse_SuccessfulResponse &successful_response) {
    m_successful_response = successful_response;
    m_successful_response_isSet = true;
}

bool OAIBatchReadOperationResponse::is_successful_response_Set() const{
    return m_successful_response_isSet;
}

bool OAIBatchReadOperationResponse::is_successful_response_Valid() const{
    return m_successful_response_isValid;
}

OAIBatchReadOperationResponse_ExceptionResponse OAIBatchReadOperationResponse::getExceptionResponse() const {
    return m_exception_response;
}
void OAIBatchReadOperationResponse::setExceptionResponse(const OAIBatchReadOperationResponse_ExceptionResponse &exception_response) {
    m_exception_response = exception_response;
    m_exception_response_isSet = true;
}

bool OAIBatchReadOperationResponse::is_exception_response_Set() const{
    return m_exception_response_isSet;
}

bool OAIBatchReadOperationResponse::is_exception_response_Valid() const{
    return m_exception_response_isValid;
}

bool OAIBatchReadOperationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_successful_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_exception_response.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchReadOperationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
