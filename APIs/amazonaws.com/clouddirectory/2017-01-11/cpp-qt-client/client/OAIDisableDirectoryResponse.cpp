/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDisableDirectoryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDisableDirectoryResponse::OAIDisableDirectoryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDisableDirectoryResponse::OAIDisableDirectoryResponse() {
    this->initializeModel();
}

OAIDisableDirectoryResponse::~OAIDisableDirectoryResponse() {}

void OAIDisableDirectoryResponse::initializeModel() {

    m_directory_arn_isSet = false;
    m_directory_arn_isValid = false;
}

void OAIDisableDirectoryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDisableDirectoryResponse::fromJsonObject(QJsonObject json) {

    m_directory_arn_isValid = ::OpenAPI::fromJsonValue(m_directory_arn, json[QString("DirectoryArn")]);
    m_directory_arn_isSet = !json[QString("DirectoryArn")].isNull() && m_directory_arn_isValid;
}

QString OAIDisableDirectoryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDisableDirectoryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_directory_arn_isSet) {
        obj.insert(QString("DirectoryArn"), ::OpenAPI::toJsonValue(m_directory_arn));
    }
    return obj;
}

QString OAIDisableDirectoryResponse::getDirectoryArn() const {
    return m_directory_arn;
}
void OAIDisableDirectoryResponse::setDirectoryArn(const QString &directory_arn) {
    m_directory_arn = directory_arn;
    m_directory_arn_isSet = true;
}

bool OAIDisableDirectoryResponse::is_directory_arn_Set() const{
    return m_directory_arn_isSet;
}

bool OAIDisableDirectoryResponse::is_directory_arn_Valid() const{
    return m_directory_arn_isValid;
}

bool OAIDisableDirectoryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_directory_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDisableDirectoryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_directory_arn_isValid && true;
}

} // namespace OpenAPI
