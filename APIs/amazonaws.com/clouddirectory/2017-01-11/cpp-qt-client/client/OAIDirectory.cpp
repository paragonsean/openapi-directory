/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectory::OAIDirectory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectory::OAIDirectory() {
    this->initializeModel();
}

OAIDirectory::~OAIDirectory() {}

void OAIDirectory::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_directory_arn_isSet = false;
    m_directory_arn_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_creation_date_time_isSet = false;
    m_creation_date_time_isValid = false;
}

void OAIDirectory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectory::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_directory_arn_isValid = ::OpenAPI::fromJsonValue(m_directory_arn, json[QString("DirectoryArn")]);
    m_directory_arn_isSet = !json[QString("DirectoryArn")].isNull() && m_directory_arn_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_creation_date_time_isValid = ::OpenAPI::fromJsonValue(m_creation_date_time, json[QString("CreationDateTime")]);
    m_creation_date_time_isSet = !json[QString("CreationDateTime")].isNull() && m_creation_date_time_isValid;
}

QString OAIDirectory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectory::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_directory_arn_isSet) {
        obj.insert(QString("DirectoryArn"), ::OpenAPI::toJsonValue(m_directory_arn));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_creation_date_time_isSet) {
        obj.insert(QString("CreationDateTime"), ::OpenAPI::toJsonValue(m_creation_date_time));
    }
    return obj;
}

QString OAIDirectory::getName() const {
    return m_name;
}
void OAIDirectory::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDirectory::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDirectory::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDirectory::getDirectoryArn() const {
    return m_directory_arn;
}
void OAIDirectory::setDirectoryArn(const QString &directory_arn) {
    m_directory_arn = directory_arn;
    m_directory_arn_isSet = true;
}

bool OAIDirectory::is_directory_arn_Set() const{
    return m_directory_arn_isSet;
}

bool OAIDirectory::is_directory_arn_Valid() const{
    return m_directory_arn_isValid;
}

OAIDirectoryState OAIDirectory::getState() const {
    return m_state;
}
void OAIDirectory::setState(const OAIDirectoryState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIDirectory::is_state_Set() const{
    return m_state_isSet;
}

bool OAIDirectory::is_state_Valid() const{
    return m_state_isValid;
}

QDateTime OAIDirectory::getCreationDateTime() const {
    return m_creation_date_time;
}
void OAIDirectory::setCreationDateTime(const QDateTime &creation_date_time) {
    m_creation_date_time = creation_date_time;
    m_creation_date_time_isSet = true;
}

bool OAIDirectory::is_creation_date_time_Set() const{
    return m_creation_date_time_isSet;
}

bool OAIDirectory::is_creation_date_time_Valid() const{
    return m_creation_date_time_isValid;
}

bool OAIDirectory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_directory_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
