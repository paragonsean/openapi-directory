/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRangeMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRangeMode::OAIRangeMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRangeMode::OAIRangeMode() {
    this->initializeModel();
}

OAIRangeMode::~OAIRangeMode() {}

void OAIRangeMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRangeMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRangeMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FIRST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRangeMode::FIRST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRangeMode::LAST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAST_BEFORE_MISSING_VALUES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRangeMode::LAST_BEFORE_MISSING_VALUES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INCLUSIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRangeMode::INCLUSIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EXCLUSIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRangeMode::EXCLUSIVE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRangeMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRangeMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRangeMode::FIRST:
            val = "FIRST";
            break;
        case eOAIRangeMode::LAST:
            val = "LAST";
            break;
        case eOAIRangeMode::LAST_BEFORE_MISSING_VALUES:
            val = "LAST_BEFORE_MISSING_VALUES";
            break;
        case eOAIRangeMode::INCLUSIVE:
            val = "INCLUSIVE";
            break;
        case eOAIRangeMode::EXCLUSIVE:
            val = "EXCLUSIVE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRangeMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRangeMode::eOAIRangeMode OAIRangeMode::getValue() const {
    return m_value;
}

void OAIRangeMode::setValue(const OAIRangeMode::eOAIRangeMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRangeMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIRangeMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
