/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchListOutgoingTypedLinks_FilterTypedLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchListOutgoingTypedLinks_FilterTypedLink::OAIBatchListOutgoingTypedLinks_FilterTypedLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchListOutgoingTypedLinks_FilterTypedLink::OAIBatchListOutgoingTypedLinks_FilterTypedLink() {
    this->initializeModel();
}

OAIBatchListOutgoingTypedLinks_FilterTypedLink::~OAIBatchListOutgoingTypedLinks_FilterTypedLink() {}

void OAIBatchListOutgoingTypedLinks_FilterTypedLink::initializeModel() {

    m_schema_arn_isSet = false;
    m_schema_arn_isValid = false;

    m_typed_link_name_isSet = false;
    m_typed_link_name_isValid = false;
}

void OAIBatchListOutgoingTypedLinks_FilterTypedLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchListOutgoingTypedLinks_FilterTypedLink::fromJsonObject(QJsonObject json) {

    m_schema_arn_isValid = ::OpenAPI::fromJsonValue(m_schema_arn, json[QString("SchemaArn")]);
    m_schema_arn_isSet = !json[QString("SchemaArn")].isNull() && m_schema_arn_isValid;

    m_typed_link_name_isValid = ::OpenAPI::fromJsonValue(m_typed_link_name, json[QString("TypedLinkName")]);
    m_typed_link_name_isSet = !json[QString("TypedLinkName")].isNull() && m_typed_link_name_isValid;
}

QString OAIBatchListOutgoingTypedLinks_FilterTypedLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchListOutgoingTypedLinks_FilterTypedLink::asJsonObject() const {
    QJsonObject obj;
    if (m_schema_arn_isSet) {
        obj.insert(QString("SchemaArn"), ::OpenAPI::toJsonValue(m_schema_arn));
    }
    if (m_typed_link_name_isSet) {
        obj.insert(QString("TypedLinkName"), ::OpenAPI::toJsonValue(m_typed_link_name));
    }
    return obj;
}

QString OAIBatchListOutgoingTypedLinks_FilterTypedLink::getSchemaArn() const {
    return m_schema_arn;
}
void OAIBatchListOutgoingTypedLinks_FilterTypedLink::setSchemaArn(const QString &schema_arn) {
    m_schema_arn = schema_arn;
    m_schema_arn_isSet = true;
}

bool OAIBatchListOutgoingTypedLinks_FilterTypedLink::is_schema_arn_Set() const{
    return m_schema_arn_isSet;
}

bool OAIBatchListOutgoingTypedLinks_FilterTypedLink::is_schema_arn_Valid() const{
    return m_schema_arn_isValid;
}

QString OAIBatchListOutgoingTypedLinks_FilterTypedLink::getTypedLinkName() const {
    return m_typed_link_name;
}
void OAIBatchListOutgoingTypedLinks_FilterTypedLink::setTypedLinkName(const QString &typed_link_name) {
    m_typed_link_name = typed_link_name;
    m_typed_link_name_isSet = true;
}

bool OAIBatchListOutgoingTypedLinks_FilterTypedLink::is_typed_link_name_Set() const{
    return m_typed_link_name_isSet;
}

bool OAIBatchListOutgoingTypedLinks_FilterTypedLink::is_typed_link_name_Valid() const{
    return m_typed_link_name_isValid;
}

bool OAIBatchListOutgoingTypedLinks_FilterTypedLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schema_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_typed_link_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchListOutgoingTypedLinks_FilterTypedLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schema_arn_isValid && m_typed_link_name_isValid && true;
}

} // namespace OpenAPI
