/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITypedLinkAttributeRange_Range.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITypedLinkAttributeRange_Range::OAITypedLinkAttributeRange_Range(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITypedLinkAttributeRange_Range::OAITypedLinkAttributeRange_Range() {
    this->initializeModel();
}

OAITypedLinkAttributeRange_Range::~OAITypedLinkAttributeRange_Range() {}

void OAITypedLinkAttributeRange_Range::initializeModel() {

    m_start_mode_isSet = false;
    m_start_mode_isValid = false;

    m_start_value_isSet = false;
    m_start_value_isValid = false;

    m_end_mode_isSet = false;
    m_end_mode_isValid = false;

    m_end_value_isSet = false;
    m_end_value_isValid = false;
}

void OAITypedLinkAttributeRange_Range::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITypedLinkAttributeRange_Range::fromJsonObject(QJsonObject json) {

    m_start_mode_isValid = ::OpenAPI::fromJsonValue(m_start_mode, json[QString("StartMode")]);
    m_start_mode_isSet = !json[QString("StartMode")].isNull() && m_start_mode_isValid;

    m_start_value_isValid = ::OpenAPI::fromJsonValue(m_start_value, json[QString("StartValue")]);
    m_start_value_isSet = !json[QString("StartValue")].isNull() && m_start_value_isValid;

    m_end_mode_isValid = ::OpenAPI::fromJsonValue(m_end_mode, json[QString("EndMode")]);
    m_end_mode_isSet = !json[QString("EndMode")].isNull() && m_end_mode_isValid;

    m_end_value_isValid = ::OpenAPI::fromJsonValue(m_end_value, json[QString("EndValue")]);
    m_end_value_isSet = !json[QString("EndValue")].isNull() && m_end_value_isValid;
}

QString OAITypedLinkAttributeRange_Range::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITypedLinkAttributeRange_Range::asJsonObject() const {
    QJsonObject obj;
    if (m_start_mode.isSet()) {
        obj.insert(QString("StartMode"), ::OpenAPI::toJsonValue(m_start_mode));
    }
    if (m_start_value.isSet()) {
        obj.insert(QString("StartValue"), ::OpenAPI::toJsonValue(m_start_value));
    }
    if (m_end_mode.isSet()) {
        obj.insert(QString("EndMode"), ::OpenAPI::toJsonValue(m_end_mode));
    }
    if (m_end_value.isSet()) {
        obj.insert(QString("EndValue"), ::OpenAPI::toJsonValue(m_end_value));
    }
    return obj;
}

OAIRangeMode OAITypedLinkAttributeRange_Range::getStartMode() const {
    return m_start_mode;
}
void OAITypedLinkAttributeRange_Range::setStartMode(const OAIRangeMode &start_mode) {
    m_start_mode = start_mode;
    m_start_mode_isSet = true;
}

bool OAITypedLinkAttributeRange_Range::is_start_mode_Set() const{
    return m_start_mode_isSet;
}

bool OAITypedLinkAttributeRange_Range::is_start_mode_Valid() const{
    return m_start_mode_isValid;
}

OAITypedAttributeValueRange_StartValue OAITypedLinkAttributeRange_Range::getStartValue() const {
    return m_start_value;
}
void OAITypedLinkAttributeRange_Range::setStartValue(const OAITypedAttributeValueRange_StartValue &start_value) {
    m_start_value = start_value;
    m_start_value_isSet = true;
}

bool OAITypedLinkAttributeRange_Range::is_start_value_Set() const{
    return m_start_value_isSet;
}

bool OAITypedLinkAttributeRange_Range::is_start_value_Valid() const{
    return m_start_value_isValid;
}

OAIRangeMode OAITypedLinkAttributeRange_Range::getEndMode() const {
    return m_end_mode;
}
void OAITypedLinkAttributeRange_Range::setEndMode(const OAIRangeMode &end_mode) {
    m_end_mode = end_mode;
    m_end_mode_isSet = true;
}

bool OAITypedLinkAttributeRange_Range::is_end_mode_Set() const{
    return m_end_mode_isSet;
}

bool OAITypedLinkAttributeRange_Range::is_end_mode_Valid() const{
    return m_end_mode_isValid;
}

OAITypedAttributeValueRange_EndValue OAITypedLinkAttributeRange_Range::getEndValue() const {
    return m_end_value;
}
void OAITypedLinkAttributeRange_Range::setEndValue(const OAITypedAttributeValueRange_EndValue &end_value) {
    m_end_value = end_value;
    m_end_value_isSet = true;
}

bool OAITypedLinkAttributeRange_Range::is_end_value_Set() const{
    return m_end_value_isSet;
}

bool OAITypedLinkAttributeRange_Range::is_end_value_Valid() const{
    return m_end_value_isValid;
}

bool OAITypedLinkAttributeRange_Range::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_start_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITypedLinkAttributeRange_Range::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_start_mode_isValid && m_end_mode_isValid && true;
}

} // namespace OpenAPI
