/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicyAttachment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicyAttachment::OAIPolicyAttachment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicyAttachment::OAIPolicyAttachment() {
    this->initializeModel();
}

OAIPolicyAttachment::~OAIPolicyAttachment() {}

void OAIPolicyAttachment::initializeModel() {

    m_policy_id_isSet = false;
    m_policy_id_isValid = false;

    m_object_identifier_isSet = false;
    m_object_identifier_isValid = false;

    m_policy_type_isSet = false;
    m_policy_type_isValid = false;
}

void OAIPolicyAttachment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicyAttachment::fromJsonObject(QJsonObject json) {

    m_policy_id_isValid = ::OpenAPI::fromJsonValue(m_policy_id, json[QString("PolicyId")]);
    m_policy_id_isSet = !json[QString("PolicyId")].isNull() && m_policy_id_isValid;

    m_object_identifier_isValid = ::OpenAPI::fromJsonValue(m_object_identifier, json[QString("ObjectIdentifier")]);
    m_object_identifier_isSet = !json[QString("ObjectIdentifier")].isNull() && m_object_identifier_isValid;

    m_policy_type_isValid = ::OpenAPI::fromJsonValue(m_policy_type, json[QString("PolicyType")]);
    m_policy_type_isSet = !json[QString("PolicyType")].isNull() && m_policy_type_isValid;
}

QString OAIPolicyAttachment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicyAttachment::asJsonObject() const {
    QJsonObject obj;
    if (m_policy_id_isSet) {
        obj.insert(QString("PolicyId"), ::OpenAPI::toJsonValue(m_policy_id));
    }
    if (m_object_identifier_isSet) {
        obj.insert(QString("ObjectIdentifier"), ::OpenAPI::toJsonValue(m_object_identifier));
    }
    if (m_policy_type_isSet) {
        obj.insert(QString("PolicyType"), ::OpenAPI::toJsonValue(m_policy_type));
    }
    return obj;
}

QString OAIPolicyAttachment::getPolicyId() const {
    return m_policy_id;
}
void OAIPolicyAttachment::setPolicyId(const QString &policy_id) {
    m_policy_id = policy_id;
    m_policy_id_isSet = true;
}

bool OAIPolicyAttachment::is_policy_id_Set() const{
    return m_policy_id_isSet;
}

bool OAIPolicyAttachment::is_policy_id_Valid() const{
    return m_policy_id_isValid;
}

QString OAIPolicyAttachment::getObjectIdentifier() const {
    return m_object_identifier;
}
void OAIPolicyAttachment::setObjectIdentifier(const QString &object_identifier) {
    m_object_identifier = object_identifier;
    m_object_identifier_isSet = true;
}

bool OAIPolicyAttachment::is_object_identifier_Set() const{
    return m_object_identifier_isSet;
}

bool OAIPolicyAttachment::is_object_identifier_Valid() const{
    return m_object_identifier_isValid;
}

QString OAIPolicyAttachment::getPolicyType() const {
    return m_policy_type;
}
void OAIPolicyAttachment::setPolicyType(const QString &policy_type) {
    m_policy_type = policy_type;
    m_policy_type_isSet = true;
}

bool OAIPolicyAttachment::is_policy_type_Set() const{
    return m_policy_type_isSet;
}

bool OAIPolicyAttachment::is_policy_type_Valid() const{
    return m_policy_type_isValid;
}

bool OAIPolicyAttachment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicyAttachment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
