/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectAttributeUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectAttributeUpdate::OAIObjectAttributeUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectAttributeUpdate::OAIObjectAttributeUpdate() {
    this->initializeModel();
}

OAIObjectAttributeUpdate::~OAIObjectAttributeUpdate() {}

void OAIObjectAttributeUpdate::initializeModel() {

    m_object_attribute_key_isSet = false;
    m_object_attribute_key_isValid = false;

    m_object_attribute_action_isSet = false;
    m_object_attribute_action_isValid = false;
}

void OAIObjectAttributeUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectAttributeUpdate::fromJsonObject(QJsonObject json) {

    m_object_attribute_key_isValid = ::OpenAPI::fromJsonValue(m_object_attribute_key, json[QString("ObjectAttributeKey")]);
    m_object_attribute_key_isSet = !json[QString("ObjectAttributeKey")].isNull() && m_object_attribute_key_isValid;

    m_object_attribute_action_isValid = ::OpenAPI::fromJsonValue(m_object_attribute_action, json[QString("ObjectAttributeAction")]);
    m_object_attribute_action_isSet = !json[QString("ObjectAttributeAction")].isNull() && m_object_attribute_action_isValid;
}

QString OAIObjectAttributeUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectAttributeUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_object_attribute_key.isSet()) {
        obj.insert(QString("ObjectAttributeKey"), ::OpenAPI::toJsonValue(m_object_attribute_key));
    }
    if (m_object_attribute_action.isSet()) {
        obj.insert(QString("ObjectAttributeAction"), ::OpenAPI::toJsonValue(m_object_attribute_action));
    }
    return obj;
}

OAILinkAttributeUpdate_AttributeKey OAIObjectAttributeUpdate::getObjectAttributeKey() const {
    return m_object_attribute_key;
}
void OAIObjectAttributeUpdate::setObjectAttributeKey(const OAILinkAttributeUpdate_AttributeKey &object_attribute_key) {
    m_object_attribute_key = object_attribute_key;
    m_object_attribute_key_isSet = true;
}

bool OAIObjectAttributeUpdate::is_object_attribute_key_Set() const{
    return m_object_attribute_key_isSet;
}

bool OAIObjectAttributeUpdate::is_object_attribute_key_Valid() const{
    return m_object_attribute_key_isValid;
}

OAIObjectAttributeUpdate_ObjectAttributeAction OAIObjectAttributeUpdate::getObjectAttributeAction() const {
    return m_object_attribute_action;
}
void OAIObjectAttributeUpdate::setObjectAttributeAction(const OAIObjectAttributeUpdate_ObjectAttributeAction &object_attribute_action) {
    m_object_attribute_action = object_attribute_action;
    m_object_attribute_action_isSet = true;
}

bool OAIObjectAttributeUpdate::is_object_attribute_action_Set() const{
    return m_object_attribute_action_isSet;
}

bool OAIObjectAttributeUpdate::is_object_attribute_action_Valid() const{
    return m_object_attribute_action_isValid;
}

bool OAIObjectAttributeUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_attribute_key.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_attribute_action.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectAttributeUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
