/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITypedAttributeValueRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITypedAttributeValueRange::OAITypedAttributeValueRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITypedAttributeValueRange::OAITypedAttributeValueRange() {
    this->initializeModel();
}

OAITypedAttributeValueRange::~OAITypedAttributeValueRange() {}

void OAITypedAttributeValueRange::initializeModel() {

    m_start_mode_isSet = false;
    m_start_mode_isValid = false;

    m_start_value_isSet = false;
    m_start_value_isValid = false;

    m_end_mode_isSet = false;
    m_end_mode_isValid = false;

    m_end_value_isSet = false;
    m_end_value_isValid = false;
}

void OAITypedAttributeValueRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITypedAttributeValueRange::fromJsonObject(QJsonObject json) {

    m_start_mode_isValid = ::OpenAPI::fromJsonValue(m_start_mode, json[QString("StartMode")]);
    m_start_mode_isSet = !json[QString("StartMode")].isNull() && m_start_mode_isValid;

    m_start_value_isValid = ::OpenAPI::fromJsonValue(m_start_value, json[QString("StartValue")]);
    m_start_value_isSet = !json[QString("StartValue")].isNull() && m_start_value_isValid;

    m_end_mode_isValid = ::OpenAPI::fromJsonValue(m_end_mode, json[QString("EndMode")]);
    m_end_mode_isSet = !json[QString("EndMode")].isNull() && m_end_mode_isValid;

    m_end_value_isValid = ::OpenAPI::fromJsonValue(m_end_value, json[QString("EndValue")]);
    m_end_value_isSet = !json[QString("EndValue")].isNull() && m_end_value_isValid;
}

QString OAITypedAttributeValueRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITypedAttributeValueRange::asJsonObject() const {
    QJsonObject obj;
    if (m_start_mode.isSet()) {
        obj.insert(QString("StartMode"), ::OpenAPI::toJsonValue(m_start_mode));
    }
    if (m_start_value.isSet()) {
        obj.insert(QString("StartValue"), ::OpenAPI::toJsonValue(m_start_value));
    }
    if (m_end_mode.isSet()) {
        obj.insert(QString("EndMode"), ::OpenAPI::toJsonValue(m_end_mode));
    }
    if (m_end_value.isSet()) {
        obj.insert(QString("EndValue"), ::OpenAPI::toJsonValue(m_end_value));
    }
    return obj;
}

OAIRangeMode OAITypedAttributeValueRange::getStartMode() const {
    return m_start_mode;
}
void OAITypedAttributeValueRange::setStartMode(const OAIRangeMode &start_mode) {
    m_start_mode = start_mode;
    m_start_mode_isSet = true;
}

bool OAITypedAttributeValueRange::is_start_mode_Set() const{
    return m_start_mode_isSet;
}

bool OAITypedAttributeValueRange::is_start_mode_Valid() const{
    return m_start_mode_isValid;
}

OAITypedAttributeValueRange_StartValue OAITypedAttributeValueRange::getStartValue() const {
    return m_start_value;
}
void OAITypedAttributeValueRange::setStartValue(const OAITypedAttributeValueRange_StartValue &start_value) {
    m_start_value = start_value;
    m_start_value_isSet = true;
}

bool OAITypedAttributeValueRange::is_start_value_Set() const{
    return m_start_value_isSet;
}

bool OAITypedAttributeValueRange::is_start_value_Valid() const{
    return m_start_value_isValid;
}

OAIRangeMode OAITypedAttributeValueRange::getEndMode() const {
    return m_end_mode;
}
void OAITypedAttributeValueRange::setEndMode(const OAIRangeMode &end_mode) {
    m_end_mode = end_mode;
    m_end_mode_isSet = true;
}

bool OAITypedAttributeValueRange::is_end_mode_Set() const{
    return m_end_mode_isSet;
}

bool OAITypedAttributeValueRange::is_end_mode_Valid() const{
    return m_end_mode_isValid;
}

OAITypedAttributeValueRange_EndValue OAITypedAttributeValueRange::getEndValue() const {
    return m_end_value;
}
void OAITypedAttributeValueRange::setEndValue(const OAITypedAttributeValueRange_EndValue &end_value) {
    m_end_value = end_value;
    m_end_value_isSet = true;
}

bool OAITypedAttributeValueRange::is_end_value_Set() const{
    return m_end_value_isSet;
}

bool OAITypedAttributeValueRange::is_end_value_Valid() const{
    return m_end_value_isValid;
}

bool OAITypedAttributeValueRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_start_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITypedAttributeValueRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_start_mode_isValid && m_end_mode_isValid && true;
}

} // namespace OpenAPI
