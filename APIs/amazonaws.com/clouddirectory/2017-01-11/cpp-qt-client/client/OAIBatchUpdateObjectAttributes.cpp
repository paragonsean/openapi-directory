/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchUpdateObjectAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchUpdateObjectAttributes::OAIBatchUpdateObjectAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchUpdateObjectAttributes::OAIBatchUpdateObjectAttributes() {
    this->initializeModel();
}

OAIBatchUpdateObjectAttributes::~OAIBatchUpdateObjectAttributes() {}

void OAIBatchUpdateObjectAttributes::initializeModel() {

    m_object_reference_isSet = false;
    m_object_reference_isValid = false;

    m_attribute_updates_isSet = false;
    m_attribute_updates_isValid = false;
}

void OAIBatchUpdateObjectAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchUpdateObjectAttributes::fromJsonObject(QJsonObject json) {

    m_object_reference_isValid = ::OpenAPI::fromJsonValue(m_object_reference, json[QString("ObjectReference")]);
    m_object_reference_isSet = !json[QString("ObjectReference")].isNull() && m_object_reference_isValid;

    m_attribute_updates_isValid = ::OpenAPI::fromJsonValue(m_attribute_updates, json[QString("AttributeUpdates")]);
    m_attribute_updates_isSet = !json[QString("AttributeUpdates")].isNull() && m_attribute_updates_isValid;
}

QString OAIBatchUpdateObjectAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchUpdateObjectAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_object_reference.isSet()) {
        obj.insert(QString("ObjectReference"), ::OpenAPI::toJsonValue(m_object_reference));
    }
    if (m_attribute_updates.isSet()) {
        obj.insert(QString("AttributeUpdates"), ::OpenAPI::toJsonValue(m_attribute_updates));
    }
    return obj;
}

OAIBatchUpdateObjectAttributes_ObjectReference OAIBatchUpdateObjectAttributes::getObjectReference() const {
    return m_object_reference;
}
void OAIBatchUpdateObjectAttributes::setObjectReference(const OAIBatchUpdateObjectAttributes_ObjectReference &object_reference) {
    m_object_reference = object_reference;
    m_object_reference_isSet = true;
}

bool OAIBatchUpdateObjectAttributes::is_object_reference_Set() const{
    return m_object_reference_isSet;
}

bool OAIBatchUpdateObjectAttributes::is_object_reference_Valid() const{
    return m_object_reference_isValid;
}

QList OAIBatchUpdateObjectAttributes::getAttributeUpdates() const {
    return m_attribute_updates;
}
void OAIBatchUpdateObjectAttributes::setAttributeUpdates(const QList &attribute_updates) {
    m_attribute_updates = attribute_updates;
    m_attribute_updates_isSet = true;
}

bool OAIBatchUpdateObjectAttributes::is_attribute_updates_Set() const{
    return m_attribute_updates_isSet;
}

bool OAIBatchUpdateObjectAttributes::is_attribute_updates_Valid() const{
    return m_attribute_updates_isValid;
}

bool OAIBatchUpdateObjectAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchUpdateObjectAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_reference_isValid && m_attribute_updates_isValid && true;
}

} // namespace OpenAPI
