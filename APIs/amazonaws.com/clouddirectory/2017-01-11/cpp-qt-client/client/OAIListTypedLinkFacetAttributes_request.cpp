/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTypedLinkFacetAttributes_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTypedLinkFacetAttributes_request::OAIListTypedLinkFacetAttributes_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTypedLinkFacetAttributes_request::OAIListTypedLinkFacetAttributes_request() {
    this->initializeModel();
}

OAIListTypedLinkFacetAttributes_request::~OAIListTypedLinkFacetAttributes_request() {}

void OAIListTypedLinkFacetAttributes_request::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;
}

void OAIListTypedLinkFacetAttributes_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTypedLinkFacetAttributes_request::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("MaxResults")]);
    m_max_results_isSet = !json[QString("MaxResults")].isNull() && m_max_results_isValid;
}

QString OAIListTypedLinkFacetAttributes_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTypedLinkFacetAttributes_request::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("MaxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    return obj;
}

QString OAIListTypedLinkFacetAttributes_request::getName() const {
    return m_name;
}
void OAIListTypedLinkFacetAttributes_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIListTypedLinkFacetAttributes_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIListTypedLinkFacetAttributes_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIListTypedLinkFacetAttributes_request::getNextToken() const {
    return m_next_token;
}
void OAIListTypedLinkFacetAttributes_request::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListTypedLinkFacetAttributes_request::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListTypedLinkFacetAttributes_request::is_next_token_Valid() const{
    return m_next_token_isValid;
}

qint32 OAIListTypedLinkFacetAttributes_request::getMaxResults() const {
    return m_max_results;
}
void OAIListTypedLinkFacetAttributes_request::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIListTypedLinkFacetAttributes_request::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIListTypedLinkFacetAttributes_request::is_max_results_Valid() const{
    return m_max_results_isValid;
}

bool OAIListTypedLinkFacetAttributes_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTypedLinkFacetAttributes_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
