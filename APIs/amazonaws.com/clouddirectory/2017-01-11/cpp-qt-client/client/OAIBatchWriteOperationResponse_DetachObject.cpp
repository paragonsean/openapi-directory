/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchWriteOperationResponse_DetachObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchWriteOperationResponse_DetachObject::OAIBatchWriteOperationResponse_DetachObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchWriteOperationResponse_DetachObject::OAIBatchWriteOperationResponse_DetachObject() {
    this->initializeModel();
}

OAIBatchWriteOperationResponse_DetachObject::~OAIBatchWriteOperationResponse_DetachObject() {}

void OAIBatchWriteOperationResponse_DetachObject::initializeModel() {

    m_detached_object_identifier_isSet = false;
    m_detached_object_identifier_isValid = false;
}

void OAIBatchWriteOperationResponse_DetachObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchWriteOperationResponse_DetachObject::fromJsonObject(QJsonObject json) {

    m_detached_object_identifier_isValid = ::OpenAPI::fromJsonValue(m_detached_object_identifier, json[QString("detachedObjectIdentifier")]);
    m_detached_object_identifier_isSet = !json[QString("detachedObjectIdentifier")].isNull() && m_detached_object_identifier_isValid;
}

QString OAIBatchWriteOperationResponse_DetachObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchWriteOperationResponse_DetachObject::asJsonObject() const {
    QJsonObject obj;
    if (m_detached_object_identifier_isSet) {
        obj.insert(QString("detachedObjectIdentifier"), ::OpenAPI::toJsonValue(m_detached_object_identifier));
    }
    return obj;
}

QString OAIBatchWriteOperationResponse_DetachObject::getDetachedObjectIdentifier() const {
    return m_detached_object_identifier;
}
void OAIBatchWriteOperationResponse_DetachObject::setDetachedObjectIdentifier(const QString &detached_object_identifier) {
    m_detached_object_identifier = detached_object_identifier;
    m_detached_object_identifier_isSet = true;
}

bool OAIBatchWriteOperationResponse_DetachObject::is_detached_object_identifier_Set() const{
    return m_detached_object_identifier_isSet;
}

bool OAIBatchWriteOperationResponse_DetachObject::is_detached_object_identifier_Valid() const{
    return m_detached_object_identifier_isValid;
}

bool OAIBatchWriteOperationResponse_DetachObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_detached_object_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchWriteOperationResponse_DetachObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
