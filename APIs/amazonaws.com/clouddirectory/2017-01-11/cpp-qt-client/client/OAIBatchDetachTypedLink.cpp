/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchDetachTypedLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchDetachTypedLink::OAIBatchDetachTypedLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchDetachTypedLink::OAIBatchDetachTypedLink() {
    this->initializeModel();
}

OAIBatchDetachTypedLink::~OAIBatchDetachTypedLink() {}

void OAIBatchDetachTypedLink::initializeModel() {

    m_typed_link_specifier_isSet = false;
    m_typed_link_specifier_isValid = false;
}

void OAIBatchDetachTypedLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchDetachTypedLink::fromJsonObject(QJsonObject json) {

    m_typed_link_specifier_isValid = ::OpenAPI::fromJsonValue(m_typed_link_specifier, json[QString("TypedLinkSpecifier")]);
    m_typed_link_specifier_isSet = !json[QString("TypedLinkSpecifier")].isNull() && m_typed_link_specifier_isValid;
}

QString OAIBatchDetachTypedLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchDetachTypedLink::asJsonObject() const {
    QJsonObject obj;
    if (m_typed_link_specifier.isSet()) {
        obj.insert(QString("TypedLinkSpecifier"), ::OpenAPI::toJsonValue(m_typed_link_specifier));
    }
    return obj;
}

OAIBatchDetachTypedLink_TypedLinkSpecifier OAIBatchDetachTypedLink::getTypedLinkSpecifier() const {
    return m_typed_link_specifier;
}
void OAIBatchDetachTypedLink::setTypedLinkSpecifier(const OAIBatchDetachTypedLink_TypedLinkSpecifier &typed_link_specifier) {
    m_typed_link_specifier = typed_link_specifier;
    m_typed_link_specifier_isSet = true;
}

bool OAIBatchDetachTypedLink::is_typed_link_specifier_Set() const{
    return m_typed_link_specifier_isSet;
}

bool OAIBatchDetachTypedLink::is_typed_link_specifier_Valid() const{
    return m_typed_link_specifier_isValid;
}

bool OAIBatchDetachTypedLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_typed_link_specifier.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchDetachTypedLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_typed_link_specifier_isValid && true;
}

} // namespace OpenAPI
