/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpgradePublishedSchemaResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpgradePublishedSchemaResponse::OAIUpgradePublishedSchemaResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpgradePublishedSchemaResponse::OAIUpgradePublishedSchemaResponse() {
    this->initializeModel();
}

OAIUpgradePublishedSchemaResponse::~OAIUpgradePublishedSchemaResponse() {}

void OAIUpgradePublishedSchemaResponse::initializeModel() {

    m_upgraded_schema_arn_isSet = false;
    m_upgraded_schema_arn_isValid = false;
}

void OAIUpgradePublishedSchemaResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpgradePublishedSchemaResponse::fromJsonObject(QJsonObject json) {

    m_upgraded_schema_arn_isValid = ::OpenAPI::fromJsonValue(m_upgraded_schema_arn, json[QString("UpgradedSchemaArn")]);
    m_upgraded_schema_arn_isSet = !json[QString("UpgradedSchemaArn")].isNull() && m_upgraded_schema_arn_isValid;
}

QString OAIUpgradePublishedSchemaResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpgradePublishedSchemaResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_upgraded_schema_arn_isSet) {
        obj.insert(QString("UpgradedSchemaArn"), ::OpenAPI::toJsonValue(m_upgraded_schema_arn));
    }
    return obj;
}

QString OAIUpgradePublishedSchemaResponse::getUpgradedSchemaArn() const {
    return m_upgraded_schema_arn;
}
void OAIUpgradePublishedSchemaResponse::setUpgradedSchemaArn(const QString &upgraded_schema_arn) {
    m_upgraded_schema_arn = upgraded_schema_arn;
    m_upgraded_schema_arn_isSet = true;
}

bool OAIUpgradePublishedSchemaResponse::is_upgraded_schema_arn_Set() const{
    return m_upgraded_schema_arn_isSet;
}

bool OAIUpgradePublishedSchemaResponse::is_upgraded_schema_arn_Valid() const{
    return m_upgraded_schema_arn_isValid;
}

bool OAIUpgradePublishedSchemaResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_upgraded_schema_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpgradePublishedSchemaResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
