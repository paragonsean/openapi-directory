/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateObjectAttributesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateObjectAttributesRequest::OAIUpdateObjectAttributesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateObjectAttributesRequest::OAIUpdateObjectAttributesRequest() {
    this->initializeModel();
}

OAIUpdateObjectAttributesRequest::~OAIUpdateObjectAttributesRequest() {}

void OAIUpdateObjectAttributesRequest::initializeModel() {

    m_object_reference_isSet = false;
    m_object_reference_isValid = false;

    m_attribute_updates_isSet = false;
    m_attribute_updates_isValid = false;
}

void OAIUpdateObjectAttributesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateObjectAttributesRequest::fromJsonObject(QJsonObject json) {

    m_object_reference_isValid = ::OpenAPI::fromJsonValue(m_object_reference, json[QString("ObjectReference")]);
    m_object_reference_isSet = !json[QString("ObjectReference")].isNull() && m_object_reference_isValid;

    m_attribute_updates_isValid = ::OpenAPI::fromJsonValue(m_attribute_updates, json[QString("AttributeUpdates")]);
    m_attribute_updates_isSet = !json[QString("AttributeUpdates")].isNull() && m_attribute_updates_isValid;
}

QString OAIUpdateObjectAttributesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateObjectAttributesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_object_reference.isSet()) {
        obj.insert(QString("ObjectReference"), ::OpenAPI::toJsonValue(m_object_reference));
    }
    if (m_attribute_updates.isSet()) {
        obj.insert(QString("AttributeUpdates"), ::OpenAPI::toJsonValue(m_attribute_updates));
    }
    return obj;
}

OAIBatchDeleteObject_ObjectReference OAIUpdateObjectAttributesRequest::getObjectReference() const {
    return m_object_reference;
}
void OAIUpdateObjectAttributesRequest::setObjectReference(const OAIBatchDeleteObject_ObjectReference &object_reference) {
    m_object_reference = object_reference;
    m_object_reference_isSet = true;
}

bool OAIUpdateObjectAttributesRequest::is_object_reference_Set() const{
    return m_object_reference_isSet;
}

bool OAIUpdateObjectAttributesRequest::is_object_reference_Valid() const{
    return m_object_reference_isValid;
}

QList OAIUpdateObjectAttributesRequest::getAttributeUpdates() const {
    return m_attribute_updates;
}
void OAIUpdateObjectAttributesRequest::setAttributeUpdates(const QList &attribute_updates) {
    m_attribute_updates = attribute_updates;
    m_attribute_updates_isSet = true;
}

bool OAIUpdateObjectAttributesRequest::is_attribute_updates_Set() const{
    return m_attribute_updates_isSet;
}

bool OAIUpdateObjectAttributesRequest::is_attribute_updates_Valid() const{
    return m_attribute_updates_isValid;
}

bool OAIUpdateObjectAttributesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateObjectAttributesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_reference_isValid && m_attribute_updates_isValid && true;
}

} // namespace OpenAPI
