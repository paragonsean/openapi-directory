/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchWriteOperationResponse_CreateObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchWriteOperationResponse_CreateObject::OAIBatchWriteOperationResponse_CreateObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchWriteOperationResponse_CreateObject::OAIBatchWriteOperationResponse_CreateObject() {
    this->initializeModel();
}

OAIBatchWriteOperationResponse_CreateObject::~OAIBatchWriteOperationResponse_CreateObject() {}

void OAIBatchWriteOperationResponse_CreateObject::initializeModel() {

    m_object_identifier_isSet = false;
    m_object_identifier_isValid = false;
}

void OAIBatchWriteOperationResponse_CreateObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchWriteOperationResponse_CreateObject::fromJsonObject(QJsonObject json) {

    m_object_identifier_isValid = ::OpenAPI::fromJsonValue(m_object_identifier, json[QString("ObjectIdentifier")]);
    m_object_identifier_isSet = !json[QString("ObjectIdentifier")].isNull() && m_object_identifier_isValid;
}

QString OAIBatchWriteOperationResponse_CreateObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchWriteOperationResponse_CreateObject::asJsonObject() const {
    QJsonObject obj;
    if (m_object_identifier_isSet) {
        obj.insert(QString("ObjectIdentifier"), ::OpenAPI::toJsonValue(m_object_identifier));
    }
    return obj;
}

QString OAIBatchWriteOperationResponse_CreateObject::getObjectIdentifier() const {
    return m_object_identifier;
}
void OAIBatchWriteOperationResponse_CreateObject::setObjectIdentifier(const QString &object_identifier) {
    m_object_identifier = object_identifier;
    m_object_identifier_isSet = true;
}

bool OAIBatchWriteOperationResponse_CreateObject::is_object_identifier_Set() const{
    return m_object_identifier_isSet;
}

bool OAIBatchWriteOperationResponse_CreateObject::is_object_identifier_Valid() const{
    return m_object_identifier_isValid;
}

bool OAIBatchWriteOperationResponse_CreateObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchWriteOperationResponse_CreateObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
