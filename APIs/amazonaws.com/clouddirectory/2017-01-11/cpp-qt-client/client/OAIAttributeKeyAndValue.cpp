/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributeKeyAndValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributeKeyAndValue::OAIAttributeKeyAndValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributeKeyAndValue::OAIAttributeKeyAndValue() {
    this->initializeModel();
}

OAIAttributeKeyAndValue::~OAIAttributeKeyAndValue() {}

void OAIAttributeKeyAndValue::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIAttributeKeyAndValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributeKeyAndValue::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("Key")]);
    m_key_isSet = !json[QString("Key")].isNull() && m_key_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAIAttributeKeyAndValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributeKeyAndValue::asJsonObject() const {
    QJsonObject obj;
    if (m_key.isSet()) {
        obj.insert(QString("Key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_value.isSet()) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

OAIAttributeKeyAndValue_Key OAIAttributeKeyAndValue::getKey() const {
    return m_key;
}
void OAIAttributeKeyAndValue::setKey(const OAIAttributeKeyAndValue_Key &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIAttributeKeyAndValue::is_key_Set() const{
    return m_key_isSet;
}

bool OAIAttributeKeyAndValue::is_key_Valid() const{
    return m_key_isValid;
}

OAIAttributeKeyAndValue_Value OAIAttributeKeyAndValue::getValue() const {
    return m_value;
}
void OAIAttributeKeyAndValue::setValue(const OAIAttributeKeyAndValue_Value &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIAttributeKeyAndValue::is_value_Set() const{
    return m_value_isSet;
}

bool OAIAttributeKeyAndValue::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIAttributeKeyAndValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributeKeyAndValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_key_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
