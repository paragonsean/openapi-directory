/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateTypedLinkFacet_request_Facet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateTypedLinkFacet_request_Facet::OAICreateTypedLinkFacet_request_Facet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateTypedLinkFacet_request_Facet::OAICreateTypedLinkFacet_request_Facet() {
    this->initializeModel();
}

OAICreateTypedLinkFacet_request_Facet::~OAICreateTypedLinkFacet_request_Facet() {}

void OAICreateTypedLinkFacet_request_Facet::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_identity_attribute_order_isSet = false;
    m_identity_attribute_order_isValid = false;
}

void OAICreateTypedLinkFacet_request_Facet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateTypedLinkFacet_request_Facet::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("Attributes")]);
    m_attributes_isSet = !json[QString("Attributes")].isNull() && m_attributes_isValid;

    m_identity_attribute_order_isValid = ::OpenAPI::fromJsonValue(m_identity_attribute_order, json[QString("IdentityAttributeOrder")]);
    m_identity_attribute_order_isSet = !json[QString("IdentityAttributeOrder")].isNull() && m_identity_attribute_order_isValid;
}

QString OAICreateTypedLinkFacet_request_Facet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateTypedLinkFacet_request_Facet::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_attributes.isSet()) {
        obj.insert(QString("Attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_identity_attribute_order.isSet()) {
        obj.insert(QString("IdentityAttributeOrder"), ::OpenAPI::toJsonValue(m_identity_attribute_order));
    }
    return obj;
}

QString OAICreateTypedLinkFacet_request_Facet::getName() const {
    return m_name;
}
void OAICreateTypedLinkFacet_request_Facet::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateTypedLinkFacet_request_Facet::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateTypedLinkFacet_request_Facet::is_name_Valid() const{
    return m_name_isValid;
}

QList OAICreateTypedLinkFacet_request_Facet::getAttributes() const {
    return m_attributes;
}
void OAICreateTypedLinkFacet_request_Facet::setAttributes(const QList &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAICreateTypedLinkFacet_request_Facet::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAICreateTypedLinkFacet_request_Facet::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QList OAICreateTypedLinkFacet_request_Facet::getIdentityAttributeOrder() const {
    return m_identity_attribute_order;
}
void OAICreateTypedLinkFacet_request_Facet::setIdentityAttributeOrder(const QList &identity_attribute_order) {
    m_identity_attribute_order = identity_attribute_order;
    m_identity_attribute_order_isSet = true;
}

bool OAICreateTypedLinkFacet_request_Facet::is_identity_attribute_order_Set() const{
    return m_identity_attribute_order_isSet;
}

bool OAICreateTypedLinkFacet_request_Facet::is_identity_attribute_order_Valid() const{
    return m_identity_attribute_order_isValid;
}

bool OAICreateTypedLinkFacet_request_Facet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity_attribute_order.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateTypedLinkFacet_request_Facet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
