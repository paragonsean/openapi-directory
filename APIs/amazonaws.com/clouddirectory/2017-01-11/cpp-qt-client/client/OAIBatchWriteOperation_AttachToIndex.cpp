/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchWriteOperation_AttachToIndex.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchWriteOperation_AttachToIndex::OAIBatchWriteOperation_AttachToIndex(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchWriteOperation_AttachToIndex::OAIBatchWriteOperation_AttachToIndex() {
    this->initializeModel();
}

OAIBatchWriteOperation_AttachToIndex::~OAIBatchWriteOperation_AttachToIndex() {}

void OAIBatchWriteOperation_AttachToIndex::initializeModel() {

    m_index_reference_isSet = false;
    m_index_reference_isValid = false;

    m_target_reference_isSet = false;
    m_target_reference_isValid = false;
}

void OAIBatchWriteOperation_AttachToIndex::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchWriteOperation_AttachToIndex::fromJsonObject(QJsonObject json) {

    m_index_reference_isValid = ::OpenAPI::fromJsonValue(m_index_reference, json[QString("IndexReference")]);
    m_index_reference_isSet = !json[QString("IndexReference")].isNull() && m_index_reference_isValid;

    m_target_reference_isValid = ::OpenAPI::fromJsonValue(m_target_reference, json[QString("TargetReference")]);
    m_target_reference_isSet = !json[QString("TargetReference")].isNull() && m_target_reference_isValid;
}

QString OAIBatchWriteOperation_AttachToIndex::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchWriteOperation_AttachToIndex::asJsonObject() const {
    QJsonObject obj;
    if (m_index_reference.isSet()) {
        obj.insert(QString("IndexReference"), ::OpenAPI::toJsonValue(m_index_reference));
    }
    if (m_target_reference.isSet()) {
        obj.insert(QString("TargetReference"), ::OpenAPI::toJsonValue(m_target_reference));
    }
    return obj;
}

OAIAttachToIndexRequest_IndexReference OAIBatchWriteOperation_AttachToIndex::getIndexReference() const {
    return m_index_reference;
}
void OAIBatchWriteOperation_AttachToIndex::setIndexReference(const OAIAttachToIndexRequest_IndexReference &index_reference) {
    m_index_reference = index_reference;
    m_index_reference_isSet = true;
}

bool OAIBatchWriteOperation_AttachToIndex::is_index_reference_Set() const{
    return m_index_reference_isSet;
}

bool OAIBatchWriteOperation_AttachToIndex::is_index_reference_Valid() const{
    return m_index_reference_isValid;
}

OAIAttachToIndexRequest_TargetReference OAIBatchWriteOperation_AttachToIndex::getTargetReference() const {
    return m_target_reference;
}
void OAIBatchWriteOperation_AttachToIndex::setTargetReference(const OAIAttachToIndexRequest_TargetReference &target_reference) {
    m_target_reference = target_reference;
    m_target_reference_isSet = true;
}

bool OAIBatchWriteOperation_AttachToIndex::is_target_reference_Set() const{
    return m_target_reference_isSet;
}

bool OAIBatchWriteOperation_AttachToIndex::is_target_reference_Valid() const{
    return m_target_reference_isValid;
}

bool OAIBatchWriteOperation_AttachToIndex::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchWriteOperation_AttachToIndex::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_index_reference_isValid && m_target_reference_isValid && true;
}

} // namespace OpenAPI
