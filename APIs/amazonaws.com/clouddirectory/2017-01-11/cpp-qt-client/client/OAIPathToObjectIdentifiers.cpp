/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPathToObjectIdentifiers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPathToObjectIdentifiers::OAIPathToObjectIdentifiers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPathToObjectIdentifiers::OAIPathToObjectIdentifiers() {
    this->initializeModel();
}

OAIPathToObjectIdentifiers::~OAIPathToObjectIdentifiers() {}

void OAIPathToObjectIdentifiers::initializeModel() {

    m_path_isSet = false;
    m_path_isValid = false;

    m_object_identifiers_isSet = false;
    m_object_identifiers_isValid = false;
}

void OAIPathToObjectIdentifiers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPathToObjectIdentifiers::fromJsonObject(QJsonObject json) {

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("Path")]);
    m_path_isSet = !json[QString("Path")].isNull() && m_path_isValid;

    m_object_identifiers_isValid = ::OpenAPI::fromJsonValue(m_object_identifiers, json[QString("ObjectIdentifiers")]);
    m_object_identifiers_isSet = !json[QString("ObjectIdentifiers")].isNull() && m_object_identifiers_isValid;
}

QString OAIPathToObjectIdentifiers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPathToObjectIdentifiers::asJsonObject() const {
    QJsonObject obj;
    if (m_path_isSet) {
        obj.insert(QString("Path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_object_identifiers.isSet()) {
        obj.insert(QString("ObjectIdentifiers"), ::OpenAPI::toJsonValue(m_object_identifiers));
    }
    return obj;
}

QString OAIPathToObjectIdentifiers::getPath() const {
    return m_path;
}
void OAIPathToObjectIdentifiers::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIPathToObjectIdentifiers::is_path_Set() const{
    return m_path_isSet;
}

bool OAIPathToObjectIdentifiers::is_path_Valid() const{
    return m_path_isValid;
}

QList OAIPathToObjectIdentifiers::getObjectIdentifiers() const {
    return m_object_identifiers;
}
void OAIPathToObjectIdentifiers::setObjectIdentifiers(const QList &object_identifiers) {
    m_object_identifiers = object_identifiers;
    m_object_identifiers_isSet = true;
}

bool OAIPathToObjectIdentifiers::is_object_identifiers_Set() const{
    return m_object_identifiers_isSet;
}

bool OAIPathToObjectIdentifiers::is_object_identifiers_Valid() const{
    return m_object_identifiers_isValid;
}

bool OAIPathToObjectIdentifiers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_identifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPathToObjectIdentifiers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
