/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference() {
    this->initializeModel();
}

OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::~OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference() {}

void OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::initializeModel() {

    m_selector_isSet = false;
    m_selector_isValid = false;
}

void OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::fromJsonObject(QJsonObject json) {

    m_selector_isValid = ::OpenAPI::fromJsonValue(m_selector, json[QString("Selector")]);
    m_selector_isSet = !json[QString("Selector")].isNull() && m_selector_isValid;
}

QString OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::asJsonObject() const {
    QJsonObject obj;
    if (m_selector_isSet) {
        obj.insert(QString("Selector"), ::OpenAPI::toJsonValue(m_selector));
    }
    return obj;
}

QString OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::getSelector() const {
    return m_selector;
}
void OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::setSelector(const QString &selector) {
    m_selector = selector;
    m_selector_isSet = true;
}

bool OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::is_selector_Set() const{
    return m_selector_isSet;
}

bool OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::is_selector_Valid() const{
    return m_selector_isValid;
}

bool OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_selector_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
