/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectAttributeRange_AttributeKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectAttributeRange_AttributeKey::OAIObjectAttributeRange_AttributeKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectAttributeRange_AttributeKey::OAIObjectAttributeRange_AttributeKey() {
    this->initializeModel();
}

OAIObjectAttributeRange_AttributeKey::~OAIObjectAttributeRange_AttributeKey() {}

void OAIObjectAttributeRange_AttributeKey::initializeModel() {

    m_schema_arn_isSet = false;
    m_schema_arn_isValid = false;

    m_facet_name_isSet = false;
    m_facet_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIObjectAttributeRange_AttributeKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectAttributeRange_AttributeKey::fromJsonObject(QJsonObject json) {

    m_schema_arn_isValid = ::OpenAPI::fromJsonValue(m_schema_arn, json[QString("SchemaArn")]);
    m_schema_arn_isSet = !json[QString("SchemaArn")].isNull() && m_schema_arn_isValid;

    m_facet_name_isValid = ::OpenAPI::fromJsonValue(m_facet_name, json[QString("FacetName")]);
    m_facet_name_isSet = !json[QString("FacetName")].isNull() && m_facet_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIObjectAttributeRange_AttributeKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectAttributeRange_AttributeKey::asJsonObject() const {
    QJsonObject obj;
    if (m_schema_arn_isSet) {
        obj.insert(QString("SchemaArn"), ::OpenAPI::toJsonValue(m_schema_arn));
    }
    if (m_facet_name_isSet) {
        obj.insert(QString("FacetName"), ::OpenAPI::toJsonValue(m_facet_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIObjectAttributeRange_AttributeKey::getSchemaArn() const {
    return m_schema_arn;
}
void OAIObjectAttributeRange_AttributeKey::setSchemaArn(const QString &schema_arn) {
    m_schema_arn = schema_arn;
    m_schema_arn_isSet = true;
}

bool OAIObjectAttributeRange_AttributeKey::is_schema_arn_Set() const{
    return m_schema_arn_isSet;
}

bool OAIObjectAttributeRange_AttributeKey::is_schema_arn_Valid() const{
    return m_schema_arn_isValid;
}

QString OAIObjectAttributeRange_AttributeKey::getFacetName() const {
    return m_facet_name;
}
void OAIObjectAttributeRange_AttributeKey::setFacetName(const QString &facet_name) {
    m_facet_name = facet_name;
    m_facet_name_isSet = true;
}

bool OAIObjectAttributeRange_AttributeKey::is_facet_name_Set() const{
    return m_facet_name_isSet;
}

bool OAIObjectAttributeRange_AttributeKey::is_facet_name_Valid() const{
    return m_facet_name_isValid;
}

QString OAIObjectAttributeRange_AttributeKey::getName() const {
    return m_name;
}
void OAIObjectAttributeRange_AttributeKey::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIObjectAttributeRange_AttributeKey::is_name_Set() const{
    return m_name_isSet;
}

bool OAIObjectAttributeRange_AttributeKey::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIObjectAttributeRange_AttributeKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schema_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facet_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectAttributeRange_AttributeKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schema_arn_isValid && m_facet_name_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
