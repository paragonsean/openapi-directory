/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFacetAttribute_AttributeDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFacetAttribute_AttributeDefinition::OAIFacetAttribute_AttributeDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFacetAttribute_AttributeDefinition::OAIFacetAttribute_AttributeDefinition() {
    this->initializeModel();
}

OAIFacetAttribute_AttributeDefinition::~OAIFacetAttribute_AttributeDefinition() {}

void OAIFacetAttribute_AttributeDefinition::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_default_value_isSet = false;
    m_default_value_isValid = false;

    m_is_immutable_isSet = false;
    m_is_immutable_isValid = false;

    m_rules_isSet = false;
    m_rules_isValid = false;
}

void OAIFacetAttribute_AttributeDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFacetAttribute_AttributeDefinition::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_default_value_isValid = ::OpenAPI::fromJsonValue(m_default_value, json[QString("DefaultValue")]);
    m_default_value_isSet = !json[QString("DefaultValue")].isNull() && m_default_value_isValid;

    m_is_immutable_isValid = ::OpenAPI::fromJsonValue(m_is_immutable, json[QString("IsImmutable")]);
    m_is_immutable_isSet = !json[QString("IsImmutable")].isNull() && m_is_immutable_isValid;

    m_rules_isValid = ::OpenAPI::fromJsonValue(m_rules, json[QString("Rules")]);
    m_rules_isSet = !json[QString("Rules")].isNull() && m_rules_isValid;
}

QString OAIFacetAttribute_AttributeDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFacetAttribute_AttributeDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_default_value.isSet()) {
        obj.insert(QString("DefaultValue"), ::OpenAPI::toJsonValue(m_default_value));
    }
    if (m_is_immutable_isSet) {
        obj.insert(QString("IsImmutable"), ::OpenAPI::toJsonValue(m_is_immutable));
    }
    if (m_rules.isSet()) {
        obj.insert(QString("Rules"), ::OpenAPI::toJsonValue(m_rules));
    }
    return obj;
}

OAIFacetAttributeType OAIFacetAttribute_AttributeDefinition::getType() const {
    return m_type;
}
void OAIFacetAttribute_AttributeDefinition::setType(const OAIFacetAttributeType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIFacetAttribute_AttributeDefinition::is_type_Set() const{
    return m_type_isSet;
}

bool OAIFacetAttribute_AttributeDefinition::is_type_Valid() const{
    return m_type_isValid;
}

OAIFacetAttributeDefinition_DefaultValue OAIFacetAttribute_AttributeDefinition::getDefaultValue() const {
    return m_default_value;
}
void OAIFacetAttribute_AttributeDefinition::setDefaultValue(const OAIFacetAttributeDefinition_DefaultValue &default_value) {
    m_default_value = default_value;
    m_default_value_isSet = true;
}

bool OAIFacetAttribute_AttributeDefinition::is_default_value_Set() const{
    return m_default_value_isSet;
}

bool OAIFacetAttribute_AttributeDefinition::is_default_value_Valid() const{
    return m_default_value_isValid;
}

bool OAIFacetAttribute_AttributeDefinition::getIsImmutable() const {
    return m_is_immutable;
}
void OAIFacetAttribute_AttributeDefinition::setIsImmutable(const bool &is_immutable) {
    m_is_immutable = is_immutable;
    m_is_immutable_isSet = true;
}

bool OAIFacetAttribute_AttributeDefinition::is_is_immutable_Set() const{
    return m_is_immutable_isSet;
}

bool OAIFacetAttribute_AttributeDefinition::is_is_immutable_Valid() const{
    return m_is_immutable_isValid;
}

QMap OAIFacetAttribute_AttributeDefinition::getRules() const {
    return m_rules;
}
void OAIFacetAttribute_AttributeDefinition::setRules(const QMap &rules) {
    m_rules = rules;
    m_rules_isSet = true;
}

bool OAIFacetAttribute_AttributeDefinition::is_rules_Set() const{
    return m_rules_isSet;
}

bool OAIFacetAttribute_AttributeDefinition::is_rules_Valid() const{
    return m_rules_isValid;
}

bool OAIFacetAttribute_AttributeDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_immutable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFacetAttribute_AttributeDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && true;
}

} // namespace OpenAPI
