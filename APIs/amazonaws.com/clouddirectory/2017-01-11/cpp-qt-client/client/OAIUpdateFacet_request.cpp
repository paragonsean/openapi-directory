/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateFacet_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateFacet_request::OAIUpdateFacet_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateFacet_request::OAIUpdateFacet_request() {
    this->initializeModel();
}

OAIUpdateFacet_request::~OAIUpdateFacet_request() {}

void OAIUpdateFacet_request::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_attribute_updates_isSet = false;
    m_attribute_updates_isValid = false;

    m_object_type_isSet = false;
    m_object_type_isValid = false;
}

void OAIUpdateFacet_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateFacet_request::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_attribute_updates_isValid = ::OpenAPI::fromJsonValue(m_attribute_updates, json[QString("AttributeUpdates")]);
    m_attribute_updates_isSet = !json[QString("AttributeUpdates")].isNull() && m_attribute_updates_isValid;

    m_object_type_isValid = ::OpenAPI::fromJsonValue(m_object_type, json[QString("ObjectType")]);
    m_object_type_isSet = !json[QString("ObjectType")].isNull() && m_object_type_isValid;
}

QString OAIUpdateFacet_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateFacet_request::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_attribute_updates.size() > 0) {
        obj.insert(QString("AttributeUpdates"), ::OpenAPI::toJsonValue(m_attribute_updates));
    }
    if (m_object_type_isSet) {
        obj.insert(QString("ObjectType"), ::OpenAPI::toJsonValue(m_object_type));
    }
    return obj;
}

QString OAIUpdateFacet_request::getName() const {
    return m_name;
}
void OAIUpdateFacet_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateFacet_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateFacet_request::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIFacetAttributeUpdate> OAIUpdateFacet_request::getAttributeUpdates() const {
    return m_attribute_updates;
}
void OAIUpdateFacet_request::setAttributeUpdates(const QList<OAIFacetAttributeUpdate> &attribute_updates) {
    m_attribute_updates = attribute_updates;
    m_attribute_updates_isSet = true;
}

bool OAIUpdateFacet_request::is_attribute_updates_Set() const{
    return m_attribute_updates_isSet;
}

bool OAIUpdateFacet_request::is_attribute_updates_Valid() const{
    return m_attribute_updates_isValid;
}

QString OAIUpdateFacet_request::getObjectType() const {
    return m_object_type;
}
void OAIUpdateFacet_request::setObjectType(const QString &object_type) {
    m_object_type = object_type;
    m_object_type_isSet = true;
}

bool OAIUpdateFacet_request::is_object_type_Set() const{
    return m_object_type_isSet;
}

bool OAIUpdateFacet_request::is_object_type_Valid() const{
    return m_object_type_isValid;
}

bool OAIUpdateFacet_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_updates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateFacet_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
