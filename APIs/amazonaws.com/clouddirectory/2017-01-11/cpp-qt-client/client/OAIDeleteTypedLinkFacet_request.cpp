/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteTypedLinkFacet_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteTypedLinkFacet_request::OAIDeleteTypedLinkFacet_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteTypedLinkFacet_request::OAIDeleteTypedLinkFacet_request() {
    this->initializeModel();
}

OAIDeleteTypedLinkFacet_request::~OAIDeleteTypedLinkFacet_request() {}

void OAIDeleteTypedLinkFacet_request::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIDeleteTypedLinkFacet_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteTypedLinkFacet_request::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIDeleteTypedLinkFacet_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteTypedLinkFacet_request::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIDeleteTypedLinkFacet_request::getName() const {
    return m_name;
}
void OAIDeleteTypedLinkFacet_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDeleteTypedLinkFacet_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDeleteTypedLinkFacet_request::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIDeleteTypedLinkFacet_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteTypedLinkFacet_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
