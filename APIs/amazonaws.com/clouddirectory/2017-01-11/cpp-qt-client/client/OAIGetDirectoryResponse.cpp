/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetDirectoryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetDirectoryResponse::OAIGetDirectoryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetDirectoryResponse::OAIGetDirectoryResponse() {
    this->initializeModel();
}

OAIGetDirectoryResponse::~OAIGetDirectoryResponse() {}

void OAIGetDirectoryResponse::initializeModel() {

    m_directory_isSet = false;
    m_directory_isValid = false;
}

void OAIGetDirectoryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetDirectoryResponse::fromJsonObject(QJsonObject json) {

    m_directory_isValid = ::OpenAPI::fromJsonValue(m_directory, json[QString("Directory")]);
    m_directory_isSet = !json[QString("Directory")].isNull() && m_directory_isValid;
}

QString OAIGetDirectoryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetDirectoryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_directory.isSet()) {
        obj.insert(QString("Directory"), ::OpenAPI::toJsonValue(m_directory));
    }
    return obj;
}

OAIGetDirectoryResponse_Directory OAIGetDirectoryResponse::getDirectory() const {
    return m_directory;
}
void OAIGetDirectoryResponse::setDirectory(const OAIGetDirectoryResponse_Directory &directory) {
    m_directory = directory;
    m_directory_isSet = true;
}

bool OAIGetDirectoryResponse::is_directory_Set() const{
    return m_directory_isSet;
}

bool OAIGetDirectoryResponse::is_directory_Valid() const{
    return m_directory_isValid;
}

bool OAIGetDirectoryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_directory.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetDirectoryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_directory_isValid && true;
}

} // namespace OpenAPI
