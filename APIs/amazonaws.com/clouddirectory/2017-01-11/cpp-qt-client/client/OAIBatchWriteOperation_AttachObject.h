/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchWriteOperation_AttachObject.h
 *
 * 
 */

#ifndef OAIBatchWriteOperation_AttachObject_H
#define OAIBatchWriteOperation_AttachObject_H

#include <QJsonObject>

#include "OAIAttachObjectRequest_ParentReference.h"
#include "OAIBatchAttachObject_ChildReference.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachObjectRequest_ParentReference;
class OAIBatchAttachObject_ChildReference;

class OAIBatchWriteOperation_AttachObject : public OAIObject {
public:
    OAIBatchWriteOperation_AttachObject();
    OAIBatchWriteOperation_AttachObject(QString json);
    ~OAIBatchWriteOperation_AttachObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAttachObjectRequest_ParentReference getParentReference() const;
    void setParentReference(const OAIAttachObjectRequest_ParentReference &parent_reference);
    bool is_parent_reference_Set() const;
    bool is_parent_reference_Valid() const;

    OAIBatchAttachObject_ChildReference getChildReference() const;
    void setChildReference(const OAIBatchAttachObject_ChildReference &child_reference);
    bool is_child_reference_Set() const;
    bool is_child_reference_Valid() const;

    QString getLinkName() const;
    void setLinkName(const QString &link_name);
    bool is_link_name_Set() const;
    bool is_link_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAttachObjectRequest_ParentReference m_parent_reference;
    bool m_parent_reference_isSet;
    bool m_parent_reference_isValid;

    OAIBatchAttachObject_ChildReference m_child_reference;
    bool m_child_reference_isSet;
    bool m_child_reference_isValid;

    QString m_link_name;
    bool m_link_name_isSet;
    bool m_link_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchWriteOperation_AttachObject)

#endif // OAIBatchWriteOperation_AttachObject_H
