/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttachTypedLink_request_TypedLinkFacet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttachTypedLink_request_TypedLinkFacet::OAIAttachTypedLink_request_TypedLinkFacet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttachTypedLink_request_TypedLinkFacet::OAIAttachTypedLink_request_TypedLinkFacet() {
    this->initializeModel();
}

OAIAttachTypedLink_request_TypedLinkFacet::~OAIAttachTypedLink_request_TypedLinkFacet() {}

void OAIAttachTypedLink_request_TypedLinkFacet::initializeModel() {

    m_schema_arn_isSet = false;
    m_schema_arn_isValid = false;

    m_typed_link_name_isSet = false;
    m_typed_link_name_isValid = false;
}

void OAIAttachTypedLink_request_TypedLinkFacet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttachTypedLink_request_TypedLinkFacet::fromJsonObject(QJsonObject json) {

    m_schema_arn_isValid = ::OpenAPI::fromJsonValue(m_schema_arn, json[QString("SchemaArn")]);
    m_schema_arn_isSet = !json[QString("SchemaArn")].isNull() && m_schema_arn_isValid;

    m_typed_link_name_isValid = ::OpenAPI::fromJsonValue(m_typed_link_name, json[QString("TypedLinkName")]);
    m_typed_link_name_isSet = !json[QString("TypedLinkName")].isNull() && m_typed_link_name_isValid;
}

QString OAIAttachTypedLink_request_TypedLinkFacet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttachTypedLink_request_TypedLinkFacet::asJsonObject() const {
    QJsonObject obj;
    if (m_schema_arn_isSet) {
        obj.insert(QString("SchemaArn"), ::OpenAPI::toJsonValue(m_schema_arn));
    }
    if (m_typed_link_name_isSet) {
        obj.insert(QString("TypedLinkName"), ::OpenAPI::toJsonValue(m_typed_link_name));
    }
    return obj;
}

QString OAIAttachTypedLink_request_TypedLinkFacet::getSchemaArn() const {
    return m_schema_arn;
}
void OAIAttachTypedLink_request_TypedLinkFacet::setSchemaArn(const QString &schema_arn) {
    m_schema_arn = schema_arn;
    m_schema_arn_isSet = true;
}

bool OAIAttachTypedLink_request_TypedLinkFacet::is_schema_arn_Set() const{
    return m_schema_arn_isSet;
}

bool OAIAttachTypedLink_request_TypedLinkFacet::is_schema_arn_Valid() const{
    return m_schema_arn_isValid;
}

QString OAIAttachTypedLink_request_TypedLinkFacet::getTypedLinkName() const {
    return m_typed_link_name;
}
void OAIAttachTypedLink_request_TypedLinkFacet::setTypedLinkName(const QString &typed_link_name) {
    m_typed_link_name = typed_link_name;
    m_typed_link_name_isSet = true;
}

bool OAIAttachTypedLink_request_TypedLinkFacet::is_typed_link_name_Set() const{
    return m_typed_link_name_isSet;
}

bool OAIAttachTypedLink_request_TypedLinkFacet::is_typed_link_name_Valid() const{
    return m_typed_link_name_isValid;
}

bool OAIAttachTypedLink_request_TypedLinkFacet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schema_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_typed_link_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttachTypedLink_request_TypedLinkFacet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
