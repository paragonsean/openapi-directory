/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchListIncomingTypedLinksResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchListIncomingTypedLinksResponse::OAIBatchListIncomingTypedLinksResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchListIncomingTypedLinksResponse::OAIBatchListIncomingTypedLinksResponse() {
    this->initializeModel();
}

OAIBatchListIncomingTypedLinksResponse::~OAIBatchListIncomingTypedLinksResponse() {}

void OAIBatchListIncomingTypedLinksResponse::initializeModel() {

    m_link_specifiers_isSet = false;
    m_link_specifiers_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIBatchListIncomingTypedLinksResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchListIncomingTypedLinksResponse::fromJsonObject(QJsonObject json) {

    m_link_specifiers_isValid = ::OpenAPI::fromJsonValue(m_link_specifiers, json[QString("LinkSpecifiers")]);
    m_link_specifiers_isSet = !json[QString("LinkSpecifiers")].isNull() && m_link_specifiers_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIBatchListIncomingTypedLinksResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchListIncomingTypedLinksResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_link_specifiers.isSet()) {
        obj.insert(QString("LinkSpecifiers"), ::OpenAPI::toJsonValue(m_link_specifiers));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIBatchListIncomingTypedLinksResponse::getLinkSpecifiers() const {
    return m_link_specifiers;
}
void OAIBatchListIncomingTypedLinksResponse::setLinkSpecifiers(const QList &link_specifiers) {
    m_link_specifiers = link_specifiers;
    m_link_specifiers_isSet = true;
}

bool OAIBatchListIncomingTypedLinksResponse::is_link_specifiers_Set() const{
    return m_link_specifiers_isSet;
}

bool OAIBatchListIncomingTypedLinksResponse::is_link_specifiers_Valid() const{
    return m_link_specifiers_isValid;
}

QString OAIBatchListIncomingTypedLinksResponse::getNextToken() const {
    return m_next_token;
}
void OAIBatchListIncomingTypedLinksResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIBatchListIncomingTypedLinksResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIBatchListIncomingTypedLinksResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIBatchListIncomingTypedLinksResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_link_specifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchListIncomingTypedLinksResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
