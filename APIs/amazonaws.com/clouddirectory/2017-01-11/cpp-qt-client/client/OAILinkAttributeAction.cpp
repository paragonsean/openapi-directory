/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkAttributeAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkAttributeAction::OAILinkAttributeAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkAttributeAction::OAILinkAttributeAction() {
    this->initializeModel();
}

OAILinkAttributeAction::~OAILinkAttributeAction() {}

void OAILinkAttributeAction::initializeModel() {

    m_attribute_action_type_isSet = false;
    m_attribute_action_type_isValid = false;

    m_attribute_update_value_isSet = false;
    m_attribute_update_value_isValid = false;
}

void OAILinkAttributeAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkAttributeAction::fromJsonObject(QJsonObject json) {

    m_attribute_action_type_isValid = ::OpenAPI::fromJsonValue(m_attribute_action_type, json[QString("AttributeActionType")]);
    m_attribute_action_type_isSet = !json[QString("AttributeActionType")].isNull() && m_attribute_action_type_isValid;

    m_attribute_update_value_isValid = ::OpenAPI::fromJsonValue(m_attribute_update_value, json[QString("AttributeUpdateValue")]);
    m_attribute_update_value_isSet = !json[QString("AttributeUpdateValue")].isNull() && m_attribute_update_value_isValid;
}

QString OAILinkAttributeAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkAttributeAction::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_action_type.isSet()) {
        obj.insert(QString("AttributeActionType"), ::OpenAPI::toJsonValue(m_attribute_action_type));
    }
    if (m_attribute_update_value.isSet()) {
        obj.insert(QString("AttributeUpdateValue"), ::OpenAPI::toJsonValue(m_attribute_update_value));
    }
    return obj;
}

OAIUpdateActionType OAILinkAttributeAction::getAttributeActionType() const {
    return m_attribute_action_type;
}
void OAILinkAttributeAction::setAttributeActionType(const OAIUpdateActionType &attribute_action_type) {
    m_attribute_action_type = attribute_action_type;
    m_attribute_action_type_isSet = true;
}

bool OAILinkAttributeAction::is_attribute_action_type_Set() const{
    return m_attribute_action_type_isSet;
}

bool OAILinkAttributeAction::is_attribute_action_type_Valid() const{
    return m_attribute_action_type_isValid;
}

OAILinkAttributeAction_AttributeUpdateValue OAILinkAttributeAction::getAttributeUpdateValue() const {
    return m_attribute_update_value;
}
void OAILinkAttributeAction::setAttributeUpdateValue(const OAILinkAttributeAction_AttributeUpdateValue &attribute_update_value) {
    m_attribute_update_value = attribute_update_value;
    m_attribute_update_value_isSet = true;
}

bool OAILinkAttributeAction::is_attribute_update_value_Set() const{
    return m_attribute_update_value_isSet;
}

bool OAILinkAttributeAction::is_attribute_update_value_Valid() const{
    return m_attribute_update_value_isValid;
}

bool OAILinkAttributeAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_action_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_update_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkAttributeAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
