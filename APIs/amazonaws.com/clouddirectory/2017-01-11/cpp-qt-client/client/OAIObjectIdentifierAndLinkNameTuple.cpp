/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectIdentifierAndLinkNameTuple.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectIdentifierAndLinkNameTuple::OAIObjectIdentifierAndLinkNameTuple(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectIdentifierAndLinkNameTuple::OAIObjectIdentifierAndLinkNameTuple() {
    this->initializeModel();
}

OAIObjectIdentifierAndLinkNameTuple::~OAIObjectIdentifierAndLinkNameTuple() {}

void OAIObjectIdentifierAndLinkNameTuple::initializeModel() {

    m_object_identifier_isSet = false;
    m_object_identifier_isValid = false;

    m_link_name_isSet = false;
    m_link_name_isValid = false;
}

void OAIObjectIdentifierAndLinkNameTuple::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectIdentifierAndLinkNameTuple::fromJsonObject(QJsonObject json) {

    m_object_identifier_isValid = ::OpenAPI::fromJsonValue(m_object_identifier, json[QString("ObjectIdentifier")]);
    m_object_identifier_isSet = !json[QString("ObjectIdentifier")].isNull() && m_object_identifier_isValid;

    m_link_name_isValid = ::OpenAPI::fromJsonValue(m_link_name, json[QString("LinkName")]);
    m_link_name_isSet = !json[QString("LinkName")].isNull() && m_link_name_isValid;
}

QString OAIObjectIdentifierAndLinkNameTuple::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectIdentifierAndLinkNameTuple::asJsonObject() const {
    QJsonObject obj;
    if (m_object_identifier_isSet) {
        obj.insert(QString("ObjectIdentifier"), ::OpenAPI::toJsonValue(m_object_identifier));
    }
    if (m_link_name_isSet) {
        obj.insert(QString("LinkName"), ::OpenAPI::toJsonValue(m_link_name));
    }
    return obj;
}

QString OAIObjectIdentifierAndLinkNameTuple::getObjectIdentifier() const {
    return m_object_identifier;
}
void OAIObjectIdentifierAndLinkNameTuple::setObjectIdentifier(const QString &object_identifier) {
    m_object_identifier = object_identifier;
    m_object_identifier_isSet = true;
}

bool OAIObjectIdentifierAndLinkNameTuple::is_object_identifier_Set() const{
    return m_object_identifier_isSet;
}

bool OAIObjectIdentifierAndLinkNameTuple::is_object_identifier_Valid() const{
    return m_object_identifier_isValid;
}

QString OAIObjectIdentifierAndLinkNameTuple::getLinkName() const {
    return m_link_name;
}
void OAIObjectIdentifierAndLinkNameTuple::setLinkName(const QString &link_name) {
    m_link_name = link_name;
    m_link_name_isSet = true;
}

bool OAIObjectIdentifierAndLinkNameTuple::is_link_name_Set() const{
    return m_link_name_isSet;
}

bool OAIObjectIdentifierAndLinkNameTuple::is_link_name_Valid() const{
    return m_link_name_isValid;
}

bool OAIObjectIdentifierAndLinkNameTuple::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectIdentifierAndLinkNameTuple::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
