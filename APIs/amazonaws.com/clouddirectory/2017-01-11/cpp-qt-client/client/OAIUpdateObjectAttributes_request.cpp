/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateObjectAttributes_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateObjectAttributes_request::OAIUpdateObjectAttributes_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateObjectAttributes_request::OAIUpdateObjectAttributes_request() {
    this->initializeModel();
}

OAIUpdateObjectAttributes_request::~OAIUpdateObjectAttributes_request() {}

void OAIUpdateObjectAttributes_request::initializeModel() {

    m_object_reference_isSet = false;
    m_object_reference_isValid = false;

    m_attribute_updates_isSet = false;
    m_attribute_updates_isValid = false;
}

void OAIUpdateObjectAttributes_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateObjectAttributes_request::fromJsonObject(QJsonObject json) {

    m_object_reference_isValid = ::OpenAPI::fromJsonValue(m_object_reference, json[QString("ObjectReference")]);
    m_object_reference_isSet = !json[QString("ObjectReference")].isNull() && m_object_reference_isValid;

    m_attribute_updates_isValid = ::OpenAPI::fromJsonValue(m_attribute_updates, json[QString("AttributeUpdates")]);
    m_attribute_updates_isSet = !json[QString("AttributeUpdates")].isNull() && m_attribute_updates_isValid;
}

QString OAIUpdateObjectAttributes_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateObjectAttributes_request::asJsonObject() const {
    QJsonObject obj;
    if (m_object_reference.isSet()) {
        obj.insert(QString("ObjectReference"), ::OpenAPI::toJsonValue(m_object_reference));
    }
    if (m_attribute_updates.size() > 0) {
        obj.insert(QString("AttributeUpdates"), ::OpenAPI::toJsonValue(m_attribute_updates));
    }
    return obj;
}

OAIAddFacetToObject_request_ObjectReference OAIUpdateObjectAttributes_request::getObjectReference() const {
    return m_object_reference;
}
void OAIUpdateObjectAttributes_request::setObjectReference(const OAIAddFacetToObject_request_ObjectReference &object_reference) {
    m_object_reference = object_reference;
    m_object_reference_isSet = true;
}

bool OAIUpdateObjectAttributes_request::is_object_reference_Set() const{
    return m_object_reference_isSet;
}

bool OAIUpdateObjectAttributes_request::is_object_reference_Valid() const{
    return m_object_reference_isValid;
}

QList<OAIObjectAttributeUpdate> OAIUpdateObjectAttributes_request::getAttributeUpdates() const {
    return m_attribute_updates;
}
void OAIUpdateObjectAttributes_request::setAttributeUpdates(const QList<OAIObjectAttributeUpdate> &attribute_updates) {
    m_attribute_updates = attribute_updates;
    m_attribute_updates_isSet = true;
}

bool OAIUpdateObjectAttributes_request::is_attribute_updates_Set() const{
    return m_attribute_updates_isSet;
}

bool OAIUpdateObjectAttributes_request::is_attribute_updates_Valid() const{
    return m_attribute_updates_isValid;
}

bool OAIUpdateObjectAttributes_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_updates.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateObjectAttributes_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_reference_isValid && m_attribute_updates_isValid && true;
}

} // namespace OpenAPI
