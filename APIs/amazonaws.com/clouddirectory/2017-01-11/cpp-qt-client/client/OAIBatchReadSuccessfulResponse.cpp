/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchReadSuccessfulResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchReadSuccessfulResponse::OAIBatchReadSuccessfulResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchReadSuccessfulResponse::OAIBatchReadSuccessfulResponse() {
    this->initializeModel();
}

OAIBatchReadSuccessfulResponse::~OAIBatchReadSuccessfulResponse() {}

void OAIBatchReadSuccessfulResponse::initializeModel() {

    m_list_object_attributes_isSet = false;
    m_list_object_attributes_isValid = false;

    m_list_object_children_isSet = false;
    m_list_object_children_isValid = false;

    m_get_object_information_isSet = false;
    m_get_object_information_isValid = false;

    m_get_object_attributes_isSet = false;
    m_get_object_attributes_isValid = false;

    m_list_attached_indices_isSet = false;
    m_list_attached_indices_isValid = false;

    m_list_object_parent_paths_isSet = false;
    m_list_object_parent_paths_isValid = false;

    m_list_object_policies_isSet = false;
    m_list_object_policies_isValid = false;

    m_list_policy_attachments_isSet = false;
    m_list_policy_attachments_isValid = false;

    m_lookup_policy_isSet = false;
    m_lookup_policy_isValid = false;

    m_list_index_isSet = false;
    m_list_index_isValid = false;

    m_list_outgoing_typed_links_isSet = false;
    m_list_outgoing_typed_links_isValid = false;

    m_list_incoming_typed_links_isSet = false;
    m_list_incoming_typed_links_isValid = false;

    m_get_link_attributes_isSet = false;
    m_get_link_attributes_isValid = false;

    m_list_object_parents_isSet = false;
    m_list_object_parents_isValid = false;
}

void OAIBatchReadSuccessfulResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchReadSuccessfulResponse::fromJsonObject(QJsonObject json) {

    m_list_object_attributes_isValid = ::OpenAPI::fromJsonValue(m_list_object_attributes, json[QString("ListObjectAttributes")]);
    m_list_object_attributes_isSet = !json[QString("ListObjectAttributes")].isNull() && m_list_object_attributes_isValid;

    m_list_object_children_isValid = ::OpenAPI::fromJsonValue(m_list_object_children, json[QString("ListObjectChildren")]);
    m_list_object_children_isSet = !json[QString("ListObjectChildren")].isNull() && m_list_object_children_isValid;

    m_get_object_information_isValid = ::OpenAPI::fromJsonValue(m_get_object_information, json[QString("GetObjectInformation")]);
    m_get_object_information_isSet = !json[QString("GetObjectInformation")].isNull() && m_get_object_information_isValid;

    m_get_object_attributes_isValid = ::OpenAPI::fromJsonValue(m_get_object_attributes, json[QString("GetObjectAttributes")]);
    m_get_object_attributes_isSet = !json[QString("GetObjectAttributes")].isNull() && m_get_object_attributes_isValid;

    m_list_attached_indices_isValid = ::OpenAPI::fromJsonValue(m_list_attached_indices, json[QString("ListAttachedIndices")]);
    m_list_attached_indices_isSet = !json[QString("ListAttachedIndices")].isNull() && m_list_attached_indices_isValid;

    m_list_object_parent_paths_isValid = ::OpenAPI::fromJsonValue(m_list_object_parent_paths, json[QString("ListObjectParentPaths")]);
    m_list_object_parent_paths_isSet = !json[QString("ListObjectParentPaths")].isNull() && m_list_object_parent_paths_isValid;

    m_list_object_policies_isValid = ::OpenAPI::fromJsonValue(m_list_object_policies, json[QString("ListObjectPolicies")]);
    m_list_object_policies_isSet = !json[QString("ListObjectPolicies")].isNull() && m_list_object_policies_isValid;

    m_list_policy_attachments_isValid = ::OpenAPI::fromJsonValue(m_list_policy_attachments, json[QString("ListPolicyAttachments")]);
    m_list_policy_attachments_isSet = !json[QString("ListPolicyAttachments")].isNull() && m_list_policy_attachments_isValid;

    m_lookup_policy_isValid = ::OpenAPI::fromJsonValue(m_lookup_policy, json[QString("LookupPolicy")]);
    m_lookup_policy_isSet = !json[QString("LookupPolicy")].isNull() && m_lookup_policy_isValid;

    m_list_index_isValid = ::OpenAPI::fromJsonValue(m_list_index, json[QString("ListIndex")]);
    m_list_index_isSet = !json[QString("ListIndex")].isNull() && m_list_index_isValid;

    m_list_outgoing_typed_links_isValid = ::OpenAPI::fromJsonValue(m_list_outgoing_typed_links, json[QString("ListOutgoingTypedLinks")]);
    m_list_outgoing_typed_links_isSet = !json[QString("ListOutgoingTypedLinks")].isNull() && m_list_outgoing_typed_links_isValid;

    m_list_incoming_typed_links_isValid = ::OpenAPI::fromJsonValue(m_list_incoming_typed_links, json[QString("ListIncomingTypedLinks")]);
    m_list_incoming_typed_links_isSet = !json[QString("ListIncomingTypedLinks")].isNull() && m_list_incoming_typed_links_isValid;

    m_get_link_attributes_isValid = ::OpenAPI::fromJsonValue(m_get_link_attributes, json[QString("GetLinkAttributes")]);
    m_get_link_attributes_isSet = !json[QString("GetLinkAttributes")].isNull() && m_get_link_attributes_isValid;

    m_list_object_parents_isValid = ::OpenAPI::fromJsonValue(m_list_object_parents, json[QString("ListObjectParents")]);
    m_list_object_parents_isSet = !json[QString("ListObjectParents")].isNull() && m_list_object_parents_isValid;
}

QString OAIBatchReadSuccessfulResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchReadSuccessfulResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_list_object_attributes.isSet()) {
        obj.insert(QString("ListObjectAttributes"), ::OpenAPI::toJsonValue(m_list_object_attributes));
    }
    if (m_list_object_children.isSet()) {
        obj.insert(QString("ListObjectChildren"), ::OpenAPI::toJsonValue(m_list_object_children));
    }
    if (m_get_object_information.isSet()) {
        obj.insert(QString("GetObjectInformation"), ::OpenAPI::toJsonValue(m_get_object_information));
    }
    if (m_get_object_attributes.isSet()) {
        obj.insert(QString("GetObjectAttributes"), ::OpenAPI::toJsonValue(m_get_object_attributes));
    }
    if (m_list_attached_indices.isSet()) {
        obj.insert(QString("ListAttachedIndices"), ::OpenAPI::toJsonValue(m_list_attached_indices));
    }
    if (m_list_object_parent_paths.isSet()) {
        obj.insert(QString("ListObjectParentPaths"), ::OpenAPI::toJsonValue(m_list_object_parent_paths));
    }
    if (m_list_object_policies.isSet()) {
        obj.insert(QString("ListObjectPolicies"), ::OpenAPI::toJsonValue(m_list_object_policies));
    }
    if (m_list_policy_attachments.isSet()) {
        obj.insert(QString("ListPolicyAttachments"), ::OpenAPI::toJsonValue(m_list_policy_attachments));
    }
    if (m_lookup_policy.isSet()) {
        obj.insert(QString("LookupPolicy"), ::OpenAPI::toJsonValue(m_lookup_policy));
    }
    if (m_list_index.isSet()) {
        obj.insert(QString("ListIndex"), ::OpenAPI::toJsonValue(m_list_index));
    }
    if (m_list_outgoing_typed_links.isSet()) {
        obj.insert(QString("ListOutgoingTypedLinks"), ::OpenAPI::toJsonValue(m_list_outgoing_typed_links));
    }
    if (m_list_incoming_typed_links.isSet()) {
        obj.insert(QString("ListIncomingTypedLinks"), ::OpenAPI::toJsonValue(m_list_incoming_typed_links));
    }
    if (m_get_link_attributes.isSet()) {
        obj.insert(QString("GetLinkAttributes"), ::OpenAPI::toJsonValue(m_get_link_attributes));
    }
    if (m_list_object_parents.isSet()) {
        obj.insert(QString("ListObjectParents"), ::OpenAPI::toJsonValue(m_list_object_parents));
    }
    return obj;
}

OAIBatchReadSuccessfulResponse_ListObjectAttributes OAIBatchReadSuccessfulResponse::getListObjectAttributes() const {
    return m_list_object_attributes;
}
void OAIBatchReadSuccessfulResponse::setListObjectAttributes(const OAIBatchReadSuccessfulResponse_ListObjectAttributes &list_object_attributes) {
    m_list_object_attributes = list_object_attributes;
    m_list_object_attributes_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_attributes_Set() const{
    return m_list_object_attributes_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_attributes_Valid() const{
    return m_list_object_attributes_isValid;
}

OAIBatchReadSuccessfulResponse_ListObjectChildren OAIBatchReadSuccessfulResponse::getListObjectChildren() const {
    return m_list_object_children;
}
void OAIBatchReadSuccessfulResponse::setListObjectChildren(const OAIBatchReadSuccessfulResponse_ListObjectChildren &list_object_children) {
    m_list_object_children = list_object_children;
    m_list_object_children_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_children_Set() const{
    return m_list_object_children_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_children_Valid() const{
    return m_list_object_children_isValid;
}

OAIBatchReadSuccessfulResponse_GetObjectInformation OAIBatchReadSuccessfulResponse::getGetObjectInformation() const {
    return m_get_object_information;
}
void OAIBatchReadSuccessfulResponse::setGetObjectInformation(const OAIBatchReadSuccessfulResponse_GetObjectInformation &get_object_information) {
    m_get_object_information = get_object_information;
    m_get_object_information_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_get_object_information_Set() const{
    return m_get_object_information_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_get_object_information_Valid() const{
    return m_get_object_information_isValid;
}

OAIBatchReadSuccessfulResponse_GetObjectAttributes OAIBatchReadSuccessfulResponse::getGetObjectAttributes() const {
    return m_get_object_attributes;
}
void OAIBatchReadSuccessfulResponse::setGetObjectAttributes(const OAIBatchReadSuccessfulResponse_GetObjectAttributes &get_object_attributes) {
    m_get_object_attributes = get_object_attributes;
    m_get_object_attributes_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_get_object_attributes_Set() const{
    return m_get_object_attributes_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_get_object_attributes_Valid() const{
    return m_get_object_attributes_isValid;
}

OAIBatchReadSuccessfulResponse_ListAttachedIndices OAIBatchReadSuccessfulResponse::getListAttachedIndices() const {
    return m_list_attached_indices;
}
void OAIBatchReadSuccessfulResponse::setListAttachedIndices(const OAIBatchReadSuccessfulResponse_ListAttachedIndices &list_attached_indices) {
    m_list_attached_indices = list_attached_indices;
    m_list_attached_indices_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_attached_indices_Set() const{
    return m_list_attached_indices_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_attached_indices_Valid() const{
    return m_list_attached_indices_isValid;
}

OAIBatchReadSuccessfulResponse_ListObjectParentPaths OAIBatchReadSuccessfulResponse::getListObjectParentPaths() const {
    return m_list_object_parent_paths;
}
void OAIBatchReadSuccessfulResponse::setListObjectParentPaths(const OAIBatchReadSuccessfulResponse_ListObjectParentPaths &list_object_parent_paths) {
    m_list_object_parent_paths = list_object_parent_paths;
    m_list_object_parent_paths_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_parent_paths_Set() const{
    return m_list_object_parent_paths_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_parent_paths_Valid() const{
    return m_list_object_parent_paths_isValid;
}

OAIBatchReadSuccessfulResponse_ListObjectPolicies OAIBatchReadSuccessfulResponse::getListObjectPolicies() const {
    return m_list_object_policies;
}
void OAIBatchReadSuccessfulResponse::setListObjectPolicies(const OAIBatchReadSuccessfulResponse_ListObjectPolicies &list_object_policies) {
    m_list_object_policies = list_object_policies;
    m_list_object_policies_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_policies_Set() const{
    return m_list_object_policies_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_policies_Valid() const{
    return m_list_object_policies_isValid;
}

OAIBatchReadSuccessfulResponse_ListPolicyAttachments OAIBatchReadSuccessfulResponse::getListPolicyAttachments() const {
    return m_list_policy_attachments;
}
void OAIBatchReadSuccessfulResponse::setListPolicyAttachments(const OAIBatchReadSuccessfulResponse_ListPolicyAttachments &list_policy_attachments) {
    m_list_policy_attachments = list_policy_attachments;
    m_list_policy_attachments_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_policy_attachments_Set() const{
    return m_list_policy_attachments_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_policy_attachments_Valid() const{
    return m_list_policy_attachments_isValid;
}

OAIBatchReadSuccessfulResponse_LookupPolicy OAIBatchReadSuccessfulResponse::getLookupPolicy() const {
    return m_lookup_policy;
}
void OAIBatchReadSuccessfulResponse::setLookupPolicy(const OAIBatchReadSuccessfulResponse_LookupPolicy &lookup_policy) {
    m_lookup_policy = lookup_policy;
    m_lookup_policy_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_lookup_policy_Set() const{
    return m_lookup_policy_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_lookup_policy_Valid() const{
    return m_lookup_policy_isValid;
}

OAIBatchReadSuccessfulResponse_ListIndex OAIBatchReadSuccessfulResponse::getListIndex() const {
    return m_list_index;
}
void OAIBatchReadSuccessfulResponse::setListIndex(const OAIBatchReadSuccessfulResponse_ListIndex &list_index) {
    m_list_index = list_index;
    m_list_index_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_index_Set() const{
    return m_list_index_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_index_Valid() const{
    return m_list_index_isValid;
}

OAIBatchReadSuccessfulResponse_ListOutgoingTypedLinks OAIBatchReadSuccessfulResponse::getListOutgoingTypedLinks() const {
    return m_list_outgoing_typed_links;
}
void OAIBatchReadSuccessfulResponse::setListOutgoingTypedLinks(const OAIBatchReadSuccessfulResponse_ListOutgoingTypedLinks &list_outgoing_typed_links) {
    m_list_outgoing_typed_links = list_outgoing_typed_links;
    m_list_outgoing_typed_links_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_outgoing_typed_links_Set() const{
    return m_list_outgoing_typed_links_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_outgoing_typed_links_Valid() const{
    return m_list_outgoing_typed_links_isValid;
}

OAIBatchReadSuccessfulResponse_ListIncomingTypedLinks OAIBatchReadSuccessfulResponse::getListIncomingTypedLinks() const {
    return m_list_incoming_typed_links;
}
void OAIBatchReadSuccessfulResponse::setListIncomingTypedLinks(const OAIBatchReadSuccessfulResponse_ListIncomingTypedLinks &list_incoming_typed_links) {
    m_list_incoming_typed_links = list_incoming_typed_links;
    m_list_incoming_typed_links_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_incoming_typed_links_Set() const{
    return m_list_incoming_typed_links_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_incoming_typed_links_Valid() const{
    return m_list_incoming_typed_links_isValid;
}

OAIBatchReadSuccessfulResponse_GetLinkAttributes OAIBatchReadSuccessfulResponse::getGetLinkAttributes() const {
    return m_get_link_attributes;
}
void OAIBatchReadSuccessfulResponse::setGetLinkAttributes(const OAIBatchReadSuccessfulResponse_GetLinkAttributes &get_link_attributes) {
    m_get_link_attributes = get_link_attributes;
    m_get_link_attributes_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_get_link_attributes_Set() const{
    return m_get_link_attributes_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_get_link_attributes_Valid() const{
    return m_get_link_attributes_isValid;
}

OAIBatchReadSuccessfulResponse_ListObjectParents OAIBatchReadSuccessfulResponse::getListObjectParents() const {
    return m_list_object_parents;
}
void OAIBatchReadSuccessfulResponse::setListObjectParents(const OAIBatchReadSuccessfulResponse_ListObjectParents &list_object_parents) {
    m_list_object_parents = list_object_parents;
    m_list_object_parents_isSet = true;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_parents_Set() const{
    return m_list_object_parents_isSet;
}

bool OAIBatchReadSuccessfulResponse::is_list_object_parents_Valid() const{
    return m_list_object_parents_isValid;
}

bool OAIBatchReadSuccessfulResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_list_object_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_object_children.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_get_object_information.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_get_object_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_attached_indices.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_object_parent_paths.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_object_policies.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_policy_attachments.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lookup_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_index.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_outgoing_typed_links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_incoming_typed_links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_get_link_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_object_parents.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchReadSuccessfulResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
