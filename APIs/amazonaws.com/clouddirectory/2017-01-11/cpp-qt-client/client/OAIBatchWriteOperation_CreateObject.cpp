/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchWriteOperation_CreateObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchWriteOperation_CreateObject::OAIBatchWriteOperation_CreateObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchWriteOperation_CreateObject::OAIBatchWriteOperation_CreateObject() {
    this->initializeModel();
}

OAIBatchWriteOperation_CreateObject::~OAIBatchWriteOperation_CreateObject() {}

void OAIBatchWriteOperation_CreateObject::initializeModel() {

    m_schema_facet_isSet = false;
    m_schema_facet_isValid = false;

    m_object_attribute_list_isSet = false;
    m_object_attribute_list_isValid = false;

    m_parent_reference_isSet = false;
    m_parent_reference_isValid = false;

    m_link_name_isSet = false;
    m_link_name_isValid = false;

    m_batch_reference_name_isSet = false;
    m_batch_reference_name_isValid = false;
}

void OAIBatchWriteOperation_CreateObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchWriteOperation_CreateObject::fromJsonObject(QJsonObject json) {

    m_schema_facet_isValid = ::OpenAPI::fromJsonValue(m_schema_facet, json[QString("SchemaFacet")]);
    m_schema_facet_isSet = !json[QString("SchemaFacet")].isNull() && m_schema_facet_isValid;

    m_object_attribute_list_isValid = ::OpenAPI::fromJsonValue(m_object_attribute_list, json[QString("ObjectAttributeList")]);
    m_object_attribute_list_isSet = !json[QString("ObjectAttributeList")].isNull() && m_object_attribute_list_isValid;

    m_parent_reference_isValid = ::OpenAPI::fromJsonValue(m_parent_reference, json[QString("ParentReference")]);
    m_parent_reference_isSet = !json[QString("ParentReference")].isNull() && m_parent_reference_isValid;

    m_link_name_isValid = ::OpenAPI::fromJsonValue(m_link_name, json[QString("LinkName")]);
    m_link_name_isSet = !json[QString("LinkName")].isNull() && m_link_name_isValid;

    m_batch_reference_name_isValid = ::OpenAPI::fromJsonValue(m_batch_reference_name, json[QString("BatchReferenceName")]);
    m_batch_reference_name_isSet = !json[QString("BatchReferenceName")].isNull() && m_batch_reference_name_isValid;
}

QString OAIBatchWriteOperation_CreateObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchWriteOperation_CreateObject::asJsonObject() const {
    QJsonObject obj;
    if (m_schema_facet.isSet()) {
        obj.insert(QString("SchemaFacet"), ::OpenAPI::toJsonValue(m_schema_facet));
    }
    if (m_object_attribute_list.isSet()) {
        obj.insert(QString("ObjectAttributeList"), ::OpenAPI::toJsonValue(m_object_attribute_list));
    }
    if (m_parent_reference.isSet()) {
        obj.insert(QString("ParentReference"), ::OpenAPI::toJsonValue(m_parent_reference));
    }
    if (m_link_name_isSet) {
        obj.insert(QString("LinkName"), ::OpenAPI::toJsonValue(m_link_name));
    }
    if (m_batch_reference_name_isSet) {
        obj.insert(QString("BatchReferenceName"), ::OpenAPI::toJsonValue(m_batch_reference_name));
    }
    return obj;
}

QList OAIBatchWriteOperation_CreateObject::getSchemaFacet() const {
    return m_schema_facet;
}
void OAIBatchWriteOperation_CreateObject::setSchemaFacet(const QList &schema_facet) {
    m_schema_facet = schema_facet;
    m_schema_facet_isSet = true;
}

bool OAIBatchWriteOperation_CreateObject::is_schema_facet_Set() const{
    return m_schema_facet_isSet;
}

bool OAIBatchWriteOperation_CreateObject::is_schema_facet_Valid() const{
    return m_schema_facet_isValid;
}

QList OAIBatchWriteOperation_CreateObject::getObjectAttributeList() const {
    return m_object_attribute_list;
}
void OAIBatchWriteOperation_CreateObject::setObjectAttributeList(const QList &object_attribute_list) {
    m_object_attribute_list = object_attribute_list;
    m_object_attribute_list_isSet = true;
}

bool OAIBatchWriteOperation_CreateObject::is_object_attribute_list_Set() const{
    return m_object_attribute_list_isSet;
}

bool OAIBatchWriteOperation_CreateObject::is_object_attribute_list_Valid() const{
    return m_object_attribute_list_isValid;
}

OAIBatchCreateObject_ParentReference OAIBatchWriteOperation_CreateObject::getParentReference() const {
    return m_parent_reference;
}
void OAIBatchWriteOperation_CreateObject::setParentReference(const OAIBatchCreateObject_ParentReference &parent_reference) {
    m_parent_reference = parent_reference;
    m_parent_reference_isSet = true;
}

bool OAIBatchWriteOperation_CreateObject::is_parent_reference_Set() const{
    return m_parent_reference_isSet;
}

bool OAIBatchWriteOperation_CreateObject::is_parent_reference_Valid() const{
    return m_parent_reference_isValid;
}

QString OAIBatchWriteOperation_CreateObject::getLinkName() const {
    return m_link_name;
}
void OAIBatchWriteOperation_CreateObject::setLinkName(const QString &link_name) {
    m_link_name = link_name;
    m_link_name_isSet = true;
}

bool OAIBatchWriteOperation_CreateObject::is_link_name_Set() const{
    return m_link_name_isSet;
}

bool OAIBatchWriteOperation_CreateObject::is_link_name_Valid() const{
    return m_link_name_isValid;
}

QString OAIBatchWriteOperation_CreateObject::getBatchReferenceName() const {
    return m_batch_reference_name;
}
void OAIBatchWriteOperation_CreateObject::setBatchReferenceName(const QString &batch_reference_name) {
    m_batch_reference_name = batch_reference_name;
    m_batch_reference_name_isSet = true;
}

bool OAIBatchWriteOperation_CreateObject::is_batch_reference_name_Set() const{
    return m_batch_reference_name_isSet;
}

bool OAIBatchWriteOperation_CreateObject::is_batch_reference_name_Valid() const{
    return m_batch_reference_name_isValid;
}

bool OAIBatchWriteOperation_CreateObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schema_facet.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_attribute_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_batch_reference_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchWriteOperation_CreateObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schema_facet_isValid && m_object_attribute_list_isValid && true;
}

} // namespace OpenAPI
