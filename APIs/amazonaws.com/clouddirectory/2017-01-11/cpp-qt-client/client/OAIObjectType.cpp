/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectType::OAIObjectType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectType::OAIObjectType() {
    this->initializeModel();
}

OAIObjectType::~OAIObjectType() {}

void OAIObjectType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIObjectType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIObjectType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NODE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectType::NODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LEAF_NODE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectType::LEAF_NODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("POLICY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectType::POLICY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INDEX", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectType::INDEX;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIObjectType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIObjectType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIObjectType::NODE:
            val = "NODE";
            break;
        case eOAIObjectType::LEAF_NODE:
            val = "LEAF_NODE";
            break;
        case eOAIObjectType::POLICY:
            val = "POLICY";
            break;
        case eOAIObjectType::INDEX:
            val = "INDEX";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIObjectType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIObjectType::eOAIObjectType OAIObjectType::getValue() const {
    return m_value;
}

void OAIObjectType::setValue(const OAIObjectType::eOAIObjectType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIObjectType::isSet() const {
    
    return m_value_isSet;
}

bool OAIObjectType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
