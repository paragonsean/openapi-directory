/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetDirectoryResponse_Directory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetDirectoryResponse_Directory::OAIGetDirectoryResponse_Directory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetDirectoryResponse_Directory::OAIGetDirectoryResponse_Directory() {
    this->initializeModel();
}

OAIGetDirectoryResponse_Directory::~OAIGetDirectoryResponse_Directory() {}

void OAIGetDirectoryResponse_Directory::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_directory_arn_isSet = false;
    m_directory_arn_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_creation_date_time_isSet = false;
    m_creation_date_time_isValid = false;
}

void OAIGetDirectoryResponse_Directory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetDirectoryResponse_Directory::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_directory_arn_isValid = ::OpenAPI::fromJsonValue(m_directory_arn, json[QString("DirectoryArn")]);
    m_directory_arn_isSet = !json[QString("DirectoryArn")].isNull() && m_directory_arn_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_creation_date_time_isValid = ::OpenAPI::fromJsonValue(m_creation_date_time, json[QString("CreationDateTime")]);
    m_creation_date_time_isSet = !json[QString("CreationDateTime")].isNull() && m_creation_date_time_isValid;
}

QString OAIGetDirectoryResponse_Directory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetDirectoryResponse_Directory::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_directory_arn_isSet) {
        obj.insert(QString("DirectoryArn"), ::OpenAPI::toJsonValue(m_directory_arn));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_creation_date_time_isSet) {
        obj.insert(QString("CreationDateTime"), ::OpenAPI::toJsonValue(m_creation_date_time));
    }
    return obj;
}

QString OAIGetDirectoryResponse_Directory::getName() const {
    return m_name;
}
void OAIGetDirectoryResponse_Directory::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetDirectoryResponse_Directory::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetDirectoryResponse_Directory::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGetDirectoryResponse_Directory::getDirectoryArn() const {
    return m_directory_arn;
}
void OAIGetDirectoryResponse_Directory::setDirectoryArn(const QString &directory_arn) {
    m_directory_arn = directory_arn;
    m_directory_arn_isSet = true;
}

bool OAIGetDirectoryResponse_Directory::is_directory_arn_Set() const{
    return m_directory_arn_isSet;
}

bool OAIGetDirectoryResponse_Directory::is_directory_arn_Valid() const{
    return m_directory_arn_isValid;
}

OAIDirectoryState OAIGetDirectoryResponse_Directory::getState() const {
    return m_state;
}
void OAIGetDirectoryResponse_Directory::setState(const OAIDirectoryState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGetDirectoryResponse_Directory::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGetDirectoryResponse_Directory::is_state_Valid() const{
    return m_state_isValid;
}

QDateTime OAIGetDirectoryResponse_Directory::getCreationDateTime() const {
    return m_creation_date_time;
}
void OAIGetDirectoryResponse_Directory::setCreationDateTime(const QDateTime &creation_date_time) {
    m_creation_date_time = creation_date_time;
    m_creation_date_time_isSet = true;
}

bool OAIGetDirectoryResponse_Directory::is_creation_date_time_Set() const{
    return m_creation_date_time_isSet;
}

bool OAIGetDirectoryResponse_Directory::is_creation_date_time_Valid() const{
    return m_creation_date_time_isValid;
}

bool OAIGetDirectoryResponse_Directory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_directory_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetDirectoryResponse_Directory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
