/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITypedLinkAttributeRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITypedLinkAttributeRange::OAITypedLinkAttributeRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITypedLinkAttributeRange::OAITypedLinkAttributeRange() {
    this->initializeModel();
}

OAITypedLinkAttributeRange::~OAITypedLinkAttributeRange() {}

void OAITypedLinkAttributeRange::initializeModel() {

    m_attribute_name_isSet = false;
    m_attribute_name_isValid = false;

    m_range_isSet = false;
    m_range_isValid = false;
}

void OAITypedLinkAttributeRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITypedLinkAttributeRange::fromJsonObject(QJsonObject json) {

    m_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_attribute_name, json[QString("AttributeName")]);
    m_attribute_name_isSet = !json[QString("AttributeName")].isNull() && m_attribute_name_isValid;

    m_range_isValid = ::OpenAPI::fromJsonValue(m_range, json[QString("Range")]);
    m_range_isSet = !json[QString("Range")].isNull() && m_range_isValid;
}

QString OAITypedLinkAttributeRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITypedLinkAttributeRange::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_name_isSet) {
        obj.insert(QString("AttributeName"), ::OpenAPI::toJsonValue(m_attribute_name));
    }
    if (m_range.isSet()) {
        obj.insert(QString("Range"), ::OpenAPI::toJsonValue(m_range));
    }
    return obj;
}

QString OAITypedLinkAttributeRange::getAttributeName() const {
    return m_attribute_name;
}
void OAITypedLinkAttributeRange::setAttributeName(const QString &attribute_name) {
    m_attribute_name = attribute_name;
    m_attribute_name_isSet = true;
}

bool OAITypedLinkAttributeRange::is_attribute_name_Set() const{
    return m_attribute_name_isSet;
}

bool OAITypedLinkAttributeRange::is_attribute_name_Valid() const{
    return m_attribute_name_isValid;
}

OAITypedLinkAttributeRange_Range OAITypedLinkAttributeRange::getRange() const {
    return m_range;
}
void OAITypedLinkAttributeRange::setRange(const OAITypedLinkAttributeRange_Range &range) {
    m_range = range;
    m_range_isSet = true;
}

bool OAITypedLinkAttributeRange::is_range_Set() const{
    return m_range_isSet;
}

bool OAITypedLinkAttributeRange::is_range_Valid() const{
    return m_range_isValid;
}

bool OAITypedLinkAttributeRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITypedLinkAttributeRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_range_isValid && true;
}

} // namespace OpenAPI
