/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchWriteOperationResponse_AttachTypedLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchWriteOperationResponse_AttachTypedLink::OAIBatchWriteOperationResponse_AttachTypedLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchWriteOperationResponse_AttachTypedLink::OAIBatchWriteOperationResponse_AttachTypedLink() {
    this->initializeModel();
}

OAIBatchWriteOperationResponse_AttachTypedLink::~OAIBatchWriteOperationResponse_AttachTypedLink() {}

void OAIBatchWriteOperationResponse_AttachTypedLink::initializeModel() {

    m_typed_link_specifier_isSet = false;
    m_typed_link_specifier_isValid = false;
}

void OAIBatchWriteOperationResponse_AttachTypedLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchWriteOperationResponse_AttachTypedLink::fromJsonObject(QJsonObject json) {

    m_typed_link_specifier_isValid = ::OpenAPI::fromJsonValue(m_typed_link_specifier, json[QString("TypedLinkSpecifier")]);
    m_typed_link_specifier_isSet = !json[QString("TypedLinkSpecifier")].isNull() && m_typed_link_specifier_isValid;
}

QString OAIBatchWriteOperationResponse_AttachTypedLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchWriteOperationResponse_AttachTypedLink::asJsonObject() const {
    QJsonObject obj;
    if (m_typed_link_specifier.isSet()) {
        obj.insert(QString("TypedLinkSpecifier"), ::OpenAPI::toJsonValue(m_typed_link_specifier));
    }
    return obj;
}

OAIAttachTypedLinkResponse_TypedLinkSpecifier OAIBatchWriteOperationResponse_AttachTypedLink::getTypedLinkSpecifier() const {
    return m_typed_link_specifier;
}
void OAIBatchWriteOperationResponse_AttachTypedLink::setTypedLinkSpecifier(const OAIAttachTypedLinkResponse_TypedLinkSpecifier &typed_link_specifier) {
    m_typed_link_specifier = typed_link_specifier;
    m_typed_link_specifier_isSet = true;
}

bool OAIBatchWriteOperationResponse_AttachTypedLink::is_typed_link_specifier_Set() const{
    return m_typed_link_specifier_isSet;
}

bool OAIBatchWriteOperationResponse_AttachTypedLink::is_typed_link_specifier_Valid() const{
    return m_typed_link_specifier_isValid;
}

bool OAIBatchWriteOperationResponse_AttachTypedLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_typed_link_specifier.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchWriteOperationResponse_AttachTypedLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
