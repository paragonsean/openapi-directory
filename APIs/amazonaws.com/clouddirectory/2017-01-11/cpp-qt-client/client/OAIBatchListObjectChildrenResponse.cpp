/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchListObjectChildrenResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchListObjectChildrenResponse::OAIBatchListObjectChildrenResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchListObjectChildrenResponse::OAIBatchListObjectChildrenResponse() {
    this->initializeModel();
}

OAIBatchListObjectChildrenResponse::~OAIBatchListObjectChildrenResponse() {}

void OAIBatchListObjectChildrenResponse::initializeModel() {

    m_children_isSet = false;
    m_children_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIBatchListObjectChildrenResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchListObjectChildrenResponse::fromJsonObject(QJsonObject json) {

    m_children_isValid = ::OpenAPI::fromJsonValue(m_children, json[QString("Children")]);
    m_children_isSet = !json[QString("Children")].isNull() && m_children_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIBatchListObjectChildrenResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchListObjectChildrenResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_children.isSet()) {
        obj.insert(QString("Children"), ::OpenAPI::toJsonValue(m_children));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QMap OAIBatchListObjectChildrenResponse::getChildren() const {
    return m_children;
}
void OAIBatchListObjectChildrenResponse::setChildren(const QMap &children) {
    m_children = children;
    m_children_isSet = true;
}

bool OAIBatchListObjectChildrenResponse::is_children_Set() const{
    return m_children_isSet;
}

bool OAIBatchListObjectChildrenResponse::is_children_Valid() const{
    return m_children_isValid;
}

QString OAIBatchListObjectChildrenResponse::getNextToken() const {
    return m_next_token;
}
void OAIBatchListObjectChildrenResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIBatchListObjectChildrenResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIBatchListObjectChildrenResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIBatchListObjectChildrenResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_children.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchListObjectChildrenResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
