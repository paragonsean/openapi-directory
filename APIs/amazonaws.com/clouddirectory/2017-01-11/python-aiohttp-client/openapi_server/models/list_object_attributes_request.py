# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_facet_to_object_request_object_reference import AddFacetToObjectRequestObjectReference
from openapi_server.models.add_facet_to_object_request_schema_facet import AddFacetToObjectRequestSchemaFacet
from openapi_server import util


class ListObjectAttributesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_reference: AddFacetToObjectRequestObjectReference=None, next_token: str=None, max_results: int=None, facet_filter: AddFacetToObjectRequestSchemaFacet=None):
        """ListObjectAttributesRequest - a model defined in OpenAPI

        :param object_reference: The object_reference of this ListObjectAttributesRequest.
        :param next_token: The next_token of this ListObjectAttributesRequest.
        :param max_results: The max_results of this ListObjectAttributesRequest.
        :param facet_filter: The facet_filter of this ListObjectAttributesRequest.
        """
        self.openapi_types = {
            'object_reference': AddFacetToObjectRequestObjectReference,
            'next_token': str,
            'max_results': int,
            'facet_filter': AddFacetToObjectRequestSchemaFacet
        }

        self.attribute_map = {
            'object_reference': 'ObjectReference',
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'facet_filter': 'FacetFilter'
        }

        self._object_reference = object_reference
        self._next_token = next_token
        self._max_results = max_results
        self._facet_filter = facet_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListObjectAttributesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListObjectAttributes_request of this ListObjectAttributesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_reference(self):
        """Gets the object_reference of this ListObjectAttributesRequest.


        :return: The object_reference of this ListObjectAttributesRequest.
        :rtype: AddFacetToObjectRequestObjectReference
        """
        return self._object_reference

    @object_reference.setter
    def object_reference(self, object_reference):
        """Sets the object_reference of this ListObjectAttributesRequest.


        :param object_reference: The object_reference of this ListObjectAttributesRequest.
        :type object_reference: AddFacetToObjectRequestObjectReference
        """
        if object_reference is None:
            raise ValueError("Invalid value for `object_reference`, must not be `None`")

        self._object_reference = object_reference

    @property
    def next_token(self):
        """Gets the next_token of this ListObjectAttributesRequest.

        The pagination token.

        :return: The next_token of this ListObjectAttributesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListObjectAttributesRequest.

        The pagination token.

        :param next_token: The next_token of this ListObjectAttributesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListObjectAttributesRequest.

        The maximum number of items to be retrieved in a single call. This is an approximate number.

        :return: The max_results of this ListObjectAttributesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListObjectAttributesRequest.

        The maximum number of items to be retrieved in a single call. This is an approximate number.

        :param max_results: The max_results of this ListObjectAttributesRequest.
        :type max_results: int
        """
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results

    @property
    def facet_filter(self):
        """Gets the facet_filter of this ListObjectAttributesRequest.


        :return: The facet_filter of this ListObjectAttributesRequest.
        :rtype: AddFacetToObjectRequestSchemaFacet
        """
        return self._facet_filter

    @facet_filter.setter
    def facet_filter(self, facet_filter):
        """Sets the facet_filter of this ListObjectAttributesRequest.


        :param facet_filter: The facet_filter of this ListObjectAttributesRequest.
        :type facet_filter: AddFacetToObjectRequestSchemaFacet
        """

        self._facet_filter = facet_filter
