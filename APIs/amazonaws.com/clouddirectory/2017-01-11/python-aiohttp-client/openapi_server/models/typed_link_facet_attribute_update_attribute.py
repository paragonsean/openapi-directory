# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.facet_attribute_definition_default_value import FacetAttributeDefinitionDefaultValue
from openapi_server.models.facet_attribute_type import FacetAttributeType
from openapi_server.models.required_attribute_behavior import RequiredAttributeBehavior
from openapi_server import util


class TypedLinkFacetAttributeUpdateAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, type: FacetAttributeType=None, default_value: FacetAttributeDefinitionDefaultValue=None, is_immutable: bool=None, rules: Dict=None, required_behavior: RequiredAttributeBehavior=None):
        """TypedLinkFacetAttributeUpdateAttribute - a model defined in OpenAPI

        :param name: The name of this TypedLinkFacetAttributeUpdateAttribute.
        :param type: The type of this TypedLinkFacetAttributeUpdateAttribute.
        :param default_value: The default_value of this TypedLinkFacetAttributeUpdateAttribute.
        :param is_immutable: The is_immutable of this TypedLinkFacetAttributeUpdateAttribute.
        :param rules: The rules of this TypedLinkFacetAttributeUpdateAttribute.
        :param required_behavior: The required_behavior of this TypedLinkFacetAttributeUpdateAttribute.
        """
        self.openapi_types = {
            'name': str,
            'type': FacetAttributeType,
            'default_value': FacetAttributeDefinitionDefaultValue,
            'is_immutable': bool,
            'rules': Dict,
            'required_behavior': RequiredAttributeBehavior
        }

        self.attribute_map = {
            'name': 'Name',
            'type': 'Type',
            'default_value': 'DefaultValue',
            'is_immutable': 'IsImmutable',
            'rules': 'Rules',
            'required_behavior': 'RequiredBehavior'
        }

        self._name = name
        self._type = type
        self._default_value = default_value
        self._is_immutable = is_immutable
        self._rules = rules
        self._required_behavior = required_behavior

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TypedLinkFacetAttributeUpdateAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TypedLinkFacetAttributeUpdate_Attribute of this TypedLinkFacetAttributeUpdateAttribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this TypedLinkFacetAttributeUpdateAttribute.


        :return: The name of this TypedLinkFacetAttributeUpdateAttribute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TypedLinkFacetAttributeUpdateAttribute.


        :param name: The name of this TypedLinkFacetAttributeUpdateAttribute.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def type(self):
        """Gets the type of this TypedLinkFacetAttributeUpdateAttribute.


        :return: The type of this TypedLinkFacetAttributeUpdateAttribute.
        :rtype: FacetAttributeType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TypedLinkFacetAttributeUpdateAttribute.


        :param type: The type of this TypedLinkFacetAttributeUpdateAttribute.
        :type type: FacetAttributeType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def default_value(self):
        """Gets the default_value of this TypedLinkFacetAttributeUpdateAttribute.


        :return: The default_value of this TypedLinkFacetAttributeUpdateAttribute.
        :rtype: FacetAttributeDefinitionDefaultValue
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this TypedLinkFacetAttributeUpdateAttribute.


        :param default_value: The default_value of this TypedLinkFacetAttributeUpdateAttribute.
        :type default_value: FacetAttributeDefinitionDefaultValue
        """

        self._default_value = default_value

    @property
    def is_immutable(self):
        """Gets the is_immutable of this TypedLinkFacetAttributeUpdateAttribute.


        :return: The is_immutable of this TypedLinkFacetAttributeUpdateAttribute.
        :rtype: bool
        """
        return self._is_immutable

    @is_immutable.setter
    def is_immutable(self, is_immutable):
        """Sets the is_immutable of this TypedLinkFacetAttributeUpdateAttribute.


        :param is_immutable: The is_immutable of this TypedLinkFacetAttributeUpdateAttribute.
        :type is_immutable: bool
        """

        self._is_immutable = is_immutable

    @property
    def rules(self):
        """Gets the rules of this TypedLinkFacetAttributeUpdateAttribute.


        :return: The rules of this TypedLinkFacetAttributeUpdateAttribute.
        :rtype: Dict
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this TypedLinkFacetAttributeUpdateAttribute.


        :param rules: The rules of this TypedLinkFacetAttributeUpdateAttribute.
        :type rules: Dict
        """

        self._rules = rules

    @property
    def required_behavior(self):
        """Gets the required_behavior of this TypedLinkFacetAttributeUpdateAttribute.


        :return: The required_behavior of this TypedLinkFacetAttributeUpdateAttribute.
        :rtype: RequiredAttributeBehavior
        """
        return self._required_behavior

    @required_behavior.setter
    def required_behavior(self, required_behavior):
        """Sets the required_behavior of this TypedLinkFacetAttributeUpdateAttribute.


        :param required_behavior: The required_behavior of this TypedLinkFacetAttributeUpdateAttribute.
        :type required_behavior: RequiredAttributeBehavior
        """
        if required_behavior is None:
            raise ValueError("Invalid value for `required_behavior`, must not be `None`")

        self._required_behavior = required_behavior
