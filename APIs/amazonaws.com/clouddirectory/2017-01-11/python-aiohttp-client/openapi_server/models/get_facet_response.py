# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_facet_response_facet import GetFacetResponseFacet
from openapi_server import util


class GetFacetResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, facet: GetFacetResponseFacet=None):
        """GetFacetResponse - a model defined in OpenAPI

        :param facet: The facet of this GetFacetResponse.
        """
        self.openapi_types = {
            'facet': GetFacetResponseFacet
        }

        self.attribute_map = {
            'facet': 'Facet'
        }

        self._facet = facet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetFacetResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetFacetResponse of this GetFacetResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def facet(self):
        """Gets the facet of this GetFacetResponse.


        :return: The facet of this GetFacetResponse.
        :rtype: GetFacetResponseFacet
        """
        return self._facet

    @facet.setter
    def facet(self, facet):
        """Sets the facet of this GetFacetResponse.


        :param facet: The facet of this GetFacetResponse.
        :type facet: GetFacetResponseFacet
        """

        self._facet = facet
