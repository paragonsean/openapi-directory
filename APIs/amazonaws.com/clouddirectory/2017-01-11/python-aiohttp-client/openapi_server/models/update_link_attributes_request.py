# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detach_typed_link_request_typed_link_specifier import DetachTypedLinkRequestTypedLinkSpecifier
from openapi_server.models.link_attribute_update import LinkAttributeUpdate
from openapi_server import util


class UpdateLinkAttributesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, typed_link_specifier: DetachTypedLinkRequestTypedLinkSpecifier=None, attribute_updates: List[LinkAttributeUpdate]=None):
        """UpdateLinkAttributesRequest - a model defined in OpenAPI

        :param typed_link_specifier: The typed_link_specifier of this UpdateLinkAttributesRequest.
        :param attribute_updates: The attribute_updates of this UpdateLinkAttributesRequest.
        """
        self.openapi_types = {
            'typed_link_specifier': DetachTypedLinkRequestTypedLinkSpecifier,
            'attribute_updates': List[LinkAttributeUpdate]
        }

        self.attribute_map = {
            'typed_link_specifier': 'TypedLinkSpecifier',
            'attribute_updates': 'AttributeUpdates'
        }

        self._typed_link_specifier = typed_link_specifier
        self._attribute_updates = attribute_updates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateLinkAttributesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateLinkAttributes_request of this UpdateLinkAttributesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def typed_link_specifier(self):
        """Gets the typed_link_specifier of this UpdateLinkAttributesRequest.


        :return: The typed_link_specifier of this UpdateLinkAttributesRequest.
        :rtype: DetachTypedLinkRequestTypedLinkSpecifier
        """
        return self._typed_link_specifier

    @typed_link_specifier.setter
    def typed_link_specifier(self, typed_link_specifier):
        """Sets the typed_link_specifier of this UpdateLinkAttributesRequest.


        :param typed_link_specifier: The typed_link_specifier of this UpdateLinkAttributesRequest.
        :type typed_link_specifier: DetachTypedLinkRequestTypedLinkSpecifier
        """
        if typed_link_specifier is None:
            raise ValueError("Invalid value for `typed_link_specifier`, must not be `None`")

        self._typed_link_specifier = typed_link_specifier

    @property
    def attribute_updates(self):
        """Gets the attribute_updates of this UpdateLinkAttributesRequest.

        The attributes update structure.

        :return: The attribute_updates of this UpdateLinkAttributesRequest.
        :rtype: List[LinkAttributeUpdate]
        """
        return self._attribute_updates

    @attribute_updates.setter
    def attribute_updates(self, attribute_updates):
        """Sets the attribute_updates of this UpdateLinkAttributesRequest.

        The attributes update structure.

        :param attribute_updates: The attribute_updates of this UpdateLinkAttributesRequest.
        :type attribute_updates: List[LinkAttributeUpdate]
        """
        if attribute_updates is None:
            raise ValueError("Invalid value for `attribute_updates`, must not be `None`")

        self._attribute_updates = attribute_updates
