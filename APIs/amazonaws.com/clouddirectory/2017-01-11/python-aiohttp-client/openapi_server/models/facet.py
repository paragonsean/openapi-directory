# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.facet_style import FacetStyle
from openapi_server.models.object_type import ObjectType
from openapi_server import util


class Facet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, object_type: ObjectType=None, facet_style: FacetStyle=None):
        """Facet - a model defined in OpenAPI

        :param name: The name of this Facet.
        :param object_type: The object_type of this Facet.
        :param facet_style: The facet_style of this Facet.
        """
        self.openapi_types = {
            'name': str,
            'object_type': ObjectType,
            'facet_style': FacetStyle
        }

        self.attribute_map = {
            'name': 'Name',
            'object_type': 'ObjectType',
            'facet_style': 'FacetStyle'
        }

        self._name = name
        self._object_type = object_type
        self._facet_style = facet_style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Facet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Facet of this Facet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Facet.


        :return: The name of this Facet.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Facet.


        :param name: The name of this Facet.
        :type name: str
        """

        self._name = name

    @property
    def object_type(self):
        """Gets the object_type of this Facet.


        :return: The object_type of this Facet.
        :rtype: ObjectType
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this Facet.


        :param object_type: The object_type of this Facet.
        :type object_type: ObjectType
        """

        self._object_type = object_type

    @property
    def facet_style(self):
        """Gets the facet_style of this Facet.


        :return: The facet_style of this Facet.
        :rtype: FacetStyle
        """
        return self._facet_style

    @facet_style.setter
    def facet_style(self, facet_style):
        """Sets the facet_style of this Facet.


        :param facet_style: The facet_style of this Facet.
        :type facet_style: FacetStyle
        """

        self._facet_style = facet_style
