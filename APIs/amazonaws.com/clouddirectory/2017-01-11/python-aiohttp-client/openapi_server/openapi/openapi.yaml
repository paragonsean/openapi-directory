openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory\
    \ is a component of the AWS Directory Service that simplifies the development\
    \ and management of cloud-scale web, mobile, and IoT applications. This guide\
    \ describes the Cloud Directory operations that you can call programmatically\
    \ and includes detailed information on data types and errors. For information\
    \ about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\"\
    >AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\"\
    >Amazon Cloud Directory Developer Guide</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon CloudDirectory
  version: 2017-01-11
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: clouddirectory
  x-aws-signingName: clouddirectory
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/clouddirectory-2017-01-11.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/clouddirectory/
servers:
- description: The Amazon CloudDirectory multi-region endpoint
  url: "http://clouddirectory.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon CloudDirectory multi-region endpoint
  url: "https://clouddirectory.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon CloudDirectory endpoint for China (Beijing) and China (Ningxia)
  url: "http://clouddirectory.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon CloudDirectory endpoint for China (Beijing) and China (Ningxia)
  url: "https://clouddirectory.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /amazonclouddirectory/2017-01-11/batchread#x-amz-data-partition:
    post:
      description: 'Performs all the read operations in a batch. '
      operationId: batch_read
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Represents the manner and timing in which the successful write
          or update of an object is reflected in a subsequent read operation of that
          same object.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRead_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchReadResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/batchwrite#x-amz-data-partition:
    put:
      description: Performs all the write operations in a batch. Either all the operations
        succeed or none.
      operationId: batch_write
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchWrite_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchWriteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchWriteException'
          description: BatchWriteException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/directory#x-amz-data-partition:
    put:
      description: Deletes a directory. Only disabled directories can be deleted.
        A deleted directory cannot be undone. Exercise extreme caution when deleting
        directories.
      operationId: delete_directory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory to delete.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDirectoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotDisabledException'
          description: DirectoryNotDisabledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeletedException'
          description: DirectoryDeletedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /amazonclouddirectory/2017-01-11/directory/create#x-amz-data-partition:
    put:
      description: "<p>Creates a <a>Directory</a> by copying the published schema\
        \ into the directory. A directory cannot be created without a schema.</p>\
        \ <p>You can also quickly create a directory using a managed schema, called\
        \ the <code>QuickStartSchema</code>. For more information, see <a href=\"\
        https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_managed.html\"\
        >Managed Schema</a> in the <i>Amazon Cloud Directory Developer Guide</i>.</p>"
      operationId: create_directory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) of the published schema that\
          \ will be copied into the data <a>Directory</a>. For more information, see\
          \ <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectory_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDirectoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryAlreadyExistsException'
          description: DirectoryAlreadyExistsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/directory/disable#x-amz-data-partition:
    put:
      description: Disables the specified directory. Disabled directories cannot be
        read or written to. Only enabled directories can be disabled. Disabled directories
        may be reenabled.
      operationId: disable_directory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory to disable.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableDirectoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeletedException'
          description: DirectoryDeletedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /amazonclouddirectory/2017-01-11/directory/enable#x-amz-data-partition:
    put:
      description: "Enables the specified directory. Only disabled directories can\
        \ be enabled. Once enabled, the directory can then be read and written to."
      operationId: enable_directory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory to enable.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableDirectoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeletedException'
          description: DirectoryDeletedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /amazonclouddirectory/2017-01-11/directory/get#x-amz-data-partition:
    post:
      description: Retrieves metadata about a directory.
      operationId: get_directory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDirectoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /amazonclouddirectory/2017-01-11/directory/list:
    post:
      description: Lists directories created within an account.
      operationId: list_directories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDirectories_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDirectoriesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/facet#x-amz-data-partition:
    post:
      description: "Gets details of the <a>Facet</a>, such as facet name, attributes,\
        \ <a>Rule</a>s, or <code>ObjectType</code>. You can call this on all kinds\
        \ of schema facets -- published, development, or applied."
      operationId: get_facet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFacet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFacetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
          description: FacetNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "<p>Does the following:</p> <ol> <li> <p>Adds new <code>Attributes</code>,\
        \ <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Updates\
        \ existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p>\
        \ </li> <li> <p>Deletes existing <code>Attributes</code>, <code>Rules</code>,\
        \ or <code>ObjectTypes</code>.</p> </li> </ol>"
      operationId: update_facet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFacet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFacetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFacetUpdateException'
          description: InvalidFacetUpdateException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
          description: FacetNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
          description: InvalidRuleException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/facet/attributes#x-amz-data-partition:
    post:
      description: Retrieves attributes attached to the facet.
      operationId: list_facet_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the schema where the facet resides.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFacetAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFacetAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
          description: FacetNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/facet/create#x-amz-data-partition:
    put:
      description: Creates a new <a>Facet</a> in a schema. Facet creation is allowed
        only in development or applied schemas.
      operationId: create_facet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The schema ARN in which the new <a>Facet</a> will be created.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFacet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFacetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetAlreadyExistsException'
          description: FacetAlreadyExistsException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
          description: InvalidRuleException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/facet/delete#x-amz-data-partition:
    put:
      description: Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s that
        are associated with the facet will be deleted. Only development schema facets
        are allowed deletion.
      operationId: delete_facet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFacet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFacetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
          description: FacetNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetInUseException'
          description: FacetInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/facet/list#x-amz-data-partition:
    post:
      description: Retrieves the names of facets that exist in a schema.
      operationId: list_facet_names
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) to retrieve facet names from.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevelopmentSchemaArns_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFacetNamesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/index#x-amz-data-partition:
    put:
      description: Creates an index object. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.html">Indexing
        and search</a> for more information.
      operationId: create_index
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory where the index should be created.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIndex_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIndexResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
          description: LinkNameAlreadyInUseException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedIndexTypeException'
          description: UnsupportedIndexTypeException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/index/attach#x-amz-data-partition:
    put:
      description: Attaches the specified object to the specified index.
      operationId: attach_to_index
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the directory where the object
          and index exist.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachToIndex_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachToIndexResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
          description: InvalidAttachmentException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
          description: LinkNameAlreadyInUseException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexedAttributeMissingException'
          description: IndexedAttributeMissingException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotIndexException'
          description: NotIndexException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/index/detach#x-amz-data-partition:
    put:
      description: Detaches the specified object from the specified index.
      operationId: detach_from_index
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the directory the index and
          object exist in.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachToIndex_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachFromIndexResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAlreadyDetachedException'
          description: ObjectAlreadyDetachedException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotIndexException'
          description: NotIndexException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/index/targets#x-amz-data-partition:
    post:
      description: Lists objects attached to the specified index.
      operationId: list_index
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory that the index exists in.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: The consistency level to execute the request at.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIndex_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIndexResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotIndexException'
          description: NotIndexException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object#x-amz-data-partition:
    put:
      description: "Creates an object in a <a>Directory</a>. Additionally attaches\
        \ the object to a parent, if a parent reference and <code>LinkName</code>\
        \ is specified. An object is simply a collection of <a>Facet</a> attributes.\
        \ You can also use this API call to create a policy object, if the facet from\
        \ which you create the object is a policy facet. "
      operationId: create_object
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ in which the object will be created. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateObject_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateObjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
          description: LinkNameAlreadyInUseException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedIndexTypeException'
          description: UnsupportedIndexTypeException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/attach#x-amz-data-partition:
    put:
      description: <p>Attaches an existing object to another object. An object can
        be accessed in two ways:</p> <ol> <li> <p>Using the path</p> </li> <li> <p>Using
        <code>ObjectIdentifier</code> </p> </li> </ol>
      operationId: attach_object
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where both objects reside. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachObject_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachObjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
          description: LinkNameAlreadyInUseException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
          description: InvalidAttachmentException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/attributes#x-amz-data-partition:
    post:
      description: 'Lists all attributes that are associated with an object. '
      operationId: list_object_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where the object resides. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Represents the manner and timing in which the successful write
          or update of an object is reflected in a subsequent read operation of that
          same object.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/attributes/get#x-amz-data-partition:
    post:
      description: Retrieves attributes within a facet that are associated with an
        object.
      operationId: get_object_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>
          where the object resides.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: The consistency level at which to retrieve the attributes on
          an object.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetObjectAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/children#x-amz-data-partition:
    post:
      description: Returns a paginated list of child objects that are associated with
        a given object.
      operationId: list_object_children
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where the object resides. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Represents the manner and timing in which the successful write
          or update of an object is reflected in a subsequent read operation of that
          same object.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectChildren_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectChildrenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotNodeException'
          description: NotNodeException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/delete#x-amz-data-partition:
    put:
      description: "Deletes an object and its associated attributes. Only objects\
        \ with no children and no parents can be deleted. The maximum number of attributes\
        \ that can be deleted during an object deletion is 30. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html\"\
        >Amazon Cloud Directory Limits</a>."
      operationId: delete_object
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where the object resides. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteObject_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteObjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectNotDetachedException'
          description: ObjectNotDetachedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/detach#x-amz-data-partition:
    put:
      description: Detaches a given object from the parent object. The object that
        is to be detached from the parent is specified by the link name.
      operationId: detach_object
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where objects reside. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachObject_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachObjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotNodeException'
          description: NotNodeException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/facets#x-amz-data-partition:
    put:
      description: Adds a new <a>Facet</a> to an object. An object can have more than
        one facet applied on it.
      operationId: add_facet_to_object
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where the object resides. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFacetToObject_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFacetToObjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/facets/delete#x-amz-data-partition:
    put:
      description: Removes the specified facet from the specified object.
      operationId: remove_facet_from_object
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory in which the object resides.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFacetFromObject_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFacetFromObjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/indices#x-amz-data-partition:
    post:
      description: Lists indices attached to the specified object.
      operationId: list_attached_indices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: The consistency level to use for this operation.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAttachedIndices_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttachedIndicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/information#x-amz-data-partition:
    post:
      description: Retrieves metadata about an object.
      operationId: get_object_information
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory being retrieved.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: The consistency level at which to retrieve the object information.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteObject_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectInformationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/parent#x-amz-data-partition:
    post:
      description: Lists parent objects that are associated with a given object in
        pagination fashion.
      operationId: list_object_parents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where the object resides. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Represents the manner and timing in which the successful write
          or update of an object is reflected in a subsequent read operation of that
          same object.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectParents_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectParentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CannotListParentOfRootException'
          description: CannotListParentOfRootException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/parentpaths#x-amz-data-partition:
    post:
      description: "<p>Retrieves all available parent paths for any object type such\
        \ as node, leaf node, policy node, and index node objects. For more information\
        \ about objects, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html\"\
        >Directory Structure</a>.</p> <p>Use this API to evaluate all parents for\
        \ an object. The call returns all objects from the root of the directory up\
        \ to the requested object. The API returns the number of paths based on user-defined\
        \ <code>MaxResults</code>, in case there are multiple paths to the parent.\
        \ The order of the paths and nodes returned is consistent among multiple API\
        \ calls unless the objects are deleted or moved. Paths not leading to the\
        \ directory root are ignored from the target object.</p>"
      operationId: list_object_parent_paths
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the directory to which the parent path applies.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectChildren_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectParentPathsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/policy#x-amz-data-partition:
    post:
      description: Returns policies attached to an object in pagination fashion.
      operationId: list_object_policies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where objects reside. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Represents the manner and timing in which the successful write
          or update of an object is reflected in a subsequent read operation of that
          same object.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectChildren_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectPoliciesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/object/update#x-amz-data-partition:
    put:
      description: Updates a given object's attributes.
      operationId: update_object_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where the object resides. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateObjectAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateObjectAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
          description: LinkNameAlreadyInUseException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/policy/attach#x-amz-data-partition:
    put:
      description: Attaches a policy object to a regular object. An object can have
        a limited number of attached policies.
      operationId: attach_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where both objects reside. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotPolicyException'
          description: NotPolicyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/policy/attachment#x-amz-data-partition:
    post:
      description: Returns all of the <code>ObjectIdentifiers</code> to which a given
        policy is attached.
      operationId: list_policy_attachments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where objects reside. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Represents the manner and timing in which the successful write
          or update of an object is reflected in a subsequent read operation of that
          same object.
        explode: false
        in: header
        name: x-amz-consistency-level
        required: false
        schema:
          enum:
          - SERIALIZABLE
          - EVENTUAL
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPolicyAttachments_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPolicyAttachmentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotPolicyException'
          description: NotPolicyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/policy/detach#x-amz-data-partition:
    put:
      description: Detaches a policy from an object.
      operationId: detach_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ where both objects reside. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotPolicyException'
          description: NotPolicyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/policy/lookup#x-amz-data-partition:
    post:
      description: "Lists all policies from the root of the <a>Directory</a> to the\
        \ object specified. If there are no policies present, an empty list is returned.\
        \ If policies are present, and if some objects don't have the policies attached,\
        \ it returns the <code>ObjectIdentifier</code> for such objects. If policies\
        \ are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>,\
        \ and <code>policyType</code>. Paths that don't lead to the root from the\
        \ target object are ignored. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\"\
        >Policies</a>."
      operationId: lookup_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema#x-amz-data-partition:
    put:
      description: 'Deletes a given schema. Schemas in a development and published
        state can only be deleted. '
      operationId: delete_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) of the development schema. For\
          \ more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StillContainsLinksException'
          description: StillContainsLinksException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /amazonclouddirectory/2017-01-11/schema/applied:
    post:
      description: "Lists schema major versions applied to a directory. If <code>SchemaArn</code>\
        \ is provided, lists the minor version."
      operationId: list_applied_schema_arns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAppliedSchemaArns_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppliedSchemaArnsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/apply#x-amz-data-partition:
    put:
      description: "Copies the input published schema, at the specified version, into\
        \ the <a>Directory</a> with the same name and version as that of the published\
        \ schema."
      operationId: apply_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>\
          \ into which the schema is copied. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplySchema_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplySchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaAlreadyExistsException'
          description: SchemaAlreadyExistsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
          description: InvalidAttachmentException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/create:
    put:
      description: "<p>Creates a new schema in a development state. A schema can exist\
        \ in three phases:</p> <ul> <li> <p> <i>Development:</i> This is a mutable\
        \ phase of the schema. All new schemas are in the development phase. Once\
        \ the schema is finalized, it can be published.</p> </li> <li> <p> <i>Published:</i>\
        \ Published schemas are immutable and have a version associated with them.</p>\
        \ </li> <li> <p> <i>Applied:</i> Applied schemas are mutable in a way that\
        \ allows you to add new schema facets. You can also add new, nonrequired attributes\
        \ to existing schema facets. You can apply only published schemas to directories.\
        \ </p> </li> </ul>"
      operationId: create_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchema_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaAlreadyExistsException'
          description: SchemaAlreadyExistsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/development:
    post:
      description: Retrieves each Amazon Resource Name (ARN) of schemas in the development
        state.
      operationId: list_development_schema_arns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevelopmentSchemaArns_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevelopmentSchemaArnsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/getappliedschema:
    post:
      description: "Returns current applied schema version ARN, including the minor\
        \ version in use."
      operationId: get_applied_schema_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppliedSchemaVersion_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppliedSchemaVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/json#x-amz-data-partition:
    post:
      description: Retrieves a JSON representation of the schema. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json">JSON
        Schema Format</a> for more information.
      operationId: get_schema_as_json
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the schema to retrieve.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemaAsJsonResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Allows a schema to be updated using JSON upload. Only available
        for development schemas. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json">JSON
        Schema Format</a> for more information.
      operationId: put_schema_from_json
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the schema to update.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSchemaFromJson_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSchemaFromJsonResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchemaDocException'
          description: InvalidSchemaDocException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
          description: InvalidRuleException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/managed:
    post:
      description: "Lists the major version families of each managed schema. If a\
        \ major version ARN is provided as SchemaArn, the minor version revisions\
        \ in that family are listed instead."
      operationId: list_managed_schema_arns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListManagedSchemaArns_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListManagedSchemaArnsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/publish#x-amz-data-partition:
    put:
      description: Publishes a development schema with a major version and a recommended
        minor version.
      operationId: publish_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the development\
          \ schema. For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishSchema_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaAlreadyPublishedException'
          description: SchemaAlreadyPublishedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/published:
    post:
      description: "Lists the major version families of each published schema. If\
        \ a major version ARN is provided as <code>SchemaArn</code>, the minor version\
        \ revisions in that family are listed instead."
      operationId: list_published_schema_arns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPublishedSchemaArns_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPublishedSchemaArnsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/update#x-amz-data-partition:
    put:
      description: Updates the schema name with a new name. Only development schema
        names can be updated.
      operationId: update_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) of the development schema. For\
          \ more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchema_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/upgradeapplied:
    put:
      description: "Upgrades a single directory in-place using the <code>PublishedSchemaArn</code>\
        \ with schema updates found in <code>MinorVersion</code>. Backwards-compatible\
        \ minor version upgrades are instantaneously available for readers on all\
        \ objects in the directory. Note: This is a synchronous API call and upgrades\
        \ only one schema on a given directory per call. To upgrade multiple directories\
        \ from one schema, you would need to call this API on each directory."
      operationId: upgrade_applied_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeAppliedSchema_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeAppliedSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleSchemaException'
          description: IncompatibleSchemaException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
          description: InvalidAttachmentException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaAlreadyExistsException'
          description: SchemaAlreadyExistsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/schema/upgradepublished:
    put:
      description: Upgrades a published schema under a new minor version revision
        using the current contents of <code>DevelopmentSchemaArn</code>.
      operationId: upgrade_published_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradePublishedSchema_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePublishedSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleSchemaException'
          description: IncompatibleSchemaException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
          description: InvalidAttachmentException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/tags:
    post:
      description: Returns tags for a resource. Tagging is currently supported only
        for directories with a limit of 50 tags per directory. All 50 tags are returned
        for a given directory with this API call.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaggingRequestException'
          description: InvalidTaggingRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/tags/add:
    put:
      description: An API operation for adding tags to a resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaggingRequestException'
          description: InvalidTaggingRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/tags/remove:
    put:
      description: An API operation for removing tags from a resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaggingRequestException'
          description: InvalidTaggingRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/attach#x-amz-data-partition:
    put:
      description: "Attaches a typed link to a specified source and target object.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: attach_typed_link
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the directory where you want
          to attach the typed link.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachTypedLink_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachTypedLinkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
          description: InvalidAttachmentException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/attributes/get#x-amz-data-partition:
    post:
      description: Retrieves attributes that are associated with a typed link.
      operationId: get_link_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the Directory\
          \ where the typed link resides. For more information, see <a>arns</a> or\
          \ <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
          >Typed Links</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLinkAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLinkAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/attributes/update#x-amz-data-partition:
    post:
      description: "Updates a given typed link’s attributes. Attributes to be updated\
        \ must not contribute to the typed link’s identity, as defined by its <code>IdentityAttributeOrder</code>."
      operationId: update_link_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the Directory\
          \ where the updated typed link resides. For more information, see <a>arns</a>\
          \ or <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
          >Typed Links</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLinkAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLinkAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/detach#x-amz-data-partition:
    put:
      description: "Detaches a typed link from a specified source and target object.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: detach_typed_link
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the directory where you want
          to detach the typed link.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachTypedLink_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/facet#x-amz-data-partition:
    put:
      description: "Updates a <a>TypedLinkFacet</a>. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: update_typed_link_facet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the schema.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTypedLinkFacet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTypedLinkFacetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFacetUpdateException'
          description: InvalidFacetUpdateException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
          description: FacetNotFoundException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
          description: InvalidRuleException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/facet/attributes#x-amz-data-partition:
    post:
      description: "Returns a paginated list of all attribute definitions for a particular\
        \ <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: list_typed_link_facet_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the schema.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTypedLinkFacetAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTypedLinkFacetAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
          description: FacetNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/facet/create#x-amz-data-partition:
    put:
      description: "Creates a <a>TypedLinkFacet</a>. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: create_typed_link_facet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the schema.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTypedLinkFacet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTypedLinkFacetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetAlreadyExistsException'
          description: FacetAlreadyExistsException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
          description: InvalidRuleException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/facet/delete#x-amz-data-partition:
    put:
      description: "Deletes a <a>TypedLinkFacet</a>. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: delete_typed_link_facet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the schema.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTypedLinkFacet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTypedLinkFacetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
          description: FacetNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/facet/get#x-amz-data-partition:
    post:
      description: "Returns the identity attribute order for a specific <a>TypedLinkFacet</a>.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: get_typed_link_facet_information
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the schema.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTypedLinkFacet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTypedLinkFacetInformationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
          description: FacetNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/facet/list#x-amz-data-partition:
    post:
      description: "Returns a paginated list of <code>TypedLink</code> facet names\
        \ for a particular schema. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: list_typed_link_facet_names
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that is associated with the schema.\
          \ For more information, see <a>arns</a>."
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevelopmentSchemaArns_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTypedLinkFacetNamesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/incoming#x-amz-data-partition:
    post:
      description: "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a>\
        \ information for an object. It also supports filtering by typed link facet\
        \ and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: list_incoming_typed_links
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the directory where you want
          to list the typed links.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIncomingTypedLinks_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIncomingTypedLinksResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /amazonclouddirectory/2017-01-11/typedlink/outgoing#x-amz-data-partition:
    post:
      description: "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a>\
        \ information for an object. It also supports filtering by typed link facet\
        \ and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
        >Typed Links</a>."
      operationId: list_outgoing_typed_links
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the directory where you want
          to list the typed links.
        explode: false
        in: header
        name: x-amz-data-partition
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIncomingTypedLinks_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOutgoingTypedLinksResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
          description: RetryableConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
          description: DirectoryNotEnabledException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
          description: FacetValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddFacetToObjectResponse:
      properties: {}
      type: object
    Arn:
      title: Arn
      type: string
    FacetName:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9._-]*$"
      title: FacetName
      type: string
    AttributeKeyAndValue:
      description: The combination of an attribute key and an attribute value.
      properties:
        Key:
          $ref: '#/components/schemas/AttributeKeyAndValue_Key'
        Value:
          $ref: '#/components/schemas/AttributeKeyAndValue_Value'
      required:
      - Key
      - Value
      title: AttributeKeyAndValue
      type: object
    SelectorObjectReference:
      type: string
    InternalServiceException: {}
    InvalidArnException: {}
    RetryableConflictException: {}
    ValidationException: {}
    LimitExceededException: {}
    AccessDeniedException: {}
    DirectoryNotEnabledException: {}
    ResourceNotFoundException: {}
    FacetValidationException: {}
    ApplySchemaResponse:
      example:
        DirectoryArn: ""
        AppliedSchemaArn: ""
      properties:
        AppliedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The applied schema ARN that is associated with the copied\
              \ schema in the <a>Directory</a>. You can use this ARN to describe the\
              \ schema information applied on this directory. For more information,\
              \ see <a>arns</a>."
          title: AppliedSchemaArn
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN that is associated with the <a>Directory</a>. For\
              \ more information, see <a>arns</a>."
          title: DirectoryArn
      title: ApplySchemaResponse
      type: object
    SchemaAlreadyExistsException: {}
    InvalidAttachmentException: {}
    AttachObjectResponse:
      example:
        AttachedObjectIdentifier: ""
      properties:
        AttachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: "The attached <code>ObjectIdentifier</code>, which is the\
              \ child <code>ObjectIdentifier</code>."
          title: AttachedObjectIdentifier
      title: AttachObjectResponse
      type: object
    LinkNameAlreadyInUseException: {}
    AttachPolicyResponse:
      properties: {}
      type: object
    NotPolicyException: {}
    AttachToIndexResponse:
      example:
        AttachedObjectIdentifier: ""
      properties:
        AttachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the object that was
              attached to the index.
          title: AttachedObjectIdentifier
      title: AttachToIndexResponse
      type: object
    IndexedAttributeMissingException: {}
    NotIndexException: {}
    AttachTypedLinkResponse:
      example:
        TypedLinkSpecifier:
          TargetObjectReference:
            Selector: ""
          IdentityAttributeValues: ""
          TypedLinkFacet:
            TypedLinkName: ""
            SchemaArn: ""
          SourceObjectReference:
            Selector: ""
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/AttachTypedLinkResponse_TypedLinkSpecifier'
      title: AttachTypedLinkResponse
      type: object
    TypedLinkName:
      pattern: "^[a-zA-Z0-9._-]*$"
      title: TypedLinkName
      type: string
    AttributeNameAndValue:
      description: Identifies the attribute name and value for a typed link.
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: The attribute name of the typed link.
          title: AttributeName
        Value:
          $ref: '#/components/schemas/AttributeNameAndValue_Value'
      required:
      - AttributeName
      - Value
      title: AttributeNameAndValue
      type: object
    BatchReadResponse:
      example:
        Responses: ""
      properties:
        Responses:
          allOf:
          - $ref: '#/components/schemas/BatchReadOperationResponseList'
          - description: A list of all the responses for each batch read.
          title: Responses
      title: BatchReadResponse
      type: object
    BatchReadOperation:
      description: Represents the output of a <code>BatchRead</code> operation.
      properties:
        ListObjectAttributes:
          $ref: '#/components/schemas/BatchReadOperation_ListObjectAttributes'
        ListObjectChildren:
          $ref: '#/components/schemas/BatchReadOperation_ListObjectChildren'
        ListAttachedIndices:
          $ref: '#/components/schemas/BatchReadOperation_ListAttachedIndices'
        ListObjectParentPaths:
          $ref: '#/components/schemas/BatchReadOperation_ListObjectParentPaths'
        GetObjectInformation:
          $ref: '#/components/schemas/BatchReadOperation_GetObjectInformation'
        GetObjectAttributes:
          $ref: '#/components/schemas/BatchReadOperation_GetObjectAttributes'
        ListObjectParents:
          $ref: '#/components/schemas/BatchReadOperation_ListObjectParents'
        ListObjectPolicies:
          $ref: '#/components/schemas/BatchReadOperation_ListObjectPolicies'
        ListPolicyAttachments:
          $ref: '#/components/schemas/BatchReadOperation_ListPolicyAttachments'
        LookupPolicy:
          $ref: '#/components/schemas/BatchReadOperation_LookupPolicy'
        ListIndex:
          $ref: '#/components/schemas/BatchReadOperation_ListIndex'
        ListOutgoingTypedLinks:
          $ref: '#/components/schemas/BatchReadOperation_ListOutgoingTypedLinks'
        ListIncomingTypedLinks:
          $ref: '#/components/schemas/BatchReadOperation_ListIncomingTypedLinks'
        GetLinkAttributes:
          $ref: '#/components/schemas/BatchReadOperation_GetLinkAttributes'
      title: BatchReadOperation
      type: object
    BatchWriteResponse:
      example:
        Responses: ""
      properties:
        Responses:
          allOf:
          - $ref: '#/components/schemas/BatchWriteOperationResponseList'
          - description: A list of all the responses for each batch write.
          title: Responses
      title: BatchWriteResponse
      type: object
    BatchWriteOperation:
      description: 'Represents the output of a <code>BatchWrite</code> operation. '
      properties:
        CreateObject:
          $ref: '#/components/schemas/BatchWriteOperation_CreateObject'
        AttachObject:
          $ref: '#/components/schemas/BatchWriteOperation_AttachObject'
        DetachObject:
          $ref: '#/components/schemas/BatchWriteOperation_DetachObject'
        UpdateObjectAttributes:
          $ref: '#/components/schemas/BatchWriteOperation_UpdateObjectAttributes'
        DeleteObject:
          $ref: '#/components/schemas/BatchWriteOperation_DeleteObject'
        AddFacetToObject:
          $ref: '#/components/schemas/BatchWriteOperation_AddFacetToObject'
        RemoveFacetFromObject:
          $ref: '#/components/schemas/BatchWriteOperation_RemoveFacetFromObject'
        AttachPolicy:
          $ref: '#/components/schemas/BatchWriteOperation_AttachPolicy'
        DetachPolicy:
          $ref: '#/components/schemas/BatchWriteOperation_DetachPolicy'
        CreateIndex:
          $ref: '#/components/schemas/BatchWriteOperation_CreateIndex'
        AttachToIndex:
          $ref: '#/components/schemas/BatchWriteOperation_AttachToIndex'
        DetachFromIndex:
          $ref: '#/components/schemas/BatchWriteOperation_DetachFromIndex'
        AttachTypedLink:
          $ref: '#/components/schemas/BatchWriteOperation_AttachTypedLink'
        DetachTypedLink:
          $ref: '#/components/schemas/BatchWriteOperation_DetachTypedLink'
        UpdateLinkAttributes:
          $ref: '#/components/schemas/BatchWriteOperation_UpdateLinkAttributes'
      title: BatchWriteOperation
      type: object
    BatchWriteException: {}
    CreateDirectoryResponse:
      example:
        DirectoryArn: ""
        AppliedSchemaArn: ""
        Name: ""
        ObjectIdentifier: ""
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryArn'
          - description: "The ARN that is associated with the <a>Directory</a>. For\
              \ more information, see <a>arns</a>."
          title: DirectoryArn
        Name:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          - description: The name of the <a>Directory</a>.
          title: Name
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The root object node of the created directory.
          title: ObjectIdentifier
        AppliedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the published schema in the <a>Directory</a>.\
              \ Once a published schema is copied into the directory, it has its own\
              \ ARN, which is referred to applied schema ARN. For more information,\
              \ see <a>arns</a>."
          title: AppliedSchemaArn
      required:
      - AppliedSchemaArn
      - DirectoryArn
      - Name
      - ObjectIdentifier
      title: CreateDirectoryResponse
      type: object
    DirectoryAlreadyExistsException: {}
    CreateFacetResponse:
      properties: {}
      type: object
    FacetAttribute:
      description: An attribute that is associated with the <a>Facet</a>.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: The name of the facet attribute.
          title: Name
        AttributeDefinition:
          $ref: '#/components/schemas/FacetAttribute_AttributeDefinition'
        AttributeReference:
          $ref: '#/components/schemas/FacetAttribute_AttributeReference'
        RequiredBehavior:
          allOf:
          - $ref: '#/components/schemas/RequiredAttributeBehavior'
          - description: The required behavior of the <code>FacetAttribute</code>.
          title: RequiredBehavior
      required:
      - Name
      title: FacetAttribute
      type: object
    FacetAlreadyExistsException: {}
    InvalidRuleException: {}
    CreateIndexResponse:
      example:
        ObjectIdentifier: ""
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the index created by
              this operation.
          title: ObjectIdentifier
      title: CreateIndexResponse
      type: object
    AttributeKey:
      description: A unique identifier for an attribute.
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the schema that contains
              the facet and attribute.
          title: SchemaArn
        FacetName:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: The name of the facet that the attribute exists within.
          title: FacetName
        Name:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: The name of the attribute.
          title: Name
      required:
      - FacetName
      - Name
      - SchemaArn
      title: AttributeKey
      type: object
    UnsupportedIndexTypeException: {}
    CreateObjectResponse:
      example:
        ObjectIdentifier: ""
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The identifier that is associated with the object.
          title: ObjectIdentifier
      title: CreateObjectResponse
      type: object
    SchemaFacet:
      description: A facet.
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the schema that contains the facet with no minor\
              \ component. See <a>arns</a> and <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_inplaceschemaupgrade.html\"\
              >In-Place Schema Upgrade</a> for a description of when to provide minor\
              \ versions. If this value is set, FacetName must also be set."
          title: SchemaArn
        FacetName:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: "The name of the facet. If this value is set, SchemaArn must\
              \ also be set."
          title: FacetName
      title: SchemaFacet
      type: object
    CreateSchemaResponse:
      example:
        SchemaArn: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) that is associated with the\
              \ schema. For more information, see <a>arns</a>."
          title: SchemaArn
      title: CreateSchemaResponse
      type: object
    CreateTypedLinkFacetResponse:
      properties: {}
      type: object
    TypedLinkAttributeDefinitionList:
      items:
        $ref: '#/components/schemas/TypedLinkAttributeDefinition'
      type: array
    AttributeNameList:
      items:
        $ref: '#/components/schemas/AttributeName'
      type: array
    DeleteDirectoryResponse:
      example:
        DirectoryArn: ""
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the deleted directory.
          title: DirectoryArn
      required:
      - DirectoryArn
      title: DeleteDirectoryResponse
      type: object
    DirectoryNotDisabledException: {}
    DirectoryDeletedException: {}
    DeleteFacetResponse:
      properties: {}
      type: object
    FacetNotFoundException: {}
    FacetInUseException: {}
    DeleteObjectResponse:
      properties: {}
      type: object
    ObjectNotDetachedException: {}
    DeleteSchemaResponse:
      example:
        SchemaArn: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The input ARN that is returned as part of the response.\
              \ For more information, see <a>arns</a>."
          title: SchemaArn
      title: DeleteSchemaResponse
      type: object
    StillContainsLinksException: {}
    DeleteTypedLinkFacetResponse:
      properties: {}
      type: object
    DetachFromIndexResponse:
      example:
        DetachedObjectIdentifier: ""
      properties:
        DetachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the object that was
              detached from the index.
          title: DetachedObjectIdentifier
      title: DetachFromIndexResponse
      type: object
    ObjectAlreadyDetachedException: {}
    DetachObjectResponse:
      example:
        DetachedObjectIdentifier: ""
      properties:
        DetachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> that was detached from
              the object.
          title: DetachedObjectIdentifier
      title: DetachObjectResponse
      type: object
    NotNodeException: {}
    DetachPolicyResponse:
      properties: {}
      type: object
    TypedLinkSchemaAndFacetName:
      description: Identifies the schema Amazon Resource Name (ARN) and facet name
        for the typed link.
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) that is associated with the\
              \ schema. For more information, see <a>arns</a>."
          title: SchemaArn
        TypedLinkName:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          - description: The unique name of the typed link facet.
          title: TypedLinkName
      required:
      - SchemaArn
      - TypedLinkName
      title: TypedLinkSchemaAndFacetName
      type: object
    ObjectReference:
      description: The reference that identifies an object.
      properties:
        Selector:
          allOf:
          - $ref: '#/components/schemas/SelectorObjectReference'
          - description: "<p>A path selector supports easy selection of an object\
              \ by the parent/child links leading to it from the directory root. Use\
              \ the link names from each parent/child link to construct the path.\
              \ Path selectors start with a slash (/) and link names are separated\
              \ by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\"\
              >Access Objects</a>. You can identify an object in one of the following\
              \ ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier\
              \ is an opaque string provided by Amazon Cloud Directory. When creating\
              \ objects, the system will provide you with the identifier of the created\
              \ object. An object’s identifier is immutable and no two objects will\
              \ ever share the same object identifier. To identify an object with\
              \ ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\
              \ </p> </li> <li> <p> <i>/some/path</i> - Identifies the object based\
              \ on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies\
              \ the object in a batch call</p> </li> </ul>"
          title: Selector
      title: ObjectReference
      type: object
    AttributeNameAndValueList:
      items:
        $ref: '#/components/schemas/AttributeNameAndValue'
      type: array
    DisableDirectoryResponse:
      example:
        DirectoryArn: ""
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the directory that has been disabled.
          title: DirectoryArn
      required:
      - DirectoryArn
      title: DisableDirectoryResponse
      type: object
    EnableDirectoryResponse:
      example:
        DirectoryArn: ""
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the enabled directory.
          title: DirectoryArn
      required:
      - DirectoryArn
      title: EnableDirectoryResponse
      type: object
    GetAppliedSchemaVersionResponse:
      example:
        AppliedSchemaArn: ""
      properties:
        AppliedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "Current applied schema ARN, including the minor version\
              \ in use if one was provided."
          title: AppliedSchemaArn
      title: GetAppliedSchemaVersionResponse
      type: object
    GetDirectoryResponse:
      example:
        Directory:
          DirectoryArn: ""
          CreationDateTime: ""
          State: ""
          Name: ""
      properties:
        Directory:
          $ref: '#/components/schemas/GetDirectoryResponse_Directory'
      required:
      - Directory
      title: GetDirectoryResponse
      type: object
    GetFacetResponse:
      example:
        Facet:
          ObjectType: ""
          FacetStyle: ""
          Name: ""
      properties:
        Facet:
          $ref: '#/components/schemas/GetFacetResponse_Facet'
      title: GetFacetResponse
      type: object
    GetLinkAttributesResponse:
      example:
        Attributes: ""
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: The attributes that are associated with the typed link.
          title: Attributes
      title: GetLinkAttributesResponse
      type: object
    AttributeName:
      maxLength: 230
      minLength: 1
      pattern: "^[a-zA-Z0-9._:-]*$"
      title: AttributeName
      type: string
    GetObjectAttributesResponse:
      example:
        Attributes: ""
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: The attributes that are associated with the object.
          title: Attributes
      title: GetObjectAttributesResponse
      type: object
    GetObjectInformationResponse:
      example:
        SchemaFacets: ""
        ObjectIdentifier: ""
      properties:
        SchemaFacets:
          allOf:
          - $ref: '#/components/schemas/SchemaFacetList'
          - description: "The facets attached to the specified object. Although the\
              \ response does not include minor version information, the most recently\
              \ applied minor version of each Facet is in effect. See <a>GetAppliedSchemaVersion</a>\
              \ for details."
          title: SchemaFacets
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the specified object.
          title: ObjectIdentifier
      title: GetObjectInformationResponse
      type: object
    GetSchemaAsJsonResponse:
      example:
        Document: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SchemaName'
          - description: The name of the retrieved schema.
          title: Name
        Document:
          allOf:
          - $ref: '#/components/schemas/SchemaJsonDocument'
          - description: The JSON representation of the schema document.
          title: Document
      title: GetSchemaAsJsonResponse
      type: object
    GetTypedLinkFacetInformationResponse:
      example:
        IdentityAttributeOrder: ""
      properties:
        IdentityAttributeOrder:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          - description: "The order of identity attributes for the facet, from most\
              \ significant to least significant. The ability to filter typed links\
              \ considers the order that the attributes are defined on the typed link\
              \ facet. When providing ranges to typed link selection, any inexact\
              \ ranges must be specified at the end. Any attributes that do not have\
              \ a range specified are presumed to match the entire range. Filters\
              \ are interpreted in the order of the attributes on the typed link facet,\
              \ not the order in which they are supplied to any API calls. For more\
              \ information about identity attributes, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
              >Typed Links</a>."
          title: IdentityAttributeOrder
      title: GetTypedLinkFacetInformationResponse
      type: object
    InvalidNextTokenException: {}
    ListAppliedSchemaArnsResponse:
      example:
        NextToken: ""
        SchemaArns: ""
      properties:
        SchemaArns:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: The ARNs of schemas that are applied to the directory.
          title: SchemaArns
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListAppliedSchemaArnsResponse
      type: object
    ListAttachedIndicesResponse:
      example:
        NextToken: ""
        IndexAttachments: ""
      properties:
        IndexAttachments:
          allOf:
          - $ref: '#/components/schemas/IndexAttachmentList'
          - description: The indices attached to the specified object.
          title: IndexAttachments
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListAttachedIndicesResponse
      type: object
    ListDevelopmentSchemaArnsResponse:
      example:
        NextToken: ""
        SchemaArns: ""
      properties:
        SchemaArns:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: The ARNs of retrieved development schemas.
          title: SchemaArns
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListDevelopmentSchemaArnsResponse
      type: object
    ListDirectoriesResponse:
      example:
        Directories: ""
        NextToken: ""
      properties:
        Directories:
          allOf:
          - $ref: '#/components/schemas/DirectoryList'
          - description: Lists all directories that are associated with your account
              in pagination fashion.
          title: Directories
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      required:
      - Directories
      title: ListDirectoriesResponse
      type: object
    ListFacetAttributesResponse:
      example:
        NextToken: ""
        Attributes: ""
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeList'
          - description: The attributes attached to the facet.
          title: Attributes
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListFacetAttributesResponse
      type: object
    ListFacetNamesResponse:
      example:
        NextToken: ""
        FacetNames: ""
      properties:
        FacetNames:
          allOf:
          - $ref: '#/components/schemas/FacetNameList'
          - description: The names of facets that exist within the schema.
          title: FacetNames
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListFacetNamesResponse
      type: object
    ListIncomingTypedLinksResponse:
      example:
        LinkSpecifiers: ""
        NextToken: ""
      properties:
        LinkSpecifiers:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifierList'
          - description: Returns one or more typed link specifiers as output.
          title: LinkSpecifiers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListIncomingTypedLinksResponse
      type: object
    TypedLinkAttributeRange:
      description: Identifies the range of attributes that are used by a specified
        filter.
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: The unique name of the typed link attribute.
          title: AttributeName
        Range:
          $ref: '#/components/schemas/TypedLinkAttributeRange_Range'
      required:
      - Range
      title: TypedLinkAttributeRange
      type: object
    ListIndexResponse:
      example:
        NextToken: ""
        IndexAttachments: ""
      properties:
        IndexAttachments:
          allOf:
          - $ref: '#/components/schemas/IndexAttachmentList'
          - description: The objects and indexed values attached to the index.
          title: IndexAttachments
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListIndexResponse
      type: object
    ObjectAttributeRange:
      description: A range of attributes.
      properties:
        AttributeKey:
          $ref: '#/components/schemas/ObjectAttributeRange_AttributeKey'
        Range:
          $ref: '#/components/schemas/ObjectAttributeRange_Range'
      title: ObjectAttributeRange
      type: object
    ListManagedSchemaArnsResponse:
      example:
        NextToken: ""
        SchemaArns: ""
      properties:
        SchemaArns:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: The ARNs for all AWS managed schemas.
          title: SchemaArns
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListManagedSchemaArnsResponse
      type: object
    ListObjectAttributesResponse:
      example:
        NextToken: ""
        Attributes: ""
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: "Attributes map that is associated with the object. <code>AttributeArn</code>\
              \ is the key, and attribute value is the value."
          title: Attributes
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListObjectAttributesResponse
      type: object
    ListObjectChildrenResponse:
      example:
        NextToken: ""
        Children: ""
      properties:
        Children:
          allOf:
          - $ref: '#/components/schemas/LinkNameToObjectIdentifierMap'
          - description: "Children structure, which is a map with key as the <code>LinkName</code>\
              \ and <code>ObjectIdentifier</code> as the value."
          title: Children
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListObjectChildrenResponse
      type: object
    ListObjectParentPathsResponse:
      example:
        NextToken: ""
        PathToObjectIdentifiersList: ""
      properties:
        PathToObjectIdentifiersList:
          allOf:
          - $ref: '#/components/schemas/PathToObjectIdentifiersList'
          - description: Returns the path to the <code>ObjectIdentifiers</code> that
              are associated with the directory.
          title: PathToObjectIdentifiersList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListObjectParentPathsResponse
      type: object
    ListObjectParentsResponse:
      example:
        NextToken: ""
        ParentLinks: ""
        Parents: ""
      properties:
        Parents:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierToLinkNameMap'
          - description: "The parent structure, which is a map with key as the <code>ObjectIdentifier</code>\
              \ and LinkName as the value."
          title: Parents
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        ParentLinks:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierAndLinkNameList'
          - description: Returns a list of parent reference and LinkName Tuples.
          title: ParentLinks
      title: ListObjectParentsResponse
      type: object
    CannotListParentOfRootException: {}
    ListObjectPoliciesResponse:
      example:
        NextToken: ""
        AttachedPolicyIds: ""
      properties:
        AttachedPolicyIds:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          - description: "A list of policy <code>ObjectIdentifiers</code>, that are\
              \ attached to the object."
          title: AttachedPolicyIds
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListObjectPoliciesResponse
      type: object
    ListOutgoingTypedLinksResponse:
      example:
        TypedLinkSpecifiers: ""
        NextToken: ""
      properties:
        TypedLinkSpecifiers:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifierList'
          - description: Returns a typed link specifier as output.
          title: TypedLinkSpecifiers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListOutgoingTypedLinksResponse
      type: object
    ListPolicyAttachmentsResponse:
      example:
        NextToken: ""
        ObjectIdentifiers: ""
      properties:
        ObjectIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          - description: A list of <code>ObjectIdentifiers</code> to which the policy
              is attached.
          title: ObjectIdentifiers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListPolicyAttachmentsResponse
      type: object
    ListPublishedSchemaArnsResponse:
      example:
        NextToken: ""
        SchemaArns: ""
      properties:
        SchemaArns:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: The ARNs of published schemas.
          title: SchemaArns
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListPublishedSchemaArnsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        NextToken: ""
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tag key value pairs that are associated with the
              response.
          title: Tags
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is null when there are no more results to return.
          title: NextToken
      title: ListTagsForResourceResponse
      type: object
    InvalidTaggingRequestException: {}
    ListTypedLinkFacetAttributesResponse:
      example:
        NextToken: ""
        Attributes: ""
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
          - description: An ordered set of attributes associate with the typed link.
          title: Attributes
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListTypedLinkFacetAttributesResponse
      type: object
    ListTypedLinkFacetNamesResponse:
      example:
        NextToken: ""
        FacetNames: ""
      properties:
        FacetNames:
          allOf:
          - $ref: '#/components/schemas/TypedLinkNameList'
          - description: The names of typed link facets that exist within the schema.
          title: FacetNames
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: ListTypedLinkFacetNamesResponse
      type: object
    LookupPolicyResponse:
      example:
        PolicyToPathList: ""
        NextToken: ""
      properties:
        PolicyToPathList:
          allOf:
          - $ref: '#/components/schemas/PolicyToPathList'
          - description: "Provides list of path to policies. Policies contain <code>PolicyId</code>,\
              \ <code>ObjectIdentifier</code>, and <code>PolicyType</code>. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\"\
              >Policies</a>."
          title: PolicyToPathList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: LookupPolicyResponse
      type: object
    PublishSchemaResponse:
      example:
        PublishedSchemaArn: ""
      properties:
        PublishedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN that is associated with the published schema. For\
              \ more information, see <a>arns</a>."
          title: PublishedSchemaArn
      title: PublishSchemaResponse
      type: object
    SchemaAlreadyPublishedException: {}
    PutSchemaFromJsonResponse:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the schema to update.
          title: Arn
      title: PutSchemaFromJsonResponse
      type: object
    InvalidSchemaDocException: {}
    RemoveFacetFromObjectResponse:
      properties: {}
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    Tag:
      description: The tag structure that contains a tag key and value.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key that is associated with the tag.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value that is associated with the tag.
          title: Value
      title: Tag
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      title: TagKey
      type: string
    UpdateFacetResponse:
      properties: {}
      type: object
    FacetAttributeUpdate:
      description: A structure that contains information used to update an attribute.
      properties:
        Attribute:
          $ref: '#/components/schemas/FacetAttributeUpdate_Attribute'
        Action:
          allOf:
          - $ref: '#/components/schemas/UpdateActionType'
          - description: The action to perform when updating the attribute.
          title: Action
      title: FacetAttributeUpdate
      type: object
    InvalidFacetUpdateException: {}
    UpdateLinkAttributesResponse:
      properties: {}
      type: object
    LinkAttributeUpdate:
      description: Structure that contains attribute update information.
      properties:
        AttributeKey:
          $ref: '#/components/schemas/LinkAttributeUpdate_AttributeKey'
        AttributeAction:
          $ref: '#/components/schemas/LinkAttributeUpdate_AttributeAction'
      title: LinkAttributeUpdate
      type: object
    UpdateObjectAttributesResponse:
      example:
        ObjectIdentifier: ""
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the updated object.
          title: ObjectIdentifier
      title: UpdateObjectAttributesResponse
      type: object
    ObjectAttributeUpdate:
      description: Structure that contains attribute update information.
      properties:
        ObjectAttributeKey:
          $ref: '#/components/schemas/LinkAttributeUpdate_AttributeKey'
        ObjectAttributeAction:
          $ref: '#/components/schemas/ObjectAttributeUpdate_ObjectAttributeAction'
      title: ObjectAttributeUpdate
      type: object
    UpdateSchemaResponse:
      example:
        SchemaArn: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN that is associated with the updated schema. For\
              \ more information, see <a>arns</a>."
          title: SchemaArn
      title: UpdateSchemaResponse
      type: object
    UpdateTypedLinkFacetResponse:
      properties: {}
      type: object
    TypedLinkFacetAttributeUpdate:
      description: A typed link facet attribute update.
      properties:
        Attribute:
          $ref: '#/components/schemas/TypedLinkFacetAttributeUpdate_Attribute'
        Action:
          allOf:
          - $ref: '#/components/schemas/UpdateActionType'
          - description: The action to perform when updating the attribute.
          title: Action
      required:
      - Action
      - Attribute
      title: TypedLinkFacetAttributeUpdate
      type: object
    UpgradeAppliedSchemaResponse:
      example:
        DirectoryArn: ""
        UpgradedSchemaArn: ""
      properties:
        UpgradedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the upgraded schema that is returned as part of
              the response.
          title: UpgradedSchemaArn
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the directory that is returned as part of the
              response.
          title: DirectoryArn
      title: UpgradeAppliedSchemaResponse
      type: object
    IncompatibleSchemaException: {}
    UpgradePublishedSchemaResponse:
      example:
        UpgradedSchemaArn: ""
      properties:
        UpgradedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the upgraded schema that is returned as part of
              the response.
          title: UpgradedSchemaArn
      title: UpgradePublishedSchemaResponse
      type: object
    AttributeKeyAndValueList:
      items:
        $ref: '#/components/schemas/AttributeKeyAndValue'
      type: array
    AddFacetToObjectRequest:
      example:
        SchemaFacet:
          FacetName: ""
          SchemaArn: ""
        ObjectReference:
          Selector: ""
        ObjectAttributeList: ""
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/AddFacetToObjectRequest_SchemaFacet'
        ObjectAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: Attributes on the facet that you are adding to the object.
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObjectRequest_ObjectReference'
      required:
      - ObjectReference
      - SchemaFacet
      title: AddFacetToObjectRequest
      type: object
    ApplySchemaRequest:
      example:
        PublishedSchemaArn: ""
      properties:
        PublishedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "Published schema Amazon Resource Name (ARN) that needs to\
              \ be copied. For more information, see <a>arns</a>."
      required:
      - PublishedSchemaArn
      title: ApplySchemaRequest
      type: object
    Arns:
      items:
        $ref: '#/components/schemas/Arn'
      type: array
    LinkName:
      maxLength: 64
      minLength: 1
      pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
      title: LinkName
      type: string
    AttachObjectRequest:
      example:
        LinkName: ""
        ParentReference:
          Selector: ""
        ChildReference:
          Selector: ""
      properties:
        ParentReference:
          $ref: '#/components/schemas/AttachObjectRequest_ParentReference'
        ChildReference:
          $ref: '#/components/schemas/AttachObjectRequest_ChildReference'
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          - description: The link name with which the child object is attached to
              the parent.
      required:
      - ChildReference
      - LinkName
      - ParentReference
      title: AttachObjectRequest
      type: object
    ObjectIdentifier:
      title: ObjectIdentifier
      type: string
    AttachPolicyRequest:
      example:
        ObjectReference:
          Selector: ""
        PolicyReference:
          Selector: ""
      properties:
        PolicyReference:
          $ref: '#/components/schemas/AttachPolicyRequest_PolicyReference'
        ObjectReference:
          $ref: '#/components/schemas/AttachPolicyRequest_ObjectReference'
      required:
      - ObjectReference
      - PolicyReference
      title: AttachPolicyRequest
      type: object
    AttachToIndexRequest:
      example:
        TargetReference:
          Selector: ""
        IndexReference:
          Selector: ""
      properties:
        IndexReference:
          $ref: '#/components/schemas/AttachToIndexRequest_IndexReference'
        TargetReference:
          $ref: '#/components/schemas/AttachToIndexRequest_TargetReference'
      required:
      - IndexReference
      - TargetReference
      title: AttachToIndexRequest
      type: object
    AttachTypedLinkRequest:
      example:
        TargetObjectReference:
          Selector: ""
        Attributes: ""
        TypedLinkFacet:
          TypedLinkName: ""
          SchemaArn: ""
        SourceObjectReference:
          Selector: ""
      properties:
        SourceObjectReference:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_SourceObjectReference'
        TargetObjectReference:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference'
        TypedLinkFacet:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_TypedLinkFacet'
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeNameAndValueList'
          - description: A set of attributes that are associated with the typed link.
      required:
      - Attributes
      - SourceObjectReference
      - TargetObjectReference
      - TypedLinkFacet
      title: AttachTypedLinkRequest
      type: object
    TypedLinkSpecifier:
      description: "Contains all the information that is used to uniquely identify\
        \ a typed link. The parameters discussed in this topic are used to uniquely\
        \ specify the typed link being operated on. The <a>AttachTypedLink</a> API\
        \ returns a typed link specifier while the <a>DetachTypedLink</a> API accepts\
        \ one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a>\
        \ API operations provide typed link specifiers as output. You can also construct\
        \ a typed link specifier from scratch."
      properties:
        TypedLinkFacet:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_TypedLinkFacet'
        SourceObjectReference:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_SourceObjectReference'
        TargetObjectReference:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference'
        IdentityAttributeValues:
          allOf:
          - $ref: '#/components/schemas/AttributeNameAndValueList'
          - description: Identifies the attribute value to update.
          title: IdentityAttributeValues
      required:
      - IdentityAttributeValues
      - SourceObjectReference
      - TargetObjectReference
      - TypedLinkFacet
      title: TypedLinkSpecifier
      type: object
    TypedAttributeValue:
      description: "Represents the data for a typed attribute. You can set one, and\
        \ only one, of the elements. Each attribute in an item is a name-value pair.\
        \ Attributes have a single value."
      properties:
        StringValue:
          allOf:
          - $ref: '#/components/schemas/StringAttributeValue'
          - description: A string data value.
          title: StringValue
        BinaryValue:
          allOf:
          - $ref: '#/components/schemas/BinaryAttributeValue'
          - description: A binary data value.
          title: BinaryValue
        BooleanValue:
          allOf:
          - $ref: '#/components/schemas/BooleanAttributeValue'
          - description: A Boolean data value.
          title: BooleanValue
        NumberValue:
          allOf:
          - $ref: '#/components/schemas/NumberAttributeValue'
          - description: A number data value.
          title: NumberValue
        DatetimeValue:
          allOf:
          - $ref: '#/components/schemas/DatetimeAttributeValue'
          - description: A date and time value.
          title: DatetimeValue
      title: TypedAttributeValue
      type: object
    AttributeKeyList:
      items:
        $ref: '#/components/schemas/AttributeKey'
      type: array
    BatchAddFacetToObject:
      description: Represents the output of a batch add facet to object operation.
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/BatchAddFacetToObject_SchemaFacet'
        ObjectAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: The attributes to set on the object.
          title: ObjectAttributeList
        ObjectReference:
          $ref: '#/components/schemas/BatchAddFacetToObject_ObjectReference'
      required:
      - ObjectAttributeList
      - ObjectReference
      - SchemaFacet
      title: BatchAddFacetToObject
      type: object
    BatchAddFacetToObjectResponse:
      description: The result of a batch add facet to object operation.
      properties: {}
      type: object
    BatchAttachObject:
      description: Represents the output of an <a>AttachObject</a> operation.
      properties:
        ParentReference:
          $ref: '#/components/schemas/AttachObjectRequest_ParentReference'
        ChildReference:
          $ref: '#/components/schemas/BatchAttachObject_ChildReference'
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          - description: The name of the link.
          title: LinkName
      required:
      - ChildReference
      - LinkName
      - ParentReference
      title: BatchAttachObject
      type: object
    BatchAttachObjectResponse:
      description: Represents the output batch <a>AttachObject</a> response operation.
      properties:
        attachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the object that has
              been attached.
          title: attachedObjectIdentifier
      title: BatchAttachObjectResponse
      type: object
    BatchAttachPolicy:
      description: "Attaches a policy object to a regular object inside a <a>BatchRead</a>\
        \ operation.\_For more information, see <a>AttachPolicy</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        PolicyReference:
          $ref: '#/components/schemas/AttachPolicyRequest_PolicyReference'
        ObjectReference:
          $ref: '#/components/schemas/AttachPolicyRequest_ObjectReference'
      required:
      - ObjectReference
      - PolicyReference
      title: BatchAttachPolicy
      type: object
    BatchAttachPolicyResponse:
      description: Represents the output of an <a>AttachPolicy</a> response operation.
      properties: {}
      type: object
    BatchAttachToIndex:
      description: "Attaches the specified object to the specified index inside a\
        \ <a>BatchRead</a> operation. For more information, see <a>AttachToIndex</a>\
        \ and <a>BatchReadRequest$Operations</a>."
      properties:
        IndexReference:
          $ref: '#/components/schemas/AttachToIndexRequest_IndexReference'
        TargetReference:
          $ref: '#/components/schemas/AttachToIndexRequest_TargetReference'
      required:
      - IndexReference
      - TargetReference
      title: BatchAttachToIndex
      type: object
    BatchAttachToIndexResponse:
      description: Represents the output of a <a>AttachToIndex</a> response operation.
      properties:
        AttachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the object that was
              attached to the index.
          title: AttachedObjectIdentifier
      title: BatchAttachToIndexResponse
      type: object
    BatchAttachTypedLink:
      description: "Attaches a typed link to a specified source and target object\
        \ inside a <a>BatchRead</a> operation. For more information, see <a>AttachTypedLink</a>\
        \ and <a>BatchReadRequest$Operations</a>."
      properties:
        SourceObjectReference:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_SourceObjectReference'
        TargetObjectReference:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference'
        TypedLinkFacet:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_TypedLinkFacet'
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeNameAndValueList'
          - description: A set of attributes that are associated with the typed link.
          title: Attributes
      required:
      - Attributes
      - SourceObjectReference
      - TargetObjectReference
      - TypedLinkFacet
      title: BatchAttachTypedLink
      type: object
    BatchAttachTypedLinkResponse:
      description: Represents the output of a <a>AttachTypedLink</a> response operation.
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/AttachTypedLinkResponse_TypedLinkSpecifier'
      title: BatchAttachTypedLinkResponse
      type: object
    Bool:
      type: boolean
    BatchReferenceName:
      type: string
    BatchCreateIndex:
      description: "Creates an index object inside of a <a>BatchRead</a> operation.\
        \ For more information, see <a>CreateIndex</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        OrderedIndexedAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyList'
          - description: Specifies the attributes that should be indexed on. Currently
              only a single attribute is supported.
          title: OrderedIndexedAttributeList
        IsUnique:
          allOf:
          - $ref: '#/components/schemas/Bool'
          - description: Indicates whether the attribute that is being indexed has
              unique values or not.
          title: IsUnique
        ParentReference:
          $ref: '#/components/schemas/BatchCreateIndex_ParentReference'
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          - description: The name of the link between the parent object and the index
              object.
          title: LinkName
        BatchReferenceName:
          allOf:
          - $ref: '#/components/schemas/BatchReferenceName'
          - description: The batch reference name. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/transaction_support.html">Transaction
              Support</a> for more information.
          title: BatchReferenceName
      required:
      - IsUnique
      - OrderedIndexedAttributeList
      title: BatchCreateIndex
      type: object
    BatchCreateIndexResponse:
      description: Represents the output of a <a>CreateIndex</a> response operation.
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the index created by
              this operation.
          title: ObjectIdentifier
      title: BatchCreateIndexResponse
      type: object
    SchemaFacetList:
      items:
        $ref: '#/components/schemas/SchemaFacet'
      type: array
    BatchCreateObject:
      description: Represents the output of a <a>CreateObject</a> operation.
      properties:
        SchemaFacet:
          allOf:
          - $ref: '#/components/schemas/SchemaFacetList'
          - description: "A list of <code>FacetArns</code> that will be associated\
              \ with the object. For more information, see <a>arns</a>."
          title: SchemaFacet
        ObjectAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: "An attribute map, which contains an attribute ARN as the\
              \ key and attribute value as the map value."
          title: ObjectAttributeList
        ParentReference:
          $ref: '#/components/schemas/BatchCreateObject_ParentReference'
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          - description: The name of the link.
          title: LinkName
        BatchReferenceName:
          allOf:
          - $ref: '#/components/schemas/BatchReferenceName'
          - description: The batch reference name. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/transaction_support.html">Transaction
              Support</a> for more information.
          title: BatchReferenceName
      required:
      - ObjectAttributeList
      - SchemaFacet
      title: BatchCreateObject
      type: object
    BatchCreateObjectResponse:
      description: Represents the output of a <a>CreateObject</a> response operation.
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The ID that is associated with the object.
          title: ObjectIdentifier
      title: BatchCreateObjectResponse
      type: object
    BatchDeleteObject:
      description: Represents the output of a <a>DeleteObject</a> operation.
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchDeleteObject_ObjectReference'
      required:
      - ObjectReference
      title: BatchDeleteObject
      type: object
    BatchDeleteObjectResponse:
      description: Represents the output of a <a>DeleteObject</a> response operation.
      properties: {}
      type: object
    BatchDetachFromIndex:
      description: "Detaches the specified object from the specified index inside\
        \ a <a>BatchRead</a> operation. For more information, see <a>DetachFromIndex</a>\
        \ and <a>BatchReadRequest$Operations</a>."
      properties:
        IndexReference:
          $ref: '#/components/schemas/BatchDetachFromIndex_IndexReference'
        TargetReference:
          $ref: '#/components/schemas/BatchDetachFromIndex_TargetReference'
      required:
      - IndexReference
      - TargetReference
      title: BatchDetachFromIndex
      type: object
    BatchDetachFromIndexResponse:
      description: Represents the output of a <a>DetachFromIndex</a> response operation.
      properties:
        DetachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the object that was
              detached from the index.
          title: DetachedObjectIdentifier
      title: BatchDetachFromIndexResponse
      type: object
    BatchDetachObject:
      description: Represents the output of a <a>DetachObject</a> operation.
      properties:
        ParentReference:
          $ref: '#/components/schemas/BatchDetachObject_ParentReference'
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          - description: The name of the link.
          title: LinkName
        BatchReferenceName:
          allOf:
          - $ref: '#/components/schemas/BatchReferenceName'
          - description: The batch reference name. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/transaction_support.html">Transaction
              Support</a> for more information.
          title: BatchReferenceName
      required:
      - LinkName
      - ParentReference
      title: BatchDetachObject
      type: object
    BatchDetachObjectResponse:
      description: Represents the output of a <a>DetachObject</a> response operation.
      properties:
        detachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the detached object.
          title: detachedObjectIdentifier
      title: BatchDetachObjectResponse
      type: object
    BatchDetachPolicy:
      description: "Detaches the specified policy from the specified directory inside\
        \ a <a>BatchWrite</a> operation. For more information, see <a>DetachPolicy</a>\
        \ and <a>BatchWriteRequest$Operations</a>."
      properties:
        PolicyReference:
          $ref: '#/components/schemas/BatchDetachPolicy_PolicyReference'
        ObjectReference:
          $ref: '#/components/schemas/BatchDetachPolicy_ObjectReference'
      required:
      - ObjectReference
      - PolicyReference
      title: BatchDetachPolicy
      type: object
    BatchDetachPolicyResponse:
      description: Represents the output of a <a>DetachPolicy</a> response operation.
      properties: {}
      type: object
    BatchDetachTypedLink:
      description: "Detaches a typed link from a specified source and target object\
        \ inside a <a>BatchRead</a> operation. For more information, see <a>DetachTypedLink</a>\
        \ and <a>BatchReadRequest$Operations</a>."
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/BatchDetachTypedLink_TypedLinkSpecifier'
      required:
      - TypedLinkSpecifier
      title: BatchDetachTypedLink
      type: object
    BatchDetachTypedLinkResponse:
      description: Represents the output of a <a>DetachTypedLink</a> response operation.
      properties: {}
      type: object
    BatchGetLinkAttributes:
      description: "Retrieves attributes that are associated with a typed link inside\
        \ a <a>BatchRead</a> operation. For more information, see <a>GetLinkAttributes</a>\
        \ and <a>BatchReadRequest$Operations</a>."
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/BatchGetLinkAttributes_TypedLinkSpecifier'
        AttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          - description: A list of attribute names whose values will be retrieved.
          title: AttributeNames
      required:
      - AttributeNames
      - TypedLinkSpecifier
      title: BatchGetLinkAttributes
      type: object
    BatchGetLinkAttributesResponse:
      description: Represents the output of a <a>GetLinkAttributes</a> response operation.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: The attributes that are associated with the typed link.
          title: Attributes
      title: BatchGetLinkAttributesResponse
      type: object
    BatchGetObjectAttributes:
      description: "Retrieves attributes within a facet that are associated with an\
        \ object inside an <a>BatchRead</a> operation. For more information, see <a>GetObjectAttributes</a>\
        \ and <a>BatchReadRequest$Operations</a>."
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchGetObjectAttributes_ObjectReference'
        SchemaFacet:
          $ref: '#/components/schemas/BatchGetObjectAttributes_SchemaFacet'
        AttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          - description: List of attribute names whose values will be retrieved.
          title: AttributeNames
      required:
      - AttributeNames
      - ObjectReference
      - SchemaFacet
      title: BatchGetObjectAttributes
      type: object
    BatchGetObjectAttributesResponse:
      description: Represents the output of a <a>GetObjectAttributes</a> response
        operation.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: The attribute values that are associated with an object.
          title: Attributes
      title: BatchGetObjectAttributesResponse
      type: object
    BatchGetObjectInformation:
      description: "Retrieves metadata about an object inside a <a>BatchRead</a> operation.\
        \ For more information, see <a>GetObjectInformation</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchGetObjectInformation_ObjectReference'
      required:
      - ObjectReference
      title: BatchGetObjectInformation
      type: object
    BatchGetObjectInformationResponse:
      description: Represents the output of a <a>GetObjectInformation</a> response
        operation.
      properties:
        SchemaFacets:
          allOf:
          - $ref: '#/components/schemas/SchemaFacetList'
          - description: The facets attached to the specified object.
          title: SchemaFacets
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> of the specified object.
          title: ObjectIdentifier
      title: BatchGetObjectInformationResponse
      type: object
    NextToken:
      type: string
    NumberResults:
      minimum: 1
      type: integer
    BatchListAttachedIndices:
      description: "Lists indices attached to an object inside a <a>BatchRead</a>\
        \ operation. For more information, see <a>ListAttachedIndices</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        TargetReference:
          $ref: '#/components/schemas/BatchListAttachedIndices_TargetReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
          title: MaxResults
      required:
      - TargetReference
      title: BatchListAttachedIndices
      type: object
    IndexAttachmentList:
      items:
        $ref: '#/components/schemas/IndexAttachment'
      type: array
    BatchListAttachedIndicesResponse:
      description: Represents the output of a <a>ListAttachedIndices</a> response
        operation.
      properties:
        IndexAttachments:
          allOf:
          - $ref: '#/components/schemas/IndexAttachmentList'
          - description: The indices attached to the specified object.
          title: IndexAttachments
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListAttachedIndicesResponse
      type: object
    TypedLinkAttributeRangeList:
      items:
        $ref: '#/components/schemas/TypedLinkAttributeRange'
      type: array
    BatchListIncomingTypedLinks:
      description: "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a>\
        \ information for an object inside a <a>BatchRead</a> operation. For more\
        \ information, see <a>ListIncomingTypedLinks</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchListIncomingTypedLinks_ObjectReference'
        FilterAttributeRanges:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          - description: "Provides range filters for multiple attributes. When providing\
              \ ranges to typed link selection, any inexact ranges must be specified\
              \ at the end. Any attributes that do not have a range specified are\
              \ presumed to match the entire range."
          title: FilterAttributeRanges
        FilterTypedLink:
          $ref: '#/components/schemas/BatchListIncomingTypedLinks_FilterTypedLink'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
          title: MaxResults
      required:
      - ObjectReference
      title: BatchListIncomingTypedLinks
      type: object
    TypedLinkSpecifierList:
      items:
        $ref: '#/components/schemas/TypedLinkSpecifier'
      type: array
    BatchListIncomingTypedLinksResponse:
      description: Represents the output of a <a>ListIncomingTypedLinks</a> response
        operation.
      properties:
        LinkSpecifiers:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifierList'
          - description: Returns one or more typed link specifiers as output.
          title: LinkSpecifiers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListIncomingTypedLinksResponse
      type: object
    ObjectAttributeRangeList:
      items:
        $ref: '#/components/schemas/ObjectAttributeRange'
      type: array
    BatchListIndex:
      description: "Lists objects attached to the specified index inside a <a>BatchRead</a>\
        \ operation. For more information, see <a>ListIndex</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        RangesOnIndexedValues:
          allOf:
          - $ref: '#/components/schemas/ObjectAttributeRangeList'
          - description: Specifies the ranges of indexed values that you want to query.
          title: RangesOnIndexedValues
        IndexReference:
          $ref: '#/components/schemas/BatchListIndex_IndexReference'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      required:
      - IndexReference
      title: BatchListIndex
      type: object
    BatchListIndexResponse:
      description: Represents the output of a <a>ListIndex</a> response operation.
      properties:
        IndexAttachments:
          allOf:
          - $ref: '#/components/schemas/IndexAttachmentList'
          - description: The objects and indexed values attached to the index.
          title: IndexAttachments
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListIndexResponse
      type: object
    BatchListObjectAttributes:
      description: Represents the output of a <a>ListObjectAttributes</a> operation.
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchListObjectAttributes_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of items to be retrieved in a single call.
              This is an approximate number.
          title: MaxResults
        FacetFilter:
          $ref: '#/components/schemas/BatchListObjectAttributes_FacetFilter'
      required:
      - ObjectReference
      title: BatchListObjectAttributes
      type: object
    BatchListObjectAttributesResponse:
      description: Represents the output of a <a>ListObjectAttributes</a> response
        operation.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: The attributes map that is associated with the object. <code>AttributeArn</code>
              is the key; attribute value is the value.
          title: Attributes
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListObjectAttributesResponse
      type: object
    BatchListObjectChildren:
      description: Represents the output of a <a>ListObjectChildren</a> operation.
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchListObjectChildren_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: Maximum number of items to be retrieved in a single call.
              This is an approximate number.
          title: MaxResults
      required:
      - ObjectReference
      title: BatchListObjectChildren
      type: object
    LinkNameToObjectIdentifierMap:
      additionalProperties:
        $ref: '#/components/schemas/ObjectIdentifier'
      type: object
    BatchListObjectChildrenResponse:
      description: Represents the output of a <a>ListObjectChildren</a> response operation.
      properties:
        Children:
          allOf:
          - $ref: '#/components/schemas/LinkNameToObjectIdentifierMap'
          - description: "The children structure, which is a map with the key as the\
              \ <code>LinkName</code> and <code>ObjectIdentifier</code> as the value."
          title: Children
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListObjectChildrenResponse
      type: object
    BatchListObjectParentPaths:
      description: "Retrieves all available parent paths for any object type such\
        \ as node, leaf node, policy node, and index node objects inside a <a>BatchRead</a>\
        \ operation. For more information, see <a>ListObjectParentPaths</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchListIncomingTypedLinks_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
          title: MaxResults
      required:
      - ObjectReference
      title: BatchListObjectParentPaths
      type: object
    PathToObjectIdentifiersList:
      items:
        $ref: '#/components/schemas/PathToObjectIdentifiers'
      type: array
    BatchListObjectParentPathsResponse:
      description: Represents the output of a <a>ListObjectParentPaths</a> response
        operation.
      properties:
        PathToObjectIdentifiersList:
          allOf:
          - $ref: '#/components/schemas/PathToObjectIdentifiersList'
          - description: Returns the path to the <code>ObjectIdentifiers</code> that
              are associated with the directory.
          title: PathToObjectIdentifiersList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListObjectParentPathsResponse
      type: object
    BatchListObjectParents:
      description: Lists parent objects that are associated with a given object in
        pagination fashion.
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of items to be retrieved in a single call.
              This is an approximate number.
          title: MaxResults
      required:
      - ObjectReference
      title: BatchListObjectParents
      type: object
    ObjectIdentifierAndLinkNameList:
      items:
        $ref: '#/components/schemas/ObjectIdentifierAndLinkNameTuple'
      type: array
    BatchListObjectParentsResponse:
      description: Represents the output of a <a>ListObjectParents</a> response operation.
      properties:
        ParentLinks:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierAndLinkNameList'
          - description: Returns a list of parent reference and LinkName Tuples.
          title: ParentLinks
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListObjectParentsResponse
      type: object
    BatchListObjectPolicies:
      description: "Returns policies attached to an object in pagination fashion inside\
        \ a <a>BatchRead</a> operation. For more information, see <a>ListObjectPolicies</a>\
        \ and <a>BatchReadRequest$Operations</a>."
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchListIncomingTypedLinks_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
          title: MaxResults
      required:
      - ObjectReference
      title: BatchListObjectPolicies
      type: object
    ObjectIdentifierList:
      items:
        $ref: '#/components/schemas/ObjectIdentifier'
      type: array
    BatchListObjectPoliciesResponse:
      description: Represents the output of a <a>ListObjectPolicies</a> response operation.
      properties:
        AttachedPolicyIds:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          - description: "A list of policy <code>ObjectIdentifiers</code>, that are\
              \ attached to the object."
          title: AttachedPolicyIds
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListObjectPoliciesResponse
      type: object
    BatchListOutgoingTypedLinks:
      description: "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a>\
        \ information for an object inside a <a>BatchRead</a> operation. For more\
        \ information, see <a>ListOutgoingTypedLinks</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchListIncomingTypedLinks_ObjectReference'
        FilterAttributeRanges:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          - description: "Provides range filters for multiple attributes. When providing\
              \ ranges to typed link selection, any inexact ranges must be specified\
              \ at the end. Any attributes that do not have a range specified are\
              \ presumed to match the entire range."
          title: FilterAttributeRanges
        FilterTypedLink:
          $ref: '#/components/schemas/BatchListOutgoingTypedLinks_FilterTypedLink'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
          title: MaxResults
      required:
      - ObjectReference
      title: BatchListOutgoingTypedLinks
      type: object
    BatchListOutgoingTypedLinksResponse:
      description: Represents the output of a <a>ListOutgoingTypedLinks</a> response
        operation.
      properties:
        TypedLinkSpecifiers:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifierList'
          - description: Returns a typed link specifier as output.
          title: TypedLinkSpecifiers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListOutgoingTypedLinksResponse
      type: object
    BatchListPolicyAttachments:
      description: "Returns all of the <code>ObjectIdentifiers</code> to which a given\
        \ policy is attached inside a <a>BatchRead</a> operation. For more information,\
        \ see <a>ListPolicyAttachments</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        PolicyReference:
          $ref: '#/components/schemas/BatchListPolicyAttachments_PolicyReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
          title: MaxResults
      required:
      - PolicyReference
      title: BatchListPolicyAttachments
      type: object
    BatchListPolicyAttachmentsResponse:
      description: Represents the output of a <a>ListPolicyAttachments</a> response
        operation.
      properties:
        ObjectIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          - description: A list of <code>ObjectIdentifiers</code> to which the policy
              is attached.
          title: ObjectIdentifiers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchListPolicyAttachmentsResponse
      type: object
    BatchLookupPolicy:
      description: "Lists all policies from the root of the Directory to the object\
        \ specified inside a <a>BatchRead</a> operation. For more information, see\
        \ <a>LookupPolicy</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchLookupPolicy_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
          title: MaxResults
      required:
      - ObjectReference
      title: BatchLookupPolicy
      type: object
    PolicyToPathList:
      items:
        $ref: '#/components/schemas/PolicyToPath'
      type: array
    BatchLookupPolicyResponse:
      description: Represents the output of a <a>LookupPolicy</a> response operation.
      properties:
        PolicyToPathList:
          allOf:
          - $ref: '#/components/schemas/PolicyToPathList'
          - description: "Provides list of path to policies. Policies contain <code>PolicyId</code>,\
              \ <code>ObjectIdentifier</code>, and <code>PolicyType</code>. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\"\
              >Policies</a>."
          title: PolicyToPathList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
          title: NextToken
      title: BatchLookupPolicyResponse
      type: object
    BatchReadExceptionType:
      enum:
      - ValidationException
      - InvalidArnException
      - ResourceNotFoundException
      - InvalidNextTokenException
      - AccessDeniedException
      - NotNodeException
      - FacetValidationException
      - CannotListParentOfRootException
      - NotIndexException
      - NotPolicyException
      - DirectoryNotEnabledException
      - LimitExceededException
      - InternalServiceException
      title: BatchReadExceptionType
      type: string
    ExceptionMessage:
      type: string
    BatchReadException:
      description: "The batch read exception structure, which contains the exception\
        \ type and message."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/BatchReadExceptionType'
          - description: "A type of exception, such as <code>InvalidArnException</code>."
          title: Type
        Message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          - description: An exception message that is associated with the failure.
          title: Message
      title: BatchReadException
      type: object
    BatchReadOperationList:
      items:
        $ref: '#/components/schemas/BatchReadOperation'
      type: array
    BatchReadSuccessfulResponse:
      description: Represents the output of a <code>BatchRead</code> success response
        operation.
      properties:
        ListObjectAttributes:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListObjectAttributes'
        ListObjectChildren:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListObjectChildren'
        GetObjectInformation:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_GetObjectInformation'
        GetObjectAttributes:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_GetObjectAttributes'
        ListAttachedIndices:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListAttachedIndices'
        ListObjectParentPaths:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListObjectParentPaths'
        ListObjectPolicies:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListObjectPolicies'
        ListPolicyAttachments:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListPolicyAttachments'
        LookupPolicy:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_LookupPolicy'
        ListIndex:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListIndex'
        ListOutgoingTypedLinks:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListOutgoingTypedLinks'
        ListIncomingTypedLinks:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListIncomingTypedLinks'
        GetLinkAttributes:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_GetLinkAttributes'
        ListObjectParents:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse_ListObjectParents'
      title: BatchReadSuccessfulResponse
      type: object
    BatchReadOperationResponse:
      description: Represents the output of a <code>BatchRead</code> response operation.
      properties:
        SuccessfulResponse:
          $ref: '#/components/schemas/BatchReadOperationResponse_SuccessfulResponse'
        ExceptionResponse:
          $ref: '#/components/schemas/BatchReadOperationResponse_ExceptionResponse'
      title: BatchReadOperationResponse
      type: object
    BatchReadOperationResponseList:
      items:
        $ref: '#/components/schemas/BatchReadOperationResponse'
      type: array
    ConsistencyLevel:
      enum:
      - SERIALIZABLE
      - EVENTUAL
      title: ConsistencyLevel
      type: string
    BatchReadRequest:
      example:
        Operations: ""
      properties:
        Operations:
          allOf:
          - $ref: '#/components/schemas/BatchReadOperationList'
          - description: A list of operations that are part of the batch.
      required:
      - Operations
      title: BatchReadRequest
      type: object
    BatchRemoveFacetFromObject:
      description: A batch operation to remove a facet from an object.
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/BatchRemoveFacetFromObject_SchemaFacet'
        ObjectReference:
          $ref: '#/components/schemas/BatchRemoveFacetFromObject_ObjectReference'
      required:
      - ObjectReference
      - SchemaFacet
      title: BatchRemoveFacetFromObject
      type: object
    BatchRemoveFacetFromObjectResponse:
      description: An empty result that represents success.
      properties: {}
      type: object
    LinkAttributeUpdateList:
      items:
        $ref: '#/components/schemas/LinkAttributeUpdate'
      type: array
    BatchUpdateLinkAttributes:
      description: "Updates a given typed link’s attributes inside a <a>BatchRead</a>\
        \ operation. Attributes to be updated must not contribute to the typed link’\
        s identity, as defined by its <code>IdentityAttributeOrder</code>. For more\
        \ information, see <a>UpdateLinkAttributes</a> and <a>BatchReadRequest$Operations</a>."
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/BatchGetLinkAttributes_TypedLinkSpecifier'
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/LinkAttributeUpdateList'
          - description: The attributes update structure.
          title: AttributeUpdates
      required:
      - AttributeUpdates
      - TypedLinkSpecifier
      title: BatchUpdateLinkAttributes
      type: object
    BatchUpdateLinkAttributesResponse:
      description: Represents the output of a <a>UpdateLinkAttributes</a> response
        operation.
      properties: {}
      type: object
    ObjectAttributeUpdateList:
      items:
        $ref: '#/components/schemas/ObjectAttributeUpdate'
      type: array
    BatchUpdateObjectAttributes:
      description: 'Represents the output of a <code>BatchUpdate</code> operation. '
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchUpdateObjectAttributes_ObjectReference'
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/ObjectAttributeUpdateList'
          - description: Attributes update structure.
          title: AttributeUpdates
      required:
      - AttributeUpdates
      - ObjectReference
      title: BatchUpdateObjectAttributes
      type: object
    BatchUpdateObjectAttributesResponse:
      description: Represents the output of a <code>BatchUpdate</code> response operation.
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: ID that is associated with the object.
          title: ObjectIdentifier
      title: BatchUpdateObjectAttributesResponse
      type: object
    BatchWriteOperationList:
      items:
        $ref: '#/components/schemas/BatchWriteOperation'
      type: array
    BatchWriteOperationResponse:
      description: Represents the output of a <code>BatchWrite</code> response operation.
      properties:
        CreateObject:
          $ref: '#/components/schemas/BatchWriteOperationResponse_CreateObject'
        AttachObject:
          $ref: '#/components/schemas/BatchWriteOperationResponse_AttachObject'
        DetachObject:
          $ref: '#/components/schemas/BatchWriteOperationResponse_DetachObject'
        UpdateObjectAttributes:
          $ref: '#/components/schemas/BatchWriteOperationResponse_UpdateObjectAttributes'
        DeleteObject:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteObjectResponse'
          - description: Deletes an object in a <a>Directory</a>.
          title: DeleteObject
        AddFacetToObject:
          allOf:
          - $ref: '#/components/schemas/BatchAddFacetToObjectResponse'
          - description: The result of an add facet to object batch operation.
          title: AddFacetToObject
        RemoveFacetFromObject:
          allOf:
          - $ref: '#/components/schemas/BatchRemoveFacetFromObjectResponse'
          - description: The result of a batch remove facet from object operation.
          title: RemoveFacetFromObject
        AttachPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchAttachPolicyResponse'
          - description: Attaches a policy object to a regular object. An object can
              have a limited number of attached policies.
          title: AttachPolicy
        DetachPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchDetachPolicyResponse'
          - description: Detaches a policy from a <a>Directory</a>.
          title: DetachPolicy
        CreateIndex:
          $ref: '#/components/schemas/BatchWriteOperationResponse_CreateIndex'
        AttachToIndex:
          $ref: '#/components/schemas/BatchWriteOperationResponse_AttachToIndex'
        DetachFromIndex:
          $ref: '#/components/schemas/BatchWriteOperationResponse_DetachFromIndex'
        AttachTypedLink:
          $ref: '#/components/schemas/BatchWriteOperationResponse_AttachTypedLink'
        DetachTypedLink:
          allOf:
          - $ref: '#/components/schemas/BatchDetachTypedLinkResponse'
          - description: "Detaches a typed link from a specified source and target\
              \ object. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
              >Typed Links</a>."
          title: DetachTypedLink
        UpdateLinkAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateLinkAttributesResponse'
          - description: Represents the output of a <code>BatchWrite</code> response
              operation.
          title: UpdateLinkAttributes
      title: BatchWriteOperationResponse
      type: object
    BatchWriteOperationResponseList:
      items:
        $ref: '#/components/schemas/BatchWriteOperationResponse'
      type: array
    BatchWriteRequest:
      example:
        Operations: ""
      properties:
        Operations:
          allOf:
          - $ref: '#/components/schemas/BatchWriteOperationList'
          - description: A list of operations that are part of the batch.
      required:
      - Operations
      title: BatchWriteRequest
      type: object
    BinaryAttributeValue:
      type: string
    BooleanAttributeValue:
      type: boolean
    DirectoryName:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9._-]*$"
      type: string
    CreateDirectoryRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          - description: "The name of the <a>Directory</a>. Should be unique per account,\
              \ per region."
      required:
      - Name
      title: CreateDirectoryRequest
      type: object
    DirectoryArn:
      type: string
    FacetAttributeList:
      items:
        $ref: '#/components/schemas/FacetAttribute'
      type: array
    ObjectType:
      enum:
      - NODE
      - LEAF_NODE
      - POLICY
      - INDEX
      title: ObjectType
      type: string
    FacetStyle:
      enum:
      - STATIC
      - DYNAMIC
      title: FacetStyle
      type: string
    CreateFacetRequest:
      example:
        ObjectType: ""
        Attributes: ""
        FacetStyle: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: "The name of the <a>Facet</a>, which is unique for a given\
              \ schema."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeList'
          - description: The attributes that are associated with the <a>Facet</a>.
        ObjectType:
          allOf:
          - $ref: '#/components/schemas/ObjectType'
          - description: "<p>Specifies whether a given object created from this facet\
              \ is of type node, leaf node, policy or index.</p> <ul> <li> <p>Node:\
              \ Can have multiple children but one parent.</p> </li> </ul> <ul> <li>\
              \ <p>Leaf node: Cannot have children but can have multiple parents.</p>\
              \ </li> </ul> <ul> <li> <p>Policy: Allows you to store a policy document\
              \ and policy type. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\"\
              >Policies</a>.</p> </li> </ul> <ul> <li> <p>Index: Can be created with\
              \ the Index API.</p> </li> </ul>"
        FacetStyle:
          allOf:
          - $ref: '#/components/schemas/FacetStyle'
          - description: "There are two different styles that you can define on any\
              \ given facet, <code>Static</code> and <code>Dynamic</code>. For static\
              \ facets, all attributes must be defined in the schema. For dynamic\
              \ facets, attributes can be defined during data plane operations."
      required:
      - Name
      title: CreateFacetRequest
      type: object
    CreateIndexRequest:
      example:
        LinkName: ""
        ParentReference:
          Selector: ""
        IsUnique: ""
        OrderedIndexedAttributeList: ""
      properties:
        OrderedIndexedAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyList'
          - description: Specifies the attributes that should be indexed on. Currently
              only a single attribute is supported.
        IsUnique:
          allOf:
          - $ref: '#/components/schemas/Bool'
          - description: Indicates whether the attribute that is being indexed has
              unique values or not.
        ParentReference:
          $ref: '#/components/schemas/BatchCreateIndex_ParentReference'
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          - description: The name of the link between the parent object and the index
              object.
      required:
      - IsUnique
      - OrderedIndexedAttributeList
      title: CreateIndexRequest
      type: object
    CreateObjectRequest:
      example:
        LinkName: ""
        ParentReference:
          Selector: ""
        SchemaFacets: ""
        ObjectAttributeList: ""
      properties:
        SchemaFacets:
          allOf:
          - $ref: '#/components/schemas/SchemaFacetList'
          - description: A list of schema facets to be associated with the object.
              Do not provide minor version components. See <a>SchemaFacet</a> for
              details.
        ObjectAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: The attribute map whose attribute ARN contains the key and
              attribute value as the map value.
        ParentReference:
          $ref: '#/components/schemas/BatchCreateObject_ParentReference'
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          - description: The name of link that is used to attach this object to a
              parent.
      required:
      - SchemaFacets
      title: CreateObjectRequest
      type: object
    SchemaName:
      maxLength: 32
      minLength: 1
      pattern: "^[a-zA-Z0-9._-]*$"
      type: string
    CreateSchemaRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SchemaName'
          - description: The name that is associated with the schema. This is unique
              to each account and in each region.
      required:
      - Name
      title: CreateSchemaRequest
      type: object
    TypedLinkFacet:
      description: "Defines the typed links structure and its attributes. To create\
        \ a typed link facet, use the <a>CreateTypedLinkFacet</a> API."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          - description: The unique name of the typed link facet.
          title: Name
        Attributes:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
          - description: "A set of key-value pairs associated with the typed link.\
              \ Typed link attributes are used when you have data values that are\
              \ related to the link itself, and not to one of the two objects being\
              \ linked. Identity attributes also serve to distinguish the link from\
              \ others of the same type between the same objects."
          title: Attributes
        IdentityAttributeOrder:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          - description: "The set of attributes that distinguish links made from this\
              \ facet from each other, in the order of significance. Listing typed\
              \ links can filter on the values of these attributes. See <a>ListOutgoingTypedLinks</a>\
              \ and <a>ListIncomingTypedLinks</a> for details."
          title: IdentityAttributeOrder
      required:
      - Attributes
      - IdentityAttributeOrder
      - Name
      title: TypedLinkFacet
      type: object
    CreateTypedLinkFacetRequest:
      example:
        Facet:
          IdentityAttributeOrder: ""
          Attributes: ""
          Name: ""
      properties:
        Facet:
          $ref: '#/components/schemas/CreateTypedLinkFacetRequest_Facet'
      required:
      - Facet
      title: CreateTypedLinkFacetRequest
      type: object
    Date:
      format: date-time
      type: string
    DatetimeAttributeValue:
      format: date-time
      type: string
    DeleteDirectoryRequest:
      properties: {}
      title: DeleteDirectoryRequest
      type: object
    DeleteFacetRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: The name of the facet to delete.
      required:
      - Name
      title: DeleteFacetRequest
      type: object
    DeleteObjectRequest:
      example:
        ObjectReference:
          Selector: ""
      properties:
        ObjectReference:
          $ref: '#/components/schemas/DeleteObjectRequest_ObjectReference'
      required:
      - ObjectReference
      title: DeleteObjectRequest
      type: object
    DeleteSchemaRequest:
      properties: {}
      title: DeleteSchemaRequest
      type: object
    DeleteTypedLinkFacetRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          - description: The unique name of the typed link facet.
      required:
      - Name
      title: DeleteTypedLinkFacetRequest
      type: object
    DetachFromIndexRequest:
      properties:
        IndexReference:
          $ref: '#/components/schemas/BatchDetachFromIndex_IndexReference'
        TargetReference:
          $ref: '#/components/schemas/BatchDetachFromIndex_TargetReference'
      required:
      - IndexReference
      - TargetReference
      title: DetachFromIndexRequest
      type: object
    DetachObjectRequest:
      example:
        LinkName: ""
        ParentReference:
          Selector: ""
      properties:
        ParentReference:
          $ref: '#/components/schemas/DetachObjectRequest_ParentReference'
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          - description: The link name associated with the object that needs to be
              detached.
      required:
      - LinkName
      - ParentReference
      title: DetachObjectRequest
      type: object
    DetachPolicyRequest:
      properties:
        PolicyReference:
          $ref: '#/components/schemas/BatchDetachPolicy_PolicyReference'
        ObjectReference:
          $ref: '#/components/schemas/BatchDetachPolicy_ObjectReference'
      required:
      - ObjectReference
      - PolicyReference
      title: DetachPolicyRequest
      type: object
    DetachTypedLinkRequest:
      example:
        TypedLinkSpecifier:
          TargetObjectReference:
            Selector: ""
          IdentityAttributeValues: ""
          TypedLinkFacet:
            TypedLinkName: ""
            SchemaArn: ""
          SourceObjectReference:
            Selector: ""
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/BatchDetachTypedLink_TypedLinkSpecifier'
      required:
      - TypedLinkSpecifier
      title: DetachTypedLinkRequest
      type: object
    DirectoryState:
      enum:
      - ENABLED
      - DISABLED
      - DELETED
      title: DirectoryState
      type: string
    Directory:
      description: Directory structure that includes the directory name and directory
        ARN.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          - description: The name of the directory.
          title: Name
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryArn'
          - description: "The Amazon Resource Name (ARN) that is associated with the\
              \ directory. For more information, see <a>arns</a>."
          title: DirectoryArn
        State:
          allOf:
          - $ref: '#/components/schemas/DirectoryState'
          - description: "The state of the directory. Can be either <code>Enabled</code>,\
              \ <code>Disabled</code>, or <code>Deleted</code>."
          title: State
        CreationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the directory was created.
          title: CreationDateTime
      title: Directory
      type: object
    DirectoryList:
      items:
        $ref: '#/components/schemas/Directory'
      type: array
    DisableDirectoryRequest:
      properties: {}
      title: DisableDirectoryRequest
      type: object
    EnableDirectoryRequest:
      properties: {}
      title: EnableDirectoryRequest
      type: object
    Facet:
      description: "A structure that contains <code>Name</code>, <code>ARN</code>,\
        \ <code>Attributes</code>, <code> <a>Rule</a>s</code>, and <code>ObjectTypes</code>.\
        \ See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_whatarefacets.html\"\
        >Facets</a> for more information."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: The name of the <a>Facet</a>.
          title: Name
        ObjectType:
          allOf:
          - $ref: '#/components/schemas/ObjectType'
          - description: The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a>
              for more details.
          title: ObjectType
        FacetStyle:
          allOf:
          - $ref: '#/components/schemas/FacetStyle'
          - description: "There are two different styles that you can define on any\
              \ given facet, <code>Static</code> and <code>Dynamic</code>. For static\
              \ facets, all attributes must be defined in the schema. For dynamic\
              \ facets, attributes can be defined during data plane operations."
          title: FacetStyle
      title: Facet
      type: object
    FacetAttributeDefinition:
      description: A facet attribute definition. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html">Attribute
        References</a> for more information.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeType'
          - description: The type of the attribute.
          title: Type
        DefaultValue:
          $ref: '#/components/schemas/FacetAttributeDefinition_DefaultValue'
        IsImmutable:
          allOf:
          - $ref: '#/components/schemas/Bool'
          - description: Whether the attribute is mutable or not.
          title: IsImmutable
        Rules:
          allOf:
          - $ref: '#/components/schemas/RuleMap'
          - description: Validation rules attached to the attribute definition.
          title: Rules
      required:
      - Type
      title: FacetAttributeDefinition
      type: object
    FacetAttributeReference:
      description: The facet attribute reference that specifies the attribute definition
        that contains the attribute facet name and attribute name.
      properties:
        TargetFacetName:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: The target facet name that is associated with the facet reference.
              See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html">Attribute
              References</a> for more information.
          title: TargetFacetName
        TargetAttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: The target attribute name that is associated with the facet
              reference. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html">Attribute
              References</a> for more information.
          title: TargetAttributeName
      required:
      - TargetAttributeName
      - TargetFacetName
      title: FacetAttributeReference
      type: object
    RequiredAttributeBehavior:
      enum:
      - REQUIRED_ALWAYS
      - NOT_REQUIRED
      title: RequiredAttributeBehavior
      type: string
    FacetAttributeType:
      enum:
      - STRING
      - BINARY
      - BOOLEAN
      - NUMBER
      - DATETIME
      - VARIANT
      title: FacetAttributeType
      type: string
    RuleMap:
      additionalProperties:
        $ref: '#/components/schemas/Rule'
      type: object
    UpdateActionType:
      enum:
      - CREATE_OR_UPDATE
      - DELETE
      title: UpdateActionType
      type: string
    FacetAttributeUpdateList:
      items:
        $ref: '#/components/schemas/FacetAttributeUpdate'
      type: array
    FacetNameList:
      items:
        $ref: '#/components/schemas/FacetName'
      type: array
    GetAppliedSchemaVersionRequest:
      example:
        SchemaArn: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the applied schema.
      required:
      - SchemaArn
      title: GetAppliedSchemaVersionRequest
      type: object
    GetDirectoryRequest:
      properties: {}
      title: GetDirectoryRequest
      type: object
    GetFacetRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: The name of the facet to retrieve.
      required:
      - Name
      title: GetFacetRequest
      type: object
    GetLinkAttributesRequest:
      example:
        ConsistencyLevel: ""
        AttributeNames: ""
        TypedLinkSpecifier:
          TargetObjectReference:
            Selector: ""
          IdentityAttributeValues: ""
          TypedLinkFacet:
            TypedLinkName: ""
            SchemaArn: ""
          SourceObjectReference:
            Selector: ""
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/BatchGetLinkAttributes_TypedLinkSpecifier'
        AttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          - description: A list of attribute names whose values will be retrieved.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          - description: The consistency level at which to retrieve the attributes
              on a typed link.
      required:
      - AttributeNames
      - TypedLinkSpecifier
      title: GetLinkAttributesRequest
      type: object
    GetObjectAttributesRequest:
      example:
        SchemaFacet:
          FacetName: ""
          SchemaArn: ""
        ObjectReference:
          Selector: ""
        AttributeNames: ""
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchGetObjectAttributes_ObjectReference'
        SchemaFacet:
          $ref: '#/components/schemas/BatchGetObjectAttributes_SchemaFacet'
        AttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          - description: List of attribute names whose values will be retrieved.
      required:
      - AttributeNames
      - ObjectReference
      - SchemaFacet
      title: GetObjectAttributesRequest
      type: object
    GetObjectInformationRequest:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchGetObjectInformation_ObjectReference'
      required:
      - ObjectReference
      title: GetObjectInformationRequest
      type: object
    GetSchemaAsJsonRequest:
      properties: {}
      title: GetSchemaAsJsonRequest
      type: object
    SchemaJsonDocument:
      type: string
    GetTypedLinkFacetInformationRequest:
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          - description: The unique name of the typed link facet.
      required:
      - Name
      title: GetTypedLinkFacetInformationRequest
      type: object
    IndexAttachment:
      description: Represents an index and an attached object.
      properties:
        IndexedAttributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          - description: The indexed attribute values.
          title: IndexedAttributes
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: "In response to <a>ListIndex</a>, the <code>ObjectIdentifier</code>\
              \ of the object attached to the index. In response to <a>ListAttachedIndices</a>,\
              \ the <code>ObjectIdentifier</code> of the index attached to the object.\
              \ This field will always contain the <code>ObjectIdentifier</code> of\
              \ the object on the opposite side of the attachment specified in the\
              \ query."
          title: ObjectIdentifier
      title: IndexAttachment
      type: object
    LinkAttributeAction:
      description: The action to take on a typed link attribute value. Updates are
        only supported for attributes which don’t contribute to link identity.
      properties:
        AttributeActionType:
          allOf:
          - $ref: '#/components/schemas/UpdateActionType'
          - description: A type that can be either <code>UPDATE_OR_CREATE</code> or
              <code>DELETE</code>.
          title: AttributeActionType
        AttributeUpdateValue:
          $ref: '#/components/schemas/LinkAttributeAction_AttributeUpdateValue'
      title: LinkAttributeAction
      type: object
    ListAppliedSchemaArnsRequest:
      example:
        DirectoryArn: ""
        NextToken: ""
        MaxResults: ""
        SchemaArn: ""
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the directory you are listing.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The response for <code>ListAppliedSchemaArns</code> when
              this parameter is used will list all minor version ARNs for a major
              version.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
      required:
      - DirectoryArn
      title: ListAppliedSchemaArnsRequest
      type: object
    ListAttachedIndicesRequest:
      example:
        TargetReference:
          Selector: ""
        NextToken: ""
        MaxResults: ""
      properties:
        TargetReference:
          $ref: '#/components/schemas/BatchListAttachedIndices_TargetReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
      required:
      - TargetReference
      title: ListAttachedIndicesRequest
      type: object
    ListDevelopmentSchemaArnsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
      title: ListDevelopmentSchemaArnsRequest
      type: object
    ListDirectoriesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        state: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
        state:
          allOf:
          - $ref: '#/components/schemas/DirectoryState'
          - description: "The state of the directories in the list. Can be either\
              \ Enabled, Disabled, or Deleted."
      title: ListDirectoriesRequest
      type: object
    ListFacetAttributesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: The name of the facet whose attributes will be retrieved.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
      required:
      - Name
      title: ListFacetAttributesRequest
      type: object
    ListFacetNamesRequest:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
      title: ListFacetNamesRequest
      type: object
    ListIncomingTypedLinksRequest:
      example:
        ConsistencyLevel: ""
        NextToken: ""
        ObjectReference:
          Selector: ""
        FilterAttributeRanges: ""
        MaxResults: ""
        FilterTypedLink:
          TypedLinkName: ""
          SchemaArn: ""
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ListIncomingTypedLinksRequest_ObjectReference'
        FilterAttributeRanges:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          - description: "Provides range filters for multiple attributes. When providing\
              \ ranges to typed link selection, any inexact ranges must be specified\
              \ at the end. Any attributes that do not have a range specified are\
              \ presumed to match the entire range."
        FilterTypedLink:
          $ref: '#/components/schemas/BatchListIncomingTypedLinks_FilterTypedLink'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          - description: The consistency level to execute the request at.
      required:
      - ObjectReference
      title: ListIncomingTypedLinksRequest
      type: object
    ListIndexRequest:
      example:
        RangesOnIndexedValues: ""
        NextToken: ""
        MaxResults: ""
        IndexReference:
          Selector: ""
      properties:
        RangesOnIndexedValues:
          allOf:
          - $ref: '#/components/schemas/ObjectAttributeRangeList'
          - description: Specifies the ranges of indexed values that you want to query.
        IndexReference:
          $ref: '#/components/schemas/BatchListIndex_IndexReference'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: "The maximum number of objects in a single page to retrieve\
              \ from the index during a request. For more information, see <a href=\"\
              http://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html\"\
              >Amazon Cloud Directory Limits</a>."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
      required:
      - IndexReference
      title: ListIndexRequest
      type: object
    ListManagedSchemaArnsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        SchemaArn: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The response for ListManagedSchemaArns. When this parameter\
              \ is used, all minor version ARNs for a major version are listed."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
      title: ListManagedSchemaArnsRequest
      type: object
    ListObjectAttributesRequest:
      example:
        NextToken: ""
        ObjectReference:
          Selector: ""
        FacetFilter:
          FacetName: ""
          SchemaArn: ""
        MaxResults: ""
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchListIncomingTypedLinks_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of items to be retrieved in a single call.
              This is an approximate number.
        FacetFilter:
          $ref: '#/components/schemas/BatchListObjectAttributes_FacetFilter'
      required:
      - ObjectReference
      title: ListObjectAttributesRequest
      type: object
    ListObjectChildrenRequest:
      example:
        NextToken: ""
        ObjectReference:
          Selector: ""
        MaxResults: ""
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ListObjectChildrenRequest_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of items to be retrieved in a single call.
              This is an approximate number.
      required:
      - ObjectReference
      title: ListObjectChildrenRequest
      type: object
    ListObjectParentPathsRequest:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ListObjectParentPathsRequest_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of items to be retrieved in a single call.
              This is an approximate number.
      required:
      - ObjectReference
      title: ListObjectParentPathsRequest
      type: object
    ListObjectParentsRequest:
      example:
        NextToken: ""
        ObjectReference:
          Selector: ""
        MaxResults: ""
        IncludeAllLinksToEachParent: ""
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ListObjectParentsRequest_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of items to be retrieved in a single call.
              This is an approximate number.
        IncludeAllLinksToEachParent:
          allOf:
          - $ref: '#/components/schemas/Bool'
          - description: "When set to True, returns all <a>ListObjectParentsResponse$ParentLinks</a>.\
              \ There could be multiple links between a parent-child pair."
      required:
      - ObjectReference
      title: ListObjectParentsRequest
      type: object
    ObjectIdentifierToLinkNameMap:
      additionalProperties:
        $ref: '#/components/schemas/LinkName'
      type: object
    ListObjectPoliciesRequest:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ListObjectPoliciesRequest_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of items to be retrieved in a single call.
              This is an approximate number.
      required:
      - ObjectReference
      title: ListObjectPoliciesRequest
      type: object
    ListOutgoingTypedLinksRequest:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ListOutgoingTypedLinksRequest_ObjectReference'
        FilterAttributeRanges:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          - description: "Provides range filters for multiple attributes. When providing\
              \ ranges to typed link selection, any inexact ranges must be specified\
              \ at the end. Any attributes that do not have a range specified are\
              \ presumed to match the entire range."
        FilterTypedLink:
          $ref: '#/components/schemas/BatchListOutgoingTypedLinks_FilterTypedLink'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          - description: The consistency level to execute the request at.
      required:
      - ObjectReference
      title: ListOutgoingTypedLinksRequest
      type: object
    ListPolicyAttachmentsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        PolicyReference:
          Selector: ""
      properties:
        PolicyReference:
          $ref: '#/components/schemas/BatchListPolicyAttachments_PolicyReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of items to be retrieved in a single call.
              This is an approximate number.
      required:
      - PolicyReference
      title: ListPolicyAttachmentsRequest
      type: object
    ListPublishedSchemaArnsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        SchemaArn: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The response for <code>ListPublishedSchemaArns</code> when
              this parameter is used will list all minor version ARNs for a major
              version.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
      title: ListPublishedSchemaArnsRequest
      type: object
    TagsNumberResults:
      minimum: 50
      type: integer
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
        NextToken: ""
        MaxResults: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource. Tagging is
              only supported for directories.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token. This is for future use. Currently pagination
              is not supported for tagging.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/TagsNumberResults'
          - description: The <code>MaxResults</code> parameter sets the maximum number
              of results returned in a single page. This is for future use and is
              not supported currently.
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    ListTypedLinkFacetAttributesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          - description: The unique name of the typed link facet.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
      required:
      - Name
      title: ListTypedLinkFacetAttributesRequest
      type: object
    ListTypedLinkFacetNamesRequest:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of results to retrieve.
      title: ListTypedLinkFacetNamesRequest
      type: object
    TypedLinkNameList:
      items:
        $ref: '#/components/schemas/TypedLinkName'
      type: array
    LookupPolicyRequest:
      example:
        NextToken: ""
        ObjectReference:
          Selector: ""
        MaxResults: ""
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchLookupPolicy_ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to request the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          - description: The maximum number of items to be retrieved in a single call.
              This is an approximate number.
      required:
      - ObjectReference
      title: LookupPolicyRequest
      type: object
    NumberAttributeValue:
      type: string
    ObjectAttributeAction:
      description: The action to take on the object attribute.
      properties:
        ObjectAttributeActionType:
          allOf:
          - $ref: '#/components/schemas/UpdateActionType'
          - description: A type that can be either <code>Update</code> or <code>Delete</code>.
          title: ObjectAttributeActionType
        ObjectAttributeUpdateValue:
          $ref: '#/components/schemas/LinkAttributeAction_AttributeUpdateValue'
      title: ObjectAttributeAction
      type: object
    TypedAttributeValueRange:
      description: "A range of attribute values. For more information, see <a href=\"\
        https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_range_filters.html\"\
        >Range Filters</a>."
      properties:
        StartMode:
          allOf:
          - $ref: '#/components/schemas/RangeMode'
          - description: The inclusive or exclusive range start.
          title: StartMode
        StartValue:
          $ref: '#/components/schemas/TypedAttributeValueRange_StartValue'
        EndMode:
          allOf:
          - $ref: '#/components/schemas/RangeMode'
          - description: The inclusive or exclusive range end.
          title: EndMode
        EndValue:
          $ref: '#/components/schemas/TypedAttributeValueRange_EndValue'
      required:
      - EndMode
      - StartMode
      title: TypedAttributeValueRange
      type: object
    ObjectIdentifierAndLinkNameTuple:
      description: A pair of ObjectIdentifier and LinkName.
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The ID that is associated with the object.
          title: ObjectIdentifier
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          - description: The name of the link between the parent and the child object.
          title: LinkName
      title: ObjectIdentifierAndLinkNameTuple
      type: object
    PathString:
      type: string
    PathToObjectIdentifiers:
      description: Returns the path to the <code>ObjectIdentifiers</code> that is
        associated with the directory.
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/PathString'
          - description: The path that is used to identify the object starting from
              directory root.
          title: Path
        ObjectIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          - description: Lists <code>ObjectIdentifiers</code> starting from directory
              root to the object in the request.
          title: ObjectIdentifiers
      title: PathToObjectIdentifiers
      type: object
    PolicyType:
      type: string
    PolicyAttachment:
      description: "Contains the <code>PolicyType</code>, <code>PolicyId</code>, and\
        \ the <code>ObjectIdentifier</code> to which it is attached. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\"\
        >Policies</a>."
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The ID of <code>PolicyAttachment</code>.
          title: PolicyId
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          - description: The <code>ObjectIdentifier</code> that is associated with
              <code>PolicyAttachment</code>.
          title: ObjectIdentifier
        PolicyType:
          allOf:
          - $ref: '#/components/schemas/PolicyType'
          - description: The type of policy that can be associated with <code>PolicyAttachment</code>.
          title: PolicyType
      title: PolicyAttachment
      type: object
    PolicyAttachmentList:
      items:
        $ref: '#/components/schemas/PolicyAttachment'
      type: array
    PolicyToPath:
      description: Used when a regular object exists in a <a>Directory</a> and you
        want to find all of the policies that are associated with that object and
        the parent to that object.
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/PathString'
          - description: The path that is referenced from the root.
          title: Path
        Policies:
          allOf:
          - $ref: '#/components/schemas/PolicyAttachmentList'
          - description: List of policy objects.
          title: Policies
      title: PolicyToPath
      type: object
    Version:
      maxLength: 10
      minLength: 1
      pattern: "^[a-zA-Z0-9._-]*$"
      type: string
    PublishSchemaRequest:
      example:
        Version: ""
        MinorVersion: ""
        Name: ""
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The major version under which the schema will be published.
              Schemas have both a major and minor version associated with them.
        MinorVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The minor version under which the schema will be published.
              This parameter is recommended. Schemas have both a major and minor version
              associated with them.
        Name:
          allOf:
          - $ref: '#/components/schemas/SchemaName'
          - description: "The new name under which the schema will be published. If\
              \ this is not provided, the development schema is considered."
      required:
      - Version
      title: PublishSchemaRequest
      type: object
    PutSchemaFromJsonRequest:
      example:
        Document: ""
      properties:
        Document:
          allOf:
          - $ref: '#/components/schemas/SchemaJsonDocument'
          - description: The replacement JSON schema.
      required:
      - Document
      title: PutSchemaFromJsonRequest
      type: object
    RangeMode:
      enum:
      - FIRST
      - LAST
      - LAST_BEFORE_MISSING_VALUES
      - INCLUSIVE
      - EXCLUSIVE
      title: RangeMode
      type: string
    RemoveFacetFromObjectRequest:
      example:
        SchemaFacet:
          FacetName: ""
          SchemaArn: ""
        ObjectReference:
          Selector: ""
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/RemoveFacetFromObjectRequest_SchemaFacet'
        ObjectReference:
          $ref: '#/components/schemas/RemoveFacetFromObjectRequest_ObjectReference'
      required:
      - ObjectReference
      - SchemaFacet
      title: RemoveFacetFromObjectRequest
      type: object
    RuleType:
      enum:
      - BINARY_LENGTH
      - NUMBER_COMPARISON
      - STRING_FROM_SET
      - STRING_LENGTH
      title: RuleType
      type: string
    RuleParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/RuleParameterValue'
      type: object
    Rule:
      description: Contains an Amazon Resource Name (ARN) and parameters that are
        associated with the rule.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/RuleType'
          - description: The type of attribute validation rule.
          title: Type
        Parameters:
          allOf:
          - $ref: '#/components/schemas/RuleParameterMap'
          - description: The minimum and maximum parameters that are associated with
              the rule.
          title: Parameters
      title: Rule
      type: object
    RuleKey:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9._-]*$"
      type: string
    RuleParameterKey:
      type: string
    RuleParameterValue:
      title: RuleParameterValue
      type: string
    StringAttributeValue:
      type: string
    TagValue:
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource. Tagging is
              only supported for directories.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tag key-value pairs.
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    TypedLinkAttributeDefinition:
      description: A typed link attribute definition.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: The unique name of the typed link attribute.
          title: Name
        Type:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeType'
          - description: The type of the attribute.
          title: Type
        DefaultValue:
          $ref: '#/components/schemas/FacetAttributeDefinition_DefaultValue'
        IsImmutable:
          allOf:
          - $ref: '#/components/schemas/Bool'
          - description: Whether the attribute is mutable or not.
          title: IsImmutable
        Rules:
          allOf:
          - $ref: '#/components/schemas/RuleMap'
          - description: Validation rules that are attached to the attribute definition.
          title: Rules
        RequiredBehavior:
          allOf:
          - $ref: '#/components/schemas/RequiredAttributeBehavior'
          - description: The required behavior of the <code>TypedLinkAttributeDefinition</code>.
          title: RequiredBehavior
      required:
      - Name
      - RequiredBehavior
      - Type
      title: TypedLinkAttributeDefinition
      type: object
    TypedLinkFacetAttributeUpdateList:
      items:
        $ref: '#/components/schemas/TypedLinkFacetAttributeUpdate'
      type: array
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource. Tagging is
              only supported for directories.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: Keys of the tag that need to be removed from the resource.
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateFacetRequest:
      example:
        ObjectType: ""
        AttributeUpdates: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: The name of the facet.
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeUpdateList'
          - description: "List of attributes that need to be updated in a given schema\
              \ <a>Facet</a>. Each attribute is followed by <code>AttributeAction</code>,\
              \ which specifies the type of update operation to perform. "
        ObjectType:
          allOf:
          - $ref: '#/components/schemas/ObjectType'
          - description: The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a>
              for more details.
      required:
      - Name
      title: UpdateFacetRequest
      type: object
    UpdateLinkAttributesRequest:
      example:
        TypedLinkSpecifier:
          TargetObjectReference:
            Selector: ""
          IdentityAttributeValues: ""
          TypedLinkFacet:
            TypedLinkName: ""
            SchemaArn: ""
          SourceObjectReference:
            Selector: ""
        AttributeUpdates: ""
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/BatchGetLinkAttributes_TypedLinkSpecifier'
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/LinkAttributeUpdateList'
          - description: The attributes update structure.
      required:
      - AttributeUpdates
      - TypedLinkSpecifier
      title: UpdateLinkAttributesRequest
      type: object
    UpdateObjectAttributesRequest:
      example:
        ObjectReference:
          Selector: ""
        AttributeUpdates: ""
      properties:
        ObjectReference:
          $ref: '#/components/schemas/BatchDeleteObject_ObjectReference'
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/ObjectAttributeUpdateList'
          - description: The attributes update structure.
      required:
      - AttributeUpdates
      - ObjectReference
      title: UpdateObjectAttributesRequest
      type: object
    UpdateSchemaRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SchemaName'
          - description: The name of the schema.
      required:
      - Name
      title: UpdateSchemaRequest
      type: object
    UpdateTypedLinkFacetRequest:
      example:
        IdentityAttributeOrder: ""
        AttributeUpdates: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          - description: The unique name of the typed link facet.
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/TypedLinkFacetAttributeUpdateList'
          - description: Attributes update structure.
        IdentityAttributeOrder:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          - description: "The order of identity attributes for the facet, from most\
              \ significant to least significant. The ability to filter typed links\
              \ considers the order that the attributes are defined on the typed link\
              \ facet. When providing ranges to a typed link selection, any inexact\
              \ ranges must be specified at the end. Any attributes that do not have\
              \ a range specified are presumed to match the entire range. Filters\
              \ are interpreted in the order of the attributes on the typed link facet,\
              \ not the order in which they are supplied to any API calls. For more\
              \ information about identity attributes, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
              >Typed Links</a>."
      required:
      - AttributeUpdates
      - IdentityAttributeOrder
      - Name
      title: UpdateTypedLinkFacetRequest
      type: object
    UpgradeAppliedSchemaRequest:
      example:
        DirectoryArn: ""
        PublishedSchemaArn: ""
        DryRun: ""
      properties:
        PublishedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The revision of the published schema to upgrade the directory
              to.
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN for the directory to which the upgraded schema will
              be applied.
        DryRun:
          allOf:
          - $ref: '#/components/schemas/Bool'
          - description: "Used for testing whether the major version schemas are backward\
              \ compatible or not. If schema compatibility fails, an exception would\
              \ be thrown else the call would succeed but no changes will be saved.\
              \ This parameter is optional."
      required:
      - DirectoryArn
      - PublishedSchemaArn
      title: UpgradeAppliedSchemaRequest
      type: object
    UpgradePublishedSchemaRequest:
      example:
        PublishedSchemaArn: ""
        DryRun: ""
        MinorVersion: ""
        DevelopmentSchemaArn: ""
      properties:
        DevelopmentSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the development schema with the changes used for
              the upgrade.
        PublishedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the published schema to be upgraded.
        MinorVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: Identifies the minor version of the published schema that
              will be created. This parameter is NOT optional.
        DryRun:
          allOf:
          - $ref: '#/components/schemas/Bool'
          - description: "Used for testing whether the Development schema provided\
              \ is backwards compatible, or not, with the publish schema provided\
              \ by the user to be upgraded. If schema compatibility fails, an exception\
              \ would be thrown else the call would succeed. This parameter is optional\
              \ and defaults to false."
      required:
      - DevelopmentSchemaArn
      - MinorVersion
      - PublishedSchemaArn
      title: UpgradePublishedSchemaRequest
      type: object
    AddFacetToObject_request_SchemaFacet:
      description: A facet.
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the schema that contains the facet with no minor\
              \ component. See <a>arns</a> and <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_inplaceschemaupgrade.html\"\
              >In-Place Schema Upgrade</a> for a description of when to provide minor\
              \ versions. If this value is set, FacetName must also be set."
          title: SchemaArn
        FacetName:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          - description: "The name of the facet. If this value is set, SchemaArn must\
              \ also be set."
          title: FacetName
      title: AddFacetToObject_request_SchemaFacet
      type: object
    AddFacetToObject_request_ObjectReference:
      description: The reference that identifies an object.
      properties:
        Selector:
          allOf:
          - $ref: '#/components/schemas/SelectorObjectReference'
          - description: "<p>A path selector supports easy selection of an object\
              \ by the parent/child links leading to it from the directory root. Use\
              \ the link names from each parent/child link to construct the path.\
              \ Path selectors start with a slash (/) and link names are separated\
              \ by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\"\
              >Access Objects</a>. You can identify an object in one of the following\
              \ ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier\
              \ is an opaque string provided by Amazon Cloud Directory. When creating\
              \ objects, the system will provide you with the identifier of the created\
              \ object. An object’s identifier is immutable and no two objects will\
              \ ever share the same object identifier. To identify an object with\
              \ ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes.\
              \ </p> </li> <li> <p> <i>/some/path</i> - Identifies the object based\
              \ on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies\
              \ the object in a batch call</p> </li> </ul>"
          title: Selector
      title: AddFacetToObject_request_ObjectReference
      type: object
    AddFacetToObject_request:
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/AddFacetToObject_request_SchemaFacet'
        ObjectAttributeList:
          description: Attributes on the facet that you are adding to the object.
          items:
            $ref: '#/components/schemas/AttributeKeyAndValue'
          title: ObjectAttributeList
          type: array
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
      required:
      - ObjectReference
      - SchemaFacet
      title: AddFacetToObject_request
      type: object
    ApplySchema_request:
      properties:
        PublishedSchemaArn:
          description: "Published schema Amazon Resource Name (ARN) that needs to\
            \ be copied. For more information, see <a>arns</a>."
          title: PublishedSchemaArn
          type: string
      required:
      - PublishedSchemaArn
      title: ApplySchema_request
      type: object
    AttachObject_request:
      properties:
        ParentReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        ChildReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        LinkName:
          description: The link name with which the child object is attached to the
            parent.
          maxLength: 64
          minLength: 1
          pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
          title: LinkName
          type: string
      required:
      - ChildReference
      - LinkName
      - ParentReference
      title: AttachObject_request
      type: object
    AttachPolicy_request:
      properties:
        PolicyReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
      required:
      - ObjectReference
      - PolicyReference
      title: AttachPolicy_request
      type: object
    AttachToIndex_request:
      properties:
        IndexReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        TargetReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
      required:
      - IndexReference
      - TargetReference
      title: AttachToIndex_request
      type: object
    AttachTypedLink_request_TypedLinkFacet:
      description: Identifies the schema Amazon Resource Name (ARN) and facet name
        for the typed link.
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) that is associated with the\
              \ schema. For more information, see <a>arns</a>."
          title: SchemaArn
        TypedLinkName:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          - description: The unique name of the typed link facet.
          title: TypedLinkName
      title: AttachTypedLink_request_TypedLinkFacet
      type: object
    AttachTypedLink_request:
      properties:
        SourceObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        TargetObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        TypedLinkFacet:
          $ref: '#/components/schemas/AttachTypedLink_request_TypedLinkFacet'
        Attributes:
          description: A set of attributes that are associated with the typed link.
          items:
            $ref: '#/components/schemas/AttributeNameAndValue'
          title: Attributes
          type: array
      required:
      - Attributes
      - SourceObjectReference
      - TargetObjectReference
      - TypedLinkFacet
      title: AttachTypedLink_request
      type: object
    BatchRead_request:
      properties:
        Operations:
          description: A list of operations that are part of the batch.
          items:
            $ref: '#/components/schemas/BatchReadOperation'
          title: Operations
          type: array
      required:
      - Operations
      title: BatchRead_request
      type: object
    BatchWrite_request:
      properties:
        Operations:
          description: A list of operations that are part of the batch.
          items:
            $ref: '#/components/schemas/BatchWriteOperation'
          title: Operations
          type: array
      required:
      - Operations
      title: BatchWrite_request
      type: object
    CreateDirectory_request:
      properties:
        Name:
          description: "The name of the <a>Directory</a>. Should be unique per account,\
            \ per region."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
      required:
      - Name
      title: CreateDirectory_request
      type: object
    CreateFacet_request:
      properties:
        Name:
          description: "The name of the <a>Facet</a>, which is unique for a given\
            \ schema."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
        Attributes:
          description: The attributes that are associated with the <a>Facet</a>.
          items:
            $ref: '#/components/schemas/FacetAttribute'
          title: Attributes
          type: array
        ObjectType:
          description: "<p>Specifies whether a given object created from this facet\
            \ is of type node, leaf node, policy or index.</p> <ul> <li> <p>Node:\
            \ Can have multiple children but one parent.</p> </li> </ul> <ul> <li>\
            \ <p>Leaf node: Cannot have children but can have multiple parents.</p>\
            \ </li> </ul> <ul> <li> <p>Policy: Allows you to store a policy document\
            \ and policy type. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\"\
            >Policies</a>.</p> </li> </ul> <ul> <li> <p>Index: Can be created with\
            \ the Index API.</p> </li> </ul>"
          enum:
          - NODE
          - LEAF_NODE
          - POLICY
          - INDEX
          title: ObjectType
          type: string
        FacetStyle:
          description: "There are two different styles that you can define on any\
            \ given facet, <code>Static</code> and <code>Dynamic</code>. For static\
            \ facets, all attributes must be defined in the schema. For dynamic facets,\
            \ attributes can be defined during data plane operations."
          enum:
          - STATIC
          - DYNAMIC
          title: FacetStyle
          type: string
      required:
      - Name
      title: CreateFacet_request
      type: object
    CreateIndex_request:
      properties:
        OrderedIndexedAttributeList:
          description: Specifies the attributes that should be indexed on. Currently
            only a single attribute is supported.
          items:
            $ref: '#/components/schemas/AttributeKey'
          title: OrderedIndexedAttributeList
          type: array
        IsUnique:
          description: Indicates whether the attribute that is being indexed has unique
            values or not.
          title: IsUnique
          type: boolean
        ParentReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        LinkName:
          description: The name of the link between the parent object and the index
            object.
          maxLength: 64
          minLength: 1
          pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
          title: LinkName
          type: string
      required:
      - IsUnique
      - OrderedIndexedAttributeList
      title: CreateIndex_request
      type: object
    CreateObject_request:
      properties:
        SchemaFacets:
          description: A list of schema facets to be associated with the object. Do
            not provide minor version components. See <a>SchemaFacet</a> for details.
          items:
            $ref: '#/components/schemas/SchemaFacet'
          title: SchemaFacets
          type: array
        ObjectAttributeList:
          description: The attribute map whose attribute ARN contains the key and
            attribute value as the map value.
          items:
            $ref: '#/components/schemas/AttributeKeyAndValue'
          title: ObjectAttributeList
          type: array
        ParentReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        LinkName:
          description: The name of link that is used to attach this object to a parent.
          maxLength: 64
          minLength: 1
          pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
          title: LinkName
          type: string
      required:
      - SchemaFacets
      title: CreateObject_request
      type: object
    CreateSchema_request:
      properties:
        Name:
          description: The name that is associated with the schema. This is unique
            to each account and in each region.
          maxLength: 32
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
      required:
      - Name
      title: CreateSchema_request
      type: object
    CreateTypedLinkFacet_request_Facet:
      description: "Defines the typed links structure and its attributes. To create\
        \ a typed link facet, use the <a>CreateTypedLinkFacet</a> API."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          - description: The unique name of the typed link facet.
          title: Name
        Attributes:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
          - description: "A set of key-value pairs associated with the typed link.\
              \ Typed link attributes are used when you have data values that are\
              \ related to the link itself, and not to one of the two objects being\
              \ linked. Identity attributes also serve to distinguish the link from\
              \ others of the same type between the same objects."
          title: Attributes
        IdentityAttributeOrder:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          - description: "The set of attributes that distinguish links made from this\
              \ facet from each other, in the order of significance. Listing typed\
              \ links can filter on the values of these attributes. See <a>ListOutgoingTypedLinks</a>\
              \ and <a>ListIncomingTypedLinks</a> for details."
          title: IdentityAttributeOrder
      title: CreateTypedLinkFacet_request_Facet
      type: object
    CreateTypedLinkFacet_request:
      properties:
        Facet:
          $ref: '#/components/schemas/CreateTypedLinkFacet_request_Facet'
      required:
      - Facet
      title: CreateTypedLinkFacet_request
      type: object
    DeleteFacet_request:
      properties:
        Name:
          description: The name of the facet to delete.
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
      required:
      - Name
      title: DeleteFacet_request
      type: object
    DeleteObject_request:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
      required:
      - ObjectReference
      title: DeleteObject_request
      type: object
    DeleteTypedLinkFacet_request:
      properties:
        Name:
          description: The unique name of the typed link facet.
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
      required:
      - Name
      title: DeleteTypedLinkFacet_request
      type: object
    DetachObject_request:
      properties:
        ParentReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        LinkName:
          description: The link name associated with the object that needs to be detached.
          maxLength: 64
          minLength: 1
          pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
          title: LinkName
          type: string
      required:
      - LinkName
      - ParentReference
      title: DetachObject_request
      type: object
    DetachTypedLink_request_TypedLinkSpecifier_TypedLinkFacet:
      allOf:
      - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
      - description: Identifies the typed link facet that is associated with the typed
          link.
      example:
        TypedLinkName: ""
        SchemaArn: ""
      title: DetachTypedLink_request_TypedLinkSpecifier_TypedLinkFacet
    DetachTypedLink_request_TypedLinkSpecifier_SourceObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Identifies the source object that the typed link will attach
          to.
      example:
        Selector: ""
      title: DetachTypedLink_request_TypedLinkSpecifier_SourceObjectReference
    DetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Identifies the target object that the typed link will attach
          to.
      example:
        Selector: ""
      title: DetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference
    DetachTypedLink_request_TypedLinkSpecifier:
      description: "Contains all the information that is used to uniquely identify\
        \ a typed link. The parameters discussed in this topic are used to uniquely\
        \ specify the typed link being operated on. The <a>AttachTypedLink</a> API\
        \ returns a typed link specifier while the <a>DetachTypedLink</a> API accepts\
        \ one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a>\
        \ API operations provide typed link specifiers as output. You can also construct\
        \ a typed link specifier from scratch."
      properties:
        TypedLinkFacet:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_TypedLinkFacet'
        SourceObjectReference:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_SourceObjectReference'
        TargetObjectReference:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier_TargetObjectReference'
        IdentityAttributeValues:
          allOf:
          - $ref: '#/components/schemas/AttributeNameAndValueList'
          - description: Identifies the attribute value to update.
          title: IdentityAttributeValues
      title: DetachTypedLink_request_TypedLinkSpecifier
      type: object
    DetachTypedLink_request:
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier'
      required:
      - TypedLinkSpecifier
      title: DetachTypedLink_request
      type: object
    GetAppliedSchemaVersion_request:
      properties:
        SchemaArn:
          description: The ARN of the applied schema.
          title: SchemaArn
          type: string
      required:
      - SchemaArn
      title: GetAppliedSchemaVersion_request
      type: object
    UpdateFacet_request:
      properties:
        Name:
          description: The name of the facet.
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
        AttributeUpdates:
          description: "List of attributes that need to be updated in a given schema\
            \ <a>Facet</a>. Each attribute is followed by <code>AttributeAction</code>,\
            \ which specifies the type of update operation to perform. "
          items:
            $ref: '#/components/schemas/FacetAttributeUpdate'
          title: AttributeUpdates
          type: array
        ObjectType:
          description: The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a>
            for more details.
          enum:
          - NODE
          - LEAF_NODE
          - POLICY
          - INDEX
          title: ObjectType
          type: string
      required:
      - Name
      title: UpdateFacet_request
      type: object
    GetFacet_request:
      properties:
        Name:
          description: The name of the facet to retrieve.
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
      required:
      - Name
      title: GetFacet_request
      type: object
    GetLinkAttributes_request:
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier'
        AttributeNames:
          description: A list of attribute names whose values will be retrieved.
          items:
            $ref: '#/components/schemas/AttributeName'
          title: AttributeNames
          type: array
        ConsistencyLevel:
          description: The consistency level at which to retrieve the attributes on
            a typed link.
          enum:
          - SERIALIZABLE
          - EVENTUAL
          title: ConsistencyLevel
          type: string
      required:
      - AttributeNames
      - TypedLinkSpecifier
      title: GetLinkAttributes_request
      type: object
    GetObjectAttributes_request:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        SchemaFacet:
          $ref: '#/components/schemas/AddFacetToObject_request_SchemaFacet'
        AttributeNames:
          description: List of attribute names whose values will be retrieved.
          items:
            $ref: '#/components/schemas/AttributeName'
          title: AttributeNames
          type: array
      required:
      - AttributeNames
      - ObjectReference
      - SchemaFacet
      title: GetObjectAttributes_request
      type: object
    PutSchemaFromJson_request:
      properties:
        Document:
          description: The replacement JSON schema.
          title: Document
          type: string
      required:
      - Document
      title: PutSchemaFromJson_request
      type: object
    ListAppliedSchemaArns_request:
      properties:
        DirectoryArn:
          description: The ARN of the directory you are listing.
          title: DirectoryArn
          type: string
        SchemaArn:
          description: The response for <code>ListAppliedSchemaArns</code> when this
            parameter is used will list all minor version ARNs for a major version.
          title: SchemaArn
          type: string
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to retrieve.
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - DirectoryArn
      title: ListAppliedSchemaArns_request
      type: object
    ListAttachedIndices_request:
      properties:
        TargetReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to retrieve.
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - TargetReference
      title: ListAttachedIndices_request
      type: object
    ListDevelopmentSchemaArns_request:
      properties:
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to retrieve.
          minimum: 1
          title: MaxResults
          type: integer
      title: ListDevelopmentSchemaArns_request
      type: object
    ListDirectories_request:
      properties:
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to retrieve.
          minimum: 1
          title: MaxResults
          type: integer
        state:
          description: "The state of the directories in the list. Can be either Enabled,\
            \ Disabled, or Deleted."
          enum:
          - ENABLED
          - DISABLED
          - DELETED
          title: state
          type: string
      title: ListDirectories_request
      type: object
    ListFacetAttributes_request:
      properties:
        Name:
          description: The name of the facet whose attributes will be retrieved.
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to retrieve.
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - Name
      title: ListFacetAttributes_request
      type: object
    ListIncomingTypedLinks_request:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        FilterAttributeRanges:
          description: "Provides range filters for multiple attributes. When providing\
            \ ranges to typed link selection, any inexact ranges must be specified\
            \ at the end. Any attributes that do not have a range specified are presumed\
            \ to match the entire range."
          items:
            $ref: '#/components/schemas/TypedLinkAttributeRange'
          title: FilterAttributeRanges
          type: array
        FilterTypedLink:
          $ref: '#/components/schemas/AttachTypedLink_request_TypedLinkFacet'
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to retrieve.
          minimum: 1
          title: MaxResults
          type: integer
        ConsistencyLevel:
          description: The consistency level to execute the request at.
          enum:
          - SERIALIZABLE
          - EVENTUAL
          title: ConsistencyLevel
          type: string
      required:
      - ObjectReference
      title: ListIncomingTypedLinks_request
      type: object
    ListIndex_request:
      properties:
        RangesOnIndexedValues:
          description: Specifies the ranges of indexed values that you want to query.
          items:
            $ref: '#/components/schemas/ObjectAttributeRange'
          title: RangesOnIndexedValues
          type: array
        IndexReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        MaxResults:
          description: "The maximum number of objects in a single page to retrieve\
            \ from the index during a request. For more information, see <a href=\"\
            http://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html\"\
            >Amazon Cloud Directory Limits</a>."
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
      required:
      - IndexReference
      title: ListIndex_request
      type: object
    ListManagedSchemaArns_request:
      properties:
        SchemaArn:
          description: "The response for ListManagedSchemaArns. When this parameter\
            \ is used, all minor version ARNs for a major version are listed."
          title: SchemaArn
          type: string
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to retrieve.
          minimum: 1
          title: MaxResults
          type: integer
      title: ListManagedSchemaArns_request
      type: object
    ListObjectAttributes_request:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
          minimum: 1
          title: MaxResults
          type: integer
        FacetFilter:
          $ref: '#/components/schemas/AddFacetToObject_request_SchemaFacet'
      required:
      - ObjectReference
      title: ListObjectAttributes_request
      type: object
    ListObjectChildren_request:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - ObjectReference
      title: ListObjectChildren_request
      type: object
    ListObjectParents_request:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
          minimum: 1
          title: MaxResults
          type: integer
        IncludeAllLinksToEachParent:
          description: "When set to True, returns all <a>ListObjectParentsResponse$ParentLinks</a>.\
            \ There could be multiple links between a parent-child pair."
          title: IncludeAllLinksToEachParent
          type: boolean
      required:
      - ObjectReference
      title: ListObjectParents_request
      type: object
    ListPolicyAttachments_request:
      properties:
        PolicyReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - PolicyReference
      title: ListPolicyAttachments_request
      type: object
    ListPublishedSchemaArns_request:
      properties:
        SchemaArn:
          description: The response for <code>ListPublishedSchemaArns</code> when
            this parameter is used will list all minor version ARNs for a major version.
          title: SchemaArn
          type: string
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to retrieve.
          minimum: 1
          title: MaxResults
          type: integer
      title: ListPublishedSchemaArns_request
      type: object
    ListTagsForResource_request:
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource. Tagging is
            only supported for directories.
          title: ResourceArn
          type: string
        NextToken:
          description: The pagination token. This is for future use. Currently pagination
            is not supported for tagging.
          title: NextToken
          type: string
        MaxResults:
          description: The <code>MaxResults</code> parameter sets the maximum number
            of results returned in a single page. This is for future use and is not
            supported currently.
          minimum: 50
          title: MaxResults
          type: integer
      required:
      - ResourceArn
      title: ListTagsForResource_request
      type: object
    ListTypedLinkFacetAttributes_request:
      properties:
        Name:
          description: The unique name of the typed link facet.
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
        NextToken:
          description: The pagination token.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to retrieve.
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - Name
      title: ListTypedLinkFacetAttributes_request
      type: object
    LookupPolicy_request:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        NextToken:
          description: The token to request the next page of results.
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - ObjectReference
      title: LookupPolicy_request
      type: object
    PublishSchema_request:
      properties:
        Version:
          description: The major version under which the schema will be published.
            Schemas have both a major and minor version associated with them.
          maxLength: 10
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Version
          type: string
        MinorVersion:
          description: The minor version under which the schema will be published.
            This parameter is recommended. Schemas have both a major and minor version
            associated with them.
          maxLength: 10
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: MinorVersion
          type: string
        Name:
          description: "The new name under which the schema will be published. If\
            \ this is not provided, the development schema is considered."
          maxLength: 32
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
      required:
      - Version
      title: PublishSchema_request
      type: object
    RemoveFacetFromObject_request:
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/AddFacetToObject_request_SchemaFacet'
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
      required:
      - ObjectReference
      - SchemaFacet
      title: RemoveFacetFromObject_request
      type: object
    TagResource_request:
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource. Tagging is
            only supported for directories.
          title: ResourceArn
          type: string
        Tags:
          description: A list of tag key-value pairs.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
      required:
      - ResourceArn
      - Tags
      title: TagResource_request
      type: object
    UntagResource_request:
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource. Tagging is
            only supported for directories.
          title: ResourceArn
          type: string
        TagKeys:
          description: Keys of the tag that need to be removed from the resource.
          items:
            $ref: '#/components/schemas/TagKey'
          title: TagKeys
          type: array
      required:
      - ResourceArn
      - TagKeys
      title: UntagResource_request
      type: object
    UpdateLinkAttributes_request:
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/DetachTypedLink_request_TypedLinkSpecifier'
        AttributeUpdates:
          description: The attributes update structure.
          items:
            $ref: '#/components/schemas/LinkAttributeUpdate'
          title: AttributeUpdates
          type: array
      required:
      - AttributeUpdates
      - TypedLinkSpecifier
      title: UpdateLinkAttributes_request
      type: object
    UpdateObjectAttributes_request:
      properties:
        ObjectReference:
          $ref: '#/components/schemas/AddFacetToObject_request_ObjectReference'
        AttributeUpdates:
          description: The attributes update structure.
          items:
            $ref: '#/components/schemas/ObjectAttributeUpdate'
          title: AttributeUpdates
          type: array
      required:
      - AttributeUpdates
      - ObjectReference
      title: UpdateObjectAttributes_request
      type: object
    UpdateSchema_request:
      properties:
        Name:
          description: The name of the schema.
          maxLength: 32
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
      required:
      - Name
      title: UpdateSchema_request
      type: object
    UpdateTypedLinkFacet_request:
      properties:
        Name:
          description: The unique name of the typed link facet.
          pattern: "^[a-zA-Z0-9._-]*$"
          title: Name
          type: string
        AttributeUpdates:
          description: Attributes update structure.
          items:
            $ref: '#/components/schemas/TypedLinkFacetAttributeUpdate'
          title: AttributeUpdates
          type: array
        IdentityAttributeOrder:
          description: "The order of identity attributes for the facet, from most\
            \ significant to least significant. The ability to filter typed links\
            \ considers the order that the attributes are defined on the typed link\
            \ facet. When providing ranges to a typed link selection, any inexact\
            \ ranges must be specified at the end. Any attributes that do not have\
            \ a range specified are presumed to match the entire range. Filters are\
            \ interpreted in the order of the attributes on the typed link facet,\
            \ not the order in which they are supplied to any API calls. For more\
            \ information about identity attributes, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
            >Typed Links</a>."
          items:
            $ref: '#/components/schemas/AttributeName'
          title: IdentityAttributeOrder
          type: array
      required:
      - AttributeUpdates
      - IdentityAttributeOrder
      - Name
      title: UpdateTypedLinkFacet_request
      type: object
    UpgradeAppliedSchema_request:
      properties:
        PublishedSchemaArn:
          description: The revision of the published schema to upgrade the directory
            to.
          title: PublishedSchemaArn
          type: string
        DirectoryArn:
          description: The ARN for the directory to which the upgraded schema will
            be applied.
          title: DirectoryArn
          type: string
        DryRun:
          description: "Used for testing whether the major version schemas are backward\
            \ compatible or not. If schema compatibility fails, an exception would\
            \ be thrown else the call would succeed but no changes will be saved.\
            \ This parameter is optional."
          title: DryRun
          type: boolean
      required:
      - DirectoryArn
      - PublishedSchemaArn
      title: UpgradeAppliedSchema_request
      type: object
    UpgradePublishedSchema_request:
      properties:
        DevelopmentSchemaArn:
          description: The ARN of the development schema with the changes used for
            the upgrade.
          title: DevelopmentSchemaArn
          type: string
        PublishedSchemaArn:
          description: The ARN of the published schema to be upgraded.
          title: PublishedSchemaArn
          type: string
        MinorVersion:
          description: Identifies the minor version of the published schema that will
            be created. This parameter is NOT optional.
          maxLength: 10
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]*$"
          title: MinorVersion
          type: string
        DryRun:
          description: "Used for testing whether the Development schema provided is\
            \ backwards compatible, or not, with the publish schema provided by the\
            \ user to be upgraded. If schema compatibility fails, an exception would\
            \ be thrown else the call would succeed. This parameter is optional and\
            \ defaults to false."
          title: DryRun
          type: boolean
      required:
      - DevelopmentSchemaArn
      - MinorVersion
      - PublishedSchemaArn
      title: UpgradePublishedSchema_request
      type: object
    AttributeKeyAndValue_Key:
      allOf:
      - $ref: '#/components/schemas/AttributeKey'
      - description: The key of the attribute.
      title: AttributeKeyAndValue_Key
    AttributeKeyAndValue_Value:
      allOf:
      - $ref: '#/components/schemas/TypedAttributeValue'
      - description: The value of the attribute.
      title: AttributeKeyAndValue_Value
    AttachTypedLinkResponse_TypedLinkSpecifier:
      allOf:
      - $ref: '#/components/schemas/TypedLinkSpecifier'
      - description: Returns a typed link specifier as output.
      example:
        TargetObjectReference:
          Selector: ""
        IdentityAttributeValues: ""
        TypedLinkFacet:
          TypedLinkName: ""
          SchemaArn: ""
        SourceObjectReference:
          Selector: ""
      title: AttachTypedLinkResponse_TypedLinkSpecifier
    AttributeNameAndValue_Value:
      allOf:
      - $ref: '#/components/schemas/TypedAttributeValue'
      - description: The value for the typed link.
      title: AttributeNameAndValue_Value
    BatchReadOperation_ListObjectAttributes:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectAttributes'
      - description: Lists all attributes that are associated with an object.
      title: BatchReadOperation_ListObjectAttributes
    BatchReadOperation_ListObjectChildren:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectChildren'
      - description: Returns a paginated list of child objects that are associated
          with a given object.
      title: BatchReadOperation_ListObjectChildren
    BatchReadOperation_ListAttachedIndices:
      allOf:
      - $ref: '#/components/schemas/BatchListAttachedIndices'
      - description: Lists indices attached to an object.
      title: BatchReadOperation_ListAttachedIndices
    BatchReadOperation_ListObjectParentPaths:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectParentPaths'
      - description: "Retrieves all available parent paths for any object type such\
          \ as node, leaf node, policy node, and index node objects. For more information\
          \ about objects, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html\"\
          >Directory Structure</a>."
      title: BatchReadOperation_ListObjectParentPaths
    BatchReadOperation_GetObjectInformation:
      allOf:
      - $ref: '#/components/schemas/BatchGetObjectInformation'
      - description: Retrieves metadata about an object.
      title: BatchReadOperation_GetObjectInformation
    BatchReadOperation_GetObjectAttributes:
      allOf:
      - $ref: '#/components/schemas/BatchGetObjectAttributes'
      - description: Retrieves attributes within a facet that are associated with
          an object.
      title: BatchReadOperation_GetObjectAttributes
    BatchReadOperation_ListObjectParents:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectParents'
      - description: Lists parent objects that are associated with a given object
          in pagination fashion.
      title: BatchReadOperation_ListObjectParents
    BatchReadOperation_ListObjectPolicies:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectPolicies'
      - description: Returns policies attached to an object in pagination fashion.
      title: BatchReadOperation_ListObjectPolicies
    BatchReadOperation_ListPolicyAttachments:
      allOf:
      - $ref: '#/components/schemas/BatchListPolicyAttachments'
      - description: Returns all of the <code>ObjectIdentifiers</code> to which a
          given policy is attached.
      title: BatchReadOperation_ListPolicyAttachments
    BatchReadOperation_LookupPolicy:
      allOf:
      - $ref: '#/components/schemas/BatchLookupPolicy'
      - description: "Lists all policies from the root of the <a>Directory</a> to\
          \ the object specified. If there are no policies present, an empty list\
          \ is returned. If policies are present, and if some objects don't have the\
          \ policies attached, it returns the <code>ObjectIdentifier</code> for such\
          \ objects. If policies are present, it returns <code>ObjectIdentifier</code>,\
          \ <code>policyId</code>, and <code>policyType</code>. Paths that don't lead\
          \ to the root from the target object are ignored. For more information,\
          \ see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\"\
          >Policies</a>."
      title: BatchReadOperation_LookupPolicy
    BatchReadOperation_ListIndex:
      allOf:
      - $ref: '#/components/schemas/BatchListIndex'
      - description: Lists objects attached to the specified index.
      title: BatchReadOperation_ListIndex
    BatchReadOperation_ListOutgoingTypedLinks:
      allOf:
      - $ref: '#/components/schemas/BatchListOutgoingTypedLinks'
      - description: "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a>\
          \ information for an object. It also supports filtering by typed link facet\
          \ and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
          >Typed Links</a>."
      title: BatchReadOperation_ListOutgoingTypedLinks
    BatchReadOperation_ListIncomingTypedLinks:
      allOf:
      - $ref: '#/components/schemas/BatchListIncomingTypedLinks'
      - description: "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a>\
          \ information for an object. It also supports filtering by typed link facet\
          \ and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
          >Typed Links</a>."
      title: BatchReadOperation_ListIncomingTypedLinks
    BatchReadOperation_GetLinkAttributes:
      allOf:
      - $ref: '#/components/schemas/BatchGetLinkAttributes'
      - description: Retrieves attributes that are associated with a typed link.
      title: BatchReadOperation_GetLinkAttributes
    BatchWriteOperation_CreateObject:
      allOf:
      - $ref: '#/components/schemas/BatchCreateObject'
      - description: Creates an object.
      title: BatchWriteOperation_CreateObject
    BatchWriteOperation_AttachObject:
      allOf:
      - $ref: '#/components/schemas/BatchAttachObject'
      - description: Attaches an object to a <a>Directory</a>.
      title: BatchWriteOperation_AttachObject
    BatchWriteOperation_DetachObject:
      allOf:
      - $ref: '#/components/schemas/BatchDetachObject'
      - description: Detaches an object from a <a>Directory</a>.
      title: BatchWriteOperation_DetachObject
    BatchWriteOperation_UpdateObjectAttributes:
      allOf:
      - $ref: '#/components/schemas/BatchUpdateObjectAttributes'
      - description: Updates a given object's attributes.
      title: BatchWriteOperation_UpdateObjectAttributes
    BatchWriteOperation_DeleteObject:
      allOf:
      - $ref: '#/components/schemas/BatchDeleteObject'
      - description: Deletes an object in a <a>Directory</a>.
      title: BatchWriteOperation_DeleteObject
    BatchWriteOperation_AddFacetToObject:
      allOf:
      - $ref: '#/components/schemas/BatchAddFacetToObject'
      - description: A batch operation that adds a facet to an object.
      title: BatchWriteOperation_AddFacetToObject
    BatchWriteOperation_RemoveFacetFromObject:
      allOf:
      - $ref: '#/components/schemas/BatchRemoveFacetFromObject'
      - description: A batch operation that removes a facet from an object.
      title: BatchWriteOperation_RemoveFacetFromObject
    BatchWriteOperation_AttachPolicy:
      allOf:
      - $ref: '#/components/schemas/BatchAttachPolicy'
      - description: Attaches a policy object to a regular object. An object can have
          a limited number of attached policies.
      title: BatchWriteOperation_AttachPolicy
    BatchWriteOperation_DetachPolicy:
      allOf:
      - $ref: '#/components/schemas/BatchDetachPolicy'
      - description: Detaches a policy from a <a>Directory</a>.
      title: BatchWriteOperation_DetachPolicy
    BatchWriteOperation_CreateIndex:
      allOf:
      - $ref: '#/components/schemas/BatchCreateIndex'
      - description: Creates an index object. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.htm">Indexing
          and search</a> for more information.
      title: BatchWriteOperation_CreateIndex
    BatchWriteOperation_AttachToIndex:
      allOf:
      - $ref: '#/components/schemas/BatchAttachToIndex'
      - description: Attaches the specified object to the specified index.
      title: BatchWriteOperation_AttachToIndex
    BatchWriteOperation_DetachFromIndex:
      allOf:
      - $ref: '#/components/schemas/BatchDetachFromIndex'
      - description: Detaches the specified object from the specified index.
      title: BatchWriteOperation_DetachFromIndex
    BatchWriteOperation_AttachTypedLink:
      allOf:
      - $ref: '#/components/schemas/BatchAttachTypedLink'
      - description: "Attaches a typed link to a specified source and target object.\
          \ For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
          >Typed Links</a>."
      title: BatchWriteOperation_AttachTypedLink
    BatchWriteOperation_DetachTypedLink:
      allOf:
      - $ref: '#/components/schemas/BatchDetachTypedLink'
      - description: "Detaches a typed link from a specified source and target object.\
          \ For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
          >Typed Links</a>."
      title: BatchWriteOperation_DetachTypedLink
    BatchWriteOperation_UpdateLinkAttributes:
      allOf:
      - $ref: '#/components/schemas/BatchUpdateLinkAttributes'
      - description: Updates a given object's attributes.
      title: BatchWriteOperation_UpdateLinkAttributes
    FacetAttribute_AttributeDefinition:
      allOf:
      - $ref: '#/components/schemas/FacetAttributeDefinition'
      - description: A facet attribute consists of either a definition or a reference.
          This structure contains the attribute definition. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html">Attribute
          References</a> for more information.
      title: FacetAttribute_AttributeDefinition
    FacetAttribute_AttributeReference:
      allOf:
      - $ref: '#/components/schemas/FacetAttributeReference'
      - description: An attribute reference that is associated with the attribute.
          See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html">Attribute
          References</a> for more information.
      title: FacetAttribute_AttributeReference
    GetDirectoryResponse_Directory:
      allOf:
      - $ref: '#/components/schemas/Directory'
      - description: Metadata about the directory.
      example:
        DirectoryArn: ""
        CreationDateTime: ""
        State: ""
        Name: ""
      title: GetDirectoryResponse_Directory
    GetFacetResponse_Facet:
      allOf:
      - $ref: '#/components/schemas/Facet'
      - description: The <a>Facet</a> structure that is associated with the facet.
      example:
        ObjectType: ""
        FacetStyle: ""
        Name: ""
      title: GetFacetResponse_Facet
    TypedLinkAttributeRange_Range:
      allOf:
      - $ref: '#/components/schemas/TypedAttributeValueRange'
      - description: The range of attribute values that are being selected.
      title: TypedLinkAttributeRange_Range
    ObjectAttributeRange_AttributeKey:
      allOf:
      - $ref: '#/components/schemas/AttributeKey'
      - description: The key of the attribute that the attribute range covers.
      title: ObjectAttributeRange_AttributeKey
    ObjectAttributeRange_Range:
      allOf:
      - $ref: '#/components/schemas/TypedAttributeValueRange'
      - description: The range of attribute values being selected.
      title: ObjectAttributeRange_Range
    FacetAttributeUpdate_Attribute:
      allOf:
      - $ref: '#/components/schemas/FacetAttribute'
      - description: The attribute to update.
      title: FacetAttributeUpdate_Attribute
    LinkAttributeUpdate_AttributeKey:
      allOf:
      - $ref: '#/components/schemas/AttributeKey'
      - description: The key of the attribute being updated.
      title: LinkAttributeUpdate_AttributeKey
    LinkAttributeUpdate_AttributeAction:
      allOf:
      - $ref: '#/components/schemas/LinkAttributeAction'
      - description: The action to perform as part of the attribute update.
      title: LinkAttributeUpdate_AttributeAction
    ObjectAttributeUpdate_ObjectAttributeAction:
      allOf:
      - $ref: '#/components/schemas/ObjectAttributeAction'
      - description: The action to perform as part of the attribute update.
      title: ObjectAttributeUpdate_ObjectAttributeAction
    TypedLinkFacetAttributeUpdate_Attribute:
      allOf:
      - $ref: '#/components/schemas/TypedLinkAttributeDefinition'
      - description: The attribute to update.
      title: TypedLinkFacetAttributeUpdate_Attribute
    AddFacetToObjectRequest_SchemaFacet:
      allOf:
      - $ref: '#/components/schemas/SchemaFacet'
      - description: Identifiers for the facet that you are adding to the object.
          See <a>SchemaFacet</a> for details.
      example:
        FacetName: ""
        SchemaArn: ""
      title: AddFacetToObjectRequest_SchemaFacet
    AddFacetToObjectRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the object you are adding the specified facet
          to.
      example:
        Selector: ""
      title: AddFacetToObjectRequest_ObjectReference
    AttachObjectRequest_ParentReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The parent object reference.
      example:
        Selector: ""
      title: AttachObjectRequest_ParentReference
    AttachObjectRequest_ChildReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The child object reference to be attached to the object.
      example:
        Selector: ""
      title: AttachObjectRequest_ChildReference
    AttachPolicyRequest_PolicyReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The reference that is associated with the policy object.
      example:
        Selector: ""
      title: AttachPolicyRequest_PolicyReference
    AttachPolicyRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The reference that identifies the object to which the policy
          will be attached.
      example:
        Selector: ""
      title: AttachPolicyRequest_ObjectReference
    AttachToIndexRequest_IndexReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the index that you are attaching the object to.
      example:
        Selector: ""
      title: AttachToIndexRequest_IndexReference
    AttachToIndexRequest_TargetReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the object that you are attaching to the index.
      example:
        Selector: ""
      title: AttachToIndexRequest_TargetReference
    BatchAddFacetToObject_SchemaFacet:
      allOf:
      - $ref: '#/components/schemas/SchemaFacet'
      - description: Represents the facet being added to the object.
      title: BatchAddFacetToObject_SchemaFacet
    BatchAddFacetToObject_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the object being mutated.
      title: BatchAddFacetToObject_ObjectReference
    BatchAttachObject_ChildReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The child object reference that is to be attached to the object.
      title: BatchAttachObject_ChildReference
    BatchCreateIndex_ParentReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the parent object that contains the index object.
      example:
        Selector: ""
      title: BatchCreateIndex_ParentReference
    BatchCreateObject_ParentReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: "If specified, the parent reference to which this object will\
          \ be attached."
      example:
        Selector: ""
      title: BatchCreateObject_ParentReference
    BatchDeleteObject_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The reference that identifies the object.
      example:
        Selector: ""
      title: BatchDeleteObject_ObjectReference
    BatchDetachFromIndex_IndexReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the index object.
      title: BatchDetachFromIndex_IndexReference
    BatchDetachFromIndex_TargetReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the object being detached from the index.
      title: BatchDetachFromIndex_TargetReference
    BatchDetachObject_ParentReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Parent reference from which the object with the specified link
          name is detached.
      title: BatchDetachObject_ParentReference
    BatchDetachPolicy_PolicyReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Reference that identifies the policy object.
      title: BatchDetachPolicy_PolicyReference
    BatchDetachPolicy_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Reference that identifies the object whose policy object will
          be detached.
      title: BatchDetachPolicy_ObjectReference
    BatchDetachTypedLink_TypedLinkSpecifier:
      allOf:
      - $ref: '#/components/schemas/TypedLinkSpecifier'
      - description: Used to accept a typed link specifier as input.
      example:
        TargetObjectReference:
          Selector: ""
        IdentityAttributeValues: ""
        TypedLinkFacet:
          TypedLinkName: ""
          SchemaArn: ""
        SourceObjectReference:
          Selector: ""
      title: BatchDetachTypedLink_TypedLinkSpecifier
    BatchGetLinkAttributes_TypedLinkSpecifier:
      allOf:
      - $ref: '#/components/schemas/TypedLinkSpecifier'
      - description: Allows a typed link specifier to be accepted as input.
      example:
        TargetObjectReference:
          Selector: ""
        IdentityAttributeValues: ""
        TypedLinkFacet:
          TypedLinkName: ""
          SchemaArn: ""
        SourceObjectReference:
          Selector: ""
      title: BatchGetLinkAttributes_TypedLinkSpecifier
    BatchGetObjectAttributes_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Reference that identifies the object whose attributes will be
          retrieved.
      example:
        Selector: ""
      title: BatchGetObjectAttributes_ObjectReference
    BatchGetObjectAttributes_SchemaFacet:
      allOf:
      - $ref: '#/components/schemas/SchemaFacet'
      - description: Identifier for the facet whose attributes will be retrieved.
          See <a>SchemaFacet</a> for details.
      example:
        FacetName: ""
        SchemaArn: ""
      title: BatchGetObjectAttributes_SchemaFacet
    BatchGetObjectInformation_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the object.
      title: BatchGetObjectInformation_ObjectReference
    BatchListAttachedIndices_TargetReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the object that has indices attached.
      example:
        Selector: ""
      title: BatchListAttachedIndices_TargetReference
    BatchListIncomingTypedLinks_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The reference that identifies the object whose attributes will
          be listed.
      example:
        Selector: ""
      title: BatchListIncomingTypedLinks_ObjectReference
    BatchListIncomingTypedLinks_FilterTypedLink:
      allOf:
      - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
      - description: "Filters are interpreted in the order of the attributes on the\
          \ typed link facet, not the order in which they are supplied to any API\
          \ calls."
      example:
        TypedLinkName: ""
        SchemaArn: ""
      title: BatchListIncomingTypedLinks_FilterTypedLink
    BatchListIndex_IndexReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The reference to the index to list.
      example:
        Selector: ""
      title: BatchListIndex_IndexReference
    BatchListObjectAttributes_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Reference of the object whose attributes need to be listed.
      title: BatchListObjectAttributes_ObjectReference
    BatchListObjectAttributes_FacetFilter:
      allOf:
      - $ref: '#/components/schemas/SchemaFacet'
      - description: Used to filter the list of object attributes that are associated
          with a certain facet.
      example:
        FacetName: ""
        SchemaArn: ""
      title: BatchListObjectAttributes_FacetFilter
    BatchListObjectChildren_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Reference of the object for which child objects are being listed.
      title: BatchListObjectChildren_ObjectReference
    BatchListOutgoingTypedLinks_FilterTypedLink:
      allOf:
      - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
      - description: "Filters are interpreted in the order of the attributes defined\
          \ on the typed link facet, not the order they are supplied to any API calls."
      title: BatchListOutgoingTypedLinks_FilterTypedLink
    BatchListPolicyAttachments_PolicyReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The reference that identifies the policy object.
      example:
        Selector: ""
      title: BatchListPolicyAttachments_PolicyReference
    BatchLookupPolicy_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Reference that identifies the object whose policies will be looked
          up.
      example:
        Selector: ""
      title: BatchLookupPolicy_ObjectReference
    BatchReadSuccessfulResponse_ListObjectAttributes:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectAttributesResponse'
      - description: Lists all attributes that are associated with an object.
      title: BatchReadSuccessfulResponse_ListObjectAttributes
    BatchReadSuccessfulResponse_ListObjectChildren:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectChildrenResponse'
      - description: Returns a paginated list of child objects that are associated
          with a given object.
      title: BatchReadSuccessfulResponse_ListObjectChildren
    BatchReadSuccessfulResponse_GetObjectInformation:
      allOf:
      - $ref: '#/components/schemas/BatchGetObjectInformationResponse'
      - description: Retrieves metadata about an object.
      title: BatchReadSuccessfulResponse_GetObjectInformation
    BatchReadSuccessfulResponse_GetObjectAttributes:
      allOf:
      - $ref: '#/components/schemas/BatchGetObjectAttributesResponse'
      - description: Retrieves attributes within a facet that are associated with
          an object.
      title: BatchReadSuccessfulResponse_GetObjectAttributes
    BatchReadSuccessfulResponse_ListAttachedIndices:
      allOf:
      - $ref: '#/components/schemas/BatchListAttachedIndicesResponse'
      - description: Lists indices attached to an object.
      title: BatchReadSuccessfulResponse_ListAttachedIndices
    BatchReadSuccessfulResponse_ListObjectParentPaths:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectParentPathsResponse'
      - description: "Retrieves all available parent paths for any object type such\
          \ as node, leaf node, policy node, and index node objects. For more information\
          \ about objects, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html\"\
          >Directory Structure</a>."
      title: BatchReadSuccessfulResponse_ListObjectParentPaths
    BatchReadSuccessfulResponse_ListObjectPolicies:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectPoliciesResponse'
      - description: Returns policies attached to an object in pagination fashion.
      title: BatchReadSuccessfulResponse_ListObjectPolicies
    BatchReadSuccessfulResponse_ListPolicyAttachments:
      allOf:
      - $ref: '#/components/schemas/BatchListPolicyAttachmentsResponse'
      - description: Returns all of the <code>ObjectIdentifiers</code> to which a
          given policy is attached.
      title: BatchReadSuccessfulResponse_ListPolicyAttachments
    BatchReadSuccessfulResponse_LookupPolicy:
      allOf:
      - $ref: '#/components/schemas/BatchLookupPolicyResponse'
      - description: "Lists all policies from the root of the <a>Directory</a> to\
          \ the object specified. If there are no policies present, an empty list\
          \ is returned. If policies are present, and if some objects don't have the\
          \ policies attached, it returns the <code>ObjectIdentifier</code> for such\
          \ objects. If policies are present, it returns <code>ObjectIdentifier</code>,\
          \ <code>policyId</code>, and <code>policyType</code>. Paths that don't lead\
          \ to the root from the target object are ignored. For more information,\
          \ see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\"\
          >Policies</a>."
      title: BatchReadSuccessfulResponse_LookupPolicy
    BatchReadSuccessfulResponse_ListIndex:
      allOf:
      - $ref: '#/components/schemas/BatchListIndexResponse'
      - description: Lists objects attached to the specified index.
      title: BatchReadSuccessfulResponse_ListIndex
    BatchReadSuccessfulResponse_ListOutgoingTypedLinks:
      allOf:
      - $ref: '#/components/schemas/BatchListOutgoingTypedLinksResponse'
      - description: "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a>\
          \ information for an object. It also supports filtering by typed link facet\
          \ and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
          >Typed Links</a>."
      title: BatchReadSuccessfulResponse_ListOutgoingTypedLinks
    BatchReadSuccessfulResponse_ListIncomingTypedLinks:
      allOf:
      - $ref: '#/components/schemas/BatchListIncomingTypedLinksResponse'
      - description: "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a>\
          \ information for an object. It also supports filtering by typed link facet\
          \ and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
          >Typed Links</a>."
      title: BatchReadSuccessfulResponse_ListIncomingTypedLinks
    BatchReadSuccessfulResponse_GetLinkAttributes:
      allOf:
      - $ref: '#/components/schemas/BatchGetLinkAttributesResponse'
      - description: The list of attributes to retrieve from the typed link.
      title: BatchReadSuccessfulResponse_GetLinkAttributes
    BatchReadSuccessfulResponse_ListObjectParents:
      allOf:
      - $ref: '#/components/schemas/BatchListObjectParentsResponse'
      - description: The list of parent objects to retrieve.
      title: BatchReadSuccessfulResponse_ListObjectParents
    BatchReadOperationResponse_SuccessfulResponse:
      allOf:
      - $ref: '#/components/schemas/BatchReadSuccessfulResponse'
      - description: Identifies which operation in a batch has succeeded.
      title: BatchReadOperationResponse_SuccessfulResponse
    BatchReadOperationResponse_ExceptionResponse:
      allOf:
      - $ref: '#/components/schemas/BatchReadException'
      - description: Identifies which operation in a batch has failed.
      title: BatchReadOperationResponse_ExceptionResponse
    BatchRemoveFacetFromObject_SchemaFacet:
      allOf:
      - $ref: '#/components/schemas/SchemaFacet'
      - description: The facet to remove from the object.
      title: BatchRemoveFacetFromObject_SchemaFacet
    BatchRemoveFacetFromObject_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the object whose facet will be removed.
      title: BatchRemoveFacetFromObject_ObjectReference
    BatchUpdateObjectAttributes_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Reference that identifies the object.
      title: BatchUpdateObjectAttributes_ObjectReference
    BatchWriteOperationResponse_CreateObject:
      allOf:
      - $ref: '#/components/schemas/BatchCreateObjectResponse'
      - description: Creates an object in a <a>Directory</a>.
      title: BatchWriteOperationResponse_CreateObject
    BatchWriteOperationResponse_AttachObject:
      allOf:
      - $ref: '#/components/schemas/BatchAttachObjectResponse'
      - description: Attaches an object to a <a>Directory</a>.
      title: BatchWriteOperationResponse_AttachObject
    BatchWriteOperationResponse_DetachObject:
      allOf:
      - $ref: '#/components/schemas/BatchDetachObjectResponse'
      - description: Detaches an object from a <a>Directory</a>.
      title: BatchWriteOperationResponse_DetachObject
    BatchWriteOperationResponse_UpdateObjectAttributes:
      allOf:
      - $ref: '#/components/schemas/BatchUpdateObjectAttributesResponse'
      - description: Updates a given object’s attributes.
      title: BatchWriteOperationResponse_UpdateObjectAttributes
    BatchWriteOperationResponse_CreateIndex:
      allOf:
      - $ref: '#/components/schemas/BatchCreateIndexResponse'
      - description: Creates an index object. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.htm">Indexing
          and search</a> for more information.
      title: BatchWriteOperationResponse_CreateIndex
    BatchWriteOperationResponse_AttachToIndex:
      allOf:
      - $ref: '#/components/schemas/BatchAttachToIndexResponse'
      - description: Attaches the specified object to the specified index.
      title: BatchWriteOperationResponse_AttachToIndex
    BatchWriteOperationResponse_DetachFromIndex:
      allOf:
      - $ref: '#/components/schemas/BatchDetachFromIndexResponse'
      - description: Detaches the specified object from the specified index.
      title: BatchWriteOperationResponse_DetachFromIndex
    BatchWriteOperationResponse_AttachTypedLink:
      allOf:
      - $ref: '#/components/schemas/BatchAttachTypedLinkResponse'
      - description: "Attaches a typed link to a specified source and target object.\
          \ For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\"\
          >Typed Links</a>."
      title: BatchWriteOperationResponse_AttachTypedLink
    CreateTypedLinkFacetRequest_Facet:
      allOf:
      - $ref: '#/components/schemas/TypedLinkFacet'
      - description: ' <a>Facet</a> structure that is associated with the typed link
          facet.'
      example:
        IdentityAttributeOrder: ""
        Attributes: ""
        Name: ""
      title: CreateTypedLinkFacetRequest_Facet
    DeleteObjectRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference that identifies the object.
      example:
        Selector: ""
      title: DeleteObjectRequest_ObjectReference
    DetachObjectRequest_ParentReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The parent reference from which the object with the specified
          link name is detached.
      example:
        Selector: ""
      title: DetachObjectRequest_ParentReference
    FacetAttributeDefinition_DefaultValue:
      allOf:
      - $ref: '#/components/schemas/TypedAttributeValue'
      - description: The default value of the attribute (if configured).
      title: FacetAttributeDefinition_DefaultValue
    LinkAttributeAction_AttributeUpdateValue:
      allOf:
      - $ref: '#/components/schemas/TypedAttributeValue'
      - description: The value that you want to update to.
      title: LinkAttributeAction_AttributeUpdateValue
    ListIncomingTypedLinksRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Reference that identifies the object whose attributes will be
          listed.
      example:
        Selector: ""
      title: ListIncomingTypedLinksRequest_ObjectReference
    ListObjectChildrenRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The reference that identifies the object for which child objects
          are being listed.
      example:
        Selector: ""
      title: ListObjectChildrenRequest_ObjectReference
    ListObjectParentPathsRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The reference that identifies the object whose parent paths are
          listed.
      title: ListObjectParentPathsRequest_ObjectReference
    ListObjectParentsRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: The reference that identifies the object for which parent objects
          are being listed.
      example:
        Selector: ""
      title: ListObjectParentsRequest_ObjectReference
    ListObjectPoliciesRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: Reference that identifies the object for which policies will
          be listed.
      title: ListObjectPoliciesRequest_ObjectReference
    ListOutgoingTypedLinksRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference that identifies the object whose attributes will
          be listed.
      title: ListOutgoingTypedLinksRequest_ObjectReference
    TypedAttributeValueRange_StartValue:
      allOf:
      - $ref: '#/components/schemas/TypedAttributeValue'
      - description: The value to start the range at.
      title: TypedAttributeValueRange_StartValue
    TypedAttributeValueRange_EndValue:
      allOf:
      - $ref: '#/components/schemas/TypedAttributeValue'
      - description: The attribute value to terminate the range at.
      title: TypedAttributeValueRange_EndValue
    RemoveFacetFromObjectRequest_SchemaFacet:
      allOf:
      - $ref: '#/components/schemas/SchemaFacet'
      - description: The facet to remove. See <a>SchemaFacet</a> for details.
      example:
        FacetName: ""
        SchemaArn: ""
      title: RemoveFacetFromObjectRequest_SchemaFacet
    RemoveFacetFromObjectRequest_ObjectReference:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - description: A reference to the object to remove the facet from.
      example:
        Selector: ""
      title: RemoveFacetFromObjectRequest_ObjectReference
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
