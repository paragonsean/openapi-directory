# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PolicyAttachment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_id: str=None, object_identifier: str=None, policy_type: str=None):
        """PolicyAttachment - a model defined in OpenAPI

        :param policy_id: The policy_id of this PolicyAttachment.
        :param object_identifier: The object_identifier of this PolicyAttachment.
        :param policy_type: The policy_type of this PolicyAttachment.
        """
        self.openapi_types = {
            'policy_id': str,
            'object_identifier': str,
            'policy_type': str
        }

        self.attribute_map = {
            'policy_id': 'PolicyId',
            'object_identifier': 'ObjectIdentifier',
            'policy_type': 'PolicyType'
        }

        self._policy_id = policy_id
        self._object_identifier = object_identifier
        self._policy_type = policy_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyAttachment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyAttachment of this PolicyAttachment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_id(self):
        """Gets the policy_id of this PolicyAttachment.


        :return: The policy_id of this PolicyAttachment.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this PolicyAttachment.


        :param policy_id: The policy_id of this PolicyAttachment.
        :type policy_id: str
        """

        self._policy_id = policy_id

    @property
    def object_identifier(self):
        """Gets the object_identifier of this PolicyAttachment.


        :return: The object_identifier of this PolicyAttachment.
        :rtype: str
        """
        return self._object_identifier

    @object_identifier.setter
    def object_identifier(self, object_identifier):
        """Sets the object_identifier of this PolicyAttachment.


        :param object_identifier: The object_identifier of this PolicyAttachment.
        :type object_identifier: str
        """

        self._object_identifier = object_identifier

    @property
    def policy_type(self):
        """Gets the policy_type of this PolicyAttachment.


        :return: The policy_type of this PolicyAttachment.
        :rtype: str
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this PolicyAttachment.


        :param policy_type: The policy_type of this PolicyAttachment.
        :type policy_type: str
        """

        self._policy_type = policy_type
