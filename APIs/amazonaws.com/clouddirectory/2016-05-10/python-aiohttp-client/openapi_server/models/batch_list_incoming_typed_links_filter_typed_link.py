# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchListIncomingTypedLinksFilterTypedLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schema_arn: str=None, typed_link_name: str=None):
        """BatchListIncomingTypedLinksFilterTypedLink - a model defined in OpenAPI

        :param schema_arn: The schema_arn of this BatchListIncomingTypedLinksFilterTypedLink.
        :param typed_link_name: The typed_link_name of this BatchListIncomingTypedLinksFilterTypedLink.
        """
        self.openapi_types = {
            'schema_arn': str,
            'typed_link_name': str
        }

        self.attribute_map = {
            'schema_arn': 'SchemaArn',
            'typed_link_name': 'TypedLinkName'
        }

        self._schema_arn = schema_arn
        self._typed_link_name = typed_link_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchListIncomingTypedLinksFilterTypedLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchListIncomingTypedLinks_FilterTypedLink of this BatchListIncomingTypedLinksFilterTypedLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schema_arn(self):
        """Gets the schema_arn of this BatchListIncomingTypedLinksFilterTypedLink.


        :return: The schema_arn of this BatchListIncomingTypedLinksFilterTypedLink.
        :rtype: str
        """
        return self._schema_arn

    @schema_arn.setter
    def schema_arn(self, schema_arn):
        """Sets the schema_arn of this BatchListIncomingTypedLinksFilterTypedLink.


        :param schema_arn: The schema_arn of this BatchListIncomingTypedLinksFilterTypedLink.
        :type schema_arn: str
        """
        if schema_arn is None:
            raise ValueError("Invalid value for `schema_arn`, must not be `None`")

        self._schema_arn = schema_arn

    @property
    def typed_link_name(self):
        """Gets the typed_link_name of this BatchListIncomingTypedLinksFilterTypedLink.


        :return: The typed_link_name of this BatchListIncomingTypedLinksFilterTypedLink.
        :rtype: str
        """
        return self._typed_link_name

    @typed_link_name.setter
    def typed_link_name(self, typed_link_name):
        """Sets the typed_link_name of this BatchListIncomingTypedLinksFilterTypedLink.


        :param typed_link_name: The typed_link_name of this BatchListIncomingTypedLinksFilterTypedLink.
        :type typed_link_name: str
        """
        if typed_link_name is None:
            raise ValueError("Invalid value for `typed_link_name`, must not be `None`")

        self._typed_link_name = typed_link_name
