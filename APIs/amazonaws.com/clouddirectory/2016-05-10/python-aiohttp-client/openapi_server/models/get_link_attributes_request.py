# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detach_typed_link_request_typed_link_specifier import DetachTypedLinkRequestTypedLinkSpecifier
from openapi_server import util


class GetLinkAttributesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, typed_link_specifier: DetachTypedLinkRequestTypedLinkSpecifier=None, attribute_names: List[str]=None, consistency_level: str=None):
        """GetLinkAttributesRequest - a model defined in OpenAPI

        :param typed_link_specifier: The typed_link_specifier of this GetLinkAttributesRequest.
        :param attribute_names: The attribute_names of this GetLinkAttributesRequest.
        :param consistency_level: The consistency_level of this GetLinkAttributesRequest.
        """
        self.openapi_types = {
            'typed_link_specifier': DetachTypedLinkRequestTypedLinkSpecifier,
            'attribute_names': List[str],
            'consistency_level': str
        }

        self.attribute_map = {
            'typed_link_specifier': 'TypedLinkSpecifier',
            'attribute_names': 'AttributeNames',
            'consistency_level': 'ConsistencyLevel'
        }

        self._typed_link_specifier = typed_link_specifier
        self._attribute_names = attribute_names
        self._consistency_level = consistency_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetLinkAttributesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetLinkAttributes_request of this GetLinkAttributesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def typed_link_specifier(self):
        """Gets the typed_link_specifier of this GetLinkAttributesRequest.


        :return: The typed_link_specifier of this GetLinkAttributesRequest.
        :rtype: DetachTypedLinkRequestTypedLinkSpecifier
        """
        return self._typed_link_specifier

    @typed_link_specifier.setter
    def typed_link_specifier(self, typed_link_specifier):
        """Sets the typed_link_specifier of this GetLinkAttributesRequest.


        :param typed_link_specifier: The typed_link_specifier of this GetLinkAttributesRequest.
        :type typed_link_specifier: DetachTypedLinkRequestTypedLinkSpecifier
        """
        if typed_link_specifier is None:
            raise ValueError("Invalid value for `typed_link_specifier`, must not be `None`")

        self._typed_link_specifier = typed_link_specifier

    @property
    def attribute_names(self):
        """Gets the attribute_names of this GetLinkAttributesRequest.

        A list of attribute names whose values will be retrieved.

        :return: The attribute_names of this GetLinkAttributesRequest.
        :rtype: List[str]
        """
        return self._attribute_names

    @attribute_names.setter
    def attribute_names(self, attribute_names):
        """Sets the attribute_names of this GetLinkAttributesRequest.

        A list of attribute names whose values will be retrieved.

        :param attribute_names: The attribute_names of this GetLinkAttributesRequest.
        :type attribute_names: List[str]
        """
        if attribute_names is None:
            raise ValueError("Invalid value for `attribute_names`, must not be `None`")

        self._attribute_names = attribute_names

    @property
    def consistency_level(self):
        """Gets the consistency_level of this GetLinkAttributesRequest.

        The consistency level at which to retrieve the attributes on a typed link.

        :return: The consistency_level of this GetLinkAttributesRequest.
        :rtype: str
        """
        return self._consistency_level

    @consistency_level.setter
    def consistency_level(self, consistency_level):
        """Sets the consistency_level of this GetLinkAttributesRequest.

        The consistency level at which to retrieve the attributes on a typed link.

        :param consistency_level: The consistency_level of this GetLinkAttributesRequest.
        :type consistency_level: str
        """
        allowed_values = ["SERIALIZABLE", "EVENTUAL"]  # noqa: E501
        if consistency_level not in allowed_values:
            raise ValueError(
                "Invalid value for `consistency_level` ({0}), must be one of {1}"
                .format(consistency_level, allowed_values)
            )

        self._consistency_level = consistency_level
