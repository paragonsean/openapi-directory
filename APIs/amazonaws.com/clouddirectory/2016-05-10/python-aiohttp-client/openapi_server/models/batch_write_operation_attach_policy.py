# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attach_policy_request_object_reference import AttachPolicyRequestObjectReference
from openapi_server.models.attach_policy_request_policy_reference import AttachPolicyRequestPolicyReference
from openapi_server import util


class BatchWriteOperationAttachPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_reference: AttachPolicyRequestPolicyReference=None, object_reference: AttachPolicyRequestObjectReference=None):
        """BatchWriteOperationAttachPolicy - a model defined in OpenAPI

        :param policy_reference: The policy_reference of this BatchWriteOperationAttachPolicy.
        :param object_reference: The object_reference of this BatchWriteOperationAttachPolicy.
        """
        self.openapi_types = {
            'policy_reference': AttachPolicyRequestPolicyReference,
            'object_reference': AttachPolicyRequestObjectReference
        }

        self.attribute_map = {
            'policy_reference': 'PolicyReference',
            'object_reference': 'ObjectReference'
        }

        self._policy_reference = policy_reference
        self._object_reference = object_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchWriteOperationAttachPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchWriteOperation_AttachPolicy of this BatchWriteOperationAttachPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_reference(self):
        """Gets the policy_reference of this BatchWriteOperationAttachPolicy.


        :return: The policy_reference of this BatchWriteOperationAttachPolicy.
        :rtype: AttachPolicyRequestPolicyReference
        """
        return self._policy_reference

    @policy_reference.setter
    def policy_reference(self, policy_reference):
        """Sets the policy_reference of this BatchWriteOperationAttachPolicy.


        :param policy_reference: The policy_reference of this BatchWriteOperationAttachPolicy.
        :type policy_reference: AttachPolicyRequestPolicyReference
        """
        if policy_reference is None:
            raise ValueError("Invalid value for `policy_reference`, must not be `None`")

        self._policy_reference = policy_reference

    @property
    def object_reference(self):
        """Gets the object_reference of this BatchWriteOperationAttachPolicy.


        :return: The object_reference of this BatchWriteOperationAttachPolicy.
        :rtype: AttachPolicyRequestObjectReference
        """
        return self._object_reference

    @object_reference.setter
    def object_reference(self, object_reference):
        """Sets the object_reference of this BatchWriteOperationAttachPolicy.


        :param object_reference: The object_reference of this BatchWriteOperationAttachPolicy.
        :type object_reference: AttachPolicyRequestObjectReference
        """
        if object_reference is None:
            raise ValueError("Invalid value for `object_reference`, must not be `None`")

        self._object_reference = object_reference
