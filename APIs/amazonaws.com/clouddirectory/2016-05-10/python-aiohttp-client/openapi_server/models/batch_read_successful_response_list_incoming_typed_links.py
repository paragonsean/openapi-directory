# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchReadSuccessfulResponseListIncomingTypedLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, link_specifiers: List=None, next_token: str=None):
        """BatchReadSuccessfulResponseListIncomingTypedLinks - a model defined in OpenAPI

        :param link_specifiers: The link_specifiers of this BatchReadSuccessfulResponseListIncomingTypedLinks.
        :param next_token: The next_token of this BatchReadSuccessfulResponseListIncomingTypedLinks.
        """
        self.openapi_types = {
            'link_specifiers': List,
            'next_token': str
        }

        self.attribute_map = {
            'link_specifiers': 'LinkSpecifiers',
            'next_token': 'NextToken'
        }

        self._link_specifiers = link_specifiers
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchReadSuccessfulResponseListIncomingTypedLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchReadSuccessfulResponse_ListIncomingTypedLinks of this BatchReadSuccessfulResponseListIncomingTypedLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def link_specifiers(self):
        """Gets the link_specifiers of this BatchReadSuccessfulResponseListIncomingTypedLinks.


        :return: The link_specifiers of this BatchReadSuccessfulResponseListIncomingTypedLinks.
        :rtype: List
        """
        return self._link_specifiers

    @link_specifiers.setter
    def link_specifiers(self, link_specifiers):
        """Sets the link_specifiers of this BatchReadSuccessfulResponseListIncomingTypedLinks.


        :param link_specifiers: The link_specifiers of this BatchReadSuccessfulResponseListIncomingTypedLinks.
        :type link_specifiers: List
        """

        self._link_specifiers = link_specifiers

    @property
    def next_token(self):
        """Gets the next_token of this BatchReadSuccessfulResponseListIncomingTypedLinks.


        :return: The next_token of this BatchReadSuccessfulResponseListIncomingTypedLinks.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this BatchReadSuccessfulResponseListIncomingTypedLinks.


        :param next_token: The next_token of this BatchReadSuccessfulResponseListIncomingTypedLinks.
        :type next_token: str
        """

        self._next_token = next_token
