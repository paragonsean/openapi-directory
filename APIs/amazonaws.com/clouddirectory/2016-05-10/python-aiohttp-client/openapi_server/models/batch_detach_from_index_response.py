# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchDetachFromIndexResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detached_object_identifier: str=None):
        """BatchDetachFromIndexResponse - a model defined in OpenAPI

        :param detached_object_identifier: The detached_object_identifier of this BatchDetachFromIndexResponse.
        """
        self.openapi_types = {
            'detached_object_identifier': str
        }

        self.attribute_map = {
            'detached_object_identifier': 'DetachedObjectIdentifier'
        }

        self._detached_object_identifier = detached_object_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDetachFromIndexResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDetachFromIndexResponse of this BatchDetachFromIndexResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detached_object_identifier(self):
        """Gets the detached_object_identifier of this BatchDetachFromIndexResponse.


        :return: The detached_object_identifier of this BatchDetachFromIndexResponse.
        :rtype: str
        """
        return self._detached_object_identifier

    @detached_object_identifier.setter
    def detached_object_identifier(self, detached_object_identifier):
        """Sets the detached_object_identifier of this BatchDetachFromIndexResponse.


        :param detached_object_identifier: The detached_object_identifier of this BatchDetachFromIndexResponse.
        :type detached_object_identifier: str
        """

        self._detached_object_identifier = detached_object_identifier
