# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_directory_response_directory import GetDirectoryResponseDirectory
from openapi_server import util


class GetDirectoryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, directory: GetDirectoryResponseDirectory=None):
        """GetDirectoryResponse - a model defined in OpenAPI

        :param directory: The directory of this GetDirectoryResponse.
        """
        self.openapi_types = {
            'directory': GetDirectoryResponseDirectory
        }

        self.attribute_map = {
            'directory': 'Directory'
        }

        self._directory = directory

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDirectoryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDirectoryResponse of this GetDirectoryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def directory(self):
        """Gets the directory of this GetDirectoryResponse.


        :return: The directory of this GetDirectoryResponse.
        :rtype: GetDirectoryResponseDirectory
        """
        return self._directory

    @directory.setter
    def directory(self, directory):
        """Sets the directory of this GetDirectoryResponse.


        :param directory: The directory of this GetDirectoryResponse.
        :type directory: GetDirectoryResponseDirectory
        """
        if directory is None:
            raise ValueError("Invalid value for `directory`, must not be `None`")

        self._directory = directory
