# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchDetachPolicyPolicyReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, selector: str=None):
        """BatchDetachPolicyPolicyReference - a model defined in OpenAPI

        :param selector: The selector of this BatchDetachPolicyPolicyReference.
        """
        self.openapi_types = {
            'selector': str
        }

        self.attribute_map = {
            'selector': 'Selector'
        }

        self._selector = selector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDetachPolicyPolicyReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDetachPolicy_PolicyReference of this BatchDetachPolicyPolicyReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def selector(self):
        """Gets the selector of this BatchDetachPolicyPolicyReference.


        :return: The selector of this BatchDetachPolicyPolicyReference.
        :rtype: str
        """
        return self._selector

    @selector.setter
    def selector(self, selector):
        """Sets the selector of this BatchDetachPolicyPolicyReference.


        :param selector: The selector of this BatchDetachPolicyPolicyReference.
        :type selector: str
        """

        self._selector = selector
