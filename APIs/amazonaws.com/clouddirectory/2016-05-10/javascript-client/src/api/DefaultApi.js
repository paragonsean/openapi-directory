/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccessDeniedException from '../model/AccessDeniedException';
import AddFacetToObjectRequest from '../model/AddFacetToObjectRequest';
import ApplySchemaRequest from '../model/ApplySchemaRequest';
import ApplySchemaResponse from '../model/ApplySchemaResponse';
import AttachObjectRequest from '../model/AttachObjectRequest';
import AttachObjectResponse from '../model/AttachObjectResponse';
import AttachPolicyRequest from '../model/AttachPolicyRequest';
import AttachToIndexRequest from '../model/AttachToIndexRequest';
import AttachToIndexResponse from '../model/AttachToIndexResponse';
import AttachTypedLinkRequest from '../model/AttachTypedLinkRequest';
import AttachTypedLinkResponse from '../model/AttachTypedLinkResponse';
import BatchReadRequest from '../model/BatchReadRequest';
import BatchReadResponse from '../model/BatchReadResponse';
import BatchWriteException from '../model/BatchWriteException';
import BatchWriteRequest from '../model/BatchWriteRequest';
import BatchWriteResponse from '../model/BatchWriteResponse';
import CannotListParentOfRootException from '../model/CannotListParentOfRootException';
import CreateDirectoryRequest from '../model/CreateDirectoryRequest';
import CreateDirectoryResponse from '../model/CreateDirectoryResponse';
import CreateFacetRequest from '../model/CreateFacetRequest';
import CreateIndexRequest from '../model/CreateIndexRequest';
import CreateIndexResponse from '../model/CreateIndexResponse';
import CreateObjectRequest from '../model/CreateObjectRequest';
import CreateObjectResponse from '../model/CreateObjectResponse';
import CreateSchemaRequest from '../model/CreateSchemaRequest';
import CreateSchemaResponse from '../model/CreateSchemaResponse';
import CreateTypedLinkFacetRequest from '../model/CreateTypedLinkFacetRequest';
import DeleteDirectoryResponse from '../model/DeleteDirectoryResponse';
import DeleteFacetRequest from '../model/DeleteFacetRequest';
import DeleteObjectRequest from '../model/DeleteObjectRequest';
import DeleteSchemaResponse from '../model/DeleteSchemaResponse';
import DeleteTypedLinkFacetRequest from '../model/DeleteTypedLinkFacetRequest';
import DetachFromIndexResponse from '../model/DetachFromIndexResponse';
import DetachObjectRequest from '../model/DetachObjectRequest';
import DetachObjectResponse from '../model/DetachObjectResponse';
import DetachTypedLinkRequest from '../model/DetachTypedLinkRequest';
import DirectoryAlreadyExistsException from '../model/DirectoryAlreadyExistsException';
import DirectoryDeletedException from '../model/DirectoryDeletedException';
import DirectoryNotDisabledException from '../model/DirectoryNotDisabledException';
import DirectoryNotEnabledException from '../model/DirectoryNotEnabledException';
import DisableDirectoryResponse from '../model/DisableDirectoryResponse';
import EnableDirectoryResponse from '../model/EnableDirectoryResponse';
import FacetAlreadyExistsException from '../model/FacetAlreadyExistsException';
import FacetInUseException from '../model/FacetInUseException';
import FacetNotFoundException from '../model/FacetNotFoundException';
import FacetValidationException from '../model/FacetValidationException';
import GetAppliedSchemaVersionRequest from '../model/GetAppliedSchemaVersionRequest';
import GetAppliedSchemaVersionResponse from '../model/GetAppliedSchemaVersionResponse';
import GetDirectoryResponse from '../model/GetDirectoryResponse';
import GetFacetRequest from '../model/GetFacetRequest';
import GetFacetResponse from '../model/GetFacetResponse';
import GetLinkAttributesRequest from '../model/GetLinkAttributesRequest';
import GetLinkAttributesResponse from '../model/GetLinkAttributesResponse';
import GetObjectAttributesRequest from '../model/GetObjectAttributesRequest';
import GetObjectAttributesResponse from '../model/GetObjectAttributesResponse';
import GetObjectInformationResponse from '../model/GetObjectInformationResponse';
import GetSchemaAsJsonResponse from '../model/GetSchemaAsJsonResponse';
import GetTypedLinkFacetInformationResponse from '../model/GetTypedLinkFacetInformationResponse';
import IncompatibleSchemaException from '../model/IncompatibleSchemaException';
import IndexedAttributeMissingException from '../model/IndexedAttributeMissingException';
import InternalServiceException from '../model/InternalServiceException';
import InvalidArnException from '../model/InvalidArnException';
import InvalidAttachmentException from '../model/InvalidAttachmentException';
import InvalidFacetUpdateException from '../model/InvalidFacetUpdateException';
import InvalidNextTokenException from '../model/InvalidNextTokenException';
import InvalidRuleException from '../model/InvalidRuleException';
import InvalidSchemaDocException from '../model/InvalidSchemaDocException';
import InvalidTaggingRequestException from '../model/InvalidTaggingRequestException';
import LimitExceededException from '../model/LimitExceededException';
import LinkNameAlreadyInUseException from '../model/LinkNameAlreadyInUseException';
import ListAppliedSchemaArnsRequest from '../model/ListAppliedSchemaArnsRequest';
import ListAppliedSchemaArnsResponse from '../model/ListAppliedSchemaArnsResponse';
import ListAttachedIndicesRequest from '../model/ListAttachedIndicesRequest';
import ListAttachedIndicesResponse from '../model/ListAttachedIndicesResponse';
import ListDevelopmentSchemaArnsRequest from '../model/ListDevelopmentSchemaArnsRequest';
import ListDevelopmentSchemaArnsResponse from '../model/ListDevelopmentSchemaArnsResponse';
import ListDirectoriesRequest from '../model/ListDirectoriesRequest';
import ListDirectoriesResponse from '../model/ListDirectoriesResponse';
import ListFacetAttributesRequest from '../model/ListFacetAttributesRequest';
import ListFacetAttributesResponse from '../model/ListFacetAttributesResponse';
import ListFacetNamesResponse from '../model/ListFacetNamesResponse';
import ListIncomingTypedLinksRequest from '../model/ListIncomingTypedLinksRequest';
import ListIncomingTypedLinksResponse from '../model/ListIncomingTypedLinksResponse';
import ListIndexRequest from '../model/ListIndexRequest';
import ListIndexResponse from '../model/ListIndexResponse';
import ListObjectAttributesRequest from '../model/ListObjectAttributesRequest';
import ListObjectAttributesResponse from '../model/ListObjectAttributesResponse';
import ListObjectChildrenRequest from '../model/ListObjectChildrenRequest';
import ListObjectChildrenResponse from '../model/ListObjectChildrenResponse';
import ListObjectParentPathsResponse from '../model/ListObjectParentPathsResponse';
import ListObjectParentsResponse from '../model/ListObjectParentsResponse';
import ListObjectPoliciesResponse from '../model/ListObjectPoliciesResponse';
import ListOutgoingTypedLinksResponse from '../model/ListOutgoingTypedLinksResponse';
import ListPolicyAttachmentsRequest from '../model/ListPolicyAttachmentsRequest';
import ListPolicyAttachmentsResponse from '../model/ListPolicyAttachmentsResponse';
import ListPublishedSchemaArnsRequest from '../model/ListPublishedSchemaArnsRequest';
import ListPublishedSchemaArnsResponse from '../model/ListPublishedSchemaArnsResponse';
import ListTagsForResourceRequest from '../model/ListTagsForResourceRequest';
import ListTagsForResourceResponse from '../model/ListTagsForResourceResponse';
import ListTypedLinkFacetAttributesRequest from '../model/ListTypedLinkFacetAttributesRequest';
import ListTypedLinkFacetAttributesResponse from '../model/ListTypedLinkFacetAttributesResponse';
import ListTypedLinkFacetNamesResponse from '../model/ListTypedLinkFacetNamesResponse';
import LookupPolicyRequest from '../model/LookupPolicyRequest';
import LookupPolicyResponse from '../model/LookupPolicyResponse';
import NotIndexException from '../model/NotIndexException';
import NotNodeException from '../model/NotNodeException';
import NotPolicyException from '../model/NotPolicyException';
import ObjectAlreadyDetachedException from '../model/ObjectAlreadyDetachedException';
import ObjectNotDetachedException from '../model/ObjectNotDetachedException';
import PublishSchemaRequest from '../model/PublishSchemaRequest';
import PublishSchemaResponse from '../model/PublishSchemaResponse';
import PutSchemaFromJsonRequest from '../model/PutSchemaFromJsonRequest';
import PutSchemaFromJsonResponse from '../model/PutSchemaFromJsonResponse';
import RemoveFacetFromObjectRequest from '../model/RemoveFacetFromObjectRequest';
import ResourceNotFoundException from '../model/ResourceNotFoundException';
import RetryableConflictException from '../model/RetryableConflictException';
import SchemaAlreadyExistsException from '../model/SchemaAlreadyExistsException';
import SchemaAlreadyPublishedException from '../model/SchemaAlreadyPublishedException';
import StillContainsLinksException from '../model/StillContainsLinksException';
import TagResourceRequest from '../model/TagResourceRequest';
import UnsupportedIndexTypeException from '../model/UnsupportedIndexTypeException';
import UntagResourceRequest from '../model/UntagResourceRequest';
import UpdateFacetRequest from '../model/UpdateFacetRequest';
import UpdateLinkAttributesRequest from '../model/UpdateLinkAttributesRequest';
import UpdateObjectAttributesRequest from '../model/UpdateObjectAttributesRequest';
import UpdateObjectAttributesResponse from '../model/UpdateObjectAttributesResponse';
import UpdateSchemaRequest from '../model/UpdateSchemaRequest';
import UpdateSchemaResponse from '../model/UpdateSchemaResponse';
import UpdateTypedLinkFacetRequest from '../model/UpdateTypedLinkFacetRequest';
import UpgradeAppliedSchemaRequest from '../model/UpgradeAppliedSchemaRequest';
import UpgradeAppliedSchemaResponse from '../model/UpgradeAppliedSchemaResponse';
import UpgradePublishedSchemaRequest from '../model/UpgradePublishedSchemaRequest';
import UpgradePublishedSchemaResponse from '../model/UpgradePublishedSchemaResponse';
import ValidationException from '../model/ValidationException';

/**
* Default service.
* @module api/DefaultApi
* @version 2016-05-10
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addFacetToObject operation.
     * @callback module:api/DefaultApi~addFacetToObjectCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a new <a>Facet</a> to an object. An object can have more than one facet applied on it.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.
     * @param {module:model/AddFacetToObjectRequest} addFacetToObjectRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~addFacetToObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    addFacetToObject(xAmzDataPartition, addFacetToObjectRequest, opts, callback) {
      opts = opts || {};
      let postBody = addFacetToObjectRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling addFacetToObject");
      }
      // verify the required parameter 'addFacetToObjectRequest' is set
      if (addFacetToObjectRequest === undefined || addFacetToObjectRequest === null) {
        throw new Error("Missing the required parameter 'addFacetToObjectRequest' when calling addFacetToObject");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/facets#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applySchema operation.
     * @callback module:api/DefaultApi~applySchemaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplySchemaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Copies the input published schema, at the specified version, into the <a>Directory</a> with the same name and version as that of the published schema.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> into which the schema is copied. For more information, see <a>arns</a>.
     * @param {module:model/ApplySchemaRequest} applySchemaRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~applySchemaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplySchemaResponse}
     */
    applySchema(xAmzDataPartition, applySchemaRequest, opts, callback) {
      opts = opts || {};
      let postBody = applySchemaRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling applySchema");
      }
      // verify the required parameter 'applySchemaRequest' is set
      if (applySchemaRequest === undefined || applySchemaRequest === null) {
        throw new Error("Missing the required parameter 'applySchemaRequest' when calling applySchema");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApplySchemaResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/apply#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the attachObject operation.
     * @callback module:api/DefaultApi~attachObjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttachObjectResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Attaches an existing object to another object. An object can be accessed in two ways:</p> <ol> <li> <p>Using the path</p> </li> <li> <p>Using <code>ObjectIdentifier</code> </p> </li> </ol>
     * @param {String} xAmzDataPartition Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.
     * @param {module:model/AttachObjectRequest} attachObjectRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~attachObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttachObjectResponse}
     */
    attachObject(xAmzDataPartition, attachObjectRequest, opts, callback) {
      opts = opts || {};
      let postBody = attachObjectRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling attachObject");
      }
      // verify the required parameter 'attachObjectRequest' is set
      if (attachObjectRequest === undefined || attachObjectRequest === null) {
        throw new Error("Missing the required parameter 'attachObjectRequest' when calling attachObject");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttachObjectResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/attach#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the attachPolicy operation.
     * @callback module:api/DefaultApi~attachPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attaches a policy object to a regular object. An object can have a limited number of attached policies.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.
     * @param {module:model/AttachPolicyRequest} attachPolicyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~attachPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    attachPolicy(xAmzDataPartition, attachPolicyRequest, opts, callback) {
      opts = opts || {};
      let postBody = attachPolicyRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling attachPolicy");
      }
      // verify the required parameter 'attachPolicyRequest' is set
      if (attachPolicyRequest === undefined || attachPolicyRequest === null) {
        throw new Error("Missing the required parameter 'attachPolicyRequest' when calling attachPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/policy/attach#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the attachToIndex operation.
     * @callback module:api/DefaultApi~attachToIndexCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttachToIndexResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attaches the specified object to the specified index.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) of the directory where the object and index exist.
     * @param {module:model/AttachToIndexRequest} attachToIndexRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~attachToIndexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttachToIndexResponse}
     */
    attachToIndex(xAmzDataPartition, attachToIndexRequest, opts, callback) {
      opts = opts || {};
      let postBody = attachToIndexRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling attachToIndex");
      }
      // verify the required parameter 'attachToIndexRequest' is set
      if (attachToIndexRequest === undefined || attachToIndexRequest === null) {
        throw new Error("Missing the required parameter 'attachToIndexRequest' when calling attachToIndex");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttachToIndexResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/index/attach#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the attachTypedLink operation.
     * @callback module:api/DefaultApi~attachTypedLinkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttachTypedLinkResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attaches a typed link to a specified source and target object. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) of the directory where you want to attach the typed link.
     * @param {module:model/AttachTypedLinkRequest} attachTypedLinkRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~attachTypedLinkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttachTypedLinkResponse}
     */
    attachTypedLink(xAmzDataPartition, attachTypedLinkRequest, opts, callback) {
      opts = opts || {};
      let postBody = attachTypedLinkRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling attachTypedLink");
      }
      // verify the required parameter 'attachTypedLinkRequest' is set
      if (attachTypedLinkRequest === undefined || attachTypedLinkRequest === null) {
        throw new Error("Missing the required parameter 'attachTypedLinkRequest' when calling attachTypedLink");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttachTypedLinkResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/attach#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchRead operation.
     * @callback module:api/DefaultApi~batchReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchReadResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Performs all the read operations in a batch. 
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.
     * @param {module:model/BatchReadRequest} batchReadRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
     * @param {module:api/DefaultApi~batchReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchReadResponse}
     */
    batchRead(xAmzDataPartition, batchReadRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchReadRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling batchRead");
      }
      // verify the required parameter 'batchReadRequest' is set
      if (batchReadRequest === undefined || batchReadRequest === null) {
        throw new Error("Missing the required parameter 'batchReadRequest' when calling batchRead");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchReadResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/batchread#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchWrite operation.
     * @callback module:api/DefaultApi~batchWriteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchWriteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Performs all the write operations in a batch. Either all the operations succeed or none.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.
     * @param {module:model/BatchWriteRequest} batchWriteRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchWriteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchWriteResponse}
     */
    batchWrite(xAmzDataPartition, batchWriteRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchWriteRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling batchWrite");
      }
      // verify the required parameter 'batchWriteRequest' is set
      if (batchWriteRequest === undefined || batchWriteRequest === null) {
        throw new Error("Missing the required parameter 'batchWriteRequest' when calling batchWrite");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchWriteResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/batchwrite#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createDirectory operation.
     * @callback module:api/DefaultApi~createDirectoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateDirectoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a <a>Directory</a> by copying the published schema into the directory. A directory cannot be created without a schema.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) of the published schema that will be copied into the data <a>Directory</a>. For more information, see <a>arns</a>.
     * @param {module:model/CreateDirectoryRequest} createDirectoryRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createDirectoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateDirectoryResponse}
     */
    createDirectory(xAmzDataPartition, createDirectoryRequest, opts, callback) {
      opts = opts || {};
      let postBody = createDirectoryRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling createDirectory");
      }
      // verify the required parameter 'createDirectoryRequest' is set
      if (createDirectoryRequest === undefined || createDirectoryRequest === null) {
        throw new Error("Missing the required parameter 'createDirectoryRequest' when calling createDirectory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateDirectoryResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/directory/create#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createFacet operation.
     * @callback module:api/DefaultApi~createFacetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new <a>Facet</a> in a schema. Facet creation is allowed only in development or applied schemas.
     * @param {String} xAmzDataPartition The schema ARN in which the new <a>Facet</a> will be created. For more information, see <a>arns</a>.
     * @param {module:model/CreateFacetRequest} createFacetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createFacetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createFacet(xAmzDataPartition, createFacetRequest, opts, callback) {
      opts = opts || {};
      let postBody = createFacetRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling createFacet");
      }
      // verify the required parameter 'createFacetRequest' is set
      if (createFacetRequest === undefined || createFacetRequest === null) {
        throw new Error("Missing the required parameter 'createFacetRequest' when calling createFacet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/facet/create#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createIndex operation.
     * @callback module:api/DefaultApi~createIndexCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateIndexResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an index object. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html\">Indexing</a> for more information.
     * @param {String} xAmzDataPartition The ARN of the directory where the index should be created.
     * @param {module:model/CreateIndexRequest} createIndexRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createIndexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateIndexResponse}
     */
    createIndex(xAmzDataPartition, createIndexRequest, opts, callback) {
      opts = opts || {};
      let postBody = createIndexRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling createIndex");
      }
      // verify the required parameter 'createIndexRequest' is set
      if (createIndexRequest === undefined || createIndexRequest === null) {
        throw new Error("Missing the required parameter 'createIndexRequest' when calling createIndex");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateIndexResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/index#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createObject operation.
     * @callback module:api/DefaultApi~createObjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateObjectResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an object in a <a>Directory</a>. Additionally attaches the object to a parent, if a parent reference and <code>LinkName</code> is specified. An object is simply a collection of <a>Facet</a> attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet. 
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> in which the object will be created. For more information, see <a>arns</a>.
     * @param {module:model/CreateObjectRequest} createObjectRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateObjectResponse}
     */
    createObject(xAmzDataPartition, createObjectRequest, opts, callback) {
      opts = opts || {};
      let postBody = createObjectRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling createObject");
      }
      // verify the required parameter 'createObjectRequest' is set
      if (createObjectRequest === undefined || createObjectRequest === null) {
        throw new Error("Missing the required parameter 'createObjectRequest' when calling createObject");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateObjectResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createSchema operation.
     * @callback module:api/DefaultApi~createSchemaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateSchemaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a new schema in a development state. A schema can exist in three phases:</p> <ul> <li> <p> <i>Development:</i> This is a mutable phase of the schema. All new schemas are in the development phase. Once the schema is finalized, it can be published.</p> </li> <li> <p> <i>Published:</i> Published schemas are immutable and have a version associated with them.</p> </li> <li> <p> <i>Applied:</i> Applied schemas are mutable in a way that allows you to add new schema facets. You can also add new, nonrequired attributes to existing schema facets. You can apply only published schemas to directories. </p> </li> </ul>
     * @param {module:model/CreateSchemaRequest} createSchemaRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createSchemaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateSchemaResponse}
     */
    createSchema(createSchemaRequest, opts, callback) {
      opts = opts || {};
      let postBody = createSchemaRequest;
      // verify the required parameter 'createSchemaRequest' is set
      if (createSchemaRequest === undefined || createSchemaRequest === null) {
        throw new Error("Missing the required parameter 'createSchemaRequest' when calling createSchema");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateSchemaResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/create', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createTypedLinkFacet operation.
     * @callback module:api/DefaultApi~createTypedLinkFacetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a <a>TypedLinkFacet</a>. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.
     * @param {module:model/CreateTypedLinkFacetRequest} createTypedLinkFacetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createTypedLinkFacetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createTypedLinkFacet(xAmzDataPartition, createTypedLinkFacetRequest, opts, callback) {
      opts = opts || {};
      let postBody = createTypedLinkFacetRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling createTypedLinkFacet");
      }
      // verify the required parameter 'createTypedLinkFacetRequest' is set
      if (createTypedLinkFacetRequest === undefined || createTypedLinkFacetRequest === null) {
        throw new Error("Missing the required parameter 'createTypedLinkFacetRequest' when calling createTypedLinkFacet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/facet/create#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteDirectory operation.
     * @callback module:api/DefaultApi~deleteDirectoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteDirectoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.
     * @param {String} xAmzDataPartition The ARN of the directory to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteDirectoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteDirectoryResponse}
     */
    deleteDirectory(xAmzDataPartition, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling deleteDirectory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteDirectoryResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/directory#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteFacet operation.
     * @callback module:api/DefaultApi~deleteFacetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s that are associated with the facet will be deleted. Only development schema facets are allowed deletion.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.
     * @param {module:model/DeleteFacetRequest} deleteFacetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteFacetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteFacet(xAmzDataPartition, deleteFacetRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteFacetRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling deleteFacet");
      }
      // verify the required parameter 'deleteFacetRequest' is set
      if (deleteFacetRequest === undefined || deleteFacetRequest === null) {
        throw new Error("Missing the required parameter 'deleteFacetRequest' when calling deleteFacet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/facet/delete#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteObject operation.
     * @callback module:api/DefaultApi~deleteObjectCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an object and its associated attributes. Only objects with no children and no parents can be deleted.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.
     * @param {module:model/DeleteObjectRequest} deleteObjectRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteObject(xAmzDataPartition, deleteObjectRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteObjectRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling deleteObject");
      }
      // verify the required parameter 'deleteObjectRequest' is set
      if (deleteObjectRequest === undefined || deleteObjectRequest === null) {
        throw new Error("Missing the required parameter 'deleteObjectRequest' when calling deleteObject");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/delete#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSchema operation.
     * @callback module:api/DefaultApi~deleteSchemaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteSchemaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a given schema. Schemas in a development and published state can only be deleted. 
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) of the development schema. For more information, see <a>arns</a>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteSchemaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteSchemaResponse}
     */
    deleteSchema(xAmzDataPartition, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling deleteSchema");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteSchemaResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteTypedLinkFacet operation.
     * @callback module:api/DefaultApi~deleteTypedLinkFacetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a <a>TypedLinkFacet</a>. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.
     * @param {module:model/DeleteTypedLinkFacetRequest} deleteTypedLinkFacetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteTypedLinkFacetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteTypedLinkFacet(xAmzDataPartition, deleteTypedLinkFacetRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteTypedLinkFacetRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling deleteTypedLinkFacet");
      }
      // verify the required parameter 'deleteTypedLinkFacetRequest' is set
      if (deleteTypedLinkFacetRequest === undefined || deleteTypedLinkFacetRequest === null) {
        throw new Error("Missing the required parameter 'deleteTypedLinkFacetRequest' when calling deleteTypedLinkFacet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/facet/delete#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the detachFromIndex operation.
     * @callback module:api/DefaultApi~detachFromIndexCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DetachFromIndexResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detaches the specified object from the specified index.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) of the directory the index and object exist in.
     * @param {module:model/AttachToIndexRequest} attachToIndexRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~detachFromIndexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DetachFromIndexResponse}
     */
    detachFromIndex(xAmzDataPartition, attachToIndexRequest, opts, callback) {
      opts = opts || {};
      let postBody = attachToIndexRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling detachFromIndex");
      }
      // verify the required parameter 'attachToIndexRequest' is set
      if (attachToIndexRequest === undefined || attachToIndexRequest === null) {
        throw new Error("Missing the required parameter 'attachToIndexRequest' when calling detachFromIndex");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DetachFromIndexResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/index/detach#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the detachObject operation.
     * @callback module:api/DefaultApi~detachObjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DetachObjectResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.
     * @param {module:model/DetachObjectRequest} detachObjectRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~detachObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DetachObjectResponse}
     */
    detachObject(xAmzDataPartition, detachObjectRequest, opts, callback) {
      opts = opts || {};
      let postBody = detachObjectRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling detachObject");
      }
      // verify the required parameter 'detachObjectRequest' is set
      if (detachObjectRequest === undefined || detachObjectRequest === null) {
        throw new Error("Missing the required parameter 'detachObjectRequest' when calling detachObject");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DetachObjectResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/detach#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the detachPolicy operation.
     * @callback module:api/DefaultApi~detachPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detaches a policy from an object.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.
     * @param {module:model/AttachPolicyRequest} attachPolicyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~detachPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    detachPolicy(xAmzDataPartition, attachPolicyRequest, opts, callback) {
      opts = opts || {};
      let postBody = attachPolicyRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling detachPolicy");
      }
      // verify the required parameter 'attachPolicyRequest' is set
      if (attachPolicyRequest === undefined || attachPolicyRequest === null) {
        throw new Error("Missing the required parameter 'attachPolicyRequest' when calling detachPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/policy/detach#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the detachTypedLink operation.
     * @callback module:api/DefaultApi~detachTypedLinkCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detaches a typed link from a specified source and target object. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) of the directory where you want to detach the typed link.
     * @param {module:model/DetachTypedLinkRequest} detachTypedLinkRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~detachTypedLinkCallback} callback The callback function, accepting three arguments: error, data, response
     */
    detachTypedLink(xAmzDataPartition, detachTypedLinkRequest, opts, callback) {
      opts = opts || {};
      let postBody = detachTypedLinkRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling detachTypedLink");
      }
      // verify the required parameter 'detachTypedLinkRequest' is set
      if (detachTypedLinkRequest === undefined || detachTypedLinkRequest === null) {
        throw new Error("Missing the required parameter 'detachTypedLinkRequest' when calling detachTypedLink");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/detach#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disableDirectory operation.
     * @callback module:api/DefaultApi~disableDirectoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DisableDirectoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.
     * @param {String} xAmzDataPartition The ARN of the directory to disable.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disableDirectoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DisableDirectoryResponse}
     */
    disableDirectory(xAmzDataPartition, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling disableDirectory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DisableDirectoryResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/directory/disable#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enableDirectory operation.
     * @callback module:api/DefaultApi~enableDirectoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnableDirectoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.
     * @param {String} xAmzDataPartition The ARN of the directory to enable.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~enableDirectoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnableDirectoryResponse}
     */
    enableDirectory(xAmzDataPartition, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling enableDirectory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EnableDirectoryResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/directory/enable#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAppliedSchemaVersion operation.
     * @callback module:api/DefaultApi~getAppliedSchemaVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAppliedSchemaVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns current applied schema version ARN, including the minor version in use.
     * @param {module:model/GetAppliedSchemaVersionRequest} getAppliedSchemaVersionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAppliedSchemaVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAppliedSchemaVersionResponse}
     */
    getAppliedSchemaVersion(getAppliedSchemaVersionRequest, opts, callback) {
      opts = opts || {};
      let postBody = getAppliedSchemaVersionRequest;
      // verify the required parameter 'getAppliedSchemaVersionRequest' is set
      if (getAppliedSchemaVersionRequest === undefined || getAppliedSchemaVersionRequest === null) {
        throw new Error("Missing the required parameter 'getAppliedSchemaVersionRequest' when calling getAppliedSchemaVersion");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetAppliedSchemaVersionResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/getappliedschema', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDirectory operation.
     * @callback module:api/DefaultApi~getDirectoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetDirectoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves metadata about a directory.
     * @param {String} xAmzDataPartition The ARN of the directory.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getDirectoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetDirectoryResponse}
     */
    getDirectory(xAmzDataPartition, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling getDirectory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetDirectoryResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/directory/get#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFacet operation.
     * @callback module:api/DefaultApi~getFacetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFacetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets details of the <a>Facet</a>, such as facet name, attributes, <a>Rule</a>s, or <code>ObjectType</code>. You can call this on all kinds of schema facets -- published, development, or applied.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.
     * @param {module:model/GetFacetRequest} getFacetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getFacetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFacetResponse}
     */
    getFacet(xAmzDataPartition, getFacetRequest, opts, callback) {
      opts = opts || {};
      let postBody = getFacetRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling getFacet");
      }
      // verify the required parameter 'getFacetRequest' is set
      if (getFacetRequest === undefined || getFacetRequest === null) {
        throw new Error("Missing the required parameter 'getFacetRequest' when calling getFacet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetFacetResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/facet#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLinkAttributes operation.
     * @callback module:api/DefaultApi~getLinkAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetLinkAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves attributes that are associated with a typed link.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the Directory where the typed link resides. For more information, see <a>arns</a> or <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {module:model/GetLinkAttributesRequest} getLinkAttributesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getLinkAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetLinkAttributesResponse}
     */
    getLinkAttributes(xAmzDataPartition, getLinkAttributesRequest, opts, callback) {
      opts = opts || {};
      let postBody = getLinkAttributesRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling getLinkAttributes");
      }
      // verify the required parameter 'getLinkAttributesRequest' is set
      if (getLinkAttributesRequest === undefined || getLinkAttributesRequest === null) {
        throw new Error("Missing the required parameter 'getLinkAttributesRequest' when calling getLinkAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetLinkAttributesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/attributes/get#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getObjectAttributes operation.
     * @callback module:api/DefaultApi~getObjectAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetObjectAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves attributes within a facet that are associated with an object.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides.
     * @param {module:model/GetObjectAttributesRequest} getObjectAttributesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] The consistency level at which to retrieve the attributes on an object.
     * @param {module:api/DefaultApi~getObjectAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetObjectAttributesResponse}
     */
    getObjectAttributes(xAmzDataPartition, getObjectAttributesRequest, opts, callback) {
      opts = opts || {};
      let postBody = getObjectAttributesRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling getObjectAttributes");
      }
      // verify the required parameter 'getObjectAttributesRequest' is set
      if (getObjectAttributesRequest === undefined || getObjectAttributesRequest === null) {
        throw new Error("Missing the required parameter 'getObjectAttributesRequest' when calling getObjectAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetObjectAttributesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/attributes/get#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getObjectInformation operation.
     * @callback module:api/DefaultApi~getObjectInformationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetObjectInformationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves metadata about an object.
     * @param {String} xAmzDataPartition The ARN of the directory being retrieved.
     * @param {module:model/DeleteObjectRequest} deleteObjectRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] The consistency level at which to retrieve the object information.
     * @param {module:api/DefaultApi~getObjectInformationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetObjectInformationResponse}
     */
    getObjectInformation(xAmzDataPartition, deleteObjectRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteObjectRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling getObjectInformation");
      }
      // verify the required parameter 'deleteObjectRequest' is set
      if (deleteObjectRequest === undefined || deleteObjectRequest === null) {
        throw new Error("Missing the required parameter 'deleteObjectRequest' when calling getObjectInformation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetObjectInformationResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/information#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSchemaAsJson operation.
     * @callback module:api/DefaultApi~getSchemaAsJsonCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSchemaAsJsonResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a JSON representation of the schema. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_schemas.html#jsonformat\">JSON Schema Format</a> for more information.
     * @param {String} xAmzDataPartition The ARN of the schema to retrieve.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSchemaAsJsonCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSchemaAsJsonResponse}
     */
    getSchemaAsJson(xAmzDataPartition, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling getSchemaAsJson");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSchemaAsJsonResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/json#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTypedLinkFacetInformation operation.
     * @callback module:api/DefaultApi~getTypedLinkFacetInformationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTypedLinkFacetInformationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the identity attribute order for a specific <a>TypedLinkFacet</a>. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.
     * @param {module:model/DeleteTypedLinkFacetRequest} deleteTypedLinkFacetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getTypedLinkFacetInformationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTypedLinkFacetInformationResponse}
     */
    getTypedLinkFacetInformation(xAmzDataPartition, deleteTypedLinkFacetRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteTypedLinkFacetRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling getTypedLinkFacetInformation");
      }
      // verify the required parameter 'deleteTypedLinkFacetRequest' is set
      if (deleteTypedLinkFacetRequest === undefined || deleteTypedLinkFacetRequest === null) {
        throw new Error("Missing the required parameter 'deleteTypedLinkFacetRequest' when calling getTypedLinkFacetInformation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetTypedLinkFacetInformationResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/facet/get#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAppliedSchemaArns operation.
     * @callback module:api/DefaultApi~listAppliedSchemaArnsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAppliedSchemaArnsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists schema major versions applied to a directory. If <code>SchemaArn</code> is provided, lists the minor version.
     * @param {module:model/ListAppliedSchemaArnsRequest} listAppliedSchemaArnsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listAppliedSchemaArnsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAppliedSchemaArnsResponse}
     */
    listAppliedSchemaArns(listAppliedSchemaArnsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listAppliedSchemaArnsRequest;
      // verify the required parameter 'listAppliedSchemaArnsRequest' is set
      if (listAppliedSchemaArnsRequest === undefined || listAppliedSchemaArnsRequest === null) {
        throw new Error("Missing the required parameter 'listAppliedSchemaArnsRequest' when calling listAppliedSchemaArns");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListAppliedSchemaArnsResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/applied', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAttachedIndices operation.
     * @callback module:api/DefaultApi~listAttachedIndicesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAttachedIndicesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists indices attached to the specified object.
     * @param {String} xAmzDataPartition The ARN of the directory.
     * @param {module:model/ListAttachedIndicesRequest} listAttachedIndicesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] The consistency level to use for this operation.
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listAttachedIndicesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAttachedIndicesResponse}
     */
    listAttachedIndices(xAmzDataPartition, listAttachedIndicesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listAttachedIndicesRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listAttachedIndices");
      }
      // verify the required parameter 'listAttachedIndicesRequest' is set
      if (listAttachedIndicesRequest === undefined || listAttachedIndicesRequest === null) {
        throw new Error("Missing the required parameter 'listAttachedIndicesRequest' when calling listAttachedIndices");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListAttachedIndicesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/indices#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listDevelopmentSchemaArns operation.
     * @callback module:api/DefaultApi~listDevelopmentSchemaArnsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListDevelopmentSchemaArnsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves each Amazon Resource Name (ARN) of schemas in the development state.
     * @param {module:model/ListDevelopmentSchemaArnsRequest} listDevelopmentSchemaArnsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listDevelopmentSchemaArnsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListDevelopmentSchemaArnsResponse}
     */
    listDevelopmentSchemaArns(listDevelopmentSchemaArnsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listDevelopmentSchemaArnsRequest;
      // verify the required parameter 'listDevelopmentSchemaArnsRequest' is set
      if (listDevelopmentSchemaArnsRequest === undefined || listDevelopmentSchemaArnsRequest === null) {
        throw new Error("Missing the required parameter 'listDevelopmentSchemaArnsRequest' when calling listDevelopmentSchemaArns");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListDevelopmentSchemaArnsResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/development', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listDirectories operation.
     * @callback module:api/DefaultApi~listDirectoriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListDirectoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists directories created within an account.
     * @param {module:model/ListDirectoriesRequest} listDirectoriesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listDirectoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListDirectoriesResponse}
     */
    listDirectories(listDirectoriesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listDirectoriesRequest;
      // verify the required parameter 'listDirectoriesRequest' is set
      if (listDirectoriesRequest === undefined || listDirectoriesRequest === null) {
        throw new Error("Missing the required parameter 'listDirectoriesRequest' when calling listDirectories");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListDirectoriesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/directory/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listFacetAttributes operation.
     * @callback module:api/DefaultApi~listFacetAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListFacetAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves attributes attached to the facet.
     * @param {String} xAmzDataPartition The ARN of the schema where the facet resides.
     * @param {module:model/ListFacetAttributesRequest} listFacetAttributesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listFacetAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListFacetAttributesResponse}
     */
    listFacetAttributes(xAmzDataPartition, listFacetAttributesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listFacetAttributesRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listFacetAttributes");
      }
      // verify the required parameter 'listFacetAttributesRequest' is set
      if (listFacetAttributesRequest === undefined || listFacetAttributesRequest === null) {
        throw new Error("Missing the required parameter 'listFacetAttributesRequest' when calling listFacetAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListFacetAttributesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/facet/attributes#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listFacetNames operation.
     * @callback module:api/DefaultApi~listFacetNamesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListFacetNamesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the names of facets that exist in a schema.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) to retrieve facet names from.
     * @param {module:model/ListDevelopmentSchemaArnsRequest} listDevelopmentSchemaArnsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listFacetNamesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListFacetNamesResponse}
     */
    listFacetNames(xAmzDataPartition, listDevelopmentSchemaArnsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listDevelopmentSchemaArnsRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listFacetNames");
      }
      // verify the required parameter 'listDevelopmentSchemaArnsRequest' is set
      if (listDevelopmentSchemaArnsRequest === undefined || listDevelopmentSchemaArnsRequest === null) {
        throw new Error("Missing the required parameter 'listDevelopmentSchemaArnsRequest' when calling listFacetNames");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListFacetNamesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/facet/list#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listIncomingTypedLinks operation.
     * @callback module:api/DefaultApi~listIncomingTypedLinksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListIncomingTypedLinksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) of the directory where you want to list the typed links.
     * @param {module:model/ListIncomingTypedLinksRequest} listIncomingTypedLinksRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listIncomingTypedLinksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListIncomingTypedLinksResponse}
     */
    listIncomingTypedLinks(xAmzDataPartition, listIncomingTypedLinksRequest, opts, callback) {
      opts = opts || {};
      let postBody = listIncomingTypedLinksRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listIncomingTypedLinks");
      }
      // verify the required parameter 'listIncomingTypedLinksRequest' is set
      if (listIncomingTypedLinksRequest === undefined || listIncomingTypedLinksRequest === null) {
        throw new Error("Missing the required parameter 'listIncomingTypedLinksRequest' when calling listIncomingTypedLinks");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListIncomingTypedLinksResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/incoming#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listIndex operation.
     * @callback module:api/DefaultApi~listIndexCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListIndexResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists objects attached to the specified index.
     * @param {String} xAmzDataPartition The ARN of the directory that the index exists in.
     * @param {module:model/ListIndexRequest} listIndexRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] The consistency level to execute the request at.
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listIndexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListIndexResponse}
     */
    listIndex(xAmzDataPartition, listIndexRequest, opts, callback) {
      opts = opts || {};
      let postBody = listIndexRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listIndex");
      }
      // verify the required parameter 'listIndexRequest' is set
      if (listIndexRequest === undefined || listIndexRequest === null) {
        throw new Error("Missing the required parameter 'listIndexRequest' when calling listIndex");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListIndexResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/index/targets#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listObjectAttributes operation.
     * @callback module:api/DefaultApi~listObjectAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListObjectAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all attributes that are associated with an object. 
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.
     * @param {module:model/ListObjectAttributesRequest} listObjectAttributesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listObjectAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListObjectAttributesResponse}
     */
    listObjectAttributes(xAmzDataPartition, listObjectAttributesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listObjectAttributesRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listObjectAttributes");
      }
      // verify the required parameter 'listObjectAttributesRequest' is set
      if (listObjectAttributesRequest === undefined || listObjectAttributesRequest === null) {
        throw new Error("Missing the required parameter 'listObjectAttributesRequest' when calling listObjectAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListObjectAttributesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/attributes#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listObjectChildren operation.
     * @callback module:api/DefaultApi~listObjectChildrenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListObjectChildrenResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a paginated list of child objects that are associated with a given object.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.
     * @param {module:model/ListObjectChildrenRequest} listObjectChildrenRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listObjectChildrenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListObjectChildrenResponse}
     */
    listObjectChildren(xAmzDataPartition, listObjectChildrenRequest, opts, callback) {
      opts = opts || {};
      let postBody = listObjectChildrenRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listObjectChildren");
      }
      // verify the required parameter 'listObjectChildrenRequest' is set
      if (listObjectChildrenRequest === undefined || listObjectChildrenRequest === null) {
        throw new Error("Missing the required parameter 'listObjectChildrenRequest' when calling listObjectChildren");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListObjectChildrenResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/children#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listObjectParentPaths operation.
     * @callback module:api/DefaultApi~listObjectParentPathsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListObjectParentPathsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure\">Directory Structure</a>.</p> <p>Use this API to evaluate all parents for an object. The call returns all objects from the root of the directory up to the requested object. The API returns the number of paths based on user-defined <code>MaxResults</code>, in case there are multiple paths to the parent. The order of the paths and nodes returned is consistent among multiple API calls unless the objects are deleted or moved. Paths not leading to the directory root are ignored from the target object.</p>
     * @param {String} xAmzDataPartition The ARN of the directory to which the parent path applies.
     * @param {module:model/ListObjectChildrenRequest} listObjectChildrenRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listObjectParentPathsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListObjectParentPathsResponse}
     */
    listObjectParentPaths(xAmzDataPartition, listObjectChildrenRequest, opts, callback) {
      opts = opts || {};
      let postBody = listObjectChildrenRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listObjectParentPaths");
      }
      // verify the required parameter 'listObjectChildrenRequest' is set
      if (listObjectChildrenRequest === undefined || listObjectChildrenRequest === null) {
        throw new Error("Missing the required parameter 'listObjectChildrenRequest' when calling listObjectParentPaths");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListObjectParentPathsResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/parentpaths#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listObjectParents operation.
     * @callback module:api/DefaultApi~listObjectParentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListObjectParentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists parent objects that are associated with a given object in pagination fashion.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.
     * @param {module:model/ListObjectChildrenRequest} listObjectChildrenRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listObjectParentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListObjectParentsResponse}
     */
    listObjectParents(xAmzDataPartition, listObjectChildrenRequest, opts, callback) {
      opts = opts || {};
      let postBody = listObjectChildrenRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listObjectParents");
      }
      // verify the required parameter 'listObjectChildrenRequest' is set
      if (listObjectChildrenRequest === undefined || listObjectChildrenRequest === null) {
        throw new Error("Missing the required parameter 'listObjectChildrenRequest' when calling listObjectParents");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListObjectParentsResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/parent#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listObjectPolicies operation.
     * @callback module:api/DefaultApi~listObjectPoliciesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListObjectPoliciesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns policies attached to an object in pagination fashion.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.
     * @param {module:model/ListObjectChildrenRequest} listObjectChildrenRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listObjectPoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListObjectPoliciesResponse}
     */
    listObjectPolicies(xAmzDataPartition, listObjectChildrenRequest, opts, callback) {
      opts = opts || {};
      let postBody = listObjectChildrenRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listObjectPolicies");
      }
      // verify the required parameter 'listObjectChildrenRequest' is set
      if (listObjectChildrenRequest === undefined || listObjectChildrenRequest === null) {
        throw new Error("Missing the required parameter 'listObjectChildrenRequest' when calling listObjectPolicies");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListObjectPoliciesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/policy#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listOutgoingTypedLinks operation.
     * @callback module:api/DefaultApi~listOutgoingTypedLinksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListOutgoingTypedLinksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) of the directory where you want to list the typed links.
     * @param {module:model/ListIncomingTypedLinksRequest} listIncomingTypedLinksRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listOutgoingTypedLinksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListOutgoingTypedLinksResponse}
     */
    listOutgoingTypedLinks(xAmzDataPartition, listIncomingTypedLinksRequest, opts, callback) {
      opts = opts || {};
      let postBody = listIncomingTypedLinksRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listOutgoingTypedLinks");
      }
      // verify the required parameter 'listIncomingTypedLinksRequest' is set
      if (listIncomingTypedLinksRequest === undefined || listIncomingTypedLinksRequest === null) {
        throw new Error("Missing the required parameter 'listIncomingTypedLinksRequest' when calling listOutgoingTypedLinks");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListOutgoingTypedLinksResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/outgoing#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPolicyAttachments operation.
     * @callback module:api/DefaultApi~listPolicyAttachmentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPolicyAttachmentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.
     * @param {module:model/ListPolicyAttachmentsRequest} listPolicyAttachmentsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [xAmzConsistencyLevel] Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listPolicyAttachmentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPolicyAttachmentsResponse}
     */
    listPolicyAttachments(xAmzDataPartition, listPolicyAttachmentsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listPolicyAttachmentsRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listPolicyAttachments");
      }
      // verify the required parameter 'listPolicyAttachmentsRequest' is set
      if (listPolicyAttachmentsRequest === undefined || listPolicyAttachmentsRequest === null) {
        throw new Error("Missing the required parameter 'listPolicyAttachmentsRequest' when calling listPolicyAttachments");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition,
        'x-amz-consistency-level': opts['xAmzConsistencyLevel']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPolicyAttachmentsResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/policy/attachment#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPublishedSchemaArns operation.
     * @callback module:api/DefaultApi~listPublishedSchemaArnsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPublishedSchemaArnsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the major version families of each published schema. If a major version ARN is provided as <code>SchemaArn</code>, the minor version revisions in that family are listed instead.
     * @param {module:model/ListPublishedSchemaArnsRequest} listPublishedSchemaArnsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listPublishedSchemaArnsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPublishedSchemaArnsResponse}
     */
    listPublishedSchemaArns(listPublishedSchemaArnsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listPublishedSchemaArnsRequest;
      // verify the required parameter 'listPublishedSchemaArnsRequest' is set
      if (listPublishedSchemaArnsRequest === undefined || listPublishedSchemaArnsRequest === null) {
        throw new Error("Missing the required parameter 'listPublishedSchemaArnsRequest' when calling listPublishedSchemaArns");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPublishedSchemaArnsResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/published', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTagsForResource operation.
     * @callback module:api/DefaultApi~listTagsForResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTagsForResourceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.
     * @param {module:model/ListTagsForResourceRequest} listTagsForResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listTagsForResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTagsForResourceResponse}
     */
    listTagsForResource(listTagsForResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = listTagsForResourceRequest;
      // verify the required parameter 'listTagsForResourceRequest' is set
      if (listTagsForResourceRequest === undefined || listTagsForResourceRequest === null) {
        throw new Error("Missing the required parameter 'listTagsForResourceRequest' when calling listTagsForResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTagsForResourceResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/tags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTypedLinkFacetAttributes operation.
     * @callback module:api/DefaultApi~listTypedLinkFacetAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTypedLinkFacetAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a paginated list of all attribute definitions for a particular <a>TypedLinkFacet</a>. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.
     * @param {module:model/ListTypedLinkFacetAttributesRequest} listTypedLinkFacetAttributesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listTypedLinkFacetAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTypedLinkFacetAttributesResponse}
     */
    listTypedLinkFacetAttributes(xAmzDataPartition, listTypedLinkFacetAttributesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listTypedLinkFacetAttributesRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listTypedLinkFacetAttributes");
      }
      // verify the required parameter 'listTypedLinkFacetAttributesRequest' is set
      if (listTypedLinkFacetAttributesRequest === undefined || listTypedLinkFacetAttributesRequest === null) {
        throw new Error("Missing the required parameter 'listTypedLinkFacetAttributesRequest' when calling listTypedLinkFacetAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTypedLinkFacetAttributesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/facet/attributes#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTypedLinkFacetNames operation.
     * @callback module:api/DefaultApi~listTypedLinkFacetNamesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTypedLinkFacetNamesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a paginated list of <code>TypedLink</code> facet names for a particular schema. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.
     * @param {module:model/ListDevelopmentSchemaArnsRequest} listDevelopmentSchemaArnsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listTypedLinkFacetNamesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTypedLinkFacetNamesResponse}
     */
    listTypedLinkFacetNames(xAmzDataPartition, listDevelopmentSchemaArnsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listDevelopmentSchemaArnsRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling listTypedLinkFacetNames");
      }
      // verify the required parameter 'listDevelopmentSchemaArnsRequest' is set
      if (listDevelopmentSchemaArnsRequest === undefined || listDevelopmentSchemaArnsRequest === null) {
        throw new Error("Missing the required parameter 'listDevelopmentSchemaArnsRequest' when calling listTypedLinkFacetNames");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTypedLinkFacetNamesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/facet/list#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the lookupPolicy operation.
     * @callback module:api/DefaultApi~lookupPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LookupPolicyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don't have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don't lead to the root from the target object are ignored. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies\">Policies</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.
     * @param {module:model/LookupPolicyRequest} lookupPolicyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~lookupPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LookupPolicyResponse}
     */
    lookupPolicy(xAmzDataPartition, lookupPolicyRequest, opts, callback) {
      opts = opts || {};
      let postBody = lookupPolicyRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling lookupPolicy");
      }
      // verify the required parameter 'lookupPolicyRequest' is set
      if (lookupPolicyRequest === undefined || lookupPolicyRequest === null) {
        throw new Error("Missing the required parameter 'lookupPolicyRequest' when calling lookupPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LookupPolicyResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/policy/lookup#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the publishSchema operation.
     * @callback module:api/DefaultApi~publishSchemaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublishSchemaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Publishes a development schema with a major version and a recommended minor version.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the development schema. For more information, see <a>arns</a>.
     * @param {module:model/PublishSchemaRequest} publishSchemaRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~publishSchemaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublishSchemaResponse}
     */
    publishSchema(xAmzDataPartition, publishSchemaRequest, opts, callback) {
      opts = opts || {};
      let postBody = publishSchemaRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling publishSchema");
      }
      // verify the required parameter 'publishSchemaRequest' is set
      if (publishSchemaRequest === undefined || publishSchemaRequest === null) {
        throw new Error("Missing the required parameter 'publishSchemaRequest' when calling publishSchema");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PublishSchemaResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/publish#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putSchemaFromJson operation.
     * @callback module:api/DefaultApi~putSchemaFromJsonCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutSchemaFromJsonResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Allows a schema to be updated using JSON upload. Only available for development schemas. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_schemas.html#jsonformat\">JSON Schema Format</a> for more information.
     * @param {String} xAmzDataPartition The ARN of the schema to update.
     * @param {module:model/PutSchemaFromJsonRequest} putSchemaFromJsonRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putSchemaFromJsonCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutSchemaFromJsonResponse}
     */
    putSchemaFromJson(xAmzDataPartition, putSchemaFromJsonRequest, opts, callback) {
      opts = opts || {};
      let postBody = putSchemaFromJsonRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling putSchemaFromJson");
      }
      // verify the required parameter 'putSchemaFromJsonRequest' is set
      if (putSchemaFromJsonRequest === undefined || putSchemaFromJsonRequest === null) {
        throw new Error("Missing the required parameter 'putSchemaFromJsonRequest' when calling putSchemaFromJson");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutSchemaFromJsonResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/json#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the removeFacetFromObject operation.
     * @callback module:api/DefaultApi~removeFacetFromObjectCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the specified facet from the specified object.
     * @param {String} xAmzDataPartition The ARN of the directory in which the object resides.
     * @param {module:model/RemoveFacetFromObjectRequest} removeFacetFromObjectRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~removeFacetFromObjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    removeFacetFromObject(xAmzDataPartition, removeFacetFromObjectRequest, opts, callback) {
      opts = opts || {};
      let postBody = removeFacetFromObjectRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling removeFacetFromObject");
      }
      // verify the required parameter 'removeFacetFromObjectRequest' is set
      if (removeFacetFromObjectRequest === undefined || removeFacetFromObjectRequest === null) {
        throw new Error("Missing the required parameter 'removeFacetFromObjectRequest' when calling removeFacetFromObject");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/facets/delete#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagResource operation.
     * @callback module:api/DefaultApi~tagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * An API operation for adding tags to a resource.
     * @param {module:model/TagResourceRequest} tagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    tagResource(tagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagResourceRequest;
      // verify the required parameter 'tagResourceRequest' is set
      if (tagResourceRequest === undefined || tagResourceRequest === null) {
        throw new Error("Missing the required parameter 'tagResourceRequest' when calling tagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/tags/add', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagResource operation.
     * @callback module:api/DefaultApi~untagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * An API operation for removing tags from a resource.
     * @param {module:model/UntagResourceRequest} untagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    untagResource(untagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = untagResourceRequest;
      // verify the required parameter 'untagResourceRequest' is set
      if (untagResourceRequest === undefined || untagResourceRequest === null) {
        throw new Error("Missing the required parameter 'untagResourceRequest' when calling untagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/tags/remove', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateFacet operation.
     * @callback module:api/DefaultApi~updateFacetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Does the following:</p> <ol> <li> <p>Adds new <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Updates existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Deletes existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> </ol>
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.
     * @param {module:model/UpdateFacetRequest} updateFacetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateFacetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateFacet(xAmzDataPartition, updateFacetRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateFacetRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling updateFacet");
      }
      // verify the required parameter 'updateFacetRequest' is set
      if (updateFacetRequest === undefined || updateFacetRequest === null) {
        throw new Error("Missing the required parameter 'updateFacetRequest' when calling updateFacet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/facet#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateLinkAttributes operation.
     * @callback module:api/DefaultApi~updateLinkAttributesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a given typed link’s attributes. Attributes to be updated must not contribute to the typed link’s identity, as defined by its <code>IdentityAttributeOrder</code>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the Directory where the updated typed link resides. For more information, see <a>arns</a> or <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {module:model/UpdateLinkAttributesRequest} updateLinkAttributesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateLinkAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateLinkAttributes(xAmzDataPartition, updateLinkAttributesRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateLinkAttributesRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling updateLinkAttributes");
      }
      // verify the required parameter 'updateLinkAttributesRequest' is set
      if (updateLinkAttributesRequest === undefined || updateLinkAttributesRequest === null) {
        throw new Error("Missing the required parameter 'updateLinkAttributesRequest' when calling updateLinkAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/attributes/update#x-amz-data-partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateObjectAttributes operation.
     * @callback module:api/DefaultApi~updateObjectAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateObjectAttributesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a given object's attributes.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.
     * @param {module:model/UpdateObjectAttributesRequest} updateObjectAttributesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateObjectAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateObjectAttributesResponse}
     */
    updateObjectAttributes(xAmzDataPartition, updateObjectAttributesRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateObjectAttributesRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling updateObjectAttributes");
      }
      // verify the required parameter 'updateObjectAttributesRequest' is set
      if (updateObjectAttributesRequest === undefined || updateObjectAttributesRequest === null) {
        throw new Error("Missing the required parameter 'updateObjectAttributesRequest' when calling updateObjectAttributes");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateObjectAttributesResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/object/update#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSchema operation.
     * @callback module:api/DefaultApi~updateSchemaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateSchemaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the schema name with a new name. Only development schema names can be updated.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) of the development schema. For more information, see <a>arns</a>.
     * @param {module:model/UpdateSchemaRequest} updateSchemaRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateSchemaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateSchemaResponse}
     */
    updateSchema(xAmzDataPartition, updateSchemaRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateSchemaRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling updateSchema");
      }
      // verify the required parameter 'updateSchemaRequest' is set
      if (updateSchemaRequest === undefined || updateSchemaRequest === null) {
        throw new Error("Missing the required parameter 'updateSchemaRequest' when calling updateSchema");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateSchemaResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/update#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateTypedLinkFacet operation.
     * @callback module:api/DefaultApi~updateTypedLinkFacetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a <a>TypedLinkFacet</a>. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     * @param {String} xAmzDataPartition The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.
     * @param {module:model/UpdateTypedLinkFacetRequest} updateTypedLinkFacetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateTypedLinkFacetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateTypedLinkFacet(xAmzDataPartition, updateTypedLinkFacetRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateTypedLinkFacetRequest;
      // verify the required parameter 'xAmzDataPartition' is set
      if (xAmzDataPartition === undefined || xAmzDataPartition === null) {
        throw new Error("Missing the required parameter 'xAmzDataPartition' when calling updateTypedLinkFacet");
      }
      // verify the required parameter 'updateTypedLinkFacetRequest' is set
      if (updateTypedLinkFacetRequest === undefined || updateTypedLinkFacetRequest === null) {
        throw new Error("Missing the required parameter 'updateTypedLinkFacetRequest' when calling updateTypedLinkFacet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-data-partition': xAmzDataPartition
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/typedlink/facet#x-amz-data-partition', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the upgradeAppliedSchema operation.
     * @callback module:api/DefaultApi~upgradeAppliedSchemaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpgradeAppliedSchemaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upgrades a single directory in-place using the <code>PublishedSchemaArn</code> with schema updates found in <code>MinorVersion</code>. Backwards-compatible minor version upgrades are instantaneously available for readers on all objects in the directory. Note: This is a synchronous API call and upgrades only one schema on a given directory per call. To upgrade multiple directories from one schema, you would need to call this API on each directory.
     * @param {module:model/UpgradeAppliedSchemaRequest} upgradeAppliedSchemaRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~upgradeAppliedSchemaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpgradeAppliedSchemaResponse}
     */
    upgradeAppliedSchema(upgradeAppliedSchemaRequest, opts, callback) {
      opts = opts || {};
      let postBody = upgradeAppliedSchemaRequest;
      // verify the required parameter 'upgradeAppliedSchemaRequest' is set
      if (upgradeAppliedSchemaRequest === undefined || upgradeAppliedSchemaRequest === null) {
        throw new Error("Missing the required parameter 'upgradeAppliedSchemaRequest' when calling upgradeAppliedSchema");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpgradeAppliedSchemaResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/upgradeapplied', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the upgradePublishedSchema operation.
     * @callback module:api/DefaultApi~upgradePublishedSchemaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpgradePublishedSchemaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upgrades a published schema under a new minor version revision using the current contents of <code>DevelopmentSchemaArn</code>.
     * @param {module:model/UpgradePublishedSchemaRequest} upgradePublishedSchemaRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~upgradePublishedSchemaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpgradePublishedSchemaResponse}
     */
    upgradePublishedSchema(upgradePublishedSchemaRequest, opts, callback) {
      opts = opts || {};
      let postBody = upgradePublishedSchemaRequest;
      // verify the required parameter 'upgradePublishedSchemaRequest' is set
      if (upgradePublishedSchemaRequest === undefined || upgradePublishedSchemaRequest === null) {
        throw new Error("Missing the required parameter 'upgradePublishedSchemaRequest' when calling upgradePublishedSchema");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpgradePublishedSchemaResponse;
      return this.apiClient.callApi(
        '/amazonclouddirectory/2017-01-11/schema/upgradepublished', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
