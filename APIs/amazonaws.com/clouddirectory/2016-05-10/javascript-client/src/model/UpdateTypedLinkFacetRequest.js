/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TypedLinkFacetAttributeUpdate from './TypedLinkFacetAttributeUpdate';

/**
 * The UpdateTypedLinkFacetRequest model module.
 * @module model/UpdateTypedLinkFacetRequest
 * @version 2016-05-10
 */
class UpdateTypedLinkFacetRequest {
    /**
     * Constructs a new <code>UpdateTypedLinkFacetRequest</code>.
     * @alias module:model/UpdateTypedLinkFacetRequest
     * @param name {String} The unique name of the typed link facet.
     * @param attributeUpdates {Array.<module:model/TypedLinkFacetAttributeUpdate>} Attributes update structure.
     * @param identityAttributeOrder {Array.<String>} The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to a typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
     */
    constructor(name, attributeUpdates, identityAttributeOrder) { 
        
        UpdateTypedLinkFacetRequest.initialize(this, name, attributeUpdates, identityAttributeOrder);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, attributeUpdates, identityAttributeOrder) { 
        obj['Name'] = name;
        obj['AttributeUpdates'] = attributeUpdates;
        obj['IdentityAttributeOrder'] = identityAttributeOrder;
    }

    /**
     * Constructs a <code>UpdateTypedLinkFacetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateTypedLinkFacetRequest} obj Optional instance to populate.
     * @return {module:model/UpdateTypedLinkFacetRequest} The populated <code>UpdateTypedLinkFacetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateTypedLinkFacetRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('AttributeUpdates')) {
                obj['AttributeUpdates'] = ApiClient.convertToType(data['AttributeUpdates'], [TypedLinkFacetAttributeUpdate]);
            }
            if (data.hasOwnProperty('IdentityAttributeOrder')) {
                obj['IdentityAttributeOrder'] = ApiClient.convertToType(data['IdentityAttributeOrder'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateTypedLinkFacetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateTypedLinkFacetRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateTypedLinkFacetRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        if (data['AttributeUpdates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['AttributeUpdates'])) {
                throw new Error("Expected the field `AttributeUpdates` to be an array in the JSON data but got " + data['AttributeUpdates']);
            }
            // validate the optional field `AttributeUpdates` (array)
            for (const item of data['AttributeUpdates']) {
                TypedLinkFacetAttributeUpdate.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['IdentityAttributeOrder'])) {
            throw new Error("Expected the field `IdentityAttributeOrder` to be an array in the JSON data but got " + data['IdentityAttributeOrder']);
        }

        return true;
    }


}

UpdateTypedLinkFacetRequest.RequiredProperties = ["Name", "AttributeUpdates", "IdentityAttributeOrder"];

/**
 * The unique name of the typed link facet.
 * @member {String} Name
 */
UpdateTypedLinkFacetRequest.prototype['Name'] = undefined;

/**
 * Attributes update structure.
 * @member {Array.<module:model/TypedLinkFacetAttributeUpdate>} AttributeUpdates
 */
UpdateTypedLinkFacetRequest.prototype['AttributeUpdates'] = undefined;

/**
 * The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to a typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.
 * @member {Array.<String>} IdentityAttributeOrder
 */
UpdateTypedLinkFacetRequest.prototype['IdentityAttributeOrder'] = undefined;






export default UpdateTypedLinkFacetRequest;

