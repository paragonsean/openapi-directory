/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCloudDirectory);
  }
}(this, function(expect, AmazonCloudDirectory) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BatchReadSuccessfulResponse', function() {
    it('should create an instance of BatchReadSuccessfulResponse', function() {
      // uncomment below and update the code to test BatchReadSuccessfulResponse
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be.a(AmazonCloudDirectory.BatchReadSuccessfulResponse);
    });

    it('should have the property listObjectAttributes (base name: "ListObjectAttributes")', function() {
      // uncomment below and update the code to test the property listObjectAttributes
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property listObjectChildren (base name: "ListObjectChildren")', function() {
      // uncomment below and update the code to test the property listObjectChildren
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property getObjectInformation (base name: "GetObjectInformation")', function() {
      // uncomment below and update the code to test the property getObjectInformation
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property getObjectAttributes (base name: "GetObjectAttributes")', function() {
      // uncomment below and update the code to test the property getObjectAttributes
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property listAttachedIndices (base name: "ListAttachedIndices")', function() {
      // uncomment below and update the code to test the property listAttachedIndices
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property listObjectParentPaths (base name: "ListObjectParentPaths")', function() {
      // uncomment below and update the code to test the property listObjectParentPaths
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property listObjectPolicies (base name: "ListObjectPolicies")', function() {
      // uncomment below and update the code to test the property listObjectPolicies
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property listPolicyAttachments (base name: "ListPolicyAttachments")', function() {
      // uncomment below and update the code to test the property listPolicyAttachments
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property lookupPolicy (base name: "LookupPolicy")', function() {
      // uncomment below and update the code to test the property lookupPolicy
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property listIndex (base name: "ListIndex")', function() {
      // uncomment below and update the code to test the property listIndex
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property listOutgoingTypedLinks (base name: "ListOutgoingTypedLinks")', function() {
      // uncomment below and update the code to test the property listOutgoingTypedLinks
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property listIncomingTypedLinks (base name: "ListIncomingTypedLinks")', function() {
      // uncomment below and update the code to test the property listIncomingTypedLinks
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

    it('should have the property getLinkAttributes (base name: "GetLinkAttributes")', function() {
      // uncomment below and update the code to test the property getLinkAttributes
      //var instance = new AmazonCloudDirectory.BatchReadSuccessfulResponse();
      //expect(instance).to.be();
    });

  });

}));
