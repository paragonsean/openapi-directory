/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCloudDirectory);
  }
}(this, function(expect, AmazonCloudDirectory) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BatchWriteOperationResponse', function() {
    it('should create an instance of BatchWriteOperationResponse', function() {
      // uncomment below and update the code to test BatchWriteOperationResponse
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be.a(AmazonCloudDirectory.BatchWriteOperationResponse);
    });

    it('should have the property createObject (base name: "CreateObject")', function() {
      // uncomment below and update the code to test the property createObject
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property attachObject (base name: "AttachObject")', function() {
      // uncomment below and update the code to test the property attachObject
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property detachObject (base name: "DetachObject")', function() {
      // uncomment below and update the code to test the property detachObject
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property updateObjectAttributes (base name: "UpdateObjectAttributes")', function() {
      // uncomment below and update the code to test the property updateObjectAttributes
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property deleteObject (base name: "DeleteObject")', function() {
      // uncomment below and update the code to test the property deleteObject
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property addFacetToObject (base name: "AddFacetToObject")', function() {
      // uncomment below and update the code to test the property addFacetToObject
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property removeFacetFromObject (base name: "RemoveFacetFromObject")', function() {
      // uncomment below and update the code to test the property removeFacetFromObject
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property attachPolicy (base name: "AttachPolicy")', function() {
      // uncomment below and update the code to test the property attachPolicy
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property detachPolicy (base name: "DetachPolicy")', function() {
      // uncomment below and update the code to test the property detachPolicy
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property createIndex (base name: "CreateIndex")', function() {
      // uncomment below and update the code to test the property createIndex
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property attachToIndex (base name: "AttachToIndex")', function() {
      // uncomment below and update the code to test the property attachToIndex
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property detachFromIndex (base name: "DetachFromIndex")', function() {
      // uncomment below and update the code to test the property detachFromIndex
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property attachTypedLink (base name: "AttachTypedLink")', function() {
      // uncomment below and update the code to test the property attachTypedLink
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property detachTypedLink (base name: "DetachTypedLink")', function() {
      // uncomment below and update the code to test the property detachTypedLink
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

    it('should have the property updateLinkAttributes (base name: "UpdateLinkAttributes")', function() {
      // uncomment below and update the code to test the property updateLinkAttributes
      //var instance = new AmazonCloudDirectory.BatchWriteOperationResponse();
      //expect(instance).to.be();
    });

  });

}));
