/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCloudDirectory);
  }
}(this, function(expect, AmazonCloudDirectory) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCloudDirectory.AttributeKeyAndValueValue();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AttributeKeyAndValueValue', function() {
    it('should create an instance of AttributeKeyAndValueValue', function() {
      // uncomment below and update the code to test AttributeKeyAndValueValue
      //var instance = new AmazonCloudDirectory.AttributeKeyAndValueValue();
      //expect(instance).to.be.a(AmazonCloudDirectory.AttributeKeyAndValueValue);
    });

    it('should have the property stringValue (base name: "StringValue")', function() {
      // uncomment below and update the code to test the property stringValue
      //var instance = new AmazonCloudDirectory.AttributeKeyAndValueValue();
      //expect(instance).to.be();
    });

    it('should have the property binaryValue (base name: "BinaryValue")', function() {
      // uncomment below and update the code to test the property binaryValue
      //var instance = new AmazonCloudDirectory.AttributeKeyAndValueValue();
      //expect(instance).to.be();
    });

    it('should have the property booleanValue (base name: "BooleanValue")', function() {
      // uncomment below and update the code to test the property booleanValue
      //var instance = new AmazonCloudDirectory.AttributeKeyAndValueValue();
      //expect(instance).to.be();
    });

    it('should have the property numberValue (base name: "NumberValue")', function() {
      // uncomment below and update the code to test the property numberValue
      //var instance = new AmazonCloudDirectory.AttributeKeyAndValueValue();
      //expect(instance).to.be();
    });

    it('should have the property datetimeValue (base name: "DatetimeValue")', function() {
      // uncomment below and update the code to test the property datetimeValue
      //var instance = new AmazonCloudDirectory.AttributeKeyAndValueValue();
      //expect(instance).to.be();
    });

  });

}));
