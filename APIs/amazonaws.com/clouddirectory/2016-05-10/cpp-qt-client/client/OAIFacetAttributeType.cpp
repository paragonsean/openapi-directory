/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFacetAttributeType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFacetAttributeType::OAIFacetAttributeType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFacetAttributeType::OAIFacetAttributeType() {
    this->initializeModel();
}

OAIFacetAttributeType::~OAIFacetAttributeType() {}

void OAIFacetAttributeType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFacetAttributeType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFacetAttributeType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("STRING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFacetAttributeType::STRING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BINARY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFacetAttributeType::BINARY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BOOLEAN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFacetAttributeType::BOOLEAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NUMBER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFacetAttributeType::NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DATETIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFacetAttributeType::DATETIME;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFacetAttributeType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFacetAttributeType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFacetAttributeType::STRING:
            val = "STRING";
            break;
        case eOAIFacetAttributeType::BINARY:
            val = "BINARY";
            break;
        case eOAIFacetAttributeType::BOOLEAN:
            val = "BOOLEAN";
            break;
        case eOAIFacetAttributeType::NUMBER:
            val = "NUMBER";
            break;
        case eOAIFacetAttributeType::DATETIME:
            val = "DATETIME";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFacetAttributeType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFacetAttributeType::eOAIFacetAttributeType OAIFacetAttributeType::getValue() const {
    return m_value;
}

void OAIFacetAttributeType::setValue(const OAIFacetAttributeType::eOAIFacetAttributeType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFacetAttributeType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFacetAttributeType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
