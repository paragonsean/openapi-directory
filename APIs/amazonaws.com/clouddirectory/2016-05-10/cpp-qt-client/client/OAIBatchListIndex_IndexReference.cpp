/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchListIndex_IndexReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchListIndex_IndexReference::OAIBatchListIndex_IndexReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchListIndex_IndexReference::OAIBatchListIndex_IndexReference() {
    this->initializeModel();
}

OAIBatchListIndex_IndexReference::~OAIBatchListIndex_IndexReference() {}

void OAIBatchListIndex_IndexReference::initializeModel() {

    m_selector_isSet = false;
    m_selector_isValid = false;
}

void OAIBatchListIndex_IndexReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchListIndex_IndexReference::fromJsonObject(QJsonObject json) {

    m_selector_isValid = ::OpenAPI::fromJsonValue(m_selector, json[QString("Selector")]);
    m_selector_isSet = !json[QString("Selector")].isNull() && m_selector_isValid;
}

QString OAIBatchListIndex_IndexReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchListIndex_IndexReference::asJsonObject() const {
    QJsonObject obj;
    if (m_selector_isSet) {
        obj.insert(QString("Selector"), ::OpenAPI::toJsonValue(m_selector));
    }
    return obj;
}

QString OAIBatchListIndex_IndexReference::getSelector() const {
    return m_selector;
}
void OAIBatchListIndex_IndexReference::setSelector(const QString &selector) {
    m_selector = selector;
    m_selector_isSet = true;
}

bool OAIBatchListIndex_IndexReference::is_selector_Set() const{
    return m_selector_isSet;
}

bool OAIBatchListIndex_IndexReference::is_selector_Valid() const{
    return m_selector_isValid;
}

bool OAIBatchListIndex_IndexReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_selector_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchListIndex_IndexReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
