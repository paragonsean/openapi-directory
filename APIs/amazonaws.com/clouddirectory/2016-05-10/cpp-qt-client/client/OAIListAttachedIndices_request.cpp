/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAttachedIndices_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAttachedIndices_request::OAIListAttachedIndices_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAttachedIndices_request::OAIListAttachedIndices_request() {
    this->initializeModel();
}

OAIListAttachedIndices_request::~OAIListAttachedIndices_request() {}

void OAIListAttachedIndices_request::initializeModel() {

    m_target_reference_isSet = false;
    m_target_reference_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;
}

void OAIListAttachedIndices_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAttachedIndices_request::fromJsonObject(QJsonObject json) {

    m_target_reference_isValid = ::OpenAPI::fromJsonValue(m_target_reference, json[QString("TargetReference")]);
    m_target_reference_isSet = !json[QString("TargetReference")].isNull() && m_target_reference_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("MaxResults")]);
    m_max_results_isSet = !json[QString("MaxResults")].isNull() && m_max_results_isValid;
}

QString OAIListAttachedIndices_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAttachedIndices_request::asJsonObject() const {
    QJsonObject obj;
    if (m_target_reference.isSet()) {
        obj.insert(QString("TargetReference"), ::OpenAPI::toJsonValue(m_target_reference));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("MaxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    return obj;
}

OAIAddFacetToObject_request_ObjectReference OAIListAttachedIndices_request::getTargetReference() const {
    return m_target_reference;
}
void OAIListAttachedIndices_request::setTargetReference(const OAIAddFacetToObject_request_ObjectReference &target_reference) {
    m_target_reference = target_reference;
    m_target_reference_isSet = true;
}

bool OAIListAttachedIndices_request::is_target_reference_Set() const{
    return m_target_reference_isSet;
}

bool OAIListAttachedIndices_request::is_target_reference_Valid() const{
    return m_target_reference_isValid;
}

QString OAIListAttachedIndices_request::getNextToken() const {
    return m_next_token;
}
void OAIListAttachedIndices_request::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAttachedIndices_request::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAttachedIndices_request::is_next_token_Valid() const{
    return m_next_token_isValid;
}

qint32 OAIListAttachedIndices_request::getMaxResults() const {
    return m_max_results;
}
void OAIListAttachedIndices_request::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIListAttachedIndices_request::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIListAttachedIndices_request::is_max_results_Valid() const{
    return m_max_results_isValid;
}

bool OAIListAttachedIndices_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAttachedIndices_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_reference_isValid && true;
}

} // namespace OpenAPI
