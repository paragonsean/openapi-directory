/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetLinkAttributes_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetLinkAttributes_request::OAIGetLinkAttributes_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetLinkAttributes_request::OAIGetLinkAttributes_request() {
    this->initializeModel();
}

OAIGetLinkAttributes_request::~OAIGetLinkAttributes_request() {}

void OAIGetLinkAttributes_request::initializeModel() {

    m_typed_link_specifier_isSet = false;
    m_typed_link_specifier_isValid = false;

    m_attribute_names_isSet = false;
    m_attribute_names_isValid = false;

    m_consistency_level_isSet = false;
    m_consistency_level_isValid = false;
}

void OAIGetLinkAttributes_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetLinkAttributes_request::fromJsonObject(QJsonObject json) {

    m_typed_link_specifier_isValid = ::OpenAPI::fromJsonValue(m_typed_link_specifier, json[QString("TypedLinkSpecifier")]);
    m_typed_link_specifier_isSet = !json[QString("TypedLinkSpecifier")].isNull() && m_typed_link_specifier_isValid;

    m_attribute_names_isValid = ::OpenAPI::fromJsonValue(m_attribute_names, json[QString("AttributeNames")]);
    m_attribute_names_isSet = !json[QString("AttributeNames")].isNull() && m_attribute_names_isValid;

    m_consistency_level_isValid = ::OpenAPI::fromJsonValue(m_consistency_level, json[QString("ConsistencyLevel")]);
    m_consistency_level_isSet = !json[QString("ConsistencyLevel")].isNull() && m_consistency_level_isValid;
}

QString OAIGetLinkAttributes_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetLinkAttributes_request::asJsonObject() const {
    QJsonObject obj;
    if (m_typed_link_specifier.isSet()) {
        obj.insert(QString("TypedLinkSpecifier"), ::OpenAPI::toJsonValue(m_typed_link_specifier));
    }
    if (m_attribute_names.size() > 0) {
        obj.insert(QString("AttributeNames"), ::OpenAPI::toJsonValue(m_attribute_names));
    }
    if (m_consistency_level_isSet) {
        obj.insert(QString("ConsistencyLevel"), ::OpenAPI::toJsonValue(m_consistency_level));
    }
    return obj;
}

OAIDetachTypedLink_request_TypedLinkSpecifier OAIGetLinkAttributes_request::getTypedLinkSpecifier() const {
    return m_typed_link_specifier;
}
void OAIGetLinkAttributes_request::setTypedLinkSpecifier(const OAIDetachTypedLink_request_TypedLinkSpecifier &typed_link_specifier) {
    m_typed_link_specifier = typed_link_specifier;
    m_typed_link_specifier_isSet = true;
}

bool OAIGetLinkAttributes_request::is_typed_link_specifier_Set() const{
    return m_typed_link_specifier_isSet;
}

bool OAIGetLinkAttributes_request::is_typed_link_specifier_Valid() const{
    return m_typed_link_specifier_isValid;
}

QList<QString> OAIGetLinkAttributes_request::getAttributeNames() const {
    return m_attribute_names;
}
void OAIGetLinkAttributes_request::setAttributeNames(const QList<QString> &attribute_names) {
    m_attribute_names = attribute_names;
    m_attribute_names_isSet = true;
}

bool OAIGetLinkAttributes_request::is_attribute_names_Set() const{
    return m_attribute_names_isSet;
}

bool OAIGetLinkAttributes_request::is_attribute_names_Valid() const{
    return m_attribute_names_isValid;
}

QString OAIGetLinkAttributes_request::getConsistencyLevel() const {
    return m_consistency_level;
}
void OAIGetLinkAttributes_request::setConsistencyLevel(const QString &consistency_level) {
    m_consistency_level = consistency_level;
    m_consistency_level_isSet = true;
}

bool OAIGetLinkAttributes_request::is_consistency_level_Set() const{
    return m_consistency_level_isSet;
}

bool OAIGetLinkAttributes_request::is_consistency_level_Valid() const{
    return m_consistency_level_isValid;
}

bool OAIGetLinkAttributes_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_typed_link_specifier.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_consistency_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetLinkAttributes_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_typed_link_specifier_isValid && m_attribute_names_isValid && true;
}

} // namespace OpenAPI
