/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDirectoryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDirectoryResponse::OAICreateDirectoryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDirectoryResponse::OAICreateDirectoryResponse() {
    this->initializeModel();
}

OAICreateDirectoryResponse::~OAICreateDirectoryResponse() {}

void OAICreateDirectoryResponse::initializeModel() {

    m_directory_arn_isSet = false;
    m_directory_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_object_identifier_isSet = false;
    m_object_identifier_isValid = false;

    m_applied_schema_arn_isSet = false;
    m_applied_schema_arn_isValid = false;
}

void OAICreateDirectoryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDirectoryResponse::fromJsonObject(QJsonObject json) {

    m_directory_arn_isValid = ::OpenAPI::fromJsonValue(m_directory_arn, json[QString("DirectoryArn")]);
    m_directory_arn_isSet = !json[QString("DirectoryArn")].isNull() && m_directory_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_object_identifier_isValid = ::OpenAPI::fromJsonValue(m_object_identifier, json[QString("ObjectIdentifier")]);
    m_object_identifier_isSet = !json[QString("ObjectIdentifier")].isNull() && m_object_identifier_isValid;

    m_applied_schema_arn_isValid = ::OpenAPI::fromJsonValue(m_applied_schema_arn, json[QString("AppliedSchemaArn")]);
    m_applied_schema_arn_isSet = !json[QString("AppliedSchemaArn")].isNull() && m_applied_schema_arn_isValid;
}

QString OAICreateDirectoryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDirectoryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_directory_arn_isSet) {
        obj.insert(QString("DirectoryArn"), ::OpenAPI::toJsonValue(m_directory_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_object_identifier_isSet) {
        obj.insert(QString("ObjectIdentifier"), ::OpenAPI::toJsonValue(m_object_identifier));
    }
    if (m_applied_schema_arn_isSet) {
        obj.insert(QString("AppliedSchemaArn"), ::OpenAPI::toJsonValue(m_applied_schema_arn));
    }
    return obj;
}

QString OAICreateDirectoryResponse::getDirectoryArn() const {
    return m_directory_arn;
}
void OAICreateDirectoryResponse::setDirectoryArn(const QString &directory_arn) {
    m_directory_arn = directory_arn;
    m_directory_arn_isSet = true;
}

bool OAICreateDirectoryResponse::is_directory_arn_Set() const{
    return m_directory_arn_isSet;
}

bool OAICreateDirectoryResponse::is_directory_arn_Valid() const{
    return m_directory_arn_isValid;
}

QString OAICreateDirectoryResponse::getName() const {
    return m_name;
}
void OAICreateDirectoryResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateDirectoryResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateDirectoryResponse::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateDirectoryResponse::getObjectIdentifier() const {
    return m_object_identifier;
}
void OAICreateDirectoryResponse::setObjectIdentifier(const QString &object_identifier) {
    m_object_identifier = object_identifier;
    m_object_identifier_isSet = true;
}

bool OAICreateDirectoryResponse::is_object_identifier_Set() const{
    return m_object_identifier_isSet;
}

bool OAICreateDirectoryResponse::is_object_identifier_Valid() const{
    return m_object_identifier_isValid;
}

QString OAICreateDirectoryResponse::getAppliedSchemaArn() const {
    return m_applied_schema_arn;
}
void OAICreateDirectoryResponse::setAppliedSchemaArn(const QString &applied_schema_arn) {
    m_applied_schema_arn = applied_schema_arn;
    m_applied_schema_arn_isSet = true;
}

bool OAICreateDirectoryResponse::is_applied_schema_arn_Set() const{
    return m_applied_schema_arn_isSet;
}

bool OAICreateDirectoryResponse::is_applied_schema_arn_Valid() const{
    return m_applied_schema_arn_isValid;
}

bool OAICreateDirectoryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_directory_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_applied_schema_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDirectoryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_directory_arn_isValid && m_name_isValid && m_object_identifier_isValid && m_applied_schema_arn_isValid && true;
}

} // namespace OpenAPI
