/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListObjectParentsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListObjectParentsResponse::OAIListObjectParentsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListObjectParentsResponse::OAIListObjectParentsResponse() {
    this->initializeModel();
}

OAIListObjectParentsResponse::~OAIListObjectParentsResponse() {}

void OAIListObjectParentsResponse::initializeModel() {

    m_parents_isSet = false;
    m_parents_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListObjectParentsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListObjectParentsResponse::fromJsonObject(QJsonObject json) {

    m_parents_isValid = ::OpenAPI::fromJsonValue(m_parents, json[QString("Parents")]);
    m_parents_isSet = !json[QString("Parents")].isNull() && m_parents_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListObjectParentsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListObjectParentsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_parents.isSet()) {
        obj.insert(QString("Parents"), ::OpenAPI::toJsonValue(m_parents));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QMap OAIListObjectParentsResponse::getParents() const {
    return m_parents;
}
void OAIListObjectParentsResponse::setParents(const QMap &parents) {
    m_parents = parents;
    m_parents_isSet = true;
}

bool OAIListObjectParentsResponse::is_parents_Set() const{
    return m_parents_isSet;
}

bool OAIListObjectParentsResponse::is_parents_Valid() const{
    return m_parents_isValid;
}

QString OAIListObjectParentsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListObjectParentsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListObjectParentsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListObjectParentsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListObjectParentsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parents.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListObjectParentsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
