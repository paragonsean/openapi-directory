/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIndexAttachment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIndexAttachment::OAIIndexAttachment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIndexAttachment::OAIIndexAttachment() {
    this->initializeModel();
}

OAIIndexAttachment::~OAIIndexAttachment() {}

void OAIIndexAttachment::initializeModel() {

    m_indexed_attributes_isSet = false;
    m_indexed_attributes_isValid = false;

    m_object_identifier_isSet = false;
    m_object_identifier_isValid = false;
}

void OAIIndexAttachment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIndexAttachment::fromJsonObject(QJsonObject json) {

    m_indexed_attributes_isValid = ::OpenAPI::fromJsonValue(m_indexed_attributes, json[QString("IndexedAttributes")]);
    m_indexed_attributes_isSet = !json[QString("IndexedAttributes")].isNull() && m_indexed_attributes_isValid;

    m_object_identifier_isValid = ::OpenAPI::fromJsonValue(m_object_identifier, json[QString("ObjectIdentifier")]);
    m_object_identifier_isSet = !json[QString("ObjectIdentifier")].isNull() && m_object_identifier_isValid;
}

QString OAIIndexAttachment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIndexAttachment::asJsonObject() const {
    QJsonObject obj;
    if (m_indexed_attributes.isSet()) {
        obj.insert(QString("IndexedAttributes"), ::OpenAPI::toJsonValue(m_indexed_attributes));
    }
    if (m_object_identifier_isSet) {
        obj.insert(QString("ObjectIdentifier"), ::OpenAPI::toJsonValue(m_object_identifier));
    }
    return obj;
}

QList OAIIndexAttachment::getIndexedAttributes() const {
    return m_indexed_attributes;
}
void OAIIndexAttachment::setIndexedAttributes(const QList &indexed_attributes) {
    m_indexed_attributes = indexed_attributes;
    m_indexed_attributes_isSet = true;
}

bool OAIIndexAttachment::is_indexed_attributes_Set() const{
    return m_indexed_attributes_isSet;
}

bool OAIIndexAttachment::is_indexed_attributes_Valid() const{
    return m_indexed_attributes_isValid;
}

QString OAIIndexAttachment::getObjectIdentifier() const {
    return m_object_identifier;
}
void OAIIndexAttachment::setObjectIdentifier(const QString &object_identifier) {
    m_object_identifier = object_identifier;
    m_object_identifier_isSet = true;
}

bool OAIIndexAttachment::is_object_identifier_Set() const{
    return m_object_identifier_isSet;
}

bool OAIIndexAttachment::is_object_identifier_Valid() const{
    return m_object_identifier_isValid;
}

bool OAIIndexAttachment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_indexed_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIndexAttachment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
