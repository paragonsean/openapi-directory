/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchReadSuccessfulResponse_ListObjectChildren.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchReadSuccessfulResponse_ListObjectChildren::OAIBatchReadSuccessfulResponse_ListObjectChildren(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchReadSuccessfulResponse_ListObjectChildren::OAIBatchReadSuccessfulResponse_ListObjectChildren() {
    this->initializeModel();
}

OAIBatchReadSuccessfulResponse_ListObjectChildren::~OAIBatchReadSuccessfulResponse_ListObjectChildren() {}

void OAIBatchReadSuccessfulResponse_ListObjectChildren::initializeModel() {

    m_children_isSet = false;
    m_children_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIBatchReadSuccessfulResponse_ListObjectChildren::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchReadSuccessfulResponse_ListObjectChildren::fromJsonObject(QJsonObject json) {

    m_children_isValid = ::OpenAPI::fromJsonValue(m_children, json[QString("Children")]);
    m_children_isSet = !json[QString("Children")].isNull() && m_children_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIBatchReadSuccessfulResponse_ListObjectChildren::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchReadSuccessfulResponse_ListObjectChildren::asJsonObject() const {
    QJsonObject obj;
    if (m_children.isSet()) {
        obj.insert(QString("Children"), ::OpenAPI::toJsonValue(m_children));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QMap OAIBatchReadSuccessfulResponse_ListObjectChildren::getChildren() const {
    return m_children;
}
void OAIBatchReadSuccessfulResponse_ListObjectChildren::setChildren(const QMap &children) {
    m_children = children;
    m_children_isSet = true;
}

bool OAIBatchReadSuccessfulResponse_ListObjectChildren::is_children_Set() const{
    return m_children_isSet;
}

bool OAIBatchReadSuccessfulResponse_ListObjectChildren::is_children_Valid() const{
    return m_children_isValid;
}

QString OAIBatchReadSuccessfulResponse_ListObjectChildren::getNextToken() const {
    return m_next_token;
}
void OAIBatchReadSuccessfulResponse_ListObjectChildren::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIBatchReadSuccessfulResponse_ListObjectChildren::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIBatchReadSuccessfulResponse_ListObjectChildren::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIBatchReadSuccessfulResponse_ListObjectChildren::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_children.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchReadSuccessfulResponse_ListObjectChildren::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
