/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchReadOperation_GetLinkAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchReadOperation_GetLinkAttributes::OAIBatchReadOperation_GetLinkAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchReadOperation_GetLinkAttributes::OAIBatchReadOperation_GetLinkAttributes() {
    this->initializeModel();
}

OAIBatchReadOperation_GetLinkAttributes::~OAIBatchReadOperation_GetLinkAttributes() {}

void OAIBatchReadOperation_GetLinkAttributes::initializeModel() {

    m_typed_link_specifier_isSet = false;
    m_typed_link_specifier_isValid = false;

    m_attribute_names_isSet = false;
    m_attribute_names_isValid = false;
}

void OAIBatchReadOperation_GetLinkAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchReadOperation_GetLinkAttributes::fromJsonObject(QJsonObject json) {

    m_typed_link_specifier_isValid = ::OpenAPI::fromJsonValue(m_typed_link_specifier, json[QString("TypedLinkSpecifier")]);
    m_typed_link_specifier_isSet = !json[QString("TypedLinkSpecifier")].isNull() && m_typed_link_specifier_isValid;

    m_attribute_names_isValid = ::OpenAPI::fromJsonValue(m_attribute_names, json[QString("AttributeNames")]);
    m_attribute_names_isSet = !json[QString("AttributeNames")].isNull() && m_attribute_names_isValid;
}

QString OAIBatchReadOperation_GetLinkAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchReadOperation_GetLinkAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_typed_link_specifier.isSet()) {
        obj.insert(QString("TypedLinkSpecifier"), ::OpenAPI::toJsonValue(m_typed_link_specifier));
    }
    if (m_attribute_names.isSet()) {
        obj.insert(QString("AttributeNames"), ::OpenAPI::toJsonValue(m_attribute_names));
    }
    return obj;
}

OAIBatchGetLinkAttributes_TypedLinkSpecifier OAIBatchReadOperation_GetLinkAttributes::getTypedLinkSpecifier() const {
    return m_typed_link_specifier;
}
void OAIBatchReadOperation_GetLinkAttributes::setTypedLinkSpecifier(const OAIBatchGetLinkAttributes_TypedLinkSpecifier &typed_link_specifier) {
    m_typed_link_specifier = typed_link_specifier;
    m_typed_link_specifier_isSet = true;
}

bool OAIBatchReadOperation_GetLinkAttributes::is_typed_link_specifier_Set() const{
    return m_typed_link_specifier_isSet;
}

bool OAIBatchReadOperation_GetLinkAttributes::is_typed_link_specifier_Valid() const{
    return m_typed_link_specifier_isValid;
}

QList OAIBatchReadOperation_GetLinkAttributes::getAttributeNames() const {
    return m_attribute_names;
}
void OAIBatchReadOperation_GetLinkAttributes::setAttributeNames(const QList &attribute_names) {
    m_attribute_names = attribute_names;
    m_attribute_names_isSet = true;
}

bool OAIBatchReadOperation_GetLinkAttributes::is_attribute_names_Set() const{
    return m_attribute_names_isSet;
}

bool OAIBatchReadOperation_GetLinkAttributes::is_attribute_names_Valid() const{
    return m_attribute_names_isValid;
}

bool OAIBatchReadOperation_GetLinkAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_typed_link_specifier.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_names.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchReadOperation_GetLinkAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_typed_link_specifier_isValid && m_attribute_names_isValid && true;
}

} // namespace OpenAPI
