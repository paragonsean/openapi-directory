/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchWriteOperationResponse_UpdateObjectAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchWriteOperationResponse_UpdateObjectAttributes::OAIBatchWriteOperationResponse_UpdateObjectAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchWriteOperationResponse_UpdateObjectAttributes::OAIBatchWriteOperationResponse_UpdateObjectAttributes() {
    this->initializeModel();
}

OAIBatchWriteOperationResponse_UpdateObjectAttributes::~OAIBatchWriteOperationResponse_UpdateObjectAttributes() {}

void OAIBatchWriteOperationResponse_UpdateObjectAttributes::initializeModel() {

    m_object_identifier_isSet = false;
    m_object_identifier_isValid = false;
}

void OAIBatchWriteOperationResponse_UpdateObjectAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchWriteOperationResponse_UpdateObjectAttributes::fromJsonObject(QJsonObject json) {

    m_object_identifier_isValid = ::OpenAPI::fromJsonValue(m_object_identifier, json[QString("ObjectIdentifier")]);
    m_object_identifier_isSet = !json[QString("ObjectIdentifier")].isNull() && m_object_identifier_isValid;
}

QString OAIBatchWriteOperationResponse_UpdateObjectAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchWriteOperationResponse_UpdateObjectAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_object_identifier_isSet) {
        obj.insert(QString("ObjectIdentifier"), ::OpenAPI::toJsonValue(m_object_identifier));
    }
    return obj;
}

QString OAIBatchWriteOperationResponse_UpdateObjectAttributes::getObjectIdentifier() const {
    return m_object_identifier;
}
void OAIBatchWriteOperationResponse_UpdateObjectAttributes::setObjectIdentifier(const QString &object_identifier) {
    m_object_identifier = object_identifier;
    m_object_identifier_isSet = true;
}

bool OAIBatchWriteOperationResponse_UpdateObjectAttributes::is_object_identifier_Set() const{
    return m_object_identifier_isSet;
}

bool OAIBatchWriteOperationResponse_UpdateObjectAttributes::is_object_identifier_Valid() const{
    return m_object_identifier_isValid;
}

bool OAIBatchWriteOperationResponse_UpdateObjectAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchWriteOperationResponse_UpdateObjectAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
