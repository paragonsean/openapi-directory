/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchListOutgoingTypedLinksResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchListOutgoingTypedLinksResponse::OAIBatchListOutgoingTypedLinksResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchListOutgoingTypedLinksResponse::OAIBatchListOutgoingTypedLinksResponse() {
    this->initializeModel();
}

OAIBatchListOutgoingTypedLinksResponse::~OAIBatchListOutgoingTypedLinksResponse() {}

void OAIBatchListOutgoingTypedLinksResponse::initializeModel() {

    m_typed_link_specifiers_isSet = false;
    m_typed_link_specifiers_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIBatchListOutgoingTypedLinksResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchListOutgoingTypedLinksResponse::fromJsonObject(QJsonObject json) {

    m_typed_link_specifiers_isValid = ::OpenAPI::fromJsonValue(m_typed_link_specifiers, json[QString("TypedLinkSpecifiers")]);
    m_typed_link_specifiers_isSet = !json[QString("TypedLinkSpecifiers")].isNull() && m_typed_link_specifiers_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIBatchListOutgoingTypedLinksResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchListOutgoingTypedLinksResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_typed_link_specifiers.isSet()) {
        obj.insert(QString("TypedLinkSpecifiers"), ::OpenAPI::toJsonValue(m_typed_link_specifiers));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIBatchListOutgoingTypedLinksResponse::getTypedLinkSpecifiers() const {
    return m_typed_link_specifiers;
}
void OAIBatchListOutgoingTypedLinksResponse::setTypedLinkSpecifiers(const QList &typed_link_specifiers) {
    m_typed_link_specifiers = typed_link_specifiers;
    m_typed_link_specifiers_isSet = true;
}

bool OAIBatchListOutgoingTypedLinksResponse::is_typed_link_specifiers_Set() const{
    return m_typed_link_specifiers_isSet;
}

bool OAIBatchListOutgoingTypedLinksResponse::is_typed_link_specifiers_Valid() const{
    return m_typed_link_specifiers_isValid;
}

QString OAIBatchListOutgoingTypedLinksResponse::getNextToken() const {
    return m_next_token;
}
void OAIBatchListOutgoingTypedLinksResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIBatchListOutgoingTypedLinksResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIBatchListOutgoingTypedLinksResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIBatchListOutgoingTypedLinksResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_typed_link_specifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchListOutgoingTypedLinksResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
