/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchListAttachedIndicesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchListAttachedIndicesResponse::OAIBatchListAttachedIndicesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchListAttachedIndicesResponse::OAIBatchListAttachedIndicesResponse() {
    this->initializeModel();
}

OAIBatchListAttachedIndicesResponse::~OAIBatchListAttachedIndicesResponse() {}

void OAIBatchListAttachedIndicesResponse::initializeModel() {

    m_index_attachments_isSet = false;
    m_index_attachments_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIBatchListAttachedIndicesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchListAttachedIndicesResponse::fromJsonObject(QJsonObject json) {

    m_index_attachments_isValid = ::OpenAPI::fromJsonValue(m_index_attachments, json[QString("IndexAttachments")]);
    m_index_attachments_isSet = !json[QString("IndexAttachments")].isNull() && m_index_attachments_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIBatchListAttachedIndicesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchListAttachedIndicesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_index_attachments.isSet()) {
        obj.insert(QString("IndexAttachments"), ::OpenAPI::toJsonValue(m_index_attachments));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIBatchListAttachedIndicesResponse::getIndexAttachments() const {
    return m_index_attachments;
}
void OAIBatchListAttachedIndicesResponse::setIndexAttachments(const QList &index_attachments) {
    m_index_attachments = index_attachments;
    m_index_attachments_isSet = true;
}

bool OAIBatchListAttachedIndicesResponse::is_index_attachments_Set() const{
    return m_index_attachments_isSet;
}

bool OAIBatchListAttachedIndicesResponse::is_index_attachments_Valid() const{
    return m_index_attachments_isValid;
}

QString OAIBatchListAttachedIndicesResponse::getNextToken() const {
    return m_next_token;
}
void OAIBatchListAttachedIndicesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIBatchListAttachedIndicesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIBatchListAttachedIndicesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIBatchListAttachedIndicesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_attachments.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchListAttachedIndicesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
