/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchWriteOperation_UpdateLinkAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchWriteOperation_UpdateLinkAttributes::OAIBatchWriteOperation_UpdateLinkAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchWriteOperation_UpdateLinkAttributes::OAIBatchWriteOperation_UpdateLinkAttributes() {
    this->initializeModel();
}

OAIBatchWriteOperation_UpdateLinkAttributes::~OAIBatchWriteOperation_UpdateLinkAttributes() {}

void OAIBatchWriteOperation_UpdateLinkAttributes::initializeModel() {

    m_typed_link_specifier_isSet = false;
    m_typed_link_specifier_isValid = false;

    m_attribute_updates_isSet = false;
    m_attribute_updates_isValid = false;
}

void OAIBatchWriteOperation_UpdateLinkAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchWriteOperation_UpdateLinkAttributes::fromJsonObject(QJsonObject json) {

    m_typed_link_specifier_isValid = ::OpenAPI::fromJsonValue(m_typed_link_specifier, json[QString("TypedLinkSpecifier")]);
    m_typed_link_specifier_isSet = !json[QString("TypedLinkSpecifier")].isNull() && m_typed_link_specifier_isValid;

    m_attribute_updates_isValid = ::OpenAPI::fromJsonValue(m_attribute_updates, json[QString("AttributeUpdates")]);
    m_attribute_updates_isSet = !json[QString("AttributeUpdates")].isNull() && m_attribute_updates_isValid;
}

QString OAIBatchWriteOperation_UpdateLinkAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchWriteOperation_UpdateLinkAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_typed_link_specifier.isSet()) {
        obj.insert(QString("TypedLinkSpecifier"), ::OpenAPI::toJsonValue(m_typed_link_specifier));
    }
    if (m_attribute_updates.isSet()) {
        obj.insert(QString("AttributeUpdates"), ::OpenAPI::toJsonValue(m_attribute_updates));
    }
    return obj;
}

OAIBatchGetLinkAttributes_TypedLinkSpecifier OAIBatchWriteOperation_UpdateLinkAttributes::getTypedLinkSpecifier() const {
    return m_typed_link_specifier;
}
void OAIBatchWriteOperation_UpdateLinkAttributes::setTypedLinkSpecifier(const OAIBatchGetLinkAttributes_TypedLinkSpecifier &typed_link_specifier) {
    m_typed_link_specifier = typed_link_specifier;
    m_typed_link_specifier_isSet = true;
}

bool OAIBatchWriteOperation_UpdateLinkAttributes::is_typed_link_specifier_Set() const{
    return m_typed_link_specifier_isSet;
}

bool OAIBatchWriteOperation_UpdateLinkAttributes::is_typed_link_specifier_Valid() const{
    return m_typed_link_specifier_isValid;
}

QList OAIBatchWriteOperation_UpdateLinkAttributes::getAttributeUpdates() const {
    return m_attribute_updates;
}
void OAIBatchWriteOperation_UpdateLinkAttributes::setAttributeUpdates(const QList &attribute_updates) {
    m_attribute_updates = attribute_updates;
    m_attribute_updates_isSet = true;
}

bool OAIBatchWriteOperation_UpdateLinkAttributes::is_attribute_updates_Set() const{
    return m_attribute_updates_isSet;
}

bool OAIBatchWriteOperation_UpdateLinkAttributes::is_attribute_updates_Valid() const{
    return m_attribute_updates_isValid;
}

bool OAIBatchWriteOperation_UpdateLinkAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_typed_link_specifier.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchWriteOperation_UpdateLinkAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_typed_link_specifier_isValid && m_attribute_updates_isValid && true;
}

} // namespace OpenAPI
