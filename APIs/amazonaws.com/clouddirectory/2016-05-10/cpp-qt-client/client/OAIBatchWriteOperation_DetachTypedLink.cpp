/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchWriteOperation_DetachTypedLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchWriteOperation_DetachTypedLink::OAIBatchWriteOperation_DetachTypedLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchWriteOperation_DetachTypedLink::OAIBatchWriteOperation_DetachTypedLink() {
    this->initializeModel();
}

OAIBatchWriteOperation_DetachTypedLink::~OAIBatchWriteOperation_DetachTypedLink() {}

void OAIBatchWriteOperation_DetachTypedLink::initializeModel() {

    m_typed_link_specifier_isSet = false;
    m_typed_link_specifier_isValid = false;
}

void OAIBatchWriteOperation_DetachTypedLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchWriteOperation_DetachTypedLink::fromJsonObject(QJsonObject json) {

    m_typed_link_specifier_isValid = ::OpenAPI::fromJsonValue(m_typed_link_specifier, json[QString("TypedLinkSpecifier")]);
    m_typed_link_specifier_isSet = !json[QString("TypedLinkSpecifier")].isNull() && m_typed_link_specifier_isValid;
}

QString OAIBatchWriteOperation_DetachTypedLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchWriteOperation_DetachTypedLink::asJsonObject() const {
    QJsonObject obj;
    if (m_typed_link_specifier.isSet()) {
        obj.insert(QString("TypedLinkSpecifier"), ::OpenAPI::toJsonValue(m_typed_link_specifier));
    }
    return obj;
}

OAIBatchDetachTypedLink_TypedLinkSpecifier OAIBatchWriteOperation_DetachTypedLink::getTypedLinkSpecifier() const {
    return m_typed_link_specifier;
}
void OAIBatchWriteOperation_DetachTypedLink::setTypedLinkSpecifier(const OAIBatchDetachTypedLink_TypedLinkSpecifier &typed_link_specifier) {
    m_typed_link_specifier = typed_link_specifier;
    m_typed_link_specifier_isSet = true;
}

bool OAIBatchWriteOperation_DetachTypedLink::is_typed_link_specifier_Set() const{
    return m_typed_link_specifier_isSet;
}

bool OAIBatchWriteOperation_DetachTypedLink::is_typed_link_specifier_Valid() const{
    return m_typed_link_specifier_isValid;
}

bool OAIBatchWriteOperation_DetachTypedLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_typed_link_specifier.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchWriteOperation_DetachTypedLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_typed_link_specifier_isValid && true;
}

} // namespace OpenAPI
