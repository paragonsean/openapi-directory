/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectAttributeAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectAttributeAction::OAIObjectAttributeAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectAttributeAction::OAIObjectAttributeAction() {
    this->initializeModel();
}

OAIObjectAttributeAction::~OAIObjectAttributeAction() {}

void OAIObjectAttributeAction::initializeModel() {

    m_object_attribute_action_type_isSet = false;
    m_object_attribute_action_type_isValid = false;

    m_object_attribute_update_value_isSet = false;
    m_object_attribute_update_value_isValid = false;
}

void OAIObjectAttributeAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectAttributeAction::fromJsonObject(QJsonObject json) {

    m_object_attribute_action_type_isValid = ::OpenAPI::fromJsonValue(m_object_attribute_action_type, json[QString("ObjectAttributeActionType")]);
    m_object_attribute_action_type_isSet = !json[QString("ObjectAttributeActionType")].isNull() && m_object_attribute_action_type_isValid;

    m_object_attribute_update_value_isValid = ::OpenAPI::fromJsonValue(m_object_attribute_update_value, json[QString("ObjectAttributeUpdateValue")]);
    m_object_attribute_update_value_isSet = !json[QString("ObjectAttributeUpdateValue")].isNull() && m_object_attribute_update_value_isValid;
}

QString OAIObjectAttributeAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectAttributeAction::asJsonObject() const {
    QJsonObject obj;
    if (m_object_attribute_action_type.isSet()) {
        obj.insert(QString("ObjectAttributeActionType"), ::OpenAPI::toJsonValue(m_object_attribute_action_type));
    }
    if (m_object_attribute_update_value.isSet()) {
        obj.insert(QString("ObjectAttributeUpdateValue"), ::OpenAPI::toJsonValue(m_object_attribute_update_value));
    }
    return obj;
}

OAIUpdateActionType OAIObjectAttributeAction::getObjectAttributeActionType() const {
    return m_object_attribute_action_type;
}
void OAIObjectAttributeAction::setObjectAttributeActionType(const OAIUpdateActionType &object_attribute_action_type) {
    m_object_attribute_action_type = object_attribute_action_type;
    m_object_attribute_action_type_isSet = true;
}

bool OAIObjectAttributeAction::is_object_attribute_action_type_Set() const{
    return m_object_attribute_action_type_isSet;
}

bool OAIObjectAttributeAction::is_object_attribute_action_type_Valid() const{
    return m_object_attribute_action_type_isValid;
}

OAILinkAttributeAction_AttributeUpdateValue OAIObjectAttributeAction::getObjectAttributeUpdateValue() const {
    return m_object_attribute_update_value;
}
void OAIObjectAttributeAction::setObjectAttributeUpdateValue(const OAILinkAttributeAction_AttributeUpdateValue &object_attribute_update_value) {
    m_object_attribute_update_value = object_attribute_update_value;
    m_object_attribute_update_value_isSet = true;
}

bool OAIObjectAttributeAction::is_object_attribute_update_value_Set() const{
    return m_object_attribute_update_value_isSet;
}

bool OAIObjectAttributeAction::is_object_attribute_update_value_Valid() const{
    return m_object_attribute_update_value_isValid;
}

bool OAIObjectAttributeAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_attribute_action_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_attribute_update_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectAttributeAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
