/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateIndex_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateIndex_request::OAICreateIndex_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateIndex_request::OAICreateIndex_request() {
    this->initializeModel();
}

OAICreateIndex_request::~OAICreateIndex_request() {}

void OAICreateIndex_request::initializeModel() {

    m_ordered_indexed_attribute_list_isSet = false;
    m_ordered_indexed_attribute_list_isValid = false;

    m_is_unique_isSet = false;
    m_is_unique_isValid = false;

    m_parent_reference_isSet = false;
    m_parent_reference_isValid = false;

    m_link_name_isSet = false;
    m_link_name_isValid = false;
}

void OAICreateIndex_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateIndex_request::fromJsonObject(QJsonObject json) {

    m_ordered_indexed_attribute_list_isValid = ::OpenAPI::fromJsonValue(m_ordered_indexed_attribute_list, json[QString("OrderedIndexedAttributeList")]);
    m_ordered_indexed_attribute_list_isSet = !json[QString("OrderedIndexedAttributeList")].isNull() && m_ordered_indexed_attribute_list_isValid;

    m_is_unique_isValid = ::OpenAPI::fromJsonValue(m_is_unique, json[QString("IsUnique")]);
    m_is_unique_isSet = !json[QString("IsUnique")].isNull() && m_is_unique_isValid;

    m_parent_reference_isValid = ::OpenAPI::fromJsonValue(m_parent_reference, json[QString("ParentReference")]);
    m_parent_reference_isSet = !json[QString("ParentReference")].isNull() && m_parent_reference_isValid;

    m_link_name_isValid = ::OpenAPI::fromJsonValue(m_link_name, json[QString("LinkName")]);
    m_link_name_isSet = !json[QString("LinkName")].isNull() && m_link_name_isValid;
}

QString OAICreateIndex_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateIndex_request::asJsonObject() const {
    QJsonObject obj;
    if (m_ordered_indexed_attribute_list.size() > 0) {
        obj.insert(QString("OrderedIndexedAttributeList"), ::OpenAPI::toJsonValue(m_ordered_indexed_attribute_list));
    }
    if (m_is_unique_isSet) {
        obj.insert(QString("IsUnique"), ::OpenAPI::toJsonValue(m_is_unique));
    }
    if (m_parent_reference.isSet()) {
        obj.insert(QString("ParentReference"), ::OpenAPI::toJsonValue(m_parent_reference));
    }
    if (m_link_name_isSet) {
        obj.insert(QString("LinkName"), ::OpenAPI::toJsonValue(m_link_name));
    }
    return obj;
}

QList<OAIAttributeKey> OAICreateIndex_request::getOrderedIndexedAttributeList() const {
    return m_ordered_indexed_attribute_list;
}
void OAICreateIndex_request::setOrderedIndexedAttributeList(const QList<OAIAttributeKey> &ordered_indexed_attribute_list) {
    m_ordered_indexed_attribute_list = ordered_indexed_attribute_list;
    m_ordered_indexed_attribute_list_isSet = true;
}

bool OAICreateIndex_request::is_ordered_indexed_attribute_list_Set() const{
    return m_ordered_indexed_attribute_list_isSet;
}

bool OAICreateIndex_request::is_ordered_indexed_attribute_list_Valid() const{
    return m_ordered_indexed_attribute_list_isValid;
}

bool OAICreateIndex_request::isIsUnique() const {
    return m_is_unique;
}
void OAICreateIndex_request::setIsUnique(const bool &is_unique) {
    m_is_unique = is_unique;
    m_is_unique_isSet = true;
}

bool OAICreateIndex_request::is_is_unique_Set() const{
    return m_is_unique_isSet;
}

bool OAICreateIndex_request::is_is_unique_Valid() const{
    return m_is_unique_isValid;
}

OAIAddFacetToObject_request_ObjectReference OAICreateIndex_request::getParentReference() const {
    return m_parent_reference;
}
void OAICreateIndex_request::setParentReference(const OAIAddFacetToObject_request_ObjectReference &parent_reference) {
    m_parent_reference = parent_reference;
    m_parent_reference_isSet = true;
}

bool OAICreateIndex_request::is_parent_reference_Set() const{
    return m_parent_reference_isSet;
}

bool OAICreateIndex_request::is_parent_reference_Valid() const{
    return m_parent_reference_isValid;
}

QString OAICreateIndex_request::getLinkName() const {
    return m_link_name;
}
void OAICreateIndex_request::setLinkName(const QString &link_name) {
    m_link_name = link_name;
    m_link_name_isSet = true;
}

bool OAICreateIndex_request::is_link_name_Set() const{
    return m_link_name_isSet;
}

bool OAICreateIndex_request::is_link_name_Valid() const{
    return m_link_name_isValid;
}

bool OAICreateIndex_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ordered_indexed_attribute_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_unique_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateIndex_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ordered_indexed_attribute_list_isValid && m_is_unique_isValid && true;
}

} // namespace OpenAPI
