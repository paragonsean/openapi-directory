/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListDevelopmentSchemaArnsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListDevelopmentSchemaArnsResponse::OAIListDevelopmentSchemaArnsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListDevelopmentSchemaArnsResponse::OAIListDevelopmentSchemaArnsResponse() {
    this->initializeModel();
}

OAIListDevelopmentSchemaArnsResponse::~OAIListDevelopmentSchemaArnsResponse() {}

void OAIListDevelopmentSchemaArnsResponse::initializeModel() {

    m_schema_arns_isSet = false;
    m_schema_arns_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListDevelopmentSchemaArnsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListDevelopmentSchemaArnsResponse::fromJsonObject(QJsonObject json) {

    m_schema_arns_isValid = ::OpenAPI::fromJsonValue(m_schema_arns, json[QString("SchemaArns")]);
    m_schema_arns_isSet = !json[QString("SchemaArns")].isNull() && m_schema_arns_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListDevelopmentSchemaArnsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListDevelopmentSchemaArnsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_schema_arns.isSet()) {
        obj.insert(QString("SchemaArns"), ::OpenAPI::toJsonValue(m_schema_arns));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListDevelopmentSchemaArnsResponse::getSchemaArns() const {
    return m_schema_arns;
}
void OAIListDevelopmentSchemaArnsResponse::setSchemaArns(const QList &schema_arns) {
    m_schema_arns = schema_arns;
    m_schema_arns_isSet = true;
}

bool OAIListDevelopmentSchemaArnsResponse::is_schema_arns_Set() const{
    return m_schema_arns_isSet;
}

bool OAIListDevelopmentSchemaArnsResponse::is_schema_arns_Valid() const{
    return m_schema_arns_isValid;
}

QString OAIListDevelopmentSchemaArnsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListDevelopmentSchemaArnsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListDevelopmentSchemaArnsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListDevelopmentSchemaArnsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListDevelopmentSchemaArnsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schema_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListDevelopmentSchemaArnsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
