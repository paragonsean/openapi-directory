/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttachTypedLinkResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttachTypedLinkResponse::OAIAttachTypedLinkResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttachTypedLinkResponse::OAIAttachTypedLinkResponse() {
    this->initializeModel();
}

OAIAttachTypedLinkResponse::~OAIAttachTypedLinkResponse() {}

void OAIAttachTypedLinkResponse::initializeModel() {

    m_typed_link_specifier_isSet = false;
    m_typed_link_specifier_isValid = false;
}

void OAIAttachTypedLinkResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttachTypedLinkResponse::fromJsonObject(QJsonObject json) {

    m_typed_link_specifier_isValid = ::OpenAPI::fromJsonValue(m_typed_link_specifier, json[QString("TypedLinkSpecifier")]);
    m_typed_link_specifier_isSet = !json[QString("TypedLinkSpecifier")].isNull() && m_typed_link_specifier_isValid;
}

QString OAIAttachTypedLinkResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttachTypedLinkResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_typed_link_specifier.isSet()) {
        obj.insert(QString("TypedLinkSpecifier"), ::OpenAPI::toJsonValue(m_typed_link_specifier));
    }
    return obj;
}

OAIAttachTypedLinkResponse_TypedLinkSpecifier OAIAttachTypedLinkResponse::getTypedLinkSpecifier() const {
    return m_typed_link_specifier;
}
void OAIAttachTypedLinkResponse::setTypedLinkSpecifier(const OAIAttachTypedLinkResponse_TypedLinkSpecifier &typed_link_specifier) {
    m_typed_link_specifier = typed_link_specifier;
    m_typed_link_specifier_isSet = true;
}

bool OAIAttachTypedLinkResponse::is_typed_link_specifier_Set() const{
    return m_typed_link_specifier_isSet;
}

bool OAIAttachTypedLinkResponse::is_typed_link_specifier_Valid() const{
    return m_typed_link_specifier_isValid;
}

bool OAIAttachTypedLinkResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_typed_link_specifier.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttachTypedLinkResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
