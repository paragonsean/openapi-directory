/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateTypedLinkFacetRequest_Facet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateTypedLinkFacetRequest_Facet::OAICreateTypedLinkFacetRequest_Facet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateTypedLinkFacetRequest_Facet::OAICreateTypedLinkFacetRequest_Facet() {
    this->initializeModel();
}

OAICreateTypedLinkFacetRequest_Facet::~OAICreateTypedLinkFacetRequest_Facet() {}

void OAICreateTypedLinkFacetRequest_Facet::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_identity_attribute_order_isSet = false;
    m_identity_attribute_order_isValid = false;
}

void OAICreateTypedLinkFacetRequest_Facet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateTypedLinkFacetRequest_Facet::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("Attributes")]);
    m_attributes_isSet = !json[QString("Attributes")].isNull() && m_attributes_isValid;

    m_identity_attribute_order_isValid = ::OpenAPI::fromJsonValue(m_identity_attribute_order, json[QString("IdentityAttributeOrder")]);
    m_identity_attribute_order_isSet = !json[QString("IdentityAttributeOrder")].isNull() && m_identity_attribute_order_isValid;
}

QString OAICreateTypedLinkFacetRequest_Facet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateTypedLinkFacetRequest_Facet::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_attributes.isSet()) {
        obj.insert(QString("Attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_identity_attribute_order.isSet()) {
        obj.insert(QString("IdentityAttributeOrder"), ::OpenAPI::toJsonValue(m_identity_attribute_order));
    }
    return obj;
}

QString OAICreateTypedLinkFacetRequest_Facet::getName() const {
    return m_name;
}
void OAICreateTypedLinkFacetRequest_Facet::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateTypedLinkFacetRequest_Facet::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateTypedLinkFacetRequest_Facet::is_name_Valid() const{
    return m_name_isValid;
}

QList OAICreateTypedLinkFacetRequest_Facet::getAttributes() const {
    return m_attributes;
}
void OAICreateTypedLinkFacetRequest_Facet::setAttributes(const QList &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAICreateTypedLinkFacetRequest_Facet::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAICreateTypedLinkFacetRequest_Facet::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QList OAICreateTypedLinkFacetRequest_Facet::getIdentityAttributeOrder() const {
    return m_identity_attribute_order;
}
void OAICreateTypedLinkFacetRequest_Facet::setIdentityAttributeOrder(const QList &identity_attribute_order) {
    m_identity_attribute_order = identity_attribute_order;
    m_identity_attribute_order_isSet = true;
}

bool OAICreateTypedLinkFacetRequest_Facet::is_identity_attribute_order_Set() const{
    return m_identity_attribute_order_isSet;
}

bool OAICreateTypedLinkFacetRequest_Facet::is_identity_attribute_order_Valid() const{
    return m_identity_attribute_order_isValid;
}

bool OAICreateTypedLinkFacetRequest_Facet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity_attribute_order.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateTypedLinkFacetRequest_Facet::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_attributes_isValid && m_identity_attribute_order_isValid && true;
}

} // namespace OpenAPI
