/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchListPolicyAttachmentsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchListPolicyAttachmentsResponse::OAIBatchListPolicyAttachmentsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchListPolicyAttachmentsResponse::OAIBatchListPolicyAttachmentsResponse() {
    this->initializeModel();
}

OAIBatchListPolicyAttachmentsResponse::~OAIBatchListPolicyAttachmentsResponse() {}

void OAIBatchListPolicyAttachmentsResponse::initializeModel() {

    m_object_identifiers_isSet = false;
    m_object_identifiers_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIBatchListPolicyAttachmentsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchListPolicyAttachmentsResponse::fromJsonObject(QJsonObject json) {

    m_object_identifiers_isValid = ::OpenAPI::fromJsonValue(m_object_identifiers, json[QString("ObjectIdentifiers")]);
    m_object_identifiers_isSet = !json[QString("ObjectIdentifiers")].isNull() && m_object_identifiers_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIBatchListPolicyAttachmentsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchListPolicyAttachmentsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_object_identifiers.isSet()) {
        obj.insert(QString("ObjectIdentifiers"), ::OpenAPI::toJsonValue(m_object_identifiers));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIBatchListPolicyAttachmentsResponse::getObjectIdentifiers() const {
    return m_object_identifiers;
}
void OAIBatchListPolicyAttachmentsResponse::setObjectIdentifiers(const QList &object_identifiers) {
    m_object_identifiers = object_identifiers;
    m_object_identifiers_isSet = true;
}

bool OAIBatchListPolicyAttachmentsResponse::is_object_identifiers_Set() const{
    return m_object_identifiers_isSet;
}

bool OAIBatchListPolicyAttachmentsResponse::is_object_identifiers_Valid() const{
    return m_object_identifiers_isValid;
}

QString OAIBatchListPolicyAttachmentsResponse::getNextToken() const {
    return m_next_token;
}
void OAIBatchListPolicyAttachmentsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIBatchListPolicyAttachmentsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIBatchListPolicyAttachmentsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIBatchListPolicyAttachmentsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_identifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchListPolicyAttachmentsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
