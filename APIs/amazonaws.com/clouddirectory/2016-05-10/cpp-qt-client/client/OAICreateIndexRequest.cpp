/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateIndexRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateIndexRequest::OAICreateIndexRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateIndexRequest::OAICreateIndexRequest() {
    this->initializeModel();
}

OAICreateIndexRequest::~OAICreateIndexRequest() {}

void OAICreateIndexRequest::initializeModel() {

    m_ordered_indexed_attribute_list_isSet = false;
    m_ordered_indexed_attribute_list_isValid = false;

    m_is_unique_isSet = false;
    m_is_unique_isValid = false;

    m_parent_reference_isSet = false;
    m_parent_reference_isValid = false;

    m_link_name_isSet = false;
    m_link_name_isValid = false;
}

void OAICreateIndexRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateIndexRequest::fromJsonObject(QJsonObject json) {

    m_ordered_indexed_attribute_list_isValid = ::OpenAPI::fromJsonValue(m_ordered_indexed_attribute_list, json[QString("OrderedIndexedAttributeList")]);
    m_ordered_indexed_attribute_list_isSet = !json[QString("OrderedIndexedAttributeList")].isNull() && m_ordered_indexed_attribute_list_isValid;

    m_is_unique_isValid = ::OpenAPI::fromJsonValue(m_is_unique, json[QString("IsUnique")]);
    m_is_unique_isSet = !json[QString("IsUnique")].isNull() && m_is_unique_isValid;

    m_parent_reference_isValid = ::OpenAPI::fromJsonValue(m_parent_reference, json[QString("ParentReference")]);
    m_parent_reference_isSet = !json[QString("ParentReference")].isNull() && m_parent_reference_isValid;

    m_link_name_isValid = ::OpenAPI::fromJsonValue(m_link_name, json[QString("LinkName")]);
    m_link_name_isSet = !json[QString("LinkName")].isNull() && m_link_name_isValid;
}

QString OAICreateIndexRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateIndexRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_ordered_indexed_attribute_list.isSet()) {
        obj.insert(QString("OrderedIndexedAttributeList"), ::OpenAPI::toJsonValue(m_ordered_indexed_attribute_list));
    }
    if (m_is_unique_isSet) {
        obj.insert(QString("IsUnique"), ::OpenAPI::toJsonValue(m_is_unique));
    }
    if (m_parent_reference.isSet()) {
        obj.insert(QString("ParentReference"), ::OpenAPI::toJsonValue(m_parent_reference));
    }
    if (m_link_name_isSet) {
        obj.insert(QString("LinkName"), ::OpenAPI::toJsonValue(m_link_name));
    }
    return obj;
}

QList OAICreateIndexRequest::getOrderedIndexedAttributeList() const {
    return m_ordered_indexed_attribute_list;
}
void OAICreateIndexRequest::setOrderedIndexedAttributeList(const QList &ordered_indexed_attribute_list) {
    m_ordered_indexed_attribute_list = ordered_indexed_attribute_list;
    m_ordered_indexed_attribute_list_isSet = true;
}

bool OAICreateIndexRequest::is_ordered_indexed_attribute_list_Set() const{
    return m_ordered_indexed_attribute_list_isSet;
}

bool OAICreateIndexRequest::is_ordered_indexed_attribute_list_Valid() const{
    return m_ordered_indexed_attribute_list_isValid;
}

bool OAICreateIndexRequest::getIsUnique() const {
    return m_is_unique;
}
void OAICreateIndexRequest::setIsUnique(const bool &is_unique) {
    m_is_unique = is_unique;
    m_is_unique_isSet = true;
}

bool OAICreateIndexRequest::is_is_unique_Set() const{
    return m_is_unique_isSet;
}

bool OAICreateIndexRequest::is_is_unique_Valid() const{
    return m_is_unique_isValid;
}

OAIBatchCreateIndex_ParentReference OAICreateIndexRequest::getParentReference() const {
    return m_parent_reference;
}
void OAICreateIndexRequest::setParentReference(const OAIBatchCreateIndex_ParentReference &parent_reference) {
    m_parent_reference = parent_reference;
    m_parent_reference_isSet = true;
}

bool OAICreateIndexRequest::is_parent_reference_Set() const{
    return m_parent_reference_isSet;
}

bool OAICreateIndexRequest::is_parent_reference_Valid() const{
    return m_parent_reference_isValid;
}

QString OAICreateIndexRequest::getLinkName() const {
    return m_link_name;
}
void OAICreateIndexRequest::setLinkName(const QString &link_name) {
    m_link_name = link_name;
    m_link_name_isSet = true;
}

bool OAICreateIndexRequest::is_link_name_Set() const{
    return m_link_name_isSet;
}

bool OAICreateIndexRequest::is_link_name_Valid() const{
    return m_link_name_isValid;
}

bool OAICreateIndexRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ordered_indexed_attribute_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_unique_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateIndexRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ordered_indexed_attribute_list_isValid && m_is_unique_isValid && true;
}

} // namespace OpenAPI
