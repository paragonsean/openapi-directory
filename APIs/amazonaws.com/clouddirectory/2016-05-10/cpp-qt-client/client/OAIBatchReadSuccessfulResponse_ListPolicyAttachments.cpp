/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchReadSuccessfulResponse_ListPolicyAttachments.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchReadSuccessfulResponse_ListPolicyAttachments::OAIBatchReadSuccessfulResponse_ListPolicyAttachments(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchReadSuccessfulResponse_ListPolicyAttachments::OAIBatchReadSuccessfulResponse_ListPolicyAttachments() {
    this->initializeModel();
}

OAIBatchReadSuccessfulResponse_ListPolicyAttachments::~OAIBatchReadSuccessfulResponse_ListPolicyAttachments() {}

void OAIBatchReadSuccessfulResponse_ListPolicyAttachments::initializeModel() {

    m_object_identifiers_isSet = false;
    m_object_identifiers_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIBatchReadSuccessfulResponse_ListPolicyAttachments::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchReadSuccessfulResponse_ListPolicyAttachments::fromJsonObject(QJsonObject json) {

    m_object_identifiers_isValid = ::OpenAPI::fromJsonValue(m_object_identifiers, json[QString("ObjectIdentifiers")]);
    m_object_identifiers_isSet = !json[QString("ObjectIdentifiers")].isNull() && m_object_identifiers_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIBatchReadSuccessfulResponse_ListPolicyAttachments::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchReadSuccessfulResponse_ListPolicyAttachments::asJsonObject() const {
    QJsonObject obj;
    if (m_object_identifiers.isSet()) {
        obj.insert(QString("ObjectIdentifiers"), ::OpenAPI::toJsonValue(m_object_identifiers));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIBatchReadSuccessfulResponse_ListPolicyAttachments::getObjectIdentifiers() const {
    return m_object_identifiers;
}
void OAIBatchReadSuccessfulResponse_ListPolicyAttachments::setObjectIdentifiers(const QList &object_identifiers) {
    m_object_identifiers = object_identifiers;
    m_object_identifiers_isSet = true;
}

bool OAIBatchReadSuccessfulResponse_ListPolicyAttachments::is_object_identifiers_Set() const{
    return m_object_identifiers_isSet;
}

bool OAIBatchReadSuccessfulResponse_ListPolicyAttachments::is_object_identifiers_Valid() const{
    return m_object_identifiers_isValid;
}

QString OAIBatchReadSuccessfulResponse_ListPolicyAttachments::getNextToken() const {
    return m_next_token;
}
void OAIBatchReadSuccessfulResponse_ListPolicyAttachments::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIBatchReadSuccessfulResponse_ListPolicyAttachments::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIBatchReadSuccessfulResponse_ListPolicyAttachments::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIBatchReadSuccessfulResponse_ListPolicyAttachments::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_identifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchReadSuccessfulResponse_ListPolicyAttachments::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
