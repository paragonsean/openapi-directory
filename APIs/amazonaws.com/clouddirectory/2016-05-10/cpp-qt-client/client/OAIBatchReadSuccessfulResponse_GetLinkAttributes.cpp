/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchReadSuccessfulResponse_GetLinkAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchReadSuccessfulResponse_GetLinkAttributes::OAIBatchReadSuccessfulResponse_GetLinkAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchReadSuccessfulResponse_GetLinkAttributes::OAIBatchReadSuccessfulResponse_GetLinkAttributes() {
    this->initializeModel();
}

OAIBatchReadSuccessfulResponse_GetLinkAttributes::~OAIBatchReadSuccessfulResponse_GetLinkAttributes() {}

void OAIBatchReadSuccessfulResponse_GetLinkAttributes::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;
}

void OAIBatchReadSuccessfulResponse_GetLinkAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchReadSuccessfulResponse_GetLinkAttributes::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("Attributes")]);
    m_attributes_isSet = !json[QString("Attributes")].isNull() && m_attributes_isValid;
}

QString OAIBatchReadSuccessfulResponse_GetLinkAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchReadSuccessfulResponse_GetLinkAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.isSet()) {
        obj.insert(QString("Attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    return obj;
}

QList OAIBatchReadSuccessfulResponse_GetLinkAttributes::getAttributes() const {
    return m_attributes;
}
void OAIBatchReadSuccessfulResponse_GetLinkAttributes::setAttributes(const QList &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIBatchReadSuccessfulResponse_GetLinkAttributes::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIBatchReadSuccessfulResponse_GetLinkAttributes::is_attributes_Valid() const{
    return m_attributes_isValid;
}

bool OAIBatchReadSuccessfulResponse_GetLinkAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchReadSuccessfulResponse_GetLinkAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
