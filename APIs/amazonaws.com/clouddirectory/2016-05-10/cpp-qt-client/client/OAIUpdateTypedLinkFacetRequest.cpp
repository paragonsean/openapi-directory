/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTypedLinkFacetRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTypedLinkFacetRequest::OAIUpdateTypedLinkFacetRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTypedLinkFacetRequest::OAIUpdateTypedLinkFacetRequest() {
    this->initializeModel();
}

OAIUpdateTypedLinkFacetRequest::~OAIUpdateTypedLinkFacetRequest() {}

void OAIUpdateTypedLinkFacetRequest::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_attribute_updates_isSet = false;
    m_attribute_updates_isValid = false;

    m_identity_attribute_order_isSet = false;
    m_identity_attribute_order_isValid = false;
}

void OAIUpdateTypedLinkFacetRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTypedLinkFacetRequest::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_attribute_updates_isValid = ::OpenAPI::fromJsonValue(m_attribute_updates, json[QString("AttributeUpdates")]);
    m_attribute_updates_isSet = !json[QString("AttributeUpdates")].isNull() && m_attribute_updates_isValid;

    m_identity_attribute_order_isValid = ::OpenAPI::fromJsonValue(m_identity_attribute_order, json[QString("IdentityAttributeOrder")]);
    m_identity_attribute_order_isSet = !json[QString("IdentityAttributeOrder")].isNull() && m_identity_attribute_order_isValid;
}

QString OAIUpdateTypedLinkFacetRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTypedLinkFacetRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_attribute_updates.isSet()) {
        obj.insert(QString("AttributeUpdates"), ::OpenAPI::toJsonValue(m_attribute_updates));
    }
    if (m_identity_attribute_order.isSet()) {
        obj.insert(QString("IdentityAttributeOrder"), ::OpenAPI::toJsonValue(m_identity_attribute_order));
    }
    return obj;
}

QString OAIUpdateTypedLinkFacetRequest::getName() const {
    return m_name;
}
void OAIUpdateTypedLinkFacetRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateTypedLinkFacetRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateTypedLinkFacetRequest::is_name_Valid() const{
    return m_name_isValid;
}

QList OAIUpdateTypedLinkFacetRequest::getAttributeUpdates() const {
    return m_attribute_updates;
}
void OAIUpdateTypedLinkFacetRequest::setAttributeUpdates(const QList &attribute_updates) {
    m_attribute_updates = attribute_updates;
    m_attribute_updates_isSet = true;
}

bool OAIUpdateTypedLinkFacetRequest::is_attribute_updates_Set() const{
    return m_attribute_updates_isSet;
}

bool OAIUpdateTypedLinkFacetRequest::is_attribute_updates_Valid() const{
    return m_attribute_updates_isValid;
}

QList OAIUpdateTypedLinkFacetRequest::getIdentityAttributeOrder() const {
    return m_identity_attribute_order;
}
void OAIUpdateTypedLinkFacetRequest::setIdentityAttributeOrder(const QList &identity_attribute_order) {
    m_identity_attribute_order = identity_attribute_order;
    m_identity_attribute_order_isSet = true;
}

bool OAIUpdateTypedLinkFacetRequest::is_identity_attribute_order_Set() const{
    return m_identity_attribute_order_isSet;
}

bool OAIUpdateTypedLinkFacetRequest::is_identity_attribute_order_Valid() const{
    return m_identity_attribute_order_isValid;
}

bool OAIUpdateTypedLinkFacetRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity_attribute_order.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTypedLinkFacetRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_attribute_updates_isValid && m_identity_attribute_order_isValid && true;
}

} // namespace OpenAPI
