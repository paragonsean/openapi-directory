/**
 * Amazon CloudDirectory
 * <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTypedLinkFacetAttributesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTypedLinkFacetAttributesResponse::OAIListTypedLinkFacetAttributesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTypedLinkFacetAttributesResponse::OAIListTypedLinkFacetAttributesResponse() {
    this->initializeModel();
}

OAIListTypedLinkFacetAttributesResponse::~OAIListTypedLinkFacetAttributesResponse() {}

void OAIListTypedLinkFacetAttributesResponse::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListTypedLinkFacetAttributesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTypedLinkFacetAttributesResponse::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("Attributes")]);
    m_attributes_isSet = !json[QString("Attributes")].isNull() && m_attributes_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListTypedLinkFacetAttributesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTypedLinkFacetAttributesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.isSet()) {
        obj.insert(QString("Attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListTypedLinkFacetAttributesResponse::getAttributes() const {
    return m_attributes;
}
void OAIListTypedLinkFacetAttributesResponse::setAttributes(const QList &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIListTypedLinkFacetAttributesResponse::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIListTypedLinkFacetAttributesResponse::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIListTypedLinkFacetAttributesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListTypedLinkFacetAttributesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListTypedLinkFacetAttributesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListTypedLinkFacetAttributesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListTypedLinkFacetAttributesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTypedLinkFacetAttributesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
