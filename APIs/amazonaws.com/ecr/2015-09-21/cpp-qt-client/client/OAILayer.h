/**
 * Amazon EC2 Container Registry
 * <fullname>Amazon Elastic Container Registry</fullname> <p>Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.</p> <p>Amazon ECR has service endpoints in each supported Region. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ecr.html\">Amazon ECR endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2015-09-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILayer.h
 *
 * An object representing an Amazon ECR image layer.
 */

#ifndef OAILayer_H
#define OAILayer_H

#include <QJsonObject>

#include "OAILayerAvailability.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILayer : public OAIObject {
public:
    OAILayer();
    OAILayer(QString json);
    ~OAILayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLayerDigest() const;
    void setLayerDigest(const QString &layer_digest);
    bool is_layer_digest_Set() const;
    bool is_layer_digest_Valid() const;

    OAILayerAvailability getLayerAvailability() const;
    void setLayerAvailability(const OAILayerAvailability &layer_availability);
    bool is_layer_availability_Set() const;
    bool is_layer_availability_Valid() const;

    qint32 getLayerSize() const;
    void setLayerSize(const qint32 &layer_size);
    bool is_layer_size_Set() const;
    bool is_layer_size_Valid() const;

    QString getMediaType() const;
    void setMediaType(const QString &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_layer_digest;
    bool m_layer_digest_isSet;
    bool m_layer_digest_isValid;

    OAILayerAvailability m_layer_availability;
    bool m_layer_availability_isSet;
    bool m_layer_availability_isValid;

    qint32 m_layer_size;
    bool m_layer_size_isSet;
    bool m_layer_size_isValid;

    QString m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILayer)

#endif // OAILayer_H
