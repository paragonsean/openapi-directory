/**
 * Amazon EC2 Container Registry
 * <fullname>Amazon Elastic Container Registry</fullname> <p>Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.</p> <p>Amazon ECR has service endpoints in each supported Region. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ecr.html\">Amazon ECR endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2015-09-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateRepositoryRequest.h
 *
 * 
 */

#ifndef OAICreateRepositoryRequest_H
#define OAICreateRepositoryRequest_H

#include <QJsonObject>

#include "OAICreateRepositoryRequest_encryptionConfiguration.h"
#include "OAICreateRepositoryRequest_imageScanningConfiguration.h"
#include "OAIImageTagMutability.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateRepositoryRequest_imageScanningConfiguration;
class OAICreateRepositoryRequest_encryptionConfiguration;

class OAICreateRepositoryRequest : public OAIObject {
public:
    OAICreateRepositoryRequest();
    OAICreateRepositoryRequest(QString json);
    ~OAICreateRepositoryRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRegistryId() const;
    void setRegistryId(const QString &registry_id);
    bool is_registry_id_Set() const;
    bool is_registry_id_Valid() const;

    QString getRepositoryName() const;
    void setRepositoryName(const QString &repository_name);
    bool is_repository_name_Set() const;
    bool is_repository_name_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIImageTagMutability getImageTagMutability() const;
    void setImageTagMutability(const OAIImageTagMutability &image_tag_mutability);
    bool is_image_tag_mutability_Set() const;
    bool is_image_tag_mutability_Valid() const;

    OAICreateRepositoryRequest_imageScanningConfiguration getImageScanningConfiguration() const;
    void setImageScanningConfiguration(const OAICreateRepositoryRequest_imageScanningConfiguration &image_scanning_configuration);
    bool is_image_scanning_configuration_Set() const;
    bool is_image_scanning_configuration_Valid() const;

    OAICreateRepositoryRequest_encryptionConfiguration getEncryptionConfiguration() const;
    void setEncryptionConfiguration(const OAICreateRepositoryRequest_encryptionConfiguration &encryption_configuration);
    bool is_encryption_configuration_Set() const;
    bool is_encryption_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_registry_id;
    bool m_registry_id_isSet;
    bool m_registry_id_isValid;

    QString m_repository_name;
    bool m_repository_name_isSet;
    bool m_repository_name_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIImageTagMutability m_image_tag_mutability;
    bool m_image_tag_mutability_isSet;
    bool m_image_tag_mutability_isValid;

    OAICreateRepositoryRequest_imageScanningConfiguration m_image_scanning_configuration;
    bool m_image_scanning_configuration_isSet;
    bool m_image_scanning_configuration_isValid;

    OAICreateRepositoryRequest_encryptionConfiguration m_encryption_configuration;
    bool m_encryption_configuration_isSet;
    bool m_encryption_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateRepositoryRequest)

#endif // OAICreateRepositoryRequest_H
