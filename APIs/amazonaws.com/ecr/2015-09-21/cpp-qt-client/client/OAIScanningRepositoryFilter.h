/**
 * Amazon EC2 Container Registry
 * <fullname>Amazon Elastic Container Registry</fullname> <p>Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.</p> <p>Amazon ECR has service endpoints in each supported Region. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ecr.html\">Amazon ECR endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2015-09-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScanningRepositoryFilter.h
 *
 * The details of a scanning repository filter. For more information on how to use filters, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html#image-scanning-filters\&quot;&gt;Using filters&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Container Registry User Guide&lt;/i&gt;.
 */

#ifndef OAIScanningRepositoryFilter_H
#define OAIScanningRepositoryFilter_H

#include <QJsonObject>

#include "OAIScanningRepositoryFilterType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScanningRepositoryFilter : public OAIObject {
public:
    OAIScanningRepositoryFilter();
    OAIScanningRepositoryFilter(QString json);
    ~OAIScanningRepositoryFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAIScanningRepositoryFilterType getFilterType() const;
    void setFilterType(const OAIScanningRepositoryFilterType &filter_type);
    bool is_filter_type_Set() const;
    bool is_filter_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAIScanningRepositoryFilterType m_filter_type;
    bool m_filter_type_isSet;
    bool m_filter_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScanningRepositoryFilter)

#endif // OAIScanningRepositoryFilter_H
