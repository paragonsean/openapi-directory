/**
 * Amazon EC2 Container Registry
 * <fullname>Amazon Elastic Container Registry</fullname> <p>Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.</p> <p>Amazon ECR has service endpoints in each supported Region. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ecr.html\">Amazon ECR endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2015-09-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICvssScoreDetails.h
 *
 * Information about the CVSS score.
 */

#ifndef OAICvssScoreDetails_H
#define OAICvssScoreDetails_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICvssScoreDetails : public OAIObject {
public:
    OAICvssScoreDetails();
    OAICvssScoreDetails(QString json);
    ~OAICvssScoreDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAdjustments() const;
    void setAdjustments(const QList &adjustments);
    bool is_adjustments_Set() const;
    bool is_adjustments_Valid() const;

    double getScore() const;
    void setScore(const double &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getScoreSource() const;
    void setScoreSource(const QString &score_source);
    bool is_score_source_Set() const;
    bool is_score_source_Valid() const;

    QString getScoringVector() const;
    void setScoringVector(const QString &scoring_vector);
    bool is_scoring_vector_Set() const;
    bool is_scoring_vector_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_adjustments;
    bool m_adjustments_isSet;
    bool m_adjustments_isValid;

    double m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_score_source;
    bool m_score_source_isSet;
    bool m_score_source_isValid;

    QString m_scoring_vector;
    bool m_scoring_vector_isSet;
    bool m_scoring_vector_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICvssScoreDetails)

#endif // OAICvssScoreDetails_H
