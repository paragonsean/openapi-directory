# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.finding_severity import FindingSeverity
from openapi_server import util


class ImageScanFinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, uri: str=None, severity: FindingSeverity=None, attributes: List=None):
        """ImageScanFinding - a model defined in OpenAPI

        :param name: The name of this ImageScanFinding.
        :param description: The description of this ImageScanFinding.
        :param uri: The uri of this ImageScanFinding.
        :param severity: The severity of this ImageScanFinding.
        :param attributes: The attributes of this ImageScanFinding.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'uri': str,
            'severity': FindingSeverity,
            'attributes': List
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'uri': 'uri',
            'severity': 'severity',
            'attributes': 'attributes'
        }

        self._name = name
        self._description = description
        self._uri = uri
        self._severity = severity
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageScanFinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageScanFinding of this ImageScanFinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ImageScanFinding.


        :return: The name of this ImageScanFinding.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ImageScanFinding.


        :param name: The name of this ImageScanFinding.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this ImageScanFinding.


        :return: The description of this ImageScanFinding.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ImageScanFinding.


        :param description: The description of this ImageScanFinding.
        :type description: str
        """

        self._description = description

    @property
    def uri(self):
        """Gets the uri of this ImageScanFinding.


        :return: The uri of this ImageScanFinding.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ImageScanFinding.


        :param uri: The uri of this ImageScanFinding.
        :type uri: str
        """

        self._uri = uri

    @property
    def severity(self):
        """Gets the severity of this ImageScanFinding.


        :return: The severity of this ImageScanFinding.
        :rtype: FindingSeverity
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this ImageScanFinding.


        :param severity: The severity of this ImageScanFinding.
        :type severity: FindingSeverity
        """

        self._severity = severity

    @property
    def attributes(self):
        """Gets the attributes of this ImageScanFinding.


        :return: The attributes of this ImageScanFinding.
        :rtype: List
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ImageScanFinding.


        :param attributes: The attributes of this ImageScanFinding.
        :type attributes: List
        """

        self._attributes = attributes
