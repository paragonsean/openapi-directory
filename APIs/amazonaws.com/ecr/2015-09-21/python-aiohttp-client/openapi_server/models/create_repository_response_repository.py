# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_repository_request_encryption_configuration import CreateRepositoryRequestEncryptionConfiguration
from openapi_server.models.image_scanning_configuration import ImageScanningConfiguration
from openapi_server.models.image_tag_mutability import ImageTagMutability
from openapi_server import util


class CreateRepositoryResponseRepository(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, repository_arn: str=None, registry_id: str=None, repository_name: str=None, repository_uri: str=None, created_at: datetime=None, image_tag_mutability: ImageTagMutability=None, image_scanning_configuration: ImageScanningConfiguration=None, encryption_configuration: CreateRepositoryRequestEncryptionConfiguration=None):
        """CreateRepositoryResponseRepository - a model defined in OpenAPI

        :param repository_arn: The repository_arn of this CreateRepositoryResponseRepository.
        :param registry_id: The registry_id of this CreateRepositoryResponseRepository.
        :param repository_name: The repository_name of this CreateRepositoryResponseRepository.
        :param repository_uri: The repository_uri of this CreateRepositoryResponseRepository.
        :param created_at: The created_at of this CreateRepositoryResponseRepository.
        :param image_tag_mutability: The image_tag_mutability of this CreateRepositoryResponseRepository.
        :param image_scanning_configuration: The image_scanning_configuration of this CreateRepositoryResponseRepository.
        :param encryption_configuration: The encryption_configuration of this CreateRepositoryResponseRepository.
        """
        self.openapi_types = {
            'repository_arn': str,
            'registry_id': str,
            'repository_name': str,
            'repository_uri': str,
            'created_at': datetime,
            'image_tag_mutability': ImageTagMutability,
            'image_scanning_configuration': ImageScanningConfiguration,
            'encryption_configuration': CreateRepositoryRequestEncryptionConfiguration
        }

        self.attribute_map = {
            'repository_arn': 'repositoryArn',
            'registry_id': 'registryId',
            'repository_name': 'repositoryName',
            'repository_uri': 'repositoryUri',
            'created_at': 'createdAt',
            'image_tag_mutability': 'imageTagMutability',
            'image_scanning_configuration': 'imageScanningConfiguration',
            'encryption_configuration': 'encryptionConfiguration'
        }

        self._repository_arn = repository_arn
        self._registry_id = registry_id
        self._repository_name = repository_name
        self._repository_uri = repository_uri
        self._created_at = created_at
        self._image_tag_mutability = image_tag_mutability
        self._image_scanning_configuration = image_scanning_configuration
        self._encryption_configuration = encryption_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRepositoryResponseRepository':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRepositoryResponse_repository of this CreateRepositoryResponseRepository.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repository_arn(self):
        """Gets the repository_arn of this CreateRepositoryResponseRepository.


        :return: The repository_arn of this CreateRepositoryResponseRepository.
        :rtype: str
        """
        return self._repository_arn

    @repository_arn.setter
    def repository_arn(self, repository_arn):
        """Sets the repository_arn of this CreateRepositoryResponseRepository.


        :param repository_arn: The repository_arn of this CreateRepositoryResponseRepository.
        :type repository_arn: str
        """

        self._repository_arn = repository_arn

    @property
    def registry_id(self):
        """Gets the registry_id of this CreateRepositoryResponseRepository.


        :return: The registry_id of this CreateRepositoryResponseRepository.
        :rtype: str
        """
        return self._registry_id

    @registry_id.setter
    def registry_id(self, registry_id):
        """Sets the registry_id of this CreateRepositoryResponseRepository.


        :param registry_id: The registry_id of this CreateRepositoryResponseRepository.
        :type registry_id: str
        """

        self._registry_id = registry_id

    @property
    def repository_name(self):
        """Gets the repository_name of this CreateRepositoryResponseRepository.


        :return: The repository_name of this CreateRepositoryResponseRepository.
        :rtype: str
        """
        return self._repository_name

    @repository_name.setter
    def repository_name(self, repository_name):
        """Sets the repository_name of this CreateRepositoryResponseRepository.


        :param repository_name: The repository_name of this CreateRepositoryResponseRepository.
        :type repository_name: str
        """

        self._repository_name = repository_name

    @property
    def repository_uri(self):
        """Gets the repository_uri of this CreateRepositoryResponseRepository.


        :return: The repository_uri of this CreateRepositoryResponseRepository.
        :rtype: str
        """
        return self._repository_uri

    @repository_uri.setter
    def repository_uri(self, repository_uri):
        """Sets the repository_uri of this CreateRepositoryResponseRepository.


        :param repository_uri: The repository_uri of this CreateRepositoryResponseRepository.
        :type repository_uri: str
        """

        self._repository_uri = repository_uri

    @property
    def created_at(self):
        """Gets the created_at of this CreateRepositoryResponseRepository.


        :return: The created_at of this CreateRepositoryResponseRepository.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CreateRepositoryResponseRepository.


        :param created_at: The created_at of this CreateRepositoryResponseRepository.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def image_tag_mutability(self):
        """Gets the image_tag_mutability of this CreateRepositoryResponseRepository.


        :return: The image_tag_mutability of this CreateRepositoryResponseRepository.
        :rtype: ImageTagMutability
        """
        return self._image_tag_mutability

    @image_tag_mutability.setter
    def image_tag_mutability(self, image_tag_mutability):
        """Sets the image_tag_mutability of this CreateRepositoryResponseRepository.


        :param image_tag_mutability: The image_tag_mutability of this CreateRepositoryResponseRepository.
        :type image_tag_mutability: ImageTagMutability
        """

        self._image_tag_mutability = image_tag_mutability

    @property
    def image_scanning_configuration(self):
        """Gets the image_scanning_configuration of this CreateRepositoryResponseRepository.


        :return: The image_scanning_configuration of this CreateRepositoryResponseRepository.
        :rtype: ImageScanningConfiguration
        """
        return self._image_scanning_configuration

    @image_scanning_configuration.setter
    def image_scanning_configuration(self, image_scanning_configuration):
        """Sets the image_scanning_configuration of this CreateRepositoryResponseRepository.


        :param image_scanning_configuration: The image_scanning_configuration of this CreateRepositoryResponseRepository.
        :type image_scanning_configuration: ImageScanningConfiguration
        """

        self._image_scanning_configuration = image_scanning_configuration

    @property
    def encryption_configuration(self):
        """Gets the encryption_configuration of this CreateRepositoryResponseRepository.


        :return: The encryption_configuration of this CreateRepositoryResponseRepository.
        :rtype: CreateRepositoryRequestEncryptionConfiguration
        """
        return self._encryption_configuration

    @encryption_configuration.setter
    def encryption_configuration(self, encryption_configuration):
        """Sets the encryption_configuration of this CreateRepositoryResponseRepository.


        :param encryption_configuration: The encryption_configuration of this CreateRepositoryResponseRepository.
        :type encryption_configuration: CreateRepositoryRequestEncryptionConfiguration
        """

        self._encryption_configuration = encryption_configuration
