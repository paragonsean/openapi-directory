# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CvssScoreDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adjustments: List=None, score: float=None, score_source: str=None, scoring_vector: str=None, version: str=None):
        """CvssScoreDetails - a model defined in OpenAPI

        :param adjustments: The adjustments of this CvssScoreDetails.
        :param score: The score of this CvssScoreDetails.
        :param score_source: The score_source of this CvssScoreDetails.
        :param scoring_vector: The scoring_vector of this CvssScoreDetails.
        :param version: The version of this CvssScoreDetails.
        """
        self.openapi_types = {
            'adjustments': List,
            'score': float,
            'score_source': str,
            'scoring_vector': str,
            'version': str
        }

        self.attribute_map = {
            'adjustments': 'adjustments',
            'score': 'score',
            'score_source': 'scoreSource',
            'scoring_vector': 'scoringVector',
            'version': 'version'
        }

        self._adjustments = adjustments
        self._score = score
        self._score_source = score_source
        self._scoring_vector = scoring_vector
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CvssScoreDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CvssScoreDetails of this CvssScoreDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adjustments(self):
        """Gets the adjustments of this CvssScoreDetails.


        :return: The adjustments of this CvssScoreDetails.
        :rtype: List
        """
        return self._adjustments

    @adjustments.setter
    def adjustments(self, adjustments):
        """Sets the adjustments of this CvssScoreDetails.


        :param adjustments: The adjustments of this CvssScoreDetails.
        :type adjustments: List
        """

        self._adjustments = adjustments

    @property
    def score(self):
        """Gets the score of this CvssScoreDetails.


        :return: The score of this CvssScoreDetails.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this CvssScoreDetails.


        :param score: The score of this CvssScoreDetails.
        :type score: float
        """

        self._score = score

    @property
    def score_source(self):
        """Gets the score_source of this CvssScoreDetails.


        :return: The score_source of this CvssScoreDetails.
        :rtype: str
        """
        return self._score_source

    @score_source.setter
    def score_source(self, score_source):
        """Sets the score_source of this CvssScoreDetails.


        :param score_source: The score_source of this CvssScoreDetails.
        :type score_source: str
        """

        self._score_source = score_source

    @property
    def scoring_vector(self):
        """Gets the scoring_vector of this CvssScoreDetails.


        :return: The scoring_vector of this CvssScoreDetails.
        :rtype: str
        """
        return self._scoring_vector

    @scoring_vector.setter
    def scoring_vector(self, scoring_vector):
        """Sets the scoring_vector of this CvssScoreDetails.


        :param scoring_vector: The scoring_vector of this CvssScoreDetails.
        :type scoring_vector: str
        """

        self._scoring_vector = scoring_vector

    @property
    def version(self):
        """Gets the version of this CvssScoreDetails.


        :return: The version of this CvssScoreDetails.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this CvssScoreDetails.


        :param version: The version of this CvssScoreDetails.
        :type version: str
        """

        self._version = version
