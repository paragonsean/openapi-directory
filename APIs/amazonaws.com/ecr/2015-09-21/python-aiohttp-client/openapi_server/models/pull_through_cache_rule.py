# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PullThroughCacheRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ecr_repository_prefix: str=None, upstream_registry_url: str=None, created_at: datetime=None, registry_id: str=None):
        """PullThroughCacheRule - a model defined in OpenAPI

        :param ecr_repository_prefix: The ecr_repository_prefix of this PullThroughCacheRule.
        :param upstream_registry_url: The upstream_registry_url of this PullThroughCacheRule.
        :param created_at: The created_at of this PullThroughCacheRule.
        :param registry_id: The registry_id of this PullThroughCacheRule.
        """
        self.openapi_types = {
            'ecr_repository_prefix': str,
            'upstream_registry_url': str,
            'created_at': datetime,
            'registry_id': str
        }

        self.attribute_map = {
            'ecr_repository_prefix': 'ecrRepositoryPrefix',
            'upstream_registry_url': 'upstreamRegistryUrl',
            'created_at': 'createdAt',
            'registry_id': 'registryId'
        }

        self._ecr_repository_prefix = ecr_repository_prefix
        self._upstream_registry_url = upstream_registry_url
        self._created_at = created_at
        self._registry_id = registry_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullThroughCacheRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PullThroughCacheRule of this PullThroughCacheRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ecr_repository_prefix(self):
        """Gets the ecr_repository_prefix of this PullThroughCacheRule.


        :return: The ecr_repository_prefix of this PullThroughCacheRule.
        :rtype: str
        """
        return self._ecr_repository_prefix

    @ecr_repository_prefix.setter
    def ecr_repository_prefix(self, ecr_repository_prefix):
        """Sets the ecr_repository_prefix of this PullThroughCacheRule.


        :param ecr_repository_prefix: The ecr_repository_prefix of this PullThroughCacheRule.
        :type ecr_repository_prefix: str
        """

        self._ecr_repository_prefix = ecr_repository_prefix

    @property
    def upstream_registry_url(self):
        """Gets the upstream_registry_url of this PullThroughCacheRule.


        :return: The upstream_registry_url of this PullThroughCacheRule.
        :rtype: str
        """
        return self._upstream_registry_url

    @upstream_registry_url.setter
    def upstream_registry_url(self, upstream_registry_url):
        """Sets the upstream_registry_url of this PullThroughCacheRule.


        :param upstream_registry_url: The upstream_registry_url of this PullThroughCacheRule.
        :type upstream_registry_url: str
        """

        self._upstream_registry_url = upstream_registry_url

    @property
    def created_at(self):
        """Gets the created_at of this PullThroughCacheRule.


        :return: The created_at of this PullThroughCacheRule.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PullThroughCacheRule.


        :param created_at: The created_at of this PullThroughCacheRule.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def registry_id(self):
        """Gets the registry_id of this PullThroughCacheRule.


        :return: The registry_id of this PullThroughCacheRule.
        :rtype: str
        """
        return self._registry_id

    @registry_id.setter
    def registry_id(self, registry_id):
        """Sets the registry_id of this PullThroughCacheRule.


        :param registry_id: The registry_id of this PullThroughCacheRule.
        :type registry_id: str
        """

        self._registry_id = registry_id
