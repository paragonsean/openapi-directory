# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_details import ResourceDetails
from openapi_server import util


class Resource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: ResourceDetails=None, id: str=None, tags: Dict=None, type: str=None):
        """Resource - a model defined in OpenAPI

        :param details: The details of this Resource.
        :param id: The id of this Resource.
        :param tags: The tags of this Resource.
        :param type: The type of this Resource.
        """
        self.openapi_types = {
            'details': ResourceDetails,
            'id': str,
            'tags': Dict,
            'type': str
        }

        self.attribute_map = {
            'details': 'details',
            'id': 'id',
            'tags': 'tags',
            'type': 'type'
        }

        self._details = details
        self._id = id
        self._tags = tags
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Resource of this Resource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this Resource.


        :return: The details of this Resource.
        :rtype: ResourceDetails
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this Resource.


        :param details: The details of this Resource.
        :type details: ResourceDetails
        """

        self._details = details

    @property
    def id(self):
        """Gets the id of this Resource.


        :return: The id of this Resource.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Resource.


        :param id: The id of this Resource.
        :type id: str
        """

        self._id = id

    @property
    def tags(self):
        """Gets the tags of this Resource.


        :return: The tags of this Resource.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Resource.


        :param tags: The tags of this Resource.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def type(self):
        """Gets the type of this Resource.


        :return: The type of this Resource.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Resource.


        :param type: The type of this Resource.
        :type type: str
        """

        self._type = type
