# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_lifecycle_policy_preview_response_summary import GetLifecyclePolicyPreviewResponseSummary
from openapi_server.models.lifecycle_policy_preview_status import LifecyclePolicyPreviewStatus
from openapi_server import util


class GetLifecyclePolicyPreviewResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registry_id: str=None, repository_name: str=None, lifecycle_policy_text: str=None, status: LifecyclePolicyPreviewStatus=None, next_token: str=None, preview_results: List=None, summary: GetLifecyclePolicyPreviewResponseSummary=None):
        """GetLifecyclePolicyPreviewResponse - a model defined in OpenAPI

        :param registry_id: The registry_id of this GetLifecyclePolicyPreviewResponse.
        :param repository_name: The repository_name of this GetLifecyclePolicyPreviewResponse.
        :param lifecycle_policy_text: The lifecycle_policy_text of this GetLifecyclePolicyPreviewResponse.
        :param status: The status of this GetLifecyclePolicyPreviewResponse.
        :param next_token: The next_token of this GetLifecyclePolicyPreviewResponse.
        :param preview_results: The preview_results of this GetLifecyclePolicyPreviewResponse.
        :param summary: The summary of this GetLifecyclePolicyPreviewResponse.
        """
        self.openapi_types = {
            'registry_id': str,
            'repository_name': str,
            'lifecycle_policy_text': str,
            'status': LifecyclePolicyPreviewStatus,
            'next_token': str,
            'preview_results': List,
            'summary': GetLifecyclePolicyPreviewResponseSummary
        }

        self.attribute_map = {
            'registry_id': 'registryId',
            'repository_name': 'repositoryName',
            'lifecycle_policy_text': 'lifecyclePolicyText',
            'status': 'status',
            'next_token': 'nextToken',
            'preview_results': 'previewResults',
            'summary': 'summary'
        }

        self._registry_id = registry_id
        self._repository_name = repository_name
        self._lifecycle_policy_text = lifecycle_policy_text
        self._status = status
        self._next_token = next_token
        self._preview_results = preview_results
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetLifecyclePolicyPreviewResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetLifecyclePolicyPreviewResponse of this GetLifecyclePolicyPreviewResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registry_id(self):
        """Gets the registry_id of this GetLifecyclePolicyPreviewResponse.


        :return: The registry_id of this GetLifecyclePolicyPreviewResponse.
        :rtype: str
        """
        return self._registry_id

    @registry_id.setter
    def registry_id(self, registry_id):
        """Sets the registry_id of this GetLifecyclePolicyPreviewResponse.


        :param registry_id: The registry_id of this GetLifecyclePolicyPreviewResponse.
        :type registry_id: str
        """

        self._registry_id = registry_id

    @property
    def repository_name(self):
        """Gets the repository_name of this GetLifecyclePolicyPreviewResponse.


        :return: The repository_name of this GetLifecyclePolicyPreviewResponse.
        :rtype: str
        """
        return self._repository_name

    @repository_name.setter
    def repository_name(self, repository_name):
        """Sets the repository_name of this GetLifecyclePolicyPreviewResponse.


        :param repository_name: The repository_name of this GetLifecyclePolicyPreviewResponse.
        :type repository_name: str
        """

        self._repository_name = repository_name

    @property
    def lifecycle_policy_text(self):
        """Gets the lifecycle_policy_text of this GetLifecyclePolicyPreviewResponse.


        :return: The lifecycle_policy_text of this GetLifecyclePolicyPreviewResponse.
        :rtype: str
        """
        return self._lifecycle_policy_text

    @lifecycle_policy_text.setter
    def lifecycle_policy_text(self, lifecycle_policy_text):
        """Sets the lifecycle_policy_text of this GetLifecyclePolicyPreviewResponse.


        :param lifecycle_policy_text: The lifecycle_policy_text of this GetLifecyclePolicyPreviewResponse.
        :type lifecycle_policy_text: str
        """

        self._lifecycle_policy_text = lifecycle_policy_text

    @property
    def status(self):
        """Gets the status of this GetLifecyclePolicyPreviewResponse.


        :return: The status of this GetLifecyclePolicyPreviewResponse.
        :rtype: LifecyclePolicyPreviewStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetLifecyclePolicyPreviewResponse.


        :param status: The status of this GetLifecyclePolicyPreviewResponse.
        :type status: LifecyclePolicyPreviewStatus
        """

        self._status = status

    @property
    def next_token(self):
        """Gets the next_token of this GetLifecyclePolicyPreviewResponse.


        :return: The next_token of this GetLifecyclePolicyPreviewResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetLifecyclePolicyPreviewResponse.


        :param next_token: The next_token of this GetLifecyclePolicyPreviewResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def preview_results(self):
        """Gets the preview_results of this GetLifecyclePolicyPreviewResponse.


        :return: The preview_results of this GetLifecyclePolicyPreviewResponse.
        :rtype: List
        """
        return self._preview_results

    @preview_results.setter
    def preview_results(self, preview_results):
        """Sets the preview_results of this GetLifecyclePolicyPreviewResponse.


        :param preview_results: The preview_results of this GetLifecyclePolicyPreviewResponse.
        :type preview_results: List
        """

        self._preview_results = preview_results

    @property
    def summary(self):
        """Gets the summary of this GetLifecyclePolicyPreviewResponse.


        :return: The summary of this GetLifecyclePolicyPreviewResponse.
        :rtype: GetLifecyclePolicyPreviewResponseSummary
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this GetLifecyclePolicyPreviewResponse.


        :param summary: The summary of this GetLifecyclePolicyPreviewResponse.
        :type summary: GetLifecyclePolicyPreviewResponseSummary
        """

        self._summary = summary
