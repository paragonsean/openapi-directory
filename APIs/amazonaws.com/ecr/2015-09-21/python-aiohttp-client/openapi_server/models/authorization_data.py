# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuthorizationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_token: str=None, expires_at: datetime=None, proxy_endpoint: str=None):
        """AuthorizationData - a model defined in OpenAPI

        :param authorization_token: The authorization_token of this AuthorizationData.
        :param expires_at: The expires_at of this AuthorizationData.
        :param proxy_endpoint: The proxy_endpoint of this AuthorizationData.
        """
        self.openapi_types = {
            'authorization_token': str,
            'expires_at': datetime,
            'proxy_endpoint': str
        }

        self.attribute_map = {
            'authorization_token': 'authorizationToken',
            'expires_at': 'expiresAt',
            'proxy_endpoint': 'proxyEndpoint'
        }

        self._authorization_token = authorization_token
        self._expires_at = expires_at
        self._proxy_endpoint = proxy_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthorizationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthorizationData of this AuthorizationData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_token(self):
        """Gets the authorization_token of this AuthorizationData.


        :return: The authorization_token of this AuthorizationData.
        :rtype: str
        """
        return self._authorization_token

    @authorization_token.setter
    def authorization_token(self, authorization_token):
        """Sets the authorization_token of this AuthorizationData.


        :param authorization_token: The authorization_token of this AuthorizationData.
        :type authorization_token: str
        """

        self._authorization_token = authorization_token

    @property
    def expires_at(self):
        """Gets the expires_at of this AuthorizationData.


        :return: The expires_at of this AuthorizationData.
        :rtype: datetime
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this AuthorizationData.


        :param expires_at: The expires_at of this AuthorizationData.
        :type expires_at: datetime
        """

        self._expires_at = expires_at

    @property
    def proxy_endpoint(self):
        """Gets the proxy_endpoint of this AuthorizationData.


        :return: The proxy_endpoint of this AuthorizationData.
        :rtype: str
        """
        return self._proxy_endpoint

    @proxy_endpoint.setter
    def proxy_endpoint(self, proxy_endpoint):
        """Sets the proxy_endpoint of this AuthorizationData.


        :param proxy_endpoint: The proxy_endpoint of this AuthorizationData.
        :type proxy_endpoint: str
        """

        self._proxy_endpoint = proxy_endpoint
