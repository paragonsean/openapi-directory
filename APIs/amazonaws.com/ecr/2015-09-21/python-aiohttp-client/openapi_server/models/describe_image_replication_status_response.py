# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_identifier import ImageIdentifier
from openapi_server import util


class DescribeImageReplicationStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, repository_name: str=None, image_id: ImageIdentifier=None, replication_statuses: List=None):
        """DescribeImageReplicationStatusResponse - a model defined in OpenAPI

        :param repository_name: The repository_name of this DescribeImageReplicationStatusResponse.
        :param image_id: The image_id of this DescribeImageReplicationStatusResponse.
        :param replication_statuses: The replication_statuses of this DescribeImageReplicationStatusResponse.
        """
        self.openapi_types = {
            'repository_name': str,
            'image_id': ImageIdentifier,
            'replication_statuses': List
        }

        self.attribute_map = {
            'repository_name': 'repositoryName',
            'image_id': 'imageId',
            'replication_statuses': 'replicationStatuses'
        }

        self._repository_name = repository_name
        self._image_id = image_id
        self._replication_statuses = replication_statuses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeImageReplicationStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeImageReplicationStatusResponse of this DescribeImageReplicationStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repository_name(self):
        """Gets the repository_name of this DescribeImageReplicationStatusResponse.


        :return: The repository_name of this DescribeImageReplicationStatusResponse.
        :rtype: str
        """
        return self._repository_name

    @repository_name.setter
    def repository_name(self, repository_name):
        """Sets the repository_name of this DescribeImageReplicationStatusResponse.


        :param repository_name: The repository_name of this DescribeImageReplicationStatusResponse.
        :type repository_name: str
        """

        self._repository_name = repository_name

    @property
    def image_id(self):
        """Gets the image_id of this DescribeImageReplicationStatusResponse.


        :return: The image_id of this DescribeImageReplicationStatusResponse.
        :rtype: ImageIdentifier
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this DescribeImageReplicationStatusResponse.


        :param image_id: The image_id of this DescribeImageReplicationStatusResponse.
        :type image_id: ImageIdentifier
        """

        self._image_id = image_id

    @property
    def replication_statuses(self):
        """Gets the replication_statuses of this DescribeImageReplicationStatusResponse.


        :return: The replication_statuses of this DescribeImageReplicationStatusResponse.
        :rtype: List
        """
        return self._replication_statuses

    @replication_statuses.setter
    def replication_statuses(self, replication_statuses):
        """Sets the replication_statuses of this DescribeImageReplicationStatusResponse.


        :param replication_statuses: The replication_statuses of this DescribeImageReplicationStatusResponse.
        :type replication_statuses: List
        """

        self._replication_statuses = replication_statuses
