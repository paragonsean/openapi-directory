# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag_status import TagStatus
from openapi_server import util


class ListImagesRequestFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tag_status: TagStatus=None):
        """ListImagesRequestFilter - a model defined in OpenAPI

        :param tag_status: The tag_status of this ListImagesRequestFilter.
        """
        self.openapi_types = {
            'tag_status': TagStatus
        }

        self.attribute_map = {
            'tag_status': 'tagStatus'
        }

        self._tag_status = tag_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListImagesRequestFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListImagesRequest_filter of this ListImagesRequestFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag_status(self):
        """Gets the tag_status of this ListImagesRequestFilter.


        :return: The tag_status of this ListImagesRequestFilter.
        :rtype: TagStatus
        """
        return self._tag_status

    @tag_status.setter
    def tag_status(self, tag_status):
        """Sets the tag_status of this ListImagesRequestFilter.


        :param tag_status: The tag_status of this ListImagesRequestFilter.
        :type tag_status: TagStatus
        """

        self._tag_status = tag_status
