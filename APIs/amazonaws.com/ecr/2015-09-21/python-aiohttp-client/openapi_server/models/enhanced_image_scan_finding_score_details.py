# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.score_details_cvss import ScoreDetailsCvss
from openapi_server import util


class EnhancedImageScanFindingScoreDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cvss: ScoreDetailsCvss=None):
        """EnhancedImageScanFindingScoreDetails - a model defined in OpenAPI

        :param cvss: The cvss of this EnhancedImageScanFindingScoreDetails.
        """
        self.openapi_types = {
            'cvss': ScoreDetailsCvss
        }

        self.attribute_map = {
            'cvss': 'cvss'
        }

        self._cvss = cvss

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnhancedImageScanFindingScoreDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnhancedImageScanFinding_scoreDetails of this EnhancedImageScanFindingScoreDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cvss(self):
        """Gets the cvss of this EnhancedImageScanFindingScoreDetails.


        :return: The cvss of this EnhancedImageScanFindingScoreDetails.
        :rtype: ScoreDetailsCvss
        """
        return self._cvss

    @cvss.setter
    def cvss(self, cvss):
        """Sets the cvss of this EnhancedImageScanFindingScoreDetails.


        :param cvss: The cvss of this EnhancedImageScanFindingScoreDetails.
        :type cvss: ScoreDetailsCvss
        """

        self._cvss = cvss
