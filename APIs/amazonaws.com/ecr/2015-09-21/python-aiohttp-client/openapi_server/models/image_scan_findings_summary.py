# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageScanFindingsSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_scan_completed_at: datetime=None, vulnerability_source_updated_at: datetime=None, finding_severity_counts: Dict=None):
        """ImageScanFindingsSummary - a model defined in OpenAPI

        :param image_scan_completed_at: The image_scan_completed_at of this ImageScanFindingsSummary.
        :param vulnerability_source_updated_at: The vulnerability_source_updated_at of this ImageScanFindingsSummary.
        :param finding_severity_counts: The finding_severity_counts of this ImageScanFindingsSummary.
        """
        self.openapi_types = {
            'image_scan_completed_at': datetime,
            'vulnerability_source_updated_at': datetime,
            'finding_severity_counts': Dict
        }

        self.attribute_map = {
            'image_scan_completed_at': 'imageScanCompletedAt',
            'vulnerability_source_updated_at': 'vulnerabilitySourceUpdatedAt',
            'finding_severity_counts': 'findingSeverityCounts'
        }

        self._image_scan_completed_at = image_scan_completed_at
        self._vulnerability_source_updated_at = vulnerability_source_updated_at
        self._finding_severity_counts = finding_severity_counts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageScanFindingsSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageScanFindingsSummary of this ImageScanFindingsSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_scan_completed_at(self):
        """Gets the image_scan_completed_at of this ImageScanFindingsSummary.


        :return: The image_scan_completed_at of this ImageScanFindingsSummary.
        :rtype: datetime
        """
        return self._image_scan_completed_at

    @image_scan_completed_at.setter
    def image_scan_completed_at(self, image_scan_completed_at):
        """Sets the image_scan_completed_at of this ImageScanFindingsSummary.


        :param image_scan_completed_at: The image_scan_completed_at of this ImageScanFindingsSummary.
        :type image_scan_completed_at: datetime
        """

        self._image_scan_completed_at = image_scan_completed_at

    @property
    def vulnerability_source_updated_at(self):
        """Gets the vulnerability_source_updated_at of this ImageScanFindingsSummary.


        :return: The vulnerability_source_updated_at of this ImageScanFindingsSummary.
        :rtype: datetime
        """
        return self._vulnerability_source_updated_at

    @vulnerability_source_updated_at.setter
    def vulnerability_source_updated_at(self, vulnerability_source_updated_at):
        """Sets the vulnerability_source_updated_at of this ImageScanFindingsSummary.


        :param vulnerability_source_updated_at: The vulnerability_source_updated_at of this ImageScanFindingsSummary.
        :type vulnerability_source_updated_at: datetime
        """

        self._vulnerability_source_updated_at = vulnerability_source_updated_at

    @property
    def finding_severity_counts(self):
        """Gets the finding_severity_counts of this ImageScanFindingsSummary.


        :return: The finding_severity_counts of this ImageScanFindingsSummary.
        :rtype: Dict
        """
        return self._finding_severity_counts

    @finding_severity_counts.setter
    def finding_severity_counts(self, finding_severity_counts):
        """Sets the finding_severity_counts of this ImageScanFindingsSummary.


        :param finding_severity_counts: The finding_severity_counts of this ImageScanFindingsSummary.
        :type finding_severity_counts: Dict
        """

        self._finding_severity_counts = finding_severity_counts
