# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_image_scan_findings_response_image_scan_status import DescribeImageScanFindingsResponseImageScanStatus
from openapi_server.models.image_identifier import ImageIdentifier
from openapi_server import util


class StartImageScanResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registry_id: str=None, repository_name: str=None, image_id: ImageIdentifier=None, image_scan_status: DescribeImageScanFindingsResponseImageScanStatus=None):
        """StartImageScanResponse - a model defined in OpenAPI

        :param registry_id: The registry_id of this StartImageScanResponse.
        :param repository_name: The repository_name of this StartImageScanResponse.
        :param image_id: The image_id of this StartImageScanResponse.
        :param image_scan_status: The image_scan_status of this StartImageScanResponse.
        """
        self.openapi_types = {
            'registry_id': str,
            'repository_name': str,
            'image_id': ImageIdentifier,
            'image_scan_status': DescribeImageScanFindingsResponseImageScanStatus
        }

        self.attribute_map = {
            'registry_id': 'registryId',
            'repository_name': 'repositoryName',
            'image_id': 'imageId',
            'image_scan_status': 'imageScanStatus'
        }

        self._registry_id = registry_id
        self._repository_name = repository_name
        self._image_id = image_id
        self._image_scan_status = image_scan_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartImageScanResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartImageScanResponse of this StartImageScanResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registry_id(self):
        """Gets the registry_id of this StartImageScanResponse.


        :return: The registry_id of this StartImageScanResponse.
        :rtype: str
        """
        return self._registry_id

    @registry_id.setter
    def registry_id(self, registry_id):
        """Sets the registry_id of this StartImageScanResponse.


        :param registry_id: The registry_id of this StartImageScanResponse.
        :type registry_id: str
        """

        self._registry_id = registry_id

    @property
    def repository_name(self):
        """Gets the repository_name of this StartImageScanResponse.


        :return: The repository_name of this StartImageScanResponse.
        :rtype: str
        """
        return self._repository_name

    @repository_name.setter
    def repository_name(self, repository_name):
        """Sets the repository_name of this StartImageScanResponse.


        :param repository_name: The repository_name of this StartImageScanResponse.
        :type repository_name: str
        """

        self._repository_name = repository_name

    @property
    def image_id(self):
        """Gets the image_id of this StartImageScanResponse.


        :return: The image_id of this StartImageScanResponse.
        :rtype: ImageIdentifier
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this StartImageScanResponse.


        :param image_id: The image_id of this StartImageScanResponse.
        :type image_id: ImageIdentifier
        """

        self._image_id = image_id

    @property
    def image_scan_status(self):
        """Gets the image_scan_status of this StartImageScanResponse.


        :return: The image_scan_status of this StartImageScanResponse.
        :rtype: DescribeImageScanFindingsResponseImageScanStatus
        """
        return self._image_scan_status

    @image_scan_status.setter
    def image_scan_status(self, image_scan_status):
        """Sets the image_scan_status of this StartImageScanResponse.


        :param image_scan_status: The image_scan_status of this StartImageScanResponse.
        :type image_scan_status: DescribeImageScanFindingsResponseImageScanStatus
        """

        self._image_scan_status = image_scan_status
