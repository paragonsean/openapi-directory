# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LifecyclePolicyPreviewSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiring_image_total_count: int=None):
        """LifecyclePolicyPreviewSummary - a model defined in OpenAPI

        :param expiring_image_total_count: The expiring_image_total_count of this LifecyclePolicyPreviewSummary.
        """
        self.openapi_types = {
            'expiring_image_total_count': int
        }

        self.attribute_map = {
            'expiring_image_total_count': 'expiringImageTotalCount'
        }

        self._expiring_image_total_count = expiring_image_total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LifecyclePolicyPreviewSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LifecyclePolicyPreviewSummary of this LifecyclePolicyPreviewSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiring_image_total_count(self):
        """Gets the expiring_image_total_count of this LifecyclePolicyPreviewSummary.


        :return: The expiring_image_total_count of this LifecyclePolicyPreviewSummary.
        :rtype: int
        """
        return self._expiring_image_total_count

    @expiring_image_total_count.setter
    def expiring_image_total_count(self, expiring_image_total_count):
        """Sets the expiring_image_total_count of this LifecyclePolicyPreviewSummary.


        :param expiring_image_total_count: The expiring_image_total_count of this LifecyclePolicyPreviewSummary.
        :type expiring_image_total_count: int
        """

        self._expiring_image_total_count = expiring_image_total_count
