/**
 * Amazon EC2 Container Registry
 * <fullname>Amazon Elastic Container Registry</fullname> <p>Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.</p> <p>Amazon ECR has service endpoints in each supported Region. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ecr.html\">Amazon ECR endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2015-09-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnhancedImageScanFindingPackageVulnerabilityDetails from './EnhancedImageScanFindingPackageVulnerabilityDetails';
import EnhancedImageScanFindingRemediation from './EnhancedImageScanFindingRemediation';
import EnhancedImageScanFindingScoreDetails from './EnhancedImageScanFindingScoreDetails';

/**
 * The EnhancedImageScanFinding model module.
 * @module model/EnhancedImageScanFinding
 * @version 2015-09-21
 */
class EnhancedImageScanFinding {
    /**
     * Constructs a new <code>EnhancedImageScanFinding</code>.
     * The details of an enhanced image scan. This is returned when enhanced scanning is enabled for your private registry.
     * @alias module:model/EnhancedImageScanFinding
     */
    constructor() { 
        
        EnhancedImageScanFinding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnhancedImageScanFinding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnhancedImageScanFinding} obj Optional instance to populate.
     * @return {module:model/EnhancedImageScanFinding} The populated <code>EnhancedImageScanFinding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnhancedImageScanFinding();

            if (data.hasOwnProperty('awsAccountId')) {
                obj['awsAccountId'] = ApiClient.convertToType(data['awsAccountId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('findingArn')) {
                obj['findingArn'] = ApiClient.convertToType(data['findingArn'], 'String');
            }
            if (data.hasOwnProperty('firstObservedAt')) {
                obj['firstObservedAt'] = ApiClient.convertToType(data['firstObservedAt'], 'Date');
            }
            if (data.hasOwnProperty('lastObservedAt')) {
                obj['lastObservedAt'] = ApiClient.convertToType(data['lastObservedAt'], 'Date');
            }
            if (data.hasOwnProperty('packageVulnerabilityDetails')) {
                obj['packageVulnerabilityDetails'] = EnhancedImageScanFindingPackageVulnerabilityDetails.constructFromObject(data['packageVulnerabilityDetails']);
            }
            if (data.hasOwnProperty('remediation')) {
                obj['remediation'] = EnhancedImageScanFindingRemediation.constructFromObject(data['remediation']);
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], Array);
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('scoreDetails')) {
                obj['scoreDetails'] = EnhancedImageScanFindingScoreDetails.constructFromObject(data['scoreDetails']);
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnhancedImageScanFinding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnhancedImageScanFinding</code>.
     */
    static validateJSON(data) {
        // validate the optional field `awsAccountId`
        if (data['awsAccountId']) { // data not null
          String.validateJSON(data['awsAccountId']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `findingArn`
        if (data['findingArn']) { // data not null
          String.validateJSON(data['findingArn']);
        }
        // validate the optional field `firstObservedAt`
        if (data['firstObservedAt']) { // data not null
          Date.validateJSON(data['firstObservedAt']);
        }
        // validate the optional field `lastObservedAt`
        if (data['lastObservedAt']) { // data not null
          Date.validateJSON(data['lastObservedAt']);
        }
        // validate the optional field `packageVulnerabilityDetails`
        if (data['packageVulnerabilityDetails']) { // data not null
          EnhancedImageScanFindingPackageVulnerabilityDetails.validateJSON(data['packageVulnerabilityDetails']);
        }
        // validate the optional field `remediation`
        if (data['remediation']) { // data not null
          EnhancedImageScanFindingRemediation.validateJSON(data['remediation']);
        }
        // validate the optional field `resources`
        if (data['resources']) { // data not null
          Array.validateJSON(data['resources']);
        }
        // validate the optional field `score`
        if (data['score']) { // data not null
          Number.validateJSON(data['score']);
        }
        // validate the optional field `scoreDetails`
        if (data['scoreDetails']) { // data not null
          EnhancedImageScanFindingScoreDetails.validateJSON(data['scoreDetails']);
        }
        // validate the optional field `severity`
        if (data['severity']) { // data not null
          String.validateJSON(data['severity']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          String.validateJSON(data['status']);
        }
        // validate the optional field `title`
        if (data['title']) { // data not null
          String.validateJSON(data['title']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          String.validateJSON(data['type']);
        }
        // validate the optional field `updatedAt`
        if (data['updatedAt']) { // data not null
          Date.validateJSON(data['updatedAt']);
        }

        return true;
    }


}



/**
 * @member {String} awsAccountId
 */
EnhancedImageScanFinding.prototype['awsAccountId'] = undefined;

/**
 * @member {String} description
 */
EnhancedImageScanFinding.prototype['description'] = undefined;

/**
 * @member {String} findingArn
 */
EnhancedImageScanFinding.prototype['findingArn'] = undefined;

/**
 * @member {Date} firstObservedAt
 */
EnhancedImageScanFinding.prototype['firstObservedAt'] = undefined;

/**
 * @member {Date} lastObservedAt
 */
EnhancedImageScanFinding.prototype['lastObservedAt'] = undefined;

/**
 * @member {module:model/EnhancedImageScanFindingPackageVulnerabilityDetails} packageVulnerabilityDetails
 */
EnhancedImageScanFinding.prototype['packageVulnerabilityDetails'] = undefined;

/**
 * @member {module:model/EnhancedImageScanFindingRemediation} remediation
 */
EnhancedImageScanFinding.prototype['remediation'] = undefined;

/**
 * @member {Array} resources
 */
EnhancedImageScanFinding.prototype['resources'] = undefined;

/**
 * @member {Number} score
 */
EnhancedImageScanFinding.prototype['score'] = undefined;

/**
 * @member {module:model/EnhancedImageScanFindingScoreDetails} scoreDetails
 */
EnhancedImageScanFinding.prototype['scoreDetails'] = undefined;

/**
 * @member {String} severity
 */
EnhancedImageScanFinding.prototype['severity'] = undefined;

/**
 * @member {String} status
 */
EnhancedImageScanFinding.prototype['status'] = undefined;

/**
 * @member {String} title
 */
EnhancedImageScanFinding.prototype['title'] = undefined;

/**
 * @member {String} type
 */
EnhancedImageScanFinding.prototype['type'] = undefined;

/**
 * @member {Date} updatedAt
 */
EnhancedImageScanFinding.prototype['updatedAt'] = undefined;






export default EnhancedImageScanFinding;

