/**
 * Amazon EC2 Container Registry
 * <fullname>Amazon Elastic Container Registry</fullname> <p>Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.</p> <p>Amazon ECR has service endpoints in each supported Region. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ecr.html\">Amazon ECR endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2015-09-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScanFrequency from './ScanFrequency';

/**
 * The RegistryScanningRule model module.
 * @module model/RegistryScanningRule
 * @version 2015-09-21
 */
class RegistryScanningRule {
    /**
     * Constructs a new <code>RegistryScanningRule</code>.
     * The details of a scanning rule for a private registry.
     * @alias module:model/RegistryScanningRule
     * @param scanFrequency {module:model/ScanFrequency} 
     * @param repositoryFilters {Array} 
     */
    constructor(scanFrequency, repositoryFilters) { 
        
        RegistryScanningRule.initialize(this, scanFrequency, repositoryFilters);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, scanFrequency, repositoryFilters) { 
        obj['scanFrequency'] = scanFrequency;
        obj['repositoryFilters'] = repositoryFilters;
    }

    /**
     * Constructs a <code>RegistryScanningRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegistryScanningRule} obj Optional instance to populate.
     * @return {module:model/RegistryScanningRule} The populated <code>RegistryScanningRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegistryScanningRule();

            if (data.hasOwnProperty('scanFrequency')) {
                obj['scanFrequency'] = ApiClient.convertToType(data['scanFrequency'], ScanFrequency);
            }
            if (data.hasOwnProperty('repositoryFilters')) {
                obj['repositoryFilters'] = ApiClient.convertToType(data['repositoryFilters'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegistryScanningRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegistryScanningRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RegistryScanningRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `scanFrequency`
        if (data['scanFrequency']) { // data not null
          ScanFrequency.validateJSON(data['scanFrequency']);
        }
        // validate the optional field `repositoryFilters`
        if (data['repositoryFilters']) { // data not null
          Array.validateJSON(data['repositoryFilters']);
        }

        return true;
    }


}

RegistryScanningRule.RequiredProperties = ["scanFrequency", "repositoryFilters"];

/**
 * @member {module:model/ScanFrequency} scanFrequency
 */
RegistryScanningRule.prototype['scanFrequency'] = undefined;

/**
 * @member {Array} repositoryFilters
 */
RegistryScanningRule.prototype['repositoryFilters'] = undefined;






export default RegistryScanningRule;

