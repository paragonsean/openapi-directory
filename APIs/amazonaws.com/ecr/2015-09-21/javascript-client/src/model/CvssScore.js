/**
 * Amazon EC2 Container Registry
 * <fullname>Amazon Elastic Container Registry</fullname> <p>Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.</p> <p>Amazon ECR has service endpoints in each supported Region. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ecr.html\">Amazon ECR endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2015-09-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CvssScore model module.
 * @module model/CvssScore
 * @version 2015-09-21
 */
class CvssScore {
    /**
     * Constructs a new <code>CvssScore</code>.
     * The CVSS score for a finding.
     * @alias module:model/CvssScore
     */
    constructor() { 
        
        CvssScore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CvssScore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CvssScore} obj Optional instance to populate.
     * @return {module:model/CvssScore} The populated <code>CvssScore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CvssScore();

            if (data.hasOwnProperty('baseScore')) {
                obj['baseScore'] = ApiClient.convertToType(data['baseScore'], 'Number');
            }
            if (data.hasOwnProperty('scoringVector')) {
                obj['scoringVector'] = ApiClient.convertToType(data['scoringVector'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CvssScore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CvssScore</code>.
     */
    static validateJSON(data) {
        // validate the optional field `baseScore`
        if (data['baseScore']) { // data not null
          Number.validateJSON(data['baseScore']);
        }
        // validate the optional field `scoringVector`
        if (data['scoringVector']) { // data not null
          String.validateJSON(data['scoringVector']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          String.validateJSON(data['source']);
        }
        // validate the optional field `version`
        if (data['version']) { // data not null
          String.validateJSON(data['version']);
        }

        return true;
    }


}



/**
 * @member {Number} baseScore
 */
CvssScore.prototype['baseScore'] = undefined;

/**
 * @member {String} scoringVector
 */
CvssScore.prototype['scoringVector'] = undefined;

/**
 * @member {String} source
 */
CvssScore.prototype['source'] = undefined;

/**
 * @member {String} version
 */
CvssScore.prototype['version'] = undefined;






export default CvssScore;

