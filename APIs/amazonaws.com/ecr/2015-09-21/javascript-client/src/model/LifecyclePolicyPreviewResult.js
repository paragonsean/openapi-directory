/**
 * Amazon EC2 Container Registry
 * <fullname>Amazon Elastic Container Registry</fullname> <p>Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.</p> <p>Amazon ECR has service endpoints in each supported Region. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ecr.html\">Amazon ECR endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2015-09-21
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LifecyclePolicyPreviewResultAction from './LifecyclePolicyPreviewResultAction';

/**
 * The LifecyclePolicyPreviewResult model module.
 * @module model/LifecyclePolicyPreviewResult
 * @version 2015-09-21
 */
class LifecyclePolicyPreviewResult {
    /**
     * Constructs a new <code>LifecyclePolicyPreviewResult</code>.
     * The result of the lifecycle policy preview.
     * @alias module:model/LifecyclePolicyPreviewResult
     */
    constructor() { 
        
        LifecyclePolicyPreviewResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LifecyclePolicyPreviewResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LifecyclePolicyPreviewResult} obj Optional instance to populate.
     * @return {module:model/LifecyclePolicyPreviewResult} The populated <code>LifecyclePolicyPreviewResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LifecyclePolicyPreviewResult();

            if (data.hasOwnProperty('imageTags')) {
                obj['imageTags'] = ApiClient.convertToType(data['imageTags'], Array);
            }
            if (data.hasOwnProperty('imageDigest')) {
                obj['imageDigest'] = ApiClient.convertToType(data['imageDigest'], 'String');
            }
            if (data.hasOwnProperty('imagePushedAt')) {
                obj['imagePushedAt'] = ApiClient.convertToType(data['imagePushedAt'], 'Date');
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = LifecyclePolicyPreviewResultAction.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('appliedRulePriority')) {
                obj['appliedRulePriority'] = ApiClient.convertToType(data['appliedRulePriority'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LifecyclePolicyPreviewResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LifecyclePolicyPreviewResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `imageTags`
        if (data['imageTags']) { // data not null
          Array.validateJSON(data['imageTags']);
        }
        // validate the optional field `imageDigest`
        if (data['imageDigest']) { // data not null
          String.validateJSON(data['imageDigest']);
        }
        // validate the optional field `imagePushedAt`
        if (data['imagePushedAt']) { // data not null
          Date.validateJSON(data['imagePushedAt']);
        }
        // validate the optional field `action`
        if (data['action']) { // data not null
          LifecyclePolicyPreviewResultAction.validateJSON(data['action']);
        }
        // validate the optional field `appliedRulePriority`
        if (data['appliedRulePriority']) { // data not null
          Number.validateJSON(data['appliedRulePriority']);
        }

        return true;
    }


}



/**
 * @member {Array} imageTags
 */
LifecyclePolicyPreviewResult.prototype['imageTags'] = undefined;

/**
 * @member {String} imageDigest
 */
LifecyclePolicyPreviewResult.prototype['imageDigest'] = undefined;

/**
 * @member {Date} imagePushedAt
 */
LifecyclePolicyPreviewResult.prototype['imagePushedAt'] = undefined;

/**
 * @member {module:model/LifecyclePolicyPreviewResultAction} action
 */
LifecyclePolicyPreviewResult.prototype['action'] = undefined;

/**
 * @member {Number} appliedRulePriority
 */
LifecyclePolicyPreviewResult.prototype['appliedRulePriority'] = undefined;






export default LifecyclePolicyPreviewResult;

