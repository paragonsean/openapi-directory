/*
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DeleteFileSystemLustreResponse;
import org.openapitools.client.model.DeleteFileSystemResponseOpenZFSResponse;
import org.openapitools.client.model.DeleteFileSystemWindowsResponse;
import org.openapitools.client.model.FileSystemLifecycle;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The response object for the &lt;code&gt;DeleteFileSystem&lt;/code&gt; operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:01.724479-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeleteFileSystemResponse {
  public static final String SERIALIZED_NAME_FILE_SYSTEM_ID = "FileSystemId";
  @SerializedName(SERIALIZED_NAME_FILE_SYSTEM_ID)
  private String fileSystemId;

  public static final String SERIALIZED_NAME_LIFECYCLE = "Lifecycle";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE)
  private FileSystemLifecycle lifecycle;

  public static final String SERIALIZED_NAME_WINDOWS_RESPONSE = "WindowsResponse";
  @SerializedName(SERIALIZED_NAME_WINDOWS_RESPONSE)
  private DeleteFileSystemWindowsResponse windowsResponse;

  public static final String SERIALIZED_NAME_LUSTRE_RESPONSE = "LustreResponse";
  @SerializedName(SERIALIZED_NAME_LUSTRE_RESPONSE)
  private DeleteFileSystemLustreResponse lustreResponse;

  public static final String SERIALIZED_NAME_OPEN_Z_F_S_RESPONSE = "OpenZFSResponse";
  @SerializedName(SERIALIZED_NAME_OPEN_Z_F_S_RESPONSE)
  private DeleteFileSystemResponseOpenZFSResponse openZFSResponse;

  public DeleteFileSystemResponse() {
  }

  public DeleteFileSystemResponse fileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
    return this;
  }

  /**
   * Get fileSystemId
   * @return fileSystemId
   */
  @javax.annotation.Nullable
  public String getFileSystemId() {
    return fileSystemId;
  }

  public void setFileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
  }


  public DeleteFileSystemResponse lifecycle(FileSystemLifecycle lifecycle) {
    this.lifecycle = lifecycle;
    return this;
  }

  /**
   * Get lifecycle
   * @return lifecycle
   */
  @javax.annotation.Nullable
  public FileSystemLifecycle getLifecycle() {
    return lifecycle;
  }

  public void setLifecycle(FileSystemLifecycle lifecycle) {
    this.lifecycle = lifecycle;
  }


  public DeleteFileSystemResponse windowsResponse(DeleteFileSystemWindowsResponse windowsResponse) {
    this.windowsResponse = windowsResponse;
    return this;
  }

  /**
   * Get windowsResponse
   * @return windowsResponse
   */
  @javax.annotation.Nullable
  public DeleteFileSystemWindowsResponse getWindowsResponse() {
    return windowsResponse;
  }

  public void setWindowsResponse(DeleteFileSystemWindowsResponse windowsResponse) {
    this.windowsResponse = windowsResponse;
  }


  public DeleteFileSystemResponse lustreResponse(DeleteFileSystemLustreResponse lustreResponse) {
    this.lustreResponse = lustreResponse;
    return this;
  }

  /**
   * Get lustreResponse
   * @return lustreResponse
   */
  @javax.annotation.Nullable
  public DeleteFileSystemLustreResponse getLustreResponse() {
    return lustreResponse;
  }

  public void setLustreResponse(DeleteFileSystemLustreResponse lustreResponse) {
    this.lustreResponse = lustreResponse;
  }


  public DeleteFileSystemResponse openZFSResponse(DeleteFileSystemResponseOpenZFSResponse openZFSResponse) {
    this.openZFSResponse = openZFSResponse;
    return this;
  }

  /**
   * Get openZFSResponse
   * @return openZFSResponse
   */
  @javax.annotation.Nullable
  public DeleteFileSystemResponseOpenZFSResponse getOpenZFSResponse() {
    return openZFSResponse;
  }

  public void setOpenZFSResponse(DeleteFileSystemResponseOpenZFSResponse openZFSResponse) {
    this.openZFSResponse = openZFSResponse;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteFileSystemResponse deleteFileSystemResponse = (DeleteFileSystemResponse) o;
    return Objects.equals(this.fileSystemId, deleteFileSystemResponse.fileSystemId) &&
        Objects.equals(this.lifecycle, deleteFileSystemResponse.lifecycle) &&
        Objects.equals(this.windowsResponse, deleteFileSystemResponse.windowsResponse) &&
        Objects.equals(this.lustreResponse, deleteFileSystemResponse.lustreResponse) &&
        Objects.equals(this.openZFSResponse, deleteFileSystemResponse.openZFSResponse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileSystemId, lifecycle, windowsResponse, lustreResponse, openZFSResponse);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteFileSystemResponse {\n");
    sb.append("    fileSystemId: ").append(toIndentedString(fileSystemId)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("    windowsResponse: ").append(toIndentedString(windowsResponse)).append("\n");
    sb.append("    lustreResponse: ").append(toIndentedString(lustreResponse)).append("\n");
    sb.append("    openZFSResponse: ").append(toIndentedString(openZFSResponse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FileSystemId");
    openapiFields.add("Lifecycle");
    openapiFields.add("WindowsResponse");
    openapiFields.add("LustreResponse");
    openapiFields.add("OpenZFSResponse");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteFileSystemResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteFileSystemResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteFileSystemResponse is not found in the empty JSON string", DeleteFileSystemResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteFileSystemResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteFileSystemResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `FileSystemId`
      if (jsonObj.get("FileSystemId") != null && !jsonObj.get("FileSystemId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FileSystemId"));
      }
      // validate the optional field `Lifecycle`
      if (jsonObj.get("Lifecycle") != null && !jsonObj.get("Lifecycle").isJsonNull()) {
        FileSystemLifecycle.validateJsonElement(jsonObj.get("Lifecycle"));
      }
      // validate the optional field `WindowsResponse`
      if (jsonObj.get("WindowsResponse") != null && !jsonObj.get("WindowsResponse").isJsonNull()) {
        DeleteFileSystemWindowsResponse.validateJsonElement(jsonObj.get("WindowsResponse"));
      }
      // validate the optional field `LustreResponse`
      if (jsonObj.get("LustreResponse") != null && !jsonObj.get("LustreResponse").isJsonNull()) {
        DeleteFileSystemLustreResponse.validateJsonElement(jsonObj.get("LustreResponse"));
      }
      // validate the optional field `OpenZFSResponse`
      if (jsonObj.get("OpenZFSResponse") != null && !jsonObj.get("OpenZFSResponse").isJsonNull()) {
        DeleteFileSystemResponseOpenZFSResponse.validateJsonElement(jsonObj.get("OpenZFSResponse"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteFileSystemResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteFileSystemResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteFileSystemResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteFileSystemResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteFileSystemResponse>() {
           @Override
           public void write(JsonWriter out, DeleteFileSystemResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteFileSystemResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteFileSystemResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteFileSystemResponse
   * @throws IOException if the JSON string is invalid with respect to DeleteFileSystemResponse
   */
  public static DeleteFileSystemResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteFileSystemResponse.class);
  }

  /**
   * Convert an instance of DeleteFileSystemResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

