/*
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateOntapVolumeConfigurationSnaplockConfiguration;
import org.openapitools.client.model.InputOntapVolumeType;
import org.openapitools.client.model.SecurityStyle;
import org.openapitools.client.model.TieringPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateVolumeFromBackupRequestOntapConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:01.724479-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateVolumeFromBackupRequestOntapConfiguration {
  public static final String SERIALIZED_NAME_JUNCTION_PATH = "JunctionPath";
  @SerializedName(SERIALIZED_NAME_JUNCTION_PATH)
  private String junctionPath;

  public static final String SERIALIZED_NAME_SECURITY_STYLE = "SecurityStyle";
  @SerializedName(SERIALIZED_NAME_SECURITY_STYLE)
  private SecurityStyle securityStyle;

  public static final String SERIALIZED_NAME_SIZE_IN_MEGABYTES = "SizeInMegabytes";
  @SerializedName(SERIALIZED_NAME_SIZE_IN_MEGABYTES)
  private Integer sizeInMegabytes;

  public static final String SERIALIZED_NAME_STORAGE_EFFICIENCY_ENABLED = "StorageEfficiencyEnabled";
  @SerializedName(SERIALIZED_NAME_STORAGE_EFFICIENCY_ENABLED)
  private Boolean storageEfficiencyEnabled;

  public static final String SERIALIZED_NAME_STORAGE_VIRTUAL_MACHINE_ID = "StorageVirtualMachineId";
  @SerializedName(SERIALIZED_NAME_STORAGE_VIRTUAL_MACHINE_ID)
  private String storageVirtualMachineId;

  public static final String SERIALIZED_NAME_TIERING_POLICY = "TieringPolicy";
  @SerializedName(SERIALIZED_NAME_TIERING_POLICY)
  private TieringPolicy tieringPolicy;

  public static final String SERIALIZED_NAME_ONTAP_VOLUME_TYPE = "OntapVolumeType";
  @SerializedName(SERIALIZED_NAME_ONTAP_VOLUME_TYPE)
  private InputOntapVolumeType ontapVolumeType;

  public static final String SERIALIZED_NAME_SNAPSHOT_POLICY = "SnapshotPolicy";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_POLICY)
  private String snapshotPolicy;

  public static final String SERIALIZED_NAME_COPY_TAGS_TO_BACKUPS = "CopyTagsToBackups";
  @SerializedName(SERIALIZED_NAME_COPY_TAGS_TO_BACKUPS)
  private Boolean copyTagsToBackups;

  public static final String SERIALIZED_NAME_SNAPLOCK_CONFIGURATION = "SnaplockConfiguration";
  @SerializedName(SERIALIZED_NAME_SNAPLOCK_CONFIGURATION)
  private CreateOntapVolumeConfigurationSnaplockConfiguration snaplockConfiguration;

  public CreateVolumeFromBackupRequestOntapConfiguration() {
  }

  public CreateVolumeFromBackupRequestOntapConfiguration junctionPath(String junctionPath) {
    this.junctionPath = junctionPath;
    return this;
  }

  /**
   * Get junctionPath
   * @return junctionPath
   */
  @javax.annotation.Nullable
  public String getJunctionPath() {
    return junctionPath;
  }

  public void setJunctionPath(String junctionPath) {
    this.junctionPath = junctionPath;
  }


  public CreateVolumeFromBackupRequestOntapConfiguration securityStyle(SecurityStyle securityStyle) {
    this.securityStyle = securityStyle;
    return this;
  }

  /**
   * Get securityStyle
   * @return securityStyle
   */
  @javax.annotation.Nullable
  public SecurityStyle getSecurityStyle() {
    return securityStyle;
  }

  public void setSecurityStyle(SecurityStyle securityStyle) {
    this.securityStyle = securityStyle;
  }


  public CreateVolumeFromBackupRequestOntapConfiguration sizeInMegabytes(Integer sizeInMegabytes) {
    this.sizeInMegabytes = sizeInMegabytes;
    return this;
  }

  /**
   * Get sizeInMegabytes
   * @return sizeInMegabytes
   */
  @javax.annotation.Nonnull
  public Integer getSizeInMegabytes() {
    return sizeInMegabytes;
  }

  public void setSizeInMegabytes(Integer sizeInMegabytes) {
    this.sizeInMegabytes = sizeInMegabytes;
  }


  public CreateVolumeFromBackupRequestOntapConfiguration storageEfficiencyEnabled(Boolean storageEfficiencyEnabled) {
    this.storageEfficiencyEnabled = storageEfficiencyEnabled;
    return this;
  }

  /**
   * Get storageEfficiencyEnabled
   * @return storageEfficiencyEnabled
   */
  @javax.annotation.Nullable
  public Boolean getStorageEfficiencyEnabled() {
    return storageEfficiencyEnabled;
  }

  public void setStorageEfficiencyEnabled(Boolean storageEfficiencyEnabled) {
    this.storageEfficiencyEnabled = storageEfficiencyEnabled;
  }


  public CreateVolumeFromBackupRequestOntapConfiguration storageVirtualMachineId(String storageVirtualMachineId) {
    this.storageVirtualMachineId = storageVirtualMachineId;
    return this;
  }

  /**
   * Get storageVirtualMachineId
   * @return storageVirtualMachineId
   */
  @javax.annotation.Nonnull
  public String getStorageVirtualMachineId() {
    return storageVirtualMachineId;
  }

  public void setStorageVirtualMachineId(String storageVirtualMachineId) {
    this.storageVirtualMachineId = storageVirtualMachineId;
  }


  public CreateVolumeFromBackupRequestOntapConfiguration tieringPolicy(TieringPolicy tieringPolicy) {
    this.tieringPolicy = tieringPolicy;
    return this;
  }

  /**
   * Get tieringPolicy
   * @return tieringPolicy
   */
  @javax.annotation.Nullable
  public TieringPolicy getTieringPolicy() {
    return tieringPolicy;
  }

  public void setTieringPolicy(TieringPolicy tieringPolicy) {
    this.tieringPolicy = tieringPolicy;
  }


  public CreateVolumeFromBackupRequestOntapConfiguration ontapVolumeType(InputOntapVolumeType ontapVolumeType) {
    this.ontapVolumeType = ontapVolumeType;
    return this;
  }

  /**
   * Get ontapVolumeType
   * @return ontapVolumeType
   */
  @javax.annotation.Nullable
  public InputOntapVolumeType getOntapVolumeType() {
    return ontapVolumeType;
  }

  public void setOntapVolumeType(InputOntapVolumeType ontapVolumeType) {
    this.ontapVolumeType = ontapVolumeType;
  }


  public CreateVolumeFromBackupRequestOntapConfiguration snapshotPolicy(String snapshotPolicy) {
    this.snapshotPolicy = snapshotPolicy;
    return this;
  }

  /**
   * Get snapshotPolicy
   * @return snapshotPolicy
   */
  @javax.annotation.Nullable
  public String getSnapshotPolicy() {
    return snapshotPolicy;
  }

  public void setSnapshotPolicy(String snapshotPolicy) {
    this.snapshotPolicy = snapshotPolicy;
  }


  public CreateVolumeFromBackupRequestOntapConfiguration copyTagsToBackups(Boolean copyTagsToBackups) {
    this.copyTagsToBackups = copyTagsToBackups;
    return this;
  }

  /**
   * Get copyTagsToBackups
   * @return copyTagsToBackups
   */
  @javax.annotation.Nullable
  public Boolean getCopyTagsToBackups() {
    return copyTagsToBackups;
  }

  public void setCopyTagsToBackups(Boolean copyTagsToBackups) {
    this.copyTagsToBackups = copyTagsToBackups;
  }


  public CreateVolumeFromBackupRequestOntapConfiguration snaplockConfiguration(CreateOntapVolumeConfigurationSnaplockConfiguration snaplockConfiguration) {
    this.snaplockConfiguration = snaplockConfiguration;
    return this;
  }

  /**
   * Get snaplockConfiguration
   * @return snaplockConfiguration
   */
  @javax.annotation.Nullable
  public CreateOntapVolumeConfigurationSnaplockConfiguration getSnaplockConfiguration() {
    return snaplockConfiguration;
  }

  public void setSnaplockConfiguration(CreateOntapVolumeConfigurationSnaplockConfiguration snaplockConfiguration) {
    this.snaplockConfiguration = snaplockConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateVolumeFromBackupRequestOntapConfiguration createVolumeFromBackupRequestOntapConfiguration = (CreateVolumeFromBackupRequestOntapConfiguration) o;
    return Objects.equals(this.junctionPath, createVolumeFromBackupRequestOntapConfiguration.junctionPath) &&
        Objects.equals(this.securityStyle, createVolumeFromBackupRequestOntapConfiguration.securityStyle) &&
        Objects.equals(this.sizeInMegabytes, createVolumeFromBackupRequestOntapConfiguration.sizeInMegabytes) &&
        Objects.equals(this.storageEfficiencyEnabled, createVolumeFromBackupRequestOntapConfiguration.storageEfficiencyEnabled) &&
        Objects.equals(this.storageVirtualMachineId, createVolumeFromBackupRequestOntapConfiguration.storageVirtualMachineId) &&
        Objects.equals(this.tieringPolicy, createVolumeFromBackupRequestOntapConfiguration.tieringPolicy) &&
        Objects.equals(this.ontapVolumeType, createVolumeFromBackupRequestOntapConfiguration.ontapVolumeType) &&
        Objects.equals(this.snapshotPolicy, createVolumeFromBackupRequestOntapConfiguration.snapshotPolicy) &&
        Objects.equals(this.copyTagsToBackups, createVolumeFromBackupRequestOntapConfiguration.copyTagsToBackups) &&
        Objects.equals(this.snaplockConfiguration, createVolumeFromBackupRequestOntapConfiguration.snaplockConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(junctionPath, securityStyle, sizeInMegabytes, storageEfficiencyEnabled, storageVirtualMachineId, tieringPolicy, ontapVolumeType, snapshotPolicy, copyTagsToBackups, snaplockConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateVolumeFromBackupRequestOntapConfiguration {\n");
    sb.append("    junctionPath: ").append(toIndentedString(junctionPath)).append("\n");
    sb.append("    securityStyle: ").append(toIndentedString(securityStyle)).append("\n");
    sb.append("    sizeInMegabytes: ").append(toIndentedString(sizeInMegabytes)).append("\n");
    sb.append("    storageEfficiencyEnabled: ").append(toIndentedString(storageEfficiencyEnabled)).append("\n");
    sb.append("    storageVirtualMachineId: ").append(toIndentedString(storageVirtualMachineId)).append("\n");
    sb.append("    tieringPolicy: ").append(toIndentedString(tieringPolicy)).append("\n");
    sb.append("    ontapVolumeType: ").append(toIndentedString(ontapVolumeType)).append("\n");
    sb.append("    snapshotPolicy: ").append(toIndentedString(snapshotPolicy)).append("\n");
    sb.append("    copyTagsToBackups: ").append(toIndentedString(copyTagsToBackups)).append("\n");
    sb.append("    snaplockConfiguration: ").append(toIndentedString(snaplockConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("JunctionPath");
    openapiFields.add("SecurityStyle");
    openapiFields.add("SizeInMegabytes");
    openapiFields.add("StorageEfficiencyEnabled");
    openapiFields.add("StorageVirtualMachineId");
    openapiFields.add("TieringPolicy");
    openapiFields.add("OntapVolumeType");
    openapiFields.add("SnapshotPolicy");
    openapiFields.add("CopyTagsToBackups");
    openapiFields.add("SnaplockConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("SizeInMegabytes");
    openapiRequiredFields.add("StorageVirtualMachineId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateVolumeFromBackupRequestOntapConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateVolumeFromBackupRequestOntapConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateVolumeFromBackupRequestOntapConfiguration is not found in the empty JSON string", CreateVolumeFromBackupRequestOntapConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateVolumeFromBackupRequestOntapConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateVolumeFromBackupRequestOntapConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateVolumeFromBackupRequestOntapConfiguration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `JunctionPath`
      if (jsonObj.get("JunctionPath") != null && !jsonObj.get("JunctionPath").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("JunctionPath"));
      }
      // validate the optional field `SecurityStyle`
      if (jsonObj.get("SecurityStyle") != null && !jsonObj.get("SecurityStyle").isJsonNull()) {
        SecurityStyle.validateJsonElement(jsonObj.get("SecurityStyle"));
      }
      // validate the required field `SizeInMegabytes`
      Integer.validateJsonElement(jsonObj.get("SizeInMegabytes"));
      // validate the optional field `StorageEfficiencyEnabled`
      if (jsonObj.get("StorageEfficiencyEnabled") != null && !jsonObj.get("StorageEfficiencyEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("StorageEfficiencyEnabled"));
      }
      // validate the required field `StorageVirtualMachineId`
      String.validateJsonElement(jsonObj.get("StorageVirtualMachineId"));
      // validate the optional field `TieringPolicy`
      if (jsonObj.get("TieringPolicy") != null && !jsonObj.get("TieringPolicy").isJsonNull()) {
        TieringPolicy.validateJsonElement(jsonObj.get("TieringPolicy"));
      }
      // validate the optional field `OntapVolumeType`
      if (jsonObj.get("OntapVolumeType") != null && !jsonObj.get("OntapVolumeType").isJsonNull()) {
        InputOntapVolumeType.validateJsonElement(jsonObj.get("OntapVolumeType"));
      }
      // validate the optional field `SnapshotPolicy`
      if (jsonObj.get("SnapshotPolicy") != null && !jsonObj.get("SnapshotPolicy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotPolicy"));
      }
      // validate the optional field `CopyTagsToBackups`
      if (jsonObj.get("CopyTagsToBackups") != null && !jsonObj.get("CopyTagsToBackups").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CopyTagsToBackups"));
      }
      // validate the optional field `SnaplockConfiguration`
      if (jsonObj.get("SnaplockConfiguration") != null && !jsonObj.get("SnaplockConfiguration").isJsonNull()) {
        CreateOntapVolumeConfigurationSnaplockConfiguration.validateJsonElement(jsonObj.get("SnaplockConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateVolumeFromBackupRequestOntapConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateVolumeFromBackupRequestOntapConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateVolumeFromBackupRequestOntapConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateVolumeFromBackupRequestOntapConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateVolumeFromBackupRequestOntapConfiguration>() {
           @Override
           public void write(JsonWriter out, CreateVolumeFromBackupRequestOntapConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateVolumeFromBackupRequestOntapConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateVolumeFromBackupRequestOntapConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateVolumeFromBackupRequestOntapConfiguration
   * @throws IOException if the JSON string is invalid with respect to CreateVolumeFromBackupRequestOntapConfiguration
   */
  public static CreateVolumeFromBackupRequestOntapConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateVolumeFromBackupRequestOntapConfiguration.class);
  }

  /**
   * Convert an instance of CreateVolumeFromBackupRequestOntapConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

