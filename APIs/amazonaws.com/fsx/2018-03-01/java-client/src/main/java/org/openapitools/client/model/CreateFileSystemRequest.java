/*
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateFileSystemLustreConfiguration;
import org.openapitools.client.model.CreateFileSystemOntapConfiguration;
import org.openapitools.client.model.CreateFileSystemRequestOpenZFSConfiguration;
import org.openapitools.client.model.CreateFileSystemRequestWindowsConfiguration;
import org.openapitools.client.model.FileSystemType;
import org.openapitools.client.model.StorageType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The request object used to create a new Amazon FSx file system.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:01.724479-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateFileSystemRequest {
  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "ClientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_FILE_SYSTEM_TYPE = "FileSystemType";
  @SerializedName(SERIALIZED_NAME_FILE_SYSTEM_TYPE)
  private FileSystemType fileSystemType;

  public static final String SERIALIZED_NAME_STORAGE_CAPACITY = "StorageCapacity";
  @SerializedName(SERIALIZED_NAME_STORAGE_CAPACITY)
  private Integer storageCapacity;

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "StorageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private StorageType storageType;

  public static final String SERIALIZED_NAME_SUBNET_IDS = "SubnetIds";
  @SerializedName(SERIALIZED_NAME_SUBNET_IDS)
  private List subnetIds;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_WINDOWS_CONFIGURATION = "WindowsConfiguration";
  @SerializedName(SERIALIZED_NAME_WINDOWS_CONFIGURATION)
  private CreateFileSystemRequestWindowsConfiguration windowsConfiguration;

  public static final String SERIALIZED_NAME_LUSTRE_CONFIGURATION = "LustreConfiguration";
  @SerializedName(SERIALIZED_NAME_LUSTRE_CONFIGURATION)
  private CreateFileSystemLustreConfiguration lustreConfiguration;

  public static final String SERIALIZED_NAME_ONTAP_CONFIGURATION = "OntapConfiguration";
  @SerializedName(SERIALIZED_NAME_ONTAP_CONFIGURATION)
  private CreateFileSystemOntapConfiguration ontapConfiguration;

  public static final String SERIALIZED_NAME_FILE_SYSTEM_TYPE_VERSION = "FileSystemTypeVersion";
  @SerializedName(SERIALIZED_NAME_FILE_SYSTEM_TYPE_VERSION)
  private String fileSystemTypeVersion;

  public static final String SERIALIZED_NAME_OPEN_Z_F_S_CONFIGURATION = "OpenZFSConfiguration";
  @SerializedName(SERIALIZED_NAME_OPEN_Z_F_S_CONFIGURATION)
  private CreateFileSystemRequestOpenZFSConfiguration openZFSConfiguration;

  public CreateFileSystemRequest() {
  }

  public CreateFileSystemRequest clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Get clientRequestToken
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public CreateFileSystemRequest fileSystemType(FileSystemType fileSystemType) {
    this.fileSystemType = fileSystemType;
    return this;
  }

  /**
   * Get fileSystemType
   * @return fileSystemType
   */
  @javax.annotation.Nonnull
  public FileSystemType getFileSystemType() {
    return fileSystemType;
  }

  public void setFileSystemType(FileSystemType fileSystemType) {
    this.fileSystemType = fileSystemType;
  }


  public CreateFileSystemRequest storageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
    return this;
  }

  /**
   * Get storageCapacity
   * @return storageCapacity
   */
  @javax.annotation.Nonnull
  public Integer getStorageCapacity() {
    return storageCapacity;
  }

  public void setStorageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
  }


  public CreateFileSystemRequest storageType(StorageType storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nullable
  public StorageType getStorageType() {
    return storageType;
  }

  public void setStorageType(StorageType storageType) {
    this.storageType = storageType;
  }


  public CreateFileSystemRequest subnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  /**
   * Get subnetIds
   * @return subnetIds
   */
  @javax.annotation.Nonnull
  public List getSubnetIds() {
    return subnetIds;
  }

  public void setSubnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
  }


  public CreateFileSystemRequest securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public CreateFileSystemRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateFileSystemRequest kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * &lt;p&gt;Specifies the ID of the Key Management Service (KMS) key to use for encrypting data on Amazon FSx file systems, as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Amazon FSx for Lustre &lt;code&gt;PERSISTENT_1&lt;/code&gt; and &lt;code&gt;PERSISTENT_2&lt;/code&gt; deployment types only.&lt;/p&gt; &lt;p&gt; &lt;code&gt;SCRATCH_1&lt;/code&gt; and &lt;code&gt;SCRATCH_2&lt;/code&gt; types are encrypted using the Amazon FSx service KMS key for your account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon FSx for NetApp ONTAP&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon FSx for OpenZFS&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon FSx for Windows File Server&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If a &lt;code&gt;KmsKeyId&lt;/code&gt; isn&#39;t specified, the Amazon FSx-managed KMS key for your account is used. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html\&quot;&gt;Encrypt&lt;/a&gt; in the &lt;i&gt;Key Management Service API Reference&lt;/i&gt;.&lt;/p&gt;
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public CreateFileSystemRequest windowsConfiguration(CreateFileSystemRequestWindowsConfiguration windowsConfiguration) {
    this.windowsConfiguration = windowsConfiguration;
    return this;
  }

  /**
   * Get windowsConfiguration
   * @return windowsConfiguration
   */
  @javax.annotation.Nullable
  public CreateFileSystemRequestWindowsConfiguration getWindowsConfiguration() {
    return windowsConfiguration;
  }

  public void setWindowsConfiguration(CreateFileSystemRequestWindowsConfiguration windowsConfiguration) {
    this.windowsConfiguration = windowsConfiguration;
  }


  public CreateFileSystemRequest lustreConfiguration(CreateFileSystemLustreConfiguration lustreConfiguration) {
    this.lustreConfiguration = lustreConfiguration;
    return this;
  }

  /**
   * Get lustreConfiguration
   * @return lustreConfiguration
   */
  @javax.annotation.Nullable
  public CreateFileSystemLustreConfiguration getLustreConfiguration() {
    return lustreConfiguration;
  }

  public void setLustreConfiguration(CreateFileSystemLustreConfiguration lustreConfiguration) {
    this.lustreConfiguration = lustreConfiguration;
  }


  public CreateFileSystemRequest ontapConfiguration(CreateFileSystemOntapConfiguration ontapConfiguration) {
    this.ontapConfiguration = ontapConfiguration;
    return this;
  }

  /**
   * Get ontapConfiguration
   * @return ontapConfiguration
   */
  @javax.annotation.Nullable
  public CreateFileSystemOntapConfiguration getOntapConfiguration() {
    return ontapConfiguration;
  }

  public void setOntapConfiguration(CreateFileSystemOntapConfiguration ontapConfiguration) {
    this.ontapConfiguration = ontapConfiguration;
  }


  public CreateFileSystemRequest fileSystemTypeVersion(String fileSystemTypeVersion) {
    this.fileSystemTypeVersion = fileSystemTypeVersion;
    return this;
  }

  /**
   * Get fileSystemTypeVersion
   * @return fileSystemTypeVersion
   */
  @javax.annotation.Nullable
  public String getFileSystemTypeVersion() {
    return fileSystemTypeVersion;
  }

  public void setFileSystemTypeVersion(String fileSystemTypeVersion) {
    this.fileSystemTypeVersion = fileSystemTypeVersion;
  }


  public CreateFileSystemRequest openZFSConfiguration(CreateFileSystemRequestOpenZFSConfiguration openZFSConfiguration) {
    this.openZFSConfiguration = openZFSConfiguration;
    return this;
  }

  /**
   * Get openZFSConfiguration
   * @return openZFSConfiguration
   */
  @javax.annotation.Nullable
  public CreateFileSystemRequestOpenZFSConfiguration getOpenZFSConfiguration() {
    return openZFSConfiguration;
  }

  public void setOpenZFSConfiguration(CreateFileSystemRequestOpenZFSConfiguration openZFSConfiguration) {
    this.openZFSConfiguration = openZFSConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFileSystemRequest createFileSystemRequest = (CreateFileSystemRequest) o;
    return Objects.equals(this.clientRequestToken, createFileSystemRequest.clientRequestToken) &&
        Objects.equals(this.fileSystemType, createFileSystemRequest.fileSystemType) &&
        Objects.equals(this.storageCapacity, createFileSystemRequest.storageCapacity) &&
        Objects.equals(this.storageType, createFileSystemRequest.storageType) &&
        Objects.equals(this.subnetIds, createFileSystemRequest.subnetIds) &&
        Objects.equals(this.securityGroupIds, createFileSystemRequest.securityGroupIds) &&
        Objects.equals(this.tags, createFileSystemRequest.tags) &&
        Objects.equals(this.kmsKeyId, createFileSystemRequest.kmsKeyId) &&
        Objects.equals(this.windowsConfiguration, createFileSystemRequest.windowsConfiguration) &&
        Objects.equals(this.lustreConfiguration, createFileSystemRequest.lustreConfiguration) &&
        Objects.equals(this.ontapConfiguration, createFileSystemRequest.ontapConfiguration) &&
        Objects.equals(this.fileSystemTypeVersion, createFileSystemRequest.fileSystemTypeVersion) &&
        Objects.equals(this.openZFSConfiguration, createFileSystemRequest.openZFSConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientRequestToken, fileSystemType, storageCapacity, storageType, subnetIds, securityGroupIds, tags, kmsKeyId, windowsConfiguration, lustreConfiguration, ontapConfiguration, fileSystemTypeVersion, openZFSConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFileSystemRequest {\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    fileSystemType: ").append(toIndentedString(fileSystemType)).append("\n");
    sb.append("    storageCapacity: ").append(toIndentedString(storageCapacity)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    windowsConfiguration: ").append(toIndentedString(windowsConfiguration)).append("\n");
    sb.append("    lustreConfiguration: ").append(toIndentedString(lustreConfiguration)).append("\n");
    sb.append("    ontapConfiguration: ").append(toIndentedString(ontapConfiguration)).append("\n");
    sb.append("    fileSystemTypeVersion: ").append(toIndentedString(fileSystemTypeVersion)).append("\n");
    sb.append("    openZFSConfiguration: ").append(toIndentedString(openZFSConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClientRequestToken");
    openapiFields.add("FileSystemType");
    openapiFields.add("StorageCapacity");
    openapiFields.add("StorageType");
    openapiFields.add("SubnetIds");
    openapiFields.add("SecurityGroupIds");
    openapiFields.add("Tags");
    openapiFields.add("KmsKeyId");
    openapiFields.add("WindowsConfiguration");
    openapiFields.add("LustreConfiguration");
    openapiFields.add("OntapConfiguration");
    openapiFields.add("FileSystemTypeVersion");
    openapiFields.add("OpenZFSConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("FileSystemType");
    openapiRequiredFields.add("StorageCapacity");
    openapiRequiredFields.add("SubnetIds");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateFileSystemRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateFileSystemRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateFileSystemRequest is not found in the empty JSON string", CreateFileSystemRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateFileSystemRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateFileSystemRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateFileSystemRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ClientRequestToken`
      if (jsonObj.get("ClientRequestToken") != null && !jsonObj.get("ClientRequestToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClientRequestToken"));
      }
      // validate the required field `FileSystemType`
      FileSystemType.validateJsonElement(jsonObj.get("FileSystemType"));
      // validate the required field `StorageCapacity`
      Integer.validateJsonElement(jsonObj.get("StorageCapacity"));
      // validate the optional field `StorageType`
      if (jsonObj.get("StorageType") != null && !jsonObj.get("StorageType").isJsonNull()) {
        StorageType.validateJsonElement(jsonObj.get("StorageType"));
      }
      // validate the required field `SubnetIds`
      List.validateJsonElement(jsonObj.get("SubnetIds"));
      // validate the optional field `SecurityGroupIds`
      if (jsonObj.get("SecurityGroupIds") != null && !jsonObj.get("SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroupIds"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      if ((jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) && !jsonObj.get("KmsKeyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KmsKeyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KmsKeyId").toString()));
      }
      // validate the optional field `WindowsConfiguration`
      if (jsonObj.get("WindowsConfiguration") != null && !jsonObj.get("WindowsConfiguration").isJsonNull()) {
        CreateFileSystemRequestWindowsConfiguration.validateJsonElement(jsonObj.get("WindowsConfiguration"));
      }
      // validate the optional field `LustreConfiguration`
      if (jsonObj.get("LustreConfiguration") != null && !jsonObj.get("LustreConfiguration").isJsonNull()) {
        CreateFileSystemLustreConfiguration.validateJsonElement(jsonObj.get("LustreConfiguration"));
      }
      // validate the optional field `OntapConfiguration`
      if (jsonObj.get("OntapConfiguration") != null && !jsonObj.get("OntapConfiguration").isJsonNull()) {
        CreateFileSystemOntapConfiguration.validateJsonElement(jsonObj.get("OntapConfiguration"));
      }
      // validate the optional field `FileSystemTypeVersion`
      if (jsonObj.get("FileSystemTypeVersion") != null && !jsonObj.get("FileSystemTypeVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FileSystemTypeVersion"));
      }
      // validate the optional field `OpenZFSConfiguration`
      if (jsonObj.get("OpenZFSConfiguration") != null && !jsonObj.get("OpenZFSConfiguration").isJsonNull()) {
        CreateFileSystemRequestOpenZFSConfiguration.validateJsonElement(jsonObj.get("OpenZFSConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateFileSystemRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateFileSystemRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateFileSystemRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateFileSystemRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateFileSystemRequest>() {
           @Override
           public void write(JsonWriter out, CreateFileSystemRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateFileSystemRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateFileSystemRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateFileSystemRequest
   * @throws IOException if the JSON string is invalid with respect to CreateFileSystemRequest
   */
  public static CreateFileSystemRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateFileSystemRequest.class);
  }

  /**
   * Convert an instance of CreateFileSystemRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

