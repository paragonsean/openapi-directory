/*
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.SecurityStyle;
import org.openapitools.client.model.UpdateOntapVolumeConfigurationSnaplockConfiguration;
import org.openapitools.client.model.UpdateOntapVolumeConfigurationTieringPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateVolumeRequestOntapConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:01.724479-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateVolumeRequestOntapConfiguration {
  public static final String SERIALIZED_NAME_JUNCTION_PATH = "JunctionPath";
  @SerializedName(SERIALIZED_NAME_JUNCTION_PATH)
  private String junctionPath;

  public static final String SERIALIZED_NAME_SECURITY_STYLE = "SecurityStyle";
  @SerializedName(SERIALIZED_NAME_SECURITY_STYLE)
  private SecurityStyle securityStyle;

  public static final String SERIALIZED_NAME_SIZE_IN_MEGABYTES = "SizeInMegabytes";
  @SerializedName(SERIALIZED_NAME_SIZE_IN_MEGABYTES)
  private Integer sizeInMegabytes;

  public static final String SERIALIZED_NAME_STORAGE_EFFICIENCY_ENABLED = "StorageEfficiencyEnabled";
  @SerializedName(SERIALIZED_NAME_STORAGE_EFFICIENCY_ENABLED)
  private Boolean storageEfficiencyEnabled;

  public static final String SERIALIZED_NAME_TIERING_POLICY = "TieringPolicy";
  @SerializedName(SERIALIZED_NAME_TIERING_POLICY)
  private UpdateOntapVolumeConfigurationTieringPolicy tieringPolicy;

  public static final String SERIALIZED_NAME_SNAPSHOT_POLICY = "SnapshotPolicy";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_POLICY)
  private String snapshotPolicy;

  public static final String SERIALIZED_NAME_COPY_TAGS_TO_BACKUPS = "CopyTagsToBackups";
  @SerializedName(SERIALIZED_NAME_COPY_TAGS_TO_BACKUPS)
  private Boolean copyTagsToBackups;

  public static final String SERIALIZED_NAME_SNAPLOCK_CONFIGURATION = "SnaplockConfiguration";
  @SerializedName(SERIALIZED_NAME_SNAPLOCK_CONFIGURATION)
  private UpdateOntapVolumeConfigurationSnaplockConfiguration snaplockConfiguration;

  public UpdateVolumeRequestOntapConfiguration() {
  }

  public UpdateVolumeRequestOntapConfiguration junctionPath(String junctionPath) {
    this.junctionPath = junctionPath;
    return this;
  }

  /**
   * Get junctionPath
   * @return junctionPath
   */
  @javax.annotation.Nullable
  public String getJunctionPath() {
    return junctionPath;
  }

  public void setJunctionPath(String junctionPath) {
    this.junctionPath = junctionPath;
  }


  public UpdateVolumeRequestOntapConfiguration securityStyle(SecurityStyle securityStyle) {
    this.securityStyle = securityStyle;
    return this;
  }

  /**
   * Get securityStyle
   * @return securityStyle
   */
  @javax.annotation.Nullable
  public SecurityStyle getSecurityStyle() {
    return securityStyle;
  }

  public void setSecurityStyle(SecurityStyle securityStyle) {
    this.securityStyle = securityStyle;
  }


  public UpdateVolumeRequestOntapConfiguration sizeInMegabytes(Integer sizeInMegabytes) {
    this.sizeInMegabytes = sizeInMegabytes;
    return this;
  }

  /**
   * Get sizeInMegabytes
   * @return sizeInMegabytes
   */
  @javax.annotation.Nullable
  public Integer getSizeInMegabytes() {
    return sizeInMegabytes;
  }

  public void setSizeInMegabytes(Integer sizeInMegabytes) {
    this.sizeInMegabytes = sizeInMegabytes;
  }


  public UpdateVolumeRequestOntapConfiguration storageEfficiencyEnabled(Boolean storageEfficiencyEnabled) {
    this.storageEfficiencyEnabled = storageEfficiencyEnabled;
    return this;
  }

  /**
   * Get storageEfficiencyEnabled
   * @return storageEfficiencyEnabled
   */
  @javax.annotation.Nullable
  public Boolean getStorageEfficiencyEnabled() {
    return storageEfficiencyEnabled;
  }

  public void setStorageEfficiencyEnabled(Boolean storageEfficiencyEnabled) {
    this.storageEfficiencyEnabled = storageEfficiencyEnabled;
  }


  public UpdateVolumeRequestOntapConfiguration tieringPolicy(UpdateOntapVolumeConfigurationTieringPolicy tieringPolicy) {
    this.tieringPolicy = tieringPolicy;
    return this;
  }

  /**
   * Get tieringPolicy
   * @return tieringPolicy
   */
  @javax.annotation.Nullable
  public UpdateOntapVolumeConfigurationTieringPolicy getTieringPolicy() {
    return tieringPolicy;
  }

  public void setTieringPolicy(UpdateOntapVolumeConfigurationTieringPolicy tieringPolicy) {
    this.tieringPolicy = tieringPolicy;
  }


  public UpdateVolumeRequestOntapConfiguration snapshotPolicy(String snapshotPolicy) {
    this.snapshotPolicy = snapshotPolicy;
    return this;
  }

  /**
   * Get snapshotPolicy
   * @return snapshotPolicy
   */
  @javax.annotation.Nullable
  public String getSnapshotPolicy() {
    return snapshotPolicy;
  }

  public void setSnapshotPolicy(String snapshotPolicy) {
    this.snapshotPolicy = snapshotPolicy;
  }


  public UpdateVolumeRequestOntapConfiguration copyTagsToBackups(Boolean copyTagsToBackups) {
    this.copyTagsToBackups = copyTagsToBackups;
    return this;
  }

  /**
   * Get copyTagsToBackups
   * @return copyTagsToBackups
   */
  @javax.annotation.Nullable
  public Boolean getCopyTagsToBackups() {
    return copyTagsToBackups;
  }

  public void setCopyTagsToBackups(Boolean copyTagsToBackups) {
    this.copyTagsToBackups = copyTagsToBackups;
  }


  public UpdateVolumeRequestOntapConfiguration snaplockConfiguration(UpdateOntapVolumeConfigurationSnaplockConfiguration snaplockConfiguration) {
    this.snaplockConfiguration = snaplockConfiguration;
    return this;
  }

  /**
   * Get snaplockConfiguration
   * @return snaplockConfiguration
   */
  @javax.annotation.Nullable
  public UpdateOntapVolumeConfigurationSnaplockConfiguration getSnaplockConfiguration() {
    return snaplockConfiguration;
  }

  public void setSnaplockConfiguration(UpdateOntapVolumeConfigurationSnaplockConfiguration snaplockConfiguration) {
    this.snaplockConfiguration = snaplockConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateVolumeRequestOntapConfiguration updateVolumeRequestOntapConfiguration = (UpdateVolumeRequestOntapConfiguration) o;
    return Objects.equals(this.junctionPath, updateVolumeRequestOntapConfiguration.junctionPath) &&
        Objects.equals(this.securityStyle, updateVolumeRequestOntapConfiguration.securityStyle) &&
        Objects.equals(this.sizeInMegabytes, updateVolumeRequestOntapConfiguration.sizeInMegabytes) &&
        Objects.equals(this.storageEfficiencyEnabled, updateVolumeRequestOntapConfiguration.storageEfficiencyEnabled) &&
        Objects.equals(this.tieringPolicy, updateVolumeRequestOntapConfiguration.tieringPolicy) &&
        Objects.equals(this.snapshotPolicy, updateVolumeRequestOntapConfiguration.snapshotPolicy) &&
        Objects.equals(this.copyTagsToBackups, updateVolumeRequestOntapConfiguration.copyTagsToBackups) &&
        Objects.equals(this.snaplockConfiguration, updateVolumeRequestOntapConfiguration.snaplockConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(junctionPath, securityStyle, sizeInMegabytes, storageEfficiencyEnabled, tieringPolicy, snapshotPolicy, copyTagsToBackups, snaplockConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateVolumeRequestOntapConfiguration {\n");
    sb.append("    junctionPath: ").append(toIndentedString(junctionPath)).append("\n");
    sb.append("    securityStyle: ").append(toIndentedString(securityStyle)).append("\n");
    sb.append("    sizeInMegabytes: ").append(toIndentedString(sizeInMegabytes)).append("\n");
    sb.append("    storageEfficiencyEnabled: ").append(toIndentedString(storageEfficiencyEnabled)).append("\n");
    sb.append("    tieringPolicy: ").append(toIndentedString(tieringPolicy)).append("\n");
    sb.append("    snapshotPolicy: ").append(toIndentedString(snapshotPolicy)).append("\n");
    sb.append("    copyTagsToBackups: ").append(toIndentedString(copyTagsToBackups)).append("\n");
    sb.append("    snaplockConfiguration: ").append(toIndentedString(snaplockConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("JunctionPath");
    openapiFields.add("SecurityStyle");
    openapiFields.add("SizeInMegabytes");
    openapiFields.add("StorageEfficiencyEnabled");
    openapiFields.add("TieringPolicy");
    openapiFields.add("SnapshotPolicy");
    openapiFields.add("CopyTagsToBackups");
    openapiFields.add("SnaplockConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateVolumeRequestOntapConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateVolumeRequestOntapConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateVolumeRequestOntapConfiguration is not found in the empty JSON string", UpdateVolumeRequestOntapConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateVolumeRequestOntapConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateVolumeRequestOntapConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `JunctionPath`
      if (jsonObj.get("JunctionPath") != null && !jsonObj.get("JunctionPath").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("JunctionPath"));
      }
      // validate the optional field `SecurityStyle`
      if (jsonObj.get("SecurityStyle") != null && !jsonObj.get("SecurityStyle").isJsonNull()) {
        SecurityStyle.validateJsonElement(jsonObj.get("SecurityStyle"));
      }
      // validate the optional field `SizeInMegabytes`
      if (jsonObj.get("SizeInMegabytes") != null && !jsonObj.get("SizeInMegabytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SizeInMegabytes"));
      }
      // validate the optional field `StorageEfficiencyEnabled`
      if (jsonObj.get("StorageEfficiencyEnabled") != null && !jsonObj.get("StorageEfficiencyEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("StorageEfficiencyEnabled"));
      }
      // validate the optional field `TieringPolicy`
      if (jsonObj.get("TieringPolicy") != null && !jsonObj.get("TieringPolicy").isJsonNull()) {
        UpdateOntapVolumeConfigurationTieringPolicy.validateJsonElement(jsonObj.get("TieringPolicy"));
      }
      // validate the optional field `SnapshotPolicy`
      if (jsonObj.get("SnapshotPolicy") != null && !jsonObj.get("SnapshotPolicy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotPolicy"));
      }
      // validate the optional field `CopyTagsToBackups`
      if (jsonObj.get("CopyTagsToBackups") != null && !jsonObj.get("CopyTagsToBackups").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CopyTagsToBackups"));
      }
      // validate the optional field `SnaplockConfiguration`
      if (jsonObj.get("SnaplockConfiguration") != null && !jsonObj.get("SnaplockConfiguration").isJsonNull()) {
        UpdateOntapVolumeConfigurationSnaplockConfiguration.validateJsonElement(jsonObj.get("SnaplockConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateVolumeRequestOntapConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateVolumeRequestOntapConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateVolumeRequestOntapConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateVolumeRequestOntapConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateVolumeRequestOntapConfiguration>() {
           @Override
           public void write(JsonWriter out, UpdateVolumeRequestOntapConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateVolumeRequestOntapConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateVolumeRequestOntapConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateVolumeRequestOntapConfiguration
   * @throws IOException if the JSON string is invalid with respect to UpdateVolumeRequestOntapConfiguration
   */
  public static UpdateVolumeRequestOntapConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateVolumeRequestOntapConfiguration.class);
  }

  /**
   * Convert an instance of UpdateVolumeRequestOntapConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

