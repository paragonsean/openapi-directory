/*
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FileSystemFailureDetails;
import org.openapitools.client.model.FileSystemLifecycle;
import org.openapitools.client.model.FileSystemOntapConfiguration;
import org.openapitools.client.model.FileSystemOpenZFSConfiguration;
import org.openapitools.client.model.FileSystemType;
import org.openapitools.client.model.FileSystemWindowsConfiguration;
import org.openapitools.client.model.LustreFileSystemConfiguration;
import org.openapitools.client.model.StorageType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BackupFileSystem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:01.724479-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BackupFileSystem {
  public static final String SERIALIZED_NAME_OWNER_ID = "OwnerId";
  @SerializedName(SERIALIZED_NAME_OWNER_ID)
  private String ownerId;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_FILE_SYSTEM_ID = "FileSystemId";
  @SerializedName(SERIALIZED_NAME_FILE_SYSTEM_ID)
  private String fileSystemId;

  public static final String SERIALIZED_NAME_FILE_SYSTEM_TYPE = "FileSystemType";
  @SerializedName(SERIALIZED_NAME_FILE_SYSTEM_TYPE)
  private FileSystemType fileSystemType;

  public static final String SERIALIZED_NAME_LIFECYCLE = "Lifecycle";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE)
  private FileSystemLifecycle lifecycle;

  public static final String SERIALIZED_NAME_FAILURE_DETAILS = "FailureDetails";
  @SerializedName(SERIALIZED_NAME_FAILURE_DETAILS)
  private FileSystemFailureDetails failureDetails;

  public static final String SERIALIZED_NAME_STORAGE_CAPACITY = "StorageCapacity";
  @SerializedName(SERIALIZED_NAME_STORAGE_CAPACITY)
  private Integer storageCapacity;

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "StorageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private StorageType storageType;

  public static final String SERIALIZED_NAME_VPC_ID = "VpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public static final String SERIALIZED_NAME_SUBNET_IDS = "SubnetIds";
  @SerializedName(SERIALIZED_NAME_SUBNET_IDS)
  private List subnetIds;

  public static final String SERIALIZED_NAME_NETWORK_INTERFACE_IDS = "NetworkInterfaceIds";
  @SerializedName(SERIALIZED_NAME_NETWORK_INTERFACE_IDS)
  private List networkInterfaceIds;

  public static final String SERIALIZED_NAME_DN_S_NAME = "DNSName";
  @SerializedName(SERIALIZED_NAME_DN_S_NAME)
  private String dnSName;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_RESOURCE_A_R_N = "ResourceARN";
  @SerializedName(SERIALIZED_NAME_RESOURCE_A_R_N)
  private String resourceARN;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_WINDOWS_CONFIGURATION = "WindowsConfiguration";
  @SerializedName(SERIALIZED_NAME_WINDOWS_CONFIGURATION)
  private FileSystemWindowsConfiguration windowsConfiguration;

  public static final String SERIALIZED_NAME_LUSTRE_CONFIGURATION = "LustreConfiguration";
  @SerializedName(SERIALIZED_NAME_LUSTRE_CONFIGURATION)
  private LustreFileSystemConfiguration lustreConfiguration;

  public static final String SERIALIZED_NAME_ADMINISTRATIVE_ACTIONS = "AdministrativeActions";
  @SerializedName(SERIALIZED_NAME_ADMINISTRATIVE_ACTIONS)
  private List administrativeActions;

  public static final String SERIALIZED_NAME_ONTAP_CONFIGURATION = "OntapConfiguration";
  @SerializedName(SERIALIZED_NAME_ONTAP_CONFIGURATION)
  private FileSystemOntapConfiguration ontapConfiguration;

  public static final String SERIALIZED_NAME_FILE_SYSTEM_TYPE_VERSION = "FileSystemTypeVersion";
  @SerializedName(SERIALIZED_NAME_FILE_SYSTEM_TYPE_VERSION)
  private String fileSystemTypeVersion;

  public static final String SERIALIZED_NAME_OPEN_Z_F_S_CONFIGURATION = "OpenZFSConfiguration";
  @SerializedName(SERIALIZED_NAME_OPEN_Z_F_S_CONFIGURATION)
  private FileSystemOpenZFSConfiguration openZFSConfiguration;

  public BackupFileSystem() {
  }

  public BackupFileSystem ownerId(String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

  /**
   * Get ownerId
   * @return ownerId
   */
  @javax.annotation.Nullable
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  public BackupFileSystem creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public BackupFileSystem fileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
    return this;
  }

  /**
   * Get fileSystemId
   * @return fileSystemId
   */
  @javax.annotation.Nullable
  public String getFileSystemId() {
    return fileSystemId;
  }

  public void setFileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
  }


  public BackupFileSystem fileSystemType(FileSystemType fileSystemType) {
    this.fileSystemType = fileSystemType;
    return this;
  }

  /**
   * Get fileSystemType
   * @return fileSystemType
   */
  @javax.annotation.Nullable
  public FileSystemType getFileSystemType() {
    return fileSystemType;
  }

  public void setFileSystemType(FileSystemType fileSystemType) {
    this.fileSystemType = fileSystemType;
  }


  public BackupFileSystem lifecycle(FileSystemLifecycle lifecycle) {
    this.lifecycle = lifecycle;
    return this;
  }

  /**
   * Get lifecycle
   * @return lifecycle
   */
  @javax.annotation.Nullable
  public FileSystemLifecycle getLifecycle() {
    return lifecycle;
  }

  public void setLifecycle(FileSystemLifecycle lifecycle) {
    this.lifecycle = lifecycle;
  }


  public BackupFileSystem failureDetails(FileSystemFailureDetails failureDetails) {
    this.failureDetails = failureDetails;
    return this;
  }

  /**
   * Get failureDetails
   * @return failureDetails
   */
  @javax.annotation.Nullable
  public FileSystemFailureDetails getFailureDetails() {
    return failureDetails;
  }

  public void setFailureDetails(FileSystemFailureDetails failureDetails) {
    this.failureDetails = failureDetails;
  }


  public BackupFileSystem storageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
    return this;
  }

  /**
   * Get storageCapacity
   * @return storageCapacity
   */
  @javax.annotation.Nullable
  public Integer getStorageCapacity() {
    return storageCapacity;
  }

  public void setStorageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
  }


  public BackupFileSystem storageType(StorageType storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nullable
  public StorageType getStorageType() {
    return storageType;
  }

  public void setStorageType(StorageType storageType) {
    this.storageType = storageType;
  }


  public BackupFileSystem vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nullable
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  public BackupFileSystem subnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  /**
   * Get subnetIds
   * @return subnetIds
   */
  @javax.annotation.Nullable
  public List getSubnetIds() {
    return subnetIds;
  }

  public void setSubnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
  }


  public BackupFileSystem networkInterfaceIds(List networkInterfaceIds) {
    this.networkInterfaceIds = networkInterfaceIds;
    return this;
  }

  /**
   * Get networkInterfaceIds
   * @return networkInterfaceIds
   */
  @javax.annotation.Nullable
  public List getNetworkInterfaceIds() {
    return networkInterfaceIds;
  }

  public void setNetworkInterfaceIds(List networkInterfaceIds) {
    this.networkInterfaceIds = networkInterfaceIds;
  }


  public BackupFileSystem dnSName(String dnSName) {
    this.dnSName = dnSName;
    return this;
  }

  /**
   * Get dnSName
   * @return dnSName
   */
  @javax.annotation.Nullable
  public String getDnSName() {
    return dnSName;
  }

  public void setDnSName(String dnSName) {
    this.dnSName = dnSName;
  }


  public BackupFileSystem kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public BackupFileSystem resourceARN(String resourceARN) {
    this.resourceARN = resourceARN;
    return this;
  }

  /**
   * Get resourceARN
   * @return resourceARN
   */
  @javax.annotation.Nullable
  public String getResourceARN() {
    return resourceARN;
  }

  public void setResourceARN(String resourceARN) {
    this.resourceARN = resourceARN;
  }


  public BackupFileSystem tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public BackupFileSystem windowsConfiguration(FileSystemWindowsConfiguration windowsConfiguration) {
    this.windowsConfiguration = windowsConfiguration;
    return this;
  }

  /**
   * Get windowsConfiguration
   * @return windowsConfiguration
   */
  @javax.annotation.Nullable
  public FileSystemWindowsConfiguration getWindowsConfiguration() {
    return windowsConfiguration;
  }

  public void setWindowsConfiguration(FileSystemWindowsConfiguration windowsConfiguration) {
    this.windowsConfiguration = windowsConfiguration;
  }


  public BackupFileSystem lustreConfiguration(LustreFileSystemConfiguration lustreConfiguration) {
    this.lustreConfiguration = lustreConfiguration;
    return this;
  }

  /**
   * Get lustreConfiguration
   * @return lustreConfiguration
   */
  @javax.annotation.Nullable
  public LustreFileSystemConfiguration getLustreConfiguration() {
    return lustreConfiguration;
  }

  public void setLustreConfiguration(LustreFileSystemConfiguration lustreConfiguration) {
    this.lustreConfiguration = lustreConfiguration;
  }


  public BackupFileSystem administrativeActions(List administrativeActions) {
    this.administrativeActions = administrativeActions;
    return this;
  }

  /**
   * Get administrativeActions
   * @return administrativeActions
   */
  @javax.annotation.Nullable
  public List getAdministrativeActions() {
    return administrativeActions;
  }

  public void setAdministrativeActions(List administrativeActions) {
    this.administrativeActions = administrativeActions;
  }


  public BackupFileSystem ontapConfiguration(FileSystemOntapConfiguration ontapConfiguration) {
    this.ontapConfiguration = ontapConfiguration;
    return this;
  }

  /**
   * Get ontapConfiguration
   * @return ontapConfiguration
   */
  @javax.annotation.Nullable
  public FileSystemOntapConfiguration getOntapConfiguration() {
    return ontapConfiguration;
  }

  public void setOntapConfiguration(FileSystemOntapConfiguration ontapConfiguration) {
    this.ontapConfiguration = ontapConfiguration;
  }


  public BackupFileSystem fileSystemTypeVersion(String fileSystemTypeVersion) {
    this.fileSystemTypeVersion = fileSystemTypeVersion;
    return this;
  }

  /**
   * Get fileSystemTypeVersion
   * @return fileSystemTypeVersion
   */
  @javax.annotation.Nullable
  public String getFileSystemTypeVersion() {
    return fileSystemTypeVersion;
  }

  public void setFileSystemTypeVersion(String fileSystemTypeVersion) {
    this.fileSystemTypeVersion = fileSystemTypeVersion;
  }


  public BackupFileSystem openZFSConfiguration(FileSystemOpenZFSConfiguration openZFSConfiguration) {
    this.openZFSConfiguration = openZFSConfiguration;
    return this;
  }

  /**
   * Get openZFSConfiguration
   * @return openZFSConfiguration
   */
  @javax.annotation.Nullable
  public FileSystemOpenZFSConfiguration getOpenZFSConfiguration() {
    return openZFSConfiguration;
  }

  public void setOpenZFSConfiguration(FileSystemOpenZFSConfiguration openZFSConfiguration) {
    this.openZFSConfiguration = openZFSConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupFileSystem backupFileSystem = (BackupFileSystem) o;
    return Objects.equals(this.ownerId, backupFileSystem.ownerId) &&
        Objects.equals(this.creationTime, backupFileSystem.creationTime) &&
        Objects.equals(this.fileSystemId, backupFileSystem.fileSystemId) &&
        Objects.equals(this.fileSystemType, backupFileSystem.fileSystemType) &&
        Objects.equals(this.lifecycle, backupFileSystem.lifecycle) &&
        Objects.equals(this.failureDetails, backupFileSystem.failureDetails) &&
        Objects.equals(this.storageCapacity, backupFileSystem.storageCapacity) &&
        Objects.equals(this.storageType, backupFileSystem.storageType) &&
        Objects.equals(this.vpcId, backupFileSystem.vpcId) &&
        Objects.equals(this.subnetIds, backupFileSystem.subnetIds) &&
        Objects.equals(this.networkInterfaceIds, backupFileSystem.networkInterfaceIds) &&
        Objects.equals(this.dnSName, backupFileSystem.dnSName) &&
        Objects.equals(this.kmsKeyId, backupFileSystem.kmsKeyId) &&
        Objects.equals(this.resourceARN, backupFileSystem.resourceARN) &&
        Objects.equals(this.tags, backupFileSystem.tags) &&
        Objects.equals(this.windowsConfiguration, backupFileSystem.windowsConfiguration) &&
        Objects.equals(this.lustreConfiguration, backupFileSystem.lustreConfiguration) &&
        Objects.equals(this.administrativeActions, backupFileSystem.administrativeActions) &&
        Objects.equals(this.ontapConfiguration, backupFileSystem.ontapConfiguration) &&
        Objects.equals(this.fileSystemTypeVersion, backupFileSystem.fileSystemTypeVersion) &&
        Objects.equals(this.openZFSConfiguration, backupFileSystem.openZFSConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ownerId, creationTime, fileSystemId, fileSystemType, lifecycle, failureDetails, storageCapacity, storageType, vpcId, subnetIds, networkInterfaceIds, dnSName, kmsKeyId, resourceARN, tags, windowsConfiguration, lustreConfiguration, administrativeActions, ontapConfiguration, fileSystemTypeVersion, openZFSConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupFileSystem {\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    fileSystemId: ").append(toIndentedString(fileSystemId)).append("\n");
    sb.append("    fileSystemType: ").append(toIndentedString(fileSystemType)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("    failureDetails: ").append(toIndentedString(failureDetails)).append("\n");
    sb.append("    storageCapacity: ").append(toIndentedString(storageCapacity)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("    networkInterfaceIds: ").append(toIndentedString(networkInterfaceIds)).append("\n");
    sb.append("    dnSName: ").append(toIndentedString(dnSName)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    resourceARN: ").append(toIndentedString(resourceARN)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    windowsConfiguration: ").append(toIndentedString(windowsConfiguration)).append("\n");
    sb.append("    lustreConfiguration: ").append(toIndentedString(lustreConfiguration)).append("\n");
    sb.append("    administrativeActions: ").append(toIndentedString(administrativeActions)).append("\n");
    sb.append("    ontapConfiguration: ").append(toIndentedString(ontapConfiguration)).append("\n");
    sb.append("    fileSystemTypeVersion: ").append(toIndentedString(fileSystemTypeVersion)).append("\n");
    sb.append("    openZFSConfiguration: ").append(toIndentedString(openZFSConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OwnerId");
    openapiFields.add("CreationTime");
    openapiFields.add("FileSystemId");
    openapiFields.add("FileSystemType");
    openapiFields.add("Lifecycle");
    openapiFields.add("FailureDetails");
    openapiFields.add("StorageCapacity");
    openapiFields.add("StorageType");
    openapiFields.add("VpcId");
    openapiFields.add("SubnetIds");
    openapiFields.add("NetworkInterfaceIds");
    openapiFields.add("DNSName");
    openapiFields.add("KmsKeyId");
    openapiFields.add("ResourceARN");
    openapiFields.add("Tags");
    openapiFields.add("WindowsConfiguration");
    openapiFields.add("LustreConfiguration");
    openapiFields.add("AdministrativeActions");
    openapiFields.add("OntapConfiguration");
    openapiFields.add("FileSystemTypeVersion");
    openapiFields.add("OpenZFSConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BackupFileSystem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BackupFileSystem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BackupFileSystem is not found in the empty JSON string", BackupFileSystem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BackupFileSystem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BackupFileSystem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `OwnerId`
      if (jsonObj.get("OwnerId") != null && !jsonObj.get("OwnerId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OwnerId"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `FileSystemId`
      if (jsonObj.get("FileSystemId") != null && !jsonObj.get("FileSystemId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FileSystemId"));
      }
      // validate the optional field `FileSystemType`
      if (jsonObj.get("FileSystemType") != null && !jsonObj.get("FileSystemType").isJsonNull()) {
        FileSystemType.validateJsonElement(jsonObj.get("FileSystemType"));
      }
      // validate the optional field `Lifecycle`
      if (jsonObj.get("Lifecycle") != null && !jsonObj.get("Lifecycle").isJsonNull()) {
        FileSystemLifecycle.validateJsonElement(jsonObj.get("Lifecycle"));
      }
      // validate the optional field `FailureDetails`
      if (jsonObj.get("FailureDetails") != null && !jsonObj.get("FailureDetails").isJsonNull()) {
        FileSystemFailureDetails.validateJsonElement(jsonObj.get("FailureDetails"));
      }
      // validate the optional field `StorageCapacity`
      if (jsonObj.get("StorageCapacity") != null && !jsonObj.get("StorageCapacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("StorageCapacity"));
      }
      // validate the optional field `StorageType`
      if (jsonObj.get("StorageType") != null && !jsonObj.get("StorageType").isJsonNull()) {
        StorageType.validateJsonElement(jsonObj.get("StorageType"));
      }
      // validate the optional field `VpcId`
      if (jsonObj.get("VpcId") != null && !jsonObj.get("VpcId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcId"));
      }
      // validate the optional field `SubnetIds`
      if (jsonObj.get("SubnetIds") != null && !jsonObj.get("SubnetIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SubnetIds"));
      }
      // validate the optional field `NetworkInterfaceIds`
      if (jsonObj.get("NetworkInterfaceIds") != null && !jsonObj.get("NetworkInterfaceIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NetworkInterfaceIds"));
      }
      // validate the optional field `DNSName`
      if (jsonObj.get("DNSName") != null && !jsonObj.get("DNSName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DNSName"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `ResourceARN`
      if (jsonObj.get("ResourceARN") != null && !jsonObj.get("ResourceARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceARN"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `WindowsConfiguration`
      if (jsonObj.get("WindowsConfiguration") != null && !jsonObj.get("WindowsConfiguration").isJsonNull()) {
        FileSystemWindowsConfiguration.validateJsonElement(jsonObj.get("WindowsConfiguration"));
      }
      // validate the optional field `LustreConfiguration`
      if (jsonObj.get("LustreConfiguration") != null && !jsonObj.get("LustreConfiguration").isJsonNull()) {
        LustreFileSystemConfiguration.validateJsonElement(jsonObj.get("LustreConfiguration"));
      }
      // validate the optional field `AdministrativeActions`
      if (jsonObj.get("AdministrativeActions") != null && !jsonObj.get("AdministrativeActions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AdministrativeActions"));
      }
      // validate the optional field `OntapConfiguration`
      if (jsonObj.get("OntapConfiguration") != null && !jsonObj.get("OntapConfiguration").isJsonNull()) {
        FileSystemOntapConfiguration.validateJsonElement(jsonObj.get("OntapConfiguration"));
      }
      // validate the optional field `FileSystemTypeVersion`
      if (jsonObj.get("FileSystemTypeVersion") != null && !jsonObj.get("FileSystemTypeVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FileSystemTypeVersion"));
      }
      // validate the optional field `OpenZFSConfiguration`
      if (jsonObj.get("OpenZFSConfiguration") != null && !jsonObj.get("OpenZFSConfiguration").isJsonNull()) {
        FileSystemOpenZFSConfiguration.validateJsonElement(jsonObj.get("OpenZFSConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BackupFileSystem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BackupFileSystem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BackupFileSystem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BackupFileSystem.class));

       return (TypeAdapter<T>) new TypeAdapter<BackupFileSystem>() {
           @Override
           public void write(JsonWriter out, BackupFileSystem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BackupFileSystem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BackupFileSystem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BackupFileSystem
   * @throws IOException if the JSON string is invalid with respect to BackupFileSystem
   */
  public static BackupFileSystem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BackupFileSystem.class);
  }

  /**
   * Convert an instance of BackupFileSystem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

