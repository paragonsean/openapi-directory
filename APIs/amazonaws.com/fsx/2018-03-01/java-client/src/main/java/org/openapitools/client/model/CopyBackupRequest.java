/*
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Tag;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CopyBackupRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:01.724479-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CopyBackupRequest {
  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "ClientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_SOURCE_BACKUP_ID = "SourceBackupId";
  @SerializedName(SERIALIZED_NAME_SOURCE_BACKUP_ID)
  private String sourceBackupId;

  public static final String SERIALIZED_NAME_SOURCE_REGION = "SourceRegion";
  @SerializedName(SERIALIZED_NAME_SOURCE_REGION)
  private String sourceRegion;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_COPY_TAGS = "CopyTags";
  @SerializedName(SERIALIZED_NAME_COPY_TAGS)
  private Boolean copyTags;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = new ArrayList<>();

  public CopyBackupRequest() {
  }

  public CopyBackupRequest clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * (Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public CopyBackupRequest sourceBackupId(String sourceBackupId) {
    this.sourceBackupId = sourceBackupId;
    return this;
  }

  /**
   * Get sourceBackupId
   * @return sourceBackupId
   */
  @javax.annotation.Nonnull
  public String getSourceBackupId() {
    return sourceBackupId;
  }

  public void setSourceBackupId(String sourceBackupId) {
    this.sourceBackupId = sourceBackupId;
  }


  public CopyBackupRequest sourceRegion(String sourceRegion) {
    this.sourceRegion = sourceRegion;
    return this;
  }

  /**
   * Get sourceRegion
   * @return sourceRegion
   */
  @javax.annotation.Nullable
  public String getSourceRegion() {
    return sourceRegion;
  }

  public void setSourceRegion(String sourceRegion) {
    this.sourceRegion = sourceRegion;
  }


  public CopyBackupRequest kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * &lt;p&gt;Specifies the ID of the Key Management Service (KMS) key to use for encrypting data on Amazon FSx file systems, as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Amazon FSx for Lustre &lt;code&gt;PERSISTENT_1&lt;/code&gt; and &lt;code&gt;PERSISTENT_2&lt;/code&gt; deployment types only.&lt;/p&gt; &lt;p&gt; &lt;code&gt;SCRATCH_1&lt;/code&gt; and &lt;code&gt;SCRATCH_2&lt;/code&gt; types are encrypted using the Amazon FSx service KMS key for your account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon FSx for NetApp ONTAP&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon FSx for OpenZFS&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon FSx for Windows File Server&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If a &lt;code&gt;KmsKeyId&lt;/code&gt; isn&#39;t specified, the Amazon FSx-managed KMS key for your account is used. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html\&quot;&gt;Encrypt&lt;/a&gt; in the &lt;i&gt;Key Management Service API Reference&lt;/i&gt;.&lt;/p&gt;
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public CopyBackupRequest copyTags(Boolean copyTags) {
    this.copyTags = copyTags;
    return this;
  }

  /**
   * Get copyTags
   * @return copyTags
   */
  @javax.annotation.Nullable
  public Boolean getCopyTags() {
    return copyTags;
  }

  public void setCopyTags(Boolean copyTags) {
    this.copyTags = copyTags;
  }


  public CopyBackupRequest tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public CopyBackupRequest addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * A list of &lt;code&gt;Tag&lt;/code&gt; values, with a maximum of 50 elements.
   * @return tags
   */
  @javax.annotation.Nullable
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CopyBackupRequest copyBackupRequest = (CopyBackupRequest) o;
    return Objects.equals(this.clientRequestToken, copyBackupRequest.clientRequestToken) &&
        Objects.equals(this.sourceBackupId, copyBackupRequest.sourceBackupId) &&
        Objects.equals(this.sourceRegion, copyBackupRequest.sourceRegion) &&
        Objects.equals(this.kmsKeyId, copyBackupRequest.kmsKeyId) &&
        Objects.equals(this.copyTags, copyBackupRequest.copyTags) &&
        Objects.equals(this.tags, copyBackupRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientRequestToken, sourceBackupId, sourceRegion, kmsKeyId, copyTags, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CopyBackupRequest {\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    sourceBackupId: ").append(toIndentedString(sourceBackupId)).append("\n");
    sb.append("    sourceRegion: ").append(toIndentedString(sourceRegion)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    copyTags: ").append(toIndentedString(copyTags)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClientRequestToken");
    openapiFields.add("SourceBackupId");
    openapiFields.add("SourceRegion");
    openapiFields.add("KmsKeyId");
    openapiFields.add("CopyTags");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("SourceBackupId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CopyBackupRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CopyBackupRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CopyBackupRequest is not found in the empty JSON string", CopyBackupRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CopyBackupRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CopyBackupRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CopyBackupRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ClientRequestToken") != null && !jsonObj.get("ClientRequestToken").isJsonNull()) && !jsonObj.get("ClientRequestToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientRequestToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientRequestToken").toString()));
      }
      // validate the required field `SourceBackupId`
      String.validateJsonElement(jsonObj.get("SourceBackupId"));
      // validate the optional field `SourceRegion`
      if (jsonObj.get("SourceRegion") != null && !jsonObj.get("SourceRegion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceRegion"));
      }
      if ((jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) && !jsonObj.get("KmsKeyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KmsKeyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KmsKeyId").toString()));
      }
      // validate the optional field `CopyTags`
      if (jsonObj.get("CopyTags") != null && !jsonObj.get("CopyTags").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CopyTags"));
      }
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("Tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Tags` to be an array in the JSON string but got `%s`", jsonObj.get("Tags").toString()));
          }

          // validate the optional field `Tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            Tag.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CopyBackupRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CopyBackupRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CopyBackupRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CopyBackupRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CopyBackupRequest>() {
           @Override
           public void write(JsonWriter out, CopyBackupRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CopyBackupRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CopyBackupRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CopyBackupRequest
   * @throws IOException if the JSON string is invalid with respect to CopyBackupRequest
   */
  public static CopyBackupRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CopyBackupRequest.class);
  }

  /**
   * Convert an instance of CopyBackupRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

