/*
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Tag;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DeleteVolumeRequestOntapConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:01.724479-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeleteVolumeRequestOntapConfiguration {
  public static final String SERIALIZED_NAME_SKIP_FINAL_BACKUP = "SkipFinalBackup";
  @SerializedName(SERIALIZED_NAME_SKIP_FINAL_BACKUP)
  private Boolean skipFinalBackup;

  public static final String SERIALIZED_NAME_FINAL_BACKUP_TAGS = "FinalBackupTags";
  @SerializedName(SERIALIZED_NAME_FINAL_BACKUP_TAGS)
  private List<Tag> finalBackupTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_BYPASS_SNAPLOCK_ENTERPRISE_RETENTION = "BypassSnaplockEnterpriseRetention";
  @SerializedName(SERIALIZED_NAME_BYPASS_SNAPLOCK_ENTERPRISE_RETENTION)
  private Boolean bypassSnaplockEnterpriseRetention;

  public DeleteVolumeRequestOntapConfiguration() {
  }

  public DeleteVolumeRequestOntapConfiguration skipFinalBackup(Boolean skipFinalBackup) {
    this.skipFinalBackup = skipFinalBackup;
    return this;
  }

  /**
   * Get skipFinalBackup
   * @return skipFinalBackup
   */
  @javax.annotation.Nullable
  public Boolean getSkipFinalBackup() {
    return skipFinalBackup;
  }

  public void setSkipFinalBackup(Boolean skipFinalBackup) {
    this.skipFinalBackup = skipFinalBackup;
  }


  public DeleteVolumeRequestOntapConfiguration finalBackupTags(List<Tag> finalBackupTags) {
    this.finalBackupTags = finalBackupTags;
    return this;
  }

  public DeleteVolumeRequestOntapConfiguration addFinalBackupTagsItem(Tag finalBackupTagsItem) {
    if (this.finalBackupTags == null) {
      this.finalBackupTags = new ArrayList<>();
    }
    this.finalBackupTags.add(finalBackupTagsItem);
    return this;
  }

  /**
   * A list of &lt;code&gt;Tag&lt;/code&gt; values, with a maximum of 50 elements.
   * @return finalBackupTags
   */
  @javax.annotation.Nullable
  public List<Tag> getFinalBackupTags() {
    return finalBackupTags;
  }

  public void setFinalBackupTags(List<Tag> finalBackupTags) {
    this.finalBackupTags = finalBackupTags;
  }


  public DeleteVolumeRequestOntapConfiguration bypassSnaplockEnterpriseRetention(Boolean bypassSnaplockEnterpriseRetention) {
    this.bypassSnaplockEnterpriseRetention = bypassSnaplockEnterpriseRetention;
    return this;
  }

  /**
   * Get bypassSnaplockEnterpriseRetention
   * @return bypassSnaplockEnterpriseRetention
   */
  @javax.annotation.Nullable
  public Boolean getBypassSnaplockEnterpriseRetention() {
    return bypassSnaplockEnterpriseRetention;
  }

  public void setBypassSnaplockEnterpriseRetention(Boolean bypassSnaplockEnterpriseRetention) {
    this.bypassSnaplockEnterpriseRetention = bypassSnaplockEnterpriseRetention;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteVolumeRequestOntapConfiguration deleteVolumeRequestOntapConfiguration = (DeleteVolumeRequestOntapConfiguration) o;
    return Objects.equals(this.skipFinalBackup, deleteVolumeRequestOntapConfiguration.skipFinalBackup) &&
        Objects.equals(this.finalBackupTags, deleteVolumeRequestOntapConfiguration.finalBackupTags) &&
        Objects.equals(this.bypassSnaplockEnterpriseRetention, deleteVolumeRequestOntapConfiguration.bypassSnaplockEnterpriseRetention);
  }

  @Override
  public int hashCode() {
    return Objects.hash(skipFinalBackup, finalBackupTags, bypassSnaplockEnterpriseRetention);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteVolumeRequestOntapConfiguration {\n");
    sb.append("    skipFinalBackup: ").append(toIndentedString(skipFinalBackup)).append("\n");
    sb.append("    finalBackupTags: ").append(toIndentedString(finalBackupTags)).append("\n");
    sb.append("    bypassSnaplockEnterpriseRetention: ").append(toIndentedString(bypassSnaplockEnterpriseRetention)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SkipFinalBackup");
    openapiFields.add("FinalBackupTags");
    openapiFields.add("BypassSnaplockEnterpriseRetention");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteVolumeRequestOntapConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteVolumeRequestOntapConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteVolumeRequestOntapConfiguration is not found in the empty JSON string", DeleteVolumeRequestOntapConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteVolumeRequestOntapConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteVolumeRequestOntapConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `SkipFinalBackup`
      if (jsonObj.get("SkipFinalBackup") != null && !jsonObj.get("SkipFinalBackup").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SkipFinalBackup"));
      }
      if (jsonObj.get("FinalBackupTags") != null && !jsonObj.get("FinalBackupTags").isJsonNull()) {
        JsonArray jsonArrayfinalBackupTags = jsonObj.getAsJsonArray("FinalBackupTags");
        if (jsonArrayfinalBackupTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("FinalBackupTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `FinalBackupTags` to be an array in the JSON string but got `%s`", jsonObj.get("FinalBackupTags").toString()));
          }

          // validate the optional field `FinalBackupTags` (array)
          for (int i = 0; i < jsonArrayfinalBackupTags.size(); i++) {
            Tag.validateJsonElement(jsonArrayfinalBackupTags.get(i));
          };
        }
      }
      // validate the optional field `BypassSnaplockEnterpriseRetention`
      if (jsonObj.get("BypassSnaplockEnterpriseRetention") != null && !jsonObj.get("BypassSnaplockEnterpriseRetention").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("BypassSnaplockEnterpriseRetention"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteVolumeRequestOntapConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteVolumeRequestOntapConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteVolumeRequestOntapConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteVolumeRequestOntapConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteVolumeRequestOntapConfiguration>() {
           @Override
           public void write(JsonWriter out, DeleteVolumeRequestOntapConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteVolumeRequestOntapConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteVolumeRequestOntapConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteVolumeRequestOntapConfiguration
   * @throws IOException if the JSON string is invalid with respect to DeleteVolumeRequestOntapConfiguration
   */
  public static DeleteVolumeRequestOntapConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteVolumeRequestOntapConfiguration.class);
  }

  /**
   * Convert an instance of DeleteVolumeRequestOntapConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

