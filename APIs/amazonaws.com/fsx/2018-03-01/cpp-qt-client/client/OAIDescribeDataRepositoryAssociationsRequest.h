/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDataRepositoryAssociationsRequest.h
 *
 * 
 */

#ifndef OAIDescribeDataRepositoryAssociationsRequest_H
#define OAIDescribeDataRepositoryAssociationsRequest_H

#include <QJsonObject>

#include "OAIFilter.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFilter;

class OAIDescribeDataRepositoryAssociationsRequest : public OAIObject {
public:
    OAIDescribeDataRepositoryAssociationsRequest();
    OAIDescribeDataRepositoryAssociationsRequest(QString json);
    ~OAIDescribeDataRepositoryAssociationsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAssociationIds() const;
    void setAssociationIds(const QList &association_ids);
    bool is_association_ids_Set() const;
    bool is_association_ids_Valid() const;

    QList<OAIFilter> getFilters() const;
    void setFilters(const QList<OAIFilter> &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_association_ids;
    bool m_association_ids_isSet;
    bool m_association_ids_isValid;

    QList<OAIFilter> m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDataRepositoryAssociationsRequest)

#endif // OAIDescribeDataRepositoryAssociationsRequest_H
