/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataRepositoryTaskStatus.h
 *
 * Provides the task status showing a running total of the total number of files to be processed, the number successfully processed, and the number of files the task failed to process.
 */

#ifndef OAIDataRepositoryTaskStatus_H
#define OAIDataRepositoryTaskStatus_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataRepositoryTaskStatus : public OAIObject {
public:
    OAIDataRepositoryTaskStatus();
    OAIDataRepositoryTaskStatus(QString json);
    ~OAIDataRepositoryTaskStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTotalCount() const;
    void setTotalCount(const qint32 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    qint32 getSucceededCount() const;
    void setSucceededCount(const qint32 &succeeded_count);
    bool is_succeeded_count_Set() const;
    bool is_succeeded_count_Valid() const;

    qint32 getFailedCount() const;
    void setFailedCount(const qint32 &failed_count);
    bool is_failed_count_Set() const;
    bool is_failed_count_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    qint32 getReleasedCapacity() const;
    void setReleasedCapacity(const qint32 &released_capacity);
    bool is_released_capacity_Set() const;
    bool is_released_capacity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;

    qint32 m_succeeded_count;
    bool m_succeeded_count_isSet;
    bool m_succeeded_count_isValid;

    qint32 m_failed_count;
    bool m_failed_count_isSet;
    bool m_failed_count_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    qint32 m_released_capacity;
    bool m_released_capacity_isSet;
    bool m_released_capacity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataRepositoryTaskStatus)

#endif // OAIDataRepositoryTaskStatus_H
