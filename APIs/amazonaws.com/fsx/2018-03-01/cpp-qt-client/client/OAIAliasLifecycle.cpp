/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAliasLifecycle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAliasLifecycle::OAIAliasLifecycle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAliasLifecycle::OAIAliasLifecycle() {
    this->initializeModel();
}

OAIAliasLifecycle::~OAIAliasLifecycle() {}

void OAIAliasLifecycle::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAliasLifecycle::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAliasLifecycle::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AVAILABLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAliasLifecycle::AVAILABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAliasLifecycle::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAliasLifecycle::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATE_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAliasLifecycle::CREATE_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETE_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAliasLifecycle::DELETE_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAliasLifecycle::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAliasLifecycle::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAliasLifecycle::AVAILABLE:
            val = "AVAILABLE";
            break;
        case eOAIAliasLifecycle::CREATING:
            val = "CREATING";
            break;
        case eOAIAliasLifecycle::DELETING:
            val = "DELETING";
            break;
        case eOAIAliasLifecycle::CREATE_FAILED:
            val = "CREATE_FAILED";
            break;
        case eOAIAliasLifecycle::DELETE_FAILED:
            val = "DELETE_FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAliasLifecycle::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAliasLifecycle::eOAIAliasLifecycle OAIAliasLifecycle::getValue() const {
    return m_value;
}

void OAIAliasLifecycle::setValue(const OAIAliasLifecycle::eOAIAliasLifecycle& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAliasLifecycle::isSet() const {
    
    return m_value_isSet;
}

bool OAIAliasLifecycle::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
