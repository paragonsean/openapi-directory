/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackup_FileSystem.h
 *
 * 
 */

#ifndef OAIBackup_FileSystem_H
#define OAIBackup_FileSystem_H

#include <QJsonObject>

#include "OAIFileSystemFailureDetails.h"
#include "OAIFileSystemLifecycle.h"
#include "OAIFileSystemType.h"
#include "OAIFileSystem_OntapConfiguration.h"
#include "OAIFileSystem_OpenZFSConfiguration.h"
#include "OAIFileSystem_WindowsConfiguration.h"
#include "OAILustreFileSystemConfiguration.h"
#include "OAIStorageType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFileSystemFailureDetails;
class OAIFileSystem_WindowsConfiguration;
class OAILustreFileSystemConfiguration;
class OAIFileSystem_OntapConfiguration;
class OAIFileSystem_OpenZFSConfiguration;

class OAIBackup_FileSystem : public OAIObject {
public:
    OAIBackup_FileSystem();
    OAIBackup_FileSystem(QString json);
    ~OAIBackup_FileSystem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOwnerId() const;
    void setOwnerId(const QString &owner_id);
    bool is_owner_id_Set() const;
    bool is_owner_id_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    OAIFileSystemType getFileSystemType() const;
    void setFileSystemType(const OAIFileSystemType &file_system_type);
    bool is_file_system_type_Set() const;
    bool is_file_system_type_Valid() const;

    OAIFileSystemLifecycle getLifecycle() const;
    void setLifecycle(const OAIFileSystemLifecycle &lifecycle);
    bool is_lifecycle_Set() const;
    bool is_lifecycle_Valid() const;

    OAIFileSystemFailureDetails getFailureDetails() const;
    void setFailureDetails(const OAIFileSystemFailureDetails &failure_details);
    bool is_failure_details_Set() const;
    bool is_failure_details_Valid() const;

    qint32 getStorageCapacity() const;
    void setStorageCapacity(const qint32 &storage_capacity);
    bool is_storage_capacity_Set() const;
    bool is_storage_capacity_Valid() const;

    OAIStorageType getStorageType() const;
    void setStorageType(const OAIStorageType &storage_type);
    bool is_storage_type_Set() const;
    bool is_storage_type_Valid() const;

    QString getVpcId() const;
    void setVpcId(const QString &vpc_id);
    bool is_vpc_id_Set() const;
    bool is_vpc_id_Valid() const;

    QList getSubnetIds() const;
    void setSubnetIds(const QList &subnet_ids);
    bool is_subnet_ids_Set() const;
    bool is_subnet_ids_Valid() const;

    QList getNetworkInterfaceIds() const;
    void setNetworkInterfaceIds(const QList &network_interface_ids);
    bool is_network_interface_ids_Set() const;
    bool is_network_interface_ids_Valid() const;

    QString getDnsName() const;
    void setDnsName(const QString &dns_name);
    bool is_dns_name_Set() const;
    bool is_dns_name_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIFileSystem_WindowsConfiguration getWindowsConfiguration() const;
    void setWindowsConfiguration(const OAIFileSystem_WindowsConfiguration &windows_configuration);
    bool is_windows_configuration_Set() const;
    bool is_windows_configuration_Valid() const;

    OAILustreFileSystemConfiguration getLustreConfiguration() const;
    void setLustreConfiguration(const OAILustreFileSystemConfiguration &lustre_configuration);
    bool is_lustre_configuration_Set() const;
    bool is_lustre_configuration_Valid() const;

    QList getAdministrativeActions() const;
    void setAdministrativeActions(const QList &administrative_actions);
    bool is_administrative_actions_Set() const;
    bool is_administrative_actions_Valid() const;

    OAIFileSystem_OntapConfiguration getOntapConfiguration() const;
    void setOntapConfiguration(const OAIFileSystem_OntapConfiguration &ontap_configuration);
    bool is_ontap_configuration_Set() const;
    bool is_ontap_configuration_Valid() const;

    QString getFileSystemTypeVersion() const;
    void setFileSystemTypeVersion(const QString &file_system_type_version);
    bool is_file_system_type_version_Set() const;
    bool is_file_system_type_version_Valid() const;

    OAIFileSystem_OpenZFSConfiguration getOpenZfsConfiguration() const;
    void setOpenZfsConfiguration(const OAIFileSystem_OpenZFSConfiguration &open_zfs_configuration);
    bool is_open_zfs_configuration_Set() const;
    bool is_open_zfs_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_owner_id;
    bool m_owner_id_isSet;
    bool m_owner_id_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    OAIFileSystemType m_file_system_type;
    bool m_file_system_type_isSet;
    bool m_file_system_type_isValid;

    OAIFileSystemLifecycle m_lifecycle;
    bool m_lifecycle_isSet;
    bool m_lifecycle_isValid;

    OAIFileSystemFailureDetails m_failure_details;
    bool m_failure_details_isSet;
    bool m_failure_details_isValid;

    qint32 m_storage_capacity;
    bool m_storage_capacity_isSet;
    bool m_storage_capacity_isValid;

    OAIStorageType m_storage_type;
    bool m_storage_type_isSet;
    bool m_storage_type_isValid;

    QString m_vpc_id;
    bool m_vpc_id_isSet;
    bool m_vpc_id_isValid;

    QList m_subnet_ids;
    bool m_subnet_ids_isSet;
    bool m_subnet_ids_isValid;

    QList m_network_interface_ids;
    bool m_network_interface_ids_isSet;
    bool m_network_interface_ids_isValid;

    QString m_dns_name;
    bool m_dns_name_isSet;
    bool m_dns_name_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIFileSystem_WindowsConfiguration m_windows_configuration;
    bool m_windows_configuration_isSet;
    bool m_windows_configuration_isValid;

    OAILustreFileSystemConfiguration m_lustre_configuration;
    bool m_lustre_configuration_isSet;
    bool m_lustre_configuration_isValid;

    QList m_administrative_actions;
    bool m_administrative_actions_isSet;
    bool m_administrative_actions_isValid;

    OAIFileSystem_OntapConfiguration m_ontap_configuration;
    bool m_ontap_configuration_isSet;
    bool m_ontap_configuration_isValid;

    QString m_file_system_type_version;
    bool m_file_system_type_version_isSet;
    bool m_file_system_type_version_isValid;

    OAIFileSystem_OpenZFSConfiguration m_open_zfs_configuration;
    bool m_open_zfs_configuration_isSet;
    bool m_open_zfs_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackup_FileSystem)

#endif // OAIBackup_FileSystem_H
