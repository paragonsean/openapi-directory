/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateVolumeFromBackupResponse_Volume.h
 *
 * 
 */

#ifndef OAICreateVolumeFromBackupResponse_Volume_H
#define OAICreateVolumeFromBackupResponse_Volume_H

#include <QJsonObject>

#include "OAIOntapVolumeConfiguration.h"
#include "OAITag.h"
#include "OAIVolumeLifecycle.h"
#include "OAIVolumeType.h"
#include "OAIVolume_LifecycleTransitionReason.h"
#include "OAIVolume_OpenZFSConfiguration.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOntapVolumeConfiguration;
class OAITag;
class OAIVolume_LifecycleTransitionReason;
class OAIVolume_OpenZFSConfiguration;

class OAICreateVolumeFromBackupResponse_Volume : public OAIObject {
public:
    OAICreateVolumeFromBackupResponse_Volume();
    OAICreateVolumeFromBackupResponse_Volume(QString json);
    ~OAICreateVolumeFromBackupResponse_Volume() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    OAIVolumeLifecycle getLifecycle() const;
    void setLifecycle(const OAIVolumeLifecycle &lifecycle);
    bool is_lifecycle_Set() const;
    bool is_lifecycle_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOntapVolumeConfiguration getOntapConfiguration() const;
    void setOntapConfiguration(const OAIOntapVolumeConfiguration &ontap_configuration);
    bool is_ontap_configuration_Set() const;
    bool is_ontap_configuration_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getVolumeId() const;
    void setVolumeId(const QString &volume_id);
    bool is_volume_id_Set() const;
    bool is_volume_id_Valid() const;

    OAIVolumeType getVolumeType() const;
    void setVolumeType(const OAIVolumeType &volume_type);
    bool is_volume_type_Set() const;
    bool is_volume_type_Valid() const;

    OAIVolume_LifecycleTransitionReason getLifecycleTransitionReason() const;
    void setLifecycleTransitionReason(const OAIVolume_LifecycleTransitionReason &lifecycle_transition_reason);
    bool is_lifecycle_transition_reason_Set() const;
    bool is_lifecycle_transition_reason_Valid() const;

    QList getAdministrativeActions() const;
    void setAdministrativeActions(const QList &administrative_actions);
    bool is_administrative_actions_Set() const;
    bool is_administrative_actions_Valid() const;

    OAIVolume_OpenZFSConfiguration getOpenZfsConfiguration() const;
    void setOpenZfsConfiguration(const OAIVolume_OpenZFSConfiguration &open_zfs_configuration);
    bool is_open_zfs_configuration_Set() const;
    bool is_open_zfs_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    OAIVolumeLifecycle m_lifecycle;
    bool m_lifecycle_isSet;
    bool m_lifecycle_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOntapVolumeConfiguration m_ontap_configuration;
    bool m_ontap_configuration_isSet;
    bool m_ontap_configuration_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_volume_id;
    bool m_volume_id_isSet;
    bool m_volume_id_isValid;

    OAIVolumeType m_volume_type;
    bool m_volume_type_isSet;
    bool m_volume_type_isValid;

    OAIVolume_LifecycleTransitionReason m_lifecycle_transition_reason;
    bool m_lifecycle_transition_reason_isSet;
    bool m_lifecycle_transition_reason_isValid;

    QList m_administrative_actions;
    bool m_administrative_actions_isSet;
    bool m_administrative_actions_isValid;

    OAIVolume_OpenZFSConfiguration m_open_zfs_configuration;
    bool m_open_zfs_configuration_isSet;
    bool m_open_zfs_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateVolumeFromBackupResponse_Volume)

#endif // OAICreateVolumeFromBackupResponse_Volume_H
