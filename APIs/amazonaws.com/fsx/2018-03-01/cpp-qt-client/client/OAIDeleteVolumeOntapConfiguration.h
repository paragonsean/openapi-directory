/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteVolumeOntapConfiguration.h
 *
 * Use to specify skipping a final backup, adding tags to a final backup, or bypassing the retention period of an FSx for ONTAP SnapLock Enterprise volume when deleting an FSx for ONTAP volume. 
 */

#ifndef OAIDeleteVolumeOntapConfiguration_H
#define OAIDeleteVolumeOntapConfiguration_H

#include <QJsonObject>

#include "OAITag.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITag;

class OAIDeleteVolumeOntapConfiguration : public OAIObject {
public:
    OAIDeleteVolumeOntapConfiguration();
    OAIDeleteVolumeOntapConfiguration(QString json);
    ~OAIDeleteVolumeOntapConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getSkipFinalBackup() const;
    void setSkipFinalBackup(const bool &skip_final_backup);
    bool is_skip_final_backup_Set() const;
    bool is_skip_final_backup_Valid() const;

    QList<OAITag> getFinalBackupTags() const;
    void setFinalBackupTags(const QList<OAITag> &final_backup_tags);
    bool is_final_backup_tags_Set() const;
    bool is_final_backup_tags_Valid() const;

    bool getBypassSnaplockEnterpriseRetention() const;
    void setBypassSnaplockEnterpriseRetention(const bool &bypass_snaplock_enterprise_retention);
    bool is_bypass_snaplock_enterprise_retention_Set() const;
    bool is_bypass_snaplock_enterprise_retention_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_skip_final_backup;
    bool m_skip_final_backup_isSet;
    bool m_skip_final_backup_isValid;

    QList<OAITag> m_final_backup_tags;
    bool m_final_backup_tags_isSet;
    bool m_final_backup_tags_isValid;

    bool m_bypass_snaplock_enterprise_retention;
    bool m_bypass_snaplock_enterprise_retention_isSet;
    bool m_bypass_snaplock_enterprise_retention_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteVolumeOntapConfiguration)

#endif // OAIDeleteVolumeOntapConfiguration_H
