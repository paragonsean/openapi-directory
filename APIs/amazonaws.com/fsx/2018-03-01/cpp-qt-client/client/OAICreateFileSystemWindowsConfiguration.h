/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateFileSystemWindowsConfiguration.h
 *
 * The configuration object for the Microsoft Windows file system used in &lt;code&gt;CreateFileSystem&lt;/code&gt; and &lt;code&gt;CreateFileSystemFromBackup&lt;/code&gt; operations.
 */

#ifndef OAICreateFileSystemWindowsConfiguration_H
#define OAICreateFileSystemWindowsConfiguration_H

#include <QJsonObject>

#include "OAICreateFileSystemWindowsConfiguration_AuditLogConfiguration.h"
#include "OAISelfManagedActiveDirectoryConfiguration.h"
#include "OAIWindowsDeploymentType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISelfManagedActiveDirectoryConfiguration;
class OAICreateFileSystemWindowsConfiguration_AuditLogConfiguration;

class OAICreateFileSystemWindowsConfiguration : public OAIObject {
public:
    OAICreateFileSystemWindowsConfiguration();
    OAICreateFileSystemWindowsConfiguration(QString json);
    ~OAICreateFileSystemWindowsConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveDirectoryId() const;
    void setActiveDirectoryId(const QString &active_directory_id);
    bool is_active_directory_id_Set() const;
    bool is_active_directory_id_Valid() const;

    OAISelfManagedActiveDirectoryConfiguration getSelfManagedActiveDirectoryConfiguration() const;
    void setSelfManagedActiveDirectoryConfiguration(const OAISelfManagedActiveDirectoryConfiguration &self_managed_active_directory_configuration);
    bool is_self_managed_active_directory_configuration_Set() const;
    bool is_self_managed_active_directory_configuration_Valid() const;

    OAIWindowsDeploymentType getDeploymentType() const;
    void setDeploymentType(const OAIWindowsDeploymentType &deployment_type);
    bool is_deployment_type_Set() const;
    bool is_deployment_type_Valid() const;

    QString getPreferredSubnetId() const;
    void setPreferredSubnetId(const QString &preferred_subnet_id);
    bool is_preferred_subnet_id_Set() const;
    bool is_preferred_subnet_id_Valid() const;

    qint32 getThroughputCapacity() const;
    void setThroughputCapacity(const qint32 &throughput_capacity);
    bool is_throughput_capacity_Set() const;
    bool is_throughput_capacity_Valid() const;

    QString getWeeklyMaintenanceStartTime() const;
    void setWeeklyMaintenanceStartTime(const QString &weekly_maintenance_start_time);
    bool is_weekly_maintenance_start_time_Set() const;
    bool is_weekly_maintenance_start_time_Valid() const;

    QString getDailyAutomaticBackupStartTime() const;
    void setDailyAutomaticBackupStartTime(const QString &daily_automatic_backup_start_time);
    bool is_daily_automatic_backup_start_time_Set() const;
    bool is_daily_automatic_backup_start_time_Valid() const;

    qint32 getAutomaticBackupRetentionDays() const;
    void setAutomaticBackupRetentionDays(const qint32 &automatic_backup_retention_days);
    bool is_automatic_backup_retention_days_Set() const;
    bool is_automatic_backup_retention_days_Valid() const;

    bool getCopyTagsToBackups() const;
    void setCopyTagsToBackups(const bool &copy_tags_to_backups);
    bool is_copy_tags_to_backups_Set() const;
    bool is_copy_tags_to_backups_Valid() const;

    QList getAliases() const;
    void setAliases(const QList &aliases);
    bool is_aliases_Set() const;
    bool is_aliases_Valid() const;

    OAICreateFileSystemWindowsConfiguration_AuditLogConfiguration getAuditLogConfiguration() const;
    void setAuditLogConfiguration(const OAICreateFileSystemWindowsConfiguration_AuditLogConfiguration &audit_log_configuration);
    bool is_audit_log_configuration_Set() const;
    bool is_audit_log_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_directory_id;
    bool m_active_directory_id_isSet;
    bool m_active_directory_id_isValid;

    OAISelfManagedActiveDirectoryConfiguration m_self_managed_active_directory_configuration;
    bool m_self_managed_active_directory_configuration_isSet;
    bool m_self_managed_active_directory_configuration_isValid;

    OAIWindowsDeploymentType m_deployment_type;
    bool m_deployment_type_isSet;
    bool m_deployment_type_isValid;

    QString m_preferred_subnet_id;
    bool m_preferred_subnet_id_isSet;
    bool m_preferred_subnet_id_isValid;

    qint32 m_throughput_capacity;
    bool m_throughput_capacity_isSet;
    bool m_throughput_capacity_isValid;

    QString m_weekly_maintenance_start_time;
    bool m_weekly_maintenance_start_time_isSet;
    bool m_weekly_maintenance_start_time_isValid;

    QString m_daily_automatic_backup_start_time;
    bool m_daily_automatic_backup_start_time_isSet;
    bool m_daily_automatic_backup_start_time_isValid;

    qint32 m_automatic_backup_retention_days;
    bool m_automatic_backup_retention_days_isSet;
    bool m_automatic_backup_retention_days_isValid;

    bool m_copy_tags_to_backups;
    bool m_copy_tags_to_backups_isSet;
    bool m_copy_tags_to_backups_isValid;

    QList m_aliases;
    bool m_aliases_isSet;
    bool m_aliases_isValid;

    OAICreateFileSystemWindowsConfiguration_AuditLogConfiguration m_audit_log_configuration;
    bool m_audit_log_configuration_isSet;
    bool m_audit_log_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateFileSystemWindowsConfiguration)

#endif // OAICreateFileSystemWindowsConfiguration_H
