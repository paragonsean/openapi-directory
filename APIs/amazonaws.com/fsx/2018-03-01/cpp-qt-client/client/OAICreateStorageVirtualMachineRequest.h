/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateStorageVirtualMachineRequest.h
 *
 * 
 */

#ifndef OAICreateStorageVirtualMachineRequest_H
#define OAICreateStorageVirtualMachineRequest_H

#include <QJsonObject>

#include "OAICreateStorageVirtualMachineRequest_ActiveDirectoryConfiguration.h"
#include "OAIStorageVirtualMachineRootVolumeSecurityStyle.h"
#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateStorageVirtualMachineRequest_ActiveDirectoryConfiguration;
class OAITag;

class OAICreateStorageVirtualMachineRequest : public OAIObject {
public:
    OAICreateStorageVirtualMachineRequest();
    OAICreateStorageVirtualMachineRequest(QString json);
    ~OAICreateStorageVirtualMachineRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateStorageVirtualMachineRequest_ActiveDirectoryConfiguration getActiveDirectoryConfiguration() const;
    void setActiveDirectoryConfiguration(const OAICreateStorageVirtualMachineRequest_ActiveDirectoryConfiguration &active_directory_configuration);
    bool is_active_directory_configuration_Set() const;
    bool is_active_directory_configuration_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSvmAdminPassword() const;
    void setSvmAdminPassword(const QString &svm_admin_password);
    bool is_svm_admin_password_Set() const;
    bool is_svm_admin_password_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIStorageVirtualMachineRootVolumeSecurityStyle getRootVolumeSecurityStyle() const;
    void setRootVolumeSecurityStyle(const OAIStorageVirtualMachineRootVolumeSecurityStyle &root_volume_security_style);
    bool is_root_volume_security_style_Set() const;
    bool is_root_volume_security_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateStorageVirtualMachineRequest_ActiveDirectoryConfiguration m_active_directory_configuration;
    bool m_active_directory_configuration_isSet;
    bool m_active_directory_configuration_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_svm_admin_password;
    bool m_svm_admin_password_isSet;
    bool m_svm_admin_password_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIStorageVirtualMachineRootVolumeSecurityStyle m_root_volume_security_style;
    bool m_root_volume_security_style_isSet;
    bool m_root_volume_security_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateStorageVirtualMachineRequest)

#endif // OAICreateStorageVirtualMachineRequest_H
