/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataRepositoryConfiguration.h
 *
 * &lt;p&gt;The data repository configuration object for Lustre file systems returned in the response of the &lt;code&gt;CreateFileSystem&lt;/code&gt; operation.&lt;/p&gt; &lt;p&gt;This data type is not supported on file systems with a data repository association. For file systems with a data repository association, see .&lt;/p&gt;
 */

#ifndef OAIDataRepositoryConfiguration_H
#define OAIDataRepositoryConfiguration_H

#include <QJsonObject>

#include "OAIAutoImportPolicyType.h"
#include "OAIDataRepositoryFailureDetails.h"
#include "OAIDataRepositoryLifecycle.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataRepositoryFailureDetails;

class OAIDataRepositoryConfiguration : public OAIObject {
public:
    OAIDataRepositoryConfiguration();
    OAIDataRepositoryConfiguration(QString json);
    ~OAIDataRepositoryConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataRepositoryLifecycle getLifecycle() const;
    void setLifecycle(const OAIDataRepositoryLifecycle &lifecycle);
    bool is_lifecycle_Set() const;
    bool is_lifecycle_Valid() const;

    QString getImportPath() const;
    void setImportPath(const QString &import_path);
    bool is_import_path_Set() const;
    bool is_import_path_Valid() const;

    QString getExportPath() const;
    void setExportPath(const QString &export_path);
    bool is_export_path_Set() const;
    bool is_export_path_Valid() const;

    qint32 getImportedFileChunkSize() const;
    void setImportedFileChunkSize(const qint32 &imported_file_chunk_size);
    bool is_imported_file_chunk_size_Set() const;
    bool is_imported_file_chunk_size_Valid() const;

    OAIAutoImportPolicyType getAutoImportPolicy() const;
    void setAutoImportPolicy(const OAIAutoImportPolicyType &auto_import_policy);
    bool is_auto_import_policy_Set() const;
    bool is_auto_import_policy_Valid() const;

    OAIDataRepositoryFailureDetails getFailureDetails() const;
    void setFailureDetails(const OAIDataRepositoryFailureDetails &failure_details);
    bool is_failure_details_Set() const;
    bool is_failure_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataRepositoryLifecycle m_lifecycle;
    bool m_lifecycle_isSet;
    bool m_lifecycle_isValid;

    QString m_import_path;
    bool m_import_path_isSet;
    bool m_import_path_isValid;

    QString m_export_path;
    bool m_export_path_isSet;
    bool m_export_path_isValid;

    qint32 m_imported_file_chunk_size;
    bool m_imported_file_chunk_size_isSet;
    bool m_imported_file_chunk_size_isValid;

    OAIAutoImportPolicyType m_auto_import_policy;
    bool m_auto_import_policy_isSet;
    bool m_auto_import_policy_isValid;

    OAIDataRepositoryFailureDetails m_failure_details;
    bool m_failure_details_isSet;
    bool m_failure_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataRepositoryConfiguration)

#endif // OAIDataRepositoryConfiguration_H
