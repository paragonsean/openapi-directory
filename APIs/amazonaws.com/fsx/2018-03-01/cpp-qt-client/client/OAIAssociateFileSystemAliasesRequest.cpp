/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateFileSystemAliasesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateFileSystemAliasesRequest::OAIAssociateFileSystemAliasesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateFileSystemAliasesRequest::OAIAssociateFileSystemAliasesRequest() {
    this->initializeModel();
}

OAIAssociateFileSystemAliasesRequest::~OAIAssociateFileSystemAliasesRequest() {}

void OAIAssociateFileSystemAliasesRequest::initializeModel() {

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;

    m_file_system_id_isSet = false;
    m_file_system_id_isValid = false;

    m_aliases_isSet = false;
    m_aliases_isValid = false;
}

void OAIAssociateFileSystemAliasesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateFileSystemAliasesRequest::fromJsonObject(QJsonObject json) {

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("ClientRequestToken")]);
    m_client_request_token_isSet = !json[QString("ClientRequestToken")].isNull() && m_client_request_token_isValid;

    m_file_system_id_isValid = ::OpenAPI::fromJsonValue(m_file_system_id, json[QString("FileSystemId")]);
    m_file_system_id_isSet = !json[QString("FileSystemId")].isNull() && m_file_system_id_isValid;

    m_aliases_isValid = ::OpenAPI::fromJsonValue(m_aliases, json[QString("Aliases")]);
    m_aliases_isSet = !json[QString("Aliases")].isNull() && m_aliases_isValid;
}

QString OAIAssociateFileSystemAliasesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateFileSystemAliasesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_client_request_token_isSet) {
        obj.insert(QString("ClientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    if (m_file_system_id_isSet) {
        obj.insert(QString("FileSystemId"), ::OpenAPI::toJsonValue(m_file_system_id));
    }
    if (m_aliases.isSet()) {
        obj.insert(QString("Aliases"), ::OpenAPI::toJsonValue(m_aliases));
    }
    return obj;
}

QString OAIAssociateFileSystemAliasesRequest::getClientRequestToken() const {
    return m_client_request_token;
}
void OAIAssociateFileSystemAliasesRequest::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAIAssociateFileSystemAliasesRequest::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAIAssociateFileSystemAliasesRequest::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

QString OAIAssociateFileSystemAliasesRequest::getFileSystemId() const {
    return m_file_system_id;
}
void OAIAssociateFileSystemAliasesRequest::setFileSystemId(const QString &file_system_id) {
    m_file_system_id = file_system_id;
    m_file_system_id_isSet = true;
}

bool OAIAssociateFileSystemAliasesRequest::is_file_system_id_Set() const{
    return m_file_system_id_isSet;
}

bool OAIAssociateFileSystemAliasesRequest::is_file_system_id_Valid() const{
    return m_file_system_id_isValid;
}

QList OAIAssociateFileSystemAliasesRequest::getAliases() const {
    return m_aliases;
}
void OAIAssociateFileSystemAliasesRequest::setAliases(const QList &aliases) {
    m_aliases = aliases;
    m_aliases_isSet = true;
}

bool OAIAssociateFileSystemAliasesRequest::is_aliases_Set() const{
    return m_aliases_isSet;
}

bool OAIAssociateFileSystemAliasesRequest::is_aliases_Valid() const{
    return m_aliases_isValid;
}

bool OAIAssociateFileSystemAliasesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aliases.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateFileSystemAliasesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_file_system_id_isValid && m_aliases_isValid && true;
}

} // namespace OpenAPI
