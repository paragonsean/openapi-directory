/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateFileSystemRequest.h
 *
 * The request object for the &lt;code&gt;UpdateFileSystem&lt;/code&gt; operation.
 */

#ifndef OAIUpdateFileSystemRequest_H
#define OAIUpdateFileSystemRequest_H

#include <QJsonObject>

#include "OAIUpdateFileSystemLustreConfiguration.h"
#include "OAIUpdateFileSystemOntapConfiguration.h"
#include "OAIUpdateFileSystemRequest_OpenZFSConfiguration.h"
#include "OAIUpdateFileSystemRequest_WindowsConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateFileSystemRequest_WindowsConfiguration;
class OAIUpdateFileSystemLustreConfiguration;
class OAIUpdateFileSystemOntapConfiguration;
class OAIUpdateFileSystemRequest_OpenZFSConfiguration;

class OAIUpdateFileSystemRequest : public OAIObject {
public:
    OAIUpdateFileSystemRequest();
    OAIUpdateFileSystemRequest(QString json);
    ~OAIUpdateFileSystemRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    qint32 getStorageCapacity() const;
    void setStorageCapacity(const qint32 &storage_capacity);
    bool is_storage_capacity_Set() const;
    bool is_storage_capacity_Valid() const;

    OAIUpdateFileSystemRequest_WindowsConfiguration getWindowsConfiguration() const;
    void setWindowsConfiguration(const OAIUpdateFileSystemRequest_WindowsConfiguration &windows_configuration);
    bool is_windows_configuration_Set() const;
    bool is_windows_configuration_Valid() const;

    OAIUpdateFileSystemLustreConfiguration getLustreConfiguration() const;
    void setLustreConfiguration(const OAIUpdateFileSystemLustreConfiguration &lustre_configuration);
    bool is_lustre_configuration_Set() const;
    bool is_lustre_configuration_Valid() const;

    OAIUpdateFileSystemOntapConfiguration getOntapConfiguration() const;
    void setOntapConfiguration(const OAIUpdateFileSystemOntapConfiguration &ontap_configuration);
    bool is_ontap_configuration_Set() const;
    bool is_ontap_configuration_Valid() const;

    OAIUpdateFileSystemRequest_OpenZFSConfiguration getOpenZfsConfiguration() const;
    void setOpenZfsConfiguration(const OAIUpdateFileSystemRequest_OpenZFSConfiguration &open_zfs_configuration);
    bool is_open_zfs_configuration_Set() const;
    bool is_open_zfs_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    qint32 m_storage_capacity;
    bool m_storage_capacity_isSet;
    bool m_storage_capacity_isValid;

    OAIUpdateFileSystemRequest_WindowsConfiguration m_windows_configuration;
    bool m_windows_configuration_isSet;
    bool m_windows_configuration_isValid;

    OAIUpdateFileSystemLustreConfiguration m_lustre_configuration;
    bool m_lustre_configuration_isSet;
    bool m_lustre_configuration_isValid;

    OAIUpdateFileSystemOntapConfiguration m_ontap_configuration;
    bool m_ontap_configuration_isSet;
    bool m_ontap_configuration_isValid;

    OAIUpdateFileSystemRequest_OpenZFSConfiguration m_open_zfs_configuration;
    bool m_open_zfs_configuration_isSet;
    bool m_open_zfs_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateFileSystemRequest)

#endif // OAIUpdateFileSystemRequest_H
