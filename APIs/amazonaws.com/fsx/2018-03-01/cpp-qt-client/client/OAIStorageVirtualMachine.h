/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageVirtualMachine.h
 *
 * Describes the Amazon FSx for NetApp ONTAP storage virtual machine (SVM) configuration.
 */

#ifndef OAIStorageVirtualMachine_H
#define OAIStorageVirtualMachine_H

#include <QJsonObject>

#include "OAIStorageVirtualMachineLifecycle.h"
#include "OAIStorageVirtualMachineRootVolumeSecurityStyle.h"
#include "OAIStorageVirtualMachineSubtype.h"
#include "OAIStorageVirtualMachine_ActiveDirectoryConfiguration.h"
#include "OAIStorageVirtualMachine_Endpoints.h"
#include "OAIStorageVirtualMachine_LifecycleTransitionReason.h"
#include "OAITag.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStorageVirtualMachine_ActiveDirectoryConfiguration;
class OAIStorageVirtualMachine_Endpoints;
class OAITag;
class OAIStorageVirtualMachine_LifecycleTransitionReason;

class OAIStorageVirtualMachine : public OAIObject {
public:
    OAIStorageVirtualMachine();
    OAIStorageVirtualMachine(QString json);
    ~OAIStorageVirtualMachine() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStorageVirtualMachine_ActiveDirectoryConfiguration getActiveDirectoryConfiguration() const;
    void setActiveDirectoryConfiguration(const OAIStorageVirtualMachine_ActiveDirectoryConfiguration &active_directory_configuration);
    bool is_active_directory_configuration_Set() const;
    bool is_active_directory_configuration_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAIStorageVirtualMachine_Endpoints getEndpoints() const;
    void setEndpoints(const OAIStorageVirtualMachine_Endpoints &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    OAIStorageVirtualMachineLifecycle getLifecycle() const;
    void setLifecycle(const OAIStorageVirtualMachineLifecycle &lifecycle);
    bool is_lifecycle_Set() const;
    bool is_lifecycle_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    QString getStorageVirtualMachineId() const;
    void setStorageVirtualMachineId(const QString &storage_virtual_machine_id);
    bool is_storage_virtual_machine_id_Set() const;
    bool is_storage_virtual_machine_id_Valid() const;

    OAIStorageVirtualMachineSubtype getSubtype() const;
    void setSubtype(const OAIStorageVirtualMachineSubtype &subtype);
    bool is_subtype_Set() const;
    bool is_subtype_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIStorageVirtualMachine_LifecycleTransitionReason getLifecycleTransitionReason() const;
    void setLifecycleTransitionReason(const OAIStorageVirtualMachine_LifecycleTransitionReason &lifecycle_transition_reason);
    bool is_lifecycle_transition_reason_Set() const;
    bool is_lifecycle_transition_reason_Valid() const;

    OAIStorageVirtualMachineRootVolumeSecurityStyle getRootVolumeSecurityStyle() const;
    void setRootVolumeSecurityStyle(const OAIStorageVirtualMachineRootVolumeSecurityStyle &root_volume_security_style);
    bool is_root_volume_security_style_Set() const;
    bool is_root_volume_security_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStorageVirtualMachine_ActiveDirectoryConfiguration m_active_directory_configuration;
    bool m_active_directory_configuration_isSet;
    bool m_active_directory_configuration_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAIStorageVirtualMachine_Endpoints m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    OAIStorageVirtualMachineLifecycle m_lifecycle;
    bool m_lifecycle_isSet;
    bool m_lifecycle_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    QString m_storage_virtual_machine_id;
    bool m_storage_virtual_machine_id_isSet;
    bool m_storage_virtual_machine_id_isValid;

    OAIStorageVirtualMachineSubtype m_subtype;
    bool m_subtype_isSet;
    bool m_subtype_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIStorageVirtualMachine_LifecycleTransitionReason m_lifecycle_transition_reason;
    bool m_lifecycle_transition_reason_isSet;
    bool m_lifecycle_transition_reason_isValid;

    OAIStorageVirtualMachineRootVolumeSecurityStyle m_root_volume_security_style;
    bool m_root_volume_security_style_isSet;
    bool m_root_volume_security_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageVirtualMachine)

#endif // OAIStorageVirtualMachine_H
