/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateFileSystemLustreConfiguration.h
 *
 * The configuration object for Amazon FSx for Lustre file systems used in the &lt;code&gt;UpdateFileSystem&lt;/code&gt; operation.
 */

#ifndef OAIUpdateFileSystemLustreConfiguration_H
#define OAIUpdateFileSystemLustreConfiguration_H

#include <QJsonObject>

#include "OAIAutoImportPolicyType.h"
#include "OAIDataCompressionType.h"
#include "OAIUpdateFileSystemLustreConfiguration_LogConfiguration.h"
#include "OAIUpdateFileSystemLustreConfiguration_RootSquashConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateFileSystemLustreConfiguration_LogConfiguration;
class OAIUpdateFileSystemLustreConfiguration_RootSquashConfiguration;

class OAIUpdateFileSystemLustreConfiguration : public OAIObject {
public:
    OAIUpdateFileSystemLustreConfiguration();
    OAIUpdateFileSystemLustreConfiguration(QString json);
    ~OAIUpdateFileSystemLustreConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWeeklyMaintenanceStartTime() const;
    void setWeeklyMaintenanceStartTime(const QString &weekly_maintenance_start_time);
    bool is_weekly_maintenance_start_time_Set() const;
    bool is_weekly_maintenance_start_time_Valid() const;

    QString getDailyAutomaticBackupStartTime() const;
    void setDailyAutomaticBackupStartTime(const QString &daily_automatic_backup_start_time);
    bool is_daily_automatic_backup_start_time_Set() const;
    bool is_daily_automatic_backup_start_time_Valid() const;

    qint32 getAutomaticBackupRetentionDays() const;
    void setAutomaticBackupRetentionDays(const qint32 &automatic_backup_retention_days);
    bool is_automatic_backup_retention_days_Set() const;
    bool is_automatic_backup_retention_days_Valid() const;

    OAIAutoImportPolicyType getAutoImportPolicy() const;
    void setAutoImportPolicy(const OAIAutoImportPolicyType &auto_import_policy);
    bool is_auto_import_policy_Set() const;
    bool is_auto_import_policy_Valid() const;

    OAIDataCompressionType getDataCompressionType() const;
    void setDataCompressionType(const OAIDataCompressionType &data_compression_type);
    bool is_data_compression_type_Set() const;
    bool is_data_compression_type_Valid() const;

    OAIUpdateFileSystemLustreConfiguration_LogConfiguration getLogConfiguration() const;
    void setLogConfiguration(const OAIUpdateFileSystemLustreConfiguration_LogConfiguration &log_configuration);
    bool is_log_configuration_Set() const;
    bool is_log_configuration_Valid() const;

    OAIUpdateFileSystemLustreConfiguration_RootSquashConfiguration getRootSquashConfiguration() const;
    void setRootSquashConfiguration(const OAIUpdateFileSystemLustreConfiguration_RootSquashConfiguration &root_squash_configuration);
    bool is_root_squash_configuration_Set() const;
    bool is_root_squash_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_weekly_maintenance_start_time;
    bool m_weekly_maintenance_start_time_isSet;
    bool m_weekly_maintenance_start_time_isValid;

    QString m_daily_automatic_backup_start_time;
    bool m_daily_automatic_backup_start_time_isSet;
    bool m_daily_automatic_backup_start_time_isValid;

    qint32 m_automatic_backup_retention_days;
    bool m_automatic_backup_retention_days_isSet;
    bool m_automatic_backup_retention_days_isValid;

    OAIAutoImportPolicyType m_auto_import_policy;
    bool m_auto_import_policy_isSet;
    bool m_auto_import_policy_isValid;

    OAIDataCompressionType m_data_compression_type;
    bool m_data_compression_type_isSet;
    bool m_data_compression_type_isValid;

    OAIUpdateFileSystemLustreConfiguration_LogConfiguration m_log_configuration;
    bool m_log_configuration_isSet;
    bool m_log_configuration_isValid;

    OAIUpdateFileSystemLustreConfiguration_RootSquashConfiguration m_root_squash_configuration;
    bool m_root_squash_configuration_isSet;
    bool m_root_squash_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateFileSystemLustreConfiguration)

#endif // OAIUpdateFileSystemLustreConfiguration_H
