/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISvmEndpoints_Smb.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISvmEndpoints_Smb::OAISvmEndpoints_Smb(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISvmEndpoints_Smb::OAISvmEndpoints_Smb() {
    this->initializeModel();
}

OAISvmEndpoints_Smb::~OAISvmEndpoints_Smb() {}

void OAISvmEndpoints_Smb::initializeModel() {

    m_dns_name_isSet = false;
    m_dns_name_isValid = false;

    m_ip_addresses_isSet = false;
    m_ip_addresses_isValid = false;
}

void OAISvmEndpoints_Smb::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISvmEndpoints_Smb::fromJsonObject(QJsonObject json) {

    m_dns_name_isValid = ::OpenAPI::fromJsonValue(m_dns_name, json[QString("DNSName")]);
    m_dns_name_isSet = !json[QString("DNSName")].isNull() && m_dns_name_isValid;

    m_ip_addresses_isValid = ::OpenAPI::fromJsonValue(m_ip_addresses, json[QString("IpAddresses")]);
    m_ip_addresses_isSet = !json[QString("IpAddresses")].isNull() && m_ip_addresses_isValid;
}

QString OAISvmEndpoints_Smb::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISvmEndpoints_Smb::asJsonObject() const {
    QJsonObject obj;
    if (m_dns_name_isSet) {
        obj.insert(QString("DNSName"), ::OpenAPI::toJsonValue(m_dns_name));
    }
    if (m_ip_addresses.isSet()) {
        obj.insert(QString("IpAddresses"), ::OpenAPI::toJsonValue(m_ip_addresses));
    }
    return obj;
}

QString OAISvmEndpoints_Smb::getDnsName() const {
    return m_dns_name;
}
void OAISvmEndpoints_Smb::setDnsName(const QString &dns_name) {
    m_dns_name = dns_name;
    m_dns_name_isSet = true;
}

bool OAISvmEndpoints_Smb::is_dns_name_Set() const{
    return m_dns_name_isSet;
}

bool OAISvmEndpoints_Smb::is_dns_name_Valid() const{
    return m_dns_name_isValid;
}

QList OAISvmEndpoints_Smb::getIpAddresses() const {
    return m_ip_addresses;
}
void OAISvmEndpoints_Smb::setIpAddresses(const QList &ip_addresses) {
    m_ip_addresses = ip_addresses;
    m_ip_addresses_isSet = true;
}

bool OAISvmEndpoints_Smb::is_ip_addresses_Set() const{
    return m_ip_addresses_isSet;
}

bool OAISvmEndpoints_Smb::is_ip_addresses_Valid() const{
    return m_ip_addresses_isValid;
}

bool OAISvmEndpoints_Smb::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dns_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_addresses.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISvmEndpoints_Smb::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
