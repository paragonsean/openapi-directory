/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageVirtualMachine_Endpoints.h
 *
 * 
 */

#ifndef OAIStorageVirtualMachine_Endpoints_H
#define OAIStorageVirtualMachine_Endpoints_H

#include <QJsonObject>

#include "OAISvmEndpoints_Iscsi.h"
#include "OAISvmEndpoints_Management.h"
#include "OAISvmEndpoints_Nfs.h"
#include "OAISvmEndpoints_Smb.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISvmEndpoints_Iscsi;
class OAISvmEndpoints_Management;
class OAISvmEndpoints_Nfs;
class OAISvmEndpoints_Smb;

class OAIStorageVirtualMachine_Endpoints : public OAIObject {
public:
    OAIStorageVirtualMachine_Endpoints();
    OAIStorageVirtualMachine_Endpoints(QString json);
    ~OAIStorageVirtualMachine_Endpoints() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISvmEndpoints_Iscsi getIscsi() const;
    void setIscsi(const OAISvmEndpoints_Iscsi &iscsi);
    bool is_iscsi_Set() const;
    bool is_iscsi_Valid() const;

    OAISvmEndpoints_Management getManagement() const;
    void setManagement(const OAISvmEndpoints_Management &management);
    bool is_management_Set() const;
    bool is_management_Valid() const;

    OAISvmEndpoints_Nfs getNfs() const;
    void setNfs(const OAISvmEndpoints_Nfs &nfs);
    bool is_nfs_Set() const;
    bool is_nfs_Valid() const;

    OAISvmEndpoints_Smb getSmb() const;
    void setSmb(const OAISvmEndpoints_Smb &smb);
    bool is_smb_Set() const;
    bool is_smb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISvmEndpoints_Iscsi m_iscsi;
    bool m_iscsi_isSet;
    bool m_iscsi_isValid;

    OAISvmEndpoints_Management m_management;
    bool m_management_isSet;
    bool m_management_isValid;

    OAISvmEndpoints_Nfs m_nfs;
    bool m_nfs_isSet;
    bool m_nfs_isValid;

    OAISvmEndpoints_Smb m_smb;
    bool m_smb_isSet;
    bool m_smb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageVirtualMachine_Endpoints)

#endif // OAIStorageVirtualMachine_Endpoints_H
