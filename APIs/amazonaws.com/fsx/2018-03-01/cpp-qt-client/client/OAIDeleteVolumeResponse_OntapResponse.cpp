/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteVolumeResponse_OntapResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteVolumeResponse_OntapResponse::OAIDeleteVolumeResponse_OntapResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteVolumeResponse_OntapResponse::OAIDeleteVolumeResponse_OntapResponse() {
    this->initializeModel();
}

OAIDeleteVolumeResponse_OntapResponse::~OAIDeleteVolumeResponse_OntapResponse() {}

void OAIDeleteVolumeResponse_OntapResponse::initializeModel() {

    m_final_backup_id_isSet = false;
    m_final_backup_id_isValid = false;

    m_final_backup_tags_isSet = false;
    m_final_backup_tags_isValid = false;
}

void OAIDeleteVolumeResponse_OntapResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteVolumeResponse_OntapResponse::fromJsonObject(QJsonObject json) {

    m_final_backup_id_isValid = ::OpenAPI::fromJsonValue(m_final_backup_id, json[QString("FinalBackupId")]);
    m_final_backup_id_isSet = !json[QString("FinalBackupId")].isNull() && m_final_backup_id_isValid;

    m_final_backup_tags_isValid = ::OpenAPI::fromJsonValue(m_final_backup_tags, json[QString("FinalBackupTags")]);
    m_final_backup_tags_isSet = !json[QString("FinalBackupTags")].isNull() && m_final_backup_tags_isValid;
}

QString OAIDeleteVolumeResponse_OntapResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteVolumeResponse_OntapResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_final_backup_id_isSet) {
        obj.insert(QString("FinalBackupId"), ::OpenAPI::toJsonValue(m_final_backup_id));
    }
    if (m_final_backup_tags.size() > 0) {
        obj.insert(QString("FinalBackupTags"), ::OpenAPI::toJsonValue(m_final_backup_tags));
    }
    return obj;
}

QString OAIDeleteVolumeResponse_OntapResponse::getFinalBackupId() const {
    return m_final_backup_id;
}
void OAIDeleteVolumeResponse_OntapResponse::setFinalBackupId(const QString &final_backup_id) {
    m_final_backup_id = final_backup_id;
    m_final_backup_id_isSet = true;
}

bool OAIDeleteVolumeResponse_OntapResponse::is_final_backup_id_Set() const{
    return m_final_backup_id_isSet;
}

bool OAIDeleteVolumeResponse_OntapResponse::is_final_backup_id_Valid() const{
    return m_final_backup_id_isValid;
}

QList<OAITag> OAIDeleteVolumeResponse_OntapResponse::getFinalBackupTags() const {
    return m_final_backup_tags;
}
void OAIDeleteVolumeResponse_OntapResponse::setFinalBackupTags(const QList<OAITag> &final_backup_tags) {
    m_final_backup_tags = final_backup_tags;
    m_final_backup_tags_isSet = true;
}

bool OAIDeleteVolumeResponse_OntapResponse::is_final_backup_tags_Set() const{
    return m_final_backup_tags_isSet;
}

bool OAIDeleteVolumeResponse_OntapResponse::is_final_backup_tags_Valid() const{
    return m_final_backup_tags_isValid;
}

bool OAIDeleteVolumeResponse_OntapResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_final_backup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_final_backup_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteVolumeResponse_OntapResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
