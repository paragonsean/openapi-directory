/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutocommitPeriod.h
 *
 * &lt;p&gt;Sets the autocommit period of files in an FSx for ONTAP SnapLock volume, which determines how long the files must remain unmodified before they&#39;re automatically transitioned to the write once, read many (WORM) state. &lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/worm-state.html#worm-state-autocommit\&quot;&gt;Autocommit&lt;/a&gt;. &lt;/p&gt;
 */

#ifndef OAIAutocommitPeriod_H
#define OAIAutocommitPeriod_H

#include <QJsonObject>

#include "OAIAutocommitPeriodType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutocommitPeriod : public OAIObject {
public:
    OAIAutocommitPeriod();
    OAIAutocommitPeriod(QString json);
    ~OAIAutocommitPeriod() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAutocommitPeriodType getType() const;
    void setType(const OAIAutocommitPeriodType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getValue() const;
    void setValue(const qint32 &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAutocommitPeriodType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutocommitPeriod)

#endif // OAIAutocommitPeriod_H
