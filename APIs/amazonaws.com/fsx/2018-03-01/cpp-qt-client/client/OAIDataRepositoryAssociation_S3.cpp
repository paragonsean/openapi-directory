/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataRepositoryAssociation_S3.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataRepositoryAssociation_S3::OAIDataRepositoryAssociation_S3(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataRepositoryAssociation_S3::OAIDataRepositoryAssociation_S3() {
    this->initializeModel();
}

OAIDataRepositoryAssociation_S3::~OAIDataRepositoryAssociation_S3() {}

void OAIDataRepositoryAssociation_S3::initializeModel() {

    m_auto_import_policy_isSet = false;
    m_auto_import_policy_isValid = false;

    m_auto_export_policy_isSet = false;
    m_auto_export_policy_isValid = false;
}

void OAIDataRepositoryAssociation_S3::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataRepositoryAssociation_S3::fromJsonObject(QJsonObject json) {

    m_auto_import_policy_isValid = ::OpenAPI::fromJsonValue(m_auto_import_policy, json[QString("AutoImportPolicy")]);
    m_auto_import_policy_isSet = !json[QString("AutoImportPolicy")].isNull() && m_auto_import_policy_isValid;

    m_auto_export_policy_isValid = ::OpenAPI::fromJsonValue(m_auto_export_policy, json[QString("AutoExportPolicy")]);
    m_auto_export_policy_isSet = !json[QString("AutoExportPolicy")].isNull() && m_auto_export_policy_isValid;
}

QString OAIDataRepositoryAssociation_S3::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataRepositoryAssociation_S3::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_import_policy.isSet()) {
        obj.insert(QString("AutoImportPolicy"), ::OpenAPI::toJsonValue(m_auto_import_policy));
    }
    if (m_auto_export_policy.isSet()) {
        obj.insert(QString("AutoExportPolicy"), ::OpenAPI::toJsonValue(m_auto_export_policy));
    }
    return obj;
}

OAIS3DataRepositoryConfiguration_AutoImportPolicy OAIDataRepositoryAssociation_S3::getAutoImportPolicy() const {
    return m_auto_import_policy;
}
void OAIDataRepositoryAssociation_S3::setAutoImportPolicy(const OAIS3DataRepositoryConfiguration_AutoImportPolicy &auto_import_policy) {
    m_auto_import_policy = auto_import_policy;
    m_auto_import_policy_isSet = true;
}

bool OAIDataRepositoryAssociation_S3::is_auto_import_policy_Set() const{
    return m_auto_import_policy_isSet;
}

bool OAIDataRepositoryAssociation_S3::is_auto_import_policy_Valid() const{
    return m_auto_import_policy_isValid;
}

OAIS3DataRepositoryConfiguration_AutoExportPolicy OAIDataRepositoryAssociation_S3::getAutoExportPolicy() const {
    return m_auto_export_policy;
}
void OAIDataRepositoryAssociation_S3::setAutoExportPolicy(const OAIS3DataRepositoryConfiguration_AutoExportPolicy &auto_export_policy) {
    m_auto_export_policy = auto_export_policy;
    m_auto_export_policy_isSet = true;
}

bool OAIDataRepositoryAssociation_S3::is_auto_export_policy_Set() const{
    return m_auto_export_policy_isSet;
}

bool OAIDataRepositoryAssociation_S3::is_auto_export_policy_Valid() const{
    return m_auto_export_policy_isValid;
}

bool OAIDataRepositoryAssociation_S3::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_import_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_export_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataRepositoryAssociation_S3::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
