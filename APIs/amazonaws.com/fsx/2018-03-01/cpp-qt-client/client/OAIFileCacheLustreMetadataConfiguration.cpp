/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileCacheLustreMetadataConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileCacheLustreMetadataConfiguration::OAIFileCacheLustreMetadataConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileCacheLustreMetadataConfiguration::OAIFileCacheLustreMetadataConfiguration() {
    this->initializeModel();
}

OAIFileCacheLustreMetadataConfiguration::~OAIFileCacheLustreMetadataConfiguration() {}

void OAIFileCacheLustreMetadataConfiguration::initializeModel() {

    m_storage_capacity_isSet = false;
    m_storage_capacity_isValid = false;
}

void OAIFileCacheLustreMetadataConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileCacheLustreMetadataConfiguration::fromJsonObject(QJsonObject json) {

    m_storage_capacity_isValid = ::OpenAPI::fromJsonValue(m_storage_capacity, json[QString("StorageCapacity")]);
    m_storage_capacity_isSet = !json[QString("StorageCapacity")].isNull() && m_storage_capacity_isValid;
}

QString OAIFileCacheLustreMetadataConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileCacheLustreMetadataConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_storage_capacity_isSet) {
        obj.insert(QString("StorageCapacity"), ::OpenAPI::toJsonValue(m_storage_capacity));
    }
    return obj;
}

qint32 OAIFileCacheLustreMetadataConfiguration::getStorageCapacity() const {
    return m_storage_capacity;
}
void OAIFileCacheLustreMetadataConfiguration::setStorageCapacity(const qint32 &storage_capacity) {
    m_storage_capacity = storage_capacity;
    m_storage_capacity_isSet = true;
}

bool OAIFileCacheLustreMetadataConfiguration::is_storage_capacity_Set() const{
    return m_storage_capacity_isSet;
}

bool OAIFileCacheLustreMetadataConfiguration::is_storage_capacity_Valid() const{
    return m_storage_capacity_isValid;
}

bool OAIFileCacheLustreMetadataConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_storage_capacity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileCacheLustreMetadataConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_storage_capacity_isValid && true;
}

} // namespace OpenAPI
