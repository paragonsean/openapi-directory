/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateFileSystemOntapConfiguration.h
 *
 * The ONTAP configuration properties of the FSx for ONTAP file system that you are creating.
 */

#ifndef OAICreateFileSystemOntapConfiguration_H
#define OAICreateFileSystemOntapConfiguration_H

#include <QJsonObject>

#include "OAICreateFileSystemOntapConfiguration_DiskIopsConfiguration.h"
#include "OAIOntapDeploymentType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateFileSystemOntapConfiguration_DiskIopsConfiguration;

class OAICreateFileSystemOntapConfiguration : public OAIObject {
public:
    OAICreateFileSystemOntapConfiguration();
    OAICreateFileSystemOntapConfiguration(QString json);
    ~OAICreateFileSystemOntapConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAutomaticBackupRetentionDays() const;
    void setAutomaticBackupRetentionDays(const qint32 &automatic_backup_retention_days);
    bool is_automatic_backup_retention_days_Set() const;
    bool is_automatic_backup_retention_days_Valid() const;

    QString getDailyAutomaticBackupStartTime() const;
    void setDailyAutomaticBackupStartTime(const QString &daily_automatic_backup_start_time);
    bool is_daily_automatic_backup_start_time_Set() const;
    bool is_daily_automatic_backup_start_time_Valid() const;

    OAIOntapDeploymentType getDeploymentType() const;
    void setDeploymentType(const OAIOntapDeploymentType &deployment_type);
    bool is_deployment_type_Set() const;
    bool is_deployment_type_Valid() const;

    QString getEndpointIpAddressRange() const;
    void setEndpointIpAddressRange(const QString &endpoint_ip_address_range);
    bool is_endpoint_ip_address_range_Set() const;
    bool is_endpoint_ip_address_range_Valid() const;

    QString getFsxAdminPassword() const;
    void setFsxAdminPassword(const QString &fsx_admin_password);
    bool is_fsx_admin_password_Set() const;
    bool is_fsx_admin_password_Valid() const;

    OAICreateFileSystemOntapConfiguration_DiskIopsConfiguration getDiskIopsConfiguration() const;
    void setDiskIopsConfiguration(const OAICreateFileSystemOntapConfiguration_DiskIopsConfiguration &disk_iops_configuration);
    bool is_disk_iops_configuration_Set() const;
    bool is_disk_iops_configuration_Valid() const;

    QString getPreferredSubnetId() const;
    void setPreferredSubnetId(const QString &preferred_subnet_id);
    bool is_preferred_subnet_id_Set() const;
    bool is_preferred_subnet_id_Valid() const;

    QList getRouteTableIds() const;
    void setRouteTableIds(const QList &route_table_ids);
    bool is_route_table_ids_Set() const;
    bool is_route_table_ids_Valid() const;

    qint32 getThroughputCapacity() const;
    void setThroughputCapacity(const qint32 &throughput_capacity);
    bool is_throughput_capacity_Set() const;
    bool is_throughput_capacity_Valid() const;

    QString getWeeklyMaintenanceStartTime() const;
    void setWeeklyMaintenanceStartTime(const QString &weekly_maintenance_start_time);
    bool is_weekly_maintenance_start_time_Set() const;
    bool is_weekly_maintenance_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_automatic_backup_retention_days;
    bool m_automatic_backup_retention_days_isSet;
    bool m_automatic_backup_retention_days_isValid;

    QString m_daily_automatic_backup_start_time;
    bool m_daily_automatic_backup_start_time_isSet;
    bool m_daily_automatic_backup_start_time_isValid;

    OAIOntapDeploymentType m_deployment_type;
    bool m_deployment_type_isSet;
    bool m_deployment_type_isValid;

    QString m_endpoint_ip_address_range;
    bool m_endpoint_ip_address_range_isSet;
    bool m_endpoint_ip_address_range_isValid;

    QString m_fsx_admin_password;
    bool m_fsx_admin_password_isSet;
    bool m_fsx_admin_password_isValid;

    OAICreateFileSystemOntapConfiguration_DiskIopsConfiguration m_disk_iops_configuration;
    bool m_disk_iops_configuration_isSet;
    bool m_disk_iops_configuration_isValid;

    QString m_preferred_subnet_id;
    bool m_preferred_subnet_id_isSet;
    bool m_preferred_subnet_id_isValid;

    QList m_route_table_ids;
    bool m_route_table_ids_isSet;
    bool m_route_table_ids_isValid;

    qint32 m_throughput_capacity;
    bool m_throughput_capacity_isSet;
    bool m_throughput_capacity_isValid;

    QString m_weekly_maintenance_start_time;
    bool m_weekly_maintenance_start_time_isSet;
    bool m_weekly_maintenance_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateFileSystemOntapConfiguration)

#endif // OAICreateFileSystemOntapConfiguration_H
