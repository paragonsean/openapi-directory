/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateOntapVolumeConfiguration_TieringPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateOntapVolumeConfiguration_TieringPolicy::OAIUpdateOntapVolumeConfiguration_TieringPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateOntapVolumeConfiguration_TieringPolicy::OAIUpdateOntapVolumeConfiguration_TieringPolicy() {
    this->initializeModel();
}

OAIUpdateOntapVolumeConfiguration_TieringPolicy::~OAIUpdateOntapVolumeConfiguration_TieringPolicy() {}

void OAIUpdateOntapVolumeConfiguration_TieringPolicy::initializeModel() {

    m_cooling_period_isSet = false;
    m_cooling_period_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIUpdateOntapVolumeConfiguration_TieringPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateOntapVolumeConfiguration_TieringPolicy::fromJsonObject(QJsonObject json) {

    m_cooling_period_isValid = ::OpenAPI::fromJsonValue(m_cooling_period, json[QString("CoolingPeriod")]);
    m_cooling_period_isSet = !json[QString("CoolingPeriod")].isNull() && m_cooling_period_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIUpdateOntapVolumeConfiguration_TieringPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateOntapVolumeConfiguration_TieringPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_cooling_period_isSet) {
        obj.insert(QString("CoolingPeriod"), ::OpenAPI::toJsonValue(m_cooling_period));
    }
    if (m_name.isSet()) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

qint32 OAIUpdateOntapVolumeConfiguration_TieringPolicy::getCoolingPeriod() const {
    return m_cooling_period;
}
void OAIUpdateOntapVolumeConfiguration_TieringPolicy::setCoolingPeriod(const qint32 &cooling_period) {
    m_cooling_period = cooling_period;
    m_cooling_period_isSet = true;
}

bool OAIUpdateOntapVolumeConfiguration_TieringPolicy::is_cooling_period_Set() const{
    return m_cooling_period_isSet;
}

bool OAIUpdateOntapVolumeConfiguration_TieringPolicy::is_cooling_period_Valid() const{
    return m_cooling_period_isValid;
}

OAITieringPolicyName OAIUpdateOntapVolumeConfiguration_TieringPolicy::getName() const {
    return m_name;
}
void OAIUpdateOntapVolumeConfiguration_TieringPolicy::setName(const OAITieringPolicyName &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateOntapVolumeConfiguration_TieringPolicy::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateOntapVolumeConfiguration_TieringPolicy::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIUpdateOntapVolumeConfiguration_TieringPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cooling_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateOntapVolumeConfiguration_TieringPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
