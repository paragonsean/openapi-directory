/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiskIopsConfiguration.h
 *
 * The SSD IOPS (input/output operations per second) configuration for an Amazon FSx for NetApp ONTAP or FSx for OpenZFS file system. By default, Amazon FSx automatically provisions 3 IOPS per GB of storage capacity. You can provision additional IOPS per GB of storage. The configuration consists of the total number of provisioned SSD IOPS and how it is was provisioned, or the mode (by the customer or by Amazon FSx).
 */

#ifndef OAIDiskIopsConfiguration_H
#define OAIDiskIopsConfiguration_H

#include <QJsonObject>

#include "OAIDiskIopsConfigurationMode.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDiskIopsConfiguration : public OAIObject {
public:
    OAIDiskIopsConfiguration();
    OAIDiskIopsConfiguration(QString json);
    ~OAIDiskIopsConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDiskIopsConfigurationMode getMode() const;
    void setMode(const OAIDiskIopsConfigurationMode &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    qint32 getIops() const;
    void setIops(const qint32 &iops);
    bool is_iops_Set() const;
    bool is_iops_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDiskIopsConfigurationMode m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    qint32 m_iops;
    bool m_iops_isSet;
    bool m_iops_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiskIopsConfiguration)

#endif // OAIDiskIopsConfiguration_H
