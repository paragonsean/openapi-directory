/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOpenZFSNfsExport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOpenZFSNfsExport::OAIOpenZFSNfsExport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOpenZFSNfsExport::OAIOpenZFSNfsExport() {
    this->initializeModel();
}

OAIOpenZFSNfsExport::~OAIOpenZFSNfsExport() {}

void OAIOpenZFSNfsExport::initializeModel() {

    m_client_configurations_isSet = false;
    m_client_configurations_isValid = false;
}

void OAIOpenZFSNfsExport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOpenZFSNfsExport::fromJsonObject(QJsonObject json) {

    m_client_configurations_isValid = ::OpenAPI::fromJsonValue(m_client_configurations, json[QString("ClientConfigurations")]);
    m_client_configurations_isSet = !json[QString("ClientConfigurations")].isNull() && m_client_configurations_isValid;
}

QString OAIOpenZFSNfsExport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOpenZFSNfsExport::asJsonObject() const {
    QJsonObject obj;
    if (m_client_configurations.isSet()) {
        obj.insert(QString("ClientConfigurations"), ::OpenAPI::toJsonValue(m_client_configurations));
    }
    return obj;
}

QList OAIOpenZFSNfsExport::getClientConfigurations() const {
    return m_client_configurations;
}
void OAIOpenZFSNfsExport::setClientConfigurations(const QList &client_configurations) {
    m_client_configurations = client_configurations;
    m_client_configurations_isSet = true;
}

bool OAIOpenZFSNfsExport::is_client_configurations_Set() const{
    return m_client_configurations_isSet;
}

bool OAIOpenZFSNfsExport::is_client_configurations_Valid() const{
    return m_client_configurations_isValid;
}

bool OAIOpenZFSNfsExport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOpenZFSNfsExport::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_client_configurations_isValid && true;
}

} // namespace OpenAPI
