/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataRepositoryTaskType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataRepositoryTaskType::OAIDataRepositoryTaskType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataRepositoryTaskType::OAIDataRepositoryTaskType() {
    this->initializeModel();
}

OAIDataRepositoryTaskType::~OAIDataRepositoryTaskType() {}

void OAIDataRepositoryTaskType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDataRepositoryTaskType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDataRepositoryTaskType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("EXPORT_TO_REPOSITORY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataRepositoryTaskType::EXPORT_TO_REPOSITORY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IMPORT_METADATA_FROM_REPOSITORY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataRepositoryTaskType::IMPORT_METADATA_FROM_REPOSITORY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RELEASE_DATA_FROM_FILESYSTEM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataRepositoryTaskType::RELEASE_DATA_FROM_FILESYSTEM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUTO_RELEASE_DATA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataRepositoryTaskType::AUTO_RELEASE_DATA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDataRepositoryTaskType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDataRepositoryTaskType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDataRepositoryTaskType::EXPORT_TO_REPOSITORY:
            val = "EXPORT_TO_REPOSITORY";
            break;
        case eOAIDataRepositoryTaskType::IMPORT_METADATA_FROM_REPOSITORY:
            val = "IMPORT_METADATA_FROM_REPOSITORY";
            break;
        case eOAIDataRepositoryTaskType::RELEASE_DATA_FROM_FILESYSTEM:
            val = "RELEASE_DATA_FROM_FILESYSTEM";
            break;
        case eOAIDataRepositoryTaskType::AUTO_RELEASE_DATA:
            val = "AUTO_RELEASE_DATA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDataRepositoryTaskType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDataRepositoryTaskType::eOAIDataRepositoryTaskType OAIDataRepositoryTaskType::getValue() const {
    return m_value;
}

void OAIDataRepositoryTaskType::setValue(const OAIDataRepositoryTaskType::eOAIDataRepositoryTaskType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDataRepositoryTaskType::isSet() const {
    
    return m_value_isSet;
}

bool OAIDataRepositoryTaskType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
