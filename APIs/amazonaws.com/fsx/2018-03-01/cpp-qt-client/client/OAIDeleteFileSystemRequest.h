/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteFileSystemRequest.h
 *
 * The request object for &lt;code&gt;DeleteFileSystem&lt;/code&gt; operation.
 */

#ifndef OAIDeleteFileSystemRequest_H
#define OAIDeleteFileSystemRequest_H

#include <QJsonObject>

#include "OAIDeleteFileSystemLustreConfiguration.h"
#include "OAIDeleteFileSystemRequest_OpenZFSConfiguration.h"
#include "OAIDeleteFileSystemWindowsConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeleteFileSystemWindowsConfiguration;
class OAIDeleteFileSystemLustreConfiguration;
class OAIDeleteFileSystemRequest_OpenZFSConfiguration;

class OAIDeleteFileSystemRequest : public OAIObject {
public:
    OAIDeleteFileSystemRequest();
    OAIDeleteFileSystemRequest(QString json);
    ~OAIDeleteFileSystemRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    OAIDeleteFileSystemWindowsConfiguration getWindowsConfiguration() const;
    void setWindowsConfiguration(const OAIDeleteFileSystemWindowsConfiguration &windows_configuration);
    bool is_windows_configuration_Set() const;
    bool is_windows_configuration_Valid() const;

    OAIDeleteFileSystemLustreConfiguration getLustreConfiguration() const;
    void setLustreConfiguration(const OAIDeleteFileSystemLustreConfiguration &lustre_configuration);
    bool is_lustre_configuration_Set() const;
    bool is_lustre_configuration_Valid() const;

    OAIDeleteFileSystemRequest_OpenZFSConfiguration getOpenZfsConfiguration() const;
    void setOpenZfsConfiguration(const OAIDeleteFileSystemRequest_OpenZFSConfiguration &open_zfs_configuration);
    bool is_open_zfs_configuration_Set() const;
    bool is_open_zfs_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    OAIDeleteFileSystemWindowsConfiguration m_windows_configuration;
    bool m_windows_configuration_isSet;
    bool m_windows_configuration_isValid;

    OAIDeleteFileSystemLustreConfiguration m_lustre_configuration;
    bool m_lustre_configuration_isSet;
    bool m_lustre_configuration_isValid;

    OAIDeleteFileSystemRequest_OpenZFSConfiguration m_open_zfs_configuration;
    bool m_open_zfs_configuration_isSet;
    bool m_open_zfs_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteFileSystemRequest)

#endif // OAIDeleteFileSystemRequest_H
