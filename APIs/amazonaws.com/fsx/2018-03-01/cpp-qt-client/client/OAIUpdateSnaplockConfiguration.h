/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSnaplockConfiguration.h
 *
 * Updates the SnapLock configuration for an existing FSx for ONTAP volume. 
 */

#ifndef OAIUpdateSnaplockConfiguration_H
#define OAIUpdateSnaplockConfiguration_H

#include <QJsonObject>

#include "OAICreateSnaplockConfiguration_AutocommitPeriod.h"
#include "OAICreateSnaplockConfiguration_RetentionPeriod.h"
#include "OAIPrivilegedDelete.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateSnaplockConfiguration_AutocommitPeriod;
class OAICreateSnaplockConfiguration_RetentionPeriod;

class OAIUpdateSnaplockConfiguration : public OAIObject {
public:
    OAIUpdateSnaplockConfiguration();
    OAIUpdateSnaplockConfiguration(QString json);
    ~OAIUpdateSnaplockConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getAuditLogVolume() const;
    void setAuditLogVolume(const bool &audit_log_volume);
    bool is_audit_log_volume_Set() const;
    bool is_audit_log_volume_Valid() const;

    OAICreateSnaplockConfiguration_AutocommitPeriod getAutocommitPeriod() const;
    void setAutocommitPeriod(const OAICreateSnaplockConfiguration_AutocommitPeriod &autocommit_period);
    bool is_autocommit_period_Set() const;
    bool is_autocommit_period_Valid() const;

    OAIPrivilegedDelete getPrivilegedDelete() const;
    void setPrivilegedDelete(const OAIPrivilegedDelete &privileged_delete);
    bool is_privileged_delete_Set() const;
    bool is_privileged_delete_Valid() const;

    OAICreateSnaplockConfiguration_RetentionPeriod getRetentionPeriod() const;
    void setRetentionPeriod(const OAICreateSnaplockConfiguration_RetentionPeriod &retention_period);
    bool is_retention_period_Set() const;
    bool is_retention_period_Valid() const;

    bool getVolumeAppendModeEnabled() const;
    void setVolumeAppendModeEnabled(const bool &volume_append_mode_enabled);
    bool is_volume_append_mode_enabled_Set() const;
    bool is_volume_append_mode_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_audit_log_volume;
    bool m_audit_log_volume_isSet;
    bool m_audit_log_volume_isValid;

    OAICreateSnaplockConfiguration_AutocommitPeriod m_autocommit_period;
    bool m_autocommit_period_isSet;
    bool m_autocommit_period_isValid;

    OAIPrivilegedDelete m_privileged_delete;
    bool m_privileged_delete_isSet;
    bool m_privileged_delete_isValid;

    OAICreateSnaplockConfiguration_RetentionPeriod m_retention_period;
    bool m_retention_period_isSet;
    bool m_retention_period_isValid;

    bool m_volume_append_mode_enabled;
    bool m_volume_append_mode_enabled_isSet;
    bool m_volume_append_mode_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSnaplockConfiguration)

#endif // OAIUpdateSnaplockConfiguration_H
