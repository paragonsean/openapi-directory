/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOntapVolumeType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOntapVolumeType::OAIOntapVolumeType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOntapVolumeType::OAIOntapVolumeType() {
    this->initializeModel();
}

OAIOntapVolumeType::~OAIOntapVolumeType() {}

void OAIOntapVolumeType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOntapVolumeType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOntapVolumeType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("RW", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOntapVolumeType::RW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOntapVolumeType::DP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOntapVolumeType::LS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOntapVolumeType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOntapVolumeType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOntapVolumeType::RW:
            val = "RW";
            break;
        case eOAIOntapVolumeType::DP:
            val = "DP";
            break;
        case eOAIOntapVolumeType::LS:
            val = "LS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOntapVolumeType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOntapVolumeType::eOAIOntapVolumeType OAIOntapVolumeType::getValue() const {
    return m_value;
}

void OAIOntapVolumeType::setValue(const OAIOntapVolumeType::eOAIOntapVolumeType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOntapVolumeType::isSet() const {
    
    return m_value_isSet;
}

bool OAIOntapVolumeType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
