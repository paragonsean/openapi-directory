/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDataRepositoryTaskRequest.h
 *
 * 
 */

#ifndef OAICreateDataRepositoryTaskRequest_H
#define OAICreateDataRepositoryTaskRequest_H

#include <QJsonObject>

#include "OAICreateDataRepositoryTaskRequest_Report.h"
#include "OAIDataRepositoryTaskType.h"
#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateDataRepositoryTaskRequest_Report;
class OAITag;

class OAICreateDataRepositoryTaskRequest : public OAIObject {
public:
    OAICreateDataRepositoryTaskRequest();
    OAICreateDataRepositoryTaskRequest(QString json);
    ~OAICreateDataRepositoryTaskRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataRepositoryTaskType getType() const;
    void setType(const OAIDataRepositoryTaskType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList getPaths() const;
    void setPaths(const QList &paths);
    bool is_paths_Set() const;
    bool is_paths_Valid() const;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    OAICreateDataRepositoryTaskRequest_Report getReport() const;
    void setReport(const OAICreateDataRepositoryTaskRequest_Report &report);
    bool is_report_Set() const;
    bool is_report_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    qint32 getCapacityToRelease() const;
    void setCapacityToRelease(const qint32 &capacity_to_release);
    bool is_capacity_to_release_Set() const;
    bool is_capacity_to_release_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataRepositoryTaskType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList m_paths;
    bool m_paths_isSet;
    bool m_paths_isValid;

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    OAICreateDataRepositoryTaskRequest_Report m_report;
    bool m_report_isSet;
    bool m_report_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    qint32 m_capacity_to_release;
    bool m_capacity_to_release_isSet;
    bool m_capacity_to_release_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDataRepositoryTaskRequest)

#endif // OAICreateDataRepositoryTaskRequest_H
