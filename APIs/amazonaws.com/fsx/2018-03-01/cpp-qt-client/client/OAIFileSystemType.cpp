/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileSystemType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileSystemType::OAIFileSystemType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileSystemType::OAIFileSystemType() {
    this->initializeModel();
}

OAIFileSystemType::~OAIFileSystemType() {}

void OAIFileSystemType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFileSystemType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFileSystemType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("WINDOWS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileSystemType::WINDOWS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LUSTRE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileSystemType::LUSTRE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ONTAP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileSystemType::ONTAP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OPENZFS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFileSystemType::OPENZFS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFileSystemType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFileSystemType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFileSystemType::WINDOWS:
            val = "WINDOWS";
            break;
        case eOAIFileSystemType::LUSTRE:
            val = "LUSTRE";
            break;
        case eOAIFileSystemType::ONTAP:
            val = "ONTAP";
            break;
        case eOAIFileSystemType::OPENZFS:
            val = "OPENZFS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFileSystemType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFileSystemType::eOAIFileSystemType OAIFileSystemType::getValue() const {
    return m_value;
}

void OAIFileSystemType::setValue(const OAIFileSystemType::eOAIFileSystemType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFileSystemType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFileSystemType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
