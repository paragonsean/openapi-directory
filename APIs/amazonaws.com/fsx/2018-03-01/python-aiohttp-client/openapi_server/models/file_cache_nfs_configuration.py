# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nfs_version import NfsVersion
from openapi_server import util


class FileCacheNFSConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, version: NfsVersion=None, dns_ips: List=None):
        """FileCacheNFSConfiguration - a model defined in OpenAPI

        :param version: The version of this FileCacheNFSConfiguration.
        :param dns_ips: The dns_ips of this FileCacheNFSConfiguration.
        """
        self.openapi_types = {
            'version': NfsVersion,
            'dns_ips': List
        }

        self.attribute_map = {
            'version': 'Version',
            'dns_ips': 'DnsIps'
        }

        self._version = version
        self._dns_ips = dns_ips

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileCacheNFSConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileCacheNFSConfiguration of this FileCacheNFSConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version(self):
        """Gets the version of this FileCacheNFSConfiguration.


        :return: The version of this FileCacheNFSConfiguration.
        :rtype: NfsVersion
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this FileCacheNFSConfiguration.


        :param version: The version of this FileCacheNFSConfiguration.
        :type version: NfsVersion
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version

    @property
    def dns_ips(self):
        """Gets the dns_ips of this FileCacheNFSConfiguration.


        :return: The dns_ips of this FileCacheNFSConfiguration.
        :rtype: List
        """
        return self._dns_ips

    @dns_ips.setter
    def dns_ips(self, dns_ips):
        """Sets the dns_ips of this FileCacheNFSConfiguration.


        :param dns_ips: The dns_ips of this FileCacheNFSConfiguration.
        :type dns_ips: List
        """

        self._dns_ips = dns_ips
