# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alias import Alias
from openapi_server.models.self_managed_active_directory_attributes import SelfManagedActiveDirectoryAttributes
from openapi_server.models.windows_deployment_type import WindowsDeploymentType
from openapi_server.models.windows_file_system_configuration_audit_log_configuration import WindowsFileSystemConfigurationAuditLogConfiguration
from openapi_server import util


class FileSystemWindowsConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_directory_id: str=None, self_managed_active_directory_configuration: SelfManagedActiveDirectoryAttributes=None, deployment_type: WindowsDeploymentType=None, remote_administration_endpoint: str=None, preferred_subnet_id: str=None, preferred_file_server_ip: str=None, throughput_capacity: int=None, maintenance_operations_in_progress: List=None, weekly_maintenance_start_time: str=None, daily_automatic_backup_start_time: str=None, automatic_backup_retention_days: int=None, copy_tags_to_backups: bool=None, aliases: List[Alias]=None, audit_log_configuration: WindowsFileSystemConfigurationAuditLogConfiguration=None):
        """FileSystemWindowsConfiguration - a model defined in OpenAPI

        :param active_directory_id: The active_directory_id of this FileSystemWindowsConfiguration.
        :param self_managed_active_directory_configuration: The self_managed_active_directory_configuration of this FileSystemWindowsConfiguration.
        :param deployment_type: The deployment_type of this FileSystemWindowsConfiguration.
        :param remote_administration_endpoint: The remote_administration_endpoint of this FileSystemWindowsConfiguration.
        :param preferred_subnet_id: The preferred_subnet_id of this FileSystemWindowsConfiguration.
        :param preferred_file_server_ip: The preferred_file_server_ip of this FileSystemWindowsConfiguration.
        :param throughput_capacity: The throughput_capacity of this FileSystemWindowsConfiguration.
        :param maintenance_operations_in_progress: The maintenance_operations_in_progress of this FileSystemWindowsConfiguration.
        :param weekly_maintenance_start_time: The weekly_maintenance_start_time of this FileSystemWindowsConfiguration.
        :param daily_automatic_backup_start_time: The daily_automatic_backup_start_time of this FileSystemWindowsConfiguration.
        :param automatic_backup_retention_days: The automatic_backup_retention_days of this FileSystemWindowsConfiguration.
        :param copy_tags_to_backups: The copy_tags_to_backups of this FileSystemWindowsConfiguration.
        :param aliases: The aliases of this FileSystemWindowsConfiguration.
        :param audit_log_configuration: The audit_log_configuration of this FileSystemWindowsConfiguration.
        """
        self.openapi_types = {
            'active_directory_id': str,
            'self_managed_active_directory_configuration': SelfManagedActiveDirectoryAttributes,
            'deployment_type': WindowsDeploymentType,
            'remote_administration_endpoint': str,
            'preferred_subnet_id': str,
            'preferred_file_server_ip': str,
            'throughput_capacity': int,
            'maintenance_operations_in_progress': List,
            'weekly_maintenance_start_time': str,
            'daily_automatic_backup_start_time': str,
            'automatic_backup_retention_days': int,
            'copy_tags_to_backups': bool,
            'aliases': List[Alias],
            'audit_log_configuration': WindowsFileSystemConfigurationAuditLogConfiguration
        }

        self.attribute_map = {
            'active_directory_id': 'ActiveDirectoryId',
            'self_managed_active_directory_configuration': 'SelfManagedActiveDirectoryConfiguration',
            'deployment_type': 'DeploymentType',
            'remote_administration_endpoint': 'RemoteAdministrationEndpoint',
            'preferred_subnet_id': 'PreferredSubnetId',
            'preferred_file_server_ip': 'PreferredFileServerIp',
            'throughput_capacity': 'ThroughputCapacity',
            'maintenance_operations_in_progress': 'MaintenanceOperationsInProgress',
            'weekly_maintenance_start_time': 'WeeklyMaintenanceStartTime',
            'daily_automatic_backup_start_time': 'DailyAutomaticBackupStartTime',
            'automatic_backup_retention_days': 'AutomaticBackupRetentionDays',
            'copy_tags_to_backups': 'CopyTagsToBackups',
            'aliases': 'Aliases',
            'audit_log_configuration': 'AuditLogConfiguration'
        }

        self._active_directory_id = active_directory_id
        self._self_managed_active_directory_configuration = self_managed_active_directory_configuration
        self._deployment_type = deployment_type
        self._remote_administration_endpoint = remote_administration_endpoint
        self._preferred_subnet_id = preferred_subnet_id
        self._preferred_file_server_ip = preferred_file_server_ip
        self._throughput_capacity = throughput_capacity
        self._maintenance_operations_in_progress = maintenance_operations_in_progress
        self._weekly_maintenance_start_time = weekly_maintenance_start_time
        self._daily_automatic_backup_start_time = daily_automatic_backup_start_time
        self._automatic_backup_retention_days = automatic_backup_retention_days
        self._copy_tags_to_backups = copy_tags_to_backups
        self._aliases = aliases
        self._audit_log_configuration = audit_log_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileSystemWindowsConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileSystem_WindowsConfiguration of this FileSystemWindowsConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_directory_id(self):
        """Gets the active_directory_id of this FileSystemWindowsConfiguration.


        :return: The active_directory_id of this FileSystemWindowsConfiguration.
        :rtype: str
        """
        return self._active_directory_id

    @active_directory_id.setter
    def active_directory_id(self, active_directory_id):
        """Sets the active_directory_id of this FileSystemWindowsConfiguration.


        :param active_directory_id: The active_directory_id of this FileSystemWindowsConfiguration.
        :type active_directory_id: str
        """

        self._active_directory_id = active_directory_id

    @property
    def self_managed_active_directory_configuration(self):
        """Gets the self_managed_active_directory_configuration of this FileSystemWindowsConfiguration.


        :return: The self_managed_active_directory_configuration of this FileSystemWindowsConfiguration.
        :rtype: SelfManagedActiveDirectoryAttributes
        """
        return self._self_managed_active_directory_configuration

    @self_managed_active_directory_configuration.setter
    def self_managed_active_directory_configuration(self, self_managed_active_directory_configuration):
        """Sets the self_managed_active_directory_configuration of this FileSystemWindowsConfiguration.


        :param self_managed_active_directory_configuration: The self_managed_active_directory_configuration of this FileSystemWindowsConfiguration.
        :type self_managed_active_directory_configuration: SelfManagedActiveDirectoryAttributes
        """

        self._self_managed_active_directory_configuration = self_managed_active_directory_configuration

    @property
    def deployment_type(self):
        """Gets the deployment_type of this FileSystemWindowsConfiguration.


        :return: The deployment_type of this FileSystemWindowsConfiguration.
        :rtype: WindowsDeploymentType
        """
        return self._deployment_type

    @deployment_type.setter
    def deployment_type(self, deployment_type):
        """Sets the deployment_type of this FileSystemWindowsConfiguration.


        :param deployment_type: The deployment_type of this FileSystemWindowsConfiguration.
        :type deployment_type: WindowsDeploymentType
        """

        self._deployment_type = deployment_type

    @property
    def remote_administration_endpoint(self):
        """Gets the remote_administration_endpoint of this FileSystemWindowsConfiguration.


        :return: The remote_administration_endpoint of this FileSystemWindowsConfiguration.
        :rtype: str
        """
        return self._remote_administration_endpoint

    @remote_administration_endpoint.setter
    def remote_administration_endpoint(self, remote_administration_endpoint):
        """Sets the remote_administration_endpoint of this FileSystemWindowsConfiguration.


        :param remote_administration_endpoint: The remote_administration_endpoint of this FileSystemWindowsConfiguration.
        :type remote_administration_endpoint: str
        """

        self._remote_administration_endpoint = remote_administration_endpoint

    @property
    def preferred_subnet_id(self):
        """Gets the preferred_subnet_id of this FileSystemWindowsConfiguration.


        :return: The preferred_subnet_id of this FileSystemWindowsConfiguration.
        :rtype: str
        """
        return self._preferred_subnet_id

    @preferred_subnet_id.setter
    def preferred_subnet_id(self, preferred_subnet_id):
        """Sets the preferred_subnet_id of this FileSystemWindowsConfiguration.


        :param preferred_subnet_id: The preferred_subnet_id of this FileSystemWindowsConfiguration.
        :type preferred_subnet_id: str
        """

        self._preferred_subnet_id = preferred_subnet_id

    @property
    def preferred_file_server_ip(self):
        """Gets the preferred_file_server_ip of this FileSystemWindowsConfiguration.


        :return: The preferred_file_server_ip of this FileSystemWindowsConfiguration.
        :rtype: str
        """
        return self._preferred_file_server_ip

    @preferred_file_server_ip.setter
    def preferred_file_server_ip(self, preferred_file_server_ip):
        """Sets the preferred_file_server_ip of this FileSystemWindowsConfiguration.


        :param preferred_file_server_ip: The preferred_file_server_ip of this FileSystemWindowsConfiguration.
        :type preferred_file_server_ip: str
        """

        self._preferred_file_server_ip = preferred_file_server_ip

    @property
    def throughput_capacity(self):
        """Gets the throughput_capacity of this FileSystemWindowsConfiguration.


        :return: The throughput_capacity of this FileSystemWindowsConfiguration.
        :rtype: int
        """
        return self._throughput_capacity

    @throughput_capacity.setter
    def throughput_capacity(self, throughput_capacity):
        """Sets the throughput_capacity of this FileSystemWindowsConfiguration.


        :param throughput_capacity: The throughput_capacity of this FileSystemWindowsConfiguration.
        :type throughput_capacity: int
        """

        self._throughput_capacity = throughput_capacity

    @property
    def maintenance_operations_in_progress(self):
        """Gets the maintenance_operations_in_progress of this FileSystemWindowsConfiguration.


        :return: The maintenance_operations_in_progress of this FileSystemWindowsConfiguration.
        :rtype: List
        """
        return self._maintenance_operations_in_progress

    @maintenance_operations_in_progress.setter
    def maintenance_operations_in_progress(self, maintenance_operations_in_progress):
        """Sets the maintenance_operations_in_progress of this FileSystemWindowsConfiguration.


        :param maintenance_operations_in_progress: The maintenance_operations_in_progress of this FileSystemWindowsConfiguration.
        :type maintenance_operations_in_progress: List
        """

        self._maintenance_operations_in_progress = maintenance_operations_in_progress

    @property
    def weekly_maintenance_start_time(self):
        """Gets the weekly_maintenance_start_time of this FileSystemWindowsConfiguration.


        :return: The weekly_maintenance_start_time of this FileSystemWindowsConfiguration.
        :rtype: str
        """
        return self._weekly_maintenance_start_time

    @weekly_maintenance_start_time.setter
    def weekly_maintenance_start_time(self, weekly_maintenance_start_time):
        """Sets the weekly_maintenance_start_time of this FileSystemWindowsConfiguration.


        :param weekly_maintenance_start_time: The weekly_maintenance_start_time of this FileSystemWindowsConfiguration.
        :type weekly_maintenance_start_time: str
        """

        self._weekly_maintenance_start_time = weekly_maintenance_start_time

    @property
    def daily_automatic_backup_start_time(self):
        """Gets the daily_automatic_backup_start_time of this FileSystemWindowsConfiguration.


        :return: The daily_automatic_backup_start_time of this FileSystemWindowsConfiguration.
        :rtype: str
        """
        return self._daily_automatic_backup_start_time

    @daily_automatic_backup_start_time.setter
    def daily_automatic_backup_start_time(self, daily_automatic_backup_start_time):
        """Sets the daily_automatic_backup_start_time of this FileSystemWindowsConfiguration.


        :param daily_automatic_backup_start_time: The daily_automatic_backup_start_time of this FileSystemWindowsConfiguration.
        :type daily_automatic_backup_start_time: str
        """

        self._daily_automatic_backup_start_time = daily_automatic_backup_start_time

    @property
    def automatic_backup_retention_days(self):
        """Gets the automatic_backup_retention_days of this FileSystemWindowsConfiguration.


        :return: The automatic_backup_retention_days of this FileSystemWindowsConfiguration.
        :rtype: int
        """
        return self._automatic_backup_retention_days

    @automatic_backup_retention_days.setter
    def automatic_backup_retention_days(self, automatic_backup_retention_days):
        """Sets the automatic_backup_retention_days of this FileSystemWindowsConfiguration.


        :param automatic_backup_retention_days: The automatic_backup_retention_days of this FileSystemWindowsConfiguration.
        :type automatic_backup_retention_days: int
        """

        self._automatic_backup_retention_days = automatic_backup_retention_days

    @property
    def copy_tags_to_backups(self):
        """Gets the copy_tags_to_backups of this FileSystemWindowsConfiguration.


        :return: The copy_tags_to_backups of this FileSystemWindowsConfiguration.
        :rtype: bool
        """
        return self._copy_tags_to_backups

    @copy_tags_to_backups.setter
    def copy_tags_to_backups(self, copy_tags_to_backups):
        """Sets the copy_tags_to_backups of this FileSystemWindowsConfiguration.


        :param copy_tags_to_backups: The copy_tags_to_backups of this FileSystemWindowsConfiguration.
        :type copy_tags_to_backups: bool
        """

        self._copy_tags_to_backups = copy_tags_to_backups

    @property
    def aliases(self):
        """Gets the aliases of this FileSystemWindowsConfiguration.

        An array of one or more DNS aliases that are currently associated with the Amazon FSx file system. Aliases allow you to use existing DNS names to access the data in your Amazon FSx file system. You can associate up to 50 aliases with a file system at any time. You can associate additional DNS aliases after you create the file system using the AssociateFileSystemAliases operation. You can remove DNS aliases from the file system after it is created using the DisassociateFileSystemAliases operation. You only need to specify the alias name in the request payload. For more information, see <a href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-dns-aliases.html\">DNS aliases</a>.

        :return: The aliases of this FileSystemWindowsConfiguration.
        :rtype: List[Alias]
        """
        return self._aliases

    @aliases.setter
    def aliases(self, aliases):
        """Sets the aliases of this FileSystemWindowsConfiguration.

        An array of one or more DNS aliases that are currently associated with the Amazon FSx file system. Aliases allow you to use existing DNS names to access the data in your Amazon FSx file system. You can associate up to 50 aliases with a file system at any time. You can associate additional DNS aliases after you create the file system using the AssociateFileSystemAliases operation. You can remove DNS aliases from the file system after it is created using the DisassociateFileSystemAliases operation. You only need to specify the alias name in the request payload. For more information, see <a href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-dns-aliases.html\">DNS aliases</a>.

        :param aliases: The aliases of this FileSystemWindowsConfiguration.
        :type aliases: List[Alias]
        """
        if aliases is not None and len(aliases) > 50:
            raise ValueError("Invalid value for `aliases`, number of items must be less than or equal to `50`")

        self._aliases = aliases

    @property
    def audit_log_configuration(self):
        """Gets the audit_log_configuration of this FileSystemWindowsConfiguration.


        :return: The audit_log_configuration of this FileSystemWindowsConfiguration.
        :rtype: WindowsFileSystemConfigurationAuditLogConfiguration
        """
        return self._audit_log_configuration

    @audit_log_configuration.setter
    def audit_log_configuration(self, audit_log_configuration):
        """Sets the audit_log_configuration of this FileSystemWindowsConfiguration.


        :param audit_log_configuration: The audit_log_configuration of this FileSystemWindowsConfiguration.
        :type audit_log_configuration: WindowsFileSystemConfigurationAuditLogConfiguration
        """

        self._audit_log_configuration = audit_log_configuration
