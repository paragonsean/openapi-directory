# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_file_cache_response_file_cache import UpdateFileCacheResponseFileCache
from openapi_server import util


class UpdateFileCacheResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_cache: UpdateFileCacheResponseFileCache=None):
        """UpdateFileCacheResponse - a model defined in OpenAPI

        :param file_cache: The file_cache of this UpdateFileCacheResponse.
        """
        self.openapi_types = {
            'file_cache': UpdateFileCacheResponseFileCache
        }

        self.attribute_map = {
            'file_cache': 'FileCache'
        }

        self._file_cache = file_cache

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFileCacheResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFileCacheResponse of this UpdateFileCacheResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_cache(self):
        """Gets the file_cache of this UpdateFileCacheResponse.


        :return: The file_cache of this UpdateFileCacheResponse.
        :rtype: UpdateFileCacheResponseFileCache
        """
        return self._file_cache

    @file_cache.setter
    def file_cache(self, file_cache):
        """Sets the file_cache of this UpdateFileCacheResponse.


        :param file_cache: The file_cache of this UpdateFileCacheResponse.
        :type file_cache: UpdateFileCacheResponseFileCache
        """

        self._file_cache = file_cache
