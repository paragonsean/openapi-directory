# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.open_zfs_data_compression_type import OpenZFSDataCompressionType
from openapi_server import util


class UpdateVolumeRequestOpenZFSConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, storage_capacity_reservation_gi_b: int=None, storage_capacity_quota_gi_b: int=None, record_size_ki_b: int=None, data_compression_type: OpenZFSDataCompressionType=None, nfs_exports: List=None, user_and_group_quotas: List=None, read_only: bool=None):
        """UpdateVolumeRequestOpenZFSConfiguration - a model defined in OpenAPI

        :param storage_capacity_reservation_gi_b: The storage_capacity_reservation_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.
        :param storage_capacity_quota_gi_b: The storage_capacity_quota_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.
        :param record_size_ki_b: The record_size_ki_b of this UpdateVolumeRequestOpenZFSConfiguration.
        :param data_compression_type: The data_compression_type of this UpdateVolumeRequestOpenZFSConfiguration.
        :param nfs_exports: The nfs_exports of this UpdateVolumeRequestOpenZFSConfiguration.
        :param user_and_group_quotas: The user_and_group_quotas of this UpdateVolumeRequestOpenZFSConfiguration.
        :param read_only: The read_only of this UpdateVolumeRequestOpenZFSConfiguration.
        """
        self.openapi_types = {
            'storage_capacity_reservation_gi_b': int,
            'storage_capacity_quota_gi_b': int,
            'record_size_ki_b': int,
            'data_compression_type': OpenZFSDataCompressionType,
            'nfs_exports': List,
            'user_and_group_quotas': List,
            'read_only': bool
        }

        self.attribute_map = {
            'storage_capacity_reservation_gi_b': 'StorageCapacityReservationGiB',
            'storage_capacity_quota_gi_b': 'StorageCapacityQuotaGiB',
            'record_size_ki_b': 'RecordSizeKiB',
            'data_compression_type': 'DataCompressionType',
            'nfs_exports': 'NfsExports',
            'user_and_group_quotas': 'UserAndGroupQuotas',
            'read_only': 'ReadOnly'
        }

        self._storage_capacity_reservation_gi_b = storage_capacity_reservation_gi_b
        self._storage_capacity_quota_gi_b = storage_capacity_quota_gi_b
        self._record_size_ki_b = record_size_ki_b
        self._data_compression_type = data_compression_type
        self._nfs_exports = nfs_exports
        self._user_and_group_quotas = user_and_group_quotas
        self._read_only = read_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateVolumeRequestOpenZFSConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateVolumeRequest_OpenZFSConfiguration of this UpdateVolumeRequestOpenZFSConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def storage_capacity_reservation_gi_b(self):
        """Gets the storage_capacity_reservation_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.


        :return: The storage_capacity_reservation_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.
        :rtype: int
        """
        return self._storage_capacity_reservation_gi_b

    @storage_capacity_reservation_gi_b.setter
    def storage_capacity_reservation_gi_b(self, storage_capacity_reservation_gi_b):
        """Sets the storage_capacity_reservation_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.


        :param storage_capacity_reservation_gi_b: The storage_capacity_reservation_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.
        :type storage_capacity_reservation_gi_b: int
        """

        self._storage_capacity_reservation_gi_b = storage_capacity_reservation_gi_b

    @property
    def storage_capacity_quota_gi_b(self):
        """Gets the storage_capacity_quota_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.


        :return: The storage_capacity_quota_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.
        :rtype: int
        """
        return self._storage_capacity_quota_gi_b

    @storage_capacity_quota_gi_b.setter
    def storage_capacity_quota_gi_b(self, storage_capacity_quota_gi_b):
        """Sets the storage_capacity_quota_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.


        :param storage_capacity_quota_gi_b: The storage_capacity_quota_gi_b of this UpdateVolumeRequestOpenZFSConfiguration.
        :type storage_capacity_quota_gi_b: int
        """

        self._storage_capacity_quota_gi_b = storage_capacity_quota_gi_b

    @property
    def record_size_ki_b(self):
        """Gets the record_size_ki_b of this UpdateVolumeRequestOpenZFSConfiguration.


        :return: The record_size_ki_b of this UpdateVolumeRequestOpenZFSConfiguration.
        :rtype: int
        """
        return self._record_size_ki_b

    @record_size_ki_b.setter
    def record_size_ki_b(self, record_size_ki_b):
        """Sets the record_size_ki_b of this UpdateVolumeRequestOpenZFSConfiguration.


        :param record_size_ki_b: The record_size_ki_b of this UpdateVolumeRequestOpenZFSConfiguration.
        :type record_size_ki_b: int
        """

        self._record_size_ki_b = record_size_ki_b

    @property
    def data_compression_type(self):
        """Gets the data_compression_type of this UpdateVolumeRequestOpenZFSConfiguration.


        :return: The data_compression_type of this UpdateVolumeRequestOpenZFSConfiguration.
        :rtype: OpenZFSDataCompressionType
        """
        return self._data_compression_type

    @data_compression_type.setter
    def data_compression_type(self, data_compression_type):
        """Sets the data_compression_type of this UpdateVolumeRequestOpenZFSConfiguration.


        :param data_compression_type: The data_compression_type of this UpdateVolumeRequestOpenZFSConfiguration.
        :type data_compression_type: OpenZFSDataCompressionType
        """

        self._data_compression_type = data_compression_type

    @property
    def nfs_exports(self):
        """Gets the nfs_exports of this UpdateVolumeRequestOpenZFSConfiguration.


        :return: The nfs_exports of this UpdateVolumeRequestOpenZFSConfiguration.
        :rtype: List
        """
        return self._nfs_exports

    @nfs_exports.setter
    def nfs_exports(self, nfs_exports):
        """Sets the nfs_exports of this UpdateVolumeRequestOpenZFSConfiguration.


        :param nfs_exports: The nfs_exports of this UpdateVolumeRequestOpenZFSConfiguration.
        :type nfs_exports: List
        """

        self._nfs_exports = nfs_exports

    @property
    def user_and_group_quotas(self):
        """Gets the user_and_group_quotas of this UpdateVolumeRequestOpenZFSConfiguration.


        :return: The user_and_group_quotas of this UpdateVolumeRequestOpenZFSConfiguration.
        :rtype: List
        """
        return self._user_and_group_quotas

    @user_and_group_quotas.setter
    def user_and_group_quotas(self, user_and_group_quotas):
        """Sets the user_and_group_quotas of this UpdateVolumeRequestOpenZFSConfiguration.


        :param user_and_group_quotas: The user_and_group_quotas of this UpdateVolumeRequestOpenZFSConfiguration.
        :type user_and_group_quotas: List
        """

        self._user_and_group_quotas = user_and_group_quotas

    @property
    def read_only(self):
        """Gets the read_only of this UpdateVolumeRequestOpenZFSConfiguration.


        :return: The read_only of this UpdateVolumeRequestOpenZFSConfiguration.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only):
        """Sets the read_only of this UpdateVolumeRequestOpenZFSConfiguration.


        :param read_only: The read_only of this UpdateVolumeRequestOpenZFSConfiguration.
        :type read_only: bool
        """

        self._read_only = read_only
