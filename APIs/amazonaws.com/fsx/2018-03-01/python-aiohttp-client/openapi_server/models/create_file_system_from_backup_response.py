# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_file_system_from_backup_response_file_system import CreateFileSystemFromBackupResponseFileSystem
from openapi_server import util


class CreateFileSystemFromBackupResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_system: CreateFileSystemFromBackupResponseFileSystem=None):
        """CreateFileSystemFromBackupResponse - a model defined in OpenAPI

        :param file_system: The file_system of this CreateFileSystemFromBackupResponse.
        """
        self.openapi_types = {
            'file_system': CreateFileSystemFromBackupResponseFileSystem
        }

        self.attribute_map = {
            'file_system': 'FileSystem'
        }

        self._file_system = file_system

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFileSystemFromBackupResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFileSystemFromBackupResponse of this CreateFileSystemFromBackupResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_system(self):
        """Gets the file_system of this CreateFileSystemFromBackupResponse.


        :return: The file_system of this CreateFileSystemFromBackupResponse.
        :rtype: CreateFileSystemFromBackupResponseFileSystem
        """
        return self._file_system

    @file_system.setter
    def file_system(self, file_system):
        """Sets the file_system of this CreateFileSystemFromBackupResponse.


        :param file_system: The file_system of this CreateFileSystemFromBackupResponse.
        :type file_system: CreateFileSystemFromBackupResponseFileSystem
        """

        self._file_system = file_system
