# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OpenZFSNfsExport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_configurations: List=None):
        """OpenZFSNfsExport - a model defined in OpenAPI

        :param client_configurations: The client_configurations of this OpenZFSNfsExport.
        """
        self.openapi_types = {
            'client_configurations': List
        }

        self.attribute_map = {
            'client_configurations': 'ClientConfigurations'
        }

        self._client_configurations = client_configurations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OpenZFSNfsExport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OpenZFSNfsExport of this OpenZFSNfsExport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_configurations(self):
        """Gets the client_configurations of this OpenZFSNfsExport.


        :return: The client_configurations of this OpenZFSNfsExport.
        :rtype: List
        """
        return self._client_configurations

    @client_configurations.setter
    def client_configurations(self, client_configurations):
        """Sets the client_configurations of this OpenZFSNfsExport.


        :param client_configurations: The client_configurations of this OpenZFSNfsExport.
        :type client_configurations: List
        """
        if client_configurations is None:
            raise ValueError("Invalid value for `client_configurations`, must not be `None`")

        self._client_configurations = client_configurations
