# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LustreRootSquashConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, root_squash: str=None, no_squash_nids: List=None):
        """LustreRootSquashConfiguration - a model defined in OpenAPI

        :param root_squash: The root_squash of this LustreRootSquashConfiguration.
        :param no_squash_nids: The no_squash_nids of this LustreRootSquashConfiguration.
        """
        self.openapi_types = {
            'root_squash': str,
            'no_squash_nids': List
        }

        self.attribute_map = {
            'root_squash': 'RootSquash',
            'no_squash_nids': 'NoSquashNids'
        }

        self._root_squash = root_squash
        self._no_squash_nids = no_squash_nids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LustreRootSquashConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LustreRootSquashConfiguration of this LustreRootSquashConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def root_squash(self):
        """Gets the root_squash of this LustreRootSquashConfiguration.


        :return: The root_squash of this LustreRootSquashConfiguration.
        :rtype: str
        """
        return self._root_squash

    @root_squash.setter
    def root_squash(self, root_squash):
        """Sets the root_squash of this LustreRootSquashConfiguration.


        :param root_squash: The root_squash of this LustreRootSquashConfiguration.
        :type root_squash: str
        """

        self._root_squash = root_squash

    @property
    def no_squash_nids(self):
        """Gets the no_squash_nids of this LustreRootSquashConfiguration.


        :return: The no_squash_nids of this LustreRootSquashConfiguration.
        :rtype: List
        """
        return self._no_squash_nids

    @no_squash_nids.setter
    def no_squash_nids(self, no_squash_nids):
        """Sets the no_squash_nids of this LustreRootSquashConfiguration.


        :param no_squash_nids: The no_squash_nids of this LustreRootSquashConfiguration.
        :type no_squash_nids: List
        """

        self._no_squash_nids = no_squash_nids
