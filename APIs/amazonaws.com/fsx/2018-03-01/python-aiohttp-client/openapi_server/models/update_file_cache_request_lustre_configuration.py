# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class UpdateFileCacheRequestLustreConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, weekly_maintenance_start_time: str=None):
        """UpdateFileCacheRequestLustreConfiguration - a model defined in OpenAPI

        :param weekly_maintenance_start_time: The weekly_maintenance_start_time of this UpdateFileCacheRequestLustreConfiguration.
        """
        self.openapi_types = {
            'weekly_maintenance_start_time': str
        }

        self.attribute_map = {
            'weekly_maintenance_start_time': 'WeeklyMaintenanceStartTime'
        }

        self._weekly_maintenance_start_time = weekly_maintenance_start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFileCacheRequestLustreConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFileCacheRequest_LustreConfiguration of this UpdateFileCacheRequestLustreConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def weekly_maintenance_start_time(self):
        """Gets the weekly_maintenance_start_time of this UpdateFileCacheRequestLustreConfiguration.

        <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>

        :return: The weekly_maintenance_start_time of this UpdateFileCacheRequestLustreConfiguration.
        :rtype: str
        """
        return self._weekly_maintenance_start_time

    @weekly_maintenance_start_time.setter
    def weekly_maintenance_start_time(self, weekly_maintenance_start_time):
        """Sets the weekly_maintenance_start_time of this UpdateFileCacheRequestLustreConfiguration.

        <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>

        :param weekly_maintenance_start_time: The weekly_maintenance_start_time of this UpdateFileCacheRequestLustreConfiguration.
        :type weekly_maintenance_start_time: str
        """
        if weekly_maintenance_start_time is not None and len(weekly_maintenance_start_time) > 7:
            raise ValueError("Invalid value for `weekly_maintenance_start_time`, length must be less than or equal to `7`")
        if weekly_maintenance_start_time is not None and len(weekly_maintenance_start_time) < 7:
            raise ValueError("Invalid value for `weekly_maintenance_start_time`, length must be greater than or equal to `7`")
        if weekly_maintenance_start_time is not None and not re.search(r'^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$', weekly_maintenance_start_time):
            raise ValueError("Invalid value for `weekly_maintenance_start_time`, must be a follow pattern or equal to `/^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$/`")

        self._weekly_maintenance_start_time = weekly_maintenance_start_time
