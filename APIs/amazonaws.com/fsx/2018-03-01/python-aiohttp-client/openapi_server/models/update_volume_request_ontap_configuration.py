# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.security_style import SecurityStyle
from openapi_server.models.update_ontap_volume_configuration_snaplock_configuration import UpdateOntapVolumeConfigurationSnaplockConfiguration
from openapi_server.models.update_ontap_volume_configuration_tiering_policy import UpdateOntapVolumeConfigurationTieringPolicy
from openapi_server import util


class UpdateVolumeRequestOntapConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, junction_path: str=None, security_style: SecurityStyle=None, size_in_megabytes: int=None, storage_efficiency_enabled: bool=None, tiering_policy: UpdateOntapVolumeConfigurationTieringPolicy=None, snapshot_policy: str=None, copy_tags_to_backups: bool=None, snaplock_configuration: UpdateOntapVolumeConfigurationSnaplockConfiguration=None):
        """UpdateVolumeRequestOntapConfiguration - a model defined in OpenAPI

        :param junction_path: The junction_path of this UpdateVolumeRequestOntapConfiguration.
        :param security_style: The security_style of this UpdateVolumeRequestOntapConfiguration.
        :param size_in_megabytes: The size_in_megabytes of this UpdateVolumeRequestOntapConfiguration.
        :param storage_efficiency_enabled: The storage_efficiency_enabled of this UpdateVolumeRequestOntapConfiguration.
        :param tiering_policy: The tiering_policy of this UpdateVolumeRequestOntapConfiguration.
        :param snapshot_policy: The snapshot_policy of this UpdateVolumeRequestOntapConfiguration.
        :param copy_tags_to_backups: The copy_tags_to_backups of this UpdateVolumeRequestOntapConfiguration.
        :param snaplock_configuration: The snaplock_configuration of this UpdateVolumeRequestOntapConfiguration.
        """
        self.openapi_types = {
            'junction_path': str,
            'security_style': SecurityStyle,
            'size_in_megabytes': int,
            'storage_efficiency_enabled': bool,
            'tiering_policy': UpdateOntapVolumeConfigurationTieringPolicy,
            'snapshot_policy': str,
            'copy_tags_to_backups': bool,
            'snaplock_configuration': UpdateOntapVolumeConfigurationSnaplockConfiguration
        }

        self.attribute_map = {
            'junction_path': 'JunctionPath',
            'security_style': 'SecurityStyle',
            'size_in_megabytes': 'SizeInMegabytes',
            'storage_efficiency_enabled': 'StorageEfficiencyEnabled',
            'tiering_policy': 'TieringPolicy',
            'snapshot_policy': 'SnapshotPolicy',
            'copy_tags_to_backups': 'CopyTagsToBackups',
            'snaplock_configuration': 'SnaplockConfiguration'
        }

        self._junction_path = junction_path
        self._security_style = security_style
        self._size_in_megabytes = size_in_megabytes
        self._storage_efficiency_enabled = storage_efficiency_enabled
        self._tiering_policy = tiering_policy
        self._snapshot_policy = snapshot_policy
        self._copy_tags_to_backups = copy_tags_to_backups
        self._snaplock_configuration = snaplock_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateVolumeRequestOntapConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateVolumeRequest_OntapConfiguration of this UpdateVolumeRequestOntapConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def junction_path(self):
        """Gets the junction_path of this UpdateVolumeRequestOntapConfiguration.


        :return: The junction_path of this UpdateVolumeRequestOntapConfiguration.
        :rtype: str
        """
        return self._junction_path

    @junction_path.setter
    def junction_path(self, junction_path):
        """Sets the junction_path of this UpdateVolumeRequestOntapConfiguration.


        :param junction_path: The junction_path of this UpdateVolumeRequestOntapConfiguration.
        :type junction_path: str
        """

        self._junction_path = junction_path

    @property
    def security_style(self):
        """Gets the security_style of this UpdateVolumeRequestOntapConfiguration.


        :return: The security_style of this UpdateVolumeRequestOntapConfiguration.
        :rtype: SecurityStyle
        """
        return self._security_style

    @security_style.setter
    def security_style(self, security_style):
        """Sets the security_style of this UpdateVolumeRequestOntapConfiguration.


        :param security_style: The security_style of this UpdateVolumeRequestOntapConfiguration.
        :type security_style: SecurityStyle
        """

        self._security_style = security_style

    @property
    def size_in_megabytes(self):
        """Gets the size_in_megabytes of this UpdateVolumeRequestOntapConfiguration.


        :return: The size_in_megabytes of this UpdateVolumeRequestOntapConfiguration.
        :rtype: int
        """
        return self._size_in_megabytes

    @size_in_megabytes.setter
    def size_in_megabytes(self, size_in_megabytes):
        """Sets the size_in_megabytes of this UpdateVolumeRequestOntapConfiguration.


        :param size_in_megabytes: The size_in_megabytes of this UpdateVolumeRequestOntapConfiguration.
        :type size_in_megabytes: int
        """

        self._size_in_megabytes = size_in_megabytes

    @property
    def storage_efficiency_enabled(self):
        """Gets the storage_efficiency_enabled of this UpdateVolumeRequestOntapConfiguration.


        :return: The storage_efficiency_enabled of this UpdateVolumeRequestOntapConfiguration.
        :rtype: bool
        """
        return self._storage_efficiency_enabled

    @storage_efficiency_enabled.setter
    def storage_efficiency_enabled(self, storage_efficiency_enabled):
        """Sets the storage_efficiency_enabled of this UpdateVolumeRequestOntapConfiguration.


        :param storage_efficiency_enabled: The storage_efficiency_enabled of this UpdateVolumeRequestOntapConfiguration.
        :type storage_efficiency_enabled: bool
        """

        self._storage_efficiency_enabled = storage_efficiency_enabled

    @property
    def tiering_policy(self):
        """Gets the tiering_policy of this UpdateVolumeRequestOntapConfiguration.


        :return: The tiering_policy of this UpdateVolumeRequestOntapConfiguration.
        :rtype: UpdateOntapVolumeConfigurationTieringPolicy
        """
        return self._tiering_policy

    @tiering_policy.setter
    def tiering_policy(self, tiering_policy):
        """Sets the tiering_policy of this UpdateVolumeRequestOntapConfiguration.


        :param tiering_policy: The tiering_policy of this UpdateVolumeRequestOntapConfiguration.
        :type tiering_policy: UpdateOntapVolumeConfigurationTieringPolicy
        """

        self._tiering_policy = tiering_policy

    @property
    def snapshot_policy(self):
        """Gets the snapshot_policy of this UpdateVolumeRequestOntapConfiguration.


        :return: The snapshot_policy of this UpdateVolumeRequestOntapConfiguration.
        :rtype: str
        """
        return self._snapshot_policy

    @snapshot_policy.setter
    def snapshot_policy(self, snapshot_policy):
        """Sets the snapshot_policy of this UpdateVolumeRequestOntapConfiguration.


        :param snapshot_policy: The snapshot_policy of this UpdateVolumeRequestOntapConfiguration.
        :type snapshot_policy: str
        """

        self._snapshot_policy = snapshot_policy

    @property
    def copy_tags_to_backups(self):
        """Gets the copy_tags_to_backups of this UpdateVolumeRequestOntapConfiguration.


        :return: The copy_tags_to_backups of this UpdateVolumeRequestOntapConfiguration.
        :rtype: bool
        """
        return self._copy_tags_to_backups

    @copy_tags_to_backups.setter
    def copy_tags_to_backups(self, copy_tags_to_backups):
        """Sets the copy_tags_to_backups of this UpdateVolumeRequestOntapConfiguration.


        :param copy_tags_to_backups: The copy_tags_to_backups of this UpdateVolumeRequestOntapConfiguration.
        :type copy_tags_to_backups: bool
        """

        self._copy_tags_to_backups = copy_tags_to_backups

    @property
    def snaplock_configuration(self):
        """Gets the snaplock_configuration of this UpdateVolumeRequestOntapConfiguration.


        :return: The snaplock_configuration of this UpdateVolumeRequestOntapConfiguration.
        :rtype: UpdateOntapVolumeConfigurationSnaplockConfiguration
        """
        return self._snaplock_configuration

    @snaplock_configuration.setter
    def snaplock_configuration(self, snaplock_configuration):
        """Sets the snaplock_configuration of this UpdateVolumeRequestOntapConfiguration.


        :param snaplock_configuration: The snaplock_configuration of this UpdateVolumeRequestOntapConfiguration.
        :type snaplock_configuration: UpdateOntapVolumeConfigurationSnaplockConfiguration
        """

        self._snaplock_configuration = snaplock_configuration
