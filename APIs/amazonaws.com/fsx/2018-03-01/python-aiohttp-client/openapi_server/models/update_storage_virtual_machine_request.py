# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_storage_virtual_machine_request_active_directory_configuration import UpdateStorageVirtualMachineRequestActiveDirectoryConfiguration
import re
from openapi_server import util


class UpdateStorageVirtualMachineRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_directory_configuration: UpdateStorageVirtualMachineRequestActiveDirectoryConfiguration=None, client_request_token: str=None, storage_virtual_machine_id: str=None, svm_admin_password: str=None):
        """UpdateStorageVirtualMachineRequest - a model defined in OpenAPI

        :param active_directory_configuration: The active_directory_configuration of this UpdateStorageVirtualMachineRequest.
        :param client_request_token: The client_request_token of this UpdateStorageVirtualMachineRequest.
        :param storage_virtual_machine_id: The storage_virtual_machine_id of this UpdateStorageVirtualMachineRequest.
        :param svm_admin_password: The svm_admin_password of this UpdateStorageVirtualMachineRequest.
        """
        self.openapi_types = {
            'active_directory_configuration': UpdateStorageVirtualMachineRequestActiveDirectoryConfiguration,
            'client_request_token': str,
            'storage_virtual_machine_id': str,
            'svm_admin_password': str
        }

        self.attribute_map = {
            'active_directory_configuration': 'ActiveDirectoryConfiguration',
            'client_request_token': 'ClientRequestToken',
            'storage_virtual_machine_id': 'StorageVirtualMachineId',
            'svm_admin_password': 'SvmAdminPassword'
        }

        self._active_directory_configuration = active_directory_configuration
        self._client_request_token = client_request_token
        self._storage_virtual_machine_id = storage_virtual_machine_id
        self._svm_admin_password = svm_admin_password

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateStorageVirtualMachineRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateStorageVirtualMachineRequest of this UpdateStorageVirtualMachineRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_directory_configuration(self):
        """Gets the active_directory_configuration of this UpdateStorageVirtualMachineRequest.


        :return: The active_directory_configuration of this UpdateStorageVirtualMachineRequest.
        :rtype: UpdateStorageVirtualMachineRequestActiveDirectoryConfiguration
        """
        return self._active_directory_configuration

    @active_directory_configuration.setter
    def active_directory_configuration(self, active_directory_configuration):
        """Sets the active_directory_configuration of this UpdateStorageVirtualMachineRequest.


        :param active_directory_configuration: The active_directory_configuration of this UpdateStorageVirtualMachineRequest.
        :type active_directory_configuration: UpdateStorageVirtualMachineRequestActiveDirectoryConfiguration
        """

        self._active_directory_configuration = active_directory_configuration

    @property
    def client_request_token(self):
        """Gets the client_request_token of this UpdateStorageVirtualMachineRequest.

        (Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.

        :return: The client_request_token of this UpdateStorageVirtualMachineRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this UpdateStorageVirtualMachineRequest.

        (Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.

        :param client_request_token: The client_request_token of this UpdateStorageVirtualMachineRequest.
        :type client_request_token: str
        """
        if client_request_token is not None and len(client_request_token) > 63:
            raise ValueError("Invalid value for `client_request_token`, length must be less than or equal to `63`")
        if client_request_token is not None and len(client_request_token) < 1:
            raise ValueError("Invalid value for `client_request_token`, length must be greater than or equal to `1`")
        if client_request_token is not None and not re.search(r'[A-za-z0-9_.-]{0,63}$', client_request_token):
            raise ValueError("Invalid value for `client_request_token`, must be a follow pattern or equal to `/[A-za-z0-9_.-]{0,63}$/`")

        self._client_request_token = client_request_token

    @property
    def storage_virtual_machine_id(self):
        """Gets the storage_virtual_machine_id of this UpdateStorageVirtualMachineRequest.


        :return: The storage_virtual_machine_id of this UpdateStorageVirtualMachineRequest.
        :rtype: str
        """
        return self._storage_virtual_machine_id

    @storage_virtual_machine_id.setter
    def storage_virtual_machine_id(self, storage_virtual_machine_id):
        """Sets the storage_virtual_machine_id of this UpdateStorageVirtualMachineRequest.


        :param storage_virtual_machine_id: The storage_virtual_machine_id of this UpdateStorageVirtualMachineRequest.
        :type storage_virtual_machine_id: str
        """
        if storage_virtual_machine_id is None:
            raise ValueError("Invalid value for `storage_virtual_machine_id`, must not be `None`")

        self._storage_virtual_machine_id = storage_virtual_machine_id

    @property
    def svm_admin_password(self):
        """Gets the svm_admin_password of this UpdateStorageVirtualMachineRequest.


        :return: The svm_admin_password of this UpdateStorageVirtualMachineRequest.
        :rtype: str
        """
        return self._svm_admin_password

    @svm_admin_password.setter
    def svm_admin_password(self, svm_admin_password):
        """Sets the svm_admin_password of this UpdateStorageVirtualMachineRequest.


        :param svm_admin_password: The svm_admin_password of this UpdateStorageVirtualMachineRequest.
        :type svm_admin_password: str
        """

        self._svm_admin_password = svm_admin_password
