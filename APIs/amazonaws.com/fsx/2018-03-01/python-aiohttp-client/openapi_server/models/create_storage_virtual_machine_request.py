# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_storage_virtual_machine_request_active_directory_configuration import CreateStorageVirtualMachineRequestActiveDirectoryConfiguration
from openapi_server.models.storage_virtual_machine_root_volume_security_style import StorageVirtualMachineRootVolumeSecurityStyle
from openapi_server.models.tag import Tag
import re
from openapi_server import util


class CreateStorageVirtualMachineRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_directory_configuration: CreateStorageVirtualMachineRequestActiveDirectoryConfiguration=None, client_request_token: str=None, file_system_id: str=None, name: str=None, svm_admin_password: str=None, tags: List[Tag]=None, root_volume_security_style: StorageVirtualMachineRootVolumeSecurityStyle=None):
        """CreateStorageVirtualMachineRequest - a model defined in OpenAPI

        :param active_directory_configuration: The active_directory_configuration of this CreateStorageVirtualMachineRequest.
        :param client_request_token: The client_request_token of this CreateStorageVirtualMachineRequest.
        :param file_system_id: The file_system_id of this CreateStorageVirtualMachineRequest.
        :param name: The name of this CreateStorageVirtualMachineRequest.
        :param svm_admin_password: The svm_admin_password of this CreateStorageVirtualMachineRequest.
        :param tags: The tags of this CreateStorageVirtualMachineRequest.
        :param root_volume_security_style: The root_volume_security_style of this CreateStorageVirtualMachineRequest.
        """
        self.openapi_types = {
            'active_directory_configuration': CreateStorageVirtualMachineRequestActiveDirectoryConfiguration,
            'client_request_token': str,
            'file_system_id': str,
            'name': str,
            'svm_admin_password': str,
            'tags': List[Tag],
            'root_volume_security_style': StorageVirtualMachineRootVolumeSecurityStyle
        }

        self.attribute_map = {
            'active_directory_configuration': 'ActiveDirectoryConfiguration',
            'client_request_token': 'ClientRequestToken',
            'file_system_id': 'FileSystemId',
            'name': 'Name',
            'svm_admin_password': 'SvmAdminPassword',
            'tags': 'Tags',
            'root_volume_security_style': 'RootVolumeSecurityStyle'
        }

        self._active_directory_configuration = active_directory_configuration
        self._client_request_token = client_request_token
        self._file_system_id = file_system_id
        self._name = name
        self._svm_admin_password = svm_admin_password
        self._tags = tags
        self._root_volume_security_style = root_volume_security_style

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateStorageVirtualMachineRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateStorageVirtualMachineRequest of this CreateStorageVirtualMachineRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_directory_configuration(self):
        """Gets the active_directory_configuration of this CreateStorageVirtualMachineRequest.


        :return: The active_directory_configuration of this CreateStorageVirtualMachineRequest.
        :rtype: CreateStorageVirtualMachineRequestActiveDirectoryConfiguration
        """
        return self._active_directory_configuration

    @active_directory_configuration.setter
    def active_directory_configuration(self, active_directory_configuration):
        """Sets the active_directory_configuration of this CreateStorageVirtualMachineRequest.


        :param active_directory_configuration: The active_directory_configuration of this CreateStorageVirtualMachineRequest.
        :type active_directory_configuration: CreateStorageVirtualMachineRequestActiveDirectoryConfiguration
        """

        self._active_directory_configuration = active_directory_configuration

    @property
    def client_request_token(self):
        """Gets the client_request_token of this CreateStorageVirtualMachineRequest.

        (Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.

        :return: The client_request_token of this CreateStorageVirtualMachineRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this CreateStorageVirtualMachineRequest.

        (Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.

        :param client_request_token: The client_request_token of this CreateStorageVirtualMachineRequest.
        :type client_request_token: str
        """
        if client_request_token is not None and len(client_request_token) > 63:
            raise ValueError("Invalid value for `client_request_token`, length must be less than or equal to `63`")
        if client_request_token is not None and len(client_request_token) < 1:
            raise ValueError("Invalid value for `client_request_token`, length must be greater than or equal to `1`")
        if client_request_token is not None and not re.search(r'[A-za-z0-9_.-]{0,63}$', client_request_token):
            raise ValueError("Invalid value for `client_request_token`, must be a follow pattern or equal to `/[A-za-z0-9_.-]{0,63}$/`")

        self._client_request_token = client_request_token

    @property
    def file_system_id(self):
        """Gets the file_system_id of this CreateStorageVirtualMachineRequest.

        The globally unique ID of the file system, assigned by Amazon FSx.

        :return: The file_system_id of this CreateStorageVirtualMachineRequest.
        :rtype: str
        """
        return self._file_system_id

    @file_system_id.setter
    def file_system_id(self, file_system_id):
        """Sets the file_system_id of this CreateStorageVirtualMachineRequest.

        The globally unique ID of the file system, assigned by Amazon FSx.

        :param file_system_id: The file_system_id of this CreateStorageVirtualMachineRequest.
        :type file_system_id: str
        """
        if file_system_id is None:
            raise ValueError("Invalid value for `file_system_id`, must not be `None`")
        if file_system_id is not None and len(file_system_id) > 21:
            raise ValueError("Invalid value for `file_system_id`, length must be less than or equal to `21`")
        if file_system_id is not None and len(file_system_id) < 11:
            raise ValueError("Invalid value for `file_system_id`, length must be greater than or equal to `11`")
        if file_system_id is not None and not re.search(r'^(fs-[0-9a-f]{8,})$', file_system_id):
            raise ValueError("Invalid value for `file_system_id`, must be a follow pattern or equal to `/^(fs-[0-9a-f]{8,})$/`")

        self._file_system_id = file_system_id

    @property
    def name(self):
        """Gets the name of this CreateStorageVirtualMachineRequest.


        :return: The name of this CreateStorageVirtualMachineRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateStorageVirtualMachineRequest.


        :param name: The name of this CreateStorageVirtualMachineRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def svm_admin_password(self):
        """Gets the svm_admin_password of this CreateStorageVirtualMachineRequest.


        :return: The svm_admin_password of this CreateStorageVirtualMachineRequest.
        :rtype: str
        """
        return self._svm_admin_password

    @svm_admin_password.setter
    def svm_admin_password(self, svm_admin_password):
        """Sets the svm_admin_password of this CreateStorageVirtualMachineRequest.


        :param svm_admin_password: The svm_admin_password of this CreateStorageVirtualMachineRequest.
        :type svm_admin_password: str
        """

        self._svm_admin_password = svm_admin_password

    @property
    def tags(self):
        """Gets the tags of this CreateStorageVirtualMachineRequest.

        A list of <code>Tag</code> values, with a maximum of 50 elements.

        :return: The tags of this CreateStorageVirtualMachineRequest.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateStorageVirtualMachineRequest.

        A list of <code>Tag</code> values, with a maximum of 50 elements.

        :param tags: The tags of this CreateStorageVirtualMachineRequest.
        :type tags: List[Tag]
        """
        if tags is not None and len(tags) > 50:
            raise ValueError("Invalid value for `tags`, number of items must be less than or equal to `50`")
        if tags is not None and len(tags) < 1:
            raise ValueError("Invalid value for `tags`, number of items must be greater than or equal to `1`")

        self._tags = tags

    @property
    def root_volume_security_style(self):
        """Gets the root_volume_security_style of this CreateStorageVirtualMachineRequest.


        :return: The root_volume_security_style of this CreateStorageVirtualMachineRequest.
        :rtype: StorageVirtualMachineRootVolumeSecurityStyle
        """
        return self._root_volume_security_style

    @root_volume_security_style.setter
    def root_volume_security_style(self, root_volume_security_style):
        """Sets the root_volume_security_style of this CreateStorageVirtualMachineRequest.


        :param root_volume_security_style: The root_volume_security_style of this CreateStorageVirtualMachineRequest.
        :type root_volume_security_style: StorageVirtualMachineRootVolumeSecurityStyle
        """

        self._root_volume_security_style = root_volume_security_style
