# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ontap_deployment_type import OntapDeploymentType
from openapi_server.models.ontap_file_system_configuration_disk_iops_configuration import OntapFileSystemConfigurationDiskIopsConfiguration
from openapi_server.models.ontap_file_system_configuration_endpoints import OntapFileSystemConfigurationEndpoints
import re
from openapi_server import util


class FileSystemOntapConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automatic_backup_retention_days: int=None, daily_automatic_backup_start_time: str=None, deployment_type: OntapDeploymentType=None, endpoint_ip_address_range: str=None, endpoints: OntapFileSystemConfigurationEndpoints=None, disk_iops_configuration: OntapFileSystemConfigurationDiskIopsConfiguration=None, preferred_subnet_id: str=None, route_table_ids: List=None, throughput_capacity: int=None, weekly_maintenance_start_time: str=None, fsx_admin_password: str=None):
        """FileSystemOntapConfiguration - a model defined in OpenAPI

        :param automatic_backup_retention_days: The automatic_backup_retention_days of this FileSystemOntapConfiguration.
        :param daily_automatic_backup_start_time: The daily_automatic_backup_start_time of this FileSystemOntapConfiguration.
        :param deployment_type: The deployment_type of this FileSystemOntapConfiguration.
        :param endpoint_ip_address_range: The endpoint_ip_address_range of this FileSystemOntapConfiguration.
        :param endpoints: The endpoints of this FileSystemOntapConfiguration.
        :param disk_iops_configuration: The disk_iops_configuration of this FileSystemOntapConfiguration.
        :param preferred_subnet_id: The preferred_subnet_id of this FileSystemOntapConfiguration.
        :param route_table_ids: The route_table_ids of this FileSystemOntapConfiguration.
        :param throughput_capacity: The throughput_capacity of this FileSystemOntapConfiguration.
        :param weekly_maintenance_start_time: The weekly_maintenance_start_time of this FileSystemOntapConfiguration.
        :param fsx_admin_password: The fsx_admin_password of this FileSystemOntapConfiguration.
        """
        self.openapi_types = {
            'automatic_backup_retention_days': int,
            'daily_automatic_backup_start_time': str,
            'deployment_type': OntapDeploymentType,
            'endpoint_ip_address_range': str,
            'endpoints': OntapFileSystemConfigurationEndpoints,
            'disk_iops_configuration': OntapFileSystemConfigurationDiskIopsConfiguration,
            'preferred_subnet_id': str,
            'route_table_ids': List,
            'throughput_capacity': int,
            'weekly_maintenance_start_time': str,
            'fsx_admin_password': str
        }

        self.attribute_map = {
            'automatic_backup_retention_days': 'AutomaticBackupRetentionDays',
            'daily_automatic_backup_start_time': 'DailyAutomaticBackupStartTime',
            'deployment_type': 'DeploymentType',
            'endpoint_ip_address_range': 'EndpointIpAddressRange',
            'endpoints': 'Endpoints',
            'disk_iops_configuration': 'DiskIopsConfiguration',
            'preferred_subnet_id': 'PreferredSubnetId',
            'route_table_ids': 'RouteTableIds',
            'throughput_capacity': 'ThroughputCapacity',
            'weekly_maintenance_start_time': 'WeeklyMaintenanceStartTime',
            'fsx_admin_password': 'FsxAdminPassword'
        }

        self._automatic_backup_retention_days = automatic_backup_retention_days
        self._daily_automatic_backup_start_time = daily_automatic_backup_start_time
        self._deployment_type = deployment_type
        self._endpoint_ip_address_range = endpoint_ip_address_range
        self._endpoints = endpoints
        self._disk_iops_configuration = disk_iops_configuration
        self._preferred_subnet_id = preferred_subnet_id
        self._route_table_ids = route_table_ids
        self._throughput_capacity = throughput_capacity
        self._weekly_maintenance_start_time = weekly_maintenance_start_time
        self._fsx_admin_password = fsx_admin_password

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileSystemOntapConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileSystem_OntapConfiguration of this FileSystemOntapConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automatic_backup_retention_days(self):
        """Gets the automatic_backup_retention_days of this FileSystemOntapConfiguration.

        The number of days to retain automatic backups. Setting this property to <code>0</code> disables automatic backups. You can retain automatic backups for a maximum of 90 days. The default is <code>30</code>.

        :return: The automatic_backup_retention_days of this FileSystemOntapConfiguration.
        :rtype: int
        """
        return self._automatic_backup_retention_days

    @automatic_backup_retention_days.setter
    def automatic_backup_retention_days(self, automatic_backup_retention_days):
        """Sets the automatic_backup_retention_days of this FileSystemOntapConfiguration.

        The number of days to retain automatic backups. Setting this property to <code>0</code> disables automatic backups. You can retain automatic backups for a maximum of 90 days. The default is <code>30</code>.

        :param automatic_backup_retention_days: The automatic_backup_retention_days of this FileSystemOntapConfiguration.
        :type automatic_backup_retention_days: int
        """
        if automatic_backup_retention_days is not None and automatic_backup_retention_days > 90:
            raise ValueError("Invalid value for `automatic_backup_retention_days`, must be a value less than or equal to `90`")
        if automatic_backup_retention_days is not None and automatic_backup_retention_days < 0:
            raise ValueError("Invalid value for `automatic_backup_retention_days`, must be a value greater than or equal to `0`")

        self._automatic_backup_retention_days = automatic_backup_retention_days

    @property
    def daily_automatic_backup_start_time(self):
        """Gets the daily_automatic_backup_start_time of this FileSystemOntapConfiguration.

        A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. For example, <code>05:00</code> specifies 5 AM daily. 

        :return: The daily_automatic_backup_start_time of this FileSystemOntapConfiguration.
        :rtype: str
        """
        return self._daily_automatic_backup_start_time

    @daily_automatic_backup_start_time.setter
    def daily_automatic_backup_start_time(self, daily_automatic_backup_start_time):
        """Sets the daily_automatic_backup_start_time of this FileSystemOntapConfiguration.

        A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. For example, <code>05:00</code> specifies 5 AM daily. 

        :param daily_automatic_backup_start_time: The daily_automatic_backup_start_time of this FileSystemOntapConfiguration.
        :type daily_automatic_backup_start_time: str
        """
        if daily_automatic_backup_start_time is not None and len(daily_automatic_backup_start_time) > 5:
            raise ValueError("Invalid value for `daily_automatic_backup_start_time`, length must be less than or equal to `5`")
        if daily_automatic_backup_start_time is not None and len(daily_automatic_backup_start_time) < 5:
            raise ValueError("Invalid value for `daily_automatic_backup_start_time`, length must be greater than or equal to `5`")
        if daily_automatic_backup_start_time is not None and not re.search(r'^([01]\d|2[0-3]):?([0-5]\d)$', daily_automatic_backup_start_time):
            raise ValueError("Invalid value for `daily_automatic_backup_start_time`, must be a follow pattern or equal to `/^([01]\d|2[0-3]):?([0-5]\d)$/`")

        self._daily_automatic_backup_start_time = daily_automatic_backup_start_time

    @property
    def deployment_type(self):
        """Gets the deployment_type of this FileSystemOntapConfiguration.


        :return: The deployment_type of this FileSystemOntapConfiguration.
        :rtype: OntapDeploymentType
        """
        return self._deployment_type

    @deployment_type.setter
    def deployment_type(self, deployment_type):
        """Sets the deployment_type of this FileSystemOntapConfiguration.


        :param deployment_type: The deployment_type of this FileSystemOntapConfiguration.
        :type deployment_type: OntapDeploymentType
        """

        self._deployment_type = deployment_type

    @property
    def endpoint_ip_address_range(self):
        """Gets the endpoint_ip_address_range of this FileSystemOntapConfiguration.


        :return: The endpoint_ip_address_range of this FileSystemOntapConfiguration.
        :rtype: str
        """
        return self._endpoint_ip_address_range

    @endpoint_ip_address_range.setter
    def endpoint_ip_address_range(self, endpoint_ip_address_range):
        """Sets the endpoint_ip_address_range of this FileSystemOntapConfiguration.


        :param endpoint_ip_address_range: The endpoint_ip_address_range of this FileSystemOntapConfiguration.
        :type endpoint_ip_address_range: str
        """

        self._endpoint_ip_address_range = endpoint_ip_address_range

    @property
    def endpoints(self):
        """Gets the endpoints of this FileSystemOntapConfiguration.


        :return: The endpoints of this FileSystemOntapConfiguration.
        :rtype: OntapFileSystemConfigurationEndpoints
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints):
        """Sets the endpoints of this FileSystemOntapConfiguration.


        :param endpoints: The endpoints of this FileSystemOntapConfiguration.
        :type endpoints: OntapFileSystemConfigurationEndpoints
        """

        self._endpoints = endpoints

    @property
    def disk_iops_configuration(self):
        """Gets the disk_iops_configuration of this FileSystemOntapConfiguration.


        :return: The disk_iops_configuration of this FileSystemOntapConfiguration.
        :rtype: OntapFileSystemConfigurationDiskIopsConfiguration
        """
        return self._disk_iops_configuration

    @disk_iops_configuration.setter
    def disk_iops_configuration(self, disk_iops_configuration):
        """Sets the disk_iops_configuration of this FileSystemOntapConfiguration.


        :param disk_iops_configuration: The disk_iops_configuration of this FileSystemOntapConfiguration.
        :type disk_iops_configuration: OntapFileSystemConfigurationDiskIopsConfiguration
        """

        self._disk_iops_configuration = disk_iops_configuration

    @property
    def preferred_subnet_id(self):
        """Gets the preferred_subnet_id of this FileSystemOntapConfiguration.

        The ID for a subnet. A <i>subnet</i> is a range of IP addresses in your virtual private cloud (VPC). For more information, see <a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html\">VPC and subnets</a> in the <i>Amazon VPC User Guide.</i> 

        :return: The preferred_subnet_id of this FileSystemOntapConfiguration.
        :rtype: str
        """
        return self._preferred_subnet_id

    @preferred_subnet_id.setter
    def preferred_subnet_id(self, preferred_subnet_id):
        """Sets the preferred_subnet_id of this FileSystemOntapConfiguration.

        The ID for a subnet. A <i>subnet</i> is a range of IP addresses in your virtual private cloud (VPC). For more information, see <a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html\">VPC and subnets</a> in the <i>Amazon VPC User Guide.</i> 

        :param preferred_subnet_id: The preferred_subnet_id of this FileSystemOntapConfiguration.
        :type preferred_subnet_id: str
        """
        if preferred_subnet_id is not None and len(preferred_subnet_id) > 24:
            raise ValueError("Invalid value for `preferred_subnet_id`, length must be less than or equal to `24`")
        if preferred_subnet_id is not None and len(preferred_subnet_id) < 15:
            raise ValueError("Invalid value for `preferred_subnet_id`, length must be greater than or equal to `15`")
        if preferred_subnet_id is not None and not re.search(r'^(subnet-[0-9a-f]{8,})$', preferred_subnet_id):
            raise ValueError("Invalid value for `preferred_subnet_id`, must be a follow pattern or equal to `/^(subnet-[0-9a-f]{8,})$/`")

        self._preferred_subnet_id = preferred_subnet_id

    @property
    def route_table_ids(self):
        """Gets the route_table_ids of this FileSystemOntapConfiguration.


        :return: The route_table_ids of this FileSystemOntapConfiguration.
        :rtype: List
        """
        return self._route_table_ids

    @route_table_ids.setter
    def route_table_ids(self, route_table_ids):
        """Sets the route_table_ids of this FileSystemOntapConfiguration.


        :param route_table_ids: The route_table_ids of this FileSystemOntapConfiguration.
        :type route_table_ids: List
        """

        self._route_table_ids = route_table_ids

    @property
    def throughput_capacity(self):
        """Gets the throughput_capacity of this FileSystemOntapConfiguration.

        The sustained throughput of an Amazon FSx file system in Megabytes per second (MBps).

        :return: The throughput_capacity of this FileSystemOntapConfiguration.
        :rtype: int
        """
        return self._throughput_capacity

    @throughput_capacity.setter
    def throughput_capacity(self, throughput_capacity):
        """Sets the throughput_capacity of this FileSystemOntapConfiguration.

        The sustained throughput of an Amazon FSx file system in Megabytes per second (MBps).

        :param throughput_capacity: The throughput_capacity of this FileSystemOntapConfiguration.
        :type throughput_capacity: int
        """
        if throughput_capacity is not None and throughput_capacity > 100000:
            raise ValueError("Invalid value for `throughput_capacity`, must be a value less than or equal to `100000`")
        if throughput_capacity is not None and throughput_capacity < 8:
            raise ValueError("Invalid value for `throughput_capacity`, must be a value greater than or equal to `8`")

        self._throughput_capacity = throughput_capacity

    @property
    def weekly_maintenance_start_time(self):
        """Gets the weekly_maintenance_start_time of this FileSystemOntapConfiguration.

        <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>

        :return: The weekly_maintenance_start_time of this FileSystemOntapConfiguration.
        :rtype: str
        """
        return self._weekly_maintenance_start_time

    @weekly_maintenance_start_time.setter
    def weekly_maintenance_start_time(self, weekly_maintenance_start_time):
        """Sets the weekly_maintenance_start_time of this FileSystemOntapConfiguration.

        <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>

        :param weekly_maintenance_start_time: The weekly_maintenance_start_time of this FileSystemOntapConfiguration.
        :type weekly_maintenance_start_time: str
        """
        if weekly_maintenance_start_time is not None and len(weekly_maintenance_start_time) > 7:
            raise ValueError("Invalid value for `weekly_maintenance_start_time`, length must be less than or equal to `7`")
        if weekly_maintenance_start_time is not None and len(weekly_maintenance_start_time) < 7:
            raise ValueError("Invalid value for `weekly_maintenance_start_time`, length must be greater than or equal to `7`")
        if weekly_maintenance_start_time is not None and not re.search(r'^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$', weekly_maintenance_start_time):
            raise ValueError("Invalid value for `weekly_maintenance_start_time`, must be a follow pattern or equal to `/^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$/`")

        self._weekly_maintenance_start_time = weekly_maintenance_start_time

    @property
    def fsx_admin_password(self):
        """Gets the fsx_admin_password of this FileSystemOntapConfiguration.


        :return: The fsx_admin_password of this FileSystemOntapConfiguration.
        :rtype: str
        """
        return self._fsx_admin_password

    @fsx_admin_password.setter
    def fsx_admin_password(self, fsx_admin_password):
        """Sets the fsx_admin_password of this FileSystemOntapConfiguration.


        :param fsx_admin_password: The fsx_admin_password of this FileSystemOntapConfiguration.
        :type fsx_admin_password: str
        """

        self._fsx_admin_password = fsx_admin_password
