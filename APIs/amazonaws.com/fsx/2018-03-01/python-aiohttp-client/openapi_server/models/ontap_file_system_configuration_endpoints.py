# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_system_endpoints_intercluster import FileSystemEndpointsIntercluster
from openapi_server.models.file_system_endpoints_management import FileSystemEndpointsManagement
from openapi_server import util


class OntapFileSystemConfigurationEndpoints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, intercluster: FileSystemEndpointsIntercluster=None, management: FileSystemEndpointsManagement=None):
        """OntapFileSystemConfigurationEndpoints - a model defined in OpenAPI

        :param intercluster: The intercluster of this OntapFileSystemConfigurationEndpoints.
        :param management: The management of this OntapFileSystemConfigurationEndpoints.
        """
        self.openapi_types = {
            'intercluster': FileSystemEndpointsIntercluster,
            'management': FileSystemEndpointsManagement
        }

        self.attribute_map = {
            'intercluster': 'Intercluster',
            'management': 'Management'
        }

        self._intercluster = intercluster
        self._management = management

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OntapFileSystemConfigurationEndpoints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OntapFileSystemConfiguration_Endpoints of this OntapFileSystemConfigurationEndpoints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intercluster(self):
        """Gets the intercluster of this OntapFileSystemConfigurationEndpoints.


        :return: The intercluster of this OntapFileSystemConfigurationEndpoints.
        :rtype: FileSystemEndpointsIntercluster
        """
        return self._intercluster

    @intercluster.setter
    def intercluster(self, intercluster):
        """Sets the intercluster of this OntapFileSystemConfigurationEndpoints.


        :param intercluster: The intercluster of this OntapFileSystemConfigurationEndpoints.
        :type intercluster: FileSystemEndpointsIntercluster
        """

        self._intercluster = intercluster

    @property
    def management(self):
        """Gets the management of this OntapFileSystemConfigurationEndpoints.


        :return: The management of this OntapFileSystemConfigurationEndpoints.
        :rtype: FileSystemEndpointsManagement
        """
        return self._management

    @management.setter
    def management(self, management):
        """Sets the management of this OntapFileSystemConfigurationEndpoints.


        :param management: The management of this OntapFileSystemConfigurationEndpoints.
        :type management: FileSystemEndpointsManagement
        """

        self._management = management
