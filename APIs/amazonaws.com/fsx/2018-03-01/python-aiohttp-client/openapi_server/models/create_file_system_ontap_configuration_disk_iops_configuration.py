# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.disk_iops_configuration_mode import DiskIopsConfigurationMode
from openapi_server import util


class CreateFileSystemOntapConfigurationDiskIopsConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mode: DiskIopsConfigurationMode=None, iops: int=None):
        """CreateFileSystemOntapConfigurationDiskIopsConfiguration - a model defined in OpenAPI

        :param mode: The mode of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.
        :param iops: The iops of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.
        """
        self.openapi_types = {
            'mode': DiskIopsConfigurationMode,
            'iops': int
        }

        self.attribute_map = {
            'mode': 'Mode',
            'iops': 'Iops'
        }

        self._mode = mode
        self._iops = iops

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFileSystemOntapConfigurationDiskIopsConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFileSystemOntapConfiguration_DiskIopsConfiguration of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mode(self):
        """Gets the mode of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.


        :return: The mode of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.
        :rtype: DiskIopsConfigurationMode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.


        :param mode: The mode of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.
        :type mode: DiskIopsConfigurationMode
        """

        self._mode = mode

    @property
    def iops(self):
        """Gets the iops of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.


        :return: The iops of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.
        :rtype: int
        """
        return self._iops

    @iops.setter
    def iops(self, iops):
        """Sets the iops of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.


        :param iops: The iops of this CreateFileSystemOntapConfigurationDiskIopsConfiguration.
        :type iops: int
        """

        self._iops = iops
