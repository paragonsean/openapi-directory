# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.disk_iops_configuration import DiskIopsConfiguration
import re
from openapi_server import util


class UpdateFileSystemRequestOpenZFSConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automatic_backup_retention_days: int=None, copy_tags_to_backups: bool=None, copy_tags_to_volumes: bool=None, daily_automatic_backup_start_time: str=None, throughput_capacity: int=None, weekly_maintenance_start_time: str=None, disk_iops_configuration: DiskIopsConfiguration=None):
        """UpdateFileSystemRequestOpenZFSConfiguration - a model defined in OpenAPI

        :param automatic_backup_retention_days: The automatic_backup_retention_days of this UpdateFileSystemRequestOpenZFSConfiguration.
        :param copy_tags_to_backups: The copy_tags_to_backups of this UpdateFileSystemRequestOpenZFSConfiguration.
        :param copy_tags_to_volumes: The copy_tags_to_volumes of this UpdateFileSystemRequestOpenZFSConfiguration.
        :param daily_automatic_backup_start_time: The daily_automatic_backup_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.
        :param throughput_capacity: The throughput_capacity of this UpdateFileSystemRequestOpenZFSConfiguration.
        :param weekly_maintenance_start_time: The weekly_maintenance_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.
        :param disk_iops_configuration: The disk_iops_configuration of this UpdateFileSystemRequestOpenZFSConfiguration.
        """
        self.openapi_types = {
            'automatic_backup_retention_days': int,
            'copy_tags_to_backups': bool,
            'copy_tags_to_volumes': bool,
            'daily_automatic_backup_start_time': str,
            'throughput_capacity': int,
            'weekly_maintenance_start_time': str,
            'disk_iops_configuration': DiskIopsConfiguration
        }

        self.attribute_map = {
            'automatic_backup_retention_days': 'AutomaticBackupRetentionDays',
            'copy_tags_to_backups': 'CopyTagsToBackups',
            'copy_tags_to_volumes': 'CopyTagsToVolumes',
            'daily_automatic_backup_start_time': 'DailyAutomaticBackupStartTime',
            'throughput_capacity': 'ThroughputCapacity',
            'weekly_maintenance_start_time': 'WeeklyMaintenanceStartTime',
            'disk_iops_configuration': 'DiskIopsConfiguration'
        }

        self._automatic_backup_retention_days = automatic_backup_retention_days
        self._copy_tags_to_backups = copy_tags_to_backups
        self._copy_tags_to_volumes = copy_tags_to_volumes
        self._daily_automatic_backup_start_time = daily_automatic_backup_start_time
        self._throughput_capacity = throughput_capacity
        self._weekly_maintenance_start_time = weekly_maintenance_start_time
        self._disk_iops_configuration = disk_iops_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFileSystemRequestOpenZFSConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFileSystemRequest_OpenZFSConfiguration of this UpdateFileSystemRequestOpenZFSConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automatic_backup_retention_days(self):
        """Gets the automatic_backup_retention_days of this UpdateFileSystemRequestOpenZFSConfiguration.

        The number of days to retain automatic backups. Setting this property to <code>0</code> disables automatic backups. You can retain automatic backups for a maximum of 90 days. The default is <code>30</code>.

        :return: The automatic_backup_retention_days of this UpdateFileSystemRequestOpenZFSConfiguration.
        :rtype: int
        """
        return self._automatic_backup_retention_days

    @automatic_backup_retention_days.setter
    def automatic_backup_retention_days(self, automatic_backup_retention_days):
        """Sets the automatic_backup_retention_days of this UpdateFileSystemRequestOpenZFSConfiguration.

        The number of days to retain automatic backups. Setting this property to <code>0</code> disables automatic backups. You can retain automatic backups for a maximum of 90 days. The default is <code>30</code>.

        :param automatic_backup_retention_days: The automatic_backup_retention_days of this UpdateFileSystemRequestOpenZFSConfiguration.
        :type automatic_backup_retention_days: int
        """
        if automatic_backup_retention_days is not None and automatic_backup_retention_days > 90:
            raise ValueError("Invalid value for `automatic_backup_retention_days`, must be a value less than or equal to `90`")
        if automatic_backup_retention_days is not None and automatic_backup_retention_days < 0:
            raise ValueError("Invalid value for `automatic_backup_retention_days`, must be a value greater than or equal to `0`")

        self._automatic_backup_retention_days = automatic_backup_retention_days

    @property
    def copy_tags_to_backups(self):
        """Gets the copy_tags_to_backups of this UpdateFileSystemRequestOpenZFSConfiguration.


        :return: The copy_tags_to_backups of this UpdateFileSystemRequestOpenZFSConfiguration.
        :rtype: bool
        """
        return self._copy_tags_to_backups

    @copy_tags_to_backups.setter
    def copy_tags_to_backups(self, copy_tags_to_backups):
        """Sets the copy_tags_to_backups of this UpdateFileSystemRequestOpenZFSConfiguration.


        :param copy_tags_to_backups: The copy_tags_to_backups of this UpdateFileSystemRequestOpenZFSConfiguration.
        :type copy_tags_to_backups: bool
        """

        self._copy_tags_to_backups = copy_tags_to_backups

    @property
    def copy_tags_to_volumes(self):
        """Gets the copy_tags_to_volumes of this UpdateFileSystemRequestOpenZFSConfiguration.


        :return: The copy_tags_to_volumes of this UpdateFileSystemRequestOpenZFSConfiguration.
        :rtype: bool
        """
        return self._copy_tags_to_volumes

    @copy_tags_to_volumes.setter
    def copy_tags_to_volumes(self, copy_tags_to_volumes):
        """Sets the copy_tags_to_volumes of this UpdateFileSystemRequestOpenZFSConfiguration.


        :param copy_tags_to_volumes: The copy_tags_to_volumes of this UpdateFileSystemRequestOpenZFSConfiguration.
        :type copy_tags_to_volumes: bool
        """

        self._copy_tags_to_volumes = copy_tags_to_volumes

    @property
    def daily_automatic_backup_start_time(self):
        """Gets the daily_automatic_backup_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.

        A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. For example, <code>05:00</code> specifies 5 AM daily. 

        :return: The daily_automatic_backup_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.
        :rtype: str
        """
        return self._daily_automatic_backup_start_time

    @daily_automatic_backup_start_time.setter
    def daily_automatic_backup_start_time(self, daily_automatic_backup_start_time):
        """Sets the daily_automatic_backup_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.

        A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. For example, <code>05:00</code> specifies 5 AM daily. 

        :param daily_automatic_backup_start_time: The daily_automatic_backup_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.
        :type daily_automatic_backup_start_time: str
        """
        if daily_automatic_backup_start_time is not None and len(daily_automatic_backup_start_time) > 5:
            raise ValueError("Invalid value for `daily_automatic_backup_start_time`, length must be less than or equal to `5`")
        if daily_automatic_backup_start_time is not None and len(daily_automatic_backup_start_time) < 5:
            raise ValueError("Invalid value for `daily_automatic_backup_start_time`, length must be greater than or equal to `5`")
        if daily_automatic_backup_start_time is not None and not re.search(r'^([01]\d|2[0-3]):?([0-5]\d)$', daily_automatic_backup_start_time):
            raise ValueError("Invalid value for `daily_automatic_backup_start_time`, must be a follow pattern or equal to `/^([01]\d|2[0-3]):?([0-5]\d)$/`")

        self._daily_automatic_backup_start_time = daily_automatic_backup_start_time

    @property
    def throughput_capacity(self):
        """Gets the throughput_capacity of this UpdateFileSystemRequestOpenZFSConfiguration.


        :return: The throughput_capacity of this UpdateFileSystemRequestOpenZFSConfiguration.
        :rtype: int
        """
        return self._throughput_capacity

    @throughput_capacity.setter
    def throughput_capacity(self, throughput_capacity):
        """Sets the throughput_capacity of this UpdateFileSystemRequestOpenZFSConfiguration.


        :param throughput_capacity: The throughput_capacity of this UpdateFileSystemRequestOpenZFSConfiguration.
        :type throughput_capacity: int
        """

        self._throughput_capacity = throughput_capacity

    @property
    def weekly_maintenance_start_time(self):
        """Gets the weekly_maintenance_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.

        <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>

        :return: The weekly_maintenance_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.
        :rtype: str
        """
        return self._weekly_maintenance_start_time

    @weekly_maintenance_start_time.setter
    def weekly_maintenance_start_time(self, weekly_maintenance_start_time):
        """Sets the weekly_maintenance_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.

        <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>

        :param weekly_maintenance_start_time: The weekly_maintenance_start_time of this UpdateFileSystemRequestOpenZFSConfiguration.
        :type weekly_maintenance_start_time: str
        """
        if weekly_maintenance_start_time is not None and len(weekly_maintenance_start_time) > 7:
            raise ValueError("Invalid value for `weekly_maintenance_start_time`, length must be less than or equal to `7`")
        if weekly_maintenance_start_time is not None and len(weekly_maintenance_start_time) < 7:
            raise ValueError("Invalid value for `weekly_maintenance_start_time`, length must be greater than or equal to `7`")
        if weekly_maintenance_start_time is not None and not re.search(r'^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$', weekly_maintenance_start_time):
            raise ValueError("Invalid value for `weekly_maintenance_start_time`, must be a follow pattern or equal to `/^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$/`")

        self._weekly_maintenance_start_time = weekly_maintenance_start_time

    @property
    def disk_iops_configuration(self):
        """Gets the disk_iops_configuration of this UpdateFileSystemRequestOpenZFSConfiguration.


        :return: The disk_iops_configuration of this UpdateFileSystemRequestOpenZFSConfiguration.
        :rtype: DiskIopsConfiguration
        """
        return self._disk_iops_configuration

    @disk_iops_configuration.setter
    def disk_iops_configuration(self, disk_iops_configuration):
        """Sets the disk_iops_configuration of this UpdateFileSystemRequestOpenZFSConfiguration.


        :param disk_iops_configuration: The disk_iops_configuration of this UpdateFileSystemRequestOpenZFSConfiguration.
        :type disk_iops_configuration: DiskIopsConfiguration
        """

        self._disk_iops_configuration = disk_iops_configuration
