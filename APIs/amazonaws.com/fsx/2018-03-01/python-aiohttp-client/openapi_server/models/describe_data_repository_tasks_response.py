# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class DescribeDataRepositoryTasksResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_repository_tasks: List=None, next_token: str=None):
        """DescribeDataRepositoryTasksResponse - a model defined in OpenAPI

        :param data_repository_tasks: The data_repository_tasks of this DescribeDataRepositoryTasksResponse.
        :param next_token: The next_token of this DescribeDataRepositoryTasksResponse.
        """
        self.openapi_types = {
            'data_repository_tasks': List,
            'next_token': str
        }

        self.attribute_map = {
            'data_repository_tasks': 'DataRepositoryTasks',
            'next_token': 'NextToken'
        }

        self._data_repository_tasks = data_repository_tasks
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDataRepositoryTasksResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDataRepositoryTasksResponse of this DescribeDataRepositoryTasksResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_repository_tasks(self):
        """Gets the data_repository_tasks of this DescribeDataRepositoryTasksResponse.


        :return: The data_repository_tasks of this DescribeDataRepositoryTasksResponse.
        :rtype: List
        """
        return self._data_repository_tasks

    @data_repository_tasks.setter
    def data_repository_tasks(self, data_repository_tasks):
        """Sets the data_repository_tasks of this DescribeDataRepositoryTasksResponse.


        :param data_repository_tasks: The data_repository_tasks of this DescribeDataRepositoryTasksResponse.
        :type data_repository_tasks: List
        """

        self._data_repository_tasks = data_repository_tasks

    @property
    def next_token(self):
        """Gets the next_token of this DescribeDataRepositoryTasksResponse.

        (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.

        :return: The next_token of this DescribeDataRepositoryTasksResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeDataRepositoryTasksResponse.

        (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.

        :param next_token: The next_token of this DescribeDataRepositoryTasksResponse.
        :type next_token: str
        """
        if next_token is not None and len(next_token) > 255:
            raise ValueError("Invalid value for `next_token`, length must be less than or equal to `255`")
        if next_token is not None and len(next_token) < 1:
            raise ValueError("Invalid value for `next_token`, length must be greater than or equal to `1`")
        if next_token is not None and not re.search(r'^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$', next_token):
            raise ValueError("Invalid value for `next_token`, must be a follow pattern or equal to `/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/`")

        self._next_token = next_token
