# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.open_zfs_copy_strategy import OpenZFSCopyStrategy
import re
from openapi_server import util


class OpenZFSVolumeConfigurationOriginSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snapshot_arn: str=None, copy_strategy: OpenZFSCopyStrategy=None):
        """OpenZFSVolumeConfigurationOriginSnapshot - a model defined in OpenAPI

        :param snapshot_arn: The snapshot_arn of this OpenZFSVolumeConfigurationOriginSnapshot.
        :param copy_strategy: The copy_strategy of this OpenZFSVolumeConfigurationOriginSnapshot.
        """
        self.openapi_types = {
            'snapshot_arn': str,
            'copy_strategy': OpenZFSCopyStrategy
        }

        self.attribute_map = {
            'snapshot_arn': 'SnapshotARN',
            'copy_strategy': 'CopyStrategy'
        }

        self._snapshot_arn = snapshot_arn
        self._copy_strategy = copy_strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OpenZFSVolumeConfigurationOriginSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OpenZFSVolumeConfiguration_OriginSnapshot of this OpenZFSVolumeConfigurationOriginSnapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snapshot_arn(self):
        """Gets the snapshot_arn of this OpenZFSVolumeConfigurationOriginSnapshot.

        The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.

        :return: The snapshot_arn of this OpenZFSVolumeConfigurationOriginSnapshot.
        :rtype: str
        """
        return self._snapshot_arn

    @snapshot_arn.setter
    def snapshot_arn(self, snapshot_arn):
        """Sets the snapshot_arn of this OpenZFSVolumeConfigurationOriginSnapshot.

        The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.

        :param snapshot_arn: The snapshot_arn of this OpenZFSVolumeConfigurationOriginSnapshot.
        :type snapshot_arn: str
        """
        if snapshot_arn is not None and len(snapshot_arn) > 512:
            raise ValueError("Invalid value for `snapshot_arn`, length must be less than or equal to `512`")
        if snapshot_arn is not None and len(snapshot_arn) < 8:
            raise ValueError("Invalid value for `snapshot_arn`, length must be greater than or equal to `8`")
        if snapshot_arn is not None and not re.search(r'^arn:(?=[^:]+:fsx:[^:]+:\d{12}:)((|(?=[a-z0-9-.]{1,63})(?!\d{1,3}(\.\d{1,3}){3})(?![^:]*-{2})(?![^:]*-\.)(?![^:]*\.-)[a-z0-9].*(?<!-)):){4}(?!\/).{0,1024}$', snapshot_arn):
            raise ValueError("Invalid value for `snapshot_arn`, must be a follow pattern or equal to `/^arn:(?=[^:]+:fsx:[^:]+:\d{12}:)((|(?=[a-z0-9-.]{1,63})(?!\d{1,3}(\.\d{1,3}){3})(?![^:]*-{2})(?![^:]*-\.)(?![^:]*\.-)[a-z0-9].*(?<!-)):){4}(?!\/).{0,1024}$/`")

        self._snapshot_arn = snapshot_arn

    @property
    def copy_strategy(self):
        """Gets the copy_strategy of this OpenZFSVolumeConfigurationOriginSnapshot.


        :return: The copy_strategy of this OpenZFSVolumeConfigurationOriginSnapshot.
        :rtype: OpenZFSCopyStrategy
        """
        return self._copy_strategy

    @copy_strategy.setter
    def copy_strategy(self, copy_strategy):
        """Sets the copy_strategy of this OpenZFSVolumeConfigurationOriginSnapshot.


        :param copy_strategy: The copy_strategy of this OpenZFSVolumeConfigurationOriginSnapshot.
        :type copy_strategy: OpenZFSCopyStrategy
        """

        self._copy_strategy = copy_strategy
