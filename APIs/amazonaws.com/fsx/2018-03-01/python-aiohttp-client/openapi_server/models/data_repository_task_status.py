# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataRepositoryTaskStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_count: int=None, succeeded_count: int=None, failed_count: int=None, last_updated_time: datetime=None, released_capacity: int=None):
        """DataRepositoryTaskStatus - a model defined in OpenAPI

        :param total_count: The total_count of this DataRepositoryTaskStatus.
        :param succeeded_count: The succeeded_count of this DataRepositoryTaskStatus.
        :param failed_count: The failed_count of this DataRepositoryTaskStatus.
        :param last_updated_time: The last_updated_time of this DataRepositoryTaskStatus.
        :param released_capacity: The released_capacity of this DataRepositoryTaskStatus.
        """
        self.openapi_types = {
            'total_count': int,
            'succeeded_count': int,
            'failed_count': int,
            'last_updated_time': datetime,
            'released_capacity': int
        }

        self.attribute_map = {
            'total_count': 'TotalCount',
            'succeeded_count': 'SucceededCount',
            'failed_count': 'FailedCount',
            'last_updated_time': 'LastUpdatedTime',
            'released_capacity': 'ReleasedCapacity'
        }

        self._total_count = total_count
        self._succeeded_count = succeeded_count
        self._failed_count = failed_count
        self._last_updated_time = last_updated_time
        self._released_capacity = released_capacity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataRepositoryTaskStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataRepositoryTask_Status of this DataRepositoryTaskStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_count(self):
        """Gets the total_count of this DataRepositoryTaskStatus.


        :return: The total_count of this DataRepositoryTaskStatus.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this DataRepositoryTaskStatus.


        :param total_count: The total_count of this DataRepositoryTaskStatus.
        :type total_count: int
        """

        self._total_count = total_count

    @property
    def succeeded_count(self):
        """Gets the succeeded_count of this DataRepositoryTaskStatus.


        :return: The succeeded_count of this DataRepositoryTaskStatus.
        :rtype: int
        """
        return self._succeeded_count

    @succeeded_count.setter
    def succeeded_count(self, succeeded_count):
        """Sets the succeeded_count of this DataRepositoryTaskStatus.


        :param succeeded_count: The succeeded_count of this DataRepositoryTaskStatus.
        :type succeeded_count: int
        """

        self._succeeded_count = succeeded_count

    @property
    def failed_count(self):
        """Gets the failed_count of this DataRepositoryTaskStatus.


        :return: The failed_count of this DataRepositoryTaskStatus.
        :rtype: int
        """
        return self._failed_count

    @failed_count.setter
    def failed_count(self, failed_count):
        """Sets the failed_count of this DataRepositoryTaskStatus.


        :param failed_count: The failed_count of this DataRepositoryTaskStatus.
        :type failed_count: int
        """

        self._failed_count = failed_count

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this DataRepositoryTaskStatus.


        :return: The last_updated_time of this DataRepositoryTaskStatus.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this DataRepositoryTaskStatus.


        :param last_updated_time: The last_updated_time of this DataRepositoryTaskStatus.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def released_capacity(self):
        """Gets the released_capacity of this DataRepositoryTaskStatus.


        :return: The released_capacity of this DataRepositoryTaskStatus.
        :rtype: int
        """
        return self._released_capacity

    @released_capacity.setter
    def released_capacity(self, released_capacity):
        """Sets the released_capacity of this DataRepositoryTaskStatus.


        :param released_capacity: The released_capacity of this DataRepositoryTaskStatus.
        :type released_capacity: int
        """

        self._released_capacity = released_capacity
