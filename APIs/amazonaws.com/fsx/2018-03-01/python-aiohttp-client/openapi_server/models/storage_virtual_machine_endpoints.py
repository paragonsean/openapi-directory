# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.svm_endpoints_iscsi import SvmEndpointsIscsi
from openapi_server.models.svm_endpoints_management import SvmEndpointsManagement
from openapi_server.models.svm_endpoints_nfs import SvmEndpointsNfs
from openapi_server.models.svm_endpoints_smb import SvmEndpointsSmb
from openapi_server import util


class StorageVirtualMachineEndpoints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iscsi: SvmEndpointsIscsi=None, management: SvmEndpointsManagement=None, nfs: SvmEndpointsNfs=None, smb: SvmEndpointsSmb=None):
        """StorageVirtualMachineEndpoints - a model defined in OpenAPI

        :param iscsi: The iscsi of this StorageVirtualMachineEndpoints.
        :param management: The management of this StorageVirtualMachineEndpoints.
        :param nfs: The nfs of this StorageVirtualMachineEndpoints.
        :param smb: The smb of this StorageVirtualMachineEndpoints.
        """
        self.openapi_types = {
            'iscsi': SvmEndpointsIscsi,
            'management': SvmEndpointsManagement,
            'nfs': SvmEndpointsNfs,
            'smb': SvmEndpointsSmb
        }

        self.attribute_map = {
            'iscsi': 'Iscsi',
            'management': 'Management',
            'nfs': 'Nfs',
            'smb': 'Smb'
        }

        self._iscsi = iscsi
        self._management = management
        self._nfs = nfs
        self._smb = smb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageVirtualMachineEndpoints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageVirtualMachine_Endpoints of this StorageVirtualMachineEndpoints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iscsi(self):
        """Gets the iscsi of this StorageVirtualMachineEndpoints.


        :return: The iscsi of this StorageVirtualMachineEndpoints.
        :rtype: SvmEndpointsIscsi
        """
        return self._iscsi

    @iscsi.setter
    def iscsi(self, iscsi):
        """Sets the iscsi of this StorageVirtualMachineEndpoints.


        :param iscsi: The iscsi of this StorageVirtualMachineEndpoints.
        :type iscsi: SvmEndpointsIscsi
        """

        self._iscsi = iscsi

    @property
    def management(self):
        """Gets the management of this StorageVirtualMachineEndpoints.


        :return: The management of this StorageVirtualMachineEndpoints.
        :rtype: SvmEndpointsManagement
        """
        return self._management

    @management.setter
    def management(self, management):
        """Sets the management of this StorageVirtualMachineEndpoints.


        :param management: The management of this StorageVirtualMachineEndpoints.
        :type management: SvmEndpointsManagement
        """

        self._management = management

    @property
    def nfs(self):
        """Gets the nfs of this StorageVirtualMachineEndpoints.


        :return: The nfs of this StorageVirtualMachineEndpoints.
        :rtype: SvmEndpointsNfs
        """
        return self._nfs

    @nfs.setter
    def nfs(self, nfs):
        """Sets the nfs of this StorageVirtualMachineEndpoints.


        :param nfs: The nfs of this StorageVirtualMachineEndpoints.
        :type nfs: SvmEndpointsNfs
        """

        self._nfs = nfs

    @property
    def smb(self):
        """Gets the smb of this StorageVirtualMachineEndpoints.


        :return: The smb of this StorageVirtualMachineEndpoints.
        :rtype: SvmEndpointsSmb
        """
        return self._smb

    @smb.setter
    def smb(self, smb):
        """Sets the smb of this StorageVirtualMachineEndpoints.


        :param smb: The smb of this StorageVirtualMachineEndpoints.
        :type smb: SvmEndpointsSmb
        """

        self._smb = smb
