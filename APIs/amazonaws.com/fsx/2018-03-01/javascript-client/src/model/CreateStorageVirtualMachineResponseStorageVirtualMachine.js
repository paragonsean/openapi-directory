/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StorageVirtualMachine from './StorageVirtualMachine';
import StorageVirtualMachineActiveDirectoryConfiguration from './StorageVirtualMachineActiveDirectoryConfiguration';
import StorageVirtualMachineEndpoints from './StorageVirtualMachineEndpoints';
import StorageVirtualMachineLifecycle from './StorageVirtualMachineLifecycle';
import StorageVirtualMachineLifecycleTransitionReason from './StorageVirtualMachineLifecycleTransitionReason';
import StorageVirtualMachineRootVolumeSecurityStyle from './StorageVirtualMachineRootVolumeSecurityStyle';
import StorageVirtualMachineSubtype from './StorageVirtualMachineSubtype';
import Tag from './Tag';

/**
 * The CreateStorageVirtualMachineResponseStorageVirtualMachine model module.
 * @module model/CreateStorageVirtualMachineResponseStorageVirtualMachine
 * @version 2018-03-01
 */
class CreateStorageVirtualMachineResponseStorageVirtualMachine {
    /**
     * Constructs a new <code>CreateStorageVirtualMachineResponseStorageVirtualMachine</code>.
     * @alias module:model/CreateStorageVirtualMachineResponseStorageVirtualMachine
     * @implements module:model/StorageVirtualMachine
     */
    constructor() { 
        StorageVirtualMachine.initialize(this);
        CreateStorageVirtualMachineResponseStorageVirtualMachine.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateStorageVirtualMachineResponseStorageVirtualMachine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateStorageVirtualMachineResponseStorageVirtualMachine} obj Optional instance to populate.
     * @return {module:model/CreateStorageVirtualMachineResponseStorageVirtualMachine} The populated <code>CreateStorageVirtualMachineResponseStorageVirtualMachine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateStorageVirtualMachineResponseStorageVirtualMachine();
            StorageVirtualMachine.constructFromObject(data, obj);

            if (data.hasOwnProperty('ActiveDirectoryConfiguration')) {
                obj['ActiveDirectoryConfiguration'] = StorageVirtualMachineActiveDirectoryConfiguration.constructFromObject(data['ActiveDirectoryConfiguration']);
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('Endpoints')) {
                obj['Endpoints'] = StorageVirtualMachineEndpoints.constructFromObject(data['Endpoints']);
            }
            if (data.hasOwnProperty('FileSystemId')) {
                obj['FileSystemId'] = ApiClient.convertToType(data['FileSystemId'], 'String');
            }
            if (data.hasOwnProperty('Lifecycle')) {
                obj['Lifecycle'] = ApiClient.convertToType(data['Lifecycle'], StorageVirtualMachineLifecycle);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ResourceARN')) {
                obj['ResourceARN'] = ApiClient.convertToType(data['ResourceARN'], 'String');
            }
            if (data.hasOwnProperty('StorageVirtualMachineId')) {
                obj['StorageVirtualMachineId'] = ApiClient.convertToType(data['StorageVirtualMachineId'], 'String');
            }
            if (data.hasOwnProperty('Subtype')) {
                obj['Subtype'] = ApiClient.convertToType(data['Subtype'], StorageVirtualMachineSubtype);
            }
            if (data.hasOwnProperty('UUID')) {
                obj['UUID'] = ApiClient.convertToType(data['UUID'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
            if (data.hasOwnProperty('LifecycleTransitionReason')) {
                obj['LifecycleTransitionReason'] = StorageVirtualMachineLifecycleTransitionReason.constructFromObject(data['LifecycleTransitionReason']);
            }
            if (data.hasOwnProperty('RootVolumeSecurityStyle')) {
                obj['RootVolumeSecurityStyle'] = ApiClient.convertToType(data['RootVolumeSecurityStyle'], StorageVirtualMachineRootVolumeSecurityStyle);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateStorageVirtualMachineResponseStorageVirtualMachine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateStorageVirtualMachineResponseStorageVirtualMachine</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ActiveDirectoryConfiguration`
        if (data['ActiveDirectoryConfiguration']) { // data not null
          StorageVirtualMachineActiveDirectoryConfiguration.validateJSON(data['ActiveDirectoryConfiguration']);
        }
        // validate the optional field `Endpoints`
        if (data['Endpoints']) { // data not null
          StorageVirtualMachineEndpoints.validateJSON(data['Endpoints']);
        }
        // ensure the json data is a string
        if (data['FileSystemId'] && !(typeof data['FileSystemId'] === 'string' || data['FileSystemId'] instanceof String)) {
            throw new Error("Expected the field `FileSystemId` to be a primitive type in the JSON string but got " + data['FileSystemId']);
        }
        // validate the optional field `Lifecycle`
        if (data['Lifecycle']) { // data not null
          StorageVirtualMachineLifecycle.validateJSON(data['Lifecycle']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // ensure the json data is a string
        if (data['ResourceARN'] && !(typeof data['ResourceARN'] === 'string' || data['ResourceARN'] instanceof String)) {
            throw new Error("Expected the field `ResourceARN` to be a primitive type in the JSON string but got " + data['ResourceARN']);
        }
        // validate the optional field `StorageVirtualMachineId`
        if (data['StorageVirtualMachineId']) { // data not null
          String.validateJSON(data['StorageVirtualMachineId']);
        }
        // validate the optional field `Subtype`
        if (data['Subtype']) { // data not null
          StorageVirtualMachineSubtype.validateJSON(data['Subtype']);
        }
        // validate the optional field `UUID`
        if (data['UUID']) { // data not null
          String.validateJSON(data['UUID']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }
        // validate the optional field `LifecycleTransitionReason`
        if (data['LifecycleTransitionReason']) { // data not null
          StorageVirtualMachineLifecycleTransitionReason.validateJSON(data['LifecycleTransitionReason']);
        }
        // validate the optional field `RootVolumeSecurityStyle`
        if (data['RootVolumeSecurityStyle']) { // data not null
          StorageVirtualMachineRootVolumeSecurityStyle.validateJSON(data['RootVolumeSecurityStyle']);
        }

        return true;
    }


}



/**
 * @member {module:model/StorageVirtualMachineActiveDirectoryConfiguration} ActiveDirectoryConfiguration
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['ActiveDirectoryConfiguration'] = undefined;

/**
 * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
 * @member {Date} CreationTime
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['CreationTime'] = undefined;

/**
 * @member {module:model/StorageVirtualMachineEndpoints} Endpoints
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['Endpoints'] = undefined;

/**
 * The globally unique ID of the file system, assigned by Amazon FSx.
 * @member {String} FileSystemId
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['FileSystemId'] = undefined;

/**
 * @member {module:model/StorageVirtualMachineLifecycle} Lifecycle
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['Lifecycle'] = undefined;

/**
 * @member {String} Name
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['Name'] = undefined;

/**
 * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
 * @member {String} ResourceARN
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['ResourceARN'] = undefined;

/**
 * @member {String} StorageVirtualMachineId
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['StorageVirtualMachineId'] = undefined;

/**
 * @member {module:model/StorageVirtualMachineSubtype} Subtype
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['Subtype'] = undefined;

/**
 * @member {String} UUID
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['UUID'] = undefined;

/**
 * A list of <code>Tag</code> values, with a maximum of 50 elements.
 * @member {Array.<module:model/Tag>} Tags
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['Tags'] = undefined;

/**
 * @member {module:model/StorageVirtualMachineLifecycleTransitionReason} LifecycleTransitionReason
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['LifecycleTransitionReason'] = undefined;

/**
 * @member {module:model/StorageVirtualMachineRootVolumeSecurityStyle} RootVolumeSecurityStyle
 */
CreateStorageVirtualMachineResponseStorageVirtualMachine.prototype['RootVolumeSecurityStyle'] = undefined;


// Implement StorageVirtualMachine interface:
/**
 * @member {module:model/StorageVirtualMachineActiveDirectoryConfiguration} ActiveDirectoryConfiguration
 */
StorageVirtualMachine.prototype['ActiveDirectoryConfiguration'] = undefined;
/**
 * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
 * @member {Date} CreationTime
 */
StorageVirtualMachine.prototype['CreationTime'] = undefined;
/**
 * @member {module:model/StorageVirtualMachineEndpoints} Endpoints
 */
StorageVirtualMachine.prototype['Endpoints'] = undefined;
/**
 * The globally unique ID of the file system, assigned by Amazon FSx.
 * @member {String} FileSystemId
 */
StorageVirtualMachine.prototype['FileSystemId'] = undefined;
/**
 * @member {module:model/StorageVirtualMachineLifecycle} Lifecycle
 */
StorageVirtualMachine.prototype['Lifecycle'] = undefined;
/**
 * @member {String} Name
 */
StorageVirtualMachine.prototype['Name'] = undefined;
/**
 * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
 * @member {String} ResourceARN
 */
StorageVirtualMachine.prototype['ResourceARN'] = undefined;
/**
 * @member {String} StorageVirtualMachineId
 */
StorageVirtualMachine.prototype['StorageVirtualMachineId'] = undefined;
/**
 * @member {module:model/StorageVirtualMachineSubtype} Subtype
 */
StorageVirtualMachine.prototype['Subtype'] = undefined;
/**
 * @member {String} UUID
 */
StorageVirtualMachine.prototype['UUID'] = undefined;
/**
 * A list of <code>Tag</code> values, with a maximum of 50 elements.
 * @member {Array.<module:model/Tag>} Tags
 */
StorageVirtualMachine.prototype['Tags'] = undefined;
/**
 * @member {module:model/StorageVirtualMachineLifecycleTransitionReason} LifecycleTransitionReason
 */
StorageVirtualMachine.prototype['LifecycleTransitionReason'] = undefined;
/**
 * @member {module:model/StorageVirtualMachineRootVolumeSecurityStyle} RootVolumeSecurityStyle
 */
StorageVirtualMachine.prototype['RootVolumeSecurityStyle'] = undefined;




export default CreateStorageVirtualMachineResponseStorageVirtualMachine;

