/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SvmEndpoint model module.
 * @module model/SvmEndpoint
 * @version 2018-03-01
 */
class SvmEndpoint {
    /**
     * Constructs a new <code>SvmEndpoint</code>.
     * An Amazon FSx for NetApp ONTAP storage virtual machine (SVM) has four endpoints that are used to access data or to manage the SVM using the NetApp ONTAP CLI, REST API, or NetApp CloudManager. They are the &lt;code&gt;Iscsi&lt;/code&gt;, &lt;code&gt;Management&lt;/code&gt;, &lt;code&gt;Nfs&lt;/code&gt;, and &lt;code&gt;Smb&lt;/code&gt; endpoints.
     * @alias module:model/SvmEndpoint
     */
    constructor() { 
        
        SvmEndpoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SvmEndpoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SvmEndpoint} obj Optional instance to populate.
     * @return {module:model/SvmEndpoint} The populated <code>SvmEndpoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SvmEndpoint();

            if (data.hasOwnProperty('DNSName')) {
                obj['DNSName'] = ApiClient.convertToType(data['DNSName'], 'String');
            }
            if (data.hasOwnProperty('IpAddresses')) {
                obj['IpAddresses'] = ApiClient.convertToType(data['IpAddresses'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SvmEndpoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SvmEndpoint</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['DNSName'] && !(typeof data['DNSName'] === 'string' || data['DNSName'] instanceof String)) {
            throw new Error("Expected the field `DNSName` to be a primitive type in the JSON string but got " + data['DNSName']);
        }
        // validate the optional field `IpAddresses`
        if (data['IpAddresses']) { // data not null
          Array.validateJSON(data['IpAddresses']);
        }

        return true;
    }


}



/**
 * The file system's DNS name. You can mount your file system using its DNS name.
 * @member {String} DNSName
 */
SvmEndpoint.prototype['DNSName'] = undefined;

/**
 * @member {Array} IpAddresses
 */
SvmEndpoint.prototype['IpAddresses'] = undefined;






export default SvmEndpoint;

