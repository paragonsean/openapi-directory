/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SvmEndpointsIscsi from './SvmEndpointsIscsi';
import SvmEndpointsManagement from './SvmEndpointsManagement';
import SvmEndpointsNfs from './SvmEndpointsNfs';
import SvmEndpointsSmb from './SvmEndpointsSmb';

/**
 * The SvmEndpoints model module.
 * @module model/SvmEndpoints
 * @version 2018-03-01
 */
class SvmEndpoints {
    /**
     * Constructs a new <code>SvmEndpoints</code>.
     * An Amazon FSx for NetApp ONTAP storage virtual machine (SVM) has the following endpoints that are used to access data or to manage the SVM using the NetApp ONTAP CLI, REST API, or NetApp CloudManager.
     * @alias module:model/SvmEndpoints
     */
    constructor() { 
        
        SvmEndpoints.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SvmEndpoints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SvmEndpoints} obj Optional instance to populate.
     * @return {module:model/SvmEndpoints} The populated <code>SvmEndpoints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SvmEndpoints();

            if (data.hasOwnProperty('Iscsi')) {
                obj['Iscsi'] = SvmEndpointsIscsi.constructFromObject(data['Iscsi']);
            }
            if (data.hasOwnProperty('Management')) {
                obj['Management'] = SvmEndpointsManagement.constructFromObject(data['Management']);
            }
            if (data.hasOwnProperty('Nfs')) {
                obj['Nfs'] = SvmEndpointsNfs.constructFromObject(data['Nfs']);
            }
            if (data.hasOwnProperty('Smb')) {
                obj['Smb'] = SvmEndpointsSmb.constructFromObject(data['Smb']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SvmEndpoints</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SvmEndpoints</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Iscsi`
        if (data['Iscsi']) { // data not null
          SvmEndpointsIscsi.validateJSON(data['Iscsi']);
        }
        // validate the optional field `Management`
        if (data['Management']) { // data not null
          SvmEndpointsManagement.validateJSON(data['Management']);
        }
        // validate the optional field `Nfs`
        if (data['Nfs']) { // data not null
          SvmEndpointsNfs.validateJSON(data['Nfs']);
        }
        // validate the optional field `Smb`
        if (data['Smb']) { // data not null
          SvmEndpointsSmb.validateJSON(data['Smb']);
        }

        return true;
    }


}



/**
 * @member {module:model/SvmEndpointsIscsi} Iscsi
 */
SvmEndpoints.prototype['Iscsi'] = undefined;

/**
 * @member {module:model/SvmEndpointsManagement} Management
 */
SvmEndpoints.prototype['Management'] = undefined;

/**
 * @member {module:model/SvmEndpointsNfs} Nfs
 */
SvmEndpoints.prototype['Nfs'] = undefined;

/**
 * @member {module:model/SvmEndpointsSmb} Smb
 */
SvmEndpoints.prototype['Smb'] = undefined;






export default SvmEndpoints;

