/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateOpenZFSVolumeConfiguration from './CreateOpenZFSVolumeConfiguration';
import CreateOpenZFSVolumeConfigurationOriginSnapshot from './CreateOpenZFSVolumeConfigurationOriginSnapshot';
import OpenZFSDataCompressionType from './OpenZFSDataCompressionType';

/**
 * The CreateVolumeRequestOpenZFSConfiguration model module.
 * @module model/CreateVolumeRequestOpenZFSConfiguration
 * @version 2018-03-01
 */
class CreateVolumeRequestOpenZFSConfiguration {
    /**
     * Constructs a new <code>CreateVolumeRequestOpenZFSConfiguration</code>.
     * @alias module:model/CreateVolumeRequestOpenZFSConfiguration
     * @implements module:model/CreateOpenZFSVolumeConfiguration
     * @param parentVolumeId {String} 
     */
    constructor(parentVolumeId) { 
        CreateOpenZFSVolumeConfiguration.initialize(this, parentVolumeId);
        CreateVolumeRequestOpenZFSConfiguration.initialize(this, parentVolumeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, parentVolumeId) { 
        obj['ParentVolumeId'] = parentVolumeId;
    }

    /**
     * Constructs a <code>CreateVolumeRequestOpenZFSConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateVolumeRequestOpenZFSConfiguration} obj Optional instance to populate.
     * @return {module:model/CreateVolumeRequestOpenZFSConfiguration} The populated <code>CreateVolumeRequestOpenZFSConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateVolumeRequestOpenZFSConfiguration();
            CreateOpenZFSVolumeConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('ParentVolumeId')) {
                obj['ParentVolumeId'] = ApiClient.convertToType(data['ParentVolumeId'], 'String');
            }
            if (data.hasOwnProperty('StorageCapacityReservationGiB')) {
                obj['StorageCapacityReservationGiB'] = ApiClient.convertToType(data['StorageCapacityReservationGiB'], 'Number');
            }
            if (data.hasOwnProperty('StorageCapacityQuotaGiB')) {
                obj['StorageCapacityQuotaGiB'] = ApiClient.convertToType(data['StorageCapacityQuotaGiB'], 'Number');
            }
            if (data.hasOwnProperty('RecordSizeKiB')) {
                obj['RecordSizeKiB'] = ApiClient.convertToType(data['RecordSizeKiB'], 'Number');
            }
            if (data.hasOwnProperty('DataCompressionType')) {
                obj['DataCompressionType'] = ApiClient.convertToType(data['DataCompressionType'], OpenZFSDataCompressionType);
            }
            if (data.hasOwnProperty('CopyTagsToSnapshots')) {
                obj['CopyTagsToSnapshots'] = ApiClient.convertToType(data['CopyTagsToSnapshots'], 'Boolean');
            }
            if (data.hasOwnProperty('OriginSnapshot')) {
                obj['OriginSnapshot'] = CreateOpenZFSVolumeConfigurationOriginSnapshot.constructFromObject(data['OriginSnapshot']);
            }
            if (data.hasOwnProperty('ReadOnly')) {
                obj['ReadOnly'] = ApiClient.convertToType(data['ReadOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('NfsExports')) {
                obj['NfsExports'] = ApiClient.convertToType(data['NfsExports'], Array);
            }
            if (data.hasOwnProperty('UserAndGroupQuotas')) {
                obj['UserAndGroupQuotas'] = ApiClient.convertToType(data['UserAndGroupQuotas'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateVolumeRequestOpenZFSConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateVolumeRequestOpenZFSConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateVolumeRequestOpenZFSConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ParentVolumeId`
        if (data['ParentVolumeId']) { // data not null
          String.validateJSON(data['ParentVolumeId']);
        }
        // validate the optional field `StorageCapacityReservationGiB`
        if (data['StorageCapacityReservationGiB']) { // data not null
          Number.validateJSON(data['StorageCapacityReservationGiB']);
        }
        // validate the optional field `StorageCapacityQuotaGiB`
        if (data['StorageCapacityQuotaGiB']) { // data not null
          Number.validateJSON(data['StorageCapacityQuotaGiB']);
        }
        // validate the optional field `RecordSizeKiB`
        if (data['RecordSizeKiB']) { // data not null
          Number.validateJSON(data['RecordSizeKiB']);
        }
        // validate the optional field `DataCompressionType`
        if (data['DataCompressionType']) { // data not null
          OpenZFSDataCompressionType.validateJSON(data['DataCompressionType']);
        }
        // validate the optional field `CopyTagsToSnapshots`
        if (data['CopyTagsToSnapshots']) { // data not null
          Boolean.validateJSON(data['CopyTagsToSnapshots']);
        }
        // validate the optional field `OriginSnapshot`
        if (data['OriginSnapshot']) { // data not null
          CreateOpenZFSVolumeConfigurationOriginSnapshot.validateJSON(data['OriginSnapshot']);
        }
        // validate the optional field `ReadOnly`
        if (data['ReadOnly']) { // data not null
          Boolean.validateJSON(data['ReadOnly']);
        }
        // validate the optional field `NfsExports`
        if (data['NfsExports']) { // data not null
          Array.validateJSON(data['NfsExports']);
        }
        // validate the optional field `UserAndGroupQuotas`
        if (data['UserAndGroupQuotas']) { // data not null
          Array.validateJSON(data['UserAndGroupQuotas']);
        }

        return true;
    }


}

CreateVolumeRequestOpenZFSConfiguration.RequiredProperties = ["ParentVolumeId"];

/**
 * @member {String} ParentVolumeId
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['ParentVolumeId'] = undefined;

/**
 * @member {Number} StorageCapacityReservationGiB
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['StorageCapacityReservationGiB'] = undefined;

/**
 * @member {Number} StorageCapacityQuotaGiB
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['StorageCapacityQuotaGiB'] = undefined;

/**
 * @member {Number} RecordSizeKiB
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['RecordSizeKiB'] = undefined;

/**
 * @member {module:model/OpenZFSDataCompressionType} DataCompressionType
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['DataCompressionType'] = undefined;

/**
 * @member {Boolean} CopyTagsToSnapshots
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['CopyTagsToSnapshots'] = undefined;

/**
 * @member {module:model/CreateOpenZFSVolumeConfigurationOriginSnapshot} OriginSnapshot
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['OriginSnapshot'] = undefined;

/**
 * @member {Boolean} ReadOnly
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['ReadOnly'] = undefined;

/**
 * @member {Array} NfsExports
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['NfsExports'] = undefined;

/**
 * @member {Array} UserAndGroupQuotas
 */
CreateVolumeRequestOpenZFSConfiguration.prototype['UserAndGroupQuotas'] = undefined;


// Implement CreateOpenZFSVolumeConfiguration interface:
/**
 * @member {String} ParentVolumeId
 */
CreateOpenZFSVolumeConfiguration.prototype['ParentVolumeId'] = undefined;
/**
 * @member {Number} StorageCapacityReservationGiB
 */
CreateOpenZFSVolumeConfiguration.prototype['StorageCapacityReservationGiB'] = undefined;
/**
 * @member {Number} StorageCapacityQuotaGiB
 */
CreateOpenZFSVolumeConfiguration.prototype['StorageCapacityQuotaGiB'] = undefined;
/**
 * @member {Number} RecordSizeKiB
 */
CreateOpenZFSVolumeConfiguration.prototype['RecordSizeKiB'] = undefined;
/**
 * @member {module:model/OpenZFSDataCompressionType} DataCompressionType
 */
CreateOpenZFSVolumeConfiguration.prototype['DataCompressionType'] = undefined;
/**
 * @member {Boolean} CopyTagsToSnapshots
 */
CreateOpenZFSVolumeConfiguration.prototype['CopyTagsToSnapshots'] = undefined;
/**
 * @member {module:model/CreateOpenZFSVolumeConfigurationOriginSnapshot} OriginSnapshot
 */
CreateOpenZFSVolumeConfiguration.prototype['OriginSnapshot'] = undefined;
/**
 * @member {Boolean} ReadOnly
 */
CreateOpenZFSVolumeConfiguration.prototype['ReadOnly'] = undefined;
/**
 * @member {Array} NfsExports
 */
CreateOpenZFSVolumeConfiguration.prototype['NfsExports'] = undefined;
/**
 * @member {Array} UserAndGroupQuotas
 */
CreateOpenZFSVolumeConfiguration.prototype['UserAndGroupQuotas'] = undefined;




export default CreateVolumeRequestOpenZFSConfiguration;

