/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OntapVolumeConfiguration from './OntapVolumeConfiguration';
import Tag from './Tag';
import Volume from './Volume';
import VolumeLifecycle from './VolumeLifecycle';
import VolumeLifecycleTransitionReason from './VolumeLifecycleTransitionReason';
import VolumeOpenZFSConfiguration from './VolumeOpenZFSConfiguration';
import VolumeType from './VolumeType';

/**
 * The UpdateVolumeResponseVolume model module.
 * @module model/UpdateVolumeResponseVolume
 * @version 2018-03-01
 */
class UpdateVolumeResponseVolume {
    /**
     * Constructs a new <code>UpdateVolumeResponseVolume</code>.
     * @alias module:model/UpdateVolumeResponseVolume
     * @implements module:model/Volume
     */
    constructor() { 
        Volume.initialize(this);
        UpdateVolumeResponseVolume.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateVolumeResponseVolume</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateVolumeResponseVolume} obj Optional instance to populate.
     * @return {module:model/UpdateVolumeResponseVolume} The populated <code>UpdateVolumeResponseVolume</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateVolumeResponseVolume();
            Volume.constructFromObject(data, obj);

            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('FileSystemId')) {
                obj['FileSystemId'] = ApiClient.convertToType(data['FileSystemId'], 'String');
            }
            if (data.hasOwnProperty('Lifecycle')) {
                obj['Lifecycle'] = ApiClient.convertToType(data['Lifecycle'], VolumeLifecycle);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('OntapConfiguration')) {
                obj['OntapConfiguration'] = OntapVolumeConfiguration.constructFromObject(data['OntapConfiguration']);
            }
            if (data.hasOwnProperty('ResourceARN')) {
                obj['ResourceARN'] = ApiClient.convertToType(data['ResourceARN'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
            if (data.hasOwnProperty('VolumeId')) {
                obj['VolumeId'] = ApiClient.convertToType(data['VolumeId'], 'String');
            }
            if (data.hasOwnProperty('VolumeType')) {
                obj['VolumeType'] = ApiClient.convertToType(data['VolumeType'], VolumeType);
            }
            if (data.hasOwnProperty('LifecycleTransitionReason')) {
                obj['LifecycleTransitionReason'] = VolumeLifecycleTransitionReason.constructFromObject(data['LifecycleTransitionReason']);
            }
            if (data.hasOwnProperty('AdministrativeActions')) {
                obj['AdministrativeActions'] = ApiClient.convertToType(data['AdministrativeActions'], Array);
            }
            if (data.hasOwnProperty('OpenZFSConfiguration')) {
                obj['OpenZFSConfiguration'] = VolumeOpenZFSConfiguration.constructFromObject(data['OpenZFSConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateVolumeResponseVolume</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateVolumeResponseVolume</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['FileSystemId'] && !(typeof data['FileSystemId'] === 'string' || data['FileSystemId'] instanceof String)) {
            throw new Error("Expected the field `FileSystemId` to be a primitive type in the JSON string but got " + data['FileSystemId']);
        }
        // validate the optional field `Lifecycle`
        if (data['Lifecycle']) { // data not null
          VolumeLifecycle.validateJSON(data['Lifecycle']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `OntapConfiguration`
        if (data['OntapConfiguration']) { // data not null
          OntapVolumeConfiguration.validateJSON(data['OntapConfiguration']);
        }
        // ensure the json data is a string
        if (data['ResourceARN'] && !(typeof data['ResourceARN'] === 'string' || data['ResourceARN'] instanceof String)) {
            throw new Error("Expected the field `ResourceARN` to be a primitive type in the JSON string but got " + data['ResourceARN']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }
        // validate the optional field `VolumeId`
        if (data['VolumeId']) { // data not null
          String.validateJSON(data['VolumeId']);
        }
        // validate the optional field `VolumeType`
        if (data['VolumeType']) { // data not null
          VolumeType.validateJSON(data['VolumeType']);
        }
        // validate the optional field `LifecycleTransitionReason`
        if (data['LifecycleTransitionReason']) { // data not null
          VolumeLifecycleTransitionReason.validateJSON(data['LifecycleTransitionReason']);
        }
        // validate the optional field `AdministrativeActions`
        if (data['AdministrativeActions']) { // data not null
          Array.validateJSON(data['AdministrativeActions']);
        }
        // validate the optional field `OpenZFSConfiguration`
        if (data['OpenZFSConfiguration']) { // data not null
          VolumeOpenZFSConfiguration.validateJSON(data['OpenZFSConfiguration']);
        }

        return true;
    }


}



/**
 * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
 * @member {Date} CreationTime
 */
UpdateVolumeResponseVolume.prototype['CreationTime'] = undefined;

/**
 * The globally unique ID of the file system, assigned by Amazon FSx.
 * @member {String} FileSystemId
 */
UpdateVolumeResponseVolume.prototype['FileSystemId'] = undefined;

/**
 * @member {module:model/VolumeLifecycle} Lifecycle
 */
UpdateVolumeResponseVolume.prototype['Lifecycle'] = undefined;

/**
 * @member {String} Name
 */
UpdateVolumeResponseVolume.prototype['Name'] = undefined;

/**
 * @member {module:model/OntapVolumeConfiguration} OntapConfiguration
 */
UpdateVolumeResponseVolume.prototype['OntapConfiguration'] = undefined;

/**
 * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
 * @member {String} ResourceARN
 */
UpdateVolumeResponseVolume.prototype['ResourceARN'] = undefined;

/**
 * A list of <code>Tag</code> values, with a maximum of 50 elements.
 * @member {Array.<module:model/Tag>} Tags
 */
UpdateVolumeResponseVolume.prototype['Tags'] = undefined;

/**
 * @member {String} VolumeId
 */
UpdateVolumeResponseVolume.prototype['VolumeId'] = undefined;

/**
 * @member {module:model/VolumeType} VolumeType
 */
UpdateVolumeResponseVolume.prototype['VolumeType'] = undefined;

/**
 * @member {module:model/VolumeLifecycleTransitionReason} LifecycleTransitionReason
 */
UpdateVolumeResponseVolume.prototype['LifecycleTransitionReason'] = undefined;

/**
 * @member {Array} AdministrativeActions
 */
UpdateVolumeResponseVolume.prototype['AdministrativeActions'] = undefined;

/**
 * @member {module:model/VolumeOpenZFSConfiguration} OpenZFSConfiguration
 */
UpdateVolumeResponseVolume.prototype['OpenZFSConfiguration'] = undefined;


// Implement Volume interface:
/**
 * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
 * @member {Date} CreationTime
 */
Volume.prototype['CreationTime'] = undefined;
/**
 * The globally unique ID of the file system, assigned by Amazon FSx.
 * @member {String} FileSystemId
 */
Volume.prototype['FileSystemId'] = undefined;
/**
 * @member {module:model/VolumeLifecycle} Lifecycle
 */
Volume.prototype['Lifecycle'] = undefined;
/**
 * @member {String} Name
 */
Volume.prototype['Name'] = undefined;
/**
 * @member {module:model/OntapVolumeConfiguration} OntapConfiguration
 */
Volume.prototype['OntapConfiguration'] = undefined;
/**
 * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
 * @member {String} ResourceARN
 */
Volume.prototype['ResourceARN'] = undefined;
/**
 * A list of <code>Tag</code> values, with a maximum of 50 elements.
 * @member {Array.<module:model/Tag>} Tags
 */
Volume.prototype['Tags'] = undefined;
/**
 * @member {String} VolumeId
 */
Volume.prototype['VolumeId'] = undefined;
/**
 * @member {module:model/VolumeType} VolumeType
 */
Volume.prototype['VolumeType'] = undefined;
/**
 * @member {module:model/VolumeLifecycleTransitionReason} LifecycleTransitionReason
 */
Volume.prototype['LifecycleTransitionReason'] = undefined;
/**
 * @member {Array} AdministrativeActions
 */
Volume.prototype['AdministrativeActions'] = undefined;
/**
 * @member {module:model/VolumeOpenZFSConfiguration} OpenZFSConfiguration
 */
Volume.prototype['OpenZFSConfiguration'] = undefined;




export default UpdateVolumeResponseVolume;

