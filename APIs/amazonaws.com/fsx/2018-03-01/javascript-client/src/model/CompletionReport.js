/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReportFormat from './ReportFormat';
import ReportScope from './ReportScope';

/**
 * The CompletionReport model module.
 * @module model/CompletionReport
 * @version 2018-03-01
 */
class CompletionReport {
    /**
     * Constructs a new <code>CompletionReport</code>.
     * Provides a report detailing the data repository task results of the files processed that match the criteria specified in the report &lt;code&gt;Scope&lt;/code&gt; parameter. FSx delivers the report to the file system&#39;s linked data repository in Amazon S3, using the path specified in the report &lt;code&gt;Path&lt;/code&gt; parameter. You can specify whether or not a report gets generated for a task using the &lt;code&gt;Enabled&lt;/code&gt; parameter.
     * @alias module:model/CompletionReport
     * @param enabled {Boolean} 
     */
    constructor(enabled) { 
        
        CompletionReport.initialize(this, enabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled) { 
        obj['Enabled'] = enabled;
    }

    /**
     * Constructs a <code>CompletionReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompletionReport} obj Optional instance to populate.
     * @return {module:model/CompletionReport} The populated <code>CompletionReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompletionReport();

            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('Path')) {
                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');
            }
            if (data.hasOwnProperty('Format')) {
                obj['Format'] = ApiClient.convertToType(data['Format'], ReportFormat);
            }
            if (data.hasOwnProperty('Scope')) {
                obj['Scope'] = ApiClient.convertToType(data['Scope'], ReportScope);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompletionReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompletionReport</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CompletionReport.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Enabled`
        if (data['Enabled']) { // data not null
          Boolean.validateJSON(data['Enabled']);
        }
        // validate the optional field `Path`
        if (data['Path']) { // data not null
          String.validateJSON(data['Path']);
        }
        // validate the optional field `Format`
        if (data['Format']) { // data not null
          ReportFormat.validateJSON(data['Format']);
        }
        // validate the optional field `Scope`
        if (data['Scope']) { // data not null
          ReportScope.validateJSON(data['Scope']);
        }

        return true;
    }


}

CompletionReport.RequiredProperties = ["Enabled"];

/**
 * @member {Boolean} Enabled
 */
CompletionReport.prototype['Enabled'] = undefined;

/**
 * @member {String} Path
 */
CompletionReport.prototype['Path'] = undefined;

/**
 * @member {module:model/ReportFormat} Format
 */
CompletionReport.prototype['Format'] = undefined;

/**
 * @member {module:model/ReportScope} Scope
 */
CompletionReport.prototype['Scope'] = undefined;






export default CompletionReport;

