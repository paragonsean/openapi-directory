/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdministrativeActionFailureDetails from './AdministrativeActionFailureDetails';
import AdministrativeActionTargetFileSystemValues from './AdministrativeActionTargetFileSystemValues';
import AdministrativeActionType from './AdministrativeActionType';
import Snapshot from './Snapshot';
import Status from './Status';
import Volume from './Volume';

/**
 * The AdministrativeAction model module.
 * @module model/AdministrativeAction
 * @version 2018-03-01
 */
class AdministrativeAction {
    /**
     * Constructs a new <code>AdministrativeAction</code>.
     * Describes a specific Amazon FSx administrative action for the current Windows, Lustre, or OpenZFS file system.
     * @alias module:model/AdministrativeAction
     */
    constructor() { 
        
        AdministrativeAction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdministrativeAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdministrativeAction} obj Optional instance to populate.
     * @return {module:model/AdministrativeAction} The populated <code>AdministrativeAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdministrativeAction();

            if (data.hasOwnProperty('AdministrativeActionType')) {
                obj['AdministrativeActionType'] = AdministrativeActionType.constructFromObject(data['AdministrativeActionType']);
            }
            if (data.hasOwnProperty('ProgressPercent')) {
                obj['ProgressPercent'] = ApiClient.convertToType(data['ProgressPercent'], 'Number');
            }
            if (data.hasOwnProperty('RequestTime')) {
                obj['RequestTime'] = ApiClient.convertToType(data['RequestTime'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], Status);
            }
            if (data.hasOwnProperty('TargetFileSystemValues')) {
                obj['TargetFileSystemValues'] = AdministrativeActionTargetFileSystemValues.constructFromObject(data['TargetFileSystemValues']);
            }
            if (data.hasOwnProperty('FailureDetails')) {
                obj['FailureDetails'] = AdministrativeActionFailureDetails.constructFromObject(data['FailureDetails']);
            }
            if (data.hasOwnProperty('TargetVolumeValues')) {
                obj['TargetVolumeValues'] = Volume.constructFromObject(data['TargetVolumeValues']);
            }
            if (data.hasOwnProperty('TargetSnapshotValues')) {
                obj['TargetSnapshotValues'] = Snapshot.constructFromObject(data['TargetSnapshotValues']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdministrativeAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdministrativeAction</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ProgressPercent`
        if (data['ProgressPercent']) { // data not null
          Number.validateJSON(data['ProgressPercent']);
        }
        // validate the optional field `RequestTime`
        if (data['RequestTime']) { // data not null
          Date.validateJSON(data['RequestTime']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          Status.validateJSON(data['Status']);
        }
        // validate the optional field `TargetFileSystemValues`
        if (data['TargetFileSystemValues']) { // data not null
          AdministrativeActionTargetFileSystemValues.validateJSON(data['TargetFileSystemValues']);
        }
        // validate the optional field `FailureDetails`
        if (data['FailureDetails']) { // data not null
          AdministrativeActionFailureDetails.validateJSON(data['FailureDetails']);
        }
        // validate the optional field `TargetVolumeValues`
        if (data['TargetVolumeValues']) { // data not null
          Volume.validateJSON(data['TargetVolumeValues']);
        }
        // validate the optional field `TargetSnapshotValues`
        if (data['TargetSnapshotValues']) { // data not null
          Snapshot.validateJSON(data['TargetSnapshotValues']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdministrativeActionType} AdministrativeActionType
 */
AdministrativeAction.prototype['AdministrativeActionType'] = undefined;

/**
 * @member {Number} ProgressPercent
 */
AdministrativeAction.prototype['ProgressPercent'] = undefined;

/**
 * @member {Date} RequestTime
 */
AdministrativeAction.prototype['RequestTime'] = undefined;

/**
 * @member {module:model/Status} Status
 */
AdministrativeAction.prototype['Status'] = undefined;

/**
 * @member {module:model/AdministrativeActionTargetFileSystemValues} TargetFileSystemValues
 */
AdministrativeAction.prototype['TargetFileSystemValues'] = undefined;

/**
 * @member {module:model/AdministrativeActionFailureDetails} FailureDetails
 */
AdministrativeAction.prototype['FailureDetails'] = undefined;

/**
 * @member {module:model/Volume} TargetVolumeValues
 */
AdministrativeAction.prototype['TargetVolumeValues'] = undefined;

/**
 * @member {module:model/Snapshot} TargetSnapshotValues
 */
AdministrativeAction.prototype['TargetSnapshotValues'] = undefined;






export default AdministrativeAction;

