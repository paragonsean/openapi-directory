/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateVolumeRequestOntapConfiguration from './CreateVolumeRequestOntapConfiguration';
import CreateVolumeRequestOpenZFSConfiguration from './CreateVolumeRequestOpenZFSConfiguration';
import Tag from './Tag';
import VolumeType from './VolumeType';

/**
 * The CreateVolumeRequest model module.
 * @module model/CreateVolumeRequest
 * @version 2018-03-01
 */
class CreateVolumeRequest {
    /**
     * Constructs a new <code>CreateVolumeRequest</code>.
     * @alias module:model/CreateVolumeRequest
     * @param volumeType {module:model/VolumeType} 
     * @param name {String} 
     */
    constructor(volumeType, name) { 
        
        CreateVolumeRequest.initialize(this, volumeType, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, volumeType, name) { 
        obj['VolumeType'] = volumeType;
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>CreateVolumeRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateVolumeRequest} obj Optional instance to populate.
     * @return {module:model/CreateVolumeRequest} The populated <code>CreateVolumeRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateVolumeRequest();

            if (data.hasOwnProperty('ClientRequestToken')) {
                obj['ClientRequestToken'] = ApiClient.convertToType(data['ClientRequestToken'], 'String');
            }
            if (data.hasOwnProperty('VolumeType')) {
                obj['VolumeType'] = ApiClient.convertToType(data['VolumeType'], VolumeType);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('OntapConfiguration')) {
                obj['OntapConfiguration'] = CreateVolumeRequestOntapConfiguration.constructFromObject(data['OntapConfiguration']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
            if (data.hasOwnProperty('OpenZFSConfiguration')) {
                obj['OpenZFSConfiguration'] = CreateVolumeRequestOpenZFSConfiguration.constructFromObject(data['OpenZFSConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateVolumeRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateVolumeRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateVolumeRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ClientRequestToken'] && !(typeof data['ClientRequestToken'] === 'string' || data['ClientRequestToken'] instanceof String)) {
            throw new Error("Expected the field `ClientRequestToken` to be a primitive type in the JSON string but got " + data['ClientRequestToken']);
        }
        // validate the optional field `VolumeType`
        if (data['VolumeType']) { // data not null
          VolumeType.validateJSON(data['VolumeType']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `OntapConfiguration`
        if (data['OntapConfiguration']) { // data not null
          CreateVolumeRequestOntapConfiguration.validateJSON(data['OntapConfiguration']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }
        // validate the optional field `OpenZFSConfiguration`
        if (data['OpenZFSConfiguration']) { // data not null
          CreateVolumeRequestOpenZFSConfiguration.validateJSON(data['OpenZFSConfiguration']);
        }

        return true;
    }


}

CreateVolumeRequest.RequiredProperties = ["VolumeType", "Name"];

/**
 * (Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.
 * @member {String} ClientRequestToken
 */
CreateVolumeRequest.prototype['ClientRequestToken'] = undefined;

/**
 * @member {module:model/VolumeType} VolumeType
 */
CreateVolumeRequest.prototype['VolumeType'] = undefined;

/**
 * @member {String} Name
 */
CreateVolumeRequest.prototype['Name'] = undefined;

/**
 * @member {module:model/CreateVolumeRequestOntapConfiguration} OntapConfiguration
 */
CreateVolumeRequest.prototype['OntapConfiguration'] = undefined;

/**
 * A list of <code>Tag</code> values, with a maximum of 50 elements.
 * @member {Array.<module:model/Tag>} Tags
 */
CreateVolumeRequest.prototype['Tags'] = undefined;

/**
 * @member {module:model/CreateVolumeRequestOpenZFSConfiguration} OpenZFSConfiguration
 */
CreateVolumeRequest.prototype['OpenZFSConfiguration'] = undefined;






export default CreateVolumeRequest;

