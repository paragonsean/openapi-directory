/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataRepositoryTaskFilterName from './DataRepositoryTaskFilterName';

/**
 * The DataRepositoryTaskFilter model module.
 * @module model/DataRepositoryTaskFilter
 * @version 2018-03-01
 */
class DataRepositoryTaskFilter {
    /**
     * Constructs a new <code>DataRepositoryTaskFilter</code>.
     * (Optional) An array of filter objects you can use to filter the response of data repository tasks you will see in the the response. You can filter the tasks returned in the response by one or more file system IDs, task lifecycles, and by task type. A filter object consists of a filter &lt;code&gt;Name&lt;/code&gt;, and one or more &lt;code&gt;Values&lt;/code&gt; for the filter.
     * @alias module:model/DataRepositoryTaskFilter
     */
    constructor() { 
        
        DataRepositoryTaskFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataRepositoryTaskFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataRepositoryTaskFilter} obj Optional instance to populate.
     * @return {module:model/DataRepositoryTaskFilter} The populated <code>DataRepositoryTaskFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataRepositoryTaskFilter();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], DataRepositoryTaskFilterName);
            }
            if (data.hasOwnProperty('Values')) {
                obj['Values'] = ApiClient.convertToType(data['Values'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataRepositoryTaskFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataRepositoryTaskFilter</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          DataRepositoryTaskFilterName.validateJSON(data['Name']);
        }
        // validate the optional field `Values`
        if (data['Values']) { // data not null
          Array.validateJSON(data['Values']);
        }

        return true;
    }


}



/**
 * @member {module:model/DataRepositoryTaskFilterName} Name
 */
DataRepositoryTaskFilter.prototype['Name'] = undefined;

/**
 * @member {Array} Values
 */
DataRepositoryTaskFilter.prototype['Values'] = undefined;






export default DataRepositoryTaskFilter;

