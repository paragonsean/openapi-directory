/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DescribeSnapshotsResponse model module.
 * @module model/DescribeSnapshotsResponse
 * @version 2018-03-01
 */
class DescribeSnapshotsResponse {
    /**
     * Constructs a new <code>DescribeSnapshotsResponse</code>.
     * @alias module:model/DescribeSnapshotsResponse
     */
    constructor() { 
        
        DescribeSnapshotsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeSnapshotsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeSnapshotsResponse} obj Optional instance to populate.
     * @return {module:model/DescribeSnapshotsResponse} The populated <code>DescribeSnapshotsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeSnapshotsResponse();

            if (data.hasOwnProperty('Snapshots')) {
                obj['Snapshots'] = ApiClient.convertToType(data['Snapshots'], Array);
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeSnapshotsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeSnapshotsResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Snapshots`
        if (data['Snapshots']) { // data not null
          Array.validateJSON(data['Snapshots']);
        }
        // ensure the json data is a string
        if (data['NextToken'] && !(typeof data['NextToken'] === 'string' || data['NextToken'] instanceof String)) {
            throw new Error("Expected the field `NextToken` to be a primitive type in the JSON string but got " + data['NextToken']);
        }

        return true;
    }


}



/**
 * @member {Array} Snapshots
 */
DescribeSnapshotsResponse.prototype['Snapshots'] = undefined;

/**
 * (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
 * @member {String} NextToken
 */
DescribeSnapshotsResponse.prototype['NextToken'] = undefined;






export default DescribeSnapshotsResponse;

