/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateFileCacheLustreConfigurationMetadataConfiguration from './CreateFileCacheLustreConfigurationMetadataConfiguration';
import FileCacheLustreConfiguration from './FileCacheLustreConfiguration';
import FileCacheLustreConfigurationLogConfiguration from './FileCacheLustreConfigurationLogConfiguration';
import FileCacheLustreDeploymentType from './FileCacheLustreDeploymentType';

/**
 * The FileCacheCreatingLustreConfiguration model module.
 * @module model/FileCacheCreatingLustreConfiguration
 * @version 2018-03-01
 */
class FileCacheCreatingLustreConfiguration {
    /**
     * Constructs a new <code>FileCacheCreatingLustreConfiguration</code>.
     * @alias module:model/FileCacheCreatingLustreConfiguration
     * @implements module:model/FileCacheLustreConfiguration
     */
    constructor() { 
        FileCacheLustreConfiguration.initialize(this);
        FileCacheCreatingLustreConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileCacheCreatingLustreConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileCacheCreatingLustreConfiguration} obj Optional instance to populate.
     * @return {module:model/FileCacheCreatingLustreConfiguration} The populated <code>FileCacheCreatingLustreConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileCacheCreatingLustreConfiguration();
            FileCacheLustreConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('PerUnitStorageThroughput')) {
                obj['PerUnitStorageThroughput'] = ApiClient.convertToType(data['PerUnitStorageThroughput'], 'Number');
            }
            if (data.hasOwnProperty('DeploymentType')) {
                obj['DeploymentType'] = ApiClient.convertToType(data['DeploymentType'], FileCacheLustreDeploymentType);
            }
            if (data.hasOwnProperty('MountName')) {
                obj['MountName'] = ApiClient.convertToType(data['MountName'], 'String');
            }
            if (data.hasOwnProperty('WeeklyMaintenanceStartTime')) {
                obj['WeeklyMaintenanceStartTime'] = ApiClient.convertToType(data['WeeklyMaintenanceStartTime'], 'String');
            }
            if (data.hasOwnProperty('MetadataConfiguration')) {
                obj['MetadataConfiguration'] = CreateFileCacheLustreConfigurationMetadataConfiguration.constructFromObject(data['MetadataConfiguration']);
            }
            if (data.hasOwnProperty('LogConfiguration')) {
                obj['LogConfiguration'] = FileCacheLustreConfigurationLogConfiguration.constructFromObject(data['LogConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileCacheCreatingLustreConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileCacheCreatingLustreConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `PerUnitStorageThroughput`
        if (data['PerUnitStorageThroughput']) { // data not null
          Number.validateJSON(data['PerUnitStorageThroughput']);
        }
        // validate the optional field `DeploymentType`
        if (data['DeploymentType']) { // data not null
          FileCacheLustreDeploymentType.validateJSON(data['DeploymentType']);
        }
        // validate the optional field `MountName`
        if (data['MountName']) { // data not null
          String.validateJSON(data['MountName']);
        }
        // ensure the json data is a string
        if (data['WeeklyMaintenanceStartTime'] && !(typeof data['WeeklyMaintenanceStartTime'] === 'string' || data['WeeklyMaintenanceStartTime'] instanceof String)) {
            throw new Error("Expected the field `WeeklyMaintenanceStartTime` to be a primitive type in the JSON string but got " + data['WeeklyMaintenanceStartTime']);
        }
        // validate the optional field `MetadataConfiguration`
        if (data['MetadataConfiguration']) { // data not null
          CreateFileCacheLustreConfigurationMetadataConfiguration.validateJSON(data['MetadataConfiguration']);
        }
        // validate the optional field `LogConfiguration`
        if (data['LogConfiguration']) { // data not null
          FileCacheLustreConfigurationLogConfiguration.validateJSON(data['LogConfiguration']);
        }

        return true;
    }


}



/**
 * @member {Number} PerUnitStorageThroughput
 */
FileCacheCreatingLustreConfiguration.prototype['PerUnitStorageThroughput'] = undefined;

/**
 * @member {module:model/FileCacheLustreDeploymentType} DeploymentType
 */
FileCacheCreatingLustreConfiguration.prototype['DeploymentType'] = undefined;

/**
 * @member {String} MountName
 */
FileCacheCreatingLustreConfiguration.prototype['MountName'] = undefined;

/**
 * <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>
 * @member {String} WeeklyMaintenanceStartTime
 */
FileCacheCreatingLustreConfiguration.prototype['WeeklyMaintenanceStartTime'] = undefined;

/**
 * @member {module:model/CreateFileCacheLustreConfigurationMetadataConfiguration} MetadataConfiguration
 */
FileCacheCreatingLustreConfiguration.prototype['MetadataConfiguration'] = undefined;

/**
 * @member {module:model/FileCacheLustreConfigurationLogConfiguration} LogConfiguration
 */
FileCacheCreatingLustreConfiguration.prototype['LogConfiguration'] = undefined;


// Implement FileCacheLustreConfiguration interface:
/**
 * @member {Number} PerUnitStorageThroughput
 */
FileCacheLustreConfiguration.prototype['PerUnitStorageThroughput'] = undefined;
/**
 * @member {module:model/FileCacheLustreDeploymentType} DeploymentType
 */
FileCacheLustreConfiguration.prototype['DeploymentType'] = undefined;
/**
 * @member {String} MountName
 */
FileCacheLustreConfiguration.prototype['MountName'] = undefined;
/**
 * <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>
 * @member {String} WeeklyMaintenanceStartTime
 */
FileCacheLustreConfiguration.prototype['WeeklyMaintenanceStartTime'] = undefined;
/**
 * @member {module:model/CreateFileCacheLustreConfigurationMetadataConfiguration} MetadataConfiguration
 */
FileCacheLustreConfiguration.prototype['MetadataConfiguration'] = undefined;
/**
 * @member {module:model/FileCacheLustreConfigurationLogConfiguration} LogConfiguration
 */
FileCacheLustreConfiguration.prototype['LogConfiguration'] = undefined;




export default FileCacheCreatingLustreConfiguration;

