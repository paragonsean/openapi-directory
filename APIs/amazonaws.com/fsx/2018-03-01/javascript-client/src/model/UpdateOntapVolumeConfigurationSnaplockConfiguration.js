/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateSnaplockConfigurationAutocommitPeriod from './CreateSnaplockConfigurationAutocommitPeriod';
import CreateSnaplockConfigurationRetentionPeriod from './CreateSnaplockConfigurationRetentionPeriod';
import PrivilegedDelete from './PrivilegedDelete';
import UpdateSnaplockConfiguration from './UpdateSnaplockConfiguration';

/**
 * The UpdateOntapVolumeConfigurationSnaplockConfiguration model module.
 * @module model/UpdateOntapVolumeConfigurationSnaplockConfiguration
 * @version 2018-03-01
 */
class UpdateOntapVolumeConfigurationSnaplockConfiguration {
    /**
     * Constructs a new <code>UpdateOntapVolumeConfigurationSnaplockConfiguration</code>.
     * @alias module:model/UpdateOntapVolumeConfigurationSnaplockConfiguration
     * @implements module:model/UpdateSnaplockConfiguration
     */
    constructor() { 
        UpdateSnaplockConfiguration.initialize(this);
        UpdateOntapVolumeConfigurationSnaplockConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateOntapVolumeConfigurationSnaplockConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateOntapVolumeConfigurationSnaplockConfiguration} obj Optional instance to populate.
     * @return {module:model/UpdateOntapVolumeConfigurationSnaplockConfiguration} The populated <code>UpdateOntapVolumeConfigurationSnaplockConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateOntapVolumeConfigurationSnaplockConfiguration();
            UpdateSnaplockConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('AuditLogVolume')) {
                obj['AuditLogVolume'] = ApiClient.convertToType(data['AuditLogVolume'], 'Boolean');
            }
            if (data.hasOwnProperty('AutocommitPeriod')) {
                obj['AutocommitPeriod'] = CreateSnaplockConfigurationAutocommitPeriod.constructFromObject(data['AutocommitPeriod']);
            }
            if (data.hasOwnProperty('PrivilegedDelete')) {
                obj['PrivilegedDelete'] = ApiClient.convertToType(data['PrivilegedDelete'], PrivilegedDelete);
            }
            if (data.hasOwnProperty('RetentionPeriod')) {
                obj['RetentionPeriod'] = CreateSnaplockConfigurationRetentionPeriod.constructFromObject(data['RetentionPeriod']);
            }
            if (data.hasOwnProperty('VolumeAppendModeEnabled')) {
                obj['VolumeAppendModeEnabled'] = ApiClient.convertToType(data['VolumeAppendModeEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateOntapVolumeConfigurationSnaplockConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateOntapVolumeConfigurationSnaplockConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AuditLogVolume`
        if (data['AuditLogVolume']) { // data not null
          Boolean.validateJSON(data['AuditLogVolume']);
        }
        // validate the optional field `AutocommitPeriod`
        if (data['AutocommitPeriod']) { // data not null
          CreateSnaplockConfigurationAutocommitPeriod.validateJSON(data['AutocommitPeriod']);
        }
        // validate the optional field `PrivilegedDelete`
        if (data['PrivilegedDelete']) { // data not null
          PrivilegedDelete.validateJSON(data['PrivilegedDelete']);
        }
        // validate the optional field `RetentionPeriod`
        if (data['RetentionPeriod']) { // data not null
          CreateSnaplockConfigurationRetentionPeriod.validateJSON(data['RetentionPeriod']);
        }
        // validate the optional field `VolumeAppendModeEnabled`
        if (data['VolumeAppendModeEnabled']) { // data not null
          Boolean.validateJSON(data['VolumeAppendModeEnabled']);
        }

        return true;
    }


}



/**
 * @member {Boolean} AuditLogVolume
 */
UpdateOntapVolumeConfigurationSnaplockConfiguration.prototype['AuditLogVolume'] = undefined;

/**
 * @member {module:model/CreateSnaplockConfigurationAutocommitPeriod} AutocommitPeriod
 */
UpdateOntapVolumeConfigurationSnaplockConfiguration.prototype['AutocommitPeriod'] = undefined;

/**
 * @member {module:model/PrivilegedDelete} PrivilegedDelete
 */
UpdateOntapVolumeConfigurationSnaplockConfiguration.prototype['PrivilegedDelete'] = undefined;

/**
 * @member {module:model/CreateSnaplockConfigurationRetentionPeriod} RetentionPeriod
 */
UpdateOntapVolumeConfigurationSnaplockConfiguration.prototype['RetentionPeriod'] = undefined;

/**
 * @member {Boolean} VolumeAppendModeEnabled
 */
UpdateOntapVolumeConfigurationSnaplockConfiguration.prototype['VolumeAppendModeEnabled'] = undefined;


// Implement UpdateSnaplockConfiguration interface:
/**
 * @member {Boolean} AuditLogVolume
 */
UpdateSnaplockConfiguration.prototype['AuditLogVolume'] = undefined;
/**
 * @member {module:model/CreateSnaplockConfigurationAutocommitPeriod} AutocommitPeriod
 */
UpdateSnaplockConfiguration.prototype['AutocommitPeriod'] = undefined;
/**
 * @member {module:model/PrivilegedDelete} PrivilegedDelete
 */
UpdateSnaplockConfiguration.prototype['PrivilegedDelete'] = undefined;
/**
 * @member {module:model/CreateSnaplockConfigurationRetentionPeriod} RetentionPeriod
 */
UpdateSnaplockConfiguration.prototype['RetentionPeriod'] = undefined;
/**
 * @member {Boolean} VolumeAppendModeEnabled
 */
UpdateSnaplockConfiguration.prototype['VolumeAppendModeEnabled'] = undefined;




export default UpdateOntapVolumeConfigurationSnaplockConfiguration;

