/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Alias from './Alias';
import SelfManagedActiveDirectoryAttributes from './SelfManagedActiveDirectoryAttributes';
import WindowsDeploymentType from './WindowsDeploymentType';
import WindowsFileSystemConfiguration from './WindowsFileSystemConfiguration';
import WindowsFileSystemConfigurationAuditLogConfiguration from './WindowsFileSystemConfigurationAuditLogConfiguration';

/**
 * The FileSystemWindowsConfiguration model module.
 * @module model/FileSystemWindowsConfiguration
 * @version 2018-03-01
 */
class FileSystemWindowsConfiguration {
    /**
     * Constructs a new <code>FileSystemWindowsConfiguration</code>.
     * @alias module:model/FileSystemWindowsConfiguration
     * @implements module:model/WindowsFileSystemConfiguration
     */
    constructor() { 
        WindowsFileSystemConfiguration.initialize(this);
        FileSystemWindowsConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileSystemWindowsConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileSystemWindowsConfiguration} obj Optional instance to populate.
     * @return {module:model/FileSystemWindowsConfiguration} The populated <code>FileSystemWindowsConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileSystemWindowsConfiguration();
            WindowsFileSystemConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('ActiveDirectoryId')) {
                obj['ActiveDirectoryId'] = ApiClient.convertToType(data['ActiveDirectoryId'], 'String');
            }
            if (data.hasOwnProperty('SelfManagedActiveDirectoryConfiguration')) {
                obj['SelfManagedActiveDirectoryConfiguration'] = SelfManagedActiveDirectoryAttributes.constructFromObject(data['SelfManagedActiveDirectoryConfiguration']);
            }
            if (data.hasOwnProperty('DeploymentType')) {
                obj['DeploymentType'] = ApiClient.convertToType(data['DeploymentType'], WindowsDeploymentType);
            }
            if (data.hasOwnProperty('RemoteAdministrationEndpoint')) {
                obj['RemoteAdministrationEndpoint'] = ApiClient.convertToType(data['RemoteAdministrationEndpoint'], 'String');
            }
            if (data.hasOwnProperty('PreferredSubnetId')) {
                obj['PreferredSubnetId'] = ApiClient.convertToType(data['PreferredSubnetId'], 'String');
            }
            if (data.hasOwnProperty('PreferredFileServerIp')) {
                obj['PreferredFileServerIp'] = ApiClient.convertToType(data['PreferredFileServerIp'], 'String');
            }
            if (data.hasOwnProperty('ThroughputCapacity')) {
                obj['ThroughputCapacity'] = ApiClient.convertToType(data['ThroughputCapacity'], 'Number');
            }
            if (data.hasOwnProperty('MaintenanceOperationsInProgress')) {
                obj['MaintenanceOperationsInProgress'] = ApiClient.convertToType(data['MaintenanceOperationsInProgress'], Array);
            }
            if (data.hasOwnProperty('WeeklyMaintenanceStartTime')) {
                obj['WeeklyMaintenanceStartTime'] = ApiClient.convertToType(data['WeeklyMaintenanceStartTime'], 'String');
            }
            if (data.hasOwnProperty('DailyAutomaticBackupStartTime')) {
                obj['DailyAutomaticBackupStartTime'] = ApiClient.convertToType(data['DailyAutomaticBackupStartTime'], 'String');
            }
            if (data.hasOwnProperty('AutomaticBackupRetentionDays')) {
                obj['AutomaticBackupRetentionDays'] = ApiClient.convertToType(data['AutomaticBackupRetentionDays'], 'Number');
            }
            if (data.hasOwnProperty('CopyTagsToBackups')) {
                obj['CopyTagsToBackups'] = ApiClient.convertToType(data['CopyTagsToBackups'], 'Boolean');
            }
            if (data.hasOwnProperty('Aliases')) {
                obj['Aliases'] = ApiClient.convertToType(data['Aliases'], [Alias]);
            }
            if (data.hasOwnProperty('AuditLogConfiguration')) {
                obj['AuditLogConfiguration'] = WindowsFileSystemConfigurationAuditLogConfiguration.constructFromObject(data['AuditLogConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileSystemWindowsConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileSystemWindowsConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ActiveDirectoryId`
        if (data['ActiveDirectoryId']) { // data not null
          String.validateJSON(data['ActiveDirectoryId']);
        }
        // validate the optional field `SelfManagedActiveDirectoryConfiguration`
        if (data['SelfManagedActiveDirectoryConfiguration']) { // data not null
          SelfManagedActiveDirectoryAttributes.validateJSON(data['SelfManagedActiveDirectoryConfiguration']);
        }
        // validate the optional field `DeploymentType`
        if (data['DeploymentType']) { // data not null
          WindowsDeploymentType.validateJSON(data['DeploymentType']);
        }
        // validate the optional field `RemoteAdministrationEndpoint`
        if (data['RemoteAdministrationEndpoint']) { // data not null
          String.validateJSON(data['RemoteAdministrationEndpoint']);
        }
        // validate the optional field `PreferredSubnetId`
        if (data['PreferredSubnetId']) { // data not null
          String.validateJSON(data['PreferredSubnetId']);
        }
        // validate the optional field `PreferredFileServerIp`
        if (data['PreferredFileServerIp']) { // data not null
          String.validateJSON(data['PreferredFileServerIp']);
        }
        // validate the optional field `ThroughputCapacity`
        if (data['ThroughputCapacity']) { // data not null
          Number.validateJSON(data['ThroughputCapacity']);
        }
        // validate the optional field `MaintenanceOperationsInProgress`
        if (data['MaintenanceOperationsInProgress']) { // data not null
          Array.validateJSON(data['MaintenanceOperationsInProgress']);
        }
        // validate the optional field `WeeklyMaintenanceStartTime`
        if (data['WeeklyMaintenanceStartTime']) { // data not null
          String.validateJSON(data['WeeklyMaintenanceStartTime']);
        }
        // validate the optional field `DailyAutomaticBackupStartTime`
        if (data['DailyAutomaticBackupStartTime']) { // data not null
          String.validateJSON(data['DailyAutomaticBackupStartTime']);
        }
        // validate the optional field `AutomaticBackupRetentionDays`
        if (data['AutomaticBackupRetentionDays']) { // data not null
          Number.validateJSON(data['AutomaticBackupRetentionDays']);
        }
        // validate the optional field `CopyTagsToBackups`
        if (data['CopyTagsToBackups']) { // data not null
          Boolean.validateJSON(data['CopyTagsToBackups']);
        }
        if (data['Aliases']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Aliases'])) {
                throw new Error("Expected the field `Aliases` to be an array in the JSON data but got " + data['Aliases']);
            }
            // validate the optional field `Aliases` (array)
            for (const item of data['Aliases']) {
                Alias.validateJSON(item);
            };
        }
        // validate the optional field `AuditLogConfiguration`
        if (data['AuditLogConfiguration']) { // data not null
          WindowsFileSystemConfigurationAuditLogConfiguration.validateJSON(data['AuditLogConfiguration']);
        }

        return true;
    }


}



/**
 * @member {String} ActiveDirectoryId
 */
FileSystemWindowsConfiguration.prototype['ActiveDirectoryId'] = undefined;

/**
 * @member {module:model/SelfManagedActiveDirectoryAttributes} SelfManagedActiveDirectoryConfiguration
 */
FileSystemWindowsConfiguration.prototype['SelfManagedActiveDirectoryConfiguration'] = undefined;

/**
 * @member {module:model/WindowsDeploymentType} DeploymentType
 */
FileSystemWindowsConfiguration.prototype['DeploymentType'] = undefined;

/**
 * @member {String} RemoteAdministrationEndpoint
 */
FileSystemWindowsConfiguration.prototype['RemoteAdministrationEndpoint'] = undefined;

/**
 * @member {String} PreferredSubnetId
 */
FileSystemWindowsConfiguration.prototype['PreferredSubnetId'] = undefined;

/**
 * @member {String} PreferredFileServerIp
 */
FileSystemWindowsConfiguration.prototype['PreferredFileServerIp'] = undefined;

/**
 * @member {Number} ThroughputCapacity
 */
FileSystemWindowsConfiguration.prototype['ThroughputCapacity'] = undefined;

/**
 * @member {Array} MaintenanceOperationsInProgress
 */
FileSystemWindowsConfiguration.prototype['MaintenanceOperationsInProgress'] = undefined;

/**
 * @member {String} WeeklyMaintenanceStartTime
 */
FileSystemWindowsConfiguration.prototype['WeeklyMaintenanceStartTime'] = undefined;

/**
 * @member {String} DailyAutomaticBackupStartTime
 */
FileSystemWindowsConfiguration.prototype['DailyAutomaticBackupStartTime'] = undefined;

/**
 * @member {Number} AutomaticBackupRetentionDays
 */
FileSystemWindowsConfiguration.prototype['AutomaticBackupRetentionDays'] = undefined;

/**
 * @member {Boolean} CopyTagsToBackups
 */
FileSystemWindowsConfiguration.prototype['CopyTagsToBackups'] = undefined;

/**
 * An array of one or more DNS aliases that are currently associated with the Amazon FSx file system. Aliases allow you to use existing DNS names to access the data in your Amazon FSx file system. You can associate up to 50 aliases with a file system at any time. You can associate additional DNS aliases after you create the file system using the AssociateFileSystemAliases operation. You can remove DNS aliases from the file system after it is created using the DisassociateFileSystemAliases operation. You only need to specify the alias name in the request payload. For more information, see <a href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-dns-aliases.html\">DNS aliases</a>.
 * @member {Array.<module:model/Alias>} Aliases
 */
FileSystemWindowsConfiguration.prototype['Aliases'] = undefined;

/**
 * @member {module:model/WindowsFileSystemConfigurationAuditLogConfiguration} AuditLogConfiguration
 */
FileSystemWindowsConfiguration.prototype['AuditLogConfiguration'] = undefined;


// Implement WindowsFileSystemConfiguration interface:
/**
 * @member {String} ActiveDirectoryId
 */
WindowsFileSystemConfiguration.prototype['ActiveDirectoryId'] = undefined;
/**
 * @member {module:model/SelfManagedActiveDirectoryAttributes} SelfManagedActiveDirectoryConfiguration
 */
WindowsFileSystemConfiguration.prototype['SelfManagedActiveDirectoryConfiguration'] = undefined;
/**
 * @member {module:model/WindowsDeploymentType} DeploymentType
 */
WindowsFileSystemConfiguration.prototype['DeploymentType'] = undefined;
/**
 * @member {String} RemoteAdministrationEndpoint
 */
WindowsFileSystemConfiguration.prototype['RemoteAdministrationEndpoint'] = undefined;
/**
 * @member {String} PreferredSubnetId
 */
WindowsFileSystemConfiguration.prototype['PreferredSubnetId'] = undefined;
/**
 * @member {String} PreferredFileServerIp
 */
WindowsFileSystemConfiguration.prototype['PreferredFileServerIp'] = undefined;
/**
 * @member {Number} ThroughputCapacity
 */
WindowsFileSystemConfiguration.prototype['ThroughputCapacity'] = undefined;
/**
 * @member {Array} MaintenanceOperationsInProgress
 */
WindowsFileSystemConfiguration.prototype['MaintenanceOperationsInProgress'] = undefined;
/**
 * @member {String} WeeklyMaintenanceStartTime
 */
WindowsFileSystemConfiguration.prototype['WeeklyMaintenanceStartTime'] = undefined;
/**
 * @member {String} DailyAutomaticBackupStartTime
 */
WindowsFileSystemConfiguration.prototype['DailyAutomaticBackupStartTime'] = undefined;
/**
 * @member {Number} AutomaticBackupRetentionDays
 */
WindowsFileSystemConfiguration.prototype['AutomaticBackupRetentionDays'] = undefined;
/**
 * @member {Boolean} CopyTagsToBackups
 */
WindowsFileSystemConfiguration.prototype['CopyTagsToBackups'] = undefined;
/**
 * An array of one or more DNS aliases that are currently associated with the Amazon FSx file system. Aliases allow you to use existing DNS names to access the data in your Amazon FSx file system. You can associate up to 50 aliases with a file system at any time. You can associate additional DNS aliases after you create the file system using the AssociateFileSystemAliases operation. You can remove DNS aliases from the file system after it is created using the DisassociateFileSystemAliases operation. You only need to specify the alias name in the request payload. For more information, see <a href=\"https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-dns-aliases.html\">DNS aliases</a>.
 * @member {Array.<module:model/Alias>} Aliases
 */
WindowsFileSystemConfiguration.prototype['Aliases'] = undefined;
/**
 * @member {module:model/WindowsFileSystemConfigurationAuditLogConfiguration} AuditLogConfiguration
 */
WindowsFileSystemConfiguration.prototype['AuditLogConfiguration'] = undefined;




export default FileSystemWindowsConfiguration;

