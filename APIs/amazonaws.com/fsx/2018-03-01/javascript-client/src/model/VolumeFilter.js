/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VolumeFilterName from './VolumeFilterName';

/**
 * The VolumeFilter model module.
 * @module model/VolumeFilter
 * @version 2018-03-01
 */
class VolumeFilter {
    /**
     * Constructs a new <code>VolumeFilter</code>.
     * A filter used to restrict the results of describe calls for Amazon FSx for NetApp ONTAP or Amazon FSx for OpenZFS volumes. You can use multiple filters to return results that meet all applied filter requirements.
     * @alias module:model/VolumeFilter
     */
    constructor() { 
        
        VolumeFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VolumeFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VolumeFilter} obj Optional instance to populate.
     * @return {module:model/VolumeFilter} The populated <code>VolumeFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VolumeFilter();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], VolumeFilterName);
            }
            if (data.hasOwnProperty('Values')) {
                obj['Values'] = ApiClient.convertToType(data['Values'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VolumeFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VolumeFilter</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          VolumeFilterName.validateJSON(data['Name']);
        }
        // validate the optional field `Values`
        if (data['Values']) { // data not null
          Array.validateJSON(data['Values']);
        }

        return true;
    }


}



/**
 * @member {module:model/VolumeFilterName} Name
 */
VolumeFilter.prototype['Name'] = undefined;

/**
 * @member {Array} Values
 */
VolumeFilter.prototype['Values'] = undefined;






export default VolumeFilter;

