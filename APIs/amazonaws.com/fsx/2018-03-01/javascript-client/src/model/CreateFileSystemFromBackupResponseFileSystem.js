/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileSystem from './FileSystem';
import FileSystemFailureDetails from './FileSystemFailureDetails';
import FileSystemLifecycle from './FileSystemLifecycle';
import FileSystemOntapConfiguration from './FileSystemOntapConfiguration';
import FileSystemOpenZFSConfiguration from './FileSystemOpenZFSConfiguration';
import FileSystemType from './FileSystemType';
import FileSystemWindowsConfiguration from './FileSystemWindowsConfiguration';
import LustreFileSystemConfiguration from './LustreFileSystemConfiguration';
import StorageType from './StorageType';

/**
 * The CreateFileSystemFromBackupResponseFileSystem model module.
 * @module model/CreateFileSystemFromBackupResponseFileSystem
 * @version 2018-03-01
 */
class CreateFileSystemFromBackupResponseFileSystem {
    /**
     * Constructs a new <code>CreateFileSystemFromBackupResponseFileSystem</code>.
     * @alias module:model/CreateFileSystemFromBackupResponseFileSystem
     * @implements module:model/FileSystem
     */
    constructor() { 
        FileSystem.initialize(this);
        CreateFileSystemFromBackupResponseFileSystem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateFileSystemFromBackupResponseFileSystem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFileSystemFromBackupResponseFileSystem} obj Optional instance to populate.
     * @return {module:model/CreateFileSystemFromBackupResponseFileSystem} The populated <code>CreateFileSystemFromBackupResponseFileSystem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFileSystemFromBackupResponseFileSystem();
            FileSystem.constructFromObject(data, obj);

            if (data.hasOwnProperty('OwnerId')) {
                obj['OwnerId'] = ApiClient.convertToType(data['OwnerId'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('FileSystemId')) {
                obj['FileSystemId'] = ApiClient.convertToType(data['FileSystemId'], 'String');
            }
            if (data.hasOwnProperty('FileSystemType')) {
                obj['FileSystemType'] = ApiClient.convertToType(data['FileSystemType'], FileSystemType);
            }
            if (data.hasOwnProperty('Lifecycle')) {
                obj['Lifecycle'] = ApiClient.convertToType(data['Lifecycle'], FileSystemLifecycle);
            }
            if (data.hasOwnProperty('FailureDetails')) {
                obj['FailureDetails'] = FileSystemFailureDetails.constructFromObject(data['FailureDetails']);
            }
            if (data.hasOwnProperty('StorageCapacity')) {
                obj['StorageCapacity'] = ApiClient.convertToType(data['StorageCapacity'], 'Number');
            }
            if (data.hasOwnProperty('StorageType')) {
                obj['StorageType'] = ApiClient.convertToType(data['StorageType'], StorageType);
            }
            if (data.hasOwnProperty('VpcId')) {
                obj['VpcId'] = ApiClient.convertToType(data['VpcId'], 'String');
            }
            if (data.hasOwnProperty('SubnetIds')) {
                obj['SubnetIds'] = ApiClient.convertToType(data['SubnetIds'], Array);
            }
            if (data.hasOwnProperty('NetworkInterfaceIds')) {
                obj['NetworkInterfaceIds'] = ApiClient.convertToType(data['NetworkInterfaceIds'], Array);
            }
            if (data.hasOwnProperty('DNSName')) {
                obj['DNSName'] = ApiClient.convertToType(data['DNSName'], 'String');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('ResourceARN')) {
                obj['ResourceARN'] = ApiClient.convertToType(data['ResourceARN'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('WindowsConfiguration')) {
                obj['WindowsConfiguration'] = FileSystemWindowsConfiguration.constructFromObject(data['WindowsConfiguration']);
            }
            if (data.hasOwnProperty('LustreConfiguration')) {
                obj['LustreConfiguration'] = LustreFileSystemConfiguration.constructFromObject(data['LustreConfiguration']);
            }
            if (data.hasOwnProperty('AdministrativeActions')) {
                obj['AdministrativeActions'] = ApiClient.convertToType(data['AdministrativeActions'], Array);
            }
            if (data.hasOwnProperty('OntapConfiguration')) {
                obj['OntapConfiguration'] = FileSystemOntapConfiguration.constructFromObject(data['OntapConfiguration']);
            }
            if (data.hasOwnProperty('FileSystemTypeVersion')) {
                obj['FileSystemTypeVersion'] = ApiClient.convertToType(data['FileSystemTypeVersion'], 'String');
            }
            if (data.hasOwnProperty('OpenZFSConfiguration')) {
                obj['OpenZFSConfiguration'] = FileSystemOpenZFSConfiguration.constructFromObject(data['OpenZFSConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFileSystemFromBackupResponseFileSystem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFileSystemFromBackupResponseFileSystem</code>.
     */
    static validateJSON(data) {
        // validate the optional field `OwnerId`
        if (data['OwnerId']) { // data not null
          String.validateJSON(data['OwnerId']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `FileSystemId`
        if (data['FileSystemId']) { // data not null
          String.validateJSON(data['FileSystemId']);
        }
        // validate the optional field `FileSystemType`
        if (data['FileSystemType']) { // data not null
          FileSystemType.validateJSON(data['FileSystemType']);
        }
        // validate the optional field `Lifecycle`
        if (data['Lifecycle']) { // data not null
          FileSystemLifecycle.validateJSON(data['Lifecycle']);
        }
        // validate the optional field `FailureDetails`
        if (data['FailureDetails']) { // data not null
          FileSystemFailureDetails.validateJSON(data['FailureDetails']);
        }
        // validate the optional field `StorageCapacity`
        if (data['StorageCapacity']) { // data not null
          Number.validateJSON(data['StorageCapacity']);
        }
        // validate the optional field `StorageType`
        if (data['StorageType']) { // data not null
          StorageType.validateJSON(data['StorageType']);
        }
        // validate the optional field `VpcId`
        if (data['VpcId']) { // data not null
          String.validateJSON(data['VpcId']);
        }
        // validate the optional field `SubnetIds`
        if (data['SubnetIds']) { // data not null
          Array.validateJSON(data['SubnetIds']);
        }
        // validate the optional field `NetworkInterfaceIds`
        if (data['NetworkInterfaceIds']) { // data not null
          Array.validateJSON(data['NetworkInterfaceIds']);
        }
        // validate the optional field `DNSName`
        if (data['DNSName']) { // data not null
          String.validateJSON(data['DNSName']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }
        // validate the optional field `ResourceARN`
        if (data['ResourceARN']) { // data not null
          String.validateJSON(data['ResourceARN']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `WindowsConfiguration`
        if (data['WindowsConfiguration']) { // data not null
          FileSystemWindowsConfiguration.validateJSON(data['WindowsConfiguration']);
        }
        // validate the optional field `LustreConfiguration`
        if (data['LustreConfiguration']) { // data not null
          LustreFileSystemConfiguration.validateJSON(data['LustreConfiguration']);
        }
        // validate the optional field `AdministrativeActions`
        if (data['AdministrativeActions']) { // data not null
          Array.validateJSON(data['AdministrativeActions']);
        }
        // validate the optional field `OntapConfiguration`
        if (data['OntapConfiguration']) { // data not null
          FileSystemOntapConfiguration.validateJSON(data['OntapConfiguration']);
        }
        // validate the optional field `FileSystemTypeVersion`
        if (data['FileSystemTypeVersion']) { // data not null
          String.validateJSON(data['FileSystemTypeVersion']);
        }
        // validate the optional field `OpenZFSConfiguration`
        if (data['OpenZFSConfiguration']) { // data not null
          FileSystemOpenZFSConfiguration.validateJSON(data['OpenZFSConfiguration']);
        }

        return true;
    }


}



/**
 * @member {String} OwnerId
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['OwnerId'] = undefined;

/**
 * @member {Date} CreationTime
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['CreationTime'] = undefined;

/**
 * @member {String} FileSystemId
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['FileSystemId'] = undefined;

/**
 * @member {module:model/FileSystemType} FileSystemType
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['FileSystemType'] = undefined;

/**
 * @member {module:model/FileSystemLifecycle} Lifecycle
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['Lifecycle'] = undefined;

/**
 * @member {module:model/FileSystemFailureDetails} FailureDetails
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['FailureDetails'] = undefined;

/**
 * @member {Number} StorageCapacity
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['StorageCapacity'] = undefined;

/**
 * @member {module:model/StorageType} StorageType
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['StorageType'] = undefined;

/**
 * @member {String} VpcId
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['VpcId'] = undefined;

/**
 * @member {Array} SubnetIds
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['SubnetIds'] = undefined;

/**
 * @member {Array} NetworkInterfaceIds
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['NetworkInterfaceIds'] = undefined;

/**
 * @member {String} DNSName
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['DNSName'] = undefined;

/**
 * @member {String} KmsKeyId
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['KmsKeyId'] = undefined;

/**
 * @member {String} ResourceARN
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['ResourceARN'] = undefined;

/**
 * @member {Array} Tags
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['Tags'] = undefined;

/**
 * @member {module:model/FileSystemWindowsConfiguration} WindowsConfiguration
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['WindowsConfiguration'] = undefined;

/**
 * @member {module:model/LustreFileSystemConfiguration} LustreConfiguration
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['LustreConfiguration'] = undefined;

/**
 * @member {Array} AdministrativeActions
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['AdministrativeActions'] = undefined;

/**
 * @member {module:model/FileSystemOntapConfiguration} OntapConfiguration
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['OntapConfiguration'] = undefined;

/**
 * @member {String} FileSystemTypeVersion
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['FileSystemTypeVersion'] = undefined;

/**
 * @member {module:model/FileSystemOpenZFSConfiguration} OpenZFSConfiguration
 */
CreateFileSystemFromBackupResponseFileSystem.prototype['OpenZFSConfiguration'] = undefined;


// Implement FileSystem interface:
/**
 * @member {String} OwnerId
 */
FileSystem.prototype['OwnerId'] = undefined;
/**
 * @member {Date} CreationTime
 */
FileSystem.prototype['CreationTime'] = undefined;
/**
 * @member {String} FileSystemId
 */
FileSystem.prototype['FileSystemId'] = undefined;
/**
 * @member {module:model/FileSystemType} FileSystemType
 */
FileSystem.prototype['FileSystemType'] = undefined;
/**
 * @member {module:model/FileSystemLifecycle} Lifecycle
 */
FileSystem.prototype['Lifecycle'] = undefined;
/**
 * @member {module:model/FileSystemFailureDetails} FailureDetails
 */
FileSystem.prototype['FailureDetails'] = undefined;
/**
 * @member {Number} StorageCapacity
 */
FileSystem.prototype['StorageCapacity'] = undefined;
/**
 * @member {module:model/StorageType} StorageType
 */
FileSystem.prototype['StorageType'] = undefined;
/**
 * @member {String} VpcId
 */
FileSystem.prototype['VpcId'] = undefined;
/**
 * @member {Array} SubnetIds
 */
FileSystem.prototype['SubnetIds'] = undefined;
/**
 * @member {Array} NetworkInterfaceIds
 */
FileSystem.prototype['NetworkInterfaceIds'] = undefined;
/**
 * @member {String} DNSName
 */
FileSystem.prototype['DNSName'] = undefined;
/**
 * @member {String} KmsKeyId
 */
FileSystem.prototype['KmsKeyId'] = undefined;
/**
 * @member {String} ResourceARN
 */
FileSystem.prototype['ResourceARN'] = undefined;
/**
 * @member {Array} Tags
 */
FileSystem.prototype['Tags'] = undefined;
/**
 * @member {module:model/FileSystemWindowsConfiguration} WindowsConfiguration
 */
FileSystem.prototype['WindowsConfiguration'] = undefined;
/**
 * @member {module:model/LustreFileSystemConfiguration} LustreConfiguration
 */
FileSystem.prototype['LustreConfiguration'] = undefined;
/**
 * @member {Array} AdministrativeActions
 */
FileSystem.prototype['AdministrativeActions'] = undefined;
/**
 * @member {module:model/FileSystemOntapConfiguration} OntapConfiguration
 */
FileSystem.prototype['OntapConfiguration'] = undefined;
/**
 * @member {String} FileSystemTypeVersion
 */
FileSystem.prototype['FileSystemTypeVersion'] = undefined;
/**
 * @member {module:model/FileSystemOpenZFSConfiguration} OpenZFSConfiguration
 */
FileSystem.prototype['OpenZFSConfiguration'] = undefined;




export default CreateFileSystemFromBackupResponseFileSystem;

