/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiskIopsConfiguration from './DiskIopsConfiguration';
import OpenZFSDeploymentType from './OpenZFSDeploymentType';

/**
 * The OpenZFSFileSystemConfiguration model module.
 * @module model/OpenZFSFileSystemConfiguration
 * @version 2018-03-01
 */
class OpenZFSFileSystemConfiguration {
    /**
     * Constructs a new <code>OpenZFSFileSystemConfiguration</code>.
     * The configuration for the Amazon FSx for OpenZFS file system. 
     * @alias module:model/OpenZFSFileSystemConfiguration
     */
    constructor() { 
        
        OpenZFSFileSystemConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OpenZFSFileSystemConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenZFSFileSystemConfiguration} obj Optional instance to populate.
     * @return {module:model/OpenZFSFileSystemConfiguration} The populated <code>OpenZFSFileSystemConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenZFSFileSystemConfiguration();

            if (data.hasOwnProperty('AutomaticBackupRetentionDays')) {
                obj['AutomaticBackupRetentionDays'] = ApiClient.convertToType(data['AutomaticBackupRetentionDays'], 'Number');
            }
            if (data.hasOwnProperty('CopyTagsToBackups')) {
                obj['CopyTagsToBackups'] = ApiClient.convertToType(data['CopyTagsToBackups'], 'Boolean');
            }
            if (data.hasOwnProperty('CopyTagsToVolumes')) {
                obj['CopyTagsToVolumes'] = ApiClient.convertToType(data['CopyTagsToVolumes'], 'Boolean');
            }
            if (data.hasOwnProperty('DailyAutomaticBackupStartTime')) {
                obj['DailyAutomaticBackupStartTime'] = ApiClient.convertToType(data['DailyAutomaticBackupStartTime'], 'String');
            }
            if (data.hasOwnProperty('DeploymentType')) {
                obj['DeploymentType'] = ApiClient.convertToType(data['DeploymentType'], OpenZFSDeploymentType);
            }
            if (data.hasOwnProperty('ThroughputCapacity')) {
                obj['ThroughputCapacity'] = ApiClient.convertToType(data['ThroughputCapacity'], 'Number');
            }
            if (data.hasOwnProperty('WeeklyMaintenanceStartTime')) {
                obj['WeeklyMaintenanceStartTime'] = ApiClient.convertToType(data['WeeklyMaintenanceStartTime'], 'String');
            }
            if (data.hasOwnProperty('DiskIopsConfiguration')) {
                obj['DiskIopsConfiguration'] = DiskIopsConfiguration.constructFromObject(data['DiskIopsConfiguration']);
            }
            if (data.hasOwnProperty('RootVolumeId')) {
                obj['RootVolumeId'] = ApiClient.convertToType(data['RootVolumeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OpenZFSFileSystemConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OpenZFSFileSystemConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CopyTagsToBackups`
        if (data['CopyTagsToBackups']) { // data not null
          Boolean.validateJSON(data['CopyTagsToBackups']);
        }
        // validate the optional field `CopyTagsToVolumes`
        if (data['CopyTagsToVolumes']) { // data not null
          Boolean.validateJSON(data['CopyTagsToVolumes']);
        }
        // ensure the json data is a string
        if (data['DailyAutomaticBackupStartTime'] && !(typeof data['DailyAutomaticBackupStartTime'] === 'string' || data['DailyAutomaticBackupStartTime'] instanceof String)) {
            throw new Error("Expected the field `DailyAutomaticBackupStartTime` to be a primitive type in the JSON string but got " + data['DailyAutomaticBackupStartTime']);
        }
        // validate the optional field `DeploymentType`
        if (data['DeploymentType']) { // data not null
          OpenZFSDeploymentType.validateJSON(data['DeploymentType']);
        }
        // validate the optional field `ThroughputCapacity`
        if (data['ThroughputCapacity']) { // data not null
          Number.validateJSON(data['ThroughputCapacity']);
        }
        // ensure the json data is a string
        if (data['WeeklyMaintenanceStartTime'] && !(typeof data['WeeklyMaintenanceStartTime'] === 'string' || data['WeeklyMaintenanceStartTime'] instanceof String)) {
            throw new Error("Expected the field `WeeklyMaintenanceStartTime` to be a primitive type in the JSON string but got " + data['WeeklyMaintenanceStartTime']);
        }
        // validate the optional field `DiskIopsConfiguration`
        if (data['DiskIopsConfiguration']) { // data not null
          DiskIopsConfiguration.validateJSON(data['DiskIopsConfiguration']);
        }
        // validate the optional field `RootVolumeId`
        if (data['RootVolumeId']) { // data not null
          String.validateJSON(data['RootVolumeId']);
        }

        return true;
    }


}



/**
 * The number of days to retain automatic backups. Setting this property to <code>0</code> disables automatic backups. You can retain automatic backups for a maximum of 90 days. The default is <code>30</code>.
 * @member {Number} AutomaticBackupRetentionDays
 */
OpenZFSFileSystemConfiguration.prototype['AutomaticBackupRetentionDays'] = undefined;

/**
 * @member {Boolean} CopyTagsToBackups
 */
OpenZFSFileSystemConfiguration.prototype['CopyTagsToBackups'] = undefined;

/**
 * @member {Boolean} CopyTagsToVolumes
 */
OpenZFSFileSystemConfiguration.prototype['CopyTagsToVolumes'] = undefined;

/**
 * A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. For example, <code>05:00</code> specifies 5 AM daily. 
 * @member {String} DailyAutomaticBackupStartTime
 */
OpenZFSFileSystemConfiguration.prototype['DailyAutomaticBackupStartTime'] = undefined;

/**
 * @member {module:model/OpenZFSDeploymentType} DeploymentType
 */
OpenZFSFileSystemConfiguration.prototype['DeploymentType'] = undefined;

/**
 * @member {Number} ThroughputCapacity
 */
OpenZFSFileSystemConfiguration.prototype['ThroughputCapacity'] = undefined;

/**
 * <p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>
 * @member {String} WeeklyMaintenanceStartTime
 */
OpenZFSFileSystemConfiguration.prototype['WeeklyMaintenanceStartTime'] = undefined;

/**
 * @member {module:model/DiskIopsConfiguration} DiskIopsConfiguration
 */
OpenZFSFileSystemConfiguration.prototype['DiskIopsConfiguration'] = undefined;

/**
 * @member {String} RootVolumeId
 */
OpenZFSFileSystemConfiguration.prototype['RootVolumeId'] = undefined;






export default OpenZFSFileSystemConfiguration;

