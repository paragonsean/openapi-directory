/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileCacheCreating from './FileCacheCreating';
import FileCacheCreatingFailureDetails from './FileCacheCreatingFailureDetails';
import FileCacheCreatingLustreConfiguration from './FileCacheCreatingLustreConfiguration';
import FileCacheLifecycle from './FileCacheLifecycle';
import FileCacheType from './FileCacheType';
import Tag from './Tag';

/**
 * The CreateFileCacheResponseFileCache model module.
 * @module model/CreateFileCacheResponseFileCache
 * @version 2018-03-01
 */
class CreateFileCacheResponseFileCache {
    /**
     * Constructs a new <code>CreateFileCacheResponseFileCache</code>.
     * @alias module:model/CreateFileCacheResponseFileCache
     * @implements module:model/FileCacheCreating
     */
    constructor() { 
        FileCacheCreating.initialize(this);
        CreateFileCacheResponseFileCache.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateFileCacheResponseFileCache</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFileCacheResponseFileCache} obj Optional instance to populate.
     * @return {module:model/CreateFileCacheResponseFileCache} The populated <code>CreateFileCacheResponseFileCache</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFileCacheResponseFileCache();
            FileCacheCreating.constructFromObject(data, obj);

            if (data.hasOwnProperty('OwnerId')) {
                obj['OwnerId'] = ApiClient.convertToType(data['OwnerId'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('FileCacheId')) {
                obj['FileCacheId'] = ApiClient.convertToType(data['FileCacheId'], 'String');
            }
            if (data.hasOwnProperty('FileCacheType')) {
                obj['FileCacheType'] = ApiClient.convertToType(data['FileCacheType'], FileCacheType);
            }
            if (data.hasOwnProperty('FileCacheTypeVersion')) {
                obj['FileCacheTypeVersion'] = ApiClient.convertToType(data['FileCacheTypeVersion'], 'String');
            }
            if (data.hasOwnProperty('Lifecycle')) {
                obj['Lifecycle'] = ApiClient.convertToType(data['Lifecycle'], FileCacheLifecycle);
            }
            if (data.hasOwnProperty('FailureDetails')) {
                obj['FailureDetails'] = FileCacheCreatingFailureDetails.constructFromObject(data['FailureDetails']);
            }
            if (data.hasOwnProperty('StorageCapacity')) {
                obj['StorageCapacity'] = ApiClient.convertToType(data['StorageCapacity'], 'Number');
            }
            if (data.hasOwnProperty('VpcId')) {
                obj['VpcId'] = ApiClient.convertToType(data['VpcId'], 'String');
            }
            if (data.hasOwnProperty('SubnetIds')) {
                obj['SubnetIds'] = ApiClient.convertToType(data['SubnetIds'], ['String']);
            }
            if (data.hasOwnProperty('NetworkInterfaceIds')) {
                obj['NetworkInterfaceIds'] = ApiClient.convertToType(data['NetworkInterfaceIds'], ['String']);
            }
            if (data.hasOwnProperty('DNSName')) {
                obj['DNSName'] = ApiClient.convertToType(data['DNSName'], 'String');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('ResourceARN')) {
                obj['ResourceARN'] = ApiClient.convertToType(data['ResourceARN'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
            if (data.hasOwnProperty('CopyTagsToDataRepositoryAssociations')) {
                obj['CopyTagsToDataRepositoryAssociations'] = ApiClient.convertToType(data['CopyTagsToDataRepositoryAssociations'], 'Boolean');
            }
            if (data.hasOwnProperty('LustreConfiguration')) {
                obj['LustreConfiguration'] = FileCacheCreatingLustreConfiguration.constructFromObject(data['LustreConfiguration']);
            }
            if (data.hasOwnProperty('DataRepositoryAssociationIds')) {
                obj['DataRepositoryAssociationIds'] = ApiClient.convertToType(data['DataRepositoryAssociationIds'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFileCacheResponseFileCache</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFileCacheResponseFileCache</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['OwnerId'] && !(typeof data['OwnerId'] === 'string' || data['OwnerId'] instanceof String)) {
            throw new Error("Expected the field `OwnerId` to be a primitive type in the JSON string but got " + data['OwnerId']);
        }
        // validate the optional field `FileCacheId`
        if (data['FileCacheId']) { // data not null
          String.validateJSON(data['FileCacheId']);
        }
        // validate the optional field `FileCacheType`
        if (data['FileCacheType']) { // data not null
          FileCacheType.validateJSON(data['FileCacheType']);
        }
        // validate the optional field `FileCacheTypeVersion`
        if (data['FileCacheTypeVersion']) { // data not null
          String.validateJSON(data['FileCacheTypeVersion']);
        }
        // validate the optional field `Lifecycle`
        if (data['Lifecycle']) { // data not null
          FileCacheLifecycle.validateJSON(data['Lifecycle']);
        }
        // validate the optional field `FailureDetails`
        if (data['FailureDetails']) { // data not null
          FileCacheCreatingFailureDetails.validateJSON(data['FailureDetails']);
        }
        // validate the optional field `StorageCapacity`
        if (data['StorageCapacity']) { // data not null
          Number.validateJSON(data['StorageCapacity']);
        }
        // ensure the json data is a string
        if (data['VpcId'] && !(typeof data['VpcId'] === 'string' || data['VpcId'] instanceof String)) {
            throw new Error("Expected the field `VpcId` to be a primitive type in the JSON string but got " + data['VpcId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['SubnetIds'])) {
            throw new Error("Expected the field `SubnetIds` to be an array in the JSON data but got " + data['SubnetIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['NetworkInterfaceIds'])) {
            throw new Error("Expected the field `NetworkInterfaceIds` to be an array in the JSON data but got " + data['NetworkInterfaceIds']);
        }
        // validate the optional field `DNSName`
        if (data['DNSName']) { // data not null
          String.validateJSON(data['DNSName']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }
        // ensure the json data is a string
        if (data['ResourceARN'] && !(typeof data['ResourceARN'] === 'string' || data['ResourceARN'] instanceof String)) {
            throw new Error("Expected the field `ResourceARN` to be a primitive type in the JSON string but got " + data['ResourceARN']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }
        // validate the optional field `CopyTagsToDataRepositoryAssociations`
        if (data['CopyTagsToDataRepositoryAssociations']) { // data not null
          Boolean.validateJSON(data['CopyTagsToDataRepositoryAssociations']);
        }
        // validate the optional field `LustreConfiguration`
        if (data['LustreConfiguration']) { // data not null
          FileCacheCreatingLustreConfiguration.validateJSON(data['LustreConfiguration']);
        }
        // validate the optional field `DataRepositoryAssociationIds`
        if (data['DataRepositoryAssociationIds']) { // data not null
          Array.validateJSON(data['DataRepositoryAssociationIds']);
        }

        return true;
    }


}



/**
 * An Amazon Web Services account ID. This ID is a 12-digit number that you use to construct Amazon Resource Names (ARNs) for resources.
 * @member {String} OwnerId
 */
CreateFileCacheResponseFileCache.prototype['OwnerId'] = undefined;

/**
 * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
 * @member {Date} CreationTime
 */
CreateFileCacheResponseFileCache.prototype['CreationTime'] = undefined;

/**
 * @member {String} FileCacheId
 */
CreateFileCacheResponseFileCache.prototype['FileCacheId'] = undefined;

/**
 * @member {module:model/FileCacheType} FileCacheType
 */
CreateFileCacheResponseFileCache.prototype['FileCacheType'] = undefined;

/**
 * @member {String} FileCacheTypeVersion
 */
CreateFileCacheResponseFileCache.prototype['FileCacheTypeVersion'] = undefined;

/**
 * @member {module:model/FileCacheLifecycle} Lifecycle
 */
CreateFileCacheResponseFileCache.prototype['Lifecycle'] = undefined;

/**
 * @member {module:model/FileCacheCreatingFailureDetails} FailureDetails
 */
CreateFileCacheResponseFileCache.prototype['FailureDetails'] = undefined;

/**
 * @member {Number} StorageCapacity
 */
CreateFileCacheResponseFileCache.prototype['StorageCapacity'] = undefined;

/**
 * The ID of your virtual private cloud (VPC). For more information, see <a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html\">VPC and subnets</a> in the <i>Amazon VPC User Guide</i>.
 * @member {String} VpcId
 */
CreateFileCacheResponseFileCache.prototype['VpcId'] = undefined;

/**
 * A list of subnet IDs that the cache will be accessible from. You can specify only one subnet ID in a call to the <code>CreateFileCache</code> operation.
 * @member {Array.<String>} SubnetIds
 */
CreateFileCacheResponseFileCache.prototype['SubnetIds'] = undefined;

/**
 * A list of network interface IDs.
 * @member {Array.<String>} NetworkInterfaceIds
 */
CreateFileCacheResponseFileCache.prototype['NetworkInterfaceIds'] = undefined;

/**
 * @member {String} DNSName
 */
CreateFileCacheResponseFileCache.prototype['DNSName'] = undefined;

/**
 * @member {String} KmsKeyId
 */
CreateFileCacheResponseFileCache.prototype['KmsKeyId'] = undefined;

/**
 * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
 * @member {String} ResourceARN
 */
CreateFileCacheResponseFileCache.prototype['ResourceARN'] = undefined;

/**
 * A list of <code>Tag</code> values, with a maximum of 50 elements.
 * @member {Array.<module:model/Tag>} Tags
 */
CreateFileCacheResponseFileCache.prototype['Tags'] = undefined;

/**
 * @member {Boolean} CopyTagsToDataRepositoryAssociations
 */
CreateFileCacheResponseFileCache.prototype['CopyTagsToDataRepositoryAssociations'] = undefined;

/**
 * @member {module:model/FileCacheCreatingLustreConfiguration} LustreConfiguration
 */
CreateFileCacheResponseFileCache.prototype['LustreConfiguration'] = undefined;

/**
 * @member {Array} DataRepositoryAssociationIds
 */
CreateFileCacheResponseFileCache.prototype['DataRepositoryAssociationIds'] = undefined;


// Implement FileCacheCreating interface:
/**
 * An Amazon Web Services account ID. This ID is a 12-digit number that you use to construct Amazon Resource Names (ARNs) for resources.
 * @member {String} OwnerId
 */
FileCacheCreating.prototype['OwnerId'] = undefined;
/**
 * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
 * @member {Date} CreationTime
 */
FileCacheCreating.prototype['CreationTime'] = undefined;
/**
 * @member {String} FileCacheId
 */
FileCacheCreating.prototype['FileCacheId'] = undefined;
/**
 * @member {module:model/FileCacheType} FileCacheType
 */
FileCacheCreating.prototype['FileCacheType'] = undefined;
/**
 * @member {String} FileCacheTypeVersion
 */
FileCacheCreating.prototype['FileCacheTypeVersion'] = undefined;
/**
 * @member {module:model/FileCacheLifecycle} Lifecycle
 */
FileCacheCreating.prototype['Lifecycle'] = undefined;
/**
 * @member {module:model/FileCacheCreatingFailureDetails} FailureDetails
 */
FileCacheCreating.prototype['FailureDetails'] = undefined;
/**
 * @member {Number} StorageCapacity
 */
FileCacheCreating.prototype['StorageCapacity'] = undefined;
/**
 * The ID of your virtual private cloud (VPC). For more information, see <a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html\">VPC and subnets</a> in the <i>Amazon VPC User Guide</i>.
 * @member {String} VpcId
 */
FileCacheCreating.prototype['VpcId'] = undefined;
/**
 * A list of subnet IDs that the cache will be accessible from. You can specify only one subnet ID in a call to the <code>CreateFileCache</code> operation.
 * @member {Array.<String>} SubnetIds
 */
FileCacheCreating.prototype['SubnetIds'] = undefined;
/**
 * A list of network interface IDs.
 * @member {Array.<String>} NetworkInterfaceIds
 */
FileCacheCreating.prototype['NetworkInterfaceIds'] = undefined;
/**
 * @member {String} DNSName
 */
FileCacheCreating.prototype['DNSName'] = undefined;
/**
 * @member {String} KmsKeyId
 */
FileCacheCreating.prototype['KmsKeyId'] = undefined;
/**
 * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
 * @member {String} ResourceARN
 */
FileCacheCreating.prototype['ResourceARN'] = undefined;
/**
 * A list of <code>Tag</code> values, with a maximum of 50 elements.
 * @member {Array.<module:model/Tag>} Tags
 */
FileCacheCreating.prototype['Tags'] = undefined;
/**
 * @member {Boolean} CopyTagsToDataRepositoryAssociations
 */
FileCacheCreating.prototype['CopyTagsToDataRepositoryAssociations'] = undefined;
/**
 * @member {module:model/FileCacheCreatingLustreConfiguration} LustreConfiguration
 */
FileCacheCreating.prototype['LustreConfiguration'] = undefined;
/**
 * @member {Array} DataRepositoryAssociationIds
 */
FileCacheCreating.prototype['DataRepositoryAssociationIds'] = undefined;




export default CreateFileCacheResponseFileCache;

