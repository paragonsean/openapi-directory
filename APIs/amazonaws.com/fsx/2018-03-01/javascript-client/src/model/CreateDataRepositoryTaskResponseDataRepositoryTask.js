/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompletionReport from './CompletionReport';
import DataRepositoryTask from './DataRepositoryTask';
import DataRepositoryTaskFailureDetails from './DataRepositoryTaskFailureDetails';
import DataRepositoryTaskLifecycle from './DataRepositoryTaskLifecycle';
import DataRepositoryTaskStatus from './DataRepositoryTaskStatus';
import DataRepositoryTaskType from './DataRepositoryTaskType';
import Tag from './Tag';

/**
 * The CreateDataRepositoryTaskResponseDataRepositoryTask model module.
 * @module model/CreateDataRepositoryTaskResponseDataRepositoryTask
 * @version 2018-03-01
 */
class CreateDataRepositoryTaskResponseDataRepositoryTask {
    /**
     * Constructs a new <code>CreateDataRepositoryTaskResponseDataRepositoryTask</code>.
     * @alias module:model/CreateDataRepositoryTaskResponseDataRepositoryTask
     * @implements module:model/DataRepositoryTask
     * @param taskId {String} 
     * @param lifecycle {module:model/DataRepositoryTaskLifecycle} 
     * @param type {module:model/DataRepositoryTaskType} 
     * @param creationTime {Date} The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
     */
    constructor(taskId, lifecycle, type, creationTime) { 
        DataRepositoryTask.initialize(this, taskId, lifecycle, type, creationTime);
        CreateDataRepositoryTaskResponseDataRepositoryTask.initialize(this, taskId, lifecycle, type, creationTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, taskId, lifecycle, type, creationTime) { 
        obj['TaskId'] = taskId;
        obj['Lifecycle'] = lifecycle;
        obj['Type'] = type;
        obj['CreationTime'] = creationTime;
    }

    /**
     * Constructs a <code>CreateDataRepositoryTaskResponseDataRepositoryTask</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDataRepositoryTaskResponseDataRepositoryTask} obj Optional instance to populate.
     * @return {module:model/CreateDataRepositoryTaskResponseDataRepositoryTask} The populated <code>CreateDataRepositoryTaskResponseDataRepositoryTask</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDataRepositoryTaskResponseDataRepositoryTask();
            DataRepositoryTask.constructFromObject(data, obj);

            if (data.hasOwnProperty('TaskId')) {
                obj['TaskId'] = ApiClient.convertToType(data['TaskId'], 'String');
            }
            if (data.hasOwnProperty('Lifecycle')) {
                obj['Lifecycle'] = ApiClient.convertToType(data['Lifecycle'], DataRepositoryTaskLifecycle);
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], DataRepositoryTaskType);
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('EndTime')) {
                obj['EndTime'] = ApiClient.convertToType(data['EndTime'], 'Date');
            }
            if (data.hasOwnProperty('ResourceARN')) {
                obj['ResourceARN'] = ApiClient.convertToType(data['ResourceARN'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
            if (data.hasOwnProperty('FileSystemId')) {
                obj['FileSystemId'] = ApiClient.convertToType(data['FileSystemId'], 'String');
            }
            if (data.hasOwnProperty('Paths')) {
                obj['Paths'] = ApiClient.convertToType(data['Paths'], Array);
            }
            if (data.hasOwnProperty('FailureDetails')) {
                obj['FailureDetails'] = DataRepositoryTaskFailureDetails.constructFromObject(data['FailureDetails']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = DataRepositoryTaskStatus.constructFromObject(data['Status']);
            }
            if (data.hasOwnProperty('Report')) {
                obj['Report'] = CompletionReport.constructFromObject(data['Report']);
            }
            if (data.hasOwnProperty('CapacityToRelease')) {
                obj['CapacityToRelease'] = ApiClient.convertToType(data['CapacityToRelease'], 'Number');
            }
            if (data.hasOwnProperty('FileCacheId')) {
                obj['FileCacheId'] = ApiClient.convertToType(data['FileCacheId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDataRepositoryTaskResponseDataRepositoryTask</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDataRepositoryTaskResponseDataRepositoryTask</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDataRepositoryTaskResponseDataRepositoryTask.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TaskId`
        if (data['TaskId']) { // data not null
          String.validateJSON(data['TaskId']);
        }
        // validate the optional field `Lifecycle`
        if (data['Lifecycle']) { // data not null
          DataRepositoryTaskLifecycle.validateJSON(data['Lifecycle']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          DataRepositoryTaskType.validateJSON(data['Type']);
        }
        // validate the optional field `StartTime`
        if (data['StartTime']) { // data not null
          Date.validateJSON(data['StartTime']);
        }
        // validate the optional field `EndTime`
        if (data['EndTime']) { // data not null
          Date.validateJSON(data['EndTime']);
        }
        // ensure the json data is a string
        if (data['ResourceARN'] && !(typeof data['ResourceARN'] === 'string' || data['ResourceARN'] instanceof String)) {
            throw new Error("Expected the field `ResourceARN` to be a primitive type in the JSON string but got " + data['ResourceARN']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }
        // validate the optional field `FileSystemId`
        if (data['FileSystemId']) { // data not null
          String.validateJSON(data['FileSystemId']);
        }
        // validate the optional field `Paths`
        if (data['Paths']) { // data not null
          Array.validateJSON(data['Paths']);
        }
        // validate the optional field `FailureDetails`
        if (data['FailureDetails']) { // data not null
          DataRepositoryTaskFailureDetails.validateJSON(data['FailureDetails']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          DataRepositoryTaskStatus.validateJSON(data['Status']);
        }
        // validate the optional field `Report`
        if (data['Report']) { // data not null
          CompletionReport.validateJSON(data['Report']);
        }
        // validate the optional field `CapacityToRelease`
        if (data['CapacityToRelease']) { // data not null
          Number.validateJSON(data['CapacityToRelease']);
        }
        // validate the optional field `FileCacheId`
        if (data['FileCacheId']) { // data not null
          String.validateJSON(data['FileCacheId']);
        }

        return true;
    }


}

CreateDataRepositoryTaskResponseDataRepositoryTask.RequiredProperties = ["TaskId", "Lifecycle", "Type", "CreationTime"];

/**
 * @member {String} TaskId
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['TaskId'] = undefined;

/**
 * @member {module:model/DataRepositoryTaskLifecycle} Lifecycle
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['Lifecycle'] = undefined;

/**
 * @member {module:model/DataRepositoryTaskType} Type
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['Type'] = undefined;

/**
 * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
 * @member {Date} CreationTime
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['CreationTime'] = undefined;

/**
 * @member {Date} StartTime
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['StartTime'] = undefined;

/**
 * @member {Date} EndTime
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['EndTime'] = undefined;

/**
 * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
 * @member {String} ResourceARN
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['ResourceARN'] = undefined;

/**
 * A list of <code>Tag</code> values, with a maximum of 50 elements.
 * @member {Array.<module:model/Tag>} Tags
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['Tags'] = undefined;

/**
 * @member {String} FileSystemId
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['FileSystemId'] = undefined;

/**
 * @member {Array} Paths
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['Paths'] = undefined;

/**
 * @member {module:model/DataRepositoryTaskFailureDetails} FailureDetails
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['FailureDetails'] = undefined;

/**
 * @member {module:model/DataRepositoryTaskStatus} Status
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['Status'] = undefined;

/**
 * @member {module:model/CompletionReport} Report
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['Report'] = undefined;

/**
 * @member {Number} CapacityToRelease
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['CapacityToRelease'] = undefined;

/**
 * @member {String} FileCacheId
 */
CreateDataRepositoryTaskResponseDataRepositoryTask.prototype['FileCacheId'] = undefined;


// Implement DataRepositoryTask interface:
/**
 * @member {String} TaskId
 */
DataRepositoryTask.prototype['TaskId'] = undefined;
/**
 * @member {module:model/DataRepositoryTaskLifecycle} Lifecycle
 */
DataRepositoryTask.prototype['Lifecycle'] = undefined;
/**
 * @member {module:model/DataRepositoryTaskType} Type
 */
DataRepositoryTask.prototype['Type'] = undefined;
/**
 * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
 * @member {Date} CreationTime
 */
DataRepositoryTask.prototype['CreationTime'] = undefined;
/**
 * @member {Date} StartTime
 */
DataRepositoryTask.prototype['StartTime'] = undefined;
/**
 * @member {Date} EndTime
 */
DataRepositoryTask.prototype['EndTime'] = undefined;
/**
 * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
 * @member {String} ResourceARN
 */
DataRepositoryTask.prototype['ResourceARN'] = undefined;
/**
 * A list of <code>Tag</code> values, with a maximum of 50 elements.
 * @member {Array.<module:model/Tag>} Tags
 */
DataRepositoryTask.prototype['Tags'] = undefined;
/**
 * @member {String} FileSystemId
 */
DataRepositoryTask.prototype['FileSystemId'] = undefined;
/**
 * @member {Array} Paths
 */
DataRepositoryTask.prototype['Paths'] = undefined;
/**
 * @member {module:model/DataRepositoryTaskFailureDetails} FailureDetails
 */
DataRepositoryTask.prototype['FailureDetails'] = undefined;
/**
 * @member {module:model/DataRepositoryTaskStatus} Status
 */
DataRepositoryTask.prototype['Status'] = undefined;
/**
 * @member {module:model/CompletionReport} Report
 */
DataRepositoryTask.prototype['Report'] = undefined;
/**
 * @member {Number} CapacityToRelease
 */
DataRepositoryTask.prototype['CapacityToRelease'] = undefined;
/**
 * @member {String} FileCacheId
 */
DataRepositoryTask.prototype['FileCacheId'] = undefined;




export default CreateDataRepositoryTaskResponseDataRepositoryTask;

