/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonFsx);
  }
}(this, function(expect, AmazonFsx) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonFsx.OntapVolumeConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OntapVolumeConfiguration', function() {
    it('should create an instance of OntapVolumeConfiguration', function() {
      // uncomment below and update the code to test OntapVolumeConfiguration
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be.a(AmazonFsx.OntapVolumeConfiguration);
    });

    it('should have the property flexCacheEndpointType (base name: "FlexCacheEndpointType")', function() {
      // uncomment below and update the code to test the property flexCacheEndpointType
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property junctionPath (base name: "JunctionPath")', function() {
      // uncomment below and update the code to test the property junctionPath
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property securityStyle (base name: "SecurityStyle")', function() {
      // uncomment below and update the code to test the property securityStyle
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property sizeInMegabytes (base name: "SizeInMegabytes")', function() {
      // uncomment below and update the code to test the property sizeInMegabytes
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property storageEfficiencyEnabled (base name: "StorageEfficiencyEnabled")', function() {
      // uncomment below and update the code to test the property storageEfficiencyEnabled
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property storageVirtualMachineId (base name: "StorageVirtualMachineId")', function() {
      // uncomment below and update the code to test the property storageVirtualMachineId
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property storageVirtualMachineRoot (base name: "StorageVirtualMachineRoot")', function() {
      // uncomment below and update the code to test the property storageVirtualMachineRoot
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property tieringPolicy (base name: "TieringPolicy")', function() {
      // uncomment below and update the code to test the property tieringPolicy
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property UUID (base name: "UUID")', function() {
      // uncomment below and update the code to test the property UUID
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property ontapVolumeType (base name: "OntapVolumeType")', function() {
      // uncomment below and update the code to test the property ontapVolumeType
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property snapshotPolicy (base name: "SnapshotPolicy")', function() {
      // uncomment below and update the code to test the property snapshotPolicy
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property copyTagsToBackups (base name: "CopyTagsToBackups")', function() {
      // uncomment below and update the code to test the property copyTagsToBackups
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property snaplockConfiguration (base name: "SnaplockConfiguration")', function() {
      // uncomment below and update the code to test the property snaplockConfiguration
      //var instance = new AmazonFsx.OntapVolumeConfiguration();
      //expect(instance).to.be();
    });

  });

}));
