/**
 * Amazon FSx
 * Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
 *
 * The version of the OpenAPI document: 2018-03-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonFsx);
  }
}(this, function(expect, AmazonFsx) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonFsx.LustreFileSystemConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LustreFileSystemConfiguration', function() {
    it('should create an instance of LustreFileSystemConfiguration', function() {
      // uncomment below and update the code to test LustreFileSystemConfiguration
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be.a(AmazonFsx.LustreFileSystemConfiguration);
    });

    it('should have the property weeklyMaintenanceStartTime (base name: "WeeklyMaintenanceStartTime")', function() {
      // uncomment below and update the code to test the property weeklyMaintenanceStartTime
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property dataRepositoryConfiguration (base name: "DataRepositoryConfiguration")', function() {
      // uncomment below and update the code to test the property dataRepositoryConfiguration
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property deploymentType (base name: "DeploymentType")', function() {
      // uncomment below and update the code to test the property deploymentType
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property perUnitStorageThroughput (base name: "PerUnitStorageThroughput")', function() {
      // uncomment below and update the code to test the property perUnitStorageThroughput
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property mountName (base name: "MountName")', function() {
      // uncomment below and update the code to test the property mountName
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property dailyAutomaticBackupStartTime (base name: "DailyAutomaticBackupStartTime")', function() {
      // uncomment below and update the code to test the property dailyAutomaticBackupStartTime
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property automaticBackupRetentionDays (base name: "AutomaticBackupRetentionDays")', function() {
      // uncomment below and update the code to test the property automaticBackupRetentionDays
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property copyTagsToBackups (base name: "CopyTagsToBackups")', function() {
      // uncomment below and update the code to test the property copyTagsToBackups
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property driveCacheType (base name: "DriveCacheType")', function() {
      // uncomment below and update the code to test the property driveCacheType
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property dataCompressionType (base name: "DataCompressionType")', function() {
      // uncomment below and update the code to test the property dataCompressionType
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property logConfiguration (base name: "LogConfiguration")', function() {
      // uncomment below and update the code to test the property logConfiguration
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property rootSquashConfiguration (base name: "RootSquashConfiguration")', function() {
      // uncomment below and update the code to test the property rootSquashConfiguration
      //var instance = new AmazonFsx.LustreFileSystemConfiguration();
      //expect(instance).to.be();
    });

  });

}));
