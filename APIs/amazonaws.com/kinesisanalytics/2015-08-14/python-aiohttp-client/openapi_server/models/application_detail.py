# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_status import ApplicationStatus
from openapi_server import util


class ApplicationDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, application_description: str=None, application_arn: str=None, application_status: ApplicationStatus=None, create_timestamp: datetime=None, last_update_timestamp: datetime=None, input_descriptions: List=None, output_descriptions: List=None, reference_data_source_descriptions: List=None, cloud_watch_logging_option_descriptions: List=None, application_code: str=None, application_version_id: int=None):
        """ApplicationDetail - a model defined in OpenAPI

        :param application_name: The application_name of this ApplicationDetail.
        :param application_description: The application_description of this ApplicationDetail.
        :param application_arn: The application_arn of this ApplicationDetail.
        :param application_status: The application_status of this ApplicationDetail.
        :param create_timestamp: The create_timestamp of this ApplicationDetail.
        :param last_update_timestamp: The last_update_timestamp of this ApplicationDetail.
        :param input_descriptions: The input_descriptions of this ApplicationDetail.
        :param output_descriptions: The output_descriptions of this ApplicationDetail.
        :param reference_data_source_descriptions: The reference_data_source_descriptions of this ApplicationDetail.
        :param cloud_watch_logging_option_descriptions: The cloud_watch_logging_option_descriptions of this ApplicationDetail.
        :param application_code: The application_code of this ApplicationDetail.
        :param application_version_id: The application_version_id of this ApplicationDetail.
        """
        self.openapi_types = {
            'application_name': str,
            'application_description': str,
            'application_arn': str,
            'application_status': ApplicationStatus,
            'create_timestamp': datetime,
            'last_update_timestamp': datetime,
            'input_descriptions': List,
            'output_descriptions': List,
            'reference_data_source_descriptions': List,
            'cloud_watch_logging_option_descriptions': List,
            'application_code': str,
            'application_version_id': int
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'application_description': 'ApplicationDescription',
            'application_arn': 'ApplicationARN',
            'application_status': 'ApplicationStatus',
            'create_timestamp': 'CreateTimestamp',
            'last_update_timestamp': 'LastUpdateTimestamp',
            'input_descriptions': 'InputDescriptions',
            'output_descriptions': 'OutputDescriptions',
            'reference_data_source_descriptions': 'ReferenceDataSourceDescriptions',
            'cloud_watch_logging_option_descriptions': 'CloudWatchLoggingOptionDescriptions',
            'application_code': 'ApplicationCode',
            'application_version_id': 'ApplicationVersionId'
        }

        self._application_name = application_name
        self._application_description = application_description
        self._application_arn = application_arn
        self._application_status = application_status
        self._create_timestamp = create_timestamp
        self._last_update_timestamp = last_update_timestamp
        self._input_descriptions = input_descriptions
        self._output_descriptions = output_descriptions
        self._reference_data_source_descriptions = reference_data_source_descriptions
        self._cloud_watch_logging_option_descriptions = cloud_watch_logging_option_descriptions
        self._application_code = application_code
        self._application_version_id = application_version_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationDetail of this ApplicationDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this ApplicationDetail.


        :return: The application_name of this ApplicationDetail.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this ApplicationDetail.


        :param application_name: The application_name of this ApplicationDetail.
        :type application_name: str
        """
        if application_name is None:
            raise ValueError("Invalid value for `application_name`, must not be `None`")

        self._application_name = application_name

    @property
    def application_description(self):
        """Gets the application_description of this ApplicationDetail.


        :return: The application_description of this ApplicationDetail.
        :rtype: str
        """
        return self._application_description

    @application_description.setter
    def application_description(self, application_description):
        """Sets the application_description of this ApplicationDetail.


        :param application_description: The application_description of this ApplicationDetail.
        :type application_description: str
        """

        self._application_description = application_description

    @property
    def application_arn(self):
        """Gets the application_arn of this ApplicationDetail.


        :return: The application_arn of this ApplicationDetail.
        :rtype: str
        """
        return self._application_arn

    @application_arn.setter
    def application_arn(self, application_arn):
        """Sets the application_arn of this ApplicationDetail.


        :param application_arn: The application_arn of this ApplicationDetail.
        :type application_arn: str
        """
        if application_arn is None:
            raise ValueError("Invalid value for `application_arn`, must not be `None`")

        self._application_arn = application_arn

    @property
    def application_status(self):
        """Gets the application_status of this ApplicationDetail.


        :return: The application_status of this ApplicationDetail.
        :rtype: ApplicationStatus
        """
        return self._application_status

    @application_status.setter
    def application_status(self, application_status):
        """Sets the application_status of this ApplicationDetail.


        :param application_status: The application_status of this ApplicationDetail.
        :type application_status: ApplicationStatus
        """
        if application_status is None:
            raise ValueError("Invalid value for `application_status`, must not be `None`")

        self._application_status = application_status

    @property
    def create_timestamp(self):
        """Gets the create_timestamp of this ApplicationDetail.


        :return: The create_timestamp of this ApplicationDetail.
        :rtype: datetime
        """
        return self._create_timestamp

    @create_timestamp.setter
    def create_timestamp(self, create_timestamp):
        """Sets the create_timestamp of this ApplicationDetail.


        :param create_timestamp: The create_timestamp of this ApplicationDetail.
        :type create_timestamp: datetime
        """

        self._create_timestamp = create_timestamp

    @property
    def last_update_timestamp(self):
        """Gets the last_update_timestamp of this ApplicationDetail.


        :return: The last_update_timestamp of this ApplicationDetail.
        :rtype: datetime
        """
        return self._last_update_timestamp

    @last_update_timestamp.setter
    def last_update_timestamp(self, last_update_timestamp):
        """Sets the last_update_timestamp of this ApplicationDetail.


        :param last_update_timestamp: The last_update_timestamp of this ApplicationDetail.
        :type last_update_timestamp: datetime
        """

        self._last_update_timestamp = last_update_timestamp

    @property
    def input_descriptions(self):
        """Gets the input_descriptions of this ApplicationDetail.


        :return: The input_descriptions of this ApplicationDetail.
        :rtype: List
        """
        return self._input_descriptions

    @input_descriptions.setter
    def input_descriptions(self, input_descriptions):
        """Sets the input_descriptions of this ApplicationDetail.


        :param input_descriptions: The input_descriptions of this ApplicationDetail.
        :type input_descriptions: List
        """

        self._input_descriptions = input_descriptions

    @property
    def output_descriptions(self):
        """Gets the output_descriptions of this ApplicationDetail.


        :return: The output_descriptions of this ApplicationDetail.
        :rtype: List
        """
        return self._output_descriptions

    @output_descriptions.setter
    def output_descriptions(self, output_descriptions):
        """Sets the output_descriptions of this ApplicationDetail.


        :param output_descriptions: The output_descriptions of this ApplicationDetail.
        :type output_descriptions: List
        """

        self._output_descriptions = output_descriptions

    @property
    def reference_data_source_descriptions(self):
        """Gets the reference_data_source_descriptions of this ApplicationDetail.


        :return: The reference_data_source_descriptions of this ApplicationDetail.
        :rtype: List
        """
        return self._reference_data_source_descriptions

    @reference_data_source_descriptions.setter
    def reference_data_source_descriptions(self, reference_data_source_descriptions):
        """Sets the reference_data_source_descriptions of this ApplicationDetail.


        :param reference_data_source_descriptions: The reference_data_source_descriptions of this ApplicationDetail.
        :type reference_data_source_descriptions: List
        """

        self._reference_data_source_descriptions = reference_data_source_descriptions

    @property
    def cloud_watch_logging_option_descriptions(self):
        """Gets the cloud_watch_logging_option_descriptions of this ApplicationDetail.


        :return: The cloud_watch_logging_option_descriptions of this ApplicationDetail.
        :rtype: List
        """
        return self._cloud_watch_logging_option_descriptions

    @cloud_watch_logging_option_descriptions.setter
    def cloud_watch_logging_option_descriptions(self, cloud_watch_logging_option_descriptions):
        """Sets the cloud_watch_logging_option_descriptions of this ApplicationDetail.


        :param cloud_watch_logging_option_descriptions: The cloud_watch_logging_option_descriptions of this ApplicationDetail.
        :type cloud_watch_logging_option_descriptions: List
        """

        self._cloud_watch_logging_option_descriptions = cloud_watch_logging_option_descriptions

    @property
    def application_code(self):
        """Gets the application_code of this ApplicationDetail.


        :return: The application_code of this ApplicationDetail.
        :rtype: str
        """
        return self._application_code

    @application_code.setter
    def application_code(self, application_code):
        """Sets the application_code of this ApplicationDetail.


        :param application_code: The application_code of this ApplicationDetail.
        :type application_code: str
        """

        self._application_code = application_code

    @property
    def application_version_id(self):
        """Gets the application_version_id of this ApplicationDetail.


        :return: The application_version_id of this ApplicationDetail.
        :rtype: int
        """
        return self._application_version_id

    @application_version_id.setter
    def application_version_id(self, application_version_id):
        """Sets the application_version_id of this ApplicationDetail.


        :param application_version_id: The application_version_id of this ApplicationDetail.
        :type application_version_id: int
        """
        if application_version_id is None:
            raise ValueError("Invalid value for `application_version_id`, must not be `None`")

        self._application_version_id = application_version_id
