# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_application_request_application_update import UpdateApplicationRequestApplicationUpdate
from openapi_server import util


class UpdateApplicationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, current_application_version_id: int=None, application_update: UpdateApplicationRequestApplicationUpdate=None):
        """UpdateApplicationRequest - a model defined in OpenAPI

        :param application_name: The application_name of this UpdateApplicationRequest.
        :param current_application_version_id: The current_application_version_id of this UpdateApplicationRequest.
        :param application_update: The application_update of this UpdateApplicationRequest.
        """
        self.openapi_types = {
            'application_name': str,
            'current_application_version_id': int,
            'application_update': UpdateApplicationRequestApplicationUpdate
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'current_application_version_id': 'CurrentApplicationVersionId',
            'application_update': 'ApplicationUpdate'
        }

        self._application_name = application_name
        self._current_application_version_id = current_application_version_id
        self._application_update = application_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateApplicationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateApplicationRequest of this UpdateApplicationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this UpdateApplicationRequest.


        :return: The application_name of this UpdateApplicationRequest.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this UpdateApplicationRequest.


        :param application_name: The application_name of this UpdateApplicationRequest.
        :type application_name: str
        """
        if application_name is None:
            raise ValueError("Invalid value for `application_name`, must not be `None`")

        self._application_name = application_name

    @property
    def current_application_version_id(self):
        """Gets the current_application_version_id of this UpdateApplicationRequest.


        :return: The current_application_version_id of this UpdateApplicationRequest.
        :rtype: int
        """
        return self._current_application_version_id

    @current_application_version_id.setter
    def current_application_version_id(self, current_application_version_id):
        """Sets the current_application_version_id of this UpdateApplicationRequest.


        :param current_application_version_id: The current_application_version_id of this UpdateApplicationRequest.
        :type current_application_version_id: int
        """
        if current_application_version_id is None:
            raise ValueError("Invalid value for `current_application_version_id`, must not be `None`")

        self._current_application_version_id = current_application_version_id

    @property
    def application_update(self):
        """Gets the application_update of this UpdateApplicationRequest.


        :return: The application_update of this UpdateApplicationRequest.
        :rtype: UpdateApplicationRequestApplicationUpdate
        """
        return self._application_update

    @application_update.setter
    def application_update(self, application_update):
        """Sets the application_update of this UpdateApplicationRequest.


        :param application_update: The application_update of this UpdateApplicationRequest.
        :type application_update: UpdateApplicationRequestApplicationUpdate
        """
        if application_update is None:
            raise ValueError("Invalid value for `application_update`, must not be `None`")

        self._application_update = application_update
