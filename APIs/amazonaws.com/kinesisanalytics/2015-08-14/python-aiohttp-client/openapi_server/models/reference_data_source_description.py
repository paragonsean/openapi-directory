# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reference_data_source_description_s3_reference_data_source_description import ReferenceDataSourceDescriptionS3ReferenceDataSourceDescription
from openapi_server.models.reference_data_source_reference_schema import ReferenceDataSourceReferenceSchema
from openapi_server import util


class ReferenceDataSourceDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reference_id: str=None, table_name: str=None, s3_reference_data_source_description: ReferenceDataSourceDescriptionS3ReferenceDataSourceDescription=None, reference_schema: ReferenceDataSourceReferenceSchema=None):
        """ReferenceDataSourceDescription - a model defined in OpenAPI

        :param reference_id: The reference_id of this ReferenceDataSourceDescription.
        :param table_name: The table_name of this ReferenceDataSourceDescription.
        :param s3_reference_data_source_description: The s3_reference_data_source_description of this ReferenceDataSourceDescription.
        :param reference_schema: The reference_schema of this ReferenceDataSourceDescription.
        """
        self.openapi_types = {
            'reference_id': str,
            'table_name': str,
            's3_reference_data_source_description': ReferenceDataSourceDescriptionS3ReferenceDataSourceDescription,
            'reference_schema': ReferenceDataSourceReferenceSchema
        }

        self.attribute_map = {
            'reference_id': 'ReferenceId',
            'table_name': 'TableName',
            's3_reference_data_source_description': 'S3ReferenceDataSourceDescription',
            'reference_schema': 'ReferenceSchema'
        }

        self._reference_id = reference_id
        self._table_name = table_name
        self._s3_reference_data_source_description = s3_reference_data_source_description
        self._reference_schema = reference_schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReferenceDataSourceDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReferenceDataSourceDescription of this ReferenceDataSourceDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reference_id(self):
        """Gets the reference_id of this ReferenceDataSourceDescription.


        :return: The reference_id of this ReferenceDataSourceDescription.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this ReferenceDataSourceDescription.


        :param reference_id: The reference_id of this ReferenceDataSourceDescription.
        :type reference_id: str
        """
        if reference_id is None:
            raise ValueError("Invalid value for `reference_id`, must not be `None`")

        self._reference_id = reference_id

    @property
    def table_name(self):
        """Gets the table_name of this ReferenceDataSourceDescription.


        :return: The table_name of this ReferenceDataSourceDescription.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this ReferenceDataSourceDescription.


        :param table_name: The table_name of this ReferenceDataSourceDescription.
        :type table_name: str
        """
        if table_name is None:
            raise ValueError("Invalid value for `table_name`, must not be `None`")

        self._table_name = table_name

    @property
    def s3_reference_data_source_description(self):
        """Gets the s3_reference_data_source_description of this ReferenceDataSourceDescription.


        :return: The s3_reference_data_source_description of this ReferenceDataSourceDescription.
        :rtype: ReferenceDataSourceDescriptionS3ReferenceDataSourceDescription
        """
        return self._s3_reference_data_source_description

    @s3_reference_data_source_description.setter
    def s3_reference_data_source_description(self, s3_reference_data_source_description):
        """Sets the s3_reference_data_source_description of this ReferenceDataSourceDescription.


        :param s3_reference_data_source_description: The s3_reference_data_source_description of this ReferenceDataSourceDescription.
        :type s3_reference_data_source_description: ReferenceDataSourceDescriptionS3ReferenceDataSourceDescription
        """
        if s3_reference_data_source_description is None:
            raise ValueError("Invalid value for `s3_reference_data_source_description`, must not be `None`")

        self._s3_reference_data_source_description = s3_reference_data_source_description

    @property
    def reference_schema(self):
        """Gets the reference_schema of this ReferenceDataSourceDescription.


        :return: The reference_schema of this ReferenceDataSourceDescription.
        :rtype: ReferenceDataSourceReferenceSchema
        """
        return self._reference_schema

    @reference_schema.setter
    def reference_schema(self, reference_schema):
        """Sets the reference_schema of this ReferenceDataSourceDescription.


        :param reference_schema: The reference_schema of this ReferenceDataSourceDescription.
        :type reference_schema: ReferenceDataSourceReferenceSchema
        """

        self._reference_schema = reference_schema
