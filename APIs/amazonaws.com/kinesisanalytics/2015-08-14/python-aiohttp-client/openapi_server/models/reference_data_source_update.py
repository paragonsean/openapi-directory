# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reference_data_source_update_reference_schema_update import ReferenceDataSourceUpdateReferenceSchemaUpdate
from openapi_server.models.reference_data_source_update_s3_reference_data_source_update import ReferenceDataSourceUpdateS3ReferenceDataSourceUpdate
from openapi_server import util


class ReferenceDataSourceUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reference_id: str=None, table_name_update: str=None, s3_reference_data_source_update: ReferenceDataSourceUpdateS3ReferenceDataSourceUpdate=None, reference_schema_update: ReferenceDataSourceUpdateReferenceSchemaUpdate=None):
        """ReferenceDataSourceUpdate - a model defined in OpenAPI

        :param reference_id: The reference_id of this ReferenceDataSourceUpdate.
        :param table_name_update: The table_name_update of this ReferenceDataSourceUpdate.
        :param s3_reference_data_source_update: The s3_reference_data_source_update of this ReferenceDataSourceUpdate.
        :param reference_schema_update: The reference_schema_update of this ReferenceDataSourceUpdate.
        """
        self.openapi_types = {
            'reference_id': str,
            'table_name_update': str,
            's3_reference_data_source_update': ReferenceDataSourceUpdateS3ReferenceDataSourceUpdate,
            'reference_schema_update': ReferenceDataSourceUpdateReferenceSchemaUpdate
        }

        self.attribute_map = {
            'reference_id': 'ReferenceId',
            'table_name_update': 'TableNameUpdate',
            's3_reference_data_source_update': 'S3ReferenceDataSourceUpdate',
            'reference_schema_update': 'ReferenceSchemaUpdate'
        }

        self._reference_id = reference_id
        self._table_name_update = table_name_update
        self._s3_reference_data_source_update = s3_reference_data_source_update
        self._reference_schema_update = reference_schema_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReferenceDataSourceUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReferenceDataSourceUpdate of this ReferenceDataSourceUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reference_id(self):
        """Gets the reference_id of this ReferenceDataSourceUpdate.


        :return: The reference_id of this ReferenceDataSourceUpdate.
        :rtype: str
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this ReferenceDataSourceUpdate.


        :param reference_id: The reference_id of this ReferenceDataSourceUpdate.
        :type reference_id: str
        """
        if reference_id is None:
            raise ValueError("Invalid value for `reference_id`, must not be `None`")

        self._reference_id = reference_id

    @property
    def table_name_update(self):
        """Gets the table_name_update of this ReferenceDataSourceUpdate.


        :return: The table_name_update of this ReferenceDataSourceUpdate.
        :rtype: str
        """
        return self._table_name_update

    @table_name_update.setter
    def table_name_update(self, table_name_update):
        """Sets the table_name_update of this ReferenceDataSourceUpdate.


        :param table_name_update: The table_name_update of this ReferenceDataSourceUpdate.
        :type table_name_update: str
        """

        self._table_name_update = table_name_update

    @property
    def s3_reference_data_source_update(self):
        """Gets the s3_reference_data_source_update of this ReferenceDataSourceUpdate.


        :return: The s3_reference_data_source_update of this ReferenceDataSourceUpdate.
        :rtype: ReferenceDataSourceUpdateS3ReferenceDataSourceUpdate
        """
        return self._s3_reference_data_source_update

    @s3_reference_data_source_update.setter
    def s3_reference_data_source_update(self, s3_reference_data_source_update):
        """Sets the s3_reference_data_source_update of this ReferenceDataSourceUpdate.


        :param s3_reference_data_source_update: The s3_reference_data_source_update of this ReferenceDataSourceUpdate.
        :type s3_reference_data_source_update: ReferenceDataSourceUpdateS3ReferenceDataSourceUpdate
        """

        self._s3_reference_data_source_update = s3_reference_data_source_update

    @property
    def reference_schema_update(self):
        """Gets the reference_schema_update of this ReferenceDataSourceUpdate.


        :return: The reference_schema_update of this ReferenceDataSourceUpdate.
        :rtype: ReferenceDataSourceUpdateReferenceSchemaUpdate
        """
        return self._reference_schema_update

    @reference_schema_update.setter
    def reference_schema_update(self, reference_schema_update):
        """Sets the reference_schema_update of this ReferenceDataSourceUpdate.


        :param reference_schema_update: The reference_schema_update of this ReferenceDataSourceUpdate.
        :type reference_schema_update: ReferenceDataSourceUpdateReferenceSchemaUpdate
        """

        self._reference_schema_update = reference_schema_update
