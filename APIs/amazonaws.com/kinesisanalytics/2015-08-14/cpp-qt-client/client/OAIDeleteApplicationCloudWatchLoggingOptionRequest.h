/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteApplicationCloudWatchLoggingOptionRequest.h
 *
 * 
 */

#ifndef OAIDeleteApplicationCloudWatchLoggingOptionRequest_H
#define OAIDeleteApplicationCloudWatchLoggingOptionRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteApplicationCloudWatchLoggingOptionRequest : public OAIObject {
public:
    OAIDeleteApplicationCloudWatchLoggingOptionRequest();
    OAIDeleteApplicationCloudWatchLoggingOptionRequest(QString json);
    ~OAIDeleteApplicationCloudWatchLoggingOptionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    qint32 getCurrentApplicationVersionId() const;
    void setCurrentApplicationVersionId(const qint32 &current_application_version_id);
    bool is_current_application_version_id_Set() const;
    bool is_current_application_version_id_Valid() const;

    QString getCloudWatchLoggingOptionId() const;
    void setCloudWatchLoggingOptionId(const QString &cloud_watch_logging_option_id);
    bool is_cloud_watch_logging_option_id_Set() const;
    bool is_cloud_watch_logging_option_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    qint32 m_current_application_version_id;
    bool m_current_application_version_id_isSet;
    bool m_current_application_version_id_isValid;

    QString m_cloud_watch_logging_option_id;
    bool m_cloud_watch_logging_option_id_isSet;
    bool m_cloud_watch_logging_option_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteApplicationCloudWatchLoggingOptionRequest)

#endif // OAIDeleteApplicationCloudWatchLoggingOptionRequest_H
