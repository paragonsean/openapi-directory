/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddApplicationOutputRequest_Output.h
 *
 * 
 */

#ifndef OAIAddApplicationOutputRequest_Output_H
#define OAIAddApplicationOutputRequest_Output_H

#include <QJsonObject>

#include "OAIOutput_DestinationSchema.h"
#include "OAIOutput_KinesisFirehoseOutput.h"
#include "OAIOutput_KinesisStreamsOutput.h"
#include "OAIOutput_LambdaOutput.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOutput_KinesisStreamsOutput;
class OAIOutput_KinesisFirehoseOutput;
class OAIOutput_LambdaOutput;
class OAIOutput_DestinationSchema;

class OAIAddApplicationOutputRequest_Output : public OAIObject {
public:
    OAIAddApplicationOutputRequest_Output();
    OAIAddApplicationOutputRequest_Output(QString json);
    ~OAIAddApplicationOutputRequest_Output() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOutput_KinesisStreamsOutput getKinesisStreamsOutput() const;
    void setKinesisStreamsOutput(const OAIOutput_KinesisStreamsOutput &kinesis_streams_output);
    bool is_kinesis_streams_output_Set() const;
    bool is_kinesis_streams_output_Valid() const;

    OAIOutput_KinesisFirehoseOutput getKinesisFirehoseOutput() const;
    void setKinesisFirehoseOutput(const OAIOutput_KinesisFirehoseOutput &kinesis_firehose_output);
    bool is_kinesis_firehose_output_Set() const;
    bool is_kinesis_firehose_output_Valid() const;

    OAIOutput_LambdaOutput getLambdaOutput() const;
    void setLambdaOutput(const OAIOutput_LambdaOutput &lambda_output);
    bool is_lambda_output_Set() const;
    bool is_lambda_output_Valid() const;

    OAIOutput_DestinationSchema getDestinationSchema() const;
    void setDestinationSchema(const OAIOutput_DestinationSchema &destination_schema);
    bool is_destination_schema_Set() const;
    bool is_destination_schema_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOutput_KinesisStreamsOutput m_kinesis_streams_output;
    bool m_kinesis_streams_output_isSet;
    bool m_kinesis_streams_output_isValid;

    OAIOutput_KinesisFirehoseOutput m_kinesis_firehose_output;
    bool m_kinesis_firehose_output_isSet;
    bool m_kinesis_firehose_output_isValid;

    OAIOutput_LambdaOutput m_lambda_output;
    bool m_lambda_output_isSet;
    bool m_lambda_output_isValid;

    OAIOutput_DestinationSchema m_destination_schema;
    bool m_destination_schema_isSet;
    bool m_destination_schema_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddApplicationOutputRequest_Output)

#endif // OAIAddApplicationOutputRequest_Output_H
