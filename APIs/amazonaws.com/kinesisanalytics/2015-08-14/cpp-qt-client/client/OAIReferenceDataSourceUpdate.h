/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceDataSourceUpdate.h
 *
 * When you update a reference data source configuration for an application, this object provides all the updated values (such as the source bucket name and object key name), the in-application table name that is created, and updated mapping information that maps the data in the Amazon S3 object to the in-application reference table that is created.
 */

#ifndef OAIReferenceDataSourceUpdate_H
#define OAIReferenceDataSourceUpdate_H

#include <QJsonObject>

#include "OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate.h"
#include "OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate;
class OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate;

class OAIReferenceDataSourceUpdate : public OAIObject {
public:
    OAIReferenceDataSourceUpdate();
    OAIReferenceDataSourceUpdate(QString json);
    ~OAIReferenceDataSourceUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReferenceId() const;
    void setReferenceId(const QString &reference_id);
    bool is_reference_id_Set() const;
    bool is_reference_id_Valid() const;

    QString getTableNameUpdate() const;
    void setTableNameUpdate(const QString &table_name_update);
    bool is_table_name_update_Set() const;
    bool is_table_name_update_Valid() const;

    OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate getS3ReferenceDataSourceUpdate() const;
    void setS3ReferenceDataSourceUpdate(const OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate &s3_reference_data_source_update);
    bool is_s3_reference_data_source_update_Set() const;
    bool is_s3_reference_data_source_update_Valid() const;

    OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate getReferenceSchemaUpdate() const;
    void setReferenceSchemaUpdate(const OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate &reference_schema_update);
    bool is_reference_schema_update_Set() const;
    bool is_reference_schema_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_reference_id;
    bool m_reference_id_isSet;
    bool m_reference_id_isValid;

    QString m_table_name_update;
    bool m_table_name_update_isSet;
    bool m_table_name_update_isValid;

    OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate m_s3_reference_data_source_update;
    bool m_s3_reference_data_source_update_isSet;
    bool m_s3_reference_data_source_update_isValid;

    OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate m_reference_schema_update;
    bool m_reference_schema_update_isSet;
    bool m_reference_schema_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceDataSourceUpdate)

#endif // OAIReferenceDataSourceUpdate_H
