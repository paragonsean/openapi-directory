/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationDetail.h
 *
 * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Provides a description of the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configuration.&lt;/p&gt;
 */

#ifndef OAIApplicationDetail_H
#define OAIApplicationDetail_H

#include <QJsonObject>

#include "OAIApplicationStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationDetail : public OAIObject {
public:
    OAIApplicationDetail();
    OAIApplicationDetail(QString json);
    ~OAIApplicationDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QString getApplicationDescription() const;
    void setApplicationDescription(const QString &application_description);
    bool is_application_description_Set() const;
    bool is_application_description_Valid() const;

    QString getApplicationArn() const;
    void setApplicationArn(const QString &application_arn);
    bool is_application_arn_Set() const;
    bool is_application_arn_Valid() const;

    OAIApplicationStatus getApplicationStatus() const;
    void setApplicationStatus(const OAIApplicationStatus &application_status);
    bool is_application_status_Set() const;
    bool is_application_status_Valid() const;

    QDateTime getCreateTimestamp() const;
    void setCreateTimestamp(const QDateTime &create_timestamp);
    bool is_create_timestamp_Set() const;
    bool is_create_timestamp_Valid() const;

    QDateTime getLastUpdateTimestamp() const;
    void setLastUpdateTimestamp(const QDateTime &last_update_timestamp);
    bool is_last_update_timestamp_Set() const;
    bool is_last_update_timestamp_Valid() const;

    QList getInputDescriptions() const;
    void setInputDescriptions(const QList &input_descriptions);
    bool is_input_descriptions_Set() const;
    bool is_input_descriptions_Valid() const;

    QList getOutputDescriptions() const;
    void setOutputDescriptions(const QList &output_descriptions);
    bool is_output_descriptions_Set() const;
    bool is_output_descriptions_Valid() const;

    QList getReferenceDataSourceDescriptions() const;
    void setReferenceDataSourceDescriptions(const QList &reference_data_source_descriptions);
    bool is_reference_data_source_descriptions_Set() const;
    bool is_reference_data_source_descriptions_Valid() const;

    QList getCloudWatchLoggingOptionDescriptions() const;
    void setCloudWatchLoggingOptionDescriptions(const QList &cloud_watch_logging_option_descriptions);
    bool is_cloud_watch_logging_option_descriptions_Set() const;
    bool is_cloud_watch_logging_option_descriptions_Valid() const;

    QString getApplicationCode() const;
    void setApplicationCode(const QString &application_code);
    bool is_application_code_Set() const;
    bool is_application_code_Valid() const;

    qint32 getApplicationVersionId() const;
    void setApplicationVersionId(const qint32 &application_version_id);
    bool is_application_version_id_Set() const;
    bool is_application_version_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QString m_application_description;
    bool m_application_description_isSet;
    bool m_application_description_isValid;

    QString m_application_arn;
    bool m_application_arn_isSet;
    bool m_application_arn_isValid;

    OAIApplicationStatus m_application_status;
    bool m_application_status_isSet;
    bool m_application_status_isValid;

    QDateTime m_create_timestamp;
    bool m_create_timestamp_isSet;
    bool m_create_timestamp_isValid;

    QDateTime m_last_update_timestamp;
    bool m_last_update_timestamp_isSet;
    bool m_last_update_timestamp_isValid;

    QList m_input_descriptions;
    bool m_input_descriptions_isSet;
    bool m_input_descriptions_isValid;

    QList m_output_descriptions;
    bool m_output_descriptions_isSet;
    bool m_output_descriptions_isValid;

    QList m_reference_data_source_descriptions;
    bool m_reference_data_source_descriptions_isSet;
    bool m_reference_data_source_descriptions_isValid;

    QList m_cloud_watch_logging_option_descriptions;
    bool m_cloud_watch_logging_option_descriptions_isSet;
    bool m_cloud_watch_logging_option_descriptions_isValid;

    QString m_application_code;
    bool m_application_code_isSet;
    bool m_application_code_isValid;

    qint32 m_application_version_id;
    bool m_application_version_id_isSet;
    bool m_application_version_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationDetail)

#endif // OAIApplicationDetail_H
