/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputConfiguration.h
 *
 * When you start your application, you provide this configuration, which identifies the input source and the point in the input source at which you want the application to start processing records.
 */

#ifndef OAIInputConfiguration_H
#define OAIInputConfiguration_H

#include <QJsonObject>

#include "OAIInputConfiguration_InputStartingPositionConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInputConfiguration_InputStartingPositionConfiguration;

class OAIInputConfiguration : public OAIObject {
public:
    OAIInputConfiguration();
    OAIInputConfiguration(QString json);
    ~OAIInputConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIInputConfiguration_InputStartingPositionConfiguration getInputStartingPositionConfiguration() const;
    void setInputStartingPositionConfiguration(const OAIInputConfiguration_InputStartingPositionConfiguration &input_starting_position_configuration);
    bool is_input_starting_position_configuration_Set() const;
    bool is_input_starting_position_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIInputConfiguration_InputStartingPositionConfiguration m_input_starting_position_configuration;
    bool m_input_starting_position_configuration_isSet;
    bool m_input_starting_position_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputConfiguration)

#endif // OAIInputConfiguration_H
