/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInput_InputSchema.h
 *
 * 
 */

#ifndef OAIInput_InputSchema_H
#define OAIInput_InputSchema_H

#include <QJsonObject>

#include "OAISourceSchema_RecordFormat.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceSchema_RecordFormat;

class OAIInput_InputSchema : public OAIObject {
public:
    OAIInput_InputSchema();
    OAIInput_InputSchema(QString json);
    ~OAIInput_InputSchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISourceSchema_RecordFormat getRecordFormat() const;
    void setRecordFormat(const OAISourceSchema_RecordFormat &record_format);
    bool is_record_format_Set() const;
    bool is_record_format_Valid() const;

    QString getRecordEncoding() const;
    void setRecordEncoding(const QString &record_encoding);
    bool is_record_encoding_Set() const;
    bool is_record_encoding_Valid() const;

    QList getRecordColumns() const;
    void setRecordColumns(const QList &record_columns);
    bool is_record_columns_Set() const;
    bool is_record_columns_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISourceSchema_RecordFormat m_record_format;
    bool m_record_format_isSet;
    bool m_record_format_isValid;

    QString m_record_encoding;
    bool m_record_encoding_isSet;
    bool m_record_encoding_isValid;

    QList m_record_columns;
    bool m_record_columns_isSet;
    bool m_record_columns_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInput_InputSchema)

#endif // OAIInput_InputSchema_H
