/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputUpdate_InputSchemaUpdate.h
 *
 * 
 */

#ifndef OAIInputUpdate_InputSchemaUpdate_H
#define OAIInputUpdate_InputSchemaUpdate_H

#include <QJsonObject>

#include "OAISourceSchema_RecordFormat.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceSchema_RecordFormat;

class OAIInputUpdate_InputSchemaUpdate : public OAIObject {
public:
    OAIInputUpdate_InputSchemaUpdate();
    OAIInputUpdate_InputSchemaUpdate(QString json);
    ~OAIInputUpdate_InputSchemaUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISourceSchema_RecordFormat getRecordFormatUpdate() const;
    void setRecordFormatUpdate(const OAISourceSchema_RecordFormat &record_format_update);
    bool is_record_format_update_Set() const;
    bool is_record_format_update_Valid() const;

    QString getRecordEncodingUpdate() const;
    void setRecordEncodingUpdate(const QString &record_encoding_update);
    bool is_record_encoding_update_Set() const;
    bool is_record_encoding_update_Valid() const;

    QList getRecordColumnUpdates() const;
    void setRecordColumnUpdates(const QList &record_column_updates);
    bool is_record_column_updates_Set() const;
    bool is_record_column_updates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISourceSchema_RecordFormat m_record_format_update;
    bool m_record_format_update_isSet;
    bool m_record_format_update_isValid;

    QString m_record_encoding_update;
    bool m_record_encoding_update_isSet;
    bool m_record_encoding_update_isValid;

    QList m_record_column_updates;
    bool m_record_column_updates_isSet;
    bool m_record_column_updates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputUpdate_InputSchemaUpdate)

#endif // OAIInputUpdate_InputSchemaUpdate_H
