/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutputDescription.h
 *
 * Describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be an Amazon Kinesis stream or an Amazon Kinesis Firehose delivery stream. 
 */

#ifndef OAIOutputDescription_H
#define OAIOutputDescription_H

#include <QJsonObject>

#include "OAIOutputDescription_DestinationSchema.h"
#include "OAIOutputDescription_KinesisFirehoseOutputDescription.h"
#include "OAIOutputDescription_KinesisStreamsOutputDescription.h"
#include "OAIOutputDescription_LambdaOutputDescription.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOutputDescription_KinesisStreamsOutputDescription;
class OAIOutputDescription_KinesisFirehoseOutputDescription;
class OAIOutputDescription_LambdaOutputDescription;
class OAIOutputDescription_DestinationSchema;

class OAIOutputDescription : public OAIObject {
public:
    OAIOutputDescription();
    OAIOutputDescription(QString json);
    ~OAIOutputDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOutputId() const;
    void setOutputId(const QString &output_id);
    bool is_output_id_Set() const;
    bool is_output_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOutputDescription_KinesisStreamsOutputDescription getKinesisStreamsOutputDescription() const;
    void setKinesisStreamsOutputDescription(const OAIOutputDescription_KinesisStreamsOutputDescription &kinesis_streams_output_description);
    bool is_kinesis_streams_output_description_Set() const;
    bool is_kinesis_streams_output_description_Valid() const;

    OAIOutputDescription_KinesisFirehoseOutputDescription getKinesisFirehoseOutputDescription() const;
    void setKinesisFirehoseOutputDescription(const OAIOutputDescription_KinesisFirehoseOutputDescription &kinesis_firehose_output_description);
    bool is_kinesis_firehose_output_description_Set() const;
    bool is_kinesis_firehose_output_description_Valid() const;

    OAIOutputDescription_LambdaOutputDescription getLambdaOutputDescription() const;
    void setLambdaOutputDescription(const OAIOutputDescription_LambdaOutputDescription &lambda_output_description);
    bool is_lambda_output_description_Set() const;
    bool is_lambda_output_description_Valid() const;

    OAIOutputDescription_DestinationSchema getDestinationSchema() const;
    void setDestinationSchema(const OAIOutputDescription_DestinationSchema &destination_schema);
    bool is_destination_schema_Set() const;
    bool is_destination_schema_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_output_id;
    bool m_output_id_isSet;
    bool m_output_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOutputDescription_KinesisStreamsOutputDescription m_kinesis_streams_output_description;
    bool m_kinesis_streams_output_description_isSet;
    bool m_kinesis_streams_output_description_isValid;

    OAIOutputDescription_KinesisFirehoseOutputDescription m_kinesis_firehose_output_description;
    bool m_kinesis_firehose_output_description_isSet;
    bool m_kinesis_firehose_output_description_isValid;

    OAIOutputDescription_LambdaOutputDescription m_lambda_output_description;
    bool m_lambda_output_description_isSet;
    bool m_lambda_output_description_isValid;

    OAIOutputDescription_DestinationSchema m_destination_schema;
    bool m_destination_schema_isSet;
    bool m_destination_schema_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutputDescription)

#endif // OAIOutputDescription_H
