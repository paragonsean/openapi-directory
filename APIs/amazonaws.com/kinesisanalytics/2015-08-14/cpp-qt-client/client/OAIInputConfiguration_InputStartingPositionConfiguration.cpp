/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputConfiguration_InputStartingPositionConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputConfiguration_InputStartingPositionConfiguration::OAIInputConfiguration_InputStartingPositionConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputConfiguration_InputStartingPositionConfiguration::OAIInputConfiguration_InputStartingPositionConfiguration() {
    this->initializeModel();
}

OAIInputConfiguration_InputStartingPositionConfiguration::~OAIInputConfiguration_InputStartingPositionConfiguration() {}

void OAIInputConfiguration_InputStartingPositionConfiguration::initializeModel() {

    m_input_starting_position_isSet = false;
    m_input_starting_position_isValid = false;
}

void OAIInputConfiguration_InputStartingPositionConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputConfiguration_InputStartingPositionConfiguration::fromJsonObject(QJsonObject json) {

    m_input_starting_position_isValid = ::OpenAPI::fromJsonValue(m_input_starting_position, json[QString("InputStartingPosition")]);
    m_input_starting_position_isSet = !json[QString("InputStartingPosition")].isNull() && m_input_starting_position_isValid;
}

QString OAIInputConfiguration_InputStartingPositionConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputConfiguration_InputStartingPositionConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_input_starting_position.isSet()) {
        obj.insert(QString("InputStartingPosition"), ::OpenAPI::toJsonValue(m_input_starting_position));
    }
    return obj;
}

OAIInputStartingPosition OAIInputConfiguration_InputStartingPositionConfiguration::getInputStartingPosition() const {
    return m_input_starting_position;
}
void OAIInputConfiguration_InputStartingPositionConfiguration::setInputStartingPosition(const OAIInputStartingPosition &input_starting_position) {
    m_input_starting_position = input_starting_position;
    m_input_starting_position_isSet = true;
}

bool OAIInputConfiguration_InputStartingPositionConfiguration::is_input_starting_position_Set() const{
    return m_input_starting_position_isSet;
}

bool OAIInputConfiguration_InputStartingPositionConfiguration::is_input_starting_position_Valid() const{
    return m_input_starting_position_isValid;
}

bool OAIInputConfiguration_InputStartingPositionConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_starting_position.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputConfiguration_InputStartingPositionConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
