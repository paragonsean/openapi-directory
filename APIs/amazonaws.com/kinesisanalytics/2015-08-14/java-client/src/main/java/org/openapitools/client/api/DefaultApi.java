/*
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AddApplicationCloudWatchLoggingOptionRequest;
import org.openapitools.client.model.AddApplicationInputProcessingConfigurationRequest;
import org.openapitools.client.model.AddApplicationInputRequest;
import org.openapitools.client.model.AddApplicationOutputRequest;
import org.openapitools.client.model.AddApplicationReferenceDataSourceRequest;
import org.openapitools.client.model.CreateApplicationRequest;
import org.openapitools.client.model.CreateApplicationResponse;
import org.openapitools.client.model.DeleteApplicationCloudWatchLoggingOptionRequest;
import org.openapitools.client.model.DeleteApplicationInputProcessingConfigurationRequest;
import org.openapitools.client.model.DeleteApplicationOutputRequest;
import org.openapitools.client.model.DeleteApplicationReferenceDataSourceRequest;
import org.openapitools.client.model.DeleteApplicationRequest;
import org.openapitools.client.model.DescribeApplicationRequest;
import org.openapitools.client.model.DescribeApplicationResponse;
import org.openapitools.client.model.DiscoverInputSchemaRequest;
import org.openapitools.client.model.DiscoverInputSchemaResponse;
import org.openapitools.client.model.ListApplicationsRequest;
import org.openapitools.client.model.ListApplicationsResponse;
import org.openapitools.client.model.ListTagsForResourceRequest;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.StartApplicationRequest;
import org.openapitools.client.model.StopApplicationRequest;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UntagResourceRequest;
import org.openapitools.client.model.UpdateApplicationRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addApplicationCloudWatchLoggingOption
     * @param xAmzTarget  (required)
     * @param addApplicationCloudWatchLoggingOptionRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationCloudWatchLoggingOptionCall(String xAmzTarget, AddApplicationCloudWatchLoggingOptionRequest addApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = addApplicationCloudWatchLoggingOptionRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.AddApplicationCloudWatchLoggingOption";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addApplicationCloudWatchLoggingOptionValidateBeforeCall(String xAmzTarget, AddApplicationCloudWatchLoggingOptionRequest addApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling addApplicationCloudWatchLoggingOption(Async)");
        }

        // verify the required parameter 'addApplicationCloudWatchLoggingOptionRequest' is set
        if (addApplicationCloudWatchLoggingOptionRequest == null) {
            throw new ApiException("Missing the required parameter 'addApplicationCloudWatchLoggingOptionRequest' when calling addApplicationCloudWatchLoggingOption(Async)");
        }

        return addApplicationCloudWatchLoggingOptionCall(xAmzTarget, addApplicationCloudWatchLoggingOptionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds a CloudWatch log stream to monitor application configuration errors. For more information about using CloudWatch log streams with Amazon Kinesis Analytics applications, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/cloudwatch-logs.html\&quot;&gt;Working with Amazon CloudWatch Logs&lt;/a&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationCloudWatchLoggingOptionRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object addApplicationCloudWatchLoggingOption(String xAmzTarget, AddApplicationCloudWatchLoggingOptionRequest addApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = addApplicationCloudWatchLoggingOptionWithHttpInfo(xAmzTarget, addApplicationCloudWatchLoggingOptionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds a CloudWatch log stream to monitor application configuration errors. For more information about using CloudWatch log streams with Amazon Kinesis Analytics applications, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/cloudwatch-logs.html\&quot;&gt;Working with Amazon CloudWatch Logs&lt;/a&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationCloudWatchLoggingOptionRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> addApplicationCloudWatchLoggingOptionWithHttpInfo(String xAmzTarget, AddApplicationCloudWatchLoggingOptionRequest addApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = addApplicationCloudWatchLoggingOptionValidateBeforeCall(xAmzTarget, addApplicationCloudWatchLoggingOptionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds a CloudWatch log stream to monitor application configuration errors. For more information about using CloudWatch log streams with Amazon Kinesis Analytics applications, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/cloudwatch-logs.html\&quot;&gt;Working with Amazon CloudWatch Logs&lt;/a&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationCloudWatchLoggingOptionRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationCloudWatchLoggingOptionAsync(String xAmzTarget, AddApplicationCloudWatchLoggingOptionRequest addApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = addApplicationCloudWatchLoggingOptionValidateBeforeCall(xAmzTarget, addApplicationCloudWatchLoggingOptionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addApplicationInput
     * @param xAmzTarget  (required)
     * @param addApplicationInputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationInputCall(String xAmzTarget, AddApplicationInputRequest addApplicationInputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = addApplicationInputRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.AddApplicationInput";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addApplicationInputValidateBeforeCall(String xAmzTarget, AddApplicationInputRequest addApplicationInputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling addApplicationInput(Async)");
        }

        // verify the required parameter 'addApplicationInputRequest' is set
        if (addApplicationInputRequest == null) {
            throw new ApiException("Missing the required parameter 'addApplicationInputRequest' when calling addApplicationInput(Async)");
        }

        return addApplicationInputCall(xAmzTarget, addApplicationInputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; Adds a streaming source to your Amazon Kinesis application. For conceptual information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;You can add a streaming source either when you create an application or you can use this operation to add a streaming source after you create an application. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_CreateApplication.html\&quot;&gt;CreateApplication&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation to find the current application version. &lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:AddApplicationInput&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationInputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object addApplicationInput(String xAmzTarget, AddApplicationInputRequest addApplicationInputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = addApplicationInputWithHttpInfo(xAmzTarget, addApplicationInputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; Adds a streaming source to your Amazon Kinesis application. For conceptual information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;You can add a streaming source either when you create an application or you can use this operation to add a streaming source after you create an application. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_CreateApplication.html\&quot;&gt;CreateApplication&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation to find the current application version. &lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:AddApplicationInput&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationInputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> addApplicationInputWithHttpInfo(String xAmzTarget, AddApplicationInputRequest addApplicationInputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = addApplicationInputValidateBeforeCall(xAmzTarget, addApplicationInputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; Adds a streaming source to your Amazon Kinesis application. For conceptual information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;You can add a streaming source either when you create an application or you can use this operation to add a streaming source after you create an application. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_CreateApplication.html\&quot;&gt;CreateApplication&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation to find the current application version. &lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:AddApplicationInput&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationInputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationInputAsync(String xAmzTarget, AddApplicationInputRequest addApplicationInputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = addApplicationInputValidateBeforeCall(xAmzTarget, addApplicationInputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addApplicationInputProcessingConfiguration
     * @param xAmzTarget  (required)
     * @param addApplicationInputProcessingConfigurationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationInputProcessingConfigurationCall(String xAmzTarget, AddApplicationInputProcessingConfigurationRequest addApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = addApplicationInputProcessingConfigurationRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.AddApplicationInputProcessingConfiguration";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addApplicationInputProcessingConfigurationValidateBeforeCall(String xAmzTarget, AddApplicationInputProcessingConfigurationRequest addApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling addApplicationInputProcessingConfiguration(Async)");
        }

        // verify the required parameter 'addApplicationInputProcessingConfigurationRequest' is set
        if (addApplicationInputProcessingConfigurationRequest == null) {
            throw new ApiException("Missing the required parameter 'addApplicationInputProcessingConfigurationRequest' when calling addApplicationInputProcessingConfiguration(Async)");
        }

        return addApplicationInputProcessingConfigurationCall(xAmzTarget, addApplicationInputProcessingConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html\&quot;&gt;InputProcessingConfiguration&lt;/a&gt; to an application. An input processor preprocesses records on the input stream before the application&#39;s SQL code executes. Currently, the only input processor available is &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lambda/\&quot;&gt;AWS Lambda&lt;/a&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationInputProcessingConfigurationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object addApplicationInputProcessingConfiguration(String xAmzTarget, AddApplicationInputProcessingConfigurationRequest addApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = addApplicationInputProcessingConfigurationWithHttpInfo(xAmzTarget, addApplicationInputProcessingConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html\&quot;&gt;InputProcessingConfiguration&lt;/a&gt; to an application. An input processor preprocesses records on the input stream before the application&#39;s SQL code executes. Currently, the only input processor available is &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lambda/\&quot;&gt;AWS Lambda&lt;/a&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationInputProcessingConfigurationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> addApplicationInputProcessingConfigurationWithHttpInfo(String xAmzTarget, AddApplicationInputProcessingConfigurationRequest addApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = addApplicationInputProcessingConfigurationValidateBeforeCall(xAmzTarget, addApplicationInputProcessingConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html\&quot;&gt;InputProcessingConfiguration&lt;/a&gt; to an application. An input processor preprocesses records on the input stream before the application&#39;s SQL code executes. Currently, the only input processor available is &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lambda/\&quot;&gt;AWS Lambda&lt;/a&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationInputProcessingConfigurationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationInputProcessingConfigurationAsync(String xAmzTarget, AddApplicationInputProcessingConfigurationRequest addApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = addApplicationInputProcessingConfigurationValidateBeforeCall(xAmzTarget, addApplicationInputProcessingConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addApplicationOutput
     * @param xAmzTarget  (required)
     * @param addApplicationOutputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationOutputCall(String xAmzTarget, AddApplicationOutputRequest addApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = addApplicationOutputRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.AddApplicationOutput";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addApplicationOutputValidateBeforeCall(String xAmzTarget, AddApplicationOutputRequest addApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling addApplicationOutput(Async)");
        }

        // verify the required parameter 'addApplicationOutputRequest' is set
        if (addApplicationOutputRequest == null) {
            throw new ApiException("Missing the required parameter 'addApplicationOutputRequest' when calling addApplicationOutput(Async)");
        }

        return addApplicationOutputCall(xAmzTarget, addApplicationOutputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds an external destination to your Amazon Kinesis Analytics application.&lt;/p&gt; &lt;p&gt;If you want Amazon Kinesis Analytics to deliver data from an in-application stream within your application to an external destination (such as an Amazon Kinesis stream, an Amazon Kinesis Firehose delivery stream, or an AWS Lambda function), you add the relevant configuration to your application using this operation. You can configure one or more outputs for your application. Each output configuration maps an in-application stream and an external destination.&lt;/p&gt; &lt;p&gt; You can use one of the output configurations to deliver data from your in-application error stream to an external destination so that you can analyze the errors. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html\&quot;&gt;Understanding Application Output (Destination)&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation to find the current application version.&lt;/p&gt; &lt;p&gt;For the limits on the number of application inputs and outputs you can configure, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/limits.html\&quot;&gt;Limits&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:AddApplicationOutput&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationOutputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object addApplicationOutput(String xAmzTarget, AddApplicationOutputRequest addApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = addApplicationOutputWithHttpInfo(xAmzTarget, addApplicationOutputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds an external destination to your Amazon Kinesis Analytics application.&lt;/p&gt; &lt;p&gt;If you want Amazon Kinesis Analytics to deliver data from an in-application stream within your application to an external destination (such as an Amazon Kinesis stream, an Amazon Kinesis Firehose delivery stream, or an AWS Lambda function), you add the relevant configuration to your application using this operation. You can configure one or more outputs for your application. Each output configuration maps an in-application stream and an external destination.&lt;/p&gt; &lt;p&gt; You can use one of the output configurations to deliver data from your in-application error stream to an external destination so that you can analyze the errors. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html\&quot;&gt;Understanding Application Output (Destination)&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation to find the current application version.&lt;/p&gt; &lt;p&gt;For the limits on the number of application inputs and outputs you can configure, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/limits.html\&quot;&gt;Limits&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:AddApplicationOutput&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationOutputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> addApplicationOutputWithHttpInfo(String xAmzTarget, AddApplicationOutputRequest addApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = addApplicationOutputValidateBeforeCall(xAmzTarget, addApplicationOutputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds an external destination to your Amazon Kinesis Analytics application.&lt;/p&gt; &lt;p&gt;If you want Amazon Kinesis Analytics to deliver data from an in-application stream within your application to an external destination (such as an Amazon Kinesis stream, an Amazon Kinesis Firehose delivery stream, or an AWS Lambda function), you add the relevant configuration to your application using this operation. You can configure one or more outputs for your application. Each output configuration maps an in-application stream and an external destination.&lt;/p&gt; &lt;p&gt; You can use one of the output configurations to deliver data from your in-application error stream to an external destination so that you can analyze the errors. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html\&quot;&gt;Understanding Application Output (Destination)&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation to find the current application version.&lt;/p&gt; &lt;p&gt;For the limits on the number of application inputs and outputs you can configure, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/limits.html\&quot;&gt;Limits&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:AddApplicationOutput&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationOutputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationOutputAsync(String xAmzTarget, AddApplicationOutputRequest addApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = addApplicationOutputValidateBeforeCall(xAmzTarget, addApplicationOutputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addApplicationReferenceDataSource
     * @param xAmzTarget  (required)
     * @param addApplicationReferenceDataSourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationReferenceDataSourceCall(String xAmzTarget, AddApplicationReferenceDataSourceRequest addApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = addApplicationReferenceDataSourceRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.AddApplicationReferenceDataSource";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addApplicationReferenceDataSourceValidateBeforeCall(String xAmzTarget, AddApplicationReferenceDataSourceRequest addApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling addApplicationReferenceDataSource(Async)");
        }

        // verify the required parameter 'addApplicationReferenceDataSourceRequest' is set
        if (addApplicationReferenceDataSourceRequest == null) {
            throw new ApiException("Missing the required parameter 'addApplicationReferenceDataSourceRequest' when calling addApplicationReferenceDataSource(Async)");
        }

        return addApplicationReferenceDataSourceCall(xAmzTarget, addApplicationReferenceDataSourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds a reference data source to an existing application.&lt;/p&gt; &lt;p&gt;Amazon Kinesis Analytics reads reference data (that is, an Amazon S3 object) and creates an in-application table within your application. In the request, you provide the source (S3 bucket name and object key name), name of the in-application table to create, and the necessary mapping information that describes how data in Amazon S3 object maps to columns in the resulting in-application table.&lt;/p&gt; &lt;p&gt; For conceptual information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. For the limits on data sources you can add to your application, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/limits.html\&quot;&gt;Limits&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:AddApplicationOutput&lt;/code&gt; action. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationReferenceDataSourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object addApplicationReferenceDataSource(String xAmzTarget, AddApplicationReferenceDataSourceRequest addApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = addApplicationReferenceDataSourceWithHttpInfo(xAmzTarget, addApplicationReferenceDataSourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds a reference data source to an existing application.&lt;/p&gt; &lt;p&gt;Amazon Kinesis Analytics reads reference data (that is, an Amazon S3 object) and creates an in-application table within your application. In the request, you provide the source (S3 bucket name and object key name), name of the in-application table to create, and the necessary mapping information that describes how data in Amazon S3 object maps to columns in the resulting in-application table.&lt;/p&gt; &lt;p&gt; For conceptual information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. For the limits on data sources you can add to your application, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/limits.html\&quot;&gt;Limits&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:AddApplicationOutput&lt;/code&gt; action. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationReferenceDataSourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> addApplicationReferenceDataSourceWithHttpInfo(String xAmzTarget, AddApplicationReferenceDataSourceRequest addApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = addApplicationReferenceDataSourceValidateBeforeCall(xAmzTarget, addApplicationReferenceDataSourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Adds a reference data source to an existing application.&lt;/p&gt; &lt;p&gt;Amazon Kinesis Analytics reads reference data (that is, an Amazon S3 object) and creates an in-application table within your application. In the request, you provide the source (S3 bucket name and object key name), name of the in-application table to create, and the necessary mapping information that describes how data in Amazon S3 object maps to columns in the resulting in-application table.&lt;/p&gt; &lt;p&gt; For conceptual information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. For the limits on data sources you can add to your application, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/limits.html\&quot;&gt;Limits&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:AddApplicationOutput&lt;/code&gt; action. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param addApplicationReferenceDataSourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addApplicationReferenceDataSourceAsync(String xAmzTarget, AddApplicationReferenceDataSourceRequest addApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = addApplicationReferenceDataSourceValidateBeforeCall(xAmzTarget, addApplicationReferenceDataSourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for createApplication
     * @param xAmzTarget  (required)
     * @param createApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> LimitExceededException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createApplicationCall(String xAmzTarget, CreateApplicationRequest createApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createApplicationRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.CreateApplication";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createApplicationValidateBeforeCall(String xAmzTarget, CreateApplicationRequest createApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling createApplication(Async)");
        }

        // verify the required parameter 'createApplicationRequest' is set
        if (createApplicationRequest == null) {
            throw new ApiException("Missing the required parameter 'createApplicationRequest' when calling createApplication(Async)");
        }

        return createApplicationCall(xAmzTarget, createApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; Creates an Amazon Kinesis Analytics application. You can configure each application with one streaming source as input, application code to process the input, and up to three destinations where you want Amazon Kinesis Analytics to write the output data from your application. For an overview, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works.html\&quot;&gt;How it Works&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;In the input configuration, you map the streaming source to an in-application stream, which you can think of as a constantly updating table. In the mapping, you must provide a schema for the in-application stream and map each data column in the in-application stream to a data element in the streaming source.&lt;/p&gt; &lt;p&gt;Your application code is one or more SQL statements that read input data, transform it, and generate output. Your application code can create one or more SQL artifacts like SQL streams or pumps.&lt;/p&gt; &lt;p&gt;In the output configuration, you can configure the application to write data from in-application streams created in your applications to up to three destinations.&lt;/p&gt; &lt;p&gt; To read data from your source stream or write data to destination streams, Amazon Kinesis Analytics needs your permissions. You grant these permissions by creating IAM roles. This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:CreateApplication&lt;/code&gt; action. &lt;/p&gt; &lt;p&gt; For introductory exercises to create an Amazon Kinesis Analytics application, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/getting-started.html\&quot;&gt;Getting Started&lt;/a&gt;. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param createApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return CreateApplicationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> LimitExceededException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public CreateApplicationResponse createApplication(String xAmzTarget, CreateApplicationRequest createApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<CreateApplicationResponse> localVarResp = createApplicationWithHttpInfo(xAmzTarget, createApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; Creates an Amazon Kinesis Analytics application. You can configure each application with one streaming source as input, application code to process the input, and up to three destinations where you want Amazon Kinesis Analytics to write the output data from your application. For an overview, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works.html\&quot;&gt;How it Works&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;In the input configuration, you map the streaming source to an in-application stream, which you can think of as a constantly updating table. In the mapping, you must provide a schema for the in-application stream and map each data column in the in-application stream to a data element in the streaming source.&lt;/p&gt; &lt;p&gt;Your application code is one or more SQL statements that read input data, transform it, and generate output. Your application code can create one or more SQL artifacts like SQL streams or pumps.&lt;/p&gt; &lt;p&gt;In the output configuration, you can configure the application to write data from in-application streams created in your applications to up to three destinations.&lt;/p&gt; &lt;p&gt; To read data from your source stream or write data to destination streams, Amazon Kinesis Analytics needs your permissions. You grant these permissions by creating IAM roles. This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:CreateApplication&lt;/code&gt; action. &lt;/p&gt; &lt;p&gt; For introductory exercises to create an Amazon Kinesis Analytics application, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/getting-started.html\&quot;&gt;Getting Started&lt;/a&gt;. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param createApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;CreateApplicationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> LimitExceededException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CreateApplicationResponse> createApplicationWithHttpInfo(String xAmzTarget, CreateApplicationRequest createApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = createApplicationValidateBeforeCall(xAmzTarget, createApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<CreateApplicationResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; Creates an Amazon Kinesis Analytics application. You can configure each application with one streaming source as input, application code to process the input, and up to three destinations where you want Amazon Kinesis Analytics to write the output data from your application. For an overview, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works.html\&quot;&gt;How it Works&lt;/a&gt;. &lt;/p&gt; &lt;p&gt;In the input configuration, you map the streaming source to an in-application stream, which you can think of as a constantly updating table. In the mapping, you must provide a schema for the in-application stream and map each data column in the in-application stream to a data element in the streaming source.&lt;/p&gt; &lt;p&gt;Your application code is one or more SQL statements that read input data, transform it, and generate output. Your application code can create one or more SQL artifacts like SQL streams or pumps.&lt;/p&gt; &lt;p&gt;In the output configuration, you can configure the application to write data from in-application streams created in your applications to up to three destinations.&lt;/p&gt; &lt;p&gt; To read data from your source stream or write data to destination streams, Amazon Kinesis Analytics needs your permissions. You grant these permissions by creating IAM roles. This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:CreateApplication&lt;/code&gt; action. &lt;/p&gt; &lt;p&gt; For introductory exercises to create an Amazon Kinesis Analytics application, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/getting-started.html\&quot;&gt;Getting Started&lt;/a&gt;. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param createApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> LimitExceededException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createApplicationAsync(String xAmzTarget, CreateApplicationRequest createApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<CreateApplicationResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = createApplicationValidateBeforeCall(xAmzTarget, createApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<CreateApplicationResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteApplication
     * @param xAmzTarget  (required)
     * @param deleteApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationCall(String xAmzTarget, DeleteApplicationRequest deleteApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = deleteApplicationRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.DeleteApplication";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteApplicationValidateBeforeCall(String xAmzTarget, DeleteApplicationRequest deleteApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling deleteApplication(Async)");
        }

        // verify the required parameter 'deleteApplicationRequest' is set
        if (deleteApplicationRequest == null) {
            throw new ApiException("Missing the required parameter 'deleteApplicationRequest' when calling deleteApplication(Async)");
        }

        return deleteApplicationCall(xAmzTarget, deleteApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes the specified application. Amazon Kinesis Analytics halts application execution and deletes the application, including any application artifacts (such as in-application streams, reference table, and application code).&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DeleteApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object deleteApplication(String xAmzTarget, DeleteApplicationRequest deleteApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = deleteApplicationWithHttpInfo(xAmzTarget, deleteApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes the specified application. Amazon Kinesis Analytics halts application execution and deletes the application, including any application artifacts (such as in-application streams, reference table, and application code).&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DeleteApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> deleteApplicationWithHttpInfo(String xAmzTarget, DeleteApplicationRequest deleteApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = deleteApplicationValidateBeforeCall(xAmzTarget, deleteApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes the specified application. Amazon Kinesis Analytics halts application execution and deletes the application, including any application artifacts (such as in-application streams, reference table, and application code).&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DeleteApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationAsync(String xAmzTarget, DeleteApplicationRequest deleteApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteApplicationValidateBeforeCall(xAmzTarget, deleteApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteApplicationCloudWatchLoggingOption
     * @param xAmzTarget  (required)
     * @param deleteApplicationCloudWatchLoggingOptionRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationCloudWatchLoggingOptionCall(String xAmzTarget, DeleteApplicationCloudWatchLoggingOptionRequest deleteApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = deleteApplicationCloudWatchLoggingOptionRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.DeleteApplicationCloudWatchLoggingOption";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteApplicationCloudWatchLoggingOptionValidateBeforeCall(String xAmzTarget, DeleteApplicationCloudWatchLoggingOptionRequest deleteApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling deleteApplicationCloudWatchLoggingOption(Async)");
        }

        // verify the required parameter 'deleteApplicationCloudWatchLoggingOptionRequest' is set
        if (deleteApplicationCloudWatchLoggingOptionRequest == null) {
            throw new ApiException("Missing the required parameter 'deleteApplicationCloudWatchLoggingOptionRequest' when calling deleteApplicationCloudWatchLoggingOption(Async)");
        }

        return deleteApplicationCloudWatchLoggingOptionCall(xAmzTarget, deleteApplicationCloudWatchLoggingOptionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes a CloudWatch log stream from an application. For more information about using CloudWatch log streams with Amazon Kinesis Analytics applications, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/cloudwatch-logs.html\&quot;&gt;Working with Amazon CloudWatch Logs&lt;/a&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationCloudWatchLoggingOptionRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object deleteApplicationCloudWatchLoggingOption(String xAmzTarget, DeleteApplicationCloudWatchLoggingOptionRequest deleteApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = deleteApplicationCloudWatchLoggingOptionWithHttpInfo(xAmzTarget, deleteApplicationCloudWatchLoggingOptionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes a CloudWatch log stream from an application. For more information about using CloudWatch log streams with Amazon Kinesis Analytics applications, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/cloudwatch-logs.html\&quot;&gt;Working with Amazon CloudWatch Logs&lt;/a&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationCloudWatchLoggingOptionRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> deleteApplicationCloudWatchLoggingOptionWithHttpInfo(String xAmzTarget, DeleteApplicationCloudWatchLoggingOptionRequest deleteApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = deleteApplicationCloudWatchLoggingOptionValidateBeforeCall(xAmzTarget, deleteApplicationCloudWatchLoggingOptionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes a CloudWatch log stream from an application. For more information about using CloudWatch log streams with Amazon Kinesis Analytics applications, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/cloudwatch-logs.html\&quot;&gt;Working with Amazon CloudWatch Logs&lt;/a&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationCloudWatchLoggingOptionRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationCloudWatchLoggingOptionAsync(String xAmzTarget, DeleteApplicationCloudWatchLoggingOptionRequest deleteApplicationCloudWatchLoggingOptionRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteApplicationCloudWatchLoggingOptionValidateBeforeCall(xAmzTarget, deleteApplicationCloudWatchLoggingOptionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteApplicationInputProcessingConfiguration
     * @param xAmzTarget  (required)
     * @param deleteApplicationInputProcessingConfigurationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationInputProcessingConfigurationCall(String xAmzTarget, DeleteApplicationInputProcessingConfigurationRequest deleteApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = deleteApplicationInputProcessingConfigurationRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.DeleteApplicationInputProcessingConfiguration";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteApplicationInputProcessingConfigurationValidateBeforeCall(String xAmzTarget, DeleteApplicationInputProcessingConfigurationRequest deleteApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling deleteApplicationInputProcessingConfiguration(Async)");
        }

        // verify the required parameter 'deleteApplicationInputProcessingConfigurationRequest' is set
        if (deleteApplicationInputProcessingConfigurationRequest == null) {
            throw new ApiException("Missing the required parameter 'deleteApplicationInputProcessingConfigurationRequest' when calling deleteApplicationInputProcessingConfiguration(Async)");
        }

        return deleteApplicationInputProcessingConfigurationCall(xAmzTarget, deleteApplicationInputProcessingConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html\&quot;&gt;InputProcessingConfiguration&lt;/a&gt; from an input.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationInputProcessingConfigurationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object deleteApplicationInputProcessingConfiguration(String xAmzTarget, DeleteApplicationInputProcessingConfigurationRequest deleteApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = deleteApplicationInputProcessingConfigurationWithHttpInfo(xAmzTarget, deleteApplicationInputProcessingConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html\&quot;&gt;InputProcessingConfiguration&lt;/a&gt; from an input.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationInputProcessingConfigurationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> deleteApplicationInputProcessingConfigurationWithHttpInfo(String xAmzTarget, DeleteApplicationInputProcessingConfigurationRequest deleteApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = deleteApplicationInputProcessingConfigurationValidateBeforeCall(xAmzTarget, deleteApplicationInputProcessingConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html\&quot;&gt;InputProcessingConfiguration&lt;/a&gt; from an input.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationInputProcessingConfigurationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationInputProcessingConfigurationAsync(String xAmzTarget, DeleteApplicationInputProcessingConfigurationRequest deleteApplicationInputProcessingConfigurationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteApplicationInputProcessingConfigurationValidateBeforeCall(xAmzTarget, deleteApplicationInputProcessingConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteApplicationOutput
     * @param xAmzTarget  (required)
     * @param deleteApplicationOutputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationOutputCall(String xAmzTarget, DeleteApplicationOutputRequest deleteApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = deleteApplicationOutputRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.DeleteApplicationOutput";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteApplicationOutputValidateBeforeCall(String xAmzTarget, DeleteApplicationOutputRequest deleteApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling deleteApplicationOutput(Async)");
        }

        // verify the required parameter 'deleteApplicationOutputRequest' is set
        if (deleteApplicationOutputRequest == null) {
            throw new ApiException("Missing the required parameter 'deleteApplicationOutputRequest' when calling deleteApplicationOutput(Async)");
        }

        return deleteApplicationOutputCall(xAmzTarget, deleteApplicationOutputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes output destination configuration from your application configuration. Amazon Kinesis Analytics will no longer write data from the corresponding in-application stream to the external output destination.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DeleteApplicationOutput&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationOutputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object deleteApplicationOutput(String xAmzTarget, DeleteApplicationOutputRequest deleteApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = deleteApplicationOutputWithHttpInfo(xAmzTarget, deleteApplicationOutputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes output destination configuration from your application configuration. Amazon Kinesis Analytics will no longer write data from the corresponding in-application stream to the external output destination.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DeleteApplicationOutput&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationOutputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> deleteApplicationOutputWithHttpInfo(String xAmzTarget, DeleteApplicationOutputRequest deleteApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = deleteApplicationOutputValidateBeforeCall(xAmzTarget, deleteApplicationOutputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes output destination configuration from your application configuration. Amazon Kinesis Analytics will no longer write data from the corresponding in-application stream to the external output destination.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DeleteApplicationOutput&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationOutputRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationOutputAsync(String xAmzTarget, DeleteApplicationOutputRequest deleteApplicationOutputRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteApplicationOutputValidateBeforeCall(xAmzTarget, deleteApplicationOutputRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteApplicationReferenceDataSource
     * @param xAmzTarget  (required)
     * @param deleteApplicationReferenceDataSourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationReferenceDataSourceCall(String xAmzTarget, DeleteApplicationReferenceDataSourceRequest deleteApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = deleteApplicationReferenceDataSourceRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.DeleteApplicationReferenceDataSource";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteApplicationReferenceDataSourceValidateBeforeCall(String xAmzTarget, DeleteApplicationReferenceDataSourceRequest deleteApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling deleteApplicationReferenceDataSource(Async)");
        }

        // verify the required parameter 'deleteApplicationReferenceDataSourceRequest' is set
        if (deleteApplicationReferenceDataSourceRequest == null) {
            throw new ApiException("Missing the required parameter 'deleteApplicationReferenceDataSourceRequest' when calling deleteApplicationReferenceDataSource(Async)");
        }

        return deleteApplicationReferenceDataSourceCall(xAmzTarget, deleteApplicationReferenceDataSourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes a reference data source configuration from the specified application configuration.&lt;/p&gt; &lt;p&gt;If the application is running, Amazon Kinesis Analytics immediately removes the in-application table that you created using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_AddApplicationReferenceDataSource.html\&quot;&gt;AddApplicationReferenceDataSource&lt;/a&gt; operation. &lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics.DeleteApplicationReferenceDataSource&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationReferenceDataSourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object deleteApplicationReferenceDataSource(String xAmzTarget, DeleteApplicationReferenceDataSourceRequest deleteApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = deleteApplicationReferenceDataSourceWithHttpInfo(xAmzTarget, deleteApplicationReferenceDataSourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes a reference data source configuration from the specified application configuration.&lt;/p&gt; &lt;p&gt;If the application is running, Amazon Kinesis Analytics immediately removes the in-application table that you created using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_AddApplicationReferenceDataSource.html\&quot;&gt;AddApplicationReferenceDataSource&lt;/a&gt; operation. &lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics.DeleteApplicationReferenceDataSource&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationReferenceDataSourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> deleteApplicationReferenceDataSourceWithHttpInfo(String xAmzTarget, DeleteApplicationReferenceDataSourceRequest deleteApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = deleteApplicationReferenceDataSourceValidateBeforeCall(xAmzTarget, deleteApplicationReferenceDataSourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Deletes a reference data source configuration from the specified application configuration.&lt;/p&gt; &lt;p&gt;If the application is running, Amazon Kinesis Analytics immediately removes the in-application table that you created using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_AddApplicationReferenceDataSource.html\&quot;&gt;AddApplicationReferenceDataSource&lt;/a&gt; operation. &lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics.DeleteApplicationReferenceDataSource&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param deleteApplicationReferenceDataSourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteApplicationReferenceDataSourceAsync(String xAmzTarget, DeleteApplicationReferenceDataSourceRequest deleteApplicationReferenceDataSourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteApplicationReferenceDataSourceValidateBeforeCall(xAmzTarget, deleteApplicationReferenceDataSourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeApplication
     * @param xAmzTarget  (required)
     * @param describeApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeApplicationCall(String xAmzTarget, DescribeApplicationRequest describeApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeApplicationRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.DescribeApplication";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeApplicationValidateBeforeCall(String xAmzTarget, DescribeApplicationRequest describeApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeApplication(Async)");
        }

        // verify the required parameter 'describeApplicationRequest' is set
        if (describeApplicationRequest == null) {
            throw new ApiException("Missing the required parameter 'describeApplicationRequest' when calling describeApplication(Async)");
        }

        return describeApplicationCall(xAmzTarget, describeApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns information about a specific Amazon Kinesis Analytics application.&lt;/p&gt; &lt;p&gt;If you want to retrieve a list of all applications in your account, use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_ListApplications.html\&quot;&gt;ListApplications&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DescribeApplication&lt;/code&gt; action. You can use &lt;code&gt;DescribeApplication&lt;/code&gt; to get the current application versionId, which you need to call other operations such as &lt;code&gt;Update&lt;/code&gt;. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeApplicationResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public DescribeApplicationResponse describeApplication(String xAmzTarget, DescribeApplicationRequest describeApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeApplicationResponse> localVarResp = describeApplicationWithHttpInfo(xAmzTarget, describeApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns information about a specific Amazon Kinesis Analytics application.&lt;/p&gt; &lt;p&gt;If you want to retrieve a list of all applications in your account, use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_ListApplications.html\&quot;&gt;ListApplications&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DescribeApplication&lt;/code&gt; action. You can use &lt;code&gt;DescribeApplication&lt;/code&gt; to get the current application versionId, which you need to call other operations such as &lt;code&gt;Update&lt;/code&gt;. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeApplicationResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeApplicationResponse> describeApplicationWithHttpInfo(String xAmzTarget, DescribeApplicationRequest describeApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeApplicationValidateBeforeCall(xAmzTarget, describeApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeApplicationResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns information about a specific Amazon Kinesis Analytics application.&lt;/p&gt; &lt;p&gt;If you want to retrieve a list of all applications in your account, use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_ListApplications.html\&quot;&gt;ListApplications&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DescribeApplication&lt;/code&gt; action. You can use &lt;code&gt;DescribeApplication&lt;/code&gt; to get the current application versionId, which you need to call other operations such as &lt;code&gt;Update&lt;/code&gt;. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeApplicationAsync(String xAmzTarget, DescribeApplicationRequest describeApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeApplicationResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeApplicationValidateBeforeCall(xAmzTarget, describeApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeApplicationResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for discoverInputSchema
     * @param xAmzTarget  (required)
     * @param discoverInputSchemaRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> UnableToDetectSchemaException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceProvisionedThroughputExceededException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ServiceUnavailableException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call discoverInputSchemaCall(String xAmzTarget, DiscoverInputSchemaRequest discoverInputSchemaRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = discoverInputSchemaRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.DiscoverInputSchema";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call discoverInputSchemaValidateBeforeCall(String xAmzTarget, DiscoverInputSchemaRequest discoverInputSchemaRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling discoverInputSchema(Async)");
        }

        // verify the required parameter 'discoverInputSchemaRequest' is set
        if (discoverInputSchemaRequest == null) {
            throw new ApiException("Missing the required parameter 'discoverInputSchemaRequest' when calling discoverInputSchema(Async)");
        }

        return discoverInputSchemaCall(xAmzTarget, discoverInputSchemaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Infers a schema by evaluating sample records on the specified streaming source (Amazon Kinesis stream or Amazon Kinesis Firehose delivery stream) or S3 object. In the response, the operation returns the inferred schema and also the sample records that the operation used to infer the schema.&lt;/p&gt; &lt;p&gt; You can use the inferred schema when configuring a streaming source for your application. For conceptual information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. Note that when you create an application using the Amazon Kinesis Analytics console, the console uses this operation to infer a schema and show it in the console user interface. &lt;/p&gt; &lt;p&gt; This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DiscoverInputSchema&lt;/code&gt; action. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param discoverInputSchemaRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DiscoverInputSchemaResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> UnableToDetectSchemaException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceProvisionedThroughputExceededException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ServiceUnavailableException </td><td>  -  </td></tr>
     </table>
     */
    public DiscoverInputSchemaResponse discoverInputSchema(String xAmzTarget, DiscoverInputSchemaRequest discoverInputSchemaRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DiscoverInputSchemaResponse> localVarResp = discoverInputSchemaWithHttpInfo(xAmzTarget, discoverInputSchemaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Infers a schema by evaluating sample records on the specified streaming source (Amazon Kinesis stream or Amazon Kinesis Firehose delivery stream) or S3 object. In the response, the operation returns the inferred schema and also the sample records that the operation used to infer the schema.&lt;/p&gt; &lt;p&gt; You can use the inferred schema when configuring a streaming source for your application. For conceptual information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. Note that when you create an application using the Amazon Kinesis Analytics console, the console uses this operation to infer a schema and show it in the console user interface. &lt;/p&gt; &lt;p&gt; This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DiscoverInputSchema&lt;/code&gt; action. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param discoverInputSchemaRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DiscoverInputSchemaResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> UnableToDetectSchemaException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceProvisionedThroughputExceededException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ServiceUnavailableException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DiscoverInputSchemaResponse> discoverInputSchemaWithHttpInfo(String xAmzTarget, DiscoverInputSchemaRequest discoverInputSchemaRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = discoverInputSchemaValidateBeforeCall(xAmzTarget, discoverInputSchemaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DiscoverInputSchemaResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Infers a schema by evaluating sample records on the specified streaming source (Amazon Kinesis stream or Amazon Kinesis Firehose delivery stream) or S3 object. In the response, the operation returns the inferred schema and also the sample records that the operation used to infer the schema.&lt;/p&gt; &lt;p&gt; You can use the inferred schema when configuring a streaming source for your application. For conceptual information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. Note that when you create an application using the Amazon Kinesis Analytics console, the console uses this operation to infer a schema and show it in the console user interface. &lt;/p&gt; &lt;p&gt; This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:DiscoverInputSchema&lt;/code&gt; action. &lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param discoverInputSchemaRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> UnableToDetectSchemaException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceProvisionedThroughputExceededException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> ServiceUnavailableException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call discoverInputSchemaAsync(String xAmzTarget, DiscoverInputSchemaRequest discoverInputSchemaRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DiscoverInputSchemaResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = discoverInputSchemaValidateBeforeCall(xAmzTarget, discoverInputSchemaRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DiscoverInputSchemaResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listApplications
     * @param xAmzTarget  (required)
     * @param listApplicationsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listApplicationsCall(String xAmzTarget, ListApplicationsRequest listApplicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = listApplicationsRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.ListApplications";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listApplicationsValidateBeforeCall(String xAmzTarget, ListApplicationsRequest listApplicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling listApplications(Async)");
        }

        // verify the required parameter 'listApplicationsRequest' is set
        if (listApplicationsRequest == null) {
            throw new ApiException("Missing the required parameter 'listApplicationsRequest' when calling listApplications(Async)");
        }

        return listApplicationsCall(xAmzTarget, listApplicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns a list of Amazon Kinesis Analytics applications in your account. For each application, the response includes the application name, Amazon Resource Name (ARN), and status. If the response returns the &lt;code&gt;HasMoreApplications&lt;/code&gt; value as true, you can send another request by adding the &lt;code&gt;ExclusiveStartApplicationName&lt;/code&gt; in the request body, and set the value of this to the last application name from the previous response. &lt;/p&gt; &lt;p&gt;If you want detailed information about a specific application, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:ListApplications&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param listApplicationsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ListApplicationsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ListApplicationsResponse listApplications(String xAmzTarget, ListApplicationsRequest listApplicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<ListApplicationsResponse> localVarResp = listApplicationsWithHttpInfo(xAmzTarget, listApplicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns a list of Amazon Kinesis Analytics applications in your account. For each application, the response includes the application name, Amazon Resource Name (ARN), and status. If the response returns the &lt;code&gt;HasMoreApplications&lt;/code&gt; value as true, you can send another request by adding the &lt;code&gt;ExclusiveStartApplicationName&lt;/code&gt; in the request body, and set the value of this to the last application name from the previous response. &lt;/p&gt; &lt;p&gt;If you want detailed information about a specific application, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:ListApplications&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param listApplicationsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;ListApplicationsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListApplicationsResponse> listApplicationsWithHttpInfo(String xAmzTarget, ListApplicationsRequest listApplicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = listApplicationsValidateBeforeCall(xAmzTarget, listApplicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<ListApplicationsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Returns a list of Amazon Kinesis Analytics applications in your account. For each application, the response includes the application name, Amazon Resource Name (ARN), and status. If the response returns the &lt;code&gt;HasMoreApplications&lt;/code&gt; value as true, you can send another request by adding the &lt;code&gt;ExclusiveStartApplicationName&lt;/code&gt; in the request body, and set the value of this to the last application name from the previous response. &lt;/p&gt; &lt;p&gt;If you want detailed information about a specific application, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:ListApplications&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param listApplicationsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listApplicationsAsync(String xAmzTarget, ListApplicationsRequest listApplicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<ListApplicationsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listApplicationsValidateBeforeCall(xAmzTarget, listApplicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<ListApplicationsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listTagsForResource
     * @param xAmzTarget  (required)
     * @param listTagsForResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listTagsForResourceCall(String xAmzTarget, ListTagsForResourceRequest listTagsForResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = listTagsForResourceRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.ListTagsForResource";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listTagsForResourceValidateBeforeCall(String xAmzTarget, ListTagsForResourceRequest listTagsForResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling listTagsForResource(Async)");
        }

        // verify the required parameter 'listTagsForResourceRequest' is set
        if (listTagsForResourceRequest == null) {
            throw new ApiException("Missing the required parameter 'listTagsForResourceRequest' when calling listTagsForResource(Async)");
        }

        return listTagsForResourceCall(xAmzTarget, listTagsForResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * Retrieves the list of key-value tags assigned to the application. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-tagging.html\&quot;&gt;Using Tagging&lt;/a&gt;.
     * @param xAmzTarget  (required)
     * @param listTagsForResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ListTagsForResourceResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public ListTagsForResourceResponse listTagsForResource(String xAmzTarget, ListTagsForResourceRequest listTagsForResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<ListTagsForResourceResponse> localVarResp = listTagsForResourceWithHttpInfo(xAmzTarget, listTagsForResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves the list of key-value tags assigned to the application. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-tagging.html\&quot;&gt;Using Tagging&lt;/a&gt;.
     * @param xAmzTarget  (required)
     * @param listTagsForResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;ListTagsForResourceResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListTagsForResourceResponse> listTagsForResourceWithHttpInfo(String xAmzTarget, ListTagsForResourceRequest listTagsForResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = listTagsForResourceValidateBeforeCall(xAmzTarget, listTagsForResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<ListTagsForResourceResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves the list of key-value tags assigned to the application. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-tagging.html\&quot;&gt;Using Tagging&lt;/a&gt;.
     * @param xAmzTarget  (required)
     * @param listTagsForResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listTagsForResourceAsync(String xAmzTarget, ListTagsForResourceRequest listTagsForResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<ListTagsForResourceResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listTagsForResourceValidateBeforeCall(xAmzTarget, listTagsForResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<ListTagsForResourceResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for startApplication
     * @param xAmzTarget  (required)
     * @param startApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidApplicationConfigurationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call startApplicationCall(String xAmzTarget, StartApplicationRequest startApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = startApplicationRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.StartApplication";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call startApplicationValidateBeforeCall(String xAmzTarget, StartApplicationRequest startApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling startApplication(Async)");
        }

        // verify the required parameter 'startApplicationRequest' is set
        if (startApplicationRequest == null) {
            throw new ApiException("Missing the required parameter 'startApplicationRequest' when calling startApplication(Async)");
        }

        return startApplicationCall(xAmzTarget, startApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Starts the specified Amazon Kinesis Analytics application. After creating an application, you must exclusively call this operation to start your application.&lt;/p&gt; &lt;p&gt;After the application starts, it begins consuming the input data, processes it, and writes the output to the configured destination.&lt;/p&gt; &lt;p&gt; The application status must be &lt;code&gt;READY&lt;/code&gt; for you to start an application. You can get the application status in the console or using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;After you start the application, you can stop the application from processing the input by calling the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_StopApplication.html\&quot;&gt;StopApplication&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:StartApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param startApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidApplicationConfigurationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object startApplication(String xAmzTarget, StartApplicationRequest startApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = startApplicationWithHttpInfo(xAmzTarget, startApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Starts the specified Amazon Kinesis Analytics application. After creating an application, you must exclusively call this operation to start your application.&lt;/p&gt; &lt;p&gt;After the application starts, it begins consuming the input data, processes it, and writes the output to the configured destination.&lt;/p&gt; &lt;p&gt; The application status must be &lt;code&gt;READY&lt;/code&gt; for you to start an application. You can get the application status in the console or using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;After you start the application, you can stop the application from processing the input by calling the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_StopApplication.html\&quot;&gt;StopApplication&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:StartApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param startApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidApplicationConfigurationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> startApplicationWithHttpInfo(String xAmzTarget, StartApplicationRequest startApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = startApplicationValidateBeforeCall(xAmzTarget, startApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Starts the specified Amazon Kinesis Analytics application. After creating an application, you must exclusively call this operation to start your application.&lt;/p&gt; &lt;p&gt;After the application starts, it begins consuming the input data, processes it, and writes the output to the configured destination.&lt;/p&gt; &lt;p&gt; The application status must be &lt;code&gt;READY&lt;/code&gt; for you to start an application. You can get the application status in the console or using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;After you start the application, you can stop the application from processing the input by calling the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_StopApplication.html\&quot;&gt;StopApplication&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:StartApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param startApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidApplicationConfigurationException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call startApplicationAsync(String xAmzTarget, StartApplicationRequest startApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = startApplicationValidateBeforeCall(xAmzTarget, startApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stopApplication
     * @param xAmzTarget  (required)
     * @param stopApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stopApplicationCall(String xAmzTarget, StopApplicationRequest stopApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = stopApplicationRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.StopApplication";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stopApplicationValidateBeforeCall(String xAmzTarget, StopApplicationRequest stopApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling stopApplication(Async)");
        }

        // verify the required parameter 'stopApplicationRequest' is set
        if (stopApplicationRequest == null) {
            throw new ApiException("Missing the required parameter 'stopApplicationRequest' when calling stopApplication(Async)");
        }

        return stopApplicationCall(xAmzTarget, stopApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Stops the application from processing input data. You can stop an application only if it is in the running state. You can use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation to find the application state. After the application is stopped, Amazon Kinesis Analytics stops reading data from the input, the application stops processing data, and there is no output written to the destination. &lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:StopApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param stopApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object stopApplication(String xAmzTarget, StopApplicationRequest stopApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = stopApplicationWithHttpInfo(xAmzTarget, stopApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Stops the application from processing input data. You can stop an application only if it is in the running state. You can use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation to find the application state. After the application is stopped, Amazon Kinesis Analytics stops reading data from the input, the application stops processing data, and there is no output written to the destination. &lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:StopApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param stopApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> stopApplicationWithHttpInfo(String xAmzTarget, StopApplicationRequest stopApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = stopApplicationValidateBeforeCall(xAmzTarget, stopApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Stops the application from processing input data. You can stop an application only if it is in the running state. You can use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html\&quot;&gt;DescribeApplication&lt;/a&gt; operation to find the application state. After the application is stopped, Amazon Kinesis Analytics stops reading data from the input, the application stops processing data, and there is no output written to the destination. &lt;/p&gt; &lt;p&gt;This operation requires permissions to perform the &lt;code&gt;kinesisanalytics:StopApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param stopApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stopApplicationAsync(String xAmzTarget, StopApplicationRequest stopApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = stopApplicationValidateBeforeCall(xAmzTarget, stopApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for tagResource
     * @param xAmzTarget  (required)
     * @param tagResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call tagResourceCall(String xAmzTarget, TagResourceRequest tagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = tagResourceRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.TagResource";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call tagResourceValidateBeforeCall(String xAmzTarget, TagResourceRequest tagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling tagResource(Async)");
        }

        // verify the required parameter 'tagResourceRequest' is set
        if (tagResourceRequest == null) {
            throw new ApiException("Missing the required parameter 'tagResourceRequest' when calling tagResource(Async)");
        }

        return tagResourceCall(xAmzTarget, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * Adds one or more key-value tags to a Kinesis Analytics application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-tagging.html\&quot;&gt;Using Tagging&lt;/a&gt;.
     * @param xAmzTarget  (required)
     * @param tagResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public Object tagResource(String xAmzTarget, TagResourceRequest tagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = tagResourceWithHttpInfo(xAmzTarget, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * Adds one or more key-value tags to a Kinesis Analytics application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-tagging.html\&quot;&gt;Using Tagging&lt;/a&gt;.
     * @param xAmzTarget  (required)
     * @param tagResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> tagResourceWithHttpInfo(String xAmzTarget, TagResourceRequest tagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = tagResourceValidateBeforeCall(xAmzTarget, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Adds one or more key-value tags to a Kinesis Analytics application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-tagging.html\&quot;&gt;Using Tagging&lt;/a&gt;.
     * @param xAmzTarget  (required)
     * @param tagResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call tagResourceAsync(String xAmzTarget, TagResourceRequest tagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = tagResourceValidateBeforeCall(xAmzTarget, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for untagResource
     * @param xAmzTarget  (required)
     * @param untagResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call untagResourceCall(String xAmzTarget, UntagResourceRequest untagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = untagResourceRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.UntagResource";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call untagResourceValidateBeforeCall(String xAmzTarget, UntagResourceRequest untagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling untagResource(Async)");
        }

        // verify the required parameter 'untagResourceRequest' is set
        if (untagResourceRequest == null) {
            throw new ApiException("Missing the required parameter 'untagResourceRequest' when calling untagResource(Async)");
        }

        return untagResourceCall(xAmzTarget, untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * Removes one or more tags from a Kinesis Analytics application. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-tagging.html\&quot;&gt;Using Tagging&lt;/a&gt;.
     * @param xAmzTarget  (required)
     * @param untagResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public Object untagResource(String xAmzTarget, UntagResourceRequest untagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = untagResourceWithHttpInfo(xAmzTarget, untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * Removes one or more tags from a Kinesis Analytics application. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-tagging.html\&quot;&gt;Using Tagging&lt;/a&gt;.
     * @param xAmzTarget  (required)
     * @param untagResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> untagResourceWithHttpInfo(String xAmzTarget, UntagResourceRequest untagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = untagResourceValidateBeforeCall(xAmzTarget, untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Removes one or more tags from a Kinesis Analytics application. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-tagging.html\&quot;&gt;Using Tagging&lt;/a&gt;.
     * @param xAmzTarget  (required)
     * @param untagResourceRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> TooManyTagsException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call untagResourceAsync(String xAmzTarget, UntagResourceRequest untagResourceRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = untagResourceValidateBeforeCall(xAmzTarget, untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateApplication
     * @param xAmzTarget  (required)
     * @param updateApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateApplicationCall(String xAmzTarget, UpdateApplicationRequest updateApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = updateApplicationRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=KinesisAnalytics_20150814.UpdateApplication";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateApplicationValidateBeforeCall(String xAmzTarget, UpdateApplicationRequest updateApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling updateApplication(Async)");
        }

        // verify the required parameter 'updateApplicationRequest' is set
        if (updateApplicationRequest == null) {
            throw new ApiException("Missing the required parameter 'updateApplicationRequest' when calling updateApplication(Async)");
        }

        return updateApplicationCall(xAmzTarget, updateApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Updates an existing Amazon Kinesis Analytics application. Using this API, you can update application code, input configuration, and output configuration. &lt;/p&gt; &lt;p&gt;Note that Amazon Kinesis Analytics updates the &lt;code&gt;CurrentApplicationVersionId&lt;/code&gt; each time you update your application. &lt;/p&gt; &lt;p&gt;This operation requires permission for the &lt;code&gt;kinesisanalytics:UpdateApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param updateApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public Object updateApplication(String xAmzTarget, UpdateApplicationRequest updateApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<Object> localVarResp = updateApplicationWithHttpInfo(xAmzTarget, updateApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Updates an existing Amazon Kinesis Analytics application. Using this API, you can update application code, input configuration, and output configuration. &lt;/p&gt; &lt;p&gt;Note that Amazon Kinesis Analytics updates the &lt;code&gt;CurrentApplicationVersionId&lt;/code&gt; each time you update your application. &lt;/p&gt; &lt;p&gt;This operation requires permission for the &lt;code&gt;kinesisanalytics:UpdateApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param updateApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> updateApplicationWithHttpInfo(String xAmzTarget, UpdateApplicationRequest updateApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = updateApplicationValidateBeforeCall(xAmzTarget, updateApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;note&gt; &lt;p&gt;This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see &lt;a href&#x3D;\&quot;/kinesisanalytics/latest/apiv2/Welcome.html\&quot;&gt;Amazon Kinesis Data Analytics API V2 Documentation&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Updates an existing Amazon Kinesis Analytics application. Using this API, you can update application code, input configuration, and output configuration. &lt;/p&gt; &lt;p&gt;Note that Amazon Kinesis Analytics updates the &lt;code&gt;CurrentApplicationVersionId&lt;/code&gt; each time you update your application. &lt;/p&gt; &lt;p&gt;This operation requires permission for the &lt;code&gt;kinesisanalytics:UpdateApplication&lt;/code&gt; action.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param updateApplicationRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> CodeValidationException </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ResourceNotFoundException </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> ResourceInUseException </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> InvalidArgumentException </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> ConcurrentModificationException </td><td>  -  </td></tr>
        <tr><td> 485 </td><td> UnsupportedOperationException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateApplicationAsync(String xAmzTarget, UpdateApplicationRequest updateApplicationRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateApplicationValidateBeforeCall(xAmzTarget, updateApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
