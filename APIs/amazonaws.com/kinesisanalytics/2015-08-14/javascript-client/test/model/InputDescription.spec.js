/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonKinesisAnalytics);
  }
}(this, function(expect, AmazonKinesisAnalytics) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonKinesisAnalytics.InputDescription();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InputDescription', function() {
    it('should create an instance of InputDescription', function() {
      // uncomment below and update the code to test InputDescription
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be.a(AmazonKinesisAnalytics.InputDescription);
    });

    it('should have the property inputId (base name: "InputId")', function() {
      // uncomment below and update the code to test the property inputId
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be();
    });

    it('should have the property namePrefix (base name: "NamePrefix")', function() {
      // uncomment below and update the code to test the property namePrefix
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be();
    });

    it('should have the property inAppStreamNames (base name: "InAppStreamNames")', function() {
      // uncomment below and update the code to test the property inAppStreamNames
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be();
    });

    it('should have the property inputProcessingConfigurationDescription (base name: "InputProcessingConfigurationDescription")', function() {
      // uncomment below and update the code to test the property inputProcessingConfigurationDescription
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be();
    });

    it('should have the property kinesisStreamsInputDescription (base name: "KinesisStreamsInputDescription")', function() {
      // uncomment below and update the code to test the property kinesisStreamsInputDescription
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be();
    });

    it('should have the property kinesisFirehoseInputDescription (base name: "KinesisFirehoseInputDescription")', function() {
      // uncomment below and update the code to test the property kinesisFirehoseInputDescription
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be();
    });

    it('should have the property inputSchema (base name: "InputSchema")', function() {
      // uncomment below and update the code to test the property inputSchema
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be();
    });

    it('should have the property inputParallelism (base name: "InputParallelism")', function() {
      // uncomment below and update the code to test the property inputParallelism
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be();
    });

    it('should have the property inputStartingPositionConfiguration (base name: "InputStartingPositionConfiguration")', function() {
      // uncomment below and update the code to test the property inputStartingPositionConfiguration
      //var instance = new AmazonKinesisAnalytics.InputDescription();
      //expect(instance).to.be();
    });

  });

}));
