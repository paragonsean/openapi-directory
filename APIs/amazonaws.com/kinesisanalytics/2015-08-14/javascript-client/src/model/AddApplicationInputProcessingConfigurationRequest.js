/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration from './AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration';

/**
 * The AddApplicationInputProcessingConfigurationRequest model module.
 * @module model/AddApplicationInputProcessingConfigurationRequest
 * @version 2015-08-14
 */
class AddApplicationInputProcessingConfigurationRequest {
    /**
     * Constructs a new <code>AddApplicationInputProcessingConfigurationRequest</code>.
     * @alias module:model/AddApplicationInputProcessingConfigurationRequest
     * @param applicationName {String} 
     * @param currentApplicationVersionId {Number} 
     * @param inputId {String} 
     * @param inputProcessingConfiguration {module:model/AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration} 
     */
    constructor(applicationName, currentApplicationVersionId, inputId, inputProcessingConfiguration) { 
        
        AddApplicationInputProcessingConfigurationRequest.initialize(this, applicationName, currentApplicationVersionId, inputId, inputProcessingConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationName, currentApplicationVersionId, inputId, inputProcessingConfiguration) { 
        obj['ApplicationName'] = applicationName;
        obj['CurrentApplicationVersionId'] = currentApplicationVersionId;
        obj['InputId'] = inputId;
        obj['InputProcessingConfiguration'] = inputProcessingConfiguration;
    }

    /**
     * Constructs a <code>AddApplicationInputProcessingConfigurationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddApplicationInputProcessingConfigurationRequest} obj Optional instance to populate.
     * @return {module:model/AddApplicationInputProcessingConfigurationRequest} The populated <code>AddApplicationInputProcessingConfigurationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddApplicationInputProcessingConfigurationRequest();

            if (data.hasOwnProperty('ApplicationName')) {
                obj['ApplicationName'] = ApiClient.convertToType(data['ApplicationName'], 'String');
            }
            if (data.hasOwnProperty('CurrentApplicationVersionId')) {
                obj['CurrentApplicationVersionId'] = ApiClient.convertToType(data['CurrentApplicationVersionId'], 'Number');
            }
            if (data.hasOwnProperty('InputId')) {
                obj['InputId'] = ApiClient.convertToType(data['InputId'], 'String');
            }
            if (data.hasOwnProperty('InputProcessingConfiguration')) {
                obj['InputProcessingConfiguration'] = AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.constructFromObject(data['InputProcessingConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddApplicationInputProcessingConfigurationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddApplicationInputProcessingConfigurationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddApplicationInputProcessingConfigurationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ApplicationName`
        if (data['ApplicationName']) { // data not null
          String.validateJSON(data['ApplicationName']);
        }
        // validate the optional field `CurrentApplicationVersionId`
        if (data['CurrentApplicationVersionId']) { // data not null
          Number.validateJSON(data['CurrentApplicationVersionId']);
        }
        // validate the optional field `InputId`
        if (data['InputId']) { // data not null
          String.validateJSON(data['InputId']);
        }
        // validate the optional field `InputProcessingConfiguration`
        if (data['InputProcessingConfiguration']) { // data not null
          AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.validateJSON(data['InputProcessingConfiguration']);
        }

        return true;
    }


}

AddApplicationInputProcessingConfigurationRequest.RequiredProperties = ["ApplicationName", "CurrentApplicationVersionId", "InputId", "InputProcessingConfiguration"];

/**
 * @member {String} ApplicationName
 */
AddApplicationInputProcessingConfigurationRequest.prototype['ApplicationName'] = undefined;

/**
 * @member {Number} CurrentApplicationVersionId
 */
AddApplicationInputProcessingConfigurationRequest.prototype['CurrentApplicationVersionId'] = undefined;

/**
 * @member {String} InputId
 */
AddApplicationInputProcessingConfigurationRequest.prototype['InputId'] = undefined;

/**
 * @member {module:model/AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration} InputProcessingConfiguration
 */
AddApplicationInputProcessingConfigurationRequest.prototype['InputProcessingConfiguration'] = undefined;






export default AddApplicationInputProcessingConfigurationRequest;

