/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputProcessingConfiguration from './InputProcessingConfiguration';
import InputProcessingConfigurationInputLambdaProcessor from './InputProcessingConfigurationInputLambdaProcessor';

/**
 * The AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration model module.
 * @module model/AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration
 * @version 2015-08-14
 */
class AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration {
    /**
     * Constructs a new <code>AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration</code>.
     * @alias module:model/AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration
     * @implements module:model/InputProcessingConfiguration
     * @param inputLambdaProcessor {module:model/InputProcessingConfigurationInputLambdaProcessor} 
     */
    constructor(inputLambdaProcessor) { 
        InputProcessingConfiguration.initialize(this, inputLambdaProcessor);
        AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.initialize(this, inputLambdaProcessor);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inputLambdaProcessor) { 
        obj['InputLambdaProcessor'] = inputLambdaProcessor;
    }

    /**
     * Constructs a <code>AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration} obj Optional instance to populate.
     * @return {module:model/AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration} The populated <code>AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration();
            InputProcessingConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('InputLambdaProcessor')) {
                obj['InputLambdaProcessor'] = InputProcessingConfigurationInputLambdaProcessor.constructFromObject(data['InputLambdaProcessor']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InputLambdaProcessor`
        if (data['InputLambdaProcessor']) { // data not null
          InputProcessingConfigurationInputLambdaProcessor.validateJSON(data['InputLambdaProcessor']);
        }

        return true;
    }


}

AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.RequiredProperties = ["InputLambdaProcessor"];

/**
 * @member {module:model/InputProcessingConfigurationInputLambdaProcessor} InputLambdaProcessor
 */
AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.prototype['InputLambdaProcessor'] = undefined;


// Implement InputProcessingConfiguration interface:
/**
 * @member {module:model/InputProcessingConfigurationInputLambdaProcessor} InputLambdaProcessor
 */
InputProcessingConfiguration.prototype['InputLambdaProcessor'] = undefined;




export default AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration;

