/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputDescriptionInputParallelism from './InputDescriptionInputParallelism';
import InputDescriptionInputProcessingConfigurationDescription from './InputDescriptionInputProcessingConfigurationDescription';
import InputDescriptionInputSchema from './InputDescriptionInputSchema';
import InputDescriptionInputStartingPositionConfiguration from './InputDescriptionInputStartingPositionConfiguration';
import InputDescriptionKinesisFirehoseInputDescription from './InputDescriptionKinesisFirehoseInputDescription';
import InputDescriptionKinesisStreamsInputDescription from './InputDescriptionKinesisStreamsInputDescription';

/**
 * The InputDescription model module.
 * @module model/InputDescription
 * @version 2015-08-14
 */
class InputDescription {
    /**
     * Constructs a new <code>InputDescription</code>.
     * Describes the application input configuration. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\&quot;&gt;Configuring Application Input&lt;/a&gt;. 
     * @alias module:model/InputDescription
     */
    constructor() { 
        
        InputDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InputDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputDescription} obj Optional instance to populate.
     * @return {module:model/InputDescription} The populated <code>InputDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputDescription();

            if (data.hasOwnProperty('InputId')) {
                obj['InputId'] = ApiClient.convertToType(data['InputId'], 'String');
            }
            if (data.hasOwnProperty('NamePrefix')) {
                obj['NamePrefix'] = ApiClient.convertToType(data['NamePrefix'], 'String');
            }
            if (data.hasOwnProperty('InAppStreamNames')) {
                obj['InAppStreamNames'] = ApiClient.convertToType(data['InAppStreamNames'], Array);
            }
            if (data.hasOwnProperty('InputProcessingConfigurationDescription')) {
                obj['InputProcessingConfigurationDescription'] = InputDescriptionInputProcessingConfigurationDescription.constructFromObject(data['InputProcessingConfigurationDescription']);
            }
            if (data.hasOwnProperty('KinesisStreamsInputDescription')) {
                obj['KinesisStreamsInputDescription'] = InputDescriptionKinesisStreamsInputDescription.constructFromObject(data['KinesisStreamsInputDescription']);
            }
            if (data.hasOwnProperty('KinesisFirehoseInputDescription')) {
                obj['KinesisFirehoseInputDescription'] = InputDescriptionKinesisFirehoseInputDescription.constructFromObject(data['KinesisFirehoseInputDescription']);
            }
            if (data.hasOwnProperty('InputSchema')) {
                obj['InputSchema'] = InputDescriptionInputSchema.constructFromObject(data['InputSchema']);
            }
            if (data.hasOwnProperty('InputParallelism')) {
                obj['InputParallelism'] = InputDescriptionInputParallelism.constructFromObject(data['InputParallelism']);
            }
            if (data.hasOwnProperty('InputStartingPositionConfiguration')) {
                obj['InputStartingPositionConfiguration'] = InputDescriptionInputStartingPositionConfiguration.constructFromObject(data['InputStartingPositionConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `InputId`
        if (data['InputId']) { // data not null
          String.validateJSON(data['InputId']);
        }
        // validate the optional field `NamePrefix`
        if (data['NamePrefix']) { // data not null
          String.validateJSON(data['NamePrefix']);
        }
        // validate the optional field `InAppStreamNames`
        if (data['InAppStreamNames']) { // data not null
          Array.validateJSON(data['InAppStreamNames']);
        }
        // validate the optional field `InputProcessingConfigurationDescription`
        if (data['InputProcessingConfigurationDescription']) { // data not null
          InputDescriptionInputProcessingConfigurationDescription.validateJSON(data['InputProcessingConfigurationDescription']);
        }
        // validate the optional field `KinesisStreamsInputDescription`
        if (data['KinesisStreamsInputDescription']) { // data not null
          InputDescriptionKinesisStreamsInputDescription.validateJSON(data['KinesisStreamsInputDescription']);
        }
        // validate the optional field `KinesisFirehoseInputDescription`
        if (data['KinesisFirehoseInputDescription']) { // data not null
          InputDescriptionKinesisFirehoseInputDescription.validateJSON(data['KinesisFirehoseInputDescription']);
        }
        // validate the optional field `InputSchema`
        if (data['InputSchema']) { // data not null
          InputDescriptionInputSchema.validateJSON(data['InputSchema']);
        }
        // validate the optional field `InputParallelism`
        if (data['InputParallelism']) { // data not null
          InputDescriptionInputParallelism.validateJSON(data['InputParallelism']);
        }
        // validate the optional field `InputStartingPositionConfiguration`
        if (data['InputStartingPositionConfiguration']) { // data not null
          InputDescriptionInputStartingPositionConfiguration.validateJSON(data['InputStartingPositionConfiguration']);
        }

        return true;
    }


}



/**
 * @member {String} InputId
 */
InputDescription.prototype['InputId'] = undefined;

/**
 * @member {String} NamePrefix
 */
InputDescription.prototype['NamePrefix'] = undefined;

/**
 * @member {Array} InAppStreamNames
 */
InputDescription.prototype['InAppStreamNames'] = undefined;

/**
 * @member {module:model/InputDescriptionInputProcessingConfigurationDescription} InputProcessingConfigurationDescription
 */
InputDescription.prototype['InputProcessingConfigurationDescription'] = undefined;

/**
 * @member {module:model/InputDescriptionKinesisStreamsInputDescription} KinesisStreamsInputDescription
 */
InputDescription.prototype['KinesisStreamsInputDescription'] = undefined;

/**
 * @member {module:model/InputDescriptionKinesisFirehoseInputDescription} KinesisFirehoseInputDescription
 */
InputDescription.prototype['KinesisFirehoseInputDescription'] = undefined;

/**
 * @member {module:model/InputDescriptionInputSchema} InputSchema
 */
InputDescription.prototype['InputSchema'] = undefined;

/**
 * @member {module:model/InputDescriptionInputParallelism} InputParallelism
 */
InputDescription.prototype['InputParallelism'] = undefined;

/**
 * @member {module:model/InputDescriptionInputStartingPositionConfiguration} InputStartingPositionConfiguration
 */
InputDescription.prototype['InputStartingPositionConfiguration'] = undefined;






export default InputDescription;

