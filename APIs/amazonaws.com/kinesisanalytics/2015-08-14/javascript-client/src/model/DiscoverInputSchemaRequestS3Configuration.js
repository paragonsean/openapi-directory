/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import S3Configuration from './S3Configuration';

/**
 * The DiscoverInputSchemaRequestS3Configuration model module.
 * @module model/DiscoverInputSchemaRequestS3Configuration
 * @version 2015-08-14
 */
class DiscoverInputSchemaRequestS3Configuration {
    /**
     * Constructs a new <code>DiscoverInputSchemaRequestS3Configuration</code>.
     * @alias module:model/DiscoverInputSchemaRequestS3Configuration
     * @implements module:model/S3Configuration
     * @param roleARN {String} 
     * @param bucketARN {String} 
     * @param fileKey {String} 
     */
    constructor(roleARN, bucketARN, fileKey) { 
        S3Configuration.initialize(this, roleARN, bucketARN, fileKey);
        DiscoverInputSchemaRequestS3Configuration.initialize(this, roleARN, bucketARN, fileKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, roleARN, bucketARN, fileKey) { 
        obj['RoleARN'] = roleARN;
        obj['BucketARN'] = bucketARN;
        obj['FileKey'] = fileKey;
    }

    /**
     * Constructs a <code>DiscoverInputSchemaRequestS3Configuration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiscoverInputSchemaRequestS3Configuration} obj Optional instance to populate.
     * @return {module:model/DiscoverInputSchemaRequestS3Configuration} The populated <code>DiscoverInputSchemaRequestS3Configuration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiscoverInputSchemaRequestS3Configuration();
            S3Configuration.constructFromObject(data, obj);

            if (data.hasOwnProperty('RoleARN')) {
                obj['RoleARN'] = ApiClient.convertToType(data['RoleARN'], 'String');
            }
            if (data.hasOwnProperty('BucketARN')) {
                obj['BucketARN'] = ApiClient.convertToType(data['BucketARN'], 'String');
            }
            if (data.hasOwnProperty('FileKey')) {
                obj['FileKey'] = ApiClient.convertToType(data['FileKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiscoverInputSchemaRequestS3Configuration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiscoverInputSchemaRequestS3Configuration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DiscoverInputSchemaRequestS3Configuration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `RoleARN`
        if (data['RoleARN']) { // data not null
          String.validateJSON(data['RoleARN']);
        }
        // validate the optional field `BucketARN`
        if (data['BucketARN']) { // data not null
          String.validateJSON(data['BucketARN']);
        }
        // validate the optional field `FileKey`
        if (data['FileKey']) { // data not null
          String.validateJSON(data['FileKey']);
        }

        return true;
    }


}

DiscoverInputSchemaRequestS3Configuration.RequiredProperties = ["RoleARN", "BucketARN", "FileKey"];

/**
 * @member {String} RoleARN
 */
DiscoverInputSchemaRequestS3Configuration.prototype['RoleARN'] = undefined;

/**
 * @member {String} BucketARN
 */
DiscoverInputSchemaRequestS3Configuration.prototype['BucketARN'] = undefined;

/**
 * @member {String} FileKey
 */
DiscoverInputSchemaRequestS3Configuration.prototype['FileKey'] = undefined;


// Implement S3Configuration interface:
/**
 * @member {String} RoleARN
 */
S3Configuration.prototype['RoleARN'] = undefined;
/**
 * @member {String} BucketARN
 */
S3Configuration.prototype['BucketARN'] = undefined;
/**
 * @member {String} FileKey
 */
S3Configuration.prototype['FileKey'] = undefined;




export default DiscoverInputSchemaRequestS3Configuration;

