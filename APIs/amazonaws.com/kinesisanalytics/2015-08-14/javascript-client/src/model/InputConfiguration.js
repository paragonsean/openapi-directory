/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputConfigurationInputStartingPositionConfiguration from './InputConfigurationInputStartingPositionConfiguration';

/**
 * The InputConfiguration model module.
 * @module model/InputConfiguration
 * @version 2015-08-14
 */
class InputConfiguration {
    /**
     * Constructs a new <code>InputConfiguration</code>.
     * When you start your application, you provide this configuration, which identifies the input source and the point in the input source at which you want the application to start processing records.
     * @alias module:model/InputConfiguration
     * @param id {String} 
     * @param inputStartingPositionConfiguration {module:model/InputConfigurationInputStartingPositionConfiguration} 
     */
    constructor(id, inputStartingPositionConfiguration) { 
        
        InputConfiguration.initialize(this, id, inputStartingPositionConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, inputStartingPositionConfiguration) { 
        obj['Id'] = id;
        obj['InputStartingPositionConfiguration'] = inputStartingPositionConfiguration;
    }

    /**
     * Constructs a <code>InputConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputConfiguration} obj Optional instance to populate.
     * @return {module:model/InputConfiguration} The populated <code>InputConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputConfiguration();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('InputStartingPositionConfiguration')) {
                obj['InputStartingPositionConfiguration'] = InputConfigurationInputStartingPositionConfiguration.constructFromObject(data['InputStartingPositionConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InputConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `InputStartingPositionConfiguration`
        if (data['InputStartingPositionConfiguration']) { // data not null
          InputConfigurationInputStartingPositionConfiguration.validateJSON(data['InputStartingPositionConfiguration']);
        }

        return true;
    }


}

InputConfiguration.RequiredProperties = ["Id", "InputStartingPositionConfiguration"];

/**
 * @member {String} Id
 */
InputConfiguration.prototype['Id'] = undefined;

/**
 * @member {module:model/InputConfigurationInputStartingPositionConfiguration} InputStartingPositionConfiguration
 */
InputConfiguration.prototype['InputStartingPositionConfiguration'] = undefined;






export default InputConfiguration;

