/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputProcessingConfigurationDescription from './InputProcessingConfigurationDescription';
import InputProcessingConfigurationDescriptionInputLambdaProcessorDescription from './InputProcessingConfigurationDescriptionInputLambdaProcessorDescription';

/**
 * The InputDescriptionInputProcessingConfigurationDescription model module.
 * @module model/InputDescriptionInputProcessingConfigurationDescription
 * @version 2015-08-14
 */
class InputDescriptionInputProcessingConfigurationDescription {
    /**
     * Constructs a new <code>InputDescriptionInputProcessingConfigurationDescription</code>.
     * @alias module:model/InputDescriptionInputProcessingConfigurationDescription
     * @implements module:model/InputProcessingConfigurationDescription
     */
    constructor() { 
        InputProcessingConfigurationDescription.initialize(this);
        InputDescriptionInputProcessingConfigurationDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InputDescriptionInputProcessingConfigurationDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputDescriptionInputProcessingConfigurationDescription} obj Optional instance to populate.
     * @return {module:model/InputDescriptionInputProcessingConfigurationDescription} The populated <code>InputDescriptionInputProcessingConfigurationDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputDescriptionInputProcessingConfigurationDescription();
            InputProcessingConfigurationDescription.constructFromObject(data, obj);

            if (data.hasOwnProperty('InputLambdaProcessorDescription')) {
                obj['InputLambdaProcessorDescription'] = InputProcessingConfigurationDescriptionInputLambdaProcessorDescription.constructFromObject(data['InputLambdaProcessorDescription']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputDescriptionInputProcessingConfigurationDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputDescriptionInputProcessingConfigurationDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `InputLambdaProcessorDescription`
        if (data['InputLambdaProcessorDescription']) { // data not null
          InputProcessingConfigurationDescriptionInputLambdaProcessorDescription.validateJSON(data['InputLambdaProcessorDescription']);
        }

        return true;
    }


}



/**
 * @member {module:model/InputProcessingConfigurationDescriptionInputLambdaProcessorDescription} InputLambdaProcessorDescription
 */
InputDescriptionInputProcessingConfigurationDescription.prototype['InputLambdaProcessorDescription'] = undefined;


// Implement InputProcessingConfigurationDescription interface:
/**
 * @member {module:model/InputProcessingConfigurationDescriptionInputLambdaProcessorDescription} InputLambdaProcessorDescription
 */
InputProcessingConfigurationDescription.prototype['InputLambdaProcessorDescription'] = undefined;




export default InputDescriptionInputProcessingConfigurationDescription;

