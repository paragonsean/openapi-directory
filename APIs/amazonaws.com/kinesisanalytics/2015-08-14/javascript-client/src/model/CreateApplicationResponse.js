/**
 * Amazon Kinesis Analytics
 * <fullname>Amazon Kinesis Analytics</fullname> <p> <b>Overview</b> </p> <note> <p>This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see <a href=\"/kinesisanalytics/latest/apiv2/Welcome.html\">Amazon Kinesis Data Analytics API V2 Documentation</a>.</p> </note> <p>This is the <i>Amazon Kinesis Analytics v1 API Reference</i>. The Amazon Kinesis Analytics Developer Guide provides additional information. </p>
 *
 * The version of the OpenAPI document: 2015-08-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateApplicationResponseApplicationSummary from './CreateApplicationResponseApplicationSummary';

/**
 * The CreateApplicationResponse model module.
 * @module model/CreateApplicationResponse
 * @version 2015-08-14
 */
class CreateApplicationResponse {
    /**
     * Constructs a new <code>CreateApplicationResponse</code>.
     * TBD
     * @alias module:model/CreateApplicationResponse
     * @param applicationSummary {module:model/CreateApplicationResponseApplicationSummary} 
     */
    constructor(applicationSummary) { 
        
        CreateApplicationResponse.initialize(this, applicationSummary);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationSummary) { 
        obj['ApplicationSummary'] = applicationSummary;
    }

    /**
     * Constructs a <code>CreateApplicationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateApplicationResponse} obj Optional instance to populate.
     * @return {module:model/CreateApplicationResponse} The populated <code>CreateApplicationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateApplicationResponse();

            if (data.hasOwnProperty('ApplicationSummary')) {
                obj['ApplicationSummary'] = CreateApplicationResponseApplicationSummary.constructFromObject(data['ApplicationSummary']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateApplicationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateApplicationResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateApplicationResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ApplicationSummary`
        if (data['ApplicationSummary']) { // data not null
          CreateApplicationResponseApplicationSummary.validateJSON(data['ApplicationSummary']);
        }

        return true;
    }


}

CreateApplicationResponse.RequiredProperties = ["ApplicationSummary"];

/**
 * @member {module:model/CreateApplicationResponseApplicationSummary} ApplicationSummary
 */
CreateApplicationResponse.prototype['ApplicationSummary'] = undefined;






export default CreateApplicationResponse;

