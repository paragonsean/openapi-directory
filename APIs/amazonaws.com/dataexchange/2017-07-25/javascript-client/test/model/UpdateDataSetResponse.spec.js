/**
 * AWS Data Exchange
 * <p>AWS Data Exchange is a service that makes it easy for AWS customers to exchange data in the cloud. You can use the AWS Data Exchange APIs to create, update, manage, and access file-based data set in the AWS Cloud.</p> <p>As a subscriber, you can view and access the data sets that you have an entitlement to through a subscription. You can use the APIs to download or copy your entitled data sets to Amazon Simple Storage Service (Amazon S3) for use across a variety of AWS analytics and machine learning services.</p> <p>As a provider, you can create and manage your data sets that you would like to publish to a product. Being able to package and provide your data sets into products requires a few steps to determine eligibility. For more information, visit the <i>AWS Data Exchange User Guide</i>.</p> <p>A data set is a collection of data that can be changed or updated over time. Data sets can be updated using revisions, which represent a new version or incremental change to a data set. A revision contains one or more assets. An asset in AWS Data Exchange is a piece of data that can be stored as an Amazon S3 object, Redshift datashare, API Gateway API, AWS Lake Formation data permission, or Amazon S3 data access. The asset can be a structured data file, an image file, or some other data file. Jobs are asynchronous import or export operations used to create or copy assets.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsDataExchange);
  }
}(this, function(expect, AwsDataExchange) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsDataExchange.UpdateDataSetResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdateDataSetResponse', function() {
    it('should create an instance of UpdateDataSetResponse', function() {
      // uncomment below and update the code to test UpdateDataSetResponse
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be.a(AwsDataExchange.UpdateDataSetResponse);
    });

    it('should have the property arn (base name: "Arn")', function() {
      // uncomment below and update the code to test the property arn
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

    it('should have the property assetType (base name: "AssetType")', function() {
      // uncomment below and update the code to test the property assetType
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "CreatedAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "Origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

    it('should have the property originDetails (base name: "OriginDetails")', function() {
      // uncomment below and update the code to test the property originDetails
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

    it('should have the property sourceId (base name: "SourceId")', function() {
      // uncomment below and update the code to test the property sourceId
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "UpdatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new AwsDataExchange.UpdateDataSetResponse();
      //expect(instance).to.be();
    });

  });

}));
