/*
 * AWS Data Exchange
 * <p>AWS Data Exchange is a service that makes it easy for AWS customers to exchange data in the cloud. You can use the AWS Data Exchange APIs to create, update, manage, and access file-based data set in the AWS Cloud.</p> <p>As a subscriber, you can view and access the data sets that you have an entitlement to through a subscription. You can use the APIs to download or copy your entitled data sets to Amazon Simple Storage Service (Amazon S3) for use across a variety of AWS analytics and machine learning services.</p> <p>As a provider, you can create and manage your data sets that you would like to publish to a product. Being able to package and provide your data sets into products requires a few steps to determine eligibility. For more information, visit the <i>AWS Data Exchange User Guide</i>.</p> <p>A data set is a collection of data that can be changed or updated over time. Data sets can be updated using revisions, which represent a new version or incremental change to a data set. A revision contains one or more assets. An asset in AWS Data Exchange is a piece of data that can be stored as an Amazon S3 object, Redshift datashare, API Gateway API, AWS Lake Formation data permission, or Amazon S3 data access. The asset can be a structured data file, an image file, or some other data file. Jobs are asynchronous import or export operations used to create or copy assets.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ProtocolType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The API Gateway API that is the asset.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:38.729802-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiGatewayApiAsset {
  public static final String SERIALIZED_NAME_API_DESCRIPTION = "ApiDescription";
  @SerializedName(SERIALIZED_NAME_API_DESCRIPTION)
  private String apiDescription;

  public static final String SERIALIZED_NAME_API_ENDPOINT = "ApiEndpoint";
  @SerializedName(SERIALIZED_NAME_API_ENDPOINT)
  private String apiEndpoint;

  public static final String SERIALIZED_NAME_API_ID = "ApiId";
  @SerializedName(SERIALIZED_NAME_API_ID)
  private String apiId;

  public static final String SERIALIZED_NAME_API_KEY = "ApiKey";
  @SerializedName(SERIALIZED_NAME_API_KEY)
  private String apiKey;

  public static final String SERIALIZED_NAME_API_NAME = "ApiName";
  @SerializedName(SERIALIZED_NAME_API_NAME)
  private String apiName;

  public static final String SERIALIZED_NAME_API_SPECIFICATION_DOWNLOAD_URL = "ApiSpecificationDownloadUrl";
  @SerializedName(SERIALIZED_NAME_API_SPECIFICATION_DOWNLOAD_URL)
  private String apiSpecificationDownloadUrl;

  public static final String SERIALIZED_NAME_API_SPECIFICATION_DOWNLOAD_URL_EXPIRES_AT = "ApiSpecificationDownloadUrlExpiresAt";
  @SerializedName(SERIALIZED_NAME_API_SPECIFICATION_DOWNLOAD_URL_EXPIRES_AT)
  private OffsetDateTime apiSpecificationDownloadUrlExpiresAt;

  public static final String SERIALIZED_NAME_PROTOCOL_TYPE = "ProtocolType";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_TYPE)
  private ProtocolType protocolType;

  public static final String SERIALIZED_NAME_STAGE = "Stage";
  @SerializedName(SERIALIZED_NAME_STAGE)
  private String stage;

  public ApiGatewayApiAsset() {
  }

  public ApiGatewayApiAsset apiDescription(String apiDescription) {
    this.apiDescription = apiDescription;
    return this;
  }

  /**
   * Get apiDescription
   * @return apiDescription
   */
  @javax.annotation.Nullable
  public String getApiDescription() {
    return apiDescription;
  }

  public void setApiDescription(String apiDescription) {
    this.apiDescription = apiDescription;
  }


  public ApiGatewayApiAsset apiEndpoint(String apiEndpoint) {
    this.apiEndpoint = apiEndpoint;
    return this;
  }

  /**
   * Get apiEndpoint
   * @return apiEndpoint
   */
  @javax.annotation.Nullable
  public String getApiEndpoint() {
    return apiEndpoint;
  }

  public void setApiEndpoint(String apiEndpoint) {
    this.apiEndpoint = apiEndpoint;
  }


  public ApiGatewayApiAsset apiId(String apiId) {
    this.apiId = apiId;
    return this;
  }

  /**
   * Get apiId
   * @return apiId
   */
  @javax.annotation.Nullable
  public String getApiId() {
    return apiId;
  }

  public void setApiId(String apiId) {
    this.apiId = apiId;
  }


  public ApiGatewayApiAsset apiKey(String apiKey) {
    this.apiKey = apiKey;
    return this;
  }

  /**
   * Get apiKey
   * @return apiKey
   */
  @javax.annotation.Nullable
  public String getApiKey() {
    return apiKey;
  }

  public void setApiKey(String apiKey) {
    this.apiKey = apiKey;
  }


  public ApiGatewayApiAsset apiName(String apiName) {
    this.apiName = apiName;
    return this;
  }

  /**
   * Get apiName
   * @return apiName
   */
  @javax.annotation.Nullable
  public String getApiName() {
    return apiName;
  }

  public void setApiName(String apiName) {
    this.apiName = apiName;
  }


  public ApiGatewayApiAsset apiSpecificationDownloadUrl(String apiSpecificationDownloadUrl) {
    this.apiSpecificationDownloadUrl = apiSpecificationDownloadUrl;
    return this;
  }

  /**
   * Get apiSpecificationDownloadUrl
   * @return apiSpecificationDownloadUrl
   */
  @javax.annotation.Nullable
  public String getApiSpecificationDownloadUrl() {
    return apiSpecificationDownloadUrl;
  }

  public void setApiSpecificationDownloadUrl(String apiSpecificationDownloadUrl) {
    this.apiSpecificationDownloadUrl = apiSpecificationDownloadUrl;
  }


  public ApiGatewayApiAsset apiSpecificationDownloadUrlExpiresAt(OffsetDateTime apiSpecificationDownloadUrlExpiresAt) {
    this.apiSpecificationDownloadUrlExpiresAt = apiSpecificationDownloadUrlExpiresAt;
    return this;
  }

  /**
   * Get apiSpecificationDownloadUrlExpiresAt
   * @return apiSpecificationDownloadUrlExpiresAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getApiSpecificationDownloadUrlExpiresAt() {
    return apiSpecificationDownloadUrlExpiresAt;
  }

  public void setApiSpecificationDownloadUrlExpiresAt(OffsetDateTime apiSpecificationDownloadUrlExpiresAt) {
    this.apiSpecificationDownloadUrlExpiresAt = apiSpecificationDownloadUrlExpiresAt;
  }


  public ApiGatewayApiAsset protocolType(ProtocolType protocolType) {
    this.protocolType = protocolType;
    return this;
  }

  /**
   * Get protocolType
   * @return protocolType
   */
  @javax.annotation.Nullable
  public ProtocolType getProtocolType() {
    return protocolType;
  }

  public void setProtocolType(ProtocolType protocolType) {
    this.protocolType = protocolType;
  }


  public ApiGatewayApiAsset stage(String stage) {
    this.stage = stage;
    return this;
  }

  /**
   * Get stage
   * @return stage
   */
  @javax.annotation.Nullable
  public String getStage() {
    return stage;
  }

  public void setStage(String stage) {
    this.stage = stage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiGatewayApiAsset apiGatewayApiAsset = (ApiGatewayApiAsset) o;
    return Objects.equals(this.apiDescription, apiGatewayApiAsset.apiDescription) &&
        Objects.equals(this.apiEndpoint, apiGatewayApiAsset.apiEndpoint) &&
        Objects.equals(this.apiId, apiGatewayApiAsset.apiId) &&
        Objects.equals(this.apiKey, apiGatewayApiAsset.apiKey) &&
        Objects.equals(this.apiName, apiGatewayApiAsset.apiName) &&
        Objects.equals(this.apiSpecificationDownloadUrl, apiGatewayApiAsset.apiSpecificationDownloadUrl) &&
        Objects.equals(this.apiSpecificationDownloadUrlExpiresAt, apiGatewayApiAsset.apiSpecificationDownloadUrlExpiresAt) &&
        Objects.equals(this.protocolType, apiGatewayApiAsset.protocolType) &&
        Objects.equals(this.stage, apiGatewayApiAsset.stage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiDescription, apiEndpoint, apiId, apiKey, apiName, apiSpecificationDownloadUrl, apiSpecificationDownloadUrlExpiresAt, protocolType, stage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiGatewayApiAsset {\n");
    sb.append("    apiDescription: ").append(toIndentedString(apiDescription)).append("\n");
    sb.append("    apiEndpoint: ").append(toIndentedString(apiEndpoint)).append("\n");
    sb.append("    apiId: ").append(toIndentedString(apiId)).append("\n");
    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    apiName: ").append(toIndentedString(apiName)).append("\n");
    sb.append("    apiSpecificationDownloadUrl: ").append(toIndentedString(apiSpecificationDownloadUrl)).append("\n");
    sb.append("    apiSpecificationDownloadUrlExpiresAt: ").append(toIndentedString(apiSpecificationDownloadUrlExpiresAt)).append("\n");
    sb.append("    protocolType: ").append(toIndentedString(protocolType)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApiDescription");
    openapiFields.add("ApiEndpoint");
    openapiFields.add("ApiId");
    openapiFields.add("ApiKey");
    openapiFields.add("ApiName");
    openapiFields.add("ApiSpecificationDownloadUrl");
    openapiFields.add("ApiSpecificationDownloadUrlExpiresAt");
    openapiFields.add("ProtocolType");
    openapiFields.add("Stage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiGatewayApiAsset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiGatewayApiAsset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiGatewayApiAsset is not found in the empty JSON string", ApiGatewayApiAsset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiGatewayApiAsset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiGatewayApiAsset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ApiDescription`
      if (jsonObj.get("ApiDescription") != null && !jsonObj.get("ApiDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApiDescription"));
      }
      // validate the optional field `ApiEndpoint`
      if (jsonObj.get("ApiEndpoint") != null && !jsonObj.get("ApiEndpoint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApiEndpoint"));
      }
      // validate the optional field `ApiId`
      if (jsonObj.get("ApiId") != null && !jsonObj.get("ApiId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApiId"));
      }
      // validate the optional field `ApiKey`
      if (jsonObj.get("ApiKey") != null && !jsonObj.get("ApiKey").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApiKey"));
      }
      // validate the optional field `ApiName`
      if (jsonObj.get("ApiName") != null && !jsonObj.get("ApiName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApiName"));
      }
      // validate the optional field `ApiSpecificationDownloadUrl`
      if (jsonObj.get("ApiSpecificationDownloadUrl") != null && !jsonObj.get("ApiSpecificationDownloadUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApiSpecificationDownloadUrl"));
      }
      // validate the optional field `ApiSpecificationDownloadUrlExpiresAt`
      if (jsonObj.get("ApiSpecificationDownloadUrlExpiresAt") != null && !jsonObj.get("ApiSpecificationDownloadUrlExpiresAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ApiSpecificationDownloadUrlExpiresAt"));
      }
      // validate the optional field `ProtocolType`
      if (jsonObj.get("ProtocolType") != null && !jsonObj.get("ProtocolType").isJsonNull()) {
        ProtocolType.validateJsonElement(jsonObj.get("ProtocolType"));
      }
      // validate the optional field `Stage`
      if (jsonObj.get("Stage") != null && !jsonObj.get("Stage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Stage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiGatewayApiAsset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiGatewayApiAsset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiGatewayApiAsset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiGatewayApiAsset.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiGatewayApiAsset>() {
           @Override
           public void write(JsonWriter out, ApiGatewayApiAsset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiGatewayApiAsset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiGatewayApiAsset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiGatewayApiAsset
   * @throws IOException if the JSON string is invalid with respect to ApiGatewayApiAsset
   */
  public static ApiGatewayApiAsset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiGatewayApiAsset.class);
  }

  /**
   * Convert an instance of ApiGatewayApiAsset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

