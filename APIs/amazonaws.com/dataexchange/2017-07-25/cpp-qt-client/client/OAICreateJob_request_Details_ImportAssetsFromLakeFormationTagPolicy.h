/**
 * AWS Data Exchange
 * <p>AWS Data Exchange is a service that makes it easy for AWS customers to exchange data in the cloud. You can use the AWS Data Exchange APIs to create, update, manage, and access file-based data set in the AWS Cloud.</p> <p>As a subscriber, you can view and access the data sets that you have an entitlement to through a subscription. You can use the APIs to download or copy your entitled data sets to Amazon Simple Storage Service (Amazon S3) for use across a variety of AWS analytics and machine learning services.</p> <p>As a provider, you can create and manage your data sets that you would like to publish to a product. Being able to package and provide your data sets into products requires a few steps to determine eligibility. For more information, visit the <i>AWS Data Exchange User Guide</i>.</p> <p>A data set is a collection of data that can be changed or updated over time. Data sets can be updated using revisions, which represent a new version or incremental change to a data set. A revision contains one or more assets. An asset in AWS Data Exchange is a piece of data that can be stored as an Amazon S3 object, Redshift datashare, API Gateway API, AWS Lake Formation data permission, or Amazon S3 data access. The asset can be a structured data file, an image file, or some other data file. Jobs are asynchronous import or export operations used to create or copy assets.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateJob_request_Details_ImportAssetsFromLakeFormationTagPolicy.h
 *
 * 
 */

#ifndef OAICreateJob_request_Details_ImportAssetsFromLakeFormationTagPolicy_H
#define OAICreateJob_request_Details_ImportAssetsFromLakeFormationTagPolicy_H

#include <QJsonObject>

#include "OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Database.h"
#include "OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Table.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Database;
class OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Table;

class OAICreateJob_request_Details_ImportAssetsFromLakeFormationTagPolicy : public OAIObject {
public:
    OAICreateJob_request_Details_ImportAssetsFromLakeFormationTagPolicy();
    OAICreateJob_request_Details_ImportAssetsFromLakeFormationTagPolicy(QString json);
    ~OAICreateJob_request_Details_ImportAssetsFromLakeFormationTagPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCatalogId() const;
    void setCatalogId(const QString &catalog_id);
    bool is_catalog_id_Set() const;
    bool is_catalog_id_Valid() const;

    OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Database getDatabase() const;
    void setDatabase(const OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Database &database);
    bool is_database_Set() const;
    bool is_database_Valid() const;

    OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Table getTable() const;
    void setTable(const OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Table &table);
    bool is_table_Set() const;
    bool is_table_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getDataSetId() const;
    void setDataSetId(const QString &data_set_id);
    bool is_data_set_id_Set() const;
    bool is_data_set_id_Valid() const;

    QString getRevisionId() const;
    void setRevisionId(const QString &revision_id);
    bool is_revision_id_Set() const;
    bool is_revision_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_catalog_id;
    bool m_catalog_id_isSet;
    bool m_catalog_id_isValid;

    OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Database m_database;
    bool m_database_isSet;
    bool m_database_isValid;

    OAIImportAssetsFromLakeFormationTagPolicyRequestDetails_Table m_table;
    bool m_table_isSet;
    bool m_table_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_data_set_id;
    bool m_data_set_id_isSet;
    bool m_data_set_id_isValid;

    QString m_revision_id;
    bool m_revision_id_isSet;
    bool m_revision_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateJob_request_Details_ImportAssetsFromLakeFormationTagPolicy)

#endif // OAICreateJob_request_Details_ImportAssetsFromLakeFormationTagPolicy_H
