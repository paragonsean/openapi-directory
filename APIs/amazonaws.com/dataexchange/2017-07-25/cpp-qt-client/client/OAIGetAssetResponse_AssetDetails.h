/**
 * AWS Data Exchange
 * <p>AWS Data Exchange is a service that makes it easy for AWS customers to exchange data in the cloud. You can use the AWS Data Exchange APIs to create, update, manage, and access file-based data set in the AWS Cloud.</p> <p>As a subscriber, you can view and access the data sets that you have an entitlement to through a subscription. You can use the APIs to download or copy your entitled data sets to Amazon Simple Storage Service (Amazon S3) for use across a variety of AWS analytics and machine learning services.</p> <p>As a provider, you can create and manage your data sets that you would like to publish to a product. Being able to package and provide your data sets into products requires a few steps to determine eligibility. For more information, visit the <i>AWS Data Exchange User Guide</i>.</p> <p>A data set is a collection of data that can be changed or updated over time. Data sets can be updated using revisions, which represent a new version or incremental change to a data set. A revision contains one or more assets. An asset in AWS Data Exchange is a piece of data that can be stored as an Amazon S3 object, Redshift datashare, API Gateway API, AWS Lake Formation data permission, or Amazon S3 data access. The asset can be a structured data file, an image file, or some other data file. Jobs are asynchronous import or export operations used to create or copy assets.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAssetResponse_AssetDetails.h
 *
 * 
 */

#ifndef OAIGetAssetResponse_AssetDetails_H
#define OAIGetAssetResponse_AssetDetails_H

#include <QJsonObject>

#include "OAIAssetDetails_ApiGatewayApiAsset.h"
#include "OAIAssetDetails_LakeFormationDataPermissionAsset.h"
#include "OAIAssetDetails_RedshiftDataShareAsset.h"
#include "OAIAssetDetails_S3DataAccessAsset.h"
#include "OAIAssetDetails_S3SnapshotAsset.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssetDetails_S3SnapshotAsset;
class OAIAssetDetails_RedshiftDataShareAsset;
class OAIAssetDetails_ApiGatewayApiAsset;
class OAIAssetDetails_S3DataAccessAsset;
class OAIAssetDetails_LakeFormationDataPermissionAsset;

class OAIGetAssetResponse_AssetDetails : public OAIObject {
public:
    OAIGetAssetResponse_AssetDetails();
    OAIGetAssetResponse_AssetDetails(QString json);
    ~OAIGetAssetResponse_AssetDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAssetDetails_S3SnapshotAsset getS3SnapshotAsset() const;
    void setS3SnapshotAsset(const OAIAssetDetails_S3SnapshotAsset &s3_snapshot_asset);
    bool is_s3_snapshot_asset_Set() const;
    bool is_s3_snapshot_asset_Valid() const;

    OAIAssetDetails_RedshiftDataShareAsset getRedshiftDataShareAsset() const;
    void setRedshiftDataShareAsset(const OAIAssetDetails_RedshiftDataShareAsset &redshift_data_share_asset);
    bool is_redshift_data_share_asset_Set() const;
    bool is_redshift_data_share_asset_Valid() const;

    OAIAssetDetails_ApiGatewayApiAsset getApiGatewayApiAsset() const;
    void setApiGatewayApiAsset(const OAIAssetDetails_ApiGatewayApiAsset &api_gateway_api_asset);
    bool is_api_gateway_api_asset_Set() const;
    bool is_api_gateway_api_asset_Valid() const;

    OAIAssetDetails_S3DataAccessAsset getS3DataAccessAsset() const;
    void setS3DataAccessAsset(const OAIAssetDetails_S3DataAccessAsset &s3_data_access_asset);
    bool is_s3_data_access_asset_Set() const;
    bool is_s3_data_access_asset_Valid() const;

    OAIAssetDetails_LakeFormationDataPermissionAsset getLakeFormationDataPermissionAsset() const;
    void setLakeFormationDataPermissionAsset(const OAIAssetDetails_LakeFormationDataPermissionAsset &lake_formation_data_permission_asset);
    bool is_lake_formation_data_permission_asset_Set() const;
    bool is_lake_formation_data_permission_asset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAssetDetails_S3SnapshotAsset m_s3_snapshot_asset;
    bool m_s3_snapshot_asset_isSet;
    bool m_s3_snapshot_asset_isValid;

    OAIAssetDetails_RedshiftDataShareAsset m_redshift_data_share_asset;
    bool m_redshift_data_share_asset_isSet;
    bool m_redshift_data_share_asset_isValid;

    OAIAssetDetails_ApiGatewayApiAsset m_api_gateway_api_asset;
    bool m_api_gateway_api_asset_isSet;
    bool m_api_gateway_api_asset_isValid;

    OAIAssetDetails_S3DataAccessAsset m_s3_data_access_asset;
    bool m_s3_data_access_asset_isSet;
    bool m_s3_data_access_asset_isValid;

    OAIAssetDetails_LakeFormationDataPermissionAsset m_lake_formation_data_permission_asset;
    bool m_lake_formation_data_permission_asset_isSet;
    bool m_lake_formation_data_permission_asset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAssetResponse_AssetDetails)

#endif // OAIGetAssetResponse_AssetDetails_H
