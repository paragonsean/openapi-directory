/**
 * AWS Data Exchange
 * <p>AWS Data Exchange is a service that makes it easy for AWS customers to exchange data in the cloud. You can use the AWS Data Exchange APIs to create, update, manage, and access file-based data set in the AWS Cloud.</p> <p>As a subscriber, you can view and access the data sets that you have an entitlement to through a subscription. You can use the APIs to download or copy your entitled data sets to Amazon Simple Storage Service (Amazon S3) for use across a variety of AWS analytics and machine learning services.</p> <p>As a provider, you can create and manage your data sets that you would like to publish to a product. Being able to package and provide your data sets into products requires a few steps to determine eligibility. For more information, visit the <i>AWS Data Exchange User Guide</i>.</p> <p>A data set is a collection of data that can be changed or updated over time. Data sets can be updated using revisions, which represent a new version or incremental change to a data set. A revision contains one or more assets. An asset in AWS Data Exchange is a piece of data that can be stored as an Amazon S3 object, Redshift datashare, API Gateway API, AWS Lake Formation data permission, or Amazon S3 data access. The asset can be a structured data file, an image file, or some other data file. Jobs are asynchronous import or export operations used to create or copy assets.</p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobError.h
 *
 * An error that occurred with the job request.
 */

#ifndef OAIJobError_H
#define OAIJobError_H

#include <QJsonObject>

#include "OAICode.h"
#include "OAIJobErrorLimitName.h"
#include "OAIJobErrorResourceTypes.h"
#include "OAIJobError_Details.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJobError_Details;

class OAIJobError : public OAIObject {
public:
    OAIJobError();
    OAIJobError(QString json);
    ~OAIJobError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICode getCode() const;
    void setCode(const OAICode &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    OAIJobError_Details getDetails() const;
    void setDetails(const OAIJobError_Details &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    OAIJobErrorLimitName getLimitName() const;
    void setLimitName(const OAIJobErrorLimitName &limit_name);
    bool is_limit_name_Set() const;
    bool is_limit_name_Valid() const;

    double getLimitValue() const;
    void setLimitValue(const double &limit_value);
    bool is_limit_value_Set() const;
    bool is_limit_value_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    OAIJobErrorResourceTypes getResourceType() const;
    void setResourceType(const OAIJobErrorResourceTypes &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICode m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    OAIJobError_Details m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    OAIJobErrorLimitName m_limit_name;
    bool m_limit_name_isSet;
    bool m_limit_name_isValid;

    double m_limit_value;
    bool m_limit_value_isSet;
    bool m_limit_value_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    OAIJobErrorResourceTypes m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobError)

#endif // OAIJobError_H
