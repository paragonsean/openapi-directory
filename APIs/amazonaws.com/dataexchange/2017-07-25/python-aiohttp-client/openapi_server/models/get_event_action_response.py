# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_event_action_response_action import CreateEventActionResponseAction
from openapi_server.models.create_event_action_response_event import CreateEventActionResponseEvent
from openapi_server import util


class GetEventActionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: CreateEventActionResponseAction=None, arn: str=None, created_at: datetime=None, event: CreateEventActionResponseEvent=None, id: str=None, updated_at: datetime=None):
        """GetEventActionResponse - a model defined in OpenAPI

        :param action: The action of this GetEventActionResponse.
        :param arn: The arn of this GetEventActionResponse.
        :param created_at: The created_at of this GetEventActionResponse.
        :param event: The event of this GetEventActionResponse.
        :param id: The id of this GetEventActionResponse.
        :param updated_at: The updated_at of this GetEventActionResponse.
        """
        self.openapi_types = {
            'action': CreateEventActionResponseAction,
            'arn': str,
            'created_at': datetime,
            'event': CreateEventActionResponseEvent,
            'id': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'action': 'Action',
            'arn': 'Arn',
            'created_at': 'CreatedAt',
            'event': 'Event',
            'id': 'Id',
            'updated_at': 'UpdatedAt'
        }

        self._action = action
        self._arn = arn
        self._created_at = created_at
        self._event = event
        self._id = id
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetEventActionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetEventActionResponse of this GetEventActionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this GetEventActionResponse.


        :return: The action of this GetEventActionResponse.
        :rtype: CreateEventActionResponseAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this GetEventActionResponse.


        :param action: The action of this GetEventActionResponse.
        :type action: CreateEventActionResponseAction
        """

        self._action = action

    @property
    def arn(self):
        """Gets the arn of this GetEventActionResponse.


        :return: The arn of this GetEventActionResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetEventActionResponse.


        :param arn: The arn of this GetEventActionResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def created_at(self):
        """Gets the created_at of this GetEventActionResponse.


        :return: The created_at of this GetEventActionResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetEventActionResponse.


        :param created_at: The created_at of this GetEventActionResponse.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def event(self):
        """Gets the event of this GetEventActionResponse.


        :return: The event of this GetEventActionResponse.
        :rtype: CreateEventActionResponseEvent
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this GetEventActionResponse.


        :param event: The event of this GetEventActionResponse.
        :type event: CreateEventActionResponseEvent
        """

        self._event = event

    @property
    def id(self):
        """Gets the id of this GetEventActionResponse.


        :return: The id of this GetEventActionResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetEventActionResponse.


        :param id: The id of this GetEventActionResponse.
        :type id: str
        """

        self._id = id

    @property
    def updated_at(self):
        """Gets the updated_at of this GetEventActionResponse.


        :return: The updated_at of this GetEventActionResponse.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this GetEventActionResponse.


        :param updated_at: The updated_at of this GetEventActionResponse.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
