# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.protocol_type import ProtocolType
from openapi_server import util


class ResponseDetailsImportAssetFromApiGatewayApi(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_description: str=None, api_id: str=None, api_key: str=None, api_name: str=None, api_specification_md5_hash: str=None, api_specification_upload_url: str=None, api_specification_upload_url_expires_at: datetime=None, data_set_id: str=None, protocol_type: ProtocolType=None, revision_id: str=None, stage: str=None):
        """ResponseDetailsImportAssetFromApiGatewayApi - a model defined in OpenAPI

        :param api_description: The api_description of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param api_id: The api_id of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param api_key: The api_key of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param api_name: The api_name of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param api_specification_md5_hash: The api_specification_md5_hash of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param api_specification_upload_url: The api_specification_upload_url of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param api_specification_upload_url_expires_at: The api_specification_upload_url_expires_at of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param data_set_id: The data_set_id of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param protocol_type: The protocol_type of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param revision_id: The revision_id of this ResponseDetailsImportAssetFromApiGatewayApi.
        :param stage: The stage of this ResponseDetailsImportAssetFromApiGatewayApi.
        """
        self.openapi_types = {
            'api_description': str,
            'api_id': str,
            'api_key': str,
            'api_name': str,
            'api_specification_md5_hash': str,
            'api_specification_upload_url': str,
            'api_specification_upload_url_expires_at': datetime,
            'data_set_id': str,
            'protocol_type': ProtocolType,
            'revision_id': str,
            'stage': str
        }

        self.attribute_map = {
            'api_description': 'ApiDescription',
            'api_id': 'ApiId',
            'api_key': 'ApiKey',
            'api_name': 'ApiName',
            'api_specification_md5_hash': 'ApiSpecificationMd5Hash',
            'api_specification_upload_url': 'ApiSpecificationUploadUrl',
            'api_specification_upload_url_expires_at': 'ApiSpecificationUploadUrlExpiresAt',
            'data_set_id': 'DataSetId',
            'protocol_type': 'ProtocolType',
            'revision_id': 'RevisionId',
            'stage': 'Stage'
        }

        self._api_description = api_description
        self._api_id = api_id
        self._api_key = api_key
        self._api_name = api_name
        self._api_specification_md5_hash = api_specification_md5_hash
        self._api_specification_upload_url = api_specification_upload_url
        self._api_specification_upload_url_expires_at = api_specification_upload_url_expires_at
        self._data_set_id = data_set_id
        self._protocol_type = protocol_type
        self._revision_id = revision_id
        self._stage = stage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseDetailsImportAssetFromApiGatewayApi':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseDetails_ImportAssetFromApiGatewayApi of this ResponseDetailsImportAssetFromApiGatewayApi.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_description(self):
        """Gets the api_description of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The api_description of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: str
        """
        return self._api_description

    @api_description.setter
    def api_description(self, api_description):
        """Sets the api_description of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param api_description: The api_description of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type api_description: str
        """

        self._api_description = api_description

    @property
    def api_id(self):
        """Gets the api_id of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The api_id of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: str
        """
        return self._api_id

    @api_id.setter
    def api_id(self, api_id):
        """Sets the api_id of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param api_id: The api_id of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type api_id: str
        """
        if api_id is None:
            raise ValueError("Invalid value for `api_id`, must not be `None`")

        self._api_id = api_id

    @property
    def api_key(self):
        """Gets the api_key of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The api_key of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param api_key: The api_key of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def api_name(self):
        """Gets the api_name of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The api_name of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: str
        """
        return self._api_name

    @api_name.setter
    def api_name(self, api_name):
        """Sets the api_name of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param api_name: The api_name of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type api_name: str
        """
        if api_name is None:
            raise ValueError("Invalid value for `api_name`, must not be `None`")

        self._api_name = api_name

    @property
    def api_specification_md5_hash(self):
        """Gets the api_specification_md5_hash of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The api_specification_md5_hash of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: str
        """
        return self._api_specification_md5_hash

    @api_specification_md5_hash.setter
    def api_specification_md5_hash(self, api_specification_md5_hash):
        """Sets the api_specification_md5_hash of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param api_specification_md5_hash: The api_specification_md5_hash of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type api_specification_md5_hash: str
        """
        if api_specification_md5_hash is None:
            raise ValueError("Invalid value for `api_specification_md5_hash`, must not be `None`")

        self._api_specification_md5_hash = api_specification_md5_hash

    @property
    def api_specification_upload_url(self):
        """Gets the api_specification_upload_url of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The api_specification_upload_url of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: str
        """
        return self._api_specification_upload_url

    @api_specification_upload_url.setter
    def api_specification_upload_url(self, api_specification_upload_url):
        """Sets the api_specification_upload_url of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param api_specification_upload_url: The api_specification_upload_url of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type api_specification_upload_url: str
        """
        if api_specification_upload_url is None:
            raise ValueError("Invalid value for `api_specification_upload_url`, must not be `None`")

        self._api_specification_upload_url = api_specification_upload_url

    @property
    def api_specification_upload_url_expires_at(self):
        """Gets the api_specification_upload_url_expires_at of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The api_specification_upload_url_expires_at of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: datetime
        """
        return self._api_specification_upload_url_expires_at

    @api_specification_upload_url_expires_at.setter
    def api_specification_upload_url_expires_at(self, api_specification_upload_url_expires_at):
        """Sets the api_specification_upload_url_expires_at of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param api_specification_upload_url_expires_at: The api_specification_upload_url_expires_at of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type api_specification_upload_url_expires_at: datetime
        """
        if api_specification_upload_url_expires_at is None:
            raise ValueError("Invalid value for `api_specification_upload_url_expires_at`, must not be `None`")

        self._api_specification_upload_url_expires_at = api_specification_upload_url_expires_at

    @property
    def data_set_id(self):
        """Gets the data_set_id of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The data_set_id of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: str
        """
        return self._data_set_id

    @data_set_id.setter
    def data_set_id(self, data_set_id):
        """Sets the data_set_id of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param data_set_id: The data_set_id of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type data_set_id: str
        """
        if data_set_id is None:
            raise ValueError("Invalid value for `data_set_id`, must not be `None`")

        self._data_set_id = data_set_id

    @property
    def protocol_type(self):
        """Gets the protocol_type of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The protocol_type of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: ProtocolType
        """
        return self._protocol_type

    @protocol_type.setter
    def protocol_type(self, protocol_type):
        """Sets the protocol_type of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param protocol_type: The protocol_type of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type protocol_type: ProtocolType
        """
        if protocol_type is None:
            raise ValueError("Invalid value for `protocol_type`, must not be `None`")

        self._protocol_type = protocol_type

    @property
    def revision_id(self):
        """Gets the revision_id of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The revision_id of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param revision_id: The revision_id of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type revision_id: str
        """
        if revision_id is None:
            raise ValueError("Invalid value for `revision_id`, must not be `None`")

        self._revision_id = revision_id

    @property
    def stage(self):
        """Gets the stage of this ResponseDetailsImportAssetFromApiGatewayApi.


        :return: The stage of this ResponseDetailsImportAssetFromApiGatewayApi.
        :rtype: str
        """
        return self._stage

    @stage.setter
    def stage(self, stage):
        """Sets the stage of this ResponseDetailsImportAssetFromApiGatewayApi.


        :param stage: The stage of this ResponseDetailsImportAssetFromApiGatewayApi.
        :type stage: str
        """
        if stage is None:
            raise ValueError("Invalid value for `stage`, must not be `None`")

        self._stage = stage
