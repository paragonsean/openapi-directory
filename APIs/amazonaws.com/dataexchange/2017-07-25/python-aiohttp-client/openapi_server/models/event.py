# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_event_action_request_event_revision_published import CreateEventActionRequestEventRevisionPublished
from openapi_server import util


class Event(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, revision_published: CreateEventActionRequestEventRevisionPublished=None):
        """Event - a model defined in OpenAPI

        :param revision_published: The revision_published of this Event.
        """
        self.openapi_types = {
            'revision_published': CreateEventActionRequestEventRevisionPublished
        }

        self.attribute_map = {
            'revision_published': 'RevisionPublished'
        }

        self._revision_published = revision_published

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Event':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Event of this Event.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def revision_published(self):
        """Gets the revision_published of this Event.


        :return: The revision_published of this Event.
        :rtype: CreateEventActionRequestEventRevisionPublished
        """
        return self._revision_published

    @revision_published.setter
    def revision_published(self, revision_published):
        """Sets the revision_published of this Event.


        :param revision_published: The revision_published of this Event.
        :type revision_published: CreateEventActionRequestEventRevisionPublished
        """

        self._revision_published = revision_published
