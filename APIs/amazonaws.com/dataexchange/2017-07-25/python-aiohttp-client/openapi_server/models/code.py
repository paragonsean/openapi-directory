# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Code(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ACCESS_DENIED_EXCEPTION = 'ACCESS_DENIED_EXCEPTION'
    INTERNAL_SERVER_EXCEPTION = 'INTERNAL_SERVER_EXCEPTION'
    MALWARE_DETECTED = 'MALWARE_DETECTED'
    RESOURCE_NOT_FOUND_EXCEPTION = 'RESOURCE_NOT_FOUND_EXCEPTION'
    SERVICE_QUOTA_EXCEEDED_EXCEPTION = 'SERVICE_QUOTA_EXCEEDED_EXCEPTION'
    VALIDATION_EXCEPTION = 'VALIDATION_EXCEPTION'
    MALWARE_SCAN_ENCRYPTED_FILE = 'MALWARE_SCAN_ENCRYPTED_FILE'

    def __init__(self):
        """Code - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Code':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Code of this Code.
        """
        return util.deserialize_model(dikt, cls)
