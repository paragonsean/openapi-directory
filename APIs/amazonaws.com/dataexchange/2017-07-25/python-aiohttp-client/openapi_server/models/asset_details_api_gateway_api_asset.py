# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.protocol_type import ProtocolType
from openapi_server import util


class AssetDetailsApiGatewayApiAsset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_description: str=None, api_endpoint: str=None, api_id: str=None, api_key: str=None, api_name: str=None, api_specification_download_url: str=None, api_specification_download_url_expires_at: datetime=None, protocol_type: ProtocolType=None, stage: str=None):
        """AssetDetailsApiGatewayApiAsset - a model defined in OpenAPI

        :param api_description: The api_description of this AssetDetailsApiGatewayApiAsset.
        :param api_endpoint: The api_endpoint of this AssetDetailsApiGatewayApiAsset.
        :param api_id: The api_id of this AssetDetailsApiGatewayApiAsset.
        :param api_key: The api_key of this AssetDetailsApiGatewayApiAsset.
        :param api_name: The api_name of this AssetDetailsApiGatewayApiAsset.
        :param api_specification_download_url: The api_specification_download_url of this AssetDetailsApiGatewayApiAsset.
        :param api_specification_download_url_expires_at: The api_specification_download_url_expires_at of this AssetDetailsApiGatewayApiAsset.
        :param protocol_type: The protocol_type of this AssetDetailsApiGatewayApiAsset.
        :param stage: The stage of this AssetDetailsApiGatewayApiAsset.
        """
        self.openapi_types = {
            'api_description': str,
            'api_endpoint': str,
            'api_id': str,
            'api_key': str,
            'api_name': str,
            'api_specification_download_url': str,
            'api_specification_download_url_expires_at': datetime,
            'protocol_type': ProtocolType,
            'stage': str
        }

        self.attribute_map = {
            'api_description': 'ApiDescription',
            'api_endpoint': 'ApiEndpoint',
            'api_id': 'ApiId',
            'api_key': 'ApiKey',
            'api_name': 'ApiName',
            'api_specification_download_url': 'ApiSpecificationDownloadUrl',
            'api_specification_download_url_expires_at': 'ApiSpecificationDownloadUrlExpiresAt',
            'protocol_type': 'ProtocolType',
            'stage': 'Stage'
        }

        self._api_description = api_description
        self._api_endpoint = api_endpoint
        self._api_id = api_id
        self._api_key = api_key
        self._api_name = api_name
        self._api_specification_download_url = api_specification_download_url
        self._api_specification_download_url_expires_at = api_specification_download_url_expires_at
        self._protocol_type = protocol_type
        self._stage = stage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetDetailsApiGatewayApiAsset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssetDetails_ApiGatewayApiAsset of this AssetDetailsApiGatewayApiAsset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_description(self):
        """Gets the api_description of this AssetDetailsApiGatewayApiAsset.


        :return: The api_description of this AssetDetailsApiGatewayApiAsset.
        :rtype: str
        """
        return self._api_description

    @api_description.setter
    def api_description(self, api_description):
        """Sets the api_description of this AssetDetailsApiGatewayApiAsset.


        :param api_description: The api_description of this AssetDetailsApiGatewayApiAsset.
        :type api_description: str
        """

        self._api_description = api_description

    @property
    def api_endpoint(self):
        """Gets the api_endpoint of this AssetDetailsApiGatewayApiAsset.


        :return: The api_endpoint of this AssetDetailsApiGatewayApiAsset.
        :rtype: str
        """
        return self._api_endpoint

    @api_endpoint.setter
    def api_endpoint(self, api_endpoint):
        """Sets the api_endpoint of this AssetDetailsApiGatewayApiAsset.


        :param api_endpoint: The api_endpoint of this AssetDetailsApiGatewayApiAsset.
        :type api_endpoint: str
        """

        self._api_endpoint = api_endpoint

    @property
    def api_id(self):
        """Gets the api_id of this AssetDetailsApiGatewayApiAsset.


        :return: The api_id of this AssetDetailsApiGatewayApiAsset.
        :rtype: str
        """
        return self._api_id

    @api_id.setter
    def api_id(self, api_id):
        """Sets the api_id of this AssetDetailsApiGatewayApiAsset.


        :param api_id: The api_id of this AssetDetailsApiGatewayApiAsset.
        :type api_id: str
        """

        self._api_id = api_id

    @property
    def api_key(self):
        """Gets the api_key of this AssetDetailsApiGatewayApiAsset.


        :return: The api_key of this AssetDetailsApiGatewayApiAsset.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this AssetDetailsApiGatewayApiAsset.


        :param api_key: The api_key of this AssetDetailsApiGatewayApiAsset.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def api_name(self):
        """Gets the api_name of this AssetDetailsApiGatewayApiAsset.


        :return: The api_name of this AssetDetailsApiGatewayApiAsset.
        :rtype: str
        """
        return self._api_name

    @api_name.setter
    def api_name(self, api_name):
        """Sets the api_name of this AssetDetailsApiGatewayApiAsset.


        :param api_name: The api_name of this AssetDetailsApiGatewayApiAsset.
        :type api_name: str
        """

        self._api_name = api_name

    @property
    def api_specification_download_url(self):
        """Gets the api_specification_download_url of this AssetDetailsApiGatewayApiAsset.


        :return: The api_specification_download_url of this AssetDetailsApiGatewayApiAsset.
        :rtype: str
        """
        return self._api_specification_download_url

    @api_specification_download_url.setter
    def api_specification_download_url(self, api_specification_download_url):
        """Sets the api_specification_download_url of this AssetDetailsApiGatewayApiAsset.


        :param api_specification_download_url: The api_specification_download_url of this AssetDetailsApiGatewayApiAsset.
        :type api_specification_download_url: str
        """

        self._api_specification_download_url = api_specification_download_url

    @property
    def api_specification_download_url_expires_at(self):
        """Gets the api_specification_download_url_expires_at of this AssetDetailsApiGatewayApiAsset.


        :return: The api_specification_download_url_expires_at of this AssetDetailsApiGatewayApiAsset.
        :rtype: datetime
        """
        return self._api_specification_download_url_expires_at

    @api_specification_download_url_expires_at.setter
    def api_specification_download_url_expires_at(self, api_specification_download_url_expires_at):
        """Sets the api_specification_download_url_expires_at of this AssetDetailsApiGatewayApiAsset.


        :param api_specification_download_url_expires_at: The api_specification_download_url_expires_at of this AssetDetailsApiGatewayApiAsset.
        :type api_specification_download_url_expires_at: datetime
        """

        self._api_specification_download_url_expires_at = api_specification_download_url_expires_at

    @property
    def protocol_type(self):
        """Gets the protocol_type of this AssetDetailsApiGatewayApiAsset.


        :return: The protocol_type of this AssetDetailsApiGatewayApiAsset.
        :rtype: ProtocolType
        """
        return self._protocol_type

    @protocol_type.setter
    def protocol_type(self, protocol_type):
        """Sets the protocol_type of this AssetDetailsApiGatewayApiAsset.


        :param protocol_type: The protocol_type of this AssetDetailsApiGatewayApiAsset.
        :type protocol_type: ProtocolType
        """

        self._protocol_type = protocol_type

    @property
    def stage(self):
        """Gets the stage of this AssetDetailsApiGatewayApiAsset.


        :return: The stage of this AssetDetailsApiGatewayApiAsset.
        :rtype: str
        """
        return self._stage

    @stage.setter
    def stage(self, stage):
        """Sets the stage of this AssetDetailsApiGatewayApiAsset.


        :param stage: The stage of this AssetDetailsApiGatewayApiAsset.
        :type stage: str
        """

        self._stage = stage
