# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lf_resource_details_database import LFResourceDetailsDatabase
from openapi_server.models.lf_resource_details_table import LFResourceDetailsTable
from openapi_server import util


class LFTagPolicyDetailsResourceDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database: LFResourceDetailsDatabase=None, table: LFResourceDetailsTable=None):
        """LFTagPolicyDetailsResourceDetails - a model defined in OpenAPI

        :param database: The database of this LFTagPolicyDetailsResourceDetails.
        :param table: The table of this LFTagPolicyDetailsResourceDetails.
        """
        self.openapi_types = {
            'database': LFResourceDetailsDatabase,
            'table': LFResourceDetailsTable
        }

        self.attribute_map = {
            'database': 'Database',
            'table': 'Table'
        }

        self._database = database
        self._table = table

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LFTagPolicyDetailsResourceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LFTagPolicyDetails_ResourceDetails of this LFTagPolicyDetailsResourceDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database(self):
        """Gets the database of this LFTagPolicyDetailsResourceDetails.


        :return: The database of this LFTagPolicyDetailsResourceDetails.
        :rtype: LFResourceDetailsDatabase
        """
        return self._database

    @database.setter
    def database(self, database):
        """Sets the database of this LFTagPolicyDetailsResourceDetails.


        :param database: The database of this LFTagPolicyDetailsResourceDetails.
        :type database: LFResourceDetailsDatabase
        """

        self._database = database

    @property
    def table(self):
        """Gets the table of this LFTagPolicyDetailsResourceDetails.


        :return: The table of this LFTagPolicyDetailsResourceDetails.
        :rtype: LFResourceDetailsTable
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this LFTagPolicyDetailsResourceDetails.


        :param table: The table of this LFTagPolicyDetailsResourceDetails.
        :type table: LFResourceDetailsTable
        """

        self._table = table
