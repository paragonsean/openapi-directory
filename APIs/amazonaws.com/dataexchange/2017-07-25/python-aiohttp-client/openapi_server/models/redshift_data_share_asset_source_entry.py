# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RedshiftDataShareAssetSourceEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_share_arn: str=None):
        """RedshiftDataShareAssetSourceEntry - a model defined in OpenAPI

        :param data_share_arn: The data_share_arn of this RedshiftDataShareAssetSourceEntry.
        """
        self.openapi_types = {
            'data_share_arn': str
        }

        self.attribute_map = {
            'data_share_arn': 'DataShareArn'
        }

        self._data_share_arn = data_share_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RedshiftDataShareAssetSourceEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RedshiftDataShareAssetSourceEntry of this RedshiftDataShareAssetSourceEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_share_arn(self):
        """Gets the data_share_arn of this RedshiftDataShareAssetSourceEntry.


        :return: The data_share_arn of this RedshiftDataShareAssetSourceEntry.
        :rtype: str
        """
        return self._data_share_arn

    @data_share_arn.setter
    def data_share_arn(self, data_share_arn):
        """Sets the data_share_arn of this RedshiftDataShareAssetSourceEntry.


        :param data_share_arn: The data_share_arn of this RedshiftDataShareAssetSourceEntry.
        :type data_share_arn: str
        """
        if data_share_arn is None:
            raise ValueError("Invalid value for `data_share_arn`, must not be `None`")

        self._data_share_arn = data_share_arn
