# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Type(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    IMPORT_ASSETS_FROM_S3 = 'IMPORT_ASSETS_FROM_S3'
    IMPORT_ASSET_FROM_SIGNED_URL = 'IMPORT_ASSET_FROM_SIGNED_URL'
    EXPORT_ASSETS_TO_S3 = 'EXPORT_ASSETS_TO_S3'
    EXPORT_ASSET_TO_SIGNED_URL = 'EXPORT_ASSET_TO_SIGNED_URL'
    EXPORT_REVISIONS_TO_S3 = 'EXPORT_REVISIONS_TO_S3'
    IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES = 'IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES'
    IMPORT_ASSET_FROM_API_GATEWAY_API = 'IMPORT_ASSET_FROM_API_GATEWAY_API'
    CREATE_S3_DATA_ACCESS_FROM_S3_BUCKET = 'CREATE_S3_DATA_ACCESS_FROM_S3_BUCKET'
    IMPORT_ASSETS_FROM_LAKE_FORMATION_TAG_POLICY = 'IMPORT_ASSETS_FROM_LAKE_FORMATION_TAG_POLICY'

    def __init__(self):
        """Type - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Type':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Type of this Type.
        """
        return util.deserialize_model(dikt, cls)
