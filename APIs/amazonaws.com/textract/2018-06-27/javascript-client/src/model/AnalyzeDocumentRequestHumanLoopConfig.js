/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HumanLoopConfig from './HumanLoopConfig';
import HumanLoopConfigDataAttributes from './HumanLoopConfigDataAttributes';

/**
 * The AnalyzeDocumentRequestHumanLoopConfig model module.
 * @module model/AnalyzeDocumentRequestHumanLoopConfig
 * @version 2018-06-27
 */
class AnalyzeDocumentRequestHumanLoopConfig {
    /**
     * Constructs a new <code>AnalyzeDocumentRequestHumanLoopConfig</code>.
     * @alias module:model/AnalyzeDocumentRequestHumanLoopConfig
     * @implements module:model/HumanLoopConfig
     * @param humanLoopName {String} 
     * @param flowDefinitionArn {String} 
     */
    constructor(humanLoopName, flowDefinitionArn) { 
        HumanLoopConfig.initialize(this, humanLoopName, flowDefinitionArn);
        AnalyzeDocumentRequestHumanLoopConfig.initialize(this, humanLoopName, flowDefinitionArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, humanLoopName, flowDefinitionArn) { 
        obj['HumanLoopName'] = humanLoopName;
        obj['FlowDefinitionArn'] = flowDefinitionArn;
    }

    /**
     * Constructs a <code>AnalyzeDocumentRequestHumanLoopConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalyzeDocumentRequestHumanLoopConfig} obj Optional instance to populate.
     * @return {module:model/AnalyzeDocumentRequestHumanLoopConfig} The populated <code>AnalyzeDocumentRequestHumanLoopConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalyzeDocumentRequestHumanLoopConfig();
            HumanLoopConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('HumanLoopName')) {
                obj['HumanLoopName'] = ApiClient.convertToType(data['HumanLoopName'], 'String');
            }
            if (data.hasOwnProperty('FlowDefinitionArn')) {
                obj['FlowDefinitionArn'] = ApiClient.convertToType(data['FlowDefinitionArn'], 'String');
            }
            if (data.hasOwnProperty('DataAttributes')) {
                obj['DataAttributes'] = HumanLoopConfigDataAttributes.constructFromObject(data['DataAttributes']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalyzeDocumentRequestHumanLoopConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalyzeDocumentRequestHumanLoopConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnalyzeDocumentRequestHumanLoopConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `HumanLoopName`
        if (data['HumanLoopName']) { // data not null
          String.validateJSON(data['HumanLoopName']);
        }
        // validate the optional field `FlowDefinitionArn`
        if (data['FlowDefinitionArn']) { // data not null
          String.validateJSON(data['FlowDefinitionArn']);
        }
        // validate the optional field `DataAttributes`
        if (data['DataAttributes']) { // data not null
          HumanLoopConfigDataAttributes.validateJSON(data['DataAttributes']);
        }

        return true;
    }


}

AnalyzeDocumentRequestHumanLoopConfig.RequiredProperties = ["HumanLoopName", "FlowDefinitionArn"];

/**
 * @member {String} HumanLoopName
 */
AnalyzeDocumentRequestHumanLoopConfig.prototype['HumanLoopName'] = undefined;

/**
 * @member {String} FlowDefinitionArn
 */
AnalyzeDocumentRequestHumanLoopConfig.prototype['FlowDefinitionArn'] = undefined;

/**
 * @member {module:model/HumanLoopConfigDataAttributes} DataAttributes
 */
AnalyzeDocumentRequestHumanLoopConfig.prototype['DataAttributes'] = undefined;


// Implement HumanLoopConfig interface:
/**
 * @member {String} HumanLoopName
 */
HumanLoopConfig.prototype['HumanLoopName'] = undefined;
/**
 * @member {String} FlowDefinitionArn
 */
HumanLoopConfig.prototype['FlowDefinitionArn'] = undefined;
/**
 * @member {module:model/HumanLoopConfigDataAttributes} DataAttributes
 */
HumanLoopConfig.prototype['DataAttributes'] = undefined;




export default AnalyzeDocumentRequestHumanLoopConfig;

