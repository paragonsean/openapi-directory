/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyzeIDDetections from './AnalyzeIDDetections';

/**
 * The IdentityDocumentField model module.
 * @module model/IdentityDocumentField
 * @version 2018-06-27
 */
class IdentityDocumentField {
    /**
     * Constructs a new <code>IdentityDocumentField</code>.
     * Structure containing both the normalized type of the extracted information and the text associated with it. These are extracted as Type and Value respectively.
     * @alias module:model/IdentityDocumentField
     */
    constructor() { 
        
        IdentityDocumentField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IdentityDocumentField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityDocumentField} obj Optional instance to populate.
     * @return {module:model/IdentityDocumentField} The populated <code>IdentityDocumentField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityDocumentField();

            if (data.hasOwnProperty('Type')) {
                obj['Type'] = AnalyzeIDDetections.constructFromObject(data['Type']);
            }
            if (data.hasOwnProperty('ValueDetection')) {
                obj['ValueDetection'] = AnalyzeIDDetections.constructFromObject(data['ValueDetection']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityDocumentField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityDocumentField</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          AnalyzeIDDetections.validateJSON(data['Type']);
        }
        // validate the optional field `ValueDetection`
        if (data['ValueDetection']) { // data not null
          AnalyzeIDDetections.validateJSON(data['ValueDetection']);
        }

        return true;
    }


}



/**
 * @member {module:model/AnalyzeIDDetections} Type
 */
IdentityDocumentField.prototype['Type'] = undefined;

/**
 * @member {module:model/AnalyzeIDDetections} ValueDetection
 */
IdentityDocumentField.prototype['ValueDetection'] = undefined;






export default IdentityDocumentField;

