/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnalyzeIDRequest model module.
 * @module model/AnalyzeIDRequest
 * @version 2018-06-27
 */
class AnalyzeIDRequest {
    /**
     * Constructs a new <code>AnalyzeIDRequest</code>.
     * @alias module:model/AnalyzeIDRequest
     * @param documentPages {Array} 
     */
    constructor(documentPages) { 
        
        AnalyzeIDRequest.initialize(this, documentPages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, documentPages) { 
        obj['DocumentPages'] = documentPages;
    }

    /**
     * Constructs a <code>AnalyzeIDRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalyzeIDRequest} obj Optional instance to populate.
     * @return {module:model/AnalyzeIDRequest} The populated <code>AnalyzeIDRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalyzeIDRequest();

            if (data.hasOwnProperty('DocumentPages')) {
                obj['DocumentPages'] = ApiClient.convertToType(data['DocumentPages'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalyzeIDRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalyzeIDRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnalyzeIDRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DocumentPages`
        if (data['DocumentPages']) { // data not null
          Array.validateJSON(data['DocumentPages']);
        }

        return true;
    }


}

AnalyzeIDRequest.RequiredProperties = ["DocumentPages"];

/**
 * @member {Array} DocumentPages
 */
AnalyzeIDRequest.prototype['DocumentPages'] = undefined;






export default AnalyzeIDRequest;

