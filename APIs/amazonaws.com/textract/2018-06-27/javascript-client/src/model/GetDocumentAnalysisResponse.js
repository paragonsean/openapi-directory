/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetDocumentAnalysisResponseDocumentMetadata from './GetDocumentAnalysisResponseDocumentMetadata';
import JobStatus from './JobStatus';

/**
 * The GetDocumentAnalysisResponse model module.
 * @module model/GetDocumentAnalysisResponse
 * @version 2018-06-27
 */
class GetDocumentAnalysisResponse {
    /**
     * Constructs a new <code>GetDocumentAnalysisResponse</code>.
     * @alias module:model/GetDocumentAnalysisResponse
     */
    constructor() { 
        
        GetDocumentAnalysisResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetDocumentAnalysisResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDocumentAnalysisResponse} obj Optional instance to populate.
     * @return {module:model/GetDocumentAnalysisResponse} The populated <code>GetDocumentAnalysisResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDocumentAnalysisResponse();

            if (data.hasOwnProperty('DocumentMetadata')) {
                obj['DocumentMetadata'] = GetDocumentAnalysisResponseDocumentMetadata.constructFromObject(data['DocumentMetadata']);
            }
            if (data.hasOwnProperty('JobStatus')) {
                obj['JobStatus'] = ApiClient.convertToType(data['JobStatus'], JobStatus);
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
            if (data.hasOwnProperty('Blocks')) {
                obj['Blocks'] = ApiClient.convertToType(data['Blocks'], Array);
            }
            if (data.hasOwnProperty('Warnings')) {
                obj['Warnings'] = ApiClient.convertToType(data['Warnings'], Array);
            }
            if (data.hasOwnProperty('StatusMessage')) {
                obj['StatusMessage'] = ApiClient.convertToType(data['StatusMessage'], 'String');
            }
            if (data.hasOwnProperty('AnalyzeDocumentModelVersion')) {
                obj['AnalyzeDocumentModelVersion'] = ApiClient.convertToType(data['AnalyzeDocumentModelVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDocumentAnalysisResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDocumentAnalysisResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DocumentMetadata`
        if (data['DocumentMetadata']) { // data not null
          GetDocumentAnalysisResponseDocumentMetadata.validateJSON(data['DocumentMetadata']);
        }
        // validate the optional field `JobStatus`
        if (data['JobStatus']) { // data not null
          JobStatus.validateJSON(data['JobStatus']);
        }
        // validate the optional field `NextToken`
        if (data['NextToken']) { // data not null
          String.validateJSON(data['NextToken']);
        }
        // validate the optional field `Blocks`
        if (data['Blocks']) { // data not null
          Array.validateJSON(data['Blocks']);
        }
        // validate the optional field `Warnings`
        if (data['Warnings']) { // data not null
          Array.validateJSON(data['Warnings']);
        }
        // validate the optional field `StatusMessage`
        if (data['StatusMessage']) { // data not null
          String.validateJSON(data['StatusMessage']);
        }
        // validate the optional field `AnalyzeDocumentModelVersion`
        if (data['AnalyzeDocumentModelVersion']) { // data not null
          String.validateJSON(data['AnalyzeDocumentModelVersion']);
        }

        return true;
    }


}



/**
 * @member {module:model/GetDocumentAnalysisResponseDocumentMetadata} DocumentMetadata
 */
GetDocumentAnalysisResponse.prototype['DocumentMetadata'] = undefined;

/**
 * @member {module:model/JobStatus} JobStatus
 */
GetDocumentAnalysisResponse.prototype['JobStatus'] = undefined;

/**
 * @member {String} NextToken
 */
GetDocumentAnalysisResponse.prototype['NextToken'] = undefined;

/**
 * @member {Array} Blocks
 */
GetDocumentAnalysisResponse.prototype['Blocks'] = undefined;

/**
 * @member {Array} Warnings
 */
GetDocumentAnalysisResponse.prototype['Warnings'] = undefined;

/**
 * @member {String} StatusMessage
 */
GetDocumentAnalysisResponse.prototype['StatusMessage'] = undefined;

/**
 * @member {String} AnalyzeDocumentModelVersion
 */
GetDocumentAnalysisResponse.prototype['AnalyzeDocumentModelVersion'] = undefined;






export default GetDocumentAnalysisResponse;

