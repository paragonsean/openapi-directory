/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DocumentMetadata model module.
 * @module model/DocumentMetadata
 * @version 2018-06-27
 */
class DocumentMetadata {
    /**
     * Constructs a new <code>DocumentMetadata</code>.
     * Information about the input document.
     * @alias module:model/DocumentMetadata
     */
    constructor() { 
        
        DocumentMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DocumentMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentMetadata} obj Optional instance to populate.
     * @return {module:model/DocumentMetadata} The populated <code>DocumentMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocumentMetadata();

            if (data.hasOwnProperty('Pages')) {
                obj['Pages'] = ApiClient.convertToType(data['Pages'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DocumentMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DocumentMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Pages`
        if (data['Pages']) { // data not null
          Number.validateJSON(data['Pages']);
        }

        return true;
    }


}



/**
 * @member {Number} Pages
 */
DocumentMetadata.prototype['Pages'] = undefined;






export default DocumentMetadata;

