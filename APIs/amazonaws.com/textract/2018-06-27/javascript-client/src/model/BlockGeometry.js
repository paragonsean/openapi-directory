/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Geometry from './Geometry';
import GeometryBoundingBox from './GeometryBoundingBox';

/**
 * The BlockGeometry model module.
 * @module model/BlockGeometry
 * @version 2018-06-27
 */
class BlockGeometry {
    /**
     * Constructs a new <code>BlockGeometry</code>.
     * @alias module:model/BlockGeometry
     * @implements module:model/Geometry
     */
    constructor() { 
        Geometry.initialize(this);
        BlockGeometry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BlockGeometry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BlockGeometry} obj Optional instance to populate.
     * @return {module:model/BlockGeometry} The populated <code>BlockGeometry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BlockGeometry();
            Geometry.constructFromObject(data, obj);

            if (data.hasOwnProperty('BoundingBox')) {
                obj['BoundingBox'] = GeometryBoundingBox.constructFromObject(data['BoundingBox']);
            }
            if (data.hasOwnProperty('Polygon')) {
                obj['Polygon'] = ApiClient.convertToType(data['Polygon'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BlockGeometry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BlockGeometry</code>.
     */
    static validateJSON(data) {
        // validate the optional field `BoundingBox`
        if (data['BoundingBox']) { // data not null
          GeometryBoundingBox.validateJSON(data['BoundingBox']);
        }
        // validate the optional field `Polygon`
        if (data['Polygon']) { // data not null
          Array.validateJSON(data['Polygon']);
        }

        return true;
    }


}



/**
 * @member {module:model/GeometryBoundingBox} BoundingBox
 */
BlockGeometry.prototype['BoundingBox'] = undefined;

/**
 * @member {Array} Polygon
 */
BlockGeometry.prototype['Polygon'] = undefined;


// Implement Geometry interface:
/**
 * @member {module:model/GeometryBoundingBox} BoundingBox
 */
Geometry.prototype['BoundingBox'] = undefined;
/**
 * @member {Array} Polygon
 */
Geometry.prototype['Polygon'] = undefined;




export default BlockGeometry;

