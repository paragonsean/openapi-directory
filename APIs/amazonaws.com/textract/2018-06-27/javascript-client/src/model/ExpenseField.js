/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExpenseFieldCurrency from './ExpenseFieldCurrency';
import ExpenseFieldLabelDetection from './ExpenseFieldLabelDetection';
import ExpenseFieldType from './ExpenseFieldType';
import ExpenseFieldValueDetection from './ExpenseFieldValueDetection';

/**
 * The ExpenseField model module.
 * @module model/ExpenseField
 * @version 2018-06-27
 */
class ExpenseField {
    /**
     * Constructs a new <code>ExpenseField</code>.
     * Breakdown of detected information, seperated into the catagories Type, LabelDetection, and ValueDetection
     * @alias module:model/ExpenseField
     */
    constructor() { 
        
        ExpenseField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExpenseField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpenseField} obj Optional instance to populate.
     * @return {module:model/ExpenseField} The populated <code>ExpenseField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpenseField();

            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ExpenseFieldType.constructFromObject(data['Type']);
            }
            if (data.hasOwnProperty('LabelDetection')) {
                obj['LabelDetection'] = ExpenseFieldLabelDetection.constructFromObject(data['LabelDetection']);
            }
            if (data.hasOwnProperty('ValueDetection')) {
                obj['ValueDetection'] = ExpenseFieldValueDetection.constructFromObject(data['ValueDetection']);
            }
            if (data.hasOwnProperty('PageNumber')) {
                obj['PageNumber'] = ApiClient.convertToType(data['PageNumber'], 'Number');
            }
            if (data.hasOwnProperty('Currency')) {
                obj['Currency'] = ExpenseFieldCurrency.constructFromObject(data['Currency']);
            }
            if (data.hasOwnProperty('GroupProperties')) {
                obj['GroupProperties'] = ApiClient.convertToType(data['GroupProperties'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExpenseField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExpenseField</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          ExpenseFieldType.validateJSON(data['Type']);
        }
        // validate the optional field `LabelDetection`
        if (data['LabelDetection']) { // data not null
          ExpenseFieldLabelDetection.validateJSON(data['LabelDetection']);
        }
        // validate the optional field `ValueDetection`
        if (data['ValueDetection']) { // data not null
          ExpenseFieldValueDetection.validateJSON(data['ValueDetection']);
        }
        // validate the optional field `PageNumber`
        if (data['PageNumber']) { // data not null
          Number.validateJSON(data['PageNumber']);
        }
        // validate the optional field `Currency`
        if (data['Currency']) { // data not null
          ExpenseFieldCurrency.validateJSON(data['Currency']);
        }
        // validate the optional field `GroupProperties`
        if (data['GroupProperties']) { // data not null
          Array.validateJSON(data['GroupProperties']);
        }

        return true;
    }


}



/**
 * @member {module:model/ExpenseFieldType} Type
 */
ExpenseField.prototype['Type'] = undefined;

/**
 * @member {module:model/ExpenseFieldLabelDetection} LabelDetection
 */
ExpenseField.prototype['LabelDetection'] = undefined;

/**
 * @member {module:model/ExpenseFieldValueDetection} ValueDetection
 */
ExpenseField.prototype['ValueDetection'] = undefined;

/**
 * @member {Number} PageNumber
 */
ExpenseField.prototype['PageNumber'] = undefined;

/**
 * @member {module:model/ExpenseFieldCurrency} Currency
 */
ExpenseField.prototype['Currency'] = undefined;

/**
 * @member {Array} GroupProperties
 */
ExpenseField.prototype['GroupProperties'] = undefined;






export default ExpenseField;

