/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Point model module.
 * @module model/Point
 * @version 2018-06-27
 */
class Point {
    /**
     * Constructs a new <code>Point</code>.
     * &lt;p&gt;The X and Y coordinates of a point on a document page. The X and Y values that are returned are ratios of the overall document page size. For example, if the input document is 700 x 200 and the operation returns X&#x3D;0.5 and Y&#x3D;0.25, then the point is at the (350,50) pixel coordinate on the document page.&lt;/p&gt; &lt;p&gt;An array of &lt;code&gt;Point&lt;/code&gt; objects, &lt;code&gt;Polygon&lt;/code&gt;, is returned by &lt;a&gt;DetectDocumentText&lt;/a&gt;. &lt;code&gt;Polygon&lt;/code&gt; represents a fine-grained polygon around detected text. For more information, see Geometry in the Amazon Textract Developer Guide. &lt;/p&gt;
     * @alias module:model/Point
     */
    constructor() { 
        
        Point.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Point</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Point} obj Optional instance to populate.
     * @return {module:model/Point} The populated <code>Point</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Point();

            if (data.hasOwnProperty('X')) {
                obj['X'] = ApiClient.convertToType(data['X'], 'Number');
            }
            if (data.hasOwnProperty('Y')) {
                obj['Y'] = ApiClient.convertToType(data['Y'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Point</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Point</code>.
     */
    static validateJSON(data) {
        // validate the optional field `X`
        if (data['X']) { // data not null
          Number.validateJSON(data['X']);
        }
        // validate the optional field `Y`
        if (data['Y']) { // data not null
          Number.validateJSON(data['Y']);
        }

        return true;
    }


}



/**
 * @member {Number} X
 */
Point.prototype['X'] = undefined;

/**
 * @member {Number} Y
 */
Point.prototype['Y'] = undefined;






export default Point;

