/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueriesConfig model module.
 * @module model/QueriesConfig
 * @version 2018-06-27
 */
class QueriesConfig {
    /**
     * Constructs a new <code>QueriesConfig</code>.
     * &lt;p/&gt;
     * @alias module:model/QueriesConfig
     * @param queries {Array} 
     */
    constructor(queries) { 
        
        QueriesConfig.initialize(this, queries);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, queries) { 
        obj['Queries'] = queries;
    }

    /**
     * Constructs a <code>QueriesConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueriesConfig} obj Optional instance to populate.
     * @return {module:model/QueriesConfig} The populated <code>QueriesConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueriesConfig();

            if (data.hasOwnProperty('Queries')) {
                obj['Queries'] = ApiClient.convertToType(data['Queries'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueriesConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueriesConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QueriesConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Queries`
        if (data['Queries']) { // data not null
          Array.validateJSON(data['Queries']);
        }

        return true;
    }


}

QueriesConfig.RequiredProperties = ["Queries"];

/**
 * @member {Array} Queries
 */
QueriesConfig.prototype['Queries'] = undefined;






export default QueriesConfig;

