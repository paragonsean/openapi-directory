/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExpenseType model module.
 * @module model/ExpenseType
 * @version 2018-06-27
 */
class ExpenseType {
    /**
     * Constructs a new <code>ExpenseType</code>.
     * An object used to store information about the Type detected by Amazon Textract.
     * @alias module:model/ExpenseType
     */
    constructor() { 
        
        ExpenseType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExpenseType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpenseType} obj Optional instance to populate.
     * @return {module:model/ExpenseType} The populated <code>ExpenseType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpenseType();

            if (data.hasOwnProperty('Text')) {
                obj['Text'] = ApiClient.convertToType(data['Text'], 'String');
            }
            if (data.hasOwnProperty('Confidence')) {
                obj['Confidence'] = ApiClient.convertToType(data['Confidence'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExpenseType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExpenseType</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Text`
        if (data['Text']) { // data not null
          String.validateJSON(data['Text']);
        }
        // validate the optional field `Confidence`
        if (data['Confidence']) { // data not null
          Number.validateJSON(data['Confidence']);
        }

        return true;
    }


}



/**
 * @member {String} Text
 */
ExpenseType.prototype['Text'] = undefined;

/**
 * @member {Number} Confidence
 */
ExpenseType.prototype['Confidence'] = undefined;






export default ExpenseType;

