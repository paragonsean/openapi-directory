/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExpenseDocument from './ExpenseDocument';
import ExtractionLendingDocument from './ExtractionLendingDocument';
import IdentityDocument from './IdentityDocument';

/**
 * The Extraction model module.
 * @module model/Extraction
 * @version 2018-06-27
 */
class Extraction {
    /**
     * Constructs a new <code>Extraction</code>.
     * Contains information extracted by an analysis operation after using StartLendingAnalysis.
     * @alias module:model/Extraction
     */
    constructor() { 
        
        Extraction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Extraction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Extraction} obj Optional instance to populate.
     * @return {module:model/Extraction} The populated <code>Extraction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Extraction();

            if (data.hasOwnProperty('LendingDocument')) {
                obj['LendingDocument'] = ExtractionLendingDocument.constructFromObject(data['LendingDocument']);
            }
            if (data.hasOwnProperty('ExpenseDocument')) {
                obj['ExpenseDocument'] = ExpenseDocument.constructFromObject(data['ExpenseDocument']);
            }
            if (data.hasOwnProperty('IdentityDocument')) {
                obj['IdentityDocument'] = IdentityDocument.constructFromObject(data['IdentityDocument']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Extraction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Extraction</code>.
     */
    static validateJSON(data) {
        // validate the optional field `LendingDocument`
        if (data['LendingDocument']) { // data not null
          ExtractionLendingDocument.validateJSON(data['LendingDocument']);
        }
        // validate the optional field `ExpenseDocument`
        if (data['ExpenseDocument']) { // data not null
          ExpenseDocument.validateJSON(data['ExpenseDocument']);
        }
        // validate the optional field `IdentityDocument`
        if (data['IdentityDocument']) { // data not null
          IdentityDocument.validateJSON(data['IdentityDocument']);
        }

        return true;
    }


}



/**
 * @member {module:model/ExtractionLendingDocument} LendingDocument
 */
Extraction.prototype['LendingDocument'] = undefined;

/**
 * @member {module:model/ExpenseDocument} ExpenseDocument
 */
Extraction.prototype['ExpenseDocument'] = undefined;

/**
 * @member {module:model/IdentityDocument} IdentityDocument
 */
Extraction.prototype['IdentityDocument'] = undefined;






export default Extraction;

