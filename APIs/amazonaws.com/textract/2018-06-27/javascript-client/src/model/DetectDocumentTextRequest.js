/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DetectDocumentTextRequestDocument from './DetectDocumentTextRequestDocument';

/**
 * The DetectDocumentTextRequest model module.
 * @module model/DetectDocumentTextRequest
 * @version 2018-06-27
 */
class DetectDocumentTextRequest {
    /**
     * Constructs a new <code>DetectDocumentTextRequest</code>.
     * @alias module:model/DetectDocumentTextRequest
     * @param document {module:model/DetectDocumentTextRequestDocument} 
     */
    constructor(document) { 
        
        DetectDocumentTextRequest.initialize(this, document);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, document) { 
        obj['Document'] = document;
    }

    /**
     * Constructs a <code>DetectDocumentTextRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DetectDocumentTextRequest} obj Optional instance to populate.
     * @return {module:model/DetectDocumentTextRequest} The populated <code>DetectDocumentTextRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DetectDocumentTextRequest();

            if (data.hasOwnProperty('Document')) {
                obj['Document'] = DetectDocumentTextRequestDocument.constructFromObject(data['Document']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DetectDocumentTextRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DetectDocumentTextRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DetectDocumentTextRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Document`
        if (data['Document']) { // data not null
          DetectDocumentTextRequestDocument.validateJSON(data['Document']);
        }

        return true;
    }


}

DetectDocumentTextRequest.RequiredProperties = ["Document"];

/**
 * @member {module:model/DetectDocumentTextRequestDocument} Document
 */
DetectDocumentTextRequest.prototype['Document'] = undefined;






export default DetectDocumentTextRequest;

