/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExpenseGroupProperty model module.
 * @module model/ExpenseGroupProperty
 * @version 2018-06-27
 */
class ExpenseGroupProperty {
    /**
     * Constructs a new <code>ExpenseGroupProperty</code>.
     * Shows the group that a certain key belongs to. This helps differentiate between names and addresses for different organizations, that can be hard to determine via JSON response.
     * @alias module:model/ExpenseGroupProperty
     */
    constructor() { 
        
        ExpenseGroupProperty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExpenseGroupProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpenseGroupProperty} obj Optional instance to populate.
     * @return {module:model/ExpenseGroupProperty} The populated <code>ExpenseGroupProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpenseGroupProperty();

            if (data.hasOwnProperty('Types')) {
                obj['Types'] = ApiClient.convertToType(data['Types'], Array);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExpenseGroupProperty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExpenseGroupProperty</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Types`
        if (data['Types']) { // data not null
          Array.validateJSON(data['Types']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }

        return true;
    }


}



/**
 * @member {Array} Types
 */
ExpenseGroupProperty.prototype['Types'] = undefined;

/**
 * @member {String} Id
 */
ExpenseGroupProperty.prototype['Id'] = undefined;






export default ExpenseGroupProperty;

