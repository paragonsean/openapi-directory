/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineItemGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineItemGroup::OAILineItemGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineItemGroup::OAILineItemGroup() {
    this->initializeModel();
}

OAILineItemGroup::~OAILineItemGroup() {}

void OAILineItemGroup::initializeModel() {

    m_line_item_group_index_isSet = false;
    m_line_item_group_index_isValid = false;

    m_line_items_isSet = false;
    m_line_items_isValid = false;
}

void OAILineItemGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineItemGroup::fromJsonObject(QJsonObject json) {

    m_line_item_group_index_isValid = ::OpenAPI::fromJsonValue(m_line_item_group_index, json[QString("LineItemGroupIndex")]);
    m_line_item_group_index_isSet = !json[QString("LineItemGroupIndex")].isNull() && m_line_item_group_index_isValid;

    m_line_items_isValid = ::OpenAPI::fromJsonValue(m_line_items, json[QString("LineItems")]);
    m_line_items_isSet = !json[QString("LineItems")].isNull() && m_line_items_isValid;
}

QString OAILineItemGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineItemGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_line_item_group_index_isSet) {
        obj.insert(QString("LineItemGroupIndex"), ::OpenAPI::toJsonValue(m_line_item_group_index));
    }
    if (m_line_items.isSet()) {
        obj.insert(QString("LineItems"), ::OpenAPI::toJsonValue(m_line_items));
    }
    return obj;
}

qint32 OAILineItemGroup::getLineItemGroupIndex() const {
    return m_line_item_group_index;
}
void OAILineItemGroup::setLineItemGroupIndex(const qint32 &line_item_group_index) {
    m_line_item_group_index = line_item_group_index;
    m_line_item_group_index_isSet = true;
}

bool OAILineItemGroup::is_line_item_group_index_Set() const{
    return m_line_item_group_index_isSet;
}

bool OAILineItemGroup::is_line_item_group_index_Valid() const{
    return m_line_item_group_index_isValid;
}

QList OAILineItemGroup::getLineItems() const {
    return m_line_items;
}
void OAILineItemGroup::setLineItems(const QList &line_items) {
    m_line_items = line_items;
    m_line_items_isSet = true;
}

bool OAILineItemGroup::is_line_items_Set() const{
    return m_line_items_isSet;
}

bool OAILineItemGroup::is_line_items_Valid() const{
    return m_line_items_isValid;
}

bool OAILineItemGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_item_group_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_items.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineItemGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
