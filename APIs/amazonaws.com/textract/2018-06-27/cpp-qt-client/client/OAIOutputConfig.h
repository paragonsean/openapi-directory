/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutputConfig.h
 *
 * &lt;p&gt;Sets whether or not your output will go to a user created bucket. Used to set the name of the bucket, and the prefix on the output file.&lt;/p&gt; &lt;p&gt; &lt;code&gt;OutputConfig&lt;/code&gt; is an optional parameter which lets you adjust where your output will be placed. By default, Amazon Textract will store the results internally and can only be accessed by the Get API operations. With &lt;code&gt;OutputConfig&lt;/code&gt; enabled, you can set the name of the bucket the output will be sent to the file prefix of the results where you can download your results. Additionally, you can set the &lt;code&gt;KMSKeyID&lt;/code&gt; parameter to a customer master key (CMK) to encrypt your output. Without this parameter set Amazon Textract will encrypt server-side using the AWS managed CMK for Amazon S3.&lt;/p&gt; &lt;p&gt;Decryption of Customer Content is necessary for processing of the documents by Amazon Textract. If your account is opted out under an AI services opt out policy then all unencrypted Customer Content is immediately and permanently deleted after the Customer Content has been processed by the service. No copy of of the output is retained by Amazon Textract. For information about how to opt out, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html\&quot;&gt; Managing AI services opt-out policy. &lt;/a&gt; &lt;/p&gt; &lt;p&gt;For more information on data privacy, see the &lt;a href&#x3D;\&quot;https://aws.amazon.com/compliance/data-privacy-faq/\&quot;&gt;Data Privacy FAQ&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAIOutputConfig_H
#define OAIOutputConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOutputConfig : public OAIObject {
public:
    OAIOutputConfig();
    OAIOutputConfig(QString json);
    ~OAIOutputConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS3Bucket() const;
    void setS3Bucket(const QString &s3_bucket);
    bool is_s3_bucket_Set() const;
    bool is_s3_bucket_Valid() const;

    QString getS3Prefix() const;
    void setS3Prefix(const QString &s3_prefix);
    bool is_s3_prefix_Set() const;
    bool is_s3_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s3_bucket;
    bool m_s3_bucket_isSet;
    bool m_s3_bucket_isValid;

    QString m_s3_prefix;
    bool m_s3_prefix_isSet;
    bool m_s3_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutputConfig)

#endif // OAIOutputConfig_H
