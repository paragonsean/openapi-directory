/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDocument.h
 *
 * &lt;p&gt;The input document, either as bytes or as an S3 object.&lt;/p&gt; &lt;p&gt;You pass image bytes to an Amazon Textract API operation by using the &lt;code&gt;Bytes&lt;/code&gt; property. For example, you would use the &lt;code&gt;Bytes&lt;/code&gt; property to pass a document loaded from a local file system. Image bytes passed by using the &lt;code&gt;Bytes&lt;/code&gt; property must be base64 encoded. Your code might not need to encode document file bytes if you&#39;re using an AWS SDK to call Amazon Textract API operations. &lt;/p&gt; &lt;p&gt;You pass images stored in an S3 bucket to an Amazon Textract API operation by using the &lt;code&gt;S3Object&lt;/code&gt; property. Documents stored in an S3 bucket don&#39;t need to be base64 encoded.&lt;/p&gt; &lt;p&gt;The AWS Region for the S3 bucket that contains the S3 object must match the AWS Region that you use for Amazon Textract operations.&lt;/p&gt; &lt;p&gt;If you use the AWS CLI to call Amazon Textract operations, passing image bytes using the Bytes property isn&#39;t supported. You must first upload the document to an Amazon S3 bucket, and then call the operation using the S3Object property.&lt;/p&gt; &lt;p&gt;For Amazon Textract to process an S3 object, the user must have permission to access the S3 object. &lt;/p&gt;
 */

#ifndef OAIDocument_H
#define OAIDocument_H

#include <QJsonObject>

#include "OAIDocument_S3Object.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDocument_S3Object;

class OAIDocument : public OAIObject {
public:
    OAIDocument();
    OAIDocument(QString json);
    ~OAIDocument() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBytes() const;
    void setBytes(const QString &bytes);
    bool is_bytes_Set() const;
    bool is_bytes_Valid() const;

    OAIDocument_S3Object getS3Object() const;
    void setS3Object(const OAIDocument_S3Object &s3_object);
    bool is_s3_object_Set() const;
    bool is_s3_object_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bytes;
    bool m_bytes_isSet;
    bool m_bytes_isValid;

    OAIDocument_S3Object m_s3_object;
    bool m_s3_object_isSet;
    bool m_s3_object_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDocument)

#endif // OAIDocument_H
