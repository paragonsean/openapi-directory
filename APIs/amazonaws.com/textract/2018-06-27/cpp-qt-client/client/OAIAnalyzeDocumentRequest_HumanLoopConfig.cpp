/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalyzeDocumentRequest_HumanLoopConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalyzeDocumentRequest_HumanLoopConfig::OAIAnalyzeDocumentRequest_HumanLoopConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalyzeDocumentRequest_HumanLoopConfig::OAIAnalyzeDocumentRequest_HumanLoopConfig() {
    this->initializeModel();
}

OAIAnalyzeDocumentRequest_HumanLoopConfig::~OAIAnalyzeDocumentRequest_HumanLoopConfig() {}

void OAIAnalyzeDocumentRequest_HumanLoopConfig::initializeModel() {

    m_human_loop_name_isSet = false;
    m_human_loop_name_isValid = false;

    m_flow_definition_arn_isSet = false;
    m_flow_definition_arn_isValid = false;

    m_data_attributes_isSet = false;
    m_data_attributes_isValid = false;
}

void OAIAnalyzeDocumentRequest_HumanLoopConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnalyzeDocumentRequest_HumanLoopConfig::fromJsonObject(QJsonObject json) {

    m_human_loop_name_isValid = ::OpenAPI::fromJsonValue(m_human_loop_name, json[QString("HumanLoopName")]);
    m_human_loop_name_isSet = !json[QString("HumanLoopName")].isNull() && m_human_loop_name_isValid;

    m_flow_definition_arn_isValid = ::OpenAPI::fromJsonValue(m_flow_definition_arn, json[QString("FlowDefinitionArn")]);
    m_flow_definition_arn_isSet = !json[QString("FlowDefinitionArn")].isNull() && m_flow_definition_arn_isValid;

    m_data_attributes_isValid = ::OpenAPI::fromJsonValue(m_data_attributes, json[QString("DataAttributes")]);
    m_data_attributes_isSet = !json[QString("DataAttributes")].isNull() && m_data_attributes_isValid;
}

QString OAIAnalyzeDocumentRequest_HumanLoopConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnalyzeDocumentRequest_HumanLoopConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_human_loop_name_isSet) {
        obj.insert(QString("HumanLoopName"), ::OpenAPI::toJsonValue(m_human_loop_name));
    }
    if (m_flow_definition_arn_isSet) {
        obj.insert(QString("FlowDefinitionArn"), ::OpenAPI::toJsonValue(m_flow_definition_arn));
    }
    if (m_data_attributes.isSet()) {
        obj.insert(QString("DataAttributes"), ::OpenAPI::toJsonValue(m_data_attributes));
    }
    return obj;
}

QString OAIAnalyzeDocumentRequest_HumanLoopConfig::getHumanLoopName() const {
    return m_human_loop_name;
}
void OAIAnalyzeDocumentRequest_HumanLoopConfig::setHumanLoopName(const QString &human_loop_name) {
    m_human_loop_name = human_loop_name;
    m_human_loop_name_isSet = true;
}

bool OAIAnalyzeDocumentRequest_HumanLoopConfig::is_human_loop_name_Set() const{
    return m_human_loop_name_isSet;
}

bool OAIAnalyzeDocumentRequest_HumanLoopConfig::is_human_loop_name_Valid() const{
    return m_human_loop_name_isValid;
}

QString OAIAnalyzeDocumentRequest_HumanLoopConfig::getFlowDefinitionArn() const {
    return m_flow_definition_arn;
}
void OAIAnalyzeDocumentRequest_HumanLoopConfig::setFlowDefinitionArn(const QString &flow_definition_arn) {
    m_flow_definition_arn = flow_definition_arn;
    m_flow_definition_arn_isSet = true;
}

bool OAIAnalyzeDocumentRequest_HumanLoopConfig::is_flow_definition_arn_Set() const{
    return m_flow_definition_arn_isSet;
}

bool OAIAnalyzeDocumentRequest_HumanLoopConfig::is_flow_definition_arn_Valid() const{
    return m_flow_definition_arn_isValid;
}

OAIHumanLoopConfig_DataAttributes OAIAnalyzeDocumentRequest_HumanLoopConfig::getDataAttributes() const {
    return m_data_attributes;
}
void OAIAnalyzeDocumentRequest_HumanLoopConfig::setDataAttributes(const OAIHumanLoopConfig_DataAttributes &data_attributes) {
    m_data_attributes = data_attributes;
    m_data_attributes_isSet = true;
}

bool OAIAnalyzeDocumentRequest_HumanLoopConfig::is_data_attributes_Set() const{
    return m_data_attributes_isSet;
}

bool OAIAnalyzeDocumentRequest_HumanLoopConfig::is_data_attributes_Valid() const{
    return m_data_attributes_isValid;
}

bool OAIAnalyzeDocumentRequest_HumanLoopConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_human_loop_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_definition_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnalyzeDocumentRequest_HumanLoopConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_human_loop_name_isValid && m_flow_definition_arn_isValid && true;
}

} // namespace OpenAPI
