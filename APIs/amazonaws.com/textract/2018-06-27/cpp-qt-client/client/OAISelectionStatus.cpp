/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISelectionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISelectionStatus::OAISelectionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISelectionStatus::OAISelectionStatus() {
    this->initializeModel();
}

OAISelectionStatus::~OAISelectionStatus() {}

void OAISelectionStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISelectionStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISelectionStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SELECTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAISelectionStatus::SELECTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOT_SELECTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAISelectionStatus::NOT_SELECTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISelectionStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISelectionStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISelectionStatus::SELECTED:
            val = "SELECTED";
            break;
        case eOAISelectionStatus::NOT_SELECTED:
            val = "NOT_SELECTED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISelectionStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISelectionStatus::eOAISelectionStatus OAISelectionStatus::getValue() const {
    return m_value;
}

void OAISelectionStatus::setValue(const OAISelectionStatus::eOAISelectionStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISelectionStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAISelectionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
