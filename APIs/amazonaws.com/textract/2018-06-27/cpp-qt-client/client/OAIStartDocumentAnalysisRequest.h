/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartDocumentAnalysisRequest.h
 *
 * 
 */

#ifndef OAIStartDocumentAnalysisRequest_H
#define OAIStartDocumentAnalysisRequest_H

#include <QJsonObject>

#include "OAIQueriesConfig.h"
#include "OAIStartDocumentAnalysisRequest_DocumentLocation.h"
#include "OAIStartDocumentAnalysisRequest_NotificationChannel.h"
#include "OAIStartDocumentAnalysisRequest_OutputConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartDocumentAnalysisRequest_DocumentLocation;
class OAIStartDocumentAnalysisRequest_NotificationChannel;
class OAIStartDocumentAnalysisRequest_OutputConfig;
class OAIQueriesConfig;

class OAIStartDocumentAnalysisRequest : public OAIObject {
public:
    OAIStartDocumentAnalysisRequest();
    OAIStartDocumentAnalysisRequest(QString json);
    ~OAIStartDocumentAnalysisRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStartDocumentAnalysisRequest_DocumentLocation getDocumentLocation() const;
    void setDocumentLocation(const OAIStartDocumentAnalysisRequest_DocumentLocation &document_location);
    bool is_document_location_Set() const;
    bool is_document_location_Valid() const;

    QList getFeatureTypes() const;
    void setFeatureTypes(const QList &feature_types);
    bool is_feature_types_Set() const;
    bool is_feature_types_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    QString getJobTag() const;
    void setJobTag(const QString &job_tag);
    bool is_job_tag_Set() const;
    bool is_job_tag_Valid() const;

    OAIStartDocumentAnalysisRequest_NotificationChannel getNotificationChannel() const;
    void setNotificationChannel(const OAIStartDocumentAnalysisRequest_NotificationChannel &notification_channel);
    bool is_notification_channel_Set() const;
    bool is_notification_channel_Valid() const;

    OAIStartDocumentAnalysisRequest_OutputConfig getOutputConfig() const;
    void setOutputConfig(const OAIStartDocumentAnalysisRequest_OutputConfig &output_config);
    bool is_output_config_Set() const;
    bool is_output_config_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    OAIQueriesConfig getQueriesConfig() const;
    void setQueriesConfig(const OAIQueriesConfig &queries_config);
    bool is_queries_config_Set() const;
    bool is_queries_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStartDocumentAnalysisRequest_DocumentLocation m_document_location;
    bool m_document_location_isSet;
    bool m_document_location_isValid;

    QList m_feature_types;
    bool m_feature_types_isSet;
    bool m_feature_types_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    QString m_job_tag;
    bool m_job_tag_isSet;
    bool m_job_tag_isValid;

    OAIStartDocumentAnalysisRequest_NotificationChannel m_notification_channel;
    bool m_notification_channel_isSet;
    bool m_notification_channel_isValid;

    OAIStartDocumentAnalysisRequest_OutputConfig m_output_config;
    bool m_output_config_isSet;
    bool m_output_config_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    OAIQueriesConfig m_queries_config;
    bool m_queries_config_isSet;
    bool m_queries_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartDocumentAnalysisRequest)

#endif // OAIStartDocumentAnalysisRequest_H
