/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDetectDocumentTextResponse_DocumentMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDetectDocumentTextResponse_DocumentMetadata::OAIDetectDocumentTextResponse_DocumentMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDetectDocumentTextResponse_DocumentMetadata::OAIDetectDocumentTextResponse_DocumentMetadata() {
    this->initializeModel();
}

OAIDetectDocumentTextResponse_DocumentMetadata::~OAIDetectDocumentTextResponse_DocumentMetadata() {}

void OAIDetectDocumentTextResponse_DocumentMetadata::initializeModel() {

    m_pages_isSet = false;
    m_pages_isValid = false;
}

void OAIDetectDocumentTextResponse_DocumentMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDetectDocumentTextResponse_DocumentMetadata::fromJsonObject(QJsonObject json) {

    m_pages_isValid = ::OpenAPI::fromJsonValue(m_pages, json[QString("Pages")]);
    m_pages_isSet = !json[QString("Pages")].isNull() && m_pages_isValid;
}

QString OAIDetectDocumentTextResponse_DocumentMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDetectDocumentTextResponse_DocumentMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_pages_isSet) {
        obj.insert(QString("Pages"), ::OpenAPI::toJsonValue(m_pages));
    }
    return obj;
}

qint32 OAIDetectDocumentTextResponse_DocumentMetadata::getPages() const {
    return m_pages;
}
void OAIDetectDocumentTextResponse_DocumentMetadata::setPages(const qint32 &pages) {
    m_pages = pages;
    m_pages_isSet = true;
}

bool OAIDetectDocumentTextResponse_DocumentMetadata::is_pages_Set() const{
    return m_pages_isSet;
}

bool OAIDetectDocumentTextResponse_DocumentMetadata::is_pages_Valid() const{
    return m_pages_isValid;
}

bool OAIDetectDocumentTextResponse_DocumentMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pages_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDetectDocumentTextResponse_DocumentMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
