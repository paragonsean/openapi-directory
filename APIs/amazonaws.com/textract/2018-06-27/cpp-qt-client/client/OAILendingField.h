/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILendingField.h
 *
 * Holds the normalized key-value pairs returned by AnalyzeDocument, including the document type, detected text, and geometry.
 */

#ifndef OAILendingField_H
#define OAILendingField_H

#include <QJsonObject>

#include "OAILendingDetection.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILendingDetection;

class OAILendingField : public OAIObject {
public:
    OAILendingField();
    OAILendingField(QString json);
    ~OAILendingField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAILendingDetection getKeyDetection() const;
    void setKeyDetection(const OAILendingDetection &key_detection);
    bool is_key_detection_Set() const;
    bool is_key_detection_Valid() const;

    QList getValueDetections() const;
    void setValueDetections(const QList &value_detections);
    bool is_value_detections_Set() const;
    bool is_value_detections_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAILendingDetection m_key_detection;
    bool m_key_detection_isSet;
    bool m_key_detection_isValid;

    QList m_value_detections;
    bool m_value_detections_isSet;
    bool m_value_detections_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILendingField)

#endif // OAILendingField_H
