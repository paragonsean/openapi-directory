/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalyzeExpenseRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalyzeExpenseRequest::OAIAnalyzeExpenseRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalyzeExpenseRequest::OAIAnalyzeExpenseRequest() {
    this->initializeModel();
}

OAIAnalyzeExpenseRequest::~OAIAnalyzeExpenseRequest() {}

void OAIAnalyzeExpenseRequest::initializeModel() {

    m_document_isSet = false;
    m_document_isValid = false;
}

void OAIAnalyzeExpenseRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnalyzeExpenseRequest::fromJsonObject(QJsonObject json) {

    m_document_isValid = ::OpenAPI::fromJsonValue(m_document, json[QString("Document")]);
    m_document_isSet = !json[QString("Document")].isNull() && m_document_isValid;
}

QString OAIAnalyzeExpenseRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnalyzeExpenseRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_document.isSet()) {
        obj.insert(QString("Document"), ::OpenAPI::toJsonValue(m_document));
    }
    return obj;
}

OAIDocument OAIAnalyzeExpenseRequest::getDocument() const {
    return m_document;
}
void OAIAnalyzeExpenseRequest::setDocument(const OAIDocument &document) {
    m_document = document;
    m_document_isSet = true;
}

bool OAIAnalyzeExpenseRequest::is_document_Set() const{
    return m_document_isSet;
}

bool OAIAnalyzeExpenseRequest::is_document_Valid() const{
    return m_document_isValid;
}

bool OAIAnalyzeExpenseRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnalyzeExpenseRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_document_isValid && true;
}

} // namespace OpenAPI
