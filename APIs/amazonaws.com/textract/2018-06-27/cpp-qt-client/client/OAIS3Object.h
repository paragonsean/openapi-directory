/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3Object.h
 *
 * &lt;p&gt;The S3 bucket name and file name that identifies the document.&lt;/p&gt; &lt;p&gt;The AWS Region for the S3 bucket that contains the document must match the Region that you use for Amazon Textract operations.&lt;/p&gt; &lt;p&gt;For Amazon Textract to process a file in an S3 bucket, the user must have permission to access the S3 bucket and file. &lt;/p&gt;
 */

#ifndef OAIS3Object_H
#define OAIS3Object_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIS3Object : public OAIObject {
public:
    OAIS3Object();
    OAIS3Object(QString json);
    ~OAIS3Object() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBucket() const;
    void setBucket(const QString &bucket);
    bool is_bucket_Set() const;
    bool is_bucket_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bucket;
    bool m_bucket_isSet;
    bool m_bucket_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3Object)

#endif // OAIS3Object_H
