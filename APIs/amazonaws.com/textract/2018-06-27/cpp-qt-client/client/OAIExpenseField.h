/**
 * Amazon Textract
 * Amazon Textract detects and analyzes text in documents and converts it into machine-readable text. This is the API reference documentation for Amazon Textract.
 *
 * The version of the OpenAPI document: 2018-06-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpenseField.h
 *
 * Breakdown of detected information, seperated into the catagories Type, LabelDetection, and ValueDetection
 */

#ifndef OAIExpenseField_H
#define OAIExpenseField_H

#include <QJsonObject>

#include "OAIExpenseField_Currency.h"
#include "OAIExpenseField_LabelDetection.h"
#include "OAIExpenseField_Type.h"
#include "OAIExpenseField_ValueDetection.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpenseField_Type;
class OAIExpenseField_LabelDetection;
class OAIExpenseField_ValueDetection;
class OAIExpenseField_Currency;

class OAIExpenseField : public OAIObject {
public:
    OAIExpenseField();
    OAIExpenseField(QString json);
    ~OAIExpenseField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExpenseField_Type getType() const;
    void setType(const OAIExpenseField_Type &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIExpenseField_LabelDetection getLabelDetection() const;
    void setLabelDetection(const OAIExpenseField_LabelDetection &label_detection);
    bool is_label_detection_Set() const;
    bool is_label_detection_Valid() const;

    OAIExpenseField_ValueDetection getValueDetection() const;
    void setValueDetection(const OAIExpenseField_ValueDetection &value_detection);
    bool is_value_detection_Set() const;
    bool is_value_detection_Valid() const;

    qint32 getPageNumber() const;
    void setPageNumber(const qint32 &page_number);
    bool is_page_number_Set() const;
    bool is_page_number_Valid() const;

    OAIExpenseField_Currency getCurrency() const;
    void setCurrency(const OAIExpenseField_Currency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QList getGroupProperties() const;
    void setGroupProperties(const QList &group_properties);
    bool is_group_properties_Set() const;
    bool is_group_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExpenseField_Type m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIExpenseField_LabelDetection m_label_detection;
    bool m_label_detection_isSet;
    bool m_label_detection_isValid;

    OAIExpenseField_ValueDetection m_value_detection;
    bool m_value_detection_isSet;
    bool m_value_detection_isValid;

    qint32 m_page_number;
    bool m_page_number_isSet;
    bool m_page_number_isValid;

    OAIExpenseField_Currency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QList m_group_properties;
    bool m_group_properties_isSet;
    bool m_group_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpenseField)

#endif // OAIExpenseField_H
