openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Amazon Textract detects and analyzes text in documents and converts
    it into machine-readable text. This is the API reference documentation for Amazon
    Textract.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Textract
  version: 2018-06-27
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: textract
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/textract-2018-06-27.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/textract/
servers:
- description: The Amazon Textract multi-region endpoint
  url: "http://textract.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Textract multi-region endpoint
  url: "https://textract.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Textract endpoint for China (Beijing) and China (Ningxia)
  url: "http://textract.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Textract endpoint for China (Beijing) and China (Ningxia)
  url: "https://textract.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=Textract.AnalyzeDocument:
    post:
      description: "<p>Analyzes an input document for relationships between detected\
        \ items. </p> <p>The types of information returned are as follows: </p> <ul>\
        \ <li> <p>Form data (key-value pairs). The related information is returned\
        \ in two <a>Block</a> objects, each of type <code>KEY_VALUE_SET</code>: a\
        \ KEY <code>Block</code> object and a VALUE <code>Block</code> object. For\
        \ example, <i>Name: Ana Silva Carolina</i> contains a key and value. <i>Name:</i>\
        \ is the key. <i>Ana Silva Carolina</i> is the value.</p> </li> <li> <p>Table\
        \ and table cell data. A TABLE <code>Block</code> object contains information\
        \ about a detected table. A CELL <code>Block</code> object is returned for\
        \ each cell in a table.</p> </li> <li> <p>Lines and words of text. A LINE\
        \ <code>Block</code> object contains one or more WORD <code>Block</code> objects.\
        \ All lines and words that are detected in the document are returned (including\
        \ text that doesn't have a relationship with the value of <code>FeatureTypes</code>).\
        \ </p> </li> <li> <p>Signatures. A SIGNATURE <code>Block</code> object contains\
        \ the location information of a signature in a document. If used in conjunction\
        \ with forms or tables, a signature can be given a Key-Value pairing or be\
        \ detected in the cell of a table.</p> </li> <li> <p>Query. A QUERY Block\
        \ object contains the query text, alias and link to the associated Query results\
        \ block object.</p> </li> <li> <p>Query Result. A QUERY_RESULT Block object\
        \ contains the answer to the query and an ID that connects it to the query\
        \ asked. This Block also contains a confidence score.</p> </li> </ul> <p>Selection\
        \ elements such as check boxes and option buttons (radio buttons) can be detected\
        \ in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object\
        \ contains information about a selection element, including the selection\
        \ status.</p> <p>You can choose which type of analysis to perform by specifying\
        \ the <code>FeatureTypes</code> list. </p> <p>The output is returned in a\
        \ list of <code>Block</code> objects.</p> <p> <code>AnalyzeDocument</code>\
        \ is a synchronous operation. To analyze documents asynchronously, use <a>StartDocumentAnalysis</a>.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\"\
        >Document Text Analysis</a>.</p>"
      operationId: analyze_document
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.AnalyzeDocument
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeDocumentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeDocumentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentException'
          description: UnsupportedDocumentException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTooLargeException'
          description: DocumentTooLargeException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadDocumentException'
          description: BadDocumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HumanLoopQuotaExceededException'
          description: HumanLoopQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.AnalyzeExpense:
    post:
      description: "<p> <code>AnalyzeExpense</code> synchronously analyzes an input\
        \ document for financially related relationships between text.</p> <p>Information\
        \ is returned as <code>ExpenseDocuments</code> and seperated as follows:</p>\
        \ <ul> <li> <p> <code>LineItemGroups</code>- A data set containing <code>LineItems</code>\
        \ which store information about the lines of text, such as an item purchased\
        \ and its price on a receipt.</p> </li> <li> <p> <code>SummaryFields</code>-\
        \ Contains all other information a receipt, such as header information or\
        \ the vendors name.</p> </li> </ul>"
      operationId: analyze_expense
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.AnalyzeExpense
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeExpenseRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeExpenseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentException'
          description: UnsupportedDocumentException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTooLargeException'
          description: DocumentTooLargeException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadDocumentException'
          description: BadDocumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.AnalyzeID:
    post:
      description: "Analyzes identity documents for relevant information. This information\
        \ is extracted and returned as <code>IdentityDocumentFields</code>, which\
        \ records both the normalized field and value of the extracted text. Unlike\
        \ other Amazon Textract operations, <code>AnalyzeID</code> doesn't return\
        \ any Geometry data."
      operationId: analyze_id
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.AnalyzeID
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeIDRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeIDResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentException'
          description: UnsupportedDocumentException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTooLargeException'
          description: DocumentTooLargeException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadDocumentException'
          description: BadDocumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.DetectDocumentText:
    post:
      description: "<p>Detects text in the input document. Amazon Textract can detect\
        \ lines of text and the words that make up a line of text. The input document\
        \ must be in one of the following image formats: JPEG, PNG, PDF, or TIFF.\
        \ <code>DetectDocumentText</code> returns the detected text in an array of\
        \ <a>Block</a> objects. </p> <p>Each document page has as an associated <code>Block</code>\
        \ of type PAGE. Each PAGE <code>Block</code> object is the parent of LINE\
        \ <code>Block</code> objects that represent the lines of detected text on\
        \ a page. A LINE <code>Block</code> object is a parent for each word that\
        \ makes up the line. Words are represented by <code>Block</code> objects of\
        \ type WORD.</p> <p> <code>DetectDocumentText</code> is a synchronous operation.\
        \ To analyze documents asynchronously, use <a>StartDocumentTextDetection</a>.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\"\
        >Document Text Detection</a>.</p>"
      operationId: detect_document_text
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.DetectDocumentText
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectDocumentTextRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectDocumentTextResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentException'
          description: UnsupportedDocumentException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTooLargeException'
          description: DocumentTooLargeException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadDocumentException'
          description: BadDocumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.GetDocumentAnalysis:
    post:
      description: "<p>Gets the results for an Amazon Textract asynchronous operation\
        \ that analyzes text in a document.</p> <p>You start asynchronous text analysis\
        \ by calling <a>StartDocumentAnalysis</a>, which returns a job identifier\
        \ (<code>JobId</code>). When the text analysis operation finishes, Amazon\
        \ Textract publishes a completion status to the Amazon Simple Notification\
        \ Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>.\
        \ To get the results of the text-detection operation, first check that the\
        \ status value published to the Amazon SNS topic is <code>SUCCEEDED</code>.\
        \ If so, call <code>GetDocumentAnalysis</code>, and pass the job identifier\
        \ (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.</p>\
        \ <p> <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects.\
        \ The following types of information are returned: </p> <ul> <li> <p>Form\
        \ data (key-value pairs). The related information is returned in two <a>Block</a>\
        \ objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code>\
        \ object and a VALUE <code>Block</code> object. For example, <i>Name: Ana\
        \ Silva Carolina</i> contains a key and value. <i>Name:</i> is the key. <i>Ana\
        \ Silva Carolina</i> is the value.</p> </li> <li> <p>Table and table cell\
        \ data. A TABLE <code>Block</code> object contains information about a detected\
        \ table. A CELL <code>Block</code> object is returned for each cell in a table.</p>\
        \ </li> <li> <p>Lines and words of text. A LINE <code>Block</code> object\
        \ contains one or more WORD <code>Block</code> objects. All lines and words\
        \ that are detected in the document are returned (including text that doesn't\
        \ have a relationship with the value of the <code>StartDocumentAnalysis</code>\
        \ <code>FeatureTypes</code> input parameter). </p> </li> <li> <p>Query. A\
        \ QUERY Block object contains the query text, alias and link to the associated\
        \ Query results block object.</p> </li> <li> <p>Query Results. A QUERY_RESULT\
        \ Block object contains the answer to the query and an ID that connects it\
        \ to the query asked. This Block also contains a confidence score.</p> </li>\
        \ </ul> <note> <p>While processing a document with queries, look out for <code>INVALID_REQUEST_PARAMETERS</code>\
        \ output. This indicates that either the per page query limit has been exceeded\
        \ or that the operation is trying to query a page in the document which doesn’\
        t exist. </p> </note> <p>Selection elements such as check boxes and option\
        \ buttons (radio buttons) can be detected in form data and in tables. A SELECTION_ELEMENT\
        \ <code>Block</code> object contains information about a selection element,\
        \ including the selection status.</p> <p>Use the <code>MaxResults</code> parameter\
        \ to limit the number of blocks that are returned. If there are more results\
        \ than specified in <code>MaxResults</code>, the value of <code>NextToken</code>\
        \ in the operation response contains a pagination token for getting the next\
        \ set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>,\
        \ and populate the <code>NextToken</code> request parameter with the token\
        \ value that's returned from the previous call to <code>GetDocumentAnalysis</code>.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\"\
        >Document Text Analysis</a>.</p>"
      operationId: get_document_analysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.GetDocumentAnalysis
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentAnalysisRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobIdException'
          description: InvalidJobIdException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyException'
          description: InvalidKMSKeyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.GetDocumentTextDetection:
    post:
      description: "<p>Gets the results for an Amazon Textract asynchronous operation\
        \ that detects text in a document. Amazon Textract can detect lines of text\
        \ and the words that make up a line of text.</p> <p>You start asynchronous\
        \ text detection by calling <a>StartDocumentTextDetection</a>, which returns\
        \ a job identifier (<code>JobId</code>). When the text detection operation\
        \ finishes, Amazon Textract publishes a completion status to the Amazon Simple\
        \ Notification Service (Amazon SNS) topic that's registered in the initial\
        \ call to <code>StartDocumentTextDetection</code>. To get the results of the\
        \ text-detection operation, first check that the status value published to\
        \ the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>,\
        \ and pass the job identifier (<code>JobId</code>) from the initial call to\
        \ <code>StartDocumentTextDetection</code>.</p> <p> <code>GetDocumentTextDetection</code>\
        \ returns an array of <a>Block</a> objects. </p> <p>Each document page has\
        \ as an associated <code>Block</code> of type PAGE. Each PAGE <code>Block</code>\
        \ object is the parent of LINE <code>Block</code> objects that represent the\
        \ lines of detected text on a page. A LINE <code>Block</code> object is a\
        \ parent for each word that makes up the line. Words are represented by <code>Block</code>\
        \ objects of type WORD.</p> <p>Use the MaxResults parameter to limit the number\
        \ of blocks that are returned. If there are more results than specified in\
        \ <code>MaxResults</code>, the value of <code>NextToken</code> in the operation\
        \ response contains a pagination token for getting the next set of results.\
        \ To get the next page of results, call <code>GetDocumentTextDetection</code>,\
        \ and populate the <code>NextToken</code> request parameter with the token\
        \ value that's returned from the previous call to <code>GetDocumentTextDetection</code>.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\"\
        >Document Text Detection</a>.</p>"
      operationId: get_document_text_detection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.GetDocumentTextDetection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentTextDetectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentTextDetectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobIdException'
          description: InvalidJobIdException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyException'
          description: InvalidKMSKeyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.GetExpenseAnalysis:
    post:
      description: "<p>Gets the results for an Amazon Textract asynchronous operation\
        \ that analyzes invoices and receipts. Amazon Textract finds contact information,\
        \ items purchased, and vendor name, from input invoices and receipts.</p>\
        \ <p>You start asynchronous invoice/receipt analysis by calling <a>StartExpenseAnalysis</a>,\
        \ which returns a job identifier (<code>JobId</code>). Upon completion of\
        \ the invoice/receipt analysis, Amazon Textract publishes the completion status\
        \ to the Amazon Simple Notification Service (Amazon SNS) topic. This topic\
        \ must be registered in the initial call to <code>StartExpenseAnalysis</code>.\
        \ To get the results of the invoice/receipt analysis operation, first ensure\
        \ that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>.\
        \ If so, call <code>GetExpenseAnalysis</code>, and pass the job identifier\
        \ (<code>JobId</code>) from the initial call to <code>StartExpenseAnalysis</code>.</p>\
        \ <p>Use the MaxResults parameter to limit the number of blocks that are returned.\
        \ If there are more results than specified in <code>MaxResults</code>, the\
        \ value of <code>NextToken</code> in the operation response contains a pagination\
        \ token for getting the next set of results. To get the next page of results,\
        \ call <code>GetExpenseAnalysis</code>, and populate the <code>NextToken</code>\
        \ request parameter with the token value that's returned from the previous\
        \ call to <code>GetExpenseAnalysis</code>.</p> <p>For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/textract/latest/dg/invoices-receipts.html\"\
        >Analyzing Invoices and Receipts</a>.</p>"
      operationId: get_expense_analysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.GetExpenseAnalysis
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetExpenseAnalysisRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExpenseAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobIdException'
          description: InvalidJobIdException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyException'
          description: InvalidKMSKeyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.GetLendingAnalysis:
    post:
      description: "<p>Gets the results for an Amazon Textract asynchronous operation\
        \ that analyzes text in a lending document. </p> <p>You start asynchronous\
        \ text analysis by calling <code>StartLendingAnalysis</code>, which returns\
        \ a job identifier (<code>JobId</code>). When the text analysis operation\
        \ finishes, Amazon Textract publishes a completion status to the Amazon Simple\
        \ Notification Service (Amazon SNS) topic that's registered in the initial\
        \ call to <code>StartLendingAnalysis</code>. </p> <p>To get the results of\
        \ the text analysis operation, first check that the status value published\
        \ to the Amazon SNS topic is SUCCEEDED. If so, call GetLendingAnalysis, and\
        \ pass the job identifier (<code>JobId</code>) from the initial call to <code>StartLendingAnalysis</code>.</p>"
      operationId: get_lending_analysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.GetLendingAnalysis
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLendingAnalysisRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLendingAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobIdException'
          description: InvalidJobIdException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyException'
          description: InvalidKMSKeyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.GetLendingAnalysisSummary:
    post:
      description: "<p>Gets summarized results for the <code>StartLendingAnalysis</code>\
        \ operation, which analyzes text in a lending document. The returned summary\
        \ consists of information about documents grouped together by a common document\
        \ type. Information like detected signatures, page numbers, and split documents\
        \ is returned with respect to the type of grouped document. </p> <p>You start\
        \ asynchronous text analysis by calling <code>StartLendingAnalysis</code>,\
        \ which returns a job identifier (<code>JobId</code>). When the text analysis\
        \ operation finishes, Amazon Textract publishes a completion status to the\
        \ Amazon Simple Notification Service (Amazon SNS) topic that's registered\
        \ in the initial call to <code>StartLendingAnalysis</code>. </p> <p>To get\
        \ the results of the text analysis operation, first check that the status\
        \ value published to the Amazon SNS topic is SUCCEEDED. If so, call <code>GetLendingAnalysisSummary</code>,\
        \ and pass the job identifier (<code>JobId</code>) from the initial call to\
        \ <code>StartLendingAnalysis</code>.</p>"
      operationId: get_lending_analysis_summary
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.GetLendingAnalysisSummary
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLendingAnalysisSummaryRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLendingAnalysisSummaryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobIdException'
          description: InvalidJobIdException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyException'
          description: InvalidKMSKeyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.StartDocumentAnalysis:
    post:
      description: "<p>Starts the asynchronous analysis of an input document for relationships\
        \ between detected items such as key-value pairs, tables, and selection elements.</p>\
        \ <p> <code>StartDocumentAnalysis</code> can analyze text in documents that\
        \ are in JPEG, PNG, TIFF, and PDF format. The documents are stored in an Amazon\
        \ S3 bucket. Use <a>DocumentLocation</a> to specify the bucket name and file\
        \ name of the document. </p> <p> <code>StartDocumentAnalysis</code> returns\
        \ a job identifier (<code>JobId</code>) that you use to get the results of\
        \ the operation. When text analysis is finished, Amazon Textract publishes\
        \ a completion status to the Amazon Simple Notification Service (Amazon SNS)\
        \ topic that you specify in <code>NotificationChannel</code>. To get the results\
        \ of the text analysis operation, first check that the status value published\
        \ to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>,\
        \ and pass the job identifier (<code>JobId</code>) from the initial call to\
        \ <code>StartDocumentAnalysis</code>.</p> <p>For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\"\
        >Document Text Analysis</a>.</p>"
      operationId: start_document_analysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.StartDocumentAnalysis
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDocumentAnalysisRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDocumentAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyException'
          description: InvalidKMSKeyException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentException'
          description: UnsupportedDocumentException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTooLargeException'
          description: DocumentTooLargeException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadDocumentException'
          description: BadDocumentException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.StartDocumentTextDetection:
    post:
      description: "<p>Starts the asynchronous detection of text in a document. Amazon\
        \ Textract can detect lines of text and the words that make up a line of text.</p>\
        \ <p> <code>StartDocumentTextDetection</code> can analyze text in documents\
        \ that are in JPEG, PNG, TIFF, and PDF format. The documents are stored in\
        \ an Amazon S3 bucket. Use <a>DocumentLocation</a> to specify the bucket name\
        \ and file name of the document. </p> <p> <code>StartTextDetection</code>\
        \ returns a job identifier (<code>JobId</code>) that you use to get the results\
        \ of the operation. When text detection is finished, Amazon Textract publishes\
        \ a completion status to the Amazon Simple Notification Service (Amazon SNS)\
        \ topic that you specify in <code>NotificationChannel</code>. To get the results\
        \ of the text detection operation, first check that the status value published\
        \ to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>,\
        \ and pass the job identifier (<code>JobId</code>) from the initial call to\
        \ <code>StartDocumentTextDetection</code>.</p> <p>For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\"\
        >Document Text Detection</a>.</p>"
      operationId: start_document_text_detection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.StartDocumentTextDetection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDocumentTextDetectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDocumentTextDetectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyException'
          description: InvalidKMSKeyException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentException'
          description: UnsupportedDocumentException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTooLargeException'
          description: DocumentTooLargeException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadDocumentException'
          description: BadDocumentException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.StartExpenseAnalysis:
    post:
      description: "<p>Starts the asynchronous analysis of invoices or receipts for\
        \ data like contact information, items purchased, and vendor names.</p> <p>\
        \ <code>StartExpenseAnalysis</code> can analyze text in documents that are\
        \ in JPEG, PNG, and PDF format. The documents must be stored in an Amazon\
        \ S3 bucket. Use the <a>DocumentLocation</a> parameter to specify the name\
        \ of your S3 bucket and the name of the document in that bucket. </p> <p>\
        \ <code>StartExpenseAnalysis</code> returns a job identifier (<code>JobId</code>)\
        \ that you will provide to <code>GetExpenseAnalysis</code> to retrieve the\
        \ results of the operation. When the analysis of the input invoices/receipts\
        \ is finished, Amazon Textract publishes a completion status to the Amazon\
        \ Simple Notification Service (Amazon SNS) topic that you provide to the <code>NotificationChannel</code>.\
        \ To obtain the results of the invoice and receipt analysis operation, ensure\
        \ that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>.\
        \ If so, call <a>GetExpenseAnalysis</a>, and pass the job identifier (<code>JobId</code>)\
        \ that was returned by your call to <code>StartExpenseAnalysis</code>.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/invoice-receipts.html\"\
        >Analyzing Invoices and Receipts</a>.</p>"
      operationId: start_expense_analysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.StartExpenseAnalysis
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartExpenseAnalysisRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartExpenseAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyException'
          description: InvalidKMSKeyException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentException'
          description: UnsupportedDocumentException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTooLargeException'
          description: DocumentTooLargeException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadDocumentException'
          description: BadDocumentException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Textract.StartLendingAnalysis:
    post:
      description: "<p>Starts the classification and analysis of an input document.\
        \ <code>StartLendingAnalysis</code> initiates the classification and analysis\
        \ of a packet of lending documents. <code>StartLendingAnalysis</code> operates\
        \ on a document file located in an Amazon S3 bucket.</p> <p> <code>StartLendingAnalysis</code>\
        \ can analyze text in documents that are in one of the following formats:\
        \ JPEG, PNG, TIFF, PDF. Use <code>DocumentLocation</code> to specify the bucket\
        \ name and the file name of the document. </p> <p> <code>StartLendingAnalysis</code>\
        \ returns a job identifier (<code>JobId</code>) that you use to get the results\
        \ of the operation. When the text analysis is finished, Amazon Textract publishes\
        \ a completion status to the Amazon Simple Notification Service (Amazon SNS)\
        \ topic that you specify in <code>NotificationChannel</code>. To get the results\
        \ of the text analysis operation, first check that the status value published\
        \ to the Amazon SNS topic is SUCCEEDED. If the status is SUCCEEDED you can\
        \ call either <code>GetLendingAnalysis</code> or <code>GetLendingAnalysisSummary</code>\
        \ and provide the <code>JobId</code> to obtain the results of the analysis.</p>\
        \ <p>If using <code>OutputConfig</code> to specify an Amazon S3 bucket, the\
        \ output will be contained within the specified prefix in a directory labeled\
        \ with the job-id. In the directory there are 3 sub-directories: </p> <ul>\
        \ <li> <p>detailedResponse (contains the GetLendingAnalysis response)</p>\
        \ </li> <li> <p>summaryResponse (for the GetLendingAnalysisSummary response)</p>\
        \ </li> <li> <p>splitDocuments (documents split across logical boundaries)</p>\
        \ </li> </ul>"
      operationId: start_lending_analysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Textract.StartLendingAnalysis
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartLendingAnalysisRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartLendingAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3ObjectException'
          description: InvalidS3ObjectException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyException'
          description: InvalidKMSKeyException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentException'
          description: UnsupportedDocumentException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTooLargeException'
          description: DocumentTooLargeException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadDocumentException'
          description: BadDocumentException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedThroughputExceededException'
          description: ProvisionedThroughputExceededException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AnalyzeDocumentResponse:
      example:
        Blocks: ""
        DocumentMetadata:
          Pages: ""
        HumanLoopActivationOutput:
          HumanLoopActivationReasons: ""
          HumanLoopActivationConditionsEvaluationResults: ""
          HumanLoopArn: ""
        AnalyzeDocumentModelVersion: ""
      properties:
        DocumentMetadata:
          $ref: '#/components/schemas/AnalyzeDocumentResponse_DocumentMetadata'
        Blocks:
          allOf:
          - $ref: '#/components/schemas/BlockList'
          - description: The items that are detected and analyzed by <code>AnalyzeDocument</code>.
          title: Blocks
        HumanLoopActivationOutput:
          $ref: '#/components/schemas/AnalyzeDocumentResponse_HumanLoopActivationOutput'
        AnalyzeDocumentModelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the model used to analyze the document.
          title: AnalyzeDocumentModelVersion
      title: AnalyzeDocumentResponse
      type: object
    AnalyzeDocumentRequest:
      example:
        QueriesConfig:
          Queries: ""
        FeatureTypes: ""
        HumanLoopConfig:
          HumanLoopName: ""
          FlowDefinitionArn: ""
          DataAttributes:
            ContentClassifiers: ""
        Document:
          Bytes: ""
          S3Object:
            Bucket: ""
            Version: ""
            Name: ""
      properties:
        Document:
          $ref: '#/components/schemas/AnalyzeDocumentRequest_Document'
        FeatureTypes:
          allOf:
          - $ref: '#/components/schemas/FeatureTypes'
          - description: "A list of the types of analysis to perform. Add TABLES to\
              \ the list to return information about the tables that are detected\
              \ in the input document. Add FORMS to return detected form data. Add\
              \ SIGNATURES to return the locations of detected signatures. To perform\
              \ both forms and table analysis, add TABLES and FORMS to <code>FeatureTypes</code>.\
              \ To detect signatures within form data and table data, add SIGNATURES\
              \ to either TABLES or FORMS. All lines and words detected in the document\
              \ are included in the response (including text that isn't related to\
              \ the value of <code>FeatureTypes</code>). "
          title: FeatureTypes
        HumanLoopConfig:
          $ref: '#/components/schemas/AnalyzeDocumentRequest_HumanLoopConfig'
        QueriesConfig:
          $ref: '#/components/schemas/AnalyzeDocumentRequest_QueriesConfig'
      required:
      - Document
      - FeatureTypes
      title: AnalyzeDocumentRequest
      type: object
    InvalidParameterException: {}
    InvalidS3ObjectException: {}
    UnsupportedDocumentException: {}
    DocumentTooLargeException: {}
    BadDocumentException: {}
    AccessDeniedException: {}
    ProvisionedThroughputExceededException: {}
    InternalServerError: {}
    ThrottlingException: {}
    HumanLoopQuotaExceededException: {}
    AnalyzeExpenseResponse:
      example:
        DocumentMetadata:
          Pages: ""
        ExpenseDocuments: ""
      properties:
        DocumentMetadata:
          $ref: '#/components/schemas/DocumentMetadata'
        ExpenseDocuments:
          allOf:
          - $ref: '#/components/schemas/ExpenseDocumentList'
          - description: The expenses detected by Amazon Textract.
          title: ExpenseDocuments
      title: AnalyzeExpenseResponse
      type: object
    AnalyzeExpenseRequest:
      example:
        Document:
          Bytes: ""
          S3Object:
            Bucket: ""
            Version: ""
            Name: ""
      properties:
        Document:
          $ref: '#/components/schemas/Document'
      required:
      - Document
      title: AnalyzeExpenseRequest
      type: object
    AnalyzeIDResponse:
      example:
        IdentityDocuments: ""
        DocumentMetadata:
          Pages: ""
        AnalyzeIDModelVersion: ""
      properties:
        IdentityDocuments:
          allOf:
          - $ref: '#/components/schemas/IdentityDocumentList'
          - description: The list of documents processed by AnalyzeID. Includes a
              number denoting their place in the list and the response structure for
              the document.
          title: IdentityDocuments
        DocumentMetadata:
          $ref: '#/components/schemas/DocumentMetadata'
        AnalyzeIDModelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the AnalyzeIdentity API being used to process
              documents.
          title: AnalyzeIDModelVersion
      title: AnalyzeIDResponse
      type: object
    AnalyzeIDRequest:
      example:
        DocumentPages: ""
      properties:
        DocumentPages:
          allOf:
          - $ref: '#/components/schemas/DocumentPages'
          - description: The document being passed to AnalyzeID.
          title: DocumentPages
      required:
      - DocumentPages
      title: AnalyzeIDRequest
      type: object
    DetectDocumentTextResponse:
      example:
        Blocks: ""
        DocumentMetadata:
          Pages: ""
        DetectDocumentTextModelVersion: ""
      properties:
        DocumentMetadata:
          $ref: '#/components/schemas/DetectDocumentTextResponse_DocumentMetadata'
        Blocks:
          allOf:
          - $ref: '#/components/schemas/BlockList'
          - description: An array of <code>Block</code> objects that contain the text
              that's detected in the document.
          title: Blocks
        DetectDocumentTextModelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p/>
          title: DetectDocumentTextModelVersion
      title: DetectDocumentTextResponse
      type: object
    DetectDocumentTextRequest:
      example:
        Document:
          Bytes: ""
          S3Object:
            Bucket: ""
            Version: ""
            Name: ""
      properties:
        Document:
          $ref: '#/components/schemas/DetectDocumentTextRequest_Document'
      required:
      - Document
      title: DetectDocumentTextRequest
      type: object
    GetDocumentAnalysisResponse:
      example:
        JobStatus: ""
        Blocks: ""
        NextToken: ""
        DocumentMetadata:
          Pages: ""
        Warnings: ""
        AnalyzeDocumentModelVersion: ""
        StatusMessage: ""
      properties:
        DocumentMetadata:
          $ref: '#/components/schemas/GetDocumentAnalysisResponse_DocumentMetadata'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The current status of the text detection job.
          title: JobStatus
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the response is truncated, Amazon Textract returns this\
              \ token. You can use this token in the subsequent request to retrieve\
              \ the next set of text detection results."
          title: NextToken
        Blocks:
          allOf:
          - $ref: '#/components/schemas/BlockList'
          - description: The results of the text-analysis operation.
          title: Blocks
        Warnings:
          allOf:
          - $ref: '#/components/schemas/Warnings'
          - description: A list of warnings that occurred during the document-analysis
              operation.
          title: Warnings
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: Returns if the detection job could not be completed. Contains
              explanation for what error occured.
          title: StatusMessage
        AnalyzeDocumentModelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p/>
          title: AnalyzeDocumentModelVersion
      title: GetDocumentAnalysisResponse
      type: object
    GetDocumentAnalysisRequest:
      example:
        NextToken: ""
        MaxResults: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: A unique identifier for the text-detection job. The <code>JobId</code>
              is returned from <code>StartDocumentAnalysis</code>. A <code>JobId</code>
              value is only valid for 7 days.
          title: JobId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return per paginated call.\
              \ The largest value that you can specify is 1,000. If you specify a\
              \ value greater than 1,000, a maximum of 1,000 results is returned.\
              \ The default value is 1,000."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous response was incomplete (because there are\
              \ more blocks to retrieve), Amazon Textract returns a pagination token\
              \ in the response. You can use this pagination token to retrieve the\
              \ next set of blocks."
          title: NextToken
      required:
      - JobId
      title: GetDocumentAnalysisRequest
      type: object
    InvalidJobIdException: {}
    InvalidKMSKeyException: {}
    GetDocumentTextDetectionResponse:
      example:
        JobStatus: ""
        Blocks: ""
        NextToken: ""
        DocumentMetadata:
          Pages: ""
        DetectDocumentTextModelVersion: ""
        Warnings: ""
        StatusMessage: ""
      properties:
        DocumentMetadata:
          $ref: '#/components/schemas/GetDocumentAnalysisResponse_DocumentMetadata'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The current status of the text detection job.
          title: JobStatus
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the response is truncated, Amazon Textract returns this\
              \ token. You can use this token in the subsequent request to retrieve\
              \ the next set of text-detection results."
          title: NextToken
        Blocks:
          allOf:
          - $ref: '#/components/schemas/BlockList'
          - description: The results of the text-detection operation.
          title: Blocks
        Warnings:
          allOf:
          - $ref: '#/components/schemas/Warnings'
          - description: A list of warnings that occurred during the text-detection
              operation for the document.
          title: Warnings
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: 'Returns if the detection job could not be completed. Contains
              explanation for what error occured. '
          title: StatusMessage
        DetectDocumentTextModelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p/>
          title: DetectDocumentTextModelVersion
      title: GetDocumentTextDetectionResponse
      type: object
    GetDocumentTextDetectionRequest:
      example:
        NextToken: ""
        MaxResults: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: A unique identifier for the text detection job. The <code>JobId</code>
              is returned from <code>StartDocumentTextDetection</code>. A <code>JobId</code>
              value is only valid for 7 days.
          title: JobId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return per paginated call.\
              \ The largest value you can specify is 1,000. If you specify a value\
              \ greater than 1,000, a maximum of 1,000 results is returned. The default\
              \ value is 1,000."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous response was incomplete (because there are\
              \ more blocks to retrieve), Amazon Textract returns a pagination token\
              \ in the response. You can use this pagination token to retrieve the\
              \ next set of blocks."
          title: NextToken
      required:
      - JobId
      title: GetDocumentTextDetectionRequest
      type: object
    GetExpenseAnalysisResponse:
      example:
        JobStatus: ""
        NextToken: ""
        DocumentMetadata:
          Pages: ""
        AnalyzeExpenseModelVersion: ""
        Warnings: ""
        ExpenseDocuments: ""
        StatusMessage: ""
      properties:
        DocumentMetadata:
          $ref: '#/components/schemas/GetExpenseAnalysisResponse_DocumentMetadata'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The current status of the text detection job.
          title: JobStatus
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the response is truncated, Amazon Textract returns this\
              \ token. You can use this token in the subsequent request to retrieve\
              \ the next set of text-detection results."
          title: NextToken
        ExpenseDocuments:
          allOf:
          - $ref: '#/components/schemas/ExpenseDocumentList'
          - description: The expenses detected by Amazon Textract.
          title: ExpenseDocuments
        Warnings:
          allOf:
          - $ref: '#/components/schemas/Warnings'
          - description: A list of warnings that occurred during the text-detection
              operation for the document.
          title: Warnings
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: 'Returns if the detection job could not be completed. Contains
              explanation for what error occured. '
          title: StatusMessage
        AnalyzeExpenseModelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The current model version of AnalyzeExpense.
          title: AnalyzeExpenseModelVersion
      title: GetExpenseAnalysisResponse
      type: object
    GetExpenseAnalysisRequest:
      example:
        NextToken: ""
        MaxResults: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: A unique identifier for the text detection job. The <code>JobId</code>
              is returned from <code>StartExpenseAnalysis</code>. A <code>JobId</code>
              value is only valid for 7 days.
          title: JobId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return per paginated call.\
              \ The largest value you can specify is 20. If you specify a value greater\
              \ than 20, a maximum of 20 results is returned. The default value is\
              \ 20."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous response was incomplete (because there are\
              \ more blocks to retrieve), Amazon Textract returns a pagination token\
              \ in the response. You can use this pagination token to retrieve the\
              \ next set of blocks."
          title: NextToken
      required:
      - JobId
      title: GetExpenseAnalysisRequest
      type: object
    GetLendingAnalysisResponse:
      example:
        JobStatus: ""
        NextToken: ""
        DocumentMetadata:
          Pages: ""
        Results: ""
        Warnings: ""
        StatusMessage: ""
        AnalyzeLendingModelVersion: ""
      properties:
        DocumentMetadata:
          $ref: '#/components/schemas/DocumentMetadata'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: ' The current status of the lending analysis job.'
          title: JobStatus
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the response is truncated, Amazon Textract returns this\
              \ token. You can use this token in the subsequent request to retrieve\
              \ the next set of lending results."
          title: NextToken
        Results:
          allOf:
          - $ref: '#/components/schemas/LendingResultList'
          - description: ' Holds the information returned by one of AmazonTextract''s
              document analysis operations for the pinstripe.'
          title: Results
        Warnings:
          allOf:
          - $ref: '#/components/schemas/Warnings'
          - description: ' A list of warnings that occurred during the lending analysis
              operation. '
          title: Warnings
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: ' Returns if the lending analysis job could not be completed.
              Contains explanation for what error occurred. '
          title: StatusMessage
        AnalyzeLendingModelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The current model version of the Analyze Lending API.'
          title: AnalyzeLendingModelVersion
      title: GetLendingAnalysisResponse
      type: object
    GetLendingAnalysisRequest:
      example:
        NextToken: ""
        MaxResults: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: A unique identifier for the lending or text-detection job.
              The <code>JobId</code> is returned from <code>StartLendingAnalysis</code>.
              A <code>JobId</code> value is only valid for 7 days.
          title: JobId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return per paginated call.\
              \ The largest value that you can specify is 30. If you specify a value\
              \ greater than 30, a maximum of 30 results is returned. The default\
              \ value is 30."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous response was incomplete, Amazon Textract\
              \ returns a pagination token in the response. You can use this pagination\
              \ token to retrieve the next set of lending results."
          title: NextToken
      required:
      - JobId
      title: GetLendingAnalysisRequest
      type: object
    GetLendingAnalysisSummaryResponse:
      example:
        JobStatus: ""
        DocumentMetadata:
          Pages: ""
        Summary:
          DocumentGroups: ""
          UndetectedDocumentTypes: ""
        Warnings: ""
        StatusMessage: ""
        AnalyzeLendingModelVersion: ""
      properties:
        DocumentMetadata:
          $ref: '#/components/schemas/DocumentMetadata'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: ' The current status of the lending analysis job. '
          title: JobStatus
        Summary:
          $ref: '#/components/schemas/GetLendingAnalysisSummaryResponse_Summary'
        Warnings:
          allOf:
          - $ref: '#/components/schemas/Warnings'
          - description: A list of warnings that occurred during the lending analysis
              operation.
          title: Warnings
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: Returns if the lending analysis could not be completed. Contains
              explanation for what error occurred.
          title: StatusMessage
        AnalyzeLendingModelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The current model version of the Analyze Lending API.
          title: AnalyzeLendingModelVersion
      title: GetLendingAnalysisSummaryResponse
      type: object
    GetLendingAnalysisSummaryRequest:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: ' A unique identifier for the lending or text-detection job.
              The <code>JobId</code> is returned from StartLendingAnalysis. A <code>JobId</code>
              value is only valid for 7 days.'
          title: JobId
      required:
      - JobId
      title: GetLendingAnalysisSummaryRequest
      type: object
    StartDocumentAnalysisResponse:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The identifier for the document text detection job. Use <code>JobId</code>
              to identify the job in a subsequent call to <code>GetDocumentAnalysis</code>.
              A <code>JobId</code> value is only valid for 7 days.
          title: JobId
      title: StartDocumentAnalysisResponse
      type: object
    StartDocumentAnalysisRequest:
      example:
        NotificationChannel:
          SNSTopicArn: ""
          RoleArn: ""
        DocumentLocation:
          S3Object:
            Bucket: ""
            Version: ""
            Name: ""
        ClientRequestToken: ""
        OutputConfig:
          S3Bucket: ""
          S3Prefix: ""
        KMSKeyId: ""
        QueriesConfig:
          Queries: ""
        FeatureTypes: ""
        JobTag: ""
      properties:
        DocumentLocation:
          $ref: '#/components/schemas/StartDocumentAnalysisRequest_DocumentLocation'
        FeatureTypes:
          allOf:
          - $ref: '#/components/schemas/FeatureTypes'
          - description: "A list of the types of analysis to perform. Add TABLES to\
              \ the list to return information about the tables that are detected\
              \ in the input document. Add FORMS to return detected form data. To\
              \ perform both types of analysis, add TABLES and FORMS to <code>FeatureTypes</code>.\
              \ All lines and words detected in the document are included in the response\
              \ (including text that isn't related to the value of <code>FeatureTypes</code>). "
          title: FeatureTypes
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "The idempotent token that you use to identify the start\
              \ request. If you use the same token with multiple <code>StartDocumentAnalysis</code>\
              \ requests, the same <code>JobId</code> is returned. Use <code>ClientRequestToken</code>\
              \ to prevent the same job from being accidentally started more than\
              \ once. For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/api-async.html\"\
              >Calling Amazon Textract Asynchronous Operations</a>."
          title: ClientRequestToken
        JobTag:
          allOf:
          - $ref: '#/components/schemas/JobTag'
          - description: "An identifier that you specify that's included in the completion\
              \ notification published to the Amazon SNS topic. For example, you can\
              \ use <code>JobTag</code> to identify the type of document that the\
              \ completion notification corresponds to (such as a tax form or a receipt)."
          title: JobTag
        NotificationChannel:
          $ref: '#/components/schemas/StartDocumentAnalysisRequest_NotificationChannel'
        OutputConfig:
          $ref: '#/components/schemas/StartDocumentAnalysisRequest_OutputConfig'
        KMSKeyId:
          allOf:
          - $ref: '#/components/schemas/KMSKeyId'
          - description: "The KMS key used to encrypt the inference results. This\
              \ can be in either Key ID or Key Alias format. When a KMS key is provided,\
              \ the KMS key will be used for server-side encryption of the objects\
              \ in the customer bucket. When this parameter is not enabled, the result\
              \ will be encrypted server side,using SSE-S3."
          title: KMSKeyId
        QueriesConfig:
          $ref: '#/components/schemas/QueriesConfig'
      required:
      - DocumentLocation
      - FeatureTypes
      title: StartDocumentAnalysisRequest
      type: object
    IdempotentParameterMismatchException: {}
    LimitExceededException: {}
    StartDocumentTextDetectionResponse:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The identifier of the text detection job for the document.
              Use <code>JobId</code> to identify the job in a subsequent call to <code>GetDocumentTextDetection</code>.
              A <code>JobId</code> value is only valid for 7 days.
          title: JobId
      title: StartDocumentTextDetectionResponse
      type: object
    StartDocumentTextDetectionRequest:
      example:
        NotificationChannel:
          SNSTopicArn: ""
          RoleArn: ""
        DocumentLocation:
          S3Object:
            Bucket: ""
            Version: ""
            Name: ""
        ClientRequestToken: ""
        OutputConfig:
          S3Bucket: ""
          S3Prefix: ""
        KMSKeyId: ""
        JobTag: ""
      properties:
        DocumentLocation:
          $ref: '#/components/schemas/StartDocumentAnalysisRequest_DocumentLocation'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "The idempotent token that's used to identify the start request.\
              \ If you use the same token with multiple <code>StartDocumentTextDetection</code>\
              \ requests, the same <code>JobId</code> is returned. Use <code>ClientRequestToken</code>\
              \ to prevent the same job from being accidentally started more than\
              \ once. For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/api-async.html\"\
              >Calling Amazon Textract Asynchronous Operations</a>."
          title: ClientRequestToken
        JobTag:
          allOf:
          - $ref: '#/components/schemas/JobTag'
          - description: "An identifier that you specify that's included in the completion\
              \ notification published to the Amazon SNS topic. For example, you can\
              \ use <code>JobTag</code> to identify the type of document that the\
              \ completion notification corresponds to (such as a tax form or a receipt)."
          title: JobTag
        NotificationChannel:
          $ref: '#/components/schemas/StartDocumentAnalysisRequest_NotificationChannel'
        OutputConfig:
          $ref: '#/components/schemas/StartDocumentTextDetectionRequest_OutputConfig'
        KMSKeyId:
          allOf:
          - $ref: '#/components/schemas/KMSKeyId'
          - description: "The KMS key used to encrypt the inference results. This\
              \ can be in either Key ID or Key Alias format. When a KMS key is provided,\
              \ the KMS key will be used for server-side encryption of the objects\
              \ in the customer bucket. When this parameter is not enabled, the result\
              \ will be encrypted server side,using SSE-S3."
          title: KMSKeyId
      required:
      - DocumentLocation
      title: StartDocumentTextDetectionRequest
      type: object
    StartExpenseAnalysisResponse:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: A unique identifier for the text detection job. The <code>JobId</code>
              is returned from <code>StartExpenseAnalysis</code>. A <code>JobId</code>
              value is only valid for 7 days.
          title: JobId
      title: StartExpenseAnalysisResponse
      type: object
    StartExpenseAnalysisRequest:
      example:
        NotificationChannel:
          SNSTopicArn: ""
          RoleArn: ""
        DocumentLocation:
          S3Object:
            Bucket: ""
            Version: ""
            Name: ""
        ClientRequestToken: ""
        OutputConfig:
          S3Bucket: ""
          S3Prefix: ""
        KMSKeyId: ""
        JobTag: ""
      properties:
        DocumentLocation:
          $ref: '#/components/schemas/StartDocumentAnalysisRequest_DocumentLocation'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "The idempotent token that's used to identify the start request.\
              \ If you use the same token with multiple <code>StartDocumentTextDetection</code>\
              \ requests, the same <code>JobId</code> is returned. Use <code>ClientRequestToken</code>\
              \ to prevent the same job from being accidentally started more than\
              \ once. For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/api-async.html\"\
              >Calling Amazon Textract Asynchronous Operations</a> "
          title: ClientRequestToken
        JobTag:
          allOf:
          - $ref: '#/components/schemas/JobTag'
          - description: "An identifier you specify that's included in the completion\
              \ notification published to the Amazon SNS topic. For example, you can\
              \ use <code>JobTag</code> to identify the type of document that the\
              \ completion notification corresponds to (such as a tax form or a receipt)."
          title: JobTag
        NotificationChannel:
          $ref: '#/components/schemas/StartDocumentAnalysisRequest_NotificationChannel'
        OutputConfig:
          $ref: '#/components/schemas/StartExpenseAnalysisRequest_OutputConfig'
        KMSKeyId:
          allOf:
          - $ref: '#/components/schemas/KMSKeyId'
          - description: "The KMS key used to encrypt the inference results. This\
              \ can be in either Key ID or Key Alias format. When a KMS key is provided,\
              \ the KMS key will be used for server-side encryption of the objects\
              \ in the customer bucket. When this parameter is not enabled, the result\
              \ will be encrypted server side,using SSE-S3."
          title: KMSKeyId
      required:
      - DocumentLocation
      title: StartExpenseAnalysisRequest
      type: object
    StartLendingAnalysisResponse:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: A unique identifier for the lending or text-detection job.
              The <code>JobId</code> is returned from <code>StartLendingAnalysis</code>.
              A <code>JobId</code> value is only valid for 7 days.
          title: JobId
      title: StartLendingAnalysisResponse
      type: object
    StartLendingAnalysisRequest:
      example:
        NotificationChannel:
          SNSTopicArn: ""
          RoleArn: ""
        DocumentLocation:
          S3Object:
            Bucket: ""
            Version: ""
            Name: ""
        ClientRequestToken: ""
        OutputConfig:
          S3Bucket: ""
          S3Prefix: ""
        KMSKeyId: ""
        JobTag: ""
      properties:
        DocumentLocation:
          $ref: '#/components/schemas/DocumentLocation'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "The idempotent token that you use to identify the start\
              \ request. If you use the same token with multiple <code>StartLendingAnalysis</code>\
              \ requests, the same <code>JobId</code> is returned. Use <code>ClientRequestToken</code>\
              \ to prevent the same job from being accidentally started more than\
              \ once. For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/api-sync.html\"\
              >Calling Amazon Textract Asynchronous Operations</a>."
          title: ClientRequestToken
        JobTag:
          allOf:
          - $ref: '#/components/schemas/JobTag'
          - description: "An identifier that you specify to be included in the completion\
              \ notification published to the Amazon SNS topic. For example, you can\
              \ use <code>JobTag</code> to identify the type of document that the\
              \ completion notification corresponds to (such as a tax form or a receipt)."
          title: JobTag
        NotificationChannel:
          $ref: '#/components/schemas/NotificationChannel'
        OutputConfig:
          $ref: '#/components/schemas/OutputConfig'
        KMSKeyId:
          allOf:
          - $ref: '#/components/schemas/KMSKeyId'
          - description: "The KMS key used to encrypt the inference results. This\
              \ can be in either Key ID or Key Alias format. When a KMS key is provided,\
              \ the KMS key will be used for server-side encryption of the objects\
              \ in the customer bucket. When this parameter is not enabled, the result\
              \ will be encrypted server side, using SSE-S3. "
          title: KMSKeyId
      required:
      - DocumentLocation
      title: StartLendingAnalysisRequest
      type: object
    Document:
      description: "<p>The input document, either as bytes or as an S3 object.</p>\
        \ <p>You pass image bytes to an Amazon Textract API operation by using the\
        \ <code>Bytes</code> property. For example, you would use the <code>Bytes</code>\
        \ property to pass a document loaded from a local file system. Image bytes\
        \ passed by using the <code>Bytes</code> property must be base64 encoded.\
        \ Your code might not need to encode document file bytes if you're using an\
        \ AWS SDK to call Amazon Textract API operations. </p> <p>You pass images\
        \ stored in an S3 bucket to an Amazon Textract API operation by using the\
        \ <code>S3Object</code> property. Documents stored in an S3 bucket don't need\
        \ to be base64 encoded.</p> <p>The AWS Region for the S3 bucket that contains\
        \ the S3 object must match the AWS Region that you use for Amazon Textract\
        \ operations.</p> <p>If you use the AWS CLI to call Amazon Textract operations,\
        \ passing image bytes using the Bytes property isn't supported. You must first\
        \ upload the document to an Amazon S3 bucket, and then call the operation\
        \ using the S3Object property.</p> <p>For Amazon Textract to process an S3\
        \ object, the user must have permission to access the S3 object. </p>"
      example:
        Bytes: ""
        S3Object:
          Bucket: ""
          Version: ""
          Name: ""
      properties:
        Bytes:
          allOf:
          - $ref: '#/components/schemas/ImageBlob'
          - description: "<p>A blob of base64-encoded document bytes. The maximum\
              \ size of a document that's provided in a blob of bytes is 5 MB. The\
              \ document bytes must be in PNG or JPEG format.</p> <p>If you're using\
              \ an AWS SDK to call Amazon Textract, you might not need to base64-encode\
              \ image bytes passed using the <code>Bytes</code> field. </p>"
          title: Bytes
        S3Object:
          $ref: '#/components/schemas/Document_S3Object'
      title: Document
      type: object
    FeatureTypes:
      items:
        $ref: '#/components/schemas/FeatureType'
      type: array
    HumanLoopConfig:
      description: 'Sets up the human review workflow the document will be sent to
        if one of the conditions is met. You can also set certain attributes of the
        image before review. '
      properties:
        HumanLoopName:
          allOf:
          - $ref: '#/components/schemas/HumanLoopName'
          - description: The name of the human workflow used for this image. This
              should be kept unique within a region.
          title: HumanLoopName
        FlowDefinitionArn:
          allOf:
          - $ref: '#/components/schemas/FlowDefinitionArn'
          - description: The Amazon Resource Name (ARN) of the flow definition.
          title: FlowDefinitionArn
        DataAttributes:
          $ref: '#/components/schemas/HumanLoopConfig_DataAttributes'
      required:
      - FlowDefinitionArn
      - HumanLoopName
      title: HumanLoopConfig
      type: object
    QueriesConfig:
      description: <p/>
      example:
        Queries: ""
      properties:
        Queries:
          allOf:
          - $ref: '#/components/schemas/Queries'
          - description: <p/>
          title: Queries
      required:
      - Queries
      title: QueriesConfig
      type: object
    DocumentMetadata:
      description: Information about the input document.
      example:
        Pages: ""
      properties:
        Pages:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: The number of pages that are detected in the document.
          title: Pages
      title: DocumentMetadata
      type: object
    BlockList:
      items:
        $ref: '#/components/schemas/Block'
      type: array
    HumanLoopActivationOutput:
      description: "Shows the results of the human in the loop evaluation. If there\
        \ is no HumanLoopArn, the input did not trigger human review."
      properties:
        HumanLoopArn:
          allOf:
          - $ref: '#/components/schemas/HumanLoopArn'
          - description: The Amazon Resource Name (ARN) of the HumanLoop created.
          title: HumanLoopArn
        HumanLoopActivationReasons:
          allOf:
          - $ref: '#/components/schemas/HumanLoopActivationReasons'
          - description: Shows if and why human review was needed.
          title: HumanLoopActivationReasons
        HumanLoopActivationConditionsEvaluationResults:
          allOf:
          - $ref: '#/components/schemas/HumanLoopActivationConditionsEvaluationResults'
          - description: "Shows the result of condition evaluations, including those\
              \ conditions which activated a human review."
          title: HumanLoopActivationConditionsEvaluationResults
      title: HumanLoopActivationOutput
      type: object
    String:
      title: String
      type: string
    ExpenseDocumentList:
      items:
        $ref: '#/components/schemas/ExpenseDocument'
      type: array
    NormalizedValue:
      description: "Contains information relating to dates in a document, including\
        \ the type of value, and the value."
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The value of the date, written as Year-Month-DayTHour:Minute:Second."
          title: Value
        ValueType:
          allOf:
          - $ref: '#/components/schemas/ValueType'
          - description: "The normalized type of the value detected. In this case,\
              \ DATE."
          title: ValueType
      title: NormalizedValue
      type: object
    Percent:
      format: float
      maximum: 100
      minimum: 0
      type: number
    AnalyzeIDDetections:
      description: Used to contain the information detected by an AnalyzeID operation.
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Text of either the normalized field or value associated with
              it.
          title: Text
        NormalizedValue:
          $ref: '#/components/schemas/AnalyzeIDDetections_NormalizedValue'
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Percent'
          - description: The confidence score of the detected text.
          title: Confidence
      required:
      - Text
      title: AnalyzeIDDetections
      type: object
    DocumentPages:
      items:
        $ref: '#/components/schemas/Document'
      maxItems: 2
      minItems: 1
      type: array
    IdentityDocumentList:
      items:
        $ref: '#/components/schemas/IdentityDocument'
      type: array
    BlockType:
      enum:
      - KEY_VALUE_SET
      - PAGE
      - LINE
      - WORD
      - TABLE
      - CELL
      - SELECTION_ELEMENT
      - MERGED_CELL
      - TITLE
      - QUERY
      - QUERY_RESULT
      - SIGNATURE
      - TABLE_TITLE
      - TABLE_FOOTER
      title: BlockType
      type: string
    TextType:
      enum:
      - HANDWRITING
      - PRINTED
      title: TextType
      type: string
    UInteger:
      minimum: 0
      title: UInteger
      type: integer
    Geometry:
      description: "Information about where the following items are located on a document\
        \ page: detected page, text, key-value pairs, tables, table cells, and selection\
        \ elements."
      properties:
        BoundingBox:
          $ref: '#/components/schemas/Geometry_BoundingBox'
        Polygon:
          allOf:
          - $ref: '#/components/schemas/Polygon'
          - description: "Within the bounding box, a fine-grained polygon around the\
              \ recognized item."
          title: Polygon
      title: Geometry
      type: object
    NonEmptyString:
      pattern: .*\S.*
      title: NonEmptyString
      type: string
    RelationshipList:
      items:
        $ref: '#/components/schemas/Relationship'
      type: array
    EntityTypes:
      items:
        $ref: '#/components/schemas/EntityType'
      type: array
    SelectionStatus:
      enum:
      - SELECTED
      - NOT_SELECTED
      title: SelectionStatus
      type: string
    Query:
      description: Each query contains the question you want to ask in the Text and
        the alias you want to associate.
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/QueryInput'
          - description: Question that Amazon Textract will apply to the document.
              An example would be "What is the customer's SSN?"
          title: Text
        Alias:
          allOf:
          - $ref: '#/components/schemas/QueryInput'
          - description: "Alias attached to the query, for ease of location."
          title: Alias
        Pages:
          allOf:
          - $ref: '#/components/schemas/QueryPages'
          - description: "<p>Pages is a parameter that the user inputs to specify\
              \ which pages to apply a query to. The following is a list of rules\
              \ for using this parameter.</p> <ul> <li> <p>If a page is not specified,\
              \ it is set to <code>[\"1\"]</code> by default.</p> </li> <li> <p>The\
              \ following characters are allowed in the parameter's string: <code>0\
              \ 1 2 3 4 5 6 7 8 9 - *</code>. No whitespace is allowed.</p> </li>\
              \ <li> <p>When using * to indicate all pages, it must be the only element\
              \ in the list.</p> </li> <li> <p>You can use page intervals, such as\
              \ <code>[“1-3”, “1-1”, “4-*”]</code>. Where <code>*</code> indicates\
              \ last page of document.</p> </li> <li> <p>Specified pages must be greater\
              \ than 0 and less than or equal to the number of pages in the document.</p>\
              \ </li> </ul>"
          title: Pages
      required:
      - Text
      title: Query
      type: object
    Block:
      description: "<p>A <code>Block</code> represents items that are recognized in\
        \ a document within a group of pixels close to each other. The information\
        \ returned in a <code>Block</code> object depends on the type of operation.\
        \ In text detection for documents (for example <a>DetectDocumentText</a>),\
        \ you get information about the detected words and lines of text. In text\
        \ analysis (for example <a>AnalyzeDocument</a>), you can also get information\
        \ about the fields, tables, and selection elements that are detected in the\
        \ document.</p> <p>An array of <code>Block</code> objects is returned by both\
        \ synchronous and asynchronous operations. In synchronous operations, such\
        \ as <a>DetectDocumentText</a>, the array of <code>Block</code> objects is\
        \ the entire set of results. In asynchronous operations, such as <a>GetDocumentAnalysis</a>,\
        \ the array is returned over one or more responses.</p> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works.html\"\
        >How Amazon Textract Works</a>.</p>"
      properties:
        BlockType:
          allOf:
          - $ref: '#/components/schemas/BlockType'
          - description: "<p>The type of text item that's recognized. In operations\
              \ for text detection, the following types are returned:</p> <ul> <li>\
              \ <p> <i>PAGE</i> - Contains a list of the LINE <code>Block</code> objects\
              \ that are detected on a document page.</p> </li> <li> <p> <i>WORD</i>\
              \ - A word detected on a document page. A word is one or more ISO basic\
              \ Latin script characters that aren't separated by spaces.</p> </li>\
              \ <li> <p> <i>LINE</i> - A string of tab-delimited, contiguous words\
              \ that are detected on a document page.</p> </li> </ul> <p>In text analysis\
              \ operations, the following types are returned:</p> <ul> <li> <p> <i>PAGE</i>\
              \ - Contains a list of child <code>Block</code> objects that are detected\
              \ on a document page.</p> </li> <li> <p> <i>KEY_VALUE_SET</i> - Stores\
              \ the KEY and VALUE <code>Block</code> objects for linked text that's\
              \ detected on a document page. Use the <code>EntityType</code> field\
              \ to determine if a KEY_VALUE_SET object is a KEY <code>Block</code>\
              \ object or a VALUE <code>Block</code> object. </p> </li> <li> <p> <i>WORD</i>\
              \ - A word that's detected on a document page. A word is one or more\
              \ ISO basic Latin script characters that aren't separated by spaces.</p>\
              \ </li> <li> <p> <i>LINE</i> - A string of tab-delimited, contiguous\
              \ words that are detected on a document page.</p> </li> <li> <p> <i>TABLE</i>\
              \ - A table that's detected on a document page. A table is grid-based\
              \ information with two or more rows or columns, with a cell span of\
              \ one row and one column each. </p> </li> <li> <p> <i>TABLE_TITLE</i>\
              \ - The title of a table. A title is typically a line of text above\
              \ or below a table, or embedded as the first row of a table. </p> </li>\
              \ <li> <p> <i>TABLE_FOOTER</i> - The footer associated with a table.\
              \ A footer is typically a line or lines of text below a table or embedded\
              \ as the last row of a table. </p> </li> <li> <p> <i>CELL</i> - A cell\
              \ within a detected table. The cell is the parent of the block that\
              \ contains the text in the cell.</p> </li> <li> <p> <i>MERGED_CELL</i>\
              \ - A cell in a table whose content spans more than one row or column.\
              \ The <code>Relationships</code> array for this cell contain data from\
              \ individual cells.</p> </li> <li> <p> <i>SELECTION_ELEMENT</i> - A\
              \ selection element such as an option button (radio button) or a check\
              \ box that's detected on a document page. Use the value of <code>SelectionStatus</code>\
              \ to determine the status of the selection element.</p> </li> <li> <p>\
              \ <i>SIGNATURE</i> - The location and confidene score of a signature\
              \ detected on a document page. Can be returned as part of a Key-Value\
              \ pair or a detected cell.</p> </li> <li> <p> <i>QUERY</i> - A question\
              \ asked during the call of AnalyzeDocument. Contains an alias and an\
              \ ID that attaches it to its answer.</p> </li> <li> <p> <i>QUERY_RESULT</i>\
              \ - A response to a question asked during the call of analyze document.\
              \ Comes with an alias and ID for ease of locating in a response. Also\
              \ contains location and confidence score.</p> </li> </ul>"
          title: BlockType
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Percent'
          - description: The confidence score that Amazon Textract has in the accuracy
              of the recognized text and the accuracy of the geometry points around
              the recognized text.
          title: Confidence
        Text:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The word or line of text that''s recognized by Amazon Textract. '
          title: Text
        TextType:
          allOf:
          - $ref: '#/components/schemas/TextType'
          - description: The kind of text that Amazon Textract has detected. Can check
              for handwritten text and printed text.
          title: TextType
        RowIndex:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: The row in which a table cell is located. The first row position
              is 1. <code>RowIndex</code> isn't returned by <code>DetectDocumentText</code>
              and <code>GetDocumentTextDetection</code>.
          title: RowIndex
        ColumnIndex:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: The column in which a table cell appears. The first column
              position is 1. <code>ColumnIndex</code> isn't returned by <code>DetectDocumentText</code>
              and <code>GetDocumentTextDetection</code>.
          title: ColumnIndex
        RowSpan:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: The number of rows that a table cell spans. <code>RowSpan</code>
              isn't returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.
          title: RowSpan
        ColumnSpan:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: 'The number of columns that a table cell spans. <code>ColumnSpan</code>
              isn''t returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>. '
          title: ColumnSpan
        Geometry:
          $ref: '#/components/schemas/Block_Geometry'
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: 'The identifier for the recognized text. The identifier is
              only unique for a single operation. '
          title: Id
        Relationships:
          allOf:
          - $ref: '#/components/schemas/RelationshipList'
          - description: "A list of relationship objects that describe how blocks\
              \ are related to each other. For example, a LINE block object contains\
              \ a CHILD relationship type with the WORD blocks that make up the line\
              \ of text. There aren't Relationship objects in the list for relationships\
              \ that don't exist, such as when the current block has no child blocks."
          title: Relationships
        EntityTypes:
          allOf:
          - $ref: '#/components/schemas/EntityTypes'
          - description: "<p>The type of entity. </p> <p>The following entity types\
              \ can be returned by FORMS analysis:</p> <ul> <li> <p> <i>KEY</i> -\
              \ An identifier for a field on the document.</p> </li> <li> <p> <i>VALUE</i>\
              \ - The field text.</p> </li> </ul> <p>The following entity types can\
              \ be returned by TABLES analysis:</p> <ul> <li> <p> <i>COLUMN_HEADER</i>\
              \ - Identifies a cell that is a header of a column. </p> </li> <li>\
              \ <p> <i>TABLE_TITLE</i> - Identifies a cell that is a title within\
              \ the table. </p> </li> <li> <p> <i>TABLE_SECTION_TITLE</i> - Identifies\
              \ a cell that is a title of a section within a table. A section title\
              \ is a cell that typically spans an entire row above a section. </p>\
              \ </li> <li> <p> <i>TABLE_FOOTER</i> - Identifies a cell that is a footer\
              \ of a table. </p> </li> <li> <p> <i>TABLE_SUMMARY</i> - Identifies\
              \ a summary cell of a table. A summary cell can be a row of a table\
              \ or an additional, smaller table that contains summary information\
              \ for another table. </p> </li> <li> <p> <i>STRUCTURED_TABLE </i> -\
              \ Identifies a table with column headers where the content of each row\
              \ corresponds to the headers. </p> </li> <li> <p> <i>SEMI_STRUCTURED_TABLE</i>\
              \ - Identifies a non-structured table. </p> </li> </ul> <p> <code>EntityTypes</code>\
              \ isn't returned by <code>DetectDocumentText</code> and <code>GetDocumentTextDetection</code>.</p>"
          title: EntityTypes
        SelectionStatus:
          allOf:
          - $ref: '#/components/schemas/SelectionStatus'
          - description: "The selection status of a selection element, such as an\
              \ option button or check box. "
          title: SelectionStatus
        Page:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: "The page on which a block was detected. <code>Page</code>\
              \ is returned by synchronous and asynchronous operations. Page values\
              \ greater than 1 are only returned for multipage documents that are\
              \ in PDF or TIFF format. A scanned image (JPEG/PNG) provided to an asynchronous\
              \ operation, even if it contains multiple document pages, is considered\
              \ a single-page document. This means that for scanned images the value\
              \ of <code>Page</code> is always 1. Synchronous operations will also\
              \ return a <code>Page</code> value of 1 because every input document\
              \ is considered to be a single-page document."
          title: Page
        Query:
          $ref: '#/components/schemas/Block_Query'
      title: Block
      type: object
    Float:
      format: float
      type: number
    BoundingBox:
      description: "<p>The bounding box around the detected page, text, key-value\
        \ pair, table, table cell, or selection element on a document page. The <code>left</code>\
        \ (x-coordinate) and <code>top</code> (y-coordinate) are coordinates that\
        \ represent the top and left sides of the bounding box. Note that the upper-left\
        \ corner of the image is the origin (0,0). </p> <p>The <code>top</code> and\
        \ <code>left</code> values returned are ratios of the overall document page\
        \ size. For example, if the input image is 700 x 200 pixels, and the top-left\
        \ coordinate of the bounding box is 350 x 50 pixels, the API returns a <code>left</code>\
        \ value of 0.5 (350/700) and a <code>top</code> value of 0.25 (50/200).</p>\
        \ <p>The <code>width</code> and <code>height</code> values represent the dimensions\
        \ of the bounding box as a ratio of the overall document page dimension. For\
        \ example, if the document page size is 700 x 200 pixels, and the bounding\
        \ box width is 70 pixels, the width returned is 0.1. </p>"
      properties:
        Width:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: The width of the bounding box as a ratio of the overall document
              page width.
          title: Width
        Height:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: The height of the bounding box as a ratio of the overall
              document page height.
          title: Height
        Left:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: The left coordinate of the bounding box as a ratio of overall
              document page width.
          title: Left
        Top:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: The top coordinate of the bounding box as a ratio of overall
              document page height.
          title: Top
      title: BoundingBox
      type: object
    ClientRequestToken:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9-_]+$"
      type: string
    ContentClassifier:
      enum:
      - FreeOfPersonallyIdentifiableInformation
      - FreeOfAdultContent
      title: ContentClassifier
      type: string
    ContentClassifiers:
      items:
        $ref: '#/components/schemas/ContentClassifier'
      maxItems: 256
      type: array
    DetectedSignature:
      description: A structure that holds information regarding a detected signature
        on a page.
      properties:
        Page:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: The page a detected signature was found on.
          title: Page
      title: DetectedSignature
      type: object
    DetectedSignatureList:
      items:
        $ref: '#/components/schemas/DetectedSignature'
      type: array
    ImageBlob:
      maxLength: 10485760
      minLength: 1
      type: string
    S3Object:
      description: "<p>The S3 bucket name and file name that identifies the document.</p>\
        \ <p>The AWS Region for the S3 bucket that contains the document must match\
        \ the Region that you use for Amazon Textract operations.</p> <p>For Amazon\
        \ Textract to process a file in an S3 bucket, the user must have permission\
        \ to access the S3 bucket and file. </p>"
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: "The name of the S3 bucket. Note that the # character is\
              \ not valid in the file name."
          title: Bucket
        Name:
          allOf:
          - $ref: '#/components/schemas/S3ObjectName'
          - description: The file name of the input document. Synchronous operations
              can use image files that are in JPEG or PNG format. Asynchronous operations
              also support PDF and TIFF format files.
          title: Name
        Version:
          allOf:
          - $ref: '#/components/schemas/S3ObjectVersion'
          - description: "If the bucket has versioning enabled, you can specify the\
              \ object version. "
          title: Version
      title: S3Object
      type: object
    SplitDocumentList:
      items:
        $ref: '#/components/schemas/SplitDocument'
      type: array
    UndetectedSignatureList:
      items:
        $ref: '#/components/schemas/UndetectedSignature'
      type: array
    DocumentGroup:
      description: Summary information about documents grouped by the same document
        type.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The type of document that Amazon Textract has detected. See
              <a href="https://docs.aws.amazon.com/textract/latest/dg/lending-response-objects.html">Analyze
              Lending Response Objects</a> for a list of all types returned by Textract.
          title: Type
        SplitDocuments:
          allOf:
          - $ref: '#/components/schemas/SplitDocumentList'
          - description: "An array that contains information about the pages of a\
              \ document, defined by logical boundary."
          title: SplitDocuments
        DetectedSignatures:
          allOf:
          - $ref: '#/components/schemas/DetectedSignatureList'
          - description: A list of the detected signatures found in a document group.
          title: DetectedSignatures
        UndetectedSignatures:
          allOf:
          - $ref: '#/components/schemas/UndetectedSignatureList'
          - description: A list of any expected signatures not found in a document
              group.
          title: UndetectedSignatures
      title: DocumentGroup
      type: object
    DocumentGroupList:
      items:
        $ref: '#/components/schemas/DocumentGroup'
      type: array
    DocumentLocation:
      description: <p>The Amazon S3 bucket that contains the document to be processed.
        It's used by asynchronous operations.</p> <p>The input document can be an
        image file in JPEG or PNG format. It can also be a file in PDF format.</p>
      example:
        S3Object:
          Bucket: ""
          Version: ""
          Name: ""
      properties:
        S3Object:
          $ref: '#/components/schemas/DocumentLocation_S3Object'
      title: DocumentLocation
      type: object
    EntityType:
      enum:
      - KEY
      - VALUE
      - COLUMN_HEADER
      - TABLE_TITLE
      - TABLE_FOOTER
      - TABLE_SECTION_TITLE
      - TABLE_SUMMARY
      - STRUCTURED_TABLE
      - SEMI_STRUCTURED_TABLE
      title: EntityType
      type: string
    ErrorCode:
      type: string
    ExpenseCurrency:
      description: Returns the kind of currency detected.
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Currency code for detected currency. the current supported
              codes are:</p> <ul> <li> <p>USD</p> </li> <li> <p>EUR</p> </li> <li>
              <p>GBP</p> </li> <li> <p>CAD</p> </li> <li> <p>INR</p> </li> <li> <p>JPY</p>
              </li> <li> <p>CHF</p> </li> <li> <p>AUD</p> </li> <li> <p>CNY</p> </li>
              <li> <p>BZR</p> </li> <li> <p>SEK</p> </li> <li> <p>HKD</p> </li> </ul>
          title: Code
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Percent'
          - description: Percentage confideence in the detected currency.
          title: Confidence
      title: ExpenseCurrency
      type: object
    ExpenseDetection:
      description: An object used to store information about the Value or Label detected
        by Amazon Textract.
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The word or line of text recognized by Amazon Textract
          title: Text
        Geometry:
          $ref: '#/components/schemas/Geometry'
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Percent'
          - description: "The confidence in detection, as a percentage"
          title: Confidence
      title: ExpenseDetection
      type: object
    ExpenseFieldList:
      items:
        $ref: '#/components/schemas/ExpenseField'
      type: array
    LineItemGroupList:
      items:
        $ref: '#/components/schemas/LineItemGroup'
      type: array
    ExpenseDocument:
      description: The structure holding all the information returned by AnalyzeExpense
      properties:
        ExpenseIndex:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: "Denotes which invoice or receipt in the document the information\
              \ is coming from. First document will be 1, the second 2, and so on."
          title: ExpenseIndex
        SummaryFields:
          allOf:
          - $ref: '#/components/schemas/ExpenseFieldList'
          - description: Any information found outside of a table by Amazon Textract.
          title: SummaryFields
        LineItemGroups:
          allOf:
          - $ref: '#/components/schemas/LineItemGroupList'
          - description: "Information detected on each table of a document, seperated\
              \ into <code>LineItems</code>."
          title: LineItemGroups
        Blocks:
          allOf:
          - $ref: '#/components/schemas/BlockList'
          - description: "This is a block object, the same as reported when DetectDocumentText\
              \ is run on a document. It provides word level recognition of text."
          title: Blocks
      title: ExpenseDocument
      type: object
    ExpenseType:
      description: An object used to store information about the Type detected by
        Amazon Textract.
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The word or line of text detected by Amazon Textract.
          title: Text
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Percent'
          - description: "The confidence of accuracy, as a percentage."
          title: Confidence
      title: ExpenseType
      type: object
    ExpenseGroupPropertyList:
      items:
        $ref: '#/components/schemas/ExpenseGroupProperty'
      type: array
    ExpenseField:
      description: "Breakdown of detected information, seperated into the catagories\
        \ Type, LabelDetection, and ValueDetection"
      properties:
        Type:
          $ref: '#/components/schemas/ExpenseField_Type'
        LabelDetection:
          $ref: '#/components/schemas/ExpenseField_LabelDetection'
        ValueDetection:
          $ref: '#/components/schemas/ExpenseField_ValueDetection'
        PageNumber:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: The page number the value was detected on.
          title: PageNumber
        Currency:
          $ref: '#/components/schemas/ExpenseField_Currency'
        GroupProperties:
          allOf:
          - $ref: '#/components/schemas/ExpenseGroupPropertyList'
          - description: "Shows which group a response object belongs to, such as\
              \ whether an address line belongs to the vendor's address or the recipent's\
              \ address."
          title: GroupProperties
      title: ExpenseField
      type: object
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ExpenseGroupProperty:
      description: "Shows the group that a certain key belongs to. This helps differentiate\
        \ between names and addresses for different organizations, that can be hard\
        \ to determine via JSON response."
      properties:
        Types:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: Informs you on whether the expense group is a name or an
              address.
          title: Types
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Provides a group Id number, which will be the same for each\
              \ in the group."
          title: Id
      title: ExpenseGroupProperty
      type: object
    LendingDocument:
      description: Holds the structured data returned by AnalyzeDocument for lending
        documents.
      properties:
        LendingFields:
          allOf:
          - $ref: '#/components/schemas/LendingFieldList'
          - description: An array of LendingField objects.
          title: LendingFields
        SignatureDetections:
          allOf:
          - $ref: '#/components/schemas/SignatureDetectionList'
          - description: A list of signatures detected in a lending document.
          title: SignatureDetections
      title: LendingDocument
      type: object
    IdentityDocument:
      description: The structure that lists each document processed in an AnalyzeID
        operation.
      properties:
        DocumentIndex:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: "Denotes the placement of a document in the IdentityDocument\
              \ list. The first document is marked 1, the second 2 and so on."
          title: DocumentIndex
        IdentityDocumentFields:
          allOf:
          - $ref: '#/components/schemas/IdentityDocumentFieldList'
          - description: The structure used to record information extracted from identity
              documents. Contains both normalized field and value of the extracted
              text.
          title: IdentityDocumentFields
        Blocks:
          allOf:
          - $ref: '#/components/schemas/BlockList'
          - description: "Individual word recognition, as returned by document detection."
          title: Blocks
      title: IdentityDocument
      type: object
    Extraction:
      description: Contains information extracted by an analysis operation after using
        StartLendingAnalysis.
      properties:
        LendingDocument:
          $ref: '#/components/schemas/Extraction_LendingDocument'
        ExpenseDocument:
          $ref: '#/components/schemas/ExpenseDocument'
        IdentityDocument:
          $ref: '#/components/schemas/IdentityDocument'
      title: Extraction
      type: object
    ExtractionList:
      items:
        $ref: '#/components/schemas/Extraction'
      type: array
    FeatureType:
      enum:
      - TABLES
      - FORMS
      - QUERIES
      - SIGNATURES
      title: FeatureType
      type: string
    FlowDefinitionArn:
      maxLength: 256
      type: string
    Polygon:
      items:
        $ref: '#/components/schemas/Point'
      type: array
    JobId:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9-_]+$"
      type: string
    MaxResults:
      minimum: 1
      type: integer
    PaginationToken:
      maxLength: 255
      minLength: 1
      pattern: .*\S.*
      type: string
    JobStatus:
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - PARTIAL_SUCCESS
      title: JobStatus
      type: string
    Warnings:
      items:
        $ref: '#/components/schemas/Warning'
      type: array
    StatusMessage:
      type: string
    LendingResultList:
      items:
        $ref: '#/components/schemas/LendingResult'
      type: array
    LendingSummary:
      description: Contains information regarding DocumentGroups and UndetectedDocumentTypes.
      properties:
        DocumentGroups:
          allOf:
          - $ref: '#/components/schemas/DocumentGroupList'
          - description: Contains an array of all DocumentGroup objects.
          title: DocumentGroups
        UndetectedDocumentTypes:
          allOf:
          - $ref: '#/components/schemas/UndetectedDocumentTypeList'
          - description: UndetectedDocumentTypes.
          title: UndetectedDocumentTypes
      title: LendingSummary
      type: object
    HumanLoopActivationConditionsEvaluationResults:
      maxLength: 10240
      type: string
    HumanLoopArn:
      maxLength: 256
      type: string
    HumanLoopActivationReasons:
      items:
        $ref: '#/components/schemas/HumanLoopActivationReason'
      minItems: 1
      type: array
    HumanLoopActivationReason:
      title: HumanLoopActivationReason
      type: string
    HumanLoopName:
      maxLength: 63
      minLength: 1
      pattern: "^[a-z0-9](-*[a-z0-9])*"
      type: string
    HumanLoopDataAttributes:
      description: "Allows you to set attributes of the image. Currently, you can\
        \ declare an image as free of personally identifiable information and adult\
        \ content. "
      properties:
        ContentClassifiers:
          allOf:
          - $ref: '#/components/schemas/ContentClassifiers'
          - description: Sets whether the input image is free of personally identifiable
              information or adult content.
          title: ContentClassifiers
      title: HumanLoopDataAttributes
      type: object
    IdList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      type: array
    IdentityDocumentFieldList:
      items:
        $ref: '#/components/schemas/IdentityDocumentField'
      type: array
    IdentityDocumentField:
      description: Structure containing both the normalized type of the extracted
        information and the text associated with it. These are extracted as Type and
        Value respectively.
      properties:
        Type:
          $ref: '#/components/schemas/AnalyzeIDDetections'
        ValueDetection:
          $ref: '#/components/schemas/AnalyzeIDDetections'
      title: IdentityDocumentField
      type: object
    JobTag:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_.\\-:]+"
      type: string
    KMSKeyId:
      maxLength: 2048
      minLength: 1
      pattern: "^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$"
      type: string
    LendingDetection:
      description: The results extracted for a lending document.
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The text extracted for a detected value in a lending document.
          title: Text
        SelectionStatus:
          allOf:
          - $ref: '#/components/schemas/SelectionStatus'
          - description: "The selection status of a selection element, such as an\
              \ option button or check box."
          title: SelectionStatus
        Geometry:
          $ref: '#/components/schemas/Geometry'
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Percent'
          - description: The confidence level for the text of a detected value in
              a lending document.
          title: Confidence
      title: LendingDetection
      type: object
    LendingDetectionList:
      items:
        $ref: '#/components/schemas/LendingDetection'
      type: array
    LendingFieldList:
      items:
        $ref: '#/components/schemas/LendingField'
      type: array
    SignatureDetectionList:
      items:
        $ref: '#/components/schemas/SignatureDetection'
      type: array
    LendingField:
      description: "Holds the normalized key-value pairs returned by AnalyzeDocument,\
        \ including the document type, detected text, and geometry."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of the lending document.
          title: Type
        KeyDetection:
          $ref: '#/components/schemas/LendingDetection'
        ValueDetections:
          allOf:
          - $ref: '#/components/schemas/LendingDetectionList'
          - description: An array of LendingDetection objects.
          title: ValueDetections
      title: LendingField
      type: object
    PageClassification:
      description: The class assigned to a Page object detected in an input document.
        Contains information regarding the predicted type/class of a document's page
        and the page number that the Page object was detected on.
      properties:
        PageType:
          allOf:
          - $ref: '#/components/schemas/PredictionList'
          - description: "The class, or document type, assigned to a detected Page\
              \ object. The class, or document type, assigned to a detected Page object."
          title: PageType
        PageNumber:
          allOf:
          - $ref: '#/components/schemas/PredictionList'
          - description: " The page number the value was detected on, relative to\
              \ Amazon Textract's starting position."
          title: PageNumber
      required:
      - PageNumber
      - PageType
      title: PageClassification
      type: object
    LendingResult:
      description: Contains the detections for each page analyzed through the Analyze
        Lending API.
      properties:
        Page:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: "The page number for a page, with regard to whole submission."
          title: Page
        PageClassification:
          $ref: '#/components/schemas/LendingResult_PageClassification'
        Extractions:
          allOf:
          - $ref: '#/components/schemas/ExtractionList'
          - description: An array of Extraction to hold structured data. e.g. normalized
              key value pairs instead of raw OCR detections .
          title: Extractions
      title: LendingResult
      type: object
    UndetectedDocumentTypeList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      type: array
    LineItemFields:
      description: A structure that holds information about the different lines found
        in a document's tables.
      properties:
        LineItemExpenseFields:
          allOf:
          - $ref: '#/components/schemas/ExpenseFieldList'
          - description: ExpenseFields used to show information from detected lines
              on a table.
          title: LineItemExpenseFields
      title: LineItemFields
      type: object
    LineItemList:
      items:
        $ref: '#/components/schemas/LineItemFields'
      type: array
    LineItemGroup:
      description: "A grouping of tables which contain LineItems, with each table\
        \ identified by the table's <code>LineItemGroupIndex</code>."
      properties:
        LineItemGroupIndex:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: "The number used to identify a specific table in a document.\
              \ The first table encountered will have a LineItemGroupIndex of 1, the\
              \ second 2, etc."
          title: LineItemGroupIndex
        LineItems:
          allOf:
          - $ref: '#/components/schemas/LineItemList'
          - description: 'The breakdown of information on a particular line of a table. '
          title: LineItems
      title: LineItemGroup
      type: object
    ValueType:
      enum:
      - DATE
      title: ValueType
      type: string
    SNSTopicArn:
      maxLength: 1024
      minLength: 20
      pattern: "(^arn:([a-z\\d-]+):sns:[a-zA-Z\\d-]{1,20}:\\w{12}:.+$)"
      type: string
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:([a-z\\d-]+):iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+"
      type: string
    NotificationChannel:
      description: 'The Amazon Simple Notification Service (Amazon SNS) topic to which
        Amazon Textract publishes the completion status of an asynchronous document
        operation. '
      example:
        SNSTopicArn: ""
        RoleArn: ""
      properties:
        SNSTopicArn:
          allOf:
          - $ref: '#/components/schemas/SNSTopicArn'
          - description: The Amazon SNS topic that Amazon Textract posts the completion
              status to.
          title: SNSTopicArn
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: 'The Amazon Resource Name (ARN) of an IAM role that gives
              Amazon Textract publishing permissions to the Amazon SNS topic. '
          title: RoleArn
      required:
      - RoleArn
      - SNSTopicArn
      title: NotificationChannel
      type: object
    S3Bucket:
      maxLength: 255
      minLength: 3
      pattern: "[0-9A-Za-z\\.\\-_]*"
      type: string
    S3ObjectName:
      maxLength: 1024
      minLength: 1
      pattern: .*\S.*
      type: string
    OutputConfig:
      description: "<p>Sets whether or not your output will go to a user created bucket.\
        \ Used to set the name of the bucket, and the prefix on the output file.</p>\
        \ <p> <code>OutputConfig</code> is an optional parameter which lets you adjust\
        \ where your output will be placed. By default, Amazon Textract will store\
        \ the results internally and can only be accessed by the Get API operations.\
        \ With <code>OutputConfig</code> enabled, you can set the name of the bucket\
        \ the output will be sent to the file prefix of the results where you can\
        \ download your results. Additionally, you can set the <code>KMSKeyID</code>\
        \ parameter to a customer master key (CMK) to encrypt your output. Without\
        \ this parameter set Amazon Textract will encrypt server-side using the AWS\
        \ managed CMK for Amazon S3.</p> <p>Decryption of Customer Content is necessary\
        \ for processing of the documents by Amazon Textract. If your account is opted\
        \ out under an AI services opt out policy then all unencrypted Customer Content\
        \ is immediately and permanently deleted after the Customer Content has been\
        \ processed by the service. No copy of of the output is retained by Amazon\
        \ Textract. For information about how to opt out, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html\"\
        > Managing AI services opt-out policy. </a> </p> <p>For more information on\
        \ data privacy, see the <a href=\"https://aws.amazon.com/compliance/data-privacy-faq/\"\
        >Data Privacy FAQ</a>.</p>"
      example:
        S3Bucket: ""
        S3Prefix: ""
      properties:
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The name of the bucket your output will go to.
          title: S3Bucket
        S3Prefix:
          allOf:
          - $ref: '#/components/schemas/S3ObjectName'
          - description: "The prefix of the object key that the output will be saved\
              \ to. When not enabled, the prefix will be “textract_output\"."
          title: S3Prefix
      required:
      - S3Bucket
      title: OutputConfig
      type: object
    PredictionList:
      items:
        $ref: '#/components/schemas/Prediction'
      type: array
    PageList:
      items:
        $ref: '#/components/schemas/UInteger'
      type: array
    Pages:
      items:
        $ref: '#/components/schemas/UInteger'
      type: array
    Point:
      description: "<p>The X and Y coordinates of a point on a document page. The\
        \ X and Y values that are returned are ratios of the overall document page\
        \ size. For example, if the input document is 700 x 200 and the operation\
        \ returns X=0.5 and Y=0.25, then the point is at the (350,50) pixel coordinate\
        \ on the document page.</p> <p>An array of <code>Point</code> objects, <code>Polygon</code>,\
        \ is returned by <a>DetectDocumentText</a>. <code>Polygon</code> represents\
        \ a fine-grained polygon around detected text. For more information, see Geometry\
        \ in the Amazon Textract Developer Guide. </p>"
      properties:
        X:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: The value of the X coordinate for a point on a <code>Polygon</code>.
          title: X
        "Y":
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: The value of the Y coordinate for a point on a <code>Polygon</code>.
          title: "Y"
      title: Point
      type: object
    Prediction:
      description: "Contains information regarding predicted values returned by Amazon\
        \ Textract operations, including the predicted value and the confidence in\
        \ the predicted value."
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The predicted value of a detected object.
          title: Value
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Percent'
          - description: Amazon Textract's confidence in its predicted value.
          title: Confidence
      title: Prediction
      type: object
    Queries:
      items:
        $ref: '#/components/schemas/Query'
      minItems: 1
      type: array
    QueryInput:
      maxLength: 200
      minLength: 1
      pattern: "^[a-zA-Z0-9\\s!\"\\#\\$%'&\\(\\)\\*\\+\\,\\-\\./:;=\\?@\\[\\\\\\]\\\
        ^_`\\{\\|\\}~><]+$"
      type: string
    QueryPages:
      items:
        $ref: '#/components/schemas/QueryPage'
      minItems: 1
      type: array
    QueryPage:
      maxLength: 9
      minLength: 1
      pattern: "^[0-9\\*\\-]+$"
      title: QueryPage
      type: string
    RelationshipType:
      enum:
      - VALUE
      - CHILD
      - COMPLEX_FEATURES
      - MERGED_CELL
      - TITLE
      - ANSWER
      - TABLE
      - TABLE_TITLE
      - TABLE_FOOTER
      title: RelationshipType
      type: string
    Relationship:
      description: "<p>Information about how blocks are related to each other. A <code>Block</code>\
        \ object contains 0 or more <code>Relation</code> objects in a list, <code>Relationships</code>.\
        \ For more information, see <a>Block</a>.</p> <p>The <code>Type</code> element\
        \ provides the type of the relationship for all blocks in the <code>IDs</code>\
        \ array. </p>"
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/RelationshipType'
          - description: "<p>The type of relationship between the blocks in the IDs\
              \ array and the current block. The following list describes the relationship\
              \ types that can be returned. </p> <ul> <li> <p> <i>VALUE</i> - A list\
              \ that contains the ID of the VALUE block that's associated with the\
              \ KEY of a key-value pair.</p> </li> <li> <p> <i>CHILD</i> - A list\
              \ of IDs that identify blocks found within the current block object.\
              \ For example, WORD blocks have a CHILD relationship to the LINE block\
              \ type.</p> </li> <li> <p> <i>MERGED_CELL</i> - A list of IDs that identify\
              \ each of the MERGED_CELL block types in a table.</p> </li> <li> <p>\
              \ <i>ANSWER</i> - A list that contains the ID of the QUERY_RESULT block\
              \ that’s associated with the corresponding QUERY block. </p> </li> <li>\
              \ <p> <i>TABLE</i> - A list of IDs that identify associated TABLE block\
              \ types. </p> </li> <li> <p> <i>TABLE_TITLE</i> - A list that contains\
              \ the ID for the TABLE_TITLE block type in a table. </p> </li> <li>\
              \ <p> <i>TABLE_FOOTER</i> - A list of IDs that identify the TABLE_FOOTER\
              \ block types in a table. </p> </li> </ul>"
          title: Type
        Ids:
          allOf:
          - $ref: '#/components/schemas/IdList'
          - description: An array of IDs for related blocks. You can get the type
              of the relationship from the <code>Type</code> element.
          title: Ids
      title: Relationship
      type: object
    S3ObjectVersion:
      maxLength: 1024
      minLength: 1
      pattern: .*\S.*
      type: string
    SignatureDetection:
      description: Information regarding a detected signature on a page.
      properties:
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Percent'
          - description: "The confidence, from 0 to 100, in the predicted values for\
              \ a detected signature."
          title: Confidence
        Geometry:
          $ref: '#/components/schemas/Geometry'
      title: SignatureDetection
      type: object
    SplitDocument:
      description: "Contains information about the pages of a document, defined by\
        \ logical boundary."
      properties:
        Index:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: The index for a given document in a DocumentGroup of a specific
              Type.
          title: Index
        Pages:
          allOf:
          - $ref: '#/components/schemas/PageList'
          - description: "An array of page numbers for a for a given document, ordered\
              \ by logical boundary."
          title: Pages
      title: SplitDocument
      type: object
    UndetectedSignature:
      description: A structure containing information about an undetected signature
        on a page where it was expected but not found.
      properties:
        Page:
          allOf:
          - $ref: '#/components/schemas/UInteger'
          - description: The page where a signature was expected but not found.
          title: Page
      title: UndetectedSignature
      type: object
    Warning:
      description: 'A warning about an issue that occurred during asynchronous text
        analysis (<a>StartDocumentAnalysis</a>) or asynchronous document text detection
        (<a>StartDocumentTextDetection</a>). '
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code for the warning.
          title: ErrorCode
        Pages:
          allOf:
          - $ref: '#/components/schemas/Pages'
          - description: A list of the pages that the warning applies to.
          title: Pages
      title: Warning
      type: object
    AnalyzeDocumentResponse_DocumentMetadata:
      allOf:
      - $ref: '#/components/schemas/DocumentMetadata'
      - description: Metadata about the analyzed document. An example is the number
          of pages.
      example:
        Pages: ""
      title: AnalyzeDocumentResponse_DocumentMetadata
    AnalyzeDocumentResponse_HumanLoopActivationOutput:
      allOf:
      - $ref: '#/components/schemas/HumanLoopActivationOutput'
      - description: Shows the results of the human in the loop evaluation.
      example:
        HumanLoopActivationReasons: ""
        HumanLoopActivationConditionsEvaluationResults: ""
        HumanLoopArn: ""
      title: AnalyzeDocumentResponse_HumanLoopActivationOutput
    AnalyzeDocumentRequest_Document:
      allOf:
      - $ref: '#/components/schemas/Document'
      - description: "<p>The input document as base64-encoded bytes or an Amazon S3\
          \ object. If you use the AWS CLI to call Amazon Textract operations, you\
          \ can't pass image bytes. The document must be an image in JPEG, PNG, PDF,\
          \ or TIFF format.</p> <p>If you're using an AWS SDK to call Amazon Textract,\
          \ you might not need to base64-encode image bytes that are passed using\
          \ the <code>Bytes</code> field. </p>"
      example:
        Bytes: ""
        S3Object:
          Bucket: ""
          Version: ""
          Name: ""
      title: AnalyzeDocumentRequest_Document
    AnalyzeDocumentRequest_HumanLoopConfig:
      allOf:
      - $ref: '#/components/schemas/HumanLoopConfig'
      - description: Sets the configuration for the human in the loop workflow for
          analyzing documents.
      example:
        HumanLoopName: ""
        FlowDefinitionArn: ""
        DataAttributes:
          ContentClassifiers: ""
      title: AnalyzeDocumentRequest_HumanLoopConfig
    AnalyzeDocumentRequest_QueriesConfig:
      allOf:
      - $ref: '#/components/schemas/QueriesConfig'
      - description: "Contains Queries and the alias for those Queries, as determined\
          \ by the input. "
      example:
        Queries: ""
      title: AnalyzeDocumentRequest_QueriesConfig
    DetectDocumentTextResponse_DocumentMetadata:
      allOf:
      - $ref: '#/components/schemas/DocumentMetadata'
      - description: Metadata about the document. It contains the number of pages
          that are detected in the document.
      example:
        Pages: ""
      title: DetectDocumentTextResponse_DocumentMetadata
    DetectDocumentTextRequest_Document:
      allOf:
      - $ref: '#/components/schemas/Document'
      - description: "<p>The input document as base64-encoded bytes or an Amazon S3\
          \ object. If you use the AWS CLI to call Amazon Textract operations, you\
          \ can't pass image bytes. The document must be an image in JPEG or PNG format.</p>\
          \ <p>If you're using an AWS SDK to call Amazon Textract, you might not need\
          \ to base64-encode image bytes that are passed using the <code>Bytes</code>\
          \ field. </p>"
      example:
        Bytes: ""
        S3Object:
          Bucket: ""
          Version: ""
          Name: ""
      title: DetectDocumentTextRequest_Document
    GetDocumentAnalysisResponse_DocumentMetadata:
      allOf:
      - $ref: '#/components/schemas/DocumentMetadata'
      - description: Information about a document that Amazon Textract processed.
          <code>DocumentMetadata</code> is returned in every page of paginated responses
          from an Amazon Textract video operation.
      example:
        Pages: ""
      title: GetDocumentAnalysisResponse_DocumentMetadata
    GetExpenseAnalysisResponse_DocumentMetadata:
      allOf:
      - $ref: '#/components/schemas/DocumentMetadata'
      - description: Information about a document that Amazon Textract processed.
          <code>DocumentMetadata</code> is returned in every page of paginated responses
          from an Amazon Textract operation.
      example:
        Pages: ""
      title: GetExpenseAnalysisResponse_DocumentMetadata
    GetLendingAnalysisSummaryResponse_Summary:
      allOf:
      - $ref: '#/components/schemas/LendingSummary'
      - description: ' Contains summary information for documents grouped by type.'
      example:
        DocumentGroups: ""
        UndetectedDocumentTypes: ""
      title: GetLendingAnalysisSummaryResponse_Summary
    StartDocumentAnalysisRequest_DocumentLocation:
      allOf:
      - $ref: '#/components/schemas/DocumentLocation'
      - description: The location of the document to be processed.
      example:
        S3Object:
          Bucket: ""
          Version: ""
          Name: ""
      title: StartDocumentAnalysisRequest_DocumentLocation
    StartDocumentAnalysisRequest_NotificationChannel:
      allOf:
      - $ref: '#/components/schemas/NotificationChannel'
      - description: 'The Amazon SNS topic ARN that you want Amazon Textract to publish
          the completion status of the operation to. '
      example:
        SNSTopicArn: ""
        RoleArn: ""
      title: StartDocumentAnalysisRequest_NotificationChannel
    StartDocumentAnalysisRequest_OutputConfig:
      allOf:
      - $ref: '#/components/schemas/OutputConfig'
      - description: "Sets if the output will go to a customer defined bucket. By\
          \ default, Amazon Textract will save the results internally to be accessed\
          \ by the GetDocumentAnalysis operation."
      example:
        S3Bucket: ""
        S3Prefix: ""
      title: StartDocumentAnalysisRequest_OutputConfig
    StartDocumentTextDetectionRequest_OutputConfig:
      allOf:
      - $ref: '#/components/schemas/OutputConfig'
      - description: Sets if the output will go to a customer defined bucket. By default
          Amazon Textract will save the results internally to be accessed with the
          GetDocumentTextDetection operation.
      example:
        S3Bucket: ""
        S3Prefix: ""
      title: StartDocumentTextDetectionRequest_OutputConfig
    StartExpenseAnalysisRequest_OutputConfig:
      allOf:
      - $ref: '#/components/schemas/OutputConfig'
      - description: "Sets if the output will go to a customer defined bucket. By\
          \ default, Amazon Textract will save the results internally to be accessed\
          \ by the <code>GetExpenseAnalysis</code> operation."
      example:
        S3Bucket: ""
        S3Prefix: ""
      title: StartExpenseAnalysisRequest_OutputConfig
    Document_S3Object:
      allOf:
      - $ref: '#/components/schemas/S3Object'
      - description: Identifies an S3 object as the document source. The maximum size
          of a document that's stored in an S3 bucket is 5 MB.
      example:
        Bucket: ""
        Version: ""
        Name: ""
      title: Document_S3Object
    HumanLoopConfig_DataAttributes:
      allOf:
      - $ref: '#/components/schemas/HumanLoopDataAttributes'
      - description: Sets attributes of the input data.
      example:
        ContentClassifiers: ""
      title: HumanLoopConfig_DataAttributes
    AnalyzeIDDetections_NormalizedValue:
      allOf:
      - $ref: '#/components/schemas/NormalizedValue'
      - description: "Only returned for dates, returns the type of value detected\
          \ and the date written in a more machine readable way."
      title: AnalyzeIDDetections_NormalizedValue
    Geometry_BoundingBox:
      allOf:
      - $ref: '#/components/schemas/BoundingBox'
      - description: An axis-aligned coarse representation of the location of the
          recognized item on the document page.
      title: Geometry_BoundingBox
    Block_Geometry:
      allOf:
      - $ref: '#/components/schemas/Geometry'
      - description: "The location of the recognized text on the image. It includes\
          \ an axis-aligned, coarse bounding box that surrounds the text, and a finer-grain\
          \ polygon for more accurate spatial information. "
      title: Block_Geometry
    Block_Query:
      allOf:
      - $ref: '#/components/schemas/Query'
      - description: <p/>
      title: Block_Query
    DocumentLocation_S3Object:
      allOf:
      - $ref: '#/components/schemas/S3Object'
      - description: The Amazon S3 bucket that contains the input document.
      example:
        Bucket: ""
        Version: ""
        Name: ""
      title: DocumentLocation_S3Object
    ExpenseField_Type:
      allOf:
      - $ref: '#/components/schemas/ExpenseType'
      - description: The implied label of a detected element. Present alongside LabelDetection
          for explicit elements.
      title: ExpenseField_Type
    ExpenseField_LabelDetection:
      allOf:
      - $ref: '#/components/schemas/ExpenseDetection'
      - description: The explicitly stated label of a detected element.
      title: ExpenseField_LabelDetection
    ExpenseField_ValueDetection:
      allOf:
      - $ref: '#/components/schemas/ExpenseDetection'
      - description: The value of a detected element. Present in explicit and implicit
          elements.
      title: ExpenseField_ValueDetection
    ExpenseField_Currency:
      allOf:
      - $ref: '#/components/schemas/ExpenseCurrency'
      - description: "Shows the kind of currency, both the code and confidence associated\
          \ with any monatary value detected."
      title: ExpenseField_Currency
    Extraction_LendingDocument:
      allOf:
      - $ref: '#/components/schemas/LendingDocument'
      - description: Holds the structured data returned by AnalyzeDocument for lending
          documents.
      title: Extraction_LendingDocument
    LendingResult_PageClassification:
      allOf:
      - $ref: '#/components/schemas/PageClassification'
      - description: The classifier result for a given page.
      title: LendingResult_PageClassification
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
