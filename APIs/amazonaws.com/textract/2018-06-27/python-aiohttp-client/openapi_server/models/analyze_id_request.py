# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnalyzeIDRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_pages: List=None):
        """AnalyzeIDRequest - a model defined in OpenAPI

        :param document_pages: The document_pages of this AnalyzeIDRequest.
        """
        self.openapi_types = {
            'document_pages': List
        }

        self.attribute_map = {
            'document_pages': 'DocumentPages'
        }

        self._document_pages = document_pages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyzeIDRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyzeIDRequest of this AnalyzeIDRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_pages(self):
        """Gets the document_pages of this AnalyzeIDRequest.


        :return: The document_pages of this AnalyzeIDRequest.
        :rtype: List
        """
        return self._document_pages

    @document_pages.setter
    def document_pages(self, document_pages):
        """Sets the document_pages of this AnalyzeIDRequest.


        :param document_pages: The document_pages of this AnalyzeIDRequest.
        :type document_pages: List
        """
        if document_pages is None:
            raise ValueError("Invalid value for `document_pages`, must not be `None`")

        self._document_pages = document_pages
