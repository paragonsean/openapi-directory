# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PageClassification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page_type: List=None, page_number: List=None):
        """PageClassification - a model defined in OpenAPI

        :param page_type: The page_type of this PageClassification.
        :param page_number: The page_number of this PageClassification.
        """
        self.openapi_types = {
            'page_type': List,
            'page_number': List
        }

        self.attribute_map = {
            'page_type': 'PageType',
            'page_number': 'PageNumber'
        }

        self._page_type = page_type
        self._page_number = page_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PageClassification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PageClassification of this PageClassification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page_type(self):
        """Gets the page_type of this PageClassification.


        :return: The page_type of this PageClassification.
        :rtype: List
        """
        return self._page_type

    @page_type.setter
    def page_type(self, page_type):
        """Sets the page_type of this PageClassification.


        :param page_type: The page_type of this PageClassification.
        :type page_type: List
        """
        if page_type is None:
            raise ValueError("Invalid value for `page_type`, must not be `None`")

        self._page_type = page_type

    @property
    def page_number(self):
        """Gets the page_number of this PageClassification.


        :return: The page_number of this PageClassification.
        :rtype: List
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this PageClassification.


        :param page_number: The page_number of this PageClassification.
        :type page_number: List
        """
        if page_number is None:
            raise ValueError("Invalid value for `page_number`, must not be `None`")

        self._page_number = page_number
