# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_s3_object import DocumentS3Object
from openapi_server import util


class AnalyzeDocumentRequestDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bytes: str=None, s3_object: DocumentS3Object=None):
        """AnalyzeDocumentRequestDocument - a model defined in OpenAPI

        :param bytes: The bytes of this AnalyzeDocumentRequestDocument.
        :param s3_object: The s3_object of this AnalyzeDocumentRequestDocument.
        """
        self.openapi_types = {
            'bytes': str,
            's3_object': DocumentS3Object
        }

        self.attribute_map = {
            'bytes': 'Bytes',
            's3_object': 'S3Object'
        }

        self._bytes = bytes
        self._s3_object = s3_object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyzeDocumentRequestDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyzeDocumentRequest_Document of this AnalyzeDocumentRequestDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bytes(self):
        """Gets the bytes of this AnalyzeDocumentRequestDocument.


        :return: The bytes of this AnalyzeDocumentRequestDocument.
        :rtype: str
        """
        return self._bytes

    @bytes.setter
    def bytes(self, bytes):
        """Sets the bytes of this AnalyzeDocumentRequestDocument.


        :param bytes: The bytes of this AnalyzeDocumentRequestDocument.
        :type bytes: str
        """

        self._bytes = bytes

    @property
    def s3_object(self):
        """Gets the s3_object of this AnalyzeDocumentRequestDocument.


        :return: The s3_object of this AnalyzeDocumentRequestDocument.
        :rtype: DocumentS3Object
        """
        return self._s3_object

    @s3_object.setter
    def s3_object(self, s3_object):
        """Sets the s3_object of this AnalyzeDocumentRequestDocument.


        :param s3_object: The s3_object of this AnalyzeDocumentRequestDocument.
        :type s3_object: DocumentS3Object
        """

        self._s3_object = s3_object
