# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.relationship_type import RelationshipType
from openapi_server import util


class Relationship(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: RelationshipType=None, ids: List=None):
        """Relationship - a model defined in OpenAPI

        :param type: The type of this Relationship.
        :param ids: The ids of this Relationship.
        """
        self.openapi_types = {
            'type': RelationshipType,
            'ids': List
        }

        self.attribute_map = {
            'type': 'Type',
            'ids': 'Ids'
        }

        self._type = type
        self._ids = ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Relationship':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Relationship of this Relationship.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this Relationship.


        :return: The type of this Relationship.
        :rtype: RelationshipType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Relationship.


        :param type: The type of this Relationship.
        :type type: RelationshipType
        """

        self._type = type

    @property
    def ids(self):
        """Gets the ids of this Relationship.


        :return: The ids of this Relationship.
        :rtype: List
        """
        return self._ids

    @ids.setter
    def ids(self, ids):
        """Sets the ids of this Relationship.


        :param ids: The ids of this Relationship.
        :type ids: List
        """

        self._ids = ids
