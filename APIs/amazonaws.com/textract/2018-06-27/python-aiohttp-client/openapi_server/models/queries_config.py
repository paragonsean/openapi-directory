# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueriesConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queries: List=None):
        """QueriesConfig - a model defined in OpenAPI

        :param queries: The queries of this QueriesConfig.
        """
        self.openapi_types = {
            'queries': List
        }

        self.attribute_map = {
            'queries': 'Queries'
        }

        self._queries = queries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueriesConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueriesConfig of this QueriesConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queries(self):
        """Gets the queries of this QueriesConfig.


        :return: The queries of this QueriesConfig.
        :rtype: List
        """
        return self._queries

    @queries.setter
    def queries(self, queries):
        """Sets the queries of this QueriesConfig.


        :param queries: The queries of this QueriesConfig.
        :type queries: List
        """
        if queries is None:
            raise ValueError("Invalid value for `queries`, must not be `None`")

        self._queries = queries
