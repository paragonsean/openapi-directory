# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.queries_config import QueriesConfig
from openapi_server.models.start_document_analysis_request_document_location import StartDocumentAnalysisRequestDocumentLocation
from openapi_server.models.start_document_analysis_request_notification_channel import StartDocumentAnalysisRequestNotificationChannel
from openapi_server.models.start_document_analysis_request_output_config import StartDocumentAnalysisRequestOutputConfig
from openapi_server import util


class StartDocumentAnalysisRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document_location: StartDocumentAnalysisRequestDocumentLocation=None, feature_types: List=None, client_request_token: str=None, job_tag: str=None, notification_channel: StartDocumentAnalysisRequestNotificationChannel=None, output_config: StartDocumentAnalysisRequestOutputConfig=None, kms_key_id: str=None, queries_config: QueriesConfig=None):
        """StartDocumentAnalysisRequest - a model defined in OpenAPI

        :param document_location: The document_location of this StartDocumentAnalysisRequest.
        :param feature_types: The feature_types of this StartDocumentAnalysisRequest.
        :param client_request_token: The client_request_token of this StartDocumentAnalysisRequest.
        :param job_tag: The job_tag of this StartDocumentAnalysisRequest.
        :param notification_channel: The notification_channel of this StartDocumentAnalysisRequest.
        :param output_config: The output_config of this StartDocumentAnalysisRequest.
        :param kms_key_id: The kms_key_id of this StartDocumentAnalysisRequest.
        :param queries_config: The queries_config of this StartDocumentAnalysisRequest.
        """
        self.openapi_types = {
            'document_location': StartDocumentAnalysisRequestDocumentLocation,
            'feature_types': List,
            'client_request_token': str,
            'job_tag': str,
            'notification_channel': StartDocumentAnalysisRequestNotificationChannel,
            'output_config': StartDocumentAnalysisRequestOutputConfig,
            'kms_key_id': str,
            'queries_config': QueriesConfig
        }

        self.attribute_map = {
            'document_location': 'DocumentLocation',
            'feature_types': 'FeatureTypes',
            'client_request_token': 'ClientRequestToken',
            'job_tag': 'JobTag',
            'notification_channel': 'NotificationChannel',
            'output_config': 'OutputConfig',
            'kms_key_id': 'KMSKeyId',
            'queries_config': 'QueriesConfig'
        }

        self._document_location = document_location
        self._feature_types = feature_types
        self._client_request_token = client_request_token
        self._job_tag = job_tag
        self._notification_channel = notification_channel
        self._output_config = output_config
        self._kms_key_id = kms_key_id
        self._queries_config = queries_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartDocumentAnalysisRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartDocumentAnalysisRequest of this StartDocumentAnalysisRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_location(self):
        """Gets the document_location of this StartDocumentAnalysisRequest.


        :return: The document_location of this StartDocumentAnalysisRequest.
        :rtype: StartDocumentAnalysisRequestDocumentLocation
        """
        return self._document_location

    @document_location.setter
    def document_location(self, document_location):
        """Sets the document_location of this StartDocumentAnalysisRequest.


        :param document_location: The document_location of this StartDocumentAnalysisRequest.
        :type document_location: StartDocumentAnalysisRequestDocumentLocation
        """
        if document_location is None:
            raise ValueError("Invalid value for `document_location`, must not be `None`")

        self._document_location = document_location

    @property
    def feature_types(self):
        """Gets the feature_types of this StartDocumentAnalysisRequest.


        :return: The feature_types of this StartDocumentAnalysisRequest.
        :rtype: List
        """
        return self._feature_types

    @feature_types.setter
    def feature_types(self, feature_types):
        """Sets the feature_types of this StartDocumentAnalysisRequest.


        :param feature_types: The feature_types of this StartDocumentAnalysisRequest.
        :type feature_types: List
        """
        if feature_types is None:
            raise ValueError("Invalid value for `feature_types`, must not be `None`")

        self._feature_types = feature_types

    @property
    def client_request_token(self):
        """Gets the client_request_token of this StartDocumentAnalysisRequest.


        :return: The client_request_token of this StartDocumentAnalysisRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this StartDocumentAnalysisRequest.


        :param client_request_token: The client_request_token of this StartDocumentAnalysisRequest.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def job_tag(self):
        """Gets the job_tag of this StartDocumentAnalysisRequest.


        :return: The job_tag of this StartDocumentAnalysisRequest.
        :rtype: str
        """
        return self._job_tag

    @job_tag.setter
    def job_tag(self, job_tag):
        """Sets the job_tag of this StartDocumentAnalysisRequest.


        :param job_tag: The job_tag of this StartDocumentAnalysisRequest.
        :type job_tag: str
        """

        self._job_tag = job_tag

    @property
    def notification_channel(self):
        """Gets the notification_channel of this StartDocumentAnalysisRequest.


        :return: The notification_channel of this StartDocumentAnalysisRequest.
        :rtype: StartDocumentAnalysisRequestNotificationChannel
        """
        return self._notification_channel

    @notification_channel.setter
    def notification_channel(self, notification_channel):
        """Sets the notification_channel of this StartDocumentAnalysisRequest.


        :param notification_channel: The notification_channel of this StartDocumentAnalysisRequest.
        :type notification_channel: StartDocumentAnalysisRequestNotificationChannel
        """

        self._notification_channel = notification_channel

    @property
    def output_config(self):
        """Gets the output_config of this StartDocumentAnalysisRequest.


        :return: The output_config of this StartDocumentAnalysisRequest.
        :rtype: StartDocumentAnalysisRequestOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this StartDocumentAnalysisRequest.


        :param output_config: The output_config of this StartDocumentAnalysisRequest.
        :type output_config: StartDocumentAnalysisRequestOutputConfig
        """

        self._output_config = output_config

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this StartDocumentAnalysisRequest.


        :return: The kms_key_id of this StartDocumentAnalysisRequest.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this StartDocumentAnalysisRequest.


        :param kms_key_id: The kms_key_id of this StartDocumentAnalysisRequest.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def queries_config(self):
        """Gets the queries_config of this StartDocumentAnalysisRequest.


        :return: The queries_config of this StartDocumentAnalysisRequest.
        :rtype: QueriesConfig
        """
        return self._queries_config

    @queries_config.setter
    def queries_config(self, queries_config):
        """Sets the queries_config of this StartDocumentAnalysisRequest.


        :param queries_config: The queries_config of this StartDocumentAnalysisRequest.
        :type queries_config: QueriesConfig
        """

        self._queries_config = queries_config
