# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lending_detection import LendingDetection
from openapi_server import util


class LendingField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, key_detection: LendingDetection=None, value_detections: List=None):
        """LendingField - a model defined in OpenAPI

        :param type: The type of this LendingField.
        :param key_detection: The key_detection of this LendingField.
        :param value_detections: The value_detections of this LendingField.
        """
        self.openapi_types = {
            'type': str,
            'key_detection': LendingDetection,
            'value_detections': List
        }

        self.attribute_map = {
            'type': 'Type',
            'key_detection': 'KeyDetection',
            'value_detections': 'ValueDetections'
        }

        self._type = type
        self._key_detection = key_detection
        self._value_detections = value_detections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LendingField':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LendingField of this LendingField.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this LendingField.


        :return: The type of this LendingField.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this LendingField.


        :param type: The type of this LendingField.
        :type type: str
        """

        self._type = type

    @property
    def key_detection(self):
        """Gets the key_detection of this LendingField.


        :return: The key_detection of this LendingField.
        :rtype: LendingDetection
        """
        return self._key_detection

    @key_detection.setter
    def key_detection(self, key_detection):
        """Sets the key_detection of this LendingField.


        :param key_detection: The key_detection of this LendingField.
        :type key_detection: LendingDetection
        """

        self._key_detection = key_detection

    @property
    def value_detections(self):
        """Gets the value_detections of this LendingField.


        :return: The value_detections of this LendingField.
        :rtype: List
        """
        return self._value_detections

    @value_detections.setter
    def value_detections(self, value_detections):
        """Sets the value_detections of this LendingField.


        :param value_detections: The value_detections of this LendingField.
        :type value_detections: List
        """

        self._value_detections = value_detections
