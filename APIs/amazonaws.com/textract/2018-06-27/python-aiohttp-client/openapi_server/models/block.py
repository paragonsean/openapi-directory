# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.block_geometry import BlockGeometry
from openapi_server.models.block_query import BlockQuery
from openapi_server.models.block_type import BlockType
from openapi_server.models.selection_status import SelectionStatus
from openapi_server.models.text_type import TextType
from openapi_server import util


class Block(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, block_type: BlockType=None, confidence: float=None, text: str=None, text_type: TextType=None, row_index: int=None, column_index: int=None, row_span: int=None, column_span: int=None, geometry: BlockGeometry=None, id: str=None, relationships: List=None, entity_types: List=None, selection_status: SelectionStatus=None, page: int=None, query: BlockQuery=None):
        """Block - a model defined in OpenAPI

        :param block_type: The block_type of this Block.
        :param confidence: The confidence of this Block.
        :param text: The text of this Block.
        :param text_type: The text_type of this Block.
        :param row_index: The row_index of this Block.
        :param column_index: The column_index of this Block.
        :param row_span: The row_span of this Block.
        :param column_span: The column_span of this Block.
        :param geometry: The geometry of this Block.
        :param id: The id of this Block.
        :param relationships: The relationships of this Block.
        :param entity_types: The entity_types of this Block.
        :param selection_status: The selection_status of this Block.
        :param page: The page of this Block.
        :param query: The query of this Block.
        """
        self.openapi_types = {
            'block_type': BlockType,
            'confidence': float,
            'text': str,
            'text_type': TextType,
            'row_index': int,
            'column_index': int,
            'row_span': int,
            'column_span': int,
            'geometry': BlockGeometry,
            'id': str,
            'relationships': List,
            'entity_types': List,
            'selection_status': SelectionStatus,
            'page': int,
            'query': BlockQuery
        }

        self.attribute_map = {
            'block_type': 'BlockType',
            'confidence': 'Confidence',
            'text': 'Text',
            'text_type': 'TextType',
            'row_index': 'RowIndex',
            'column_index': 'ColumnIndex',
            'row_span': 'RowSpan',
            'column_span': 'ColumnSpan',
            'geometry': 'Geometry',
            'id': 'Id',
            'relationships': 'Relationships',
            'entity_types': 'EntityTypes',
            'selection_status': 'SelectionStatus',
            'page': 'Page',
            'query': 'Query'
        }

        self._block_type = block_type
        self._confidence = confidence
        self._text = text
        self._text_type = text_type
        self._row_index = row_index
        self._column_index = column_index
        self._row_span = row_span
        self._column_span = column_span
        self._geometry = geometry
        self._id = id
        self._relationships = relationships
        self._entity_types = entity_types
        self._selection_status = selection_status
        self._page = page
        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Block':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Block of this Block.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def block_type(self):
        """Gets the block_type of this Block.


        :return: The block_type of this Block.
        :rtype: BlockType
        """
        return self._block_type

    @block_type.setter
    def block_type(self, block_type):
        """Sets the block_type of this Block.


        :param block_type: The block_type of this Block.
        :type block_type: BlockType
        """

        self._block_type = block_type

    @property
    def confidence(self):
        """Gets the confidence of this Block.


        :return: The confidence of this Block.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this Block.


        :param confidence: The confidence of this Block.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def text(self):
        """Gets the text of this Block.


        :return: The text of this Block.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Block.


        :param text: The text of this Block.
        :type text: str
        """

        self._text = text

    @property
    def text_type(self):
        """Gets the text_type of this Block.


        :return: The text_type of this Block.
        :rtype: TextType
        """
        return self._text_type

    @text_type.setter
    def text_type(self, text_type):
        """Sets the text_type of this Block.


        :param text_type: The text_type of this Block.
        :type text_type: TextType
        """

        self._text_type = text_type

    @property
    def row_index(self):
        """Gets the row_index of this Block.


        :return: The row_index of this Block.
        :rtype: int
        """
        return self._row_index

    @row_index.setter
    def row_index(self, row_index):
        """Sets the row_index of this Block.


        :param row_index: The row_index of this Block.
        :type row_index: int
        """

        self._row_index = row_index

    @property
    def column_index(self):
        """Gets the column_index of this Block.


        :return: The column_index of this Block.
        :rtype: int
        """
        return self._column_index

    @column_index.setter
    def column_index(self, column_index):
        """Sets the column_index of this Block.


        :param column_index: The column_index of this Block.
        :type column_index: int
        """

        self._column_index = column_index

    @property
    def row_span(self):
        """Gets the row_span of this Block.


        :return: The row_span of this Block.
        :rtype: int
        """
        return self._row_span

    @row_span.setter
    def row_span(self, row_span):
        """Sets the row_span of this Block.


        :param row_span: The row_span of this Block.
        :type row_span: int
        """

        self._row_span = row_span

    @property
    def column_span(self):
        """Gets the column_span of this Block.


        :return: The column_span of this Block.
        :rtype: int
        """
        return self._column_span

    @column_span.setter
    def column_span(self, column_span):
        """Sets the column_span of this Block.


        :param column_span: The column_span of this Block.
        :type column_span: int
        """

        self._column_span = column_span

    @property
    def geometry(self):
        """Gets the geometry of this Block.


        :return: The geometry of this Block.
        :rtype: BlockGeometry
        """
        return self._geometry

    @geometry.setter
    def geometry(self, geometry):
        """Sets the geometry of this Block.


        :param geometry: The geometry of this Block.
        :type geometry: BlockGeometry
        """

        self._geometry = geometry

    @property
    def id(self):
        """Gets the id of this Block.


        :return: The id of this Block.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Block.


        :param id: The id of this Block.
        :type id: str
        """

        self._id = id

    @property
    def relationships(self):
        """Gets the relationships of this Block.


        :return: The relationships of this Block.
        :rtype: List
        """
        return self._relationships

    @relationships.setter
    def relationships(self, relationships):
        """Sets the relationships of this Block.


        :param relationships: The relationships of this Block.
        :type relationships: List
        """

        self._relationships = relationships

    @property
    def entity_types(self):
        """Gets the entity_types of this Block.


        :return: The entity_types of this Block.
        :rtype: List
        """
        return self._entity_types

    @entity_types.setter
    def entity_types(self, entity_types):
        """Sets the entity_types of this Block.


        :param entity_types: The entity_types of this Block.
        :type entity_types: List
        """

        self._entity_types = entity_types

    @property
    def selection_status(self):
        """Gets the selection_status of this Block.


        :return: The selection_status of this Block.
        :rtype: SelectionStatus
        """
        return self._selection_status

    @selection_status.setter
    def selection_status(self, selection_status):
        """Sets the selection_status of this Block.


        :param selection_status: The selection_status of this Block.
        :type selection_status: SelectionStatus
        """

        self._selection_status = selection_status

    @property
    def page(self):
        """Gets the page of this Block.


        :return: The page of this Block.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this Block.


        :param page: The page of this Block.
        :type page: int
        """

        self._page = page

    @property
    def query(self):
        """Gets the query of this Block.


        :return: The query of this Block.
        :rtype: BlockQuery
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this Block.


        :param query: The query of this Block.
        :type query: BlockQuery
        """

        self._query = query
