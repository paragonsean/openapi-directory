# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EntityType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    KEY = 'KEY'
    VALUE = 'VALUE'
    COLUMN_HEADER = 'COLUMN_HEADER'
    TABLE_TITLE = 'TABLE_TITLE'
    TABLE_FOOTER = 'TABLE_FOOTER'
    TABLE_SECTION_TITLE = 'TABLE_SECTION_TITLE'
    TABLE_SUMMARY = 'TABLE_SUMMARY'
    STRUCTURED_TABLE = 'STRUCTURED_TABLE'
    SEMI_STRUCTURED_TABLE = 'SEMI_STRUCTURED_TABLE'

    def __init__(self):
        """EntityType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntityType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntityType of this EntityType.
        """
        return util.deserialize_model(dikt, cls)
