# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expense_document import ExpenseDocument
from openapi_server.models.extraction_lending_document import ExtractionLendingDocument
from openapi_server.models.identity_document import IdentityDocument
from openapi_server import util


class Extraction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lending_document: ExtractionLendingDocument=None, expense_document: ExpenseDocument=None, identity_document: IdentityDocument=None):
        """Extraction - a model defined in OpenAPI

        :param lending_document: The lending_document of this Extraction.
        :param expense_document: The expense_document of this Extraction.
        :param identity_document: The identity_document of this Extraction.
        """
        self.openapi_types = {
            'lending_document': ExtractionLendingDocument,
            'expense_document': ExpenseDocument,
            'identity_document': IdentityDocument
        }

        self.attribute_map = {
            'lending_document': 'LendingDocument',
            'expense_document': 'ExpenseDocument',
            'identity_document': 'IdentityDocument'
        }

        self._lending_document = lending_document
        self._expense_document = expense_document
        self._identity_document = identity_document

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Extraction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Extraction of this Extraction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lending_document(self):
        """Gets the lending_document of this Extraction.


        :return: The lending_document of this Extraction.
        :rtype: ExtractionLendingDocument
        """
        return self._lending_document

    @lending_document.setter
    def lending_document(self, lending_document):
        """Sets the lending_document of this Extraction.


        :param lending_document: The lending_document of this Extraction.
        :type lending_document: ExtractionLendingDocument
        """

        self._lending_document = lending_document

    @property
    def expense_document(self):
        """Gets the expense_document of this Extraction.


        :return: The expense_document of this Extraction.
        :rtype: ExpenseDocument
        """
        return self._expense_document

    @expense_document.setter
    def expense_document(self, expense_document):
        """Sets the expense_document of this Extraction.


        :param expense_document: The expense_document of this Extraction.
        :type expense_document: ExpenseDocument
        """

        self._expense_document = expense_document

    @property
    def identity_document(self):
        """Gets the identity_document of this Extraction.


        :return: The identity_document of this Extraction.
        :rtype: IdentityDocument
        """
        return self._identity_document

    @identity_document.setter
    def identity_document(self, identity_document):
        """Sets the identity_document of this Extraction.


        :param identity_document: The identity_document of this Extraction.
        :type identity_document: IdentityDocument
        """

        self._identity_document = identity_document
