# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExpenseDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expense_index: int=None, summary_fields: List=None, line_item_groups: List=None, blocks: List=None):
        """ExpenseDocument - a model defined in OpenAPI

        :param expense_index: The expense_index of this ExpenseDocument.
        :param summary_fields: The summary_fields of this ExpenseDocument.
        :param line_item_groups: The line_item_groups of this ExpenseDocument.
        :param blocks: The blocks of this ExpenseDocument.
        """
        self.openapi_types = {
            'expense_index': int,
            'summary_fields': List,
            'line_item_groups': List,
            'blocks': List
        }

        self.attribute_map = {
            'expense_index': 'ExpenseIndex',
            'summary_fields': 'SummaryFields',
            'line_item_groups': 'LineItemGroups',
            'blocks': 'Blocks'
        }

        self._expense_index = expense_index
        self._summary_fields = summary_fields
        self._line_item_groups = line_item_groups
        self._blocks = blocks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExpenseDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExpenseDocument of this ExpenseDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expense_index(self):
        """Gets the expense_index of this ExpenseDocument.


        :return: The expense_index of this ExpenseDocument.
        :rtype: int
        """
        return self._expense_index

    @expense_index.setter
    def expense_index(self, expense_index):
        """Sets the expense_index of this ExpenseDocument.


        :param expense_index: The expense_index of this ExpenseDocument.
        :type expense_index: int
        """

        self._expense_index = expense_index

    @property
    def summary_fields(self):
        """Gets the summary_fields of this ExpenseDocument.


        :return: The summary_fields of this ExpenseDocument.
        :rtype: List
        """
        return self._summary_fields

    @summary_fields.setter
    def summary_fields(self, summary_fields):
        """Sets the summary_fields of this ExpenseDocument.


        :param summary_fields: The summary_fields of this ExpenseDocument.
        :type summary_fields: List
        """

        self._summary_fields = summary_fields

    @property
    def line_item_groups(self):
        """Gets the line_item_groups of this ExpenseDocument.


        :return: The line_item_groups of this ExpenseDocument.
        :rtype: List
        """
        return self._line_item_groups

    @line_item_groups.setter
    def line_item_groups(self, line_item_groups):
        """Sets the line_item_groups of this ExpenseDocument.


        :param line_item_groups: The line_item_groups of this ExpenseDocument.
        :type line_item_groups: List
        """

        self._line_item_groups = line_item_groups

    @property
    def blocks(self):
        """Gets the blocks of this ExpenseDocument.


        :return: The blocks of this ExpenseDocument.
        :rtype: List
        """
        return self._blocks

    @blocks.setter
    def blocks(self, blocks):
        """Sets the blocks of this ExpenseDocument.


        :param blocks: The blocks of this ExpenseDocument.
        :type blocks: List
        """

        self._blocks = blocks
