/*
 * AWS Account
 * Operations for Amazon Web Services Account Management
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeleteAlternateContactRequest;
import org.openapitools.client.model.DisableRegionRequest;
import org.openapitools.client.model.EnableRegionRequest;
import org.openapitools.client.model.GetAlternateContactRequest;
import org.openapitools.client.model.GetAlternateContactResponse;
import org.openapitools.client.model.GetContactInformationRequest;
import org.openapitools.client.model.GetContactInformationResponse;
import org.openapitools.client.model.GetRegionOptStatusRequest;
import org.openapitools.client.model.GetRegionOptStatusResponse;
import org.openapitools.client.model.ListRegionsRequest;
import org.openapitools.client.model.ListRegionsResponse;
import org.openapitools.client.model.PutAlternateContactRequest;
import org.openapitools.client.model.PutContactInformationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Deletes the specified alternate contact from an Amazon Web Services account.&lt;/p&gt; &lt;p&gt;For complete details about how to use the alternate contact operations, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html\&quot;&gt;Access or updating the alternate contacts&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Before you can update the alternate contact information for an Amazon Web Services account that is managed by Organizations, you must first enable integration between Amazon Web Services Account Management and Organizations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/accounts/latest/reference/using-orgs-trusted-access.html\&quot;&gt;Enabling trusted access for Amazon Web Services Account Management&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAlternateContactTest() throws ApiException {
        DeleteAlternateContactRequest deleteAlternateContactRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteAlternateContact(deleteAlternateContactRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Disables (opts-out) a particular Region for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disableRegionTest() throws ApiException {
        DisableRegionRequest disableRegionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.disableRegion(disableRegionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Enables (opts-in) a particular Region for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enableRegionTest() throws ApiException {
        EnableRegionRequest enableRegionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.enableRegion(enableRegionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves the specified alternate contact attached to an Amazon Web Services account.&lt;/p&gt; &lt;p&gt;For complete details about how to use the alternate contact operations, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html\&quot;&gt;Access or updating the alternate contacts&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Before you can update the alternate contact information for an Amazon Web Services account that is managed by Organizations, you must first enable integration between Amazon Web Services Account Management and Organizations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/accounts/latest/reference/using-orgs-trusted-access.html\&quot;&gt;Enabling trusted access for Amazon Web Services Account Management&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlternateContactTest() throws ApiException {
        GetAlternateContactRequest getAlternateContactRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAlternateContactResponse response = api.getAlternateContact(getAlternateContactRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves the primary contact information of an Amazon Web Services account.&lt;/p&gt; &lt;p&gt;For complete details about how to use the primary contact operations, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html\&quot;&gt;Update the primary and alternate contact information&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContactInformationTest() throws ApiException {
        GetContactInformationRequest getContactInformationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetContactInformationResponse response = api.getContactInformation(getContactInformationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves the opt-in status of a particular Region.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegionOptStatusTest() throws ApiException {
        GetRegionOptStatusRequest getRegionOptStatusRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetRegionOptStatusResponse response = api.getRegionOptStatus(getRegionOptStatusRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists all the Regions for a given account and their respective opt-in statuses. Optionally, this list can be filtered by the &lt;code&gt;region-opt-status-contains&lt;/code&gt; parameter. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRegionsTest() throws ApiException {
        ListRegionsRequest listRegionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListRegionsResponse response = api.listRegions(listRegionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Modifies the specified alternate contact attached to an Amazon Web Services account.&lt;/p&gt; &lt;p&gt;For complete details about how to use the alternate contact operations, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html\&quot;&gt;Access or updating the alternate contacts&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Before you can update the alternate contact information for an Amazon Web Services account that is managed by Organizations, you must first enable integration between Amazon Web Services Account Management and Organizations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/accounts/latest/reference/using-orgs-trusted-access.html\&quot;&gt;Enabling trusted access for Amazon Web Services Account Management&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAlternateContactTest() throws ApiException {
        PutAlternateContactRequest putAlternateContactRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putAlternateContact(putAlternateContactRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the primary contact information of an Amazon Web Services account.&lt;/p&gt; &lt;p&gt;For complete details about how to use the primary contact operations, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html\&quot;&gt;Update the primary and alternate contact information&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putContactInformationTest() throws ApiException {
        PutContactInformationRequest putContactInformationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.putContactInformation(putContactInformationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
