# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_alternate_contact_response_alternate_contact import GetAlternateContactResponseAlternateContact
from openapi_server import util


class GetAlternateContactResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alternate_contact: GetAlternateContactResponseAlternateContact=None):
        """GetAlternateContactResponse - a model defined in OpenAPI

        :param alternate_contact: The alternate_contact of this GetAlternateContactResponse.
        """
        self.openapi_types = {
            'alternate_contact': GetAlternateContactResponseAlternateContact
        }

        self.attribute_map = {
            'alternate_contact': 'AlternateContact'
        }

        self._alternate_contact = alternate_contact

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAlternateContactResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAlternateContactResponse of this GetAlternateContactResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alternate_contact(self):
        """Gets the alternate_contact of this GetAlternateContactResponse.


        :return: The alternate_contact of this GetAlternateContactResponse.
        :rtype: GetAlternateContactResponseAlternateContact
        """
        return self._alternate_contact

    @alternate_contact.setter
    def alternate_contact(self, alternate_contact):
        """Sets the alternate_contact of this GetAlternateContactResponse.


        :param alternate_contact: The alternate_contact of this GetAlternateContactResponse.
        :type alternate_contact: GetAlternateContactResponseAlternateContact
        """

        self._alternate_contact = alternate_contact
