# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class GetRegionOptStatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, region_name: str=None):
        """GetRegionOptStatusRequest - a model defined in OpenAPI

        :param account_id: The account_id of this GetRegionOptStatusRequest.
        :param region_name: The region_name of this GetRegionOptStatusRequest.
        """
        self.openapi_types = {
            'account_id': str,
            'region_name': str
        }

        self.attribute_map = {
            'account_id': 'AccountId',
            'region_name': 'RegionName'
        }

        self._account_id = account_id
        self._region_name = region_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetRegionOptStatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetRegionOptStatus_request of this GetRegionOptStatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this GetRegionOptStatusRequest.

        <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. If you don't specify this parameter, it defaults to the Amazon Web Services account of the identity used to call the operation. To use this parameter, the caller must be an identity in the <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account\">organization's management account</a> or a delegated administrator account. The specified account ID must also be a member account in the same organization. The organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html\">all features enabled</a>, and the organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html\">trusted access</a> enabled for the Account Management service, and optionally a <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html\">delegated admin</a> account assigned.</p> <note> <p>The management account can't specify its own <code>AccountId</code>. It must call the operation in standalone context by not including the <code>AccountId</code> parameter.</p> </note> <p>To call this operation on an account that is not a member of an organization, don't specify this parameter. Instead, call the operation using an identity belonging to the account whose contacts you wish to retrieve or modify.</p>

        :return: The account_id of this GetRegionOptStatusRequest.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetRegionOptStatusRequest.

        <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. If you don't specify this parameter, it defaults to the Amazon Web Services account of the identity used to call the operation. To use this parameter, the caller must be an identity in the <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account\">organization's management account</a> or a delegated administrator account. The specified account ID must also be a member account in the same organization. The organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html\">all features enabled</a>, and the organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html\">trusted access</a> enabled for the Account Management service, and optionally a <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html\">delegated admin</a> account assigned.</p> <note> <p>The management account can't specify its own <code>AccountId</code>. It must call the operation in standalone context by not including the <code>AccountId</code> parameter.</p> </note> <p>To call this operation on an account that is not a member of an organization, don't specify this parameter. Instead, call the operation using an identity belonging to the account whose contacts you wish to retrieve or modify.</p>

        :param account_id: The account_id of this GetRegionOptStatusRequest.
        :type account_id: str
        """
        if account_id is not None and not re.search(r'^\d{12}$', account_id):
            raise ValueError("Invalid value for `account_id`, must be a follow pattern or equal to `/^\d{12}$/`")

        self._account_id = account_id

    @property
    def region_name(self):
        """Gets the region_name of this GetRegionOptStatusRequest.

        Specifies the Region-code for a given Region name (for example, <code>af-south-1</code>). This function will return the status of whatever Region you pass into this parameter. 

        :return: The region_name of this GetRegionOptStatusRequest.
        :rtype: str
        """
        return self._region_name

    @region_name.setter
    def region_name(self, region_name):
        """Sets the region_name of this GetRegionOptStatusRequest.

        Specifies the Region-code for a given Region name (for example, <code>af-south-1</code>). This function will return the status of whatever Region you pass into this parameter. 

        :param region_name: The region_name of this GetRegionOptStatusRequest.
        :type region_name: str
        """
        if region_name is None:
            raise ValueError("Invalid value for `region_name`, must not be `None`")
        if region_name is not None and len(region_name) > 50:
            raise ValueError("Invalid value for `region_name`, length must be less than or equal to `50`")
        if region_name is not None and len(region_name) < 1:
            raise ValueError("Invalid value for `region_name`, length must be greater than or equal to `1`")

        self._region_name = region_name
