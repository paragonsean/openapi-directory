# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_contact_information_request_contact_information import PutContactInformationRequestContactInformation
import re
from openapi_server import util


class PutContactInformationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, contact_information: PutContactInformationRequestContactInformation=None):
        """PutContactInformationRequest - a model defined in OpenAPI

        :param account_id: The account_id of this PutContactInformationRequest.
        :param contact_information: The contact_information of this PutContactInformationRequest.
        """
        self.openapi_types = {
            'account_id': str,
            'contact_information': PutContactInformationRequestContactInformation
        }

        self.attribute_map = {
            'account_id': 'AccountId',
            'contact_information': 'ContactInformation'
        }

        self._account_id = account_id
        self._contact_information = contact_information

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutContactInformationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutContactInformation_request of this PutContactInformationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this PutContactInformationRequest.

        <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. If you don't specify this parameter, it defaults to the Amazon Web Services account of the identity used to call the operation. To use this parameter, the caller must be an identity in the <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account\">organization's management account</a> or a delegated administrator account. The specified account ID must also be a member account in the same organization. The organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html\">all features enabled</a>, and the organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html\">trusted access</a> enabled for the Account Management service, and optionally a <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html\">delegated admin</a> account assigned.</p> <note> <p>The management account can't specify its own <code>AccountId</code>. It must call the operation in standalone context by not including the <code>AccountId</code> parameter.</p> </note> <p>To call this operation on an account that is not a member of an organization, don't specify this parameter. Instead, call the operation using an identity belonging to the account whose contacts you wish to retrieve or modify.</p>

        :return: The account_id of this PutContactInformationRequest.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this PutContactInformationRequest.

        <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. If you don't specify this parameter, it defaults to the Amazon Web Services account of the identity used to call the operation. To use this parameter, the caller must be an identity in the <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account\">organization's management account</a> or a delegated administrator account. The specified account ID must also be a member account in the same organization. The organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html\">all features enabled</a>, and the organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html\">trusted access</a> enabled for the Account Management service, and optionally a <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html\">delegated admin</a> account assigned.</p> <note> <p>The management account can't specify its own <code>AccountId</code>. It must call the operation in standalone context by not including the <code>AccountId</code> parameter.</p> </note> <p>To call this operation on an account that is not a member of an organization, don't specify this parameter. Instead, call the operation using an identity belonging to the account whose contacts you wish to retrieve or modify.</p>

        :param account_id: The account_id of this PutContactInformationRequest.
        :type account_id: str
        """
        if account_id is not None and not re.search(r'^\d{12}$', account_id):
            raise ValueError("Invalid value for `account_id`, must be a follow pattern or equal to `/^\d{12}$/`")

        self._account_id = account_id

    @property
    def contact_information(self):
        """Gets the contact_information of this PutContactInformationRequest.


        :return: The contact_information of this PutContactInformationRequest.
        :rtype: PutContactInformationRequestContactInformation
        """
        return self._contact_information

    @contact_information.setter
    def contact_information(self, contact_information):
        """Sets the contact_information of this PutContactInformationRequest.


        :param contact_information: The contact_information of this PutContactInformationRequest.
        :type contact_information: PutContactInformationRequestContactInformation
        """
        if contact_information is None:
            raise ValueError("Invalid value for `contact_information`, must not be `None`")

        self._contact_information = contact_information
