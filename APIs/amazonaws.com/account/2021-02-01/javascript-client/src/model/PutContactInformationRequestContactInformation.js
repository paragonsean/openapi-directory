/**
 * AWS Account
 * Operations for Amazon Web Services Account Management
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutContactInformationRequestContactInformation model module.
 * @module model/PutContactInformationRequestContactInformation
 * @version 2021-02-01
 */
class PutContactInformationRequestContactInformation {
    /**
     * Constructs a new <code>PutContactInformationRequestContactInformation</code>.
     * Contains the details of the primary contact information associated with an Amazon Web Services account.
     * @alias module:model/PutContactInformationRequestContactInformation
     */
    constructor() { 
        
        PutContactInformationRequestContactInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PutContactInformationRequestContactInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutContactInformationRequestContactInformation} obj Optional instance to populate.
     * @return {module:model/PutContactInformationRequestContactInformation} The populated <code>PutContactInformationRequestContactInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutContactInformationRequestContactInformation();

            if (data.hasOwnProperty('AddressLine1')) {
                obj['AddressLine1'] = ApiClient.convertToType(data['AddressLine1'], 'String');
            }
            if (data.hasOwnProperty('AddressLine2')) {
                obj['AddressLine2'] = ApiClient.convertToType(data['AddressLine2'], 'String');
            }
            if (data.hasOwnProperty('AddressLine3')) {
                obj['AddressLine3'] = ApiClient.convertToType(data['AddressLine3'], 'String');
            }
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('CompanyName')) {
                obj['CompanyName'] = ApiClient.convertToType(data['CompanyName'], 'String');
            }
            if (data.hasOwnProperty('CountryCode')) {
                obj['CountryCode'] = ApiClient.convertToType(data['CountryCode'], 'String');
            }
            if (data.hasOwnProperty('DistrictOrCounty')) {
                obj['DistrictOrCounty'] = ApiClient.convertToType(data['DistrictOrCounty'], 'String');
            }
            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
            if (data.hasOwnProperty('PhoneNumber')) {
                obj['PhoneNumber'] = ApiClient.convertToType(data['PhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('PostalCode')) {
                obj['PostalCode'] = ApiClient.convertToType(data['PostalCode'], 'String');
            }
            if (data.hasOwnProperty('StateOrRegion')) {
                obj['StateOrRegion'] = ApiClient.convertToType(data['StateOrRegion'], 'String');
            }
            if (data.hasOwnProperty('WebsiteUrl')) {
                obj['WebsiteUrl'] = ApiClient.convertToType(data['WebsiteUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutContactInformationRequestContactInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutContactInformationRequestContactInformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AddressLine1`
        if (data['AddressLine1']) { // data not null
          String.validateJSON(data['AddressLine1']);
        }
        // validate the optional field `AddressLine2`
        if (data['AddressLine2']) { // data not null
          String.validateJSON(data['AddressLine2']);
        }
        // validate the optional field `AddressLine3`
        if (data['AddressLine3']) { // data not null
          String.validateJSON(data['AddressLine3']);
        }
        // validate the optional field `City`
        if (data['City']) { // data not null
          String.validateJSON(data['City']);
        }
        // validate the optional field `CompanyName`
        if (data['CompanyName']) { // data not null
          String.validateJSON(data['CompanyName']);
        }
        // validate the optional field `CountryCode`
        if (data['CountryCode']) { // data not null
          String.validateJSON(data['CountryCode']);
        }
        // validate the optional field `DistrictOrCounty`
        if (data['DistrictOrCounty']) { // data not null
          String.validateJSON(data['DistrictOrCounty']);
        }
        // validate the optional field `FullName`
        if (data['FullName']) { // data not null
          String.validateJSON(data['FullName']);
        }
        // validate the optional field `PhoneNumber`
        if (data['PhoneNumber']) { // data not null
          String.validateJSON(data['PhoneNumber']);
        }
        // validate the optional field `PostalCode`
        if (data['PostalCode']) { // data not null
          String.validateJSON(data['PostalCode']);
        }
        // validate the optional field `StateOrRegion`
        if (data['StateOrRegion']) { // data not null
          String.validateJSON(data['StateOrRegion']);
        }
        // validate the optional field `WebsiteUrl`
        if (data['WebsiteUrl']) { // data not null
          String.validateJSON(data['WebsiteUrl']);
        }

        return true;
    }


}



/**
 * @member {String} AddressLine1
 */
PutContactInformationRequestContactInformation.prototype['AddressLine1'] = undefined;

/**
 * @member {String} AddressLine2
 */
PutContactInformationRequestContactInformation.prototype['AddressLine2'] = undefined;

/**
 * @member {String} AddressLine3
 */
PutContactInformationRequestContactInformation.prototype['AddressLine3'] = undefined;

/**
 * @member {String} City
 */
PutContactInformationRequestContactInformation.prototype['City'] = undefined;

/**
 * @member {String} CompanyName
 */
PutContactInformationRequestContactInformation.prototype['CompanyName'] = undefined;

/**
 * @member {String} CountryCode
 */
PutContactInformationRequestContactInformation.prototype['CountryCode'] = undefined;

/**
 * @member {String} DistrictOrCounty
 */
PutContactInformationRequestContactInformation.prototype['DistrictOrCounty'] = undefined;

/**
 * @member {String} FullName
 */
PutContactInformationRequestContactInformation.prototype['FullName'] = undefined;

/**
 * @member {String} PhoneNumber
 */
PutContactInformationRequestContactInformation.prototype['PhoneNumber'] = undefined;

/**
 * @member {String} PostalCode
 */
PutContactInformationRequestContactInformation.prototype['PostalCode'] = undefined;

/**
 * @member {String} StateOrRegion
 */
PutContactInformationRequestContactInformation.prototype['StateOrRegion'] = undefined;

/**
 * @member {String} WebsiteUrl
 */
PutContactInformationRequestContactInformation.prototype['WebsiteUrl'] = undefined;






export default PutContactInformationRequestContactInformation;

