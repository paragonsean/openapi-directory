/**
 * AWS Account
 * Operations for Amazon Web Services Account Management
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DisableRegionRequest model module.
 * @module model/DisableRegionRequest
 * @version 2021-02-01
 */
class DisableRegionRequest {
    /**
     * Constructs a new <code>DisableRegionRequest</code>.
     * @alias module:model/DisableRegionRequest
     * @param regionName {String} Specifies the Region-code for a given Region name (for example, <code>af-south-1</code>). When you disable a Region, Amazon Web Services performs actions to deactivate that Region in your account, such as destroying IAM resources in the Region. This process takes a few minutes for most accounts, but this can take several hours. You cannot enable the Region until the disabling process is fully completed.
     */
    constructor(regionName) { 
        
        DisableRegionRequest.initialize(this, regionName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, regionName) { 
        obj['RegionName'] = regionName;
    }

    /**
     * Constructs a <code>DisableRegionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DisableRegionRequest} obj Optional instance to populate.
     * @return {module:model/DisableRegionRequest} The populated <code>DisableRegionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DisableRegionRequest();

            if (data.hasOwnProperty('AccountId')) {
                obj['AccountId'] = ApiClient.convertToType(data['AccountId'], 'String');
            }
            if (data.hasOwnProperty('RegionName')) {
                obj['RegionName'] = ApiClient.convertToType(data['RegionName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DisableRegionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DisableRegionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DisableRegionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['AccountId'] && !(typeof data['AccountId'] === 'string' || data['AccountId'] instanceof String)) {
            throw new Error("Expected the field `AccountId` to be a primitive type in the JSON string but got " + data['AccountId']);
        }
        // ensure the json data is a string
        if (data['RegionName'] && !(typeof data['RegionName'] === 'string' || data['RegionName'] instanceof String)) {
            throw new Error("Expected the field `RegionName` to be a primitive type in the JSON string but got " + data['RegionName']);
        }

        return true;
    }


}

DisableRegionRequest.RequiredProperties = ["RegionName"];

/**
 * <p>Specifies the 12-digit account ID number of the Amazon Web Services account that you want to access or modify with this operation. If you don't specify this parameter, it defaults to the Amazon Web Services account of the identity used to call the operation. To use this parameter, the caller must be an identity in the <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account\">organization's management account</a> or a delegated administrator account. The specified account ID must also be a member account in the same organization. The organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html\">all features enabled</a>, and the organization must have <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html\">trusted access</a> enabled for the Account Management service, and optionally a <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html\">delegated admin</a> account assigned.</p> <note> <p>The management account can't specify its own <code>AccountId</code>. It must call the operation in standalone context by not including the <code>AccountId</code> parameter.</p> </note> <p>To call this operation on an account that is not a member of an organization, don't specify this parameter. Instead, call the operation using an identity belonging to the account whose contacts you wish to retrieve or modify.</p>
 * @member {String} AccountId
 */
DisableRegionRequest.prototype['AccountId'] = undefined;

/**
 * Specifies the Region-code for a given Region name (for example, <code>af-south-1</code>). When you disable a Region, Amazon Web Services performs actions to deactivate that Region in your account, such as destroying IAM resources in the Region. This process takes a few minutes for most accounts, but this can take several hours. You cannot enable the Region until the disabling process is fully completed.
 * @member {String} RegionName
 */
DisableRegionRequest.prototype['RegionName'] = undefined;






export default DisableRegionRequest;

