/**
 * AWS Account
 * Operations for Amazon Web Services Account Management
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactInformation::OAIContactInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactInformation::OAIContactInformation() {
    this->initializeModel();
}

OAIContactInformation::~OAIContactInformation() {}

void OAIContactInformation::initializeModel() {

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_address_line3_isSet = false;
    m_address_line3_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_district_or_county_isSet = false;
    m_district_or_county_isValid = false;

    m_full_name_isSet = false;
    m_full_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_state_or_region_isSet = false;
    m_state_or_region_isValid = false;

    m_website_url_isSet = false;
    m_website_url_isValid = false;
}

void OAIContactInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactInformation::fromJsonObject(QJsonObject json) {

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("AddressLine1")]);
    m_address_line1_isSet = !json[QString("AddressLine1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("AddressLine2")]);
    m_address_line2_isSet = !json[QString("AddressLine2")].isNull() && m_address_line2_isValid;

    m_address_line3_isValid = ::OpenAPI::fromJsonValue(m_address_line3, json[QString("AddressLine3")]);
    m_address_line3_isSet = !json[QString("AddressLine3")].isNull() && m_address_line3_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("City")]);
    m_city_isSet = !json[QString("City")].isNull() && m_city_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("CompanyName")]);
    m_company_name_isSet = !json[QString("CompanyName")].isNull() && m_company_name_isValid;

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("CountryCode")]);
    m_country_code_isSet = !json[QString("CountryCode")].isNull() && m_country_code_isValid;

    m_district_or_county_isValid = ::OpenAPI::fromJsonValue(m_district_or_county, json[QString("DistrictOrCounty")]);
    m_district_or_county_isSet = !json[QString("DistrictOrCounty")].isNull() && m_district_or_county_isValid;

    m_full_name_isValid = ::OpenAPI::fromJsonValue(m_full_name, json[QString("FullName")]);
    m_full_name_isSet = !json[QString("FullName")].isNull() && m_full_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("PostalCode")]);
    m_postal_code_isSet = !json[QString("PostalCode")].isNull() && m_postal_code_isValid;

    m_state_or_region_isValid = ::OpenAPI::fromJsonValue(m_state_or_region, json[QString("StateOrRegion")]);
    m_state_or_region_isSet = !json[QString("StateOrRegion")].isNull() && m_state_or_region_isValid;

    m_website_url_isValid = ::OpenAPI::fromJsonValue(m_website_url, json[QString("WebsiteUrl")]);
    m_website_url_isSet = !json[QString("WebsiteUrl")].isNull() && m_website_url_isValid;
}

QString OAIContactInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_address_line1_isSet) {
        obj.insert(QString("AddressLine1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("AddressLine2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_address_line3_isSet) {
        obj.insert(QString("AddressLine3"), ::OpenAPI::toJsonValue(m_address_line3));
    }
    if (m_city_isSet) {
        obj.insert(QString("City"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("CompanyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_country_code_isSet) {
        obj.insert(QString("CountryCode"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_district_or_county_isSet) {
        obj.insert(QString("DistrictOrCounty"), ::OpenAPI::toJsonValue(m_district_or_county));
    }
    if (m_full_name_isSet) {
        obj.insert(QString("FullName"), ::OpenAPI::toJsonValue(m_full_name));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("PostalCode"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_state_or_region_isSet) {
        obj.insert(QString("StateOrRegion"), ::OpenAPI::toJsonValue(m_state_or_region));
    }
    if (m_website_url_isSet) {
        obj.insert(QString("WebsiteUrl"), ::OpenAPI::toJsonValue(m_website_url));
    }
    return obj;
}

QString OAIContactInformation::getAddressLine1() const {
    return m_address_line1;
}
void OAIContactInformation::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAIContactInformation::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAIContactInformation::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAIContactInformation::getAddressLine2() const {
    return m_address_line2;
}
void OAIContactInformation::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAIContactInformation::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAIContactInformation::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAIContactInformation::getAddressLine3() const {
    return m_address_line3;
}
void OAIContactInformation::setAddressLine3(const QString &address_line3) {
    m_address_line3 = address_line3;
    m_address_line3_isSet = true;
}

bool OAIContactInformation::is_address_line3_Set() const{
    return m_address_line3_isSet;
}

bool OAIContactInformation::is_address_line3_Valid() const{
    return m_address_line3_isValid;
}

QString OAIContactInformation::getCity() const {
    return m_city;
}
void OAIContactInformation::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIContactInformation::is_city_Set() const{
    return m_city_isSet;
}

bool OAIContactInformation::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIContactInformation::getCompanyName() const {
    return m_company_name;
}
void OAIContactInformation::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIContactInformation::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIContactInformation::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAIContactInformation::getCountryCode() const {
    return m_country_code;
}
void OAIContactInformation::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAIContactInformation::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAIContactInformation::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QString OAIContactInformation::getDistrictOrCounty() const {
    return m_district_or_county;
}
void OAIContactInformation::setDistrictOrCounty(const QString &district_or_county) {
    m_district_or_county = district_or_county;
    m_district_or_county_isSet = true;
}

bool OAIContactInformation::is_district_or_county_Set() const{
    return m_district_or_county_isSet;
}

bool OAIContactInformation::is_district_or_county_Valid() const{
    return m_district_or_county_isValid;
}

QString OAIContactInformation::getFullName() const {
    return m_full_name;
}
void OAIContactInformation::setFullName(const QString &full_name) {
    m_full_name = full_name;
    m_full_name_isSet = true;
}

bool OAIContactInformation::is_full_name_Set() const{
    return m_full_name_isSet;
}

bool OAIContactInformation::is_full_name_Valid() const{
    return m_full_name_isValid;
}

QString OAIContactInformation::getPhoneNumber() const {
    return m_phone_number;
}
void OAIContactInformation::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIContactInformation::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIContactInformation::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIContactInformation::getPostalCode() const {
    return m_postal_code;
}
void OAIContactInformation::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIContactInformation::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIContactInformation::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIContactInformation::getStateOrRegion() const {
    return m_state_or_region;
}
void OAIContactInformation::setStateOrRegion(const QString &state_or_region) {
    m_state_or_region = state_or_region;
    m_state_or_region_isSet = true;
}

bool OAIContactInformation::is_state_or_region_Set() const{
    return m_state_or_region_isSet;
}

bool OAIContactInformation::is_state_or_region_Valid() const{
    return m_state_or_region_isValid;
}

QString OAIContactInformation::getWebsiteUrl() const {
    return m_website_url;
}
void OAIContactInformation::setWebsiteUrl(const QString &website_url) {
    m_website_url = website_url;
    m_website_url_isSet = true;
}

bool OAIContactInformation::is_website_url_Set() const{
    return m_website_url_isSet;
}

bool OAIContactInformation::is_website_url_Valid() const{
    return m_website_url_isValid;
}

bool OAIContactInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_or_county_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_or_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_line1_isValid && m_city_isValid && m_country_code_isValid && m_full_name_isValid && m_phone_number_isValid && m_postal_code_isValid && true;
}

} // namespace OpenAPI
