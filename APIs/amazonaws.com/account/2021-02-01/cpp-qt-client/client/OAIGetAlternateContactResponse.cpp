/**
 * AWS Account
 * Operations for Amazon Web Services Account Management
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAlternateContactResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAlternateContactResponse::OAIGetAlternateContactResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAlternateContactResponse::OAIGetAlternateContactResponse() {
    this->initializeModel();
}

OAIGetAlternateContactResponse::~OAIGetAlternateContactResponse() {}

void OAIGetAlternateContactResponse::initializeModel() {

    m_alternate_contact_isSet = false;
    m_alternate_contact_isValid = false;
}

void OAIGetAlternateContactResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAlternateContactResponse::fromJsonObject(QJsonObject json) {

    m_alternate_contact_isValid = ::OpenAPI::fromJsonValue(m_alternate_contact, json[QString("AlternateContact")]);
    m_alternate_contact_isSet = !json[QString("AlternateContact")].isNull() && m_alternate_contact_isValid;
}

QString OAIGetAlternateContactResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAlternateContactResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_alternate_contact.isSet()) {
        obj.insert(QString("AlternateContact"), ::OpenAPI::toJsonValue(m_alternate_contact));
    }
    return obj;
}

OAIGetAlternateContactResponse_AlternateContact OAIGetAlternateContactResponse::getAlternateContact() const {
    return m_alternate_contact;
}
void OAIGetAlternateContactResponse::setAlternateContact(const OAIGetAlternateContactResponse_AlternateContact &alternate_contact) {
    m_alternate_contact = alternate_contact;
    m_alternate_contact_isSet = true;
}

bool OAIGetAlternateContactResponse::is_alternate_contact_Set() const{
    return m_alternate_contact_isSet;
}

bool OAIGetAlternateContactResponse::is_alternate_contact_Valid() const{
    return m_alternate_contact_isValid;
}

bool OAIGetAlternateContactResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alternate_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAlternateContactResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
