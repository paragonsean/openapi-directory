# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeFleetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fleet: str=None):
        """DescribeFleetRequest - a model defined in OpenAPI

        :param fleet: The fleet of this DescribeFleetRequest.
        """
        self.openapi_types = {
            'fleet': str
        }

        self.attribute_map = {
            'fleet': 'fleet'
        }

        self._fleet = fleet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeFleetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeFleetRequest of this DescribeFleetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fleet(self):
        """Gets the fleet of this DescribeFleetRequest.


        :return: The fleet of this DescribeFleetRequest.
        :rtype: str
        """
        return self._fleet

    @fleet.setter
    def fleet(self, fleet):
        """Sets the fleet of this DescribeFleetRequest.


        :param fleet: The fleet of this DescribeFleetRequest.
        :type fleet: str
        """
        if fleet is None:
            raise ValueError("Invalid value for `fleet`, must not be `None`")

        self._fleet = fleet
