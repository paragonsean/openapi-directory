# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_world_generation_job_response_world_count import DescribeWorldGenerationJobResponseWorldCount
from openapi_server.models.world_generation_job_status import WorldGenerationJobStatus
from openapi_server import util


class WorldGenerationJobSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, template: str=None, created_at: datetime=None, status: WorldGenerationJobStatus=None, world_count: DescribeWorldGenerationJobResponseWorldCount=None, succeeded_world_count: int=None, failed_world_count: int=None):
        """WorldGenerationJobSummary - a model defined in OpenAPI

        :param arn: The arn of this WorldGenerationJobSummary.
        :param template: The template of this WorldGenerationJobSummary.
        :param created_at: The created_at of this WorldGenerationJobSummary.
        :param status: The status of this WorldGenerationJobSummary.
        :param world_count: The world_count of this WorldGenerationJobSummary.
        :param succeeded_world_count: The succeeded_world_count of this WorldGenerationJobSummary.
        :param failed_world_count: The failed_world_count of this WorldGenerationJobSummary.
        """
        self.openapi_types = {
            'arn': str,
            'template': str,
            'created_at': datetime,
            'status': WorldGenerationJobStatus,
            'world_count': DescribeWorldGenerationJobResponseWorldCount,
            'succeeded_world_count': int,
            'failed_world_count': int
        }

        self.attribute_map = {
            'arn': 'arn',
            'template': 'template',
            'created_at': 'createdAt',
            'status': 'status',
            'world_count': 'worldCount',
            'succeeded_world_count': 'succeededWorldCount',
            'failed_world_count': 'failedWorldCount'
        }

        self._arn = arn
        self._template = template
        self._created_at = created_at
        self._status = status
        self._world_count = world_count
        self._succeeded_world_count = succeeded_world_count
        self._failed_world_count = failed_world_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorldGenerationJobSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorldGenerationJobSummary of this WorldGenerationJobSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this WorldGenerationJobSummary.


        :return: The arn of this WorldGenerationJobSummary.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this WorldGenerationJobSummary.


        :param arn: The arn of this WorldGenerationJobSummary.
        :type arn: str
        """

        self._arn = arn

    @property
    def template(self):
        """Gets the template of this WorldGenerationJobSummary.


        :return: The template of this WorldGenerationJobSummary.
        :rtype: str
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this WorldGenerationJobSummary.


        :param template: The template of this WorldGenerationJobSummary.
        :type template: str
        """

        self._template = template

    @property
    def created_at(self):
        """Gets the created_at of this WorldGenerationJobSummary.


        :return: The created_at of this WorldGenerationJobSummary.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this WorldGenerationJobSummary.


        :param created_at: The created_at of this WorldGenerationJobSummary.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def status(self):
        """Gets the status of this WorldGenerationJobSummary.


        :return: The status of this WorldGenerationJobSummary.
        :rtype: WorldGenerationJobStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WorldGenerationJobSummary.


        :param status: The status of this WorldGenerationJobSummary.
        :type status: WorldGenerationJobStatus
        """

        self._status = status

    @property
    def world_count(self):
        """Gets the world_count of this WorldGenerationJobSummary.


        :return: The world_count of this WorldGenerationJobSummary.
        :rtype: DescribeWorldGenerationJobResponseWorldCount
        """
        return self._world_count

    @world_count.setter
    def world_count(self, world_count):
        """Sets the world_count of this WorldGenerationJobSummary.


        :param world_count: The world_count of this WorldGenerationJobSummary.
        :type world_count: DescribeWorldGenerationJobResponseWorldCount
        """

        self._world_count = world_count

    @property
    def succeeded_world_count(self):
        """Gets the succeeded_world_count of this WorldGenerationJobSummary.


        :return: The succeeded_world_count of this WorldGenerationJobSummary.
        :rtype: int
        """
        return self._succeeded_world_count

    @succeeded_world_count.setter
    def succeeded_world_count(self, succeeded_world_count):
        """Sets the succeeded_world_count of this WorldGenerationJobSummary.


        :param succeeded_world_count: The succeeded_world_count of this WorldGenerationJobSummary.
        :type succeeded_world_count: int
        """

        self._succeeded_world_count = succeeded_world_count

    @property
    def failed_world_count(self):
        """Gets the failed_world_count of this WorldGenerationJobSummary.


        :return: The failed_world_count of this WorldGenerationJobSummary.
        :rtype: int
        """
        return self._failed_world_count

    @failed_world_count.setter
    def failed_world_count(self, failed_world_count):
        """Sets the failed_world_count of this WorldGenerationJobSummary.


        :param failed_world_count: The failed_world_count of this WorldGenerationJobSummary.
        :type failed_world_count: int
        """

        self._failed_world_count = failed_world_count
