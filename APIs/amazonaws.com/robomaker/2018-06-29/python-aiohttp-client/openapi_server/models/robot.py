# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.architecture import Architecture
from openapi_server.models.robot_status import RobotStatus
from openapi_server import util


class Robot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, name: str=None, fleet_arn: str=None, status: RobotStatus=None, green_grass_group_id: str=None, created_at: datetime=None, architecture: Architecture=None, last_deployment_job: str=None, last_deployment_time: datetime=None):
        """Robot - a model defined in OpenAPI

        :param arn: The arn of this Robot.
        :param name: The name of this Robot.
        :param fleet_arn: The fleet_arn of this Robot.
        :param status: The status of this Robot.
        :param green_grass_group_id: The green_grass_group_id of this Robot.
        :param created_at: The created_at of this Robot.
        :param architecture: The architecture of this Robot.
        :param last_deployment_job: The last_deployment_job of this Robot.
        :param last_deployment_time: The last_deployment_time of this Robot.
        """
        self.openapi_types = {
            'arn': str,
            'name': str,
            'fleet_arn': str,
            'status': RobotStatus,
            'green_grass_group_id': str,
            'created_at': datetime,
            'architecture': Architecture,
            'last_deployment_job': str,
            'last_deployment_time': datetime
        }

        self.attribute_map = {
            'arn': 'arn',
            'name': 'name',
            'fleet_arn': 'fleetArn',
            'status': 'status',
            'green_grass_group_id': 'greenGrassGroupId',
            'created_at': 'createdAt',
            'architecture': 'architecture',
            'last_deployment_job': 'lastDeploymentJob',
            'last_deployment_time': 'lastDeploymentTime'
        }

        self._arn = arn
        self._name = name
        self._fleet_arn = fleet_arn
        self._status = status
        self._green_grass_group_id = green_grass_group_id
        self._created_at = created_at
        self._architecture = architecture
        self._last_deployment_job = last_deployment_job
        self._last_deployment_time = last_deployment_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Robot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Robot of this Robot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this Robot.


        :return: The arn of this Robot.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Robot.


        :param arn: The arn of this Robot.
        :type arn: str
        """

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this Robot.


        :return: The name of this Robot.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Robot.


        :param name: The name of this Robot.
        :type name: str
        """

        self._name = name

    @property
    def fleet_arn(self):
        """Gets the fleet_arn of this Robot.


        :return: The fleet_arn of this Robot.
        :rtype: str
        """
        return self._fleet_arn

    @fleet_arn.setter
    def fleet_arn(self, fleet_arn):
        """Sets the fleet_arn of this Robot.


        :param fleet_arn: The fleet_arn of this Robot.
        :type fleet_arn: str
        """

        self._fleet_arn = fleet_arn

    @property
    def status(self):
        """Gets the status of this Robot.


        :return: The status of this Robot.
        :rtype: RobotStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Robot.


        :param status: The status of this Robot.
        :type status: RobotStatus
        """

        self._status = status

    @property
    def green_grass_group_id(self):
        """Gets the green_grass_group_id of this Robot.


        :return: The green_grass_group_id of this Robot.
        :rtype: str
        """
        return self._green_grass_group_id

    @green_grass_group_id.setter
    def green_grass_group_id(self, green_grass_group_id):
        """Sets the green_grass_group_id of this Robot.


        :param green_grass_group_id: The green_grass_group_id of this Robot.
        :type green_grass_group_id: str
        """

        self._green_grass_group_id = green_grass_group_id

    @property
    def created_at(self):
        """Gets the created_at of this Robot.


        :return: The created_at of this Robot.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Robot.


        :param created_at: The created_at of this Robot.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def architecture(self):
        """Gets the architecture of this Robot.


        :return: The architecture of this Robot.
        :rtype: Architecture
        """
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        """Sets the architecture of this Robot.


        :param architecture: The architecture of this Robot.
        :type architecture: Architecture
        """

        self._architecture = architecture

    @property
    def last_deployment_job(self):
        """Gets the last_deployment_job of this Robot.


        :return: The last_deployment_job of this Robot.
        :rtype: str
        """
        return self._last_deployment_job

    @last_deployment_job.setter
    def last_deployment_job(self, last_deployment_job):
        """Sets the last_deployment_job of this Robot.


        :param last_deployment_job: The last_deployment_job of this Robot.
        :type last_deployment_job: str
        """

        self._last_deployment_job = last_deployment_job

    @property
    def last_deployment_time(self):
        """Gets the last_deployment_time of this Robot.


        :return: The last_deployment_time of this Robot.
        :rtype: datetime
        """
        return self._last_deployment_time

    @last_deployment_time.setter
    def last_deployment_time(self, last_deployment_time):
        """Sets the last_deployment_time of this Robot.


        :param last_deployment_time: The last_deployment_time of this Robot.
        :type last_deployment_time: datetime
        """

        self._last_deployment_time = last_deployment_time
