# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetworkInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network_interface_id: str=None, private_ip_address: str=None, public_ip_address: str=None):
        """NetworkInterface - a model defined in OpenAPI

        :param network_interface_id: The network_interface_id of this NetworkInterface.
        :param private_ip_address: The private_ip_address of this NetworkInterface.
        :param public_ip_address: The public_ip_address of this NetworkInterface.
        """
        self.openapi_types = {
            'network_interface_id': str,
            'private_ip_address': str,
            'public_ip_address': str
        }

        self.attribute_map = {
            'network_interface_id': 'networkInterfaceId',
            'private_ip_address': 'privateIpAddress',
            'public_ip_address': 'publicIpAddress'
        }

        self._network_interface_id = network_interface_id
        self._private_ip_address = private_ip_address
        self._public_ip_address = public_ip_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkInterface of this NetworkInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_interface_id(self):
        """Gets the network_interface_id of this NetworkInterface.


        :return: The network_interface_id of this NetworkInterface.
        :rtype: str
        """
        return self._network_interface_id

    @network_interface_id.setter
    def network_interface_id(self, network_interface_id):
        """Sets the network_interface_id of this NetworkInterface.


        :param network_interface_id: The network_interface_id of this NetworkInterface.
        :type network_interface_id: str
        """

        self._network_interface_id = network_interface_id

    @property
    def private_ip_address(self):
        """Gets the private_ip_address of this NetworkInterface.


        :return: The private_ip_address of this NetworkInterface.
        :rtype: str
        """
        return self._private_ip_address

    @private_ip_address.setter
    def private_ip_address(self, private_ip_address):
        """Sets the private_ip_address of this NetworkInterface.


        :param private_ip_address: The private_ip_address of this NetworkInterface.
        :type private_ip_address: str
        """

        self._private_ip_address = private_ip_address

    @property
    def public_ip_address(self):
        """Gets the public_ip_address of this NetworkInterface.


        :return: The public_ip_address of this NetworkInterface.
        :rtype: str
        """
        return self._public_ip_address

    @public_ip_address.setter
    def public_ip_address(self, public_ip_address):
        """Sets the public_ip_address of this NetworkInterface.


        :param public_ip_address: The public_ip_address of this NetworkInterface.
        :type public_ip_address: str
        """

        self._public_ip_address = public_ip_address
