# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.failure_behavior import FailureBehavior
from openapi_server.models.logging_config import LoggingConfig
from openapi_server.models.output_location import OutputLocation
from openapi_server.models.simulation_job_request_compute import SimulationJobRequestCompute
from openapi_server.models.vpc_config import VPCConfig
from openapi_server import util


class FailedCreateSimulationJobRequestRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, output_location: OutputLocation=None, logging_config: LoggingConfig=None, max_job_duration_in_seconds: int=None, iam_role: str=None, failure_behavior: FailureBehavior=None, use_default_applications: bool=None, robot_applications: List=None, simulation_applications: List=None, data_sources: List=None, vpc_config: VPCConfig=None, compute: SimulationJobRequestCompute=None, tags: Dict=None):
        """FailedCreateSimulationJobRequestRequest - a model defined in OpenAPI

        :param output_location: The output_location of this FailedCreateSimulationJobRequestRequest.
        :param logging_config: The logging_config of this FailedCreateSimulationJobRequestRequest.
        :param max_job_duration_in_seconds: The max_job_duration_in_seconds of this FailedCreateSimulationJobRequestRequest.
        :param iam_role: The iam_role of this FailedCreateSimulationJobRequestRequest.
        :param failure_behavior: The failure_behavior of this FailedCreateSimulationJobRequestRequest.
        :param use_default_applications: The use_default_applications of this FailedCreateSimulationJobRequestRequest.
        :param robot_applications: The robot_applications of this FailedCreateSimulationJobRequestRequest.
        :param simulation_applications: The simulation_applications of this FailedCreateSimulationJobRequestRequest.
        :param data_sources: The data_sources of this FailedCreateSimulationJobRequestRequest.
        :param vpc_config: The vpc_config of this FailedCreateSimulationJobRequestRequest.
        :param compute: The compute of this FailedCreateSimulationJobRequestRequest.
        :param tags: The tags of this FailedCreateSimulationJobRequestRequest.
        """
        self.openapi_types = {
            'output_location': OutputLocation,
            'logging_config': LoggingConfig,
            'max_job_duration_in_seconds': int,
            'iam_role': str,
            'failure_behavior': FailureBehavior,
            'use_default_applications': bool,
            'robot_applications': List,
            'simulation_applications': List,
            'data_sources': List,
            'vpc_config': VPCConfig,
            'compute': SimulationJobRequestCompute,
            'tags': Dict
        }

        self.attribute_map = {
            'output_location': 'outputLocation',
            'logging_config': 'loggingConfig',
            'max_job_duration_in_seconds': 'maxJobDurationInSeconds',
            'iam_role': 'iamRole',
            'failure_behavior': 'failureBehavior',
            'use_default_applications': 'useDefaultApplications',
            'robot_applications': 'robotApplications',
            'simulation_applications': 'simulationApplications',
            'data_sources': 'dataSources',
            'vpc_config': 'vpcConfig',
            'compute': 'compute',
            'tags': 'tags'
        }

        self._output_location = output_location
        self._logging_config = logging_config
        self._max_job_duration_in_seconds = max_job_duration_in_seconds
        self._iam_role = iam_role
        self._failure_behavior = failure_behavior
        self._use_default_applications = use_default_applications
        self._robot_applications = robot_applications
        self._simulation_applications = simulation_applications
        self._data_sources = data_sources
        self._vpc_config = vpc_config
        self._compute = compute
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailedCreateSimulationJobRequestRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailedCreateSimulationJobRequest_request of this FailedCreateSimulationJobRequestRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def output_location(self):
        """Gets the output_location of this FailedCreateSimulationJobRequestRequest.


        :return: The output_location of this FailedCreateSimulationJobRequestRequest.
        :rtype: OutputLocation
        """
        return self._output_location

    @output_location.setter
    def output_location(self, output_location):
        """Sets the output_location of this FailedCreateSimulationJobRequestRequest.


        :param output_location: The output_location of this FailedCreateSimulationJobRequestRequest.
        :type output_location: OutputLocation
        """

        self._output_location = output_location

    @property
    def logging_config(self):
        """Gets the logging_config of this FailedCreateSimulationJobRequestRequest.


        :return: The logging_config of this FailedCreateSimulationJobRequestRequest.
        :rtype: LoggingConfig
        """
        return self._logging_config

    @logging_config.setter
    def logging_config(self, logging_config):
        """Sets the logging_config of this FailedCreateSimulationJobRequestRequest.


        :param logging_config: The logging_config of this FailedCreateSimulationJobRequestRequest.
        :type logging_config: LoggingConfig
        """

        self._logging_config = logging_config

    @property
    def max_job_duration_in_seconds(self):
        """Gets the max_job_duration_in_seconds of this FailedCreateSimulationJobRequestRequest.


        :return: The max_job_duration_in_seconds of this FailedCreateSimulationJobRequestRequest.
        :rtype: int
        """
        return self._max_job_duration_in_seconds

    @max_job_duration_in_seconds.setter
    def max_job_duration_in_seconds(self, max_job_duration_in_seconds):
        """Sets the max_job_duration_in_seconds of this FailedCreateSimulationJobRequestRequest.


        :param max_job_duration_in_seconds: The max_job_duration_in_seconds of this FailedCreateSimulationJobRequestRequest.
        :type max_job_duration_in_seconds: int
        """
        if max_job_duration_in_seconds is None:
            raise ValueError("Invalid value for `max_job_duration_in_seconds`, must not be `None`")

        self._max_job_duration_in_seconds = max_job_duration_in_seconds

    @property
    def iam_role(self):
        """Gets the iam_role of this FailedCreateSimulationJobRequestRequest.


        :return: The iam_role of this FailedCreateSimulationJobRequestRequest.
        :rtype: str
        """
        return self._iam_role

    @iam_role.setter
    def iam_role(self, iam_role):
        """Sets the iam_role of this FailedCreateSimulationJobRequestRequest.


        :param iam_role: The iam_role of this FailedCreateSimulationJobRequestRequest.
        :type iam_role: str
        """

        self._iam_role = iam_role

    @property
    def failure_behavior(self):
        """Gets the failure_behavior of this FailedCreateSimulationJobRequestRequest.


        :return: The failure_behavior of this FailedCreateSimulationJobRequestRequest.
        :rtype: FailureBehavior
        """
        return self._failure_behavior

    @failure_behavior.setter
    def failure_behavior(self, failure_behavior):
        """Sets the failure_behavior of this FailedCreateSimulationJobRequestRequest.


        :param failure_behavior: The failure_behavior of this FailedCreateSimulationJobRequestRequest.
        :type failure_behavior: FailureBehavior
        """

        self._failure_behavior = failure_behavior

    @property
    def use_default_applications(self):
        """Gets the use_default_applications of this FailedCreateSimulationJobRequestRequest.


        :return: The use_default_applications of this FailedCreateSimulationJobRequestRequest.
        :rtype: bool
        """
        return self._use_default_applications

    @use_default_applications.setter
    def use_default_applications(self, use_default_applications):
        """Sets the use_default_applications of this FailedCreateSimulationJobRequestRequest.


        :param use_default_applications: The use_default_applications of this FailedCreateSimulationJobRequestRequest.
        :type use_default_applications: bool
        """

        self._use_default_applications = use_default_applications

    @property
    def robot_applications(self):
        """Gets the robot_applications of this FailedCreateSimulationJobRequestRequest.


        :return: The robot_applications of this FailedCreateSimulationJobRequestRequest.
        :rtype: List
        """
        return self._robot_applications

    @robot_applications.setter
    def robot_applications(self, robot_applications):
        """Sets the robot_applications of this FailedCreateSimulationJobRequestRequest.


        :param robot_applications: The robot_applications of this FailedCreateSimulationJobRequestRequest.
        :type robot_applications: List
        """

        self._robot_applications = robot_applications

    @property
    def simulation_applications(self):
        """Gets the simulation_applications of this FailedCreateSimulationJobRequestRequest.


        :return: The simulation_applications of this FailedCreateSimulationJobRequestRequest.
        :rtype: List
        """
        return self._simulation_applications

    @simulation_applications.setter
    def simulation_applications(self, simulation_applications):
        """Sets the simulation_applications of this FailedCreateSimulationJobRequestRequest.


        :param simulation_applications: The simulation_applications of this FailedCreateSimulationJobRequestRequest.
        :type simulation_applications: List
        """

        self._simulation_applications = simulation_applications

    @property
    def data_sources(self):
        """Gets the data_sources of this FailedCreateSimulationJobRequestRequest.


        :return: The data_sources of this FailedCreateSimulationJobRequestRequest.
        :rtype: List
        """
        return self._data_sources

    @data_sources.setter
    def data_sources(self, data_sources):
        """Sets the data_sources of this FailedCreateSimulationJobRequestRequest.


        :param data_sources: The data_sources of this FailedCreateSimulationJobRequestRequest.
        :type data_sources: List
        """

        self._data_sources = data_sources

    @property
    def vpc_config(self):
        """Gets the vpc_config of this FailedCreateSimulationJobRequestRequest.


        :return: The vpc_config of this FailedCreateSimulationJobRequestRequest.
        :rtype: VPCConfig
        """
        return self._vpc_config

    @vpc_config.setter
    def vpc_config(self, vpc_config):
        """Sets the vpc_config of this FailedCreateSimulationJobRequestRequest.


        :param vpc_config: The vpc_config of this FailedCreateSimulationJobRequestRequest.
        :type vpc_config: VPCConfig
        """

        self._vpc_config = vpc_config

    @property
    def compute(self):
        """Gets the compute of this FailedCreateSimulationJobRequestRequest.


        :return: The compute of this FailedCreateSimulationJobRequestRequest.
        :rtype: SimulationJobRequestCompute
        """
        return self._compute

    @compute.setter
    def compute(self, compute):
        """Sets the compute of this FailedCreateSimulationJobRequestRequest.


        :param compute: The compute of this FailedCreateSimulationJobRequestRequest.
        :type compute: SimulationJobRequestCompute
        """

        self._compute = compute

    @property
    def tags(self):
        """Gets the tags of this FailedCreateSimulationJobRequestRequest.


        :return: The tags of this FailedCreateSimulationJobRequestRequest.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this FailedCreateSimulationJobRequestRequest.


        :param tags: The tags of this FailedCreateSimulationJobRequestRequest.
        :type tags: Dict
        """

        self._tags = tags
