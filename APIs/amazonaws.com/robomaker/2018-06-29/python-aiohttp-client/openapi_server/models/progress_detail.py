# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.robot_deployment_step import RobotDeploymentStep
from openapi_server import util


class ProgressDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_progress: RobotDeploymentStep=None, percent_done: float=None, estimated_time_remaining_seconds: int=None, target_resource: str=None):
        """ProgressDetail - a model defined in OpenAPI

        :param current_progress: The current_progress of this ProgressDetail.
        :param percent_done: The percent_done of this ProgressDetail.
        :param estimated_time_remaining_seconds: The estimated_time_remaining_seconds of this ProgressDetail.
        :param target_resource: The target_resource of this ProgressDetail.
        """
        self.openapi_types = {
            'current_progress': RobotDeploymentStep,
            'percent_done': float,
            'estimated_time_remaining_seconds': int,
            'target_resource': str
        }

        self.attribute_map = {
            'current_progress': 'currentProgress',
            'percent_done': 'percentDone',
            'estimated_time_remaining_seconds': 'estimatedTimeRemainingSeconds',
            'target_resource': 'targetResource'
        }

        self._current_progress = current_progress
        self._percent_done = percent_done
        self._estimated_time_remaining_seconds = estimated_time_remaining_seconds
        self._target_resource = target_resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProgressDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProgressDetail of this ProgressDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_progress(self):
        """Gets the current_progress of this ProgressDetail.


        :return: The current_progress of this ProgressDetail.
        :rtype: RobotDeploymentStep
        """
        return self._current_progress

    @current_progress.setter
    def current_progress(self, current_progress):
        """Sets the current_progress of this ProgressDetail.


        :param current_progress: The current_progress of this ProgressDetail.
        :type current_progress: RobotDeploymentStep
        """

        self._current_progress = current_progress

    @property
    def percent_done(self):
        """Gets the percent_done of this ProgressDetail.


        :return: The percent_done of this ProgressDetail.
        :rtype: float
        """
        return self._percent_done

    @percent_done.setter
    def percent_done(self, percent_done):
        """Sets the percent_done of this ProgressDetail.


        :param percent_done: The percent_done of this ProgressDetail.
        :type percent_done: float
        """

        self._percent_done = percent_done

    @property
    def estimated_time_remaining_seconds(self):
        """Gets the estimated_time_remaining_seconds of this ProgressDetail.


        :return: The estimated_time_remaining_seconds of this ProgressDetail.
        :rtype: int
        """
        return self._estimated_time_remaining_seconds

    @estimated_time_remaining_seconds.setter
    def estimated_time_remaining_seconds(self, estimated_time_remaining_seconds):
        """Sets the estimated_time_remaining_seconds of this ProgressDetail.


        :param estimated_time_remaining_seconds: The estimated_time_remaining_seconds of this ProgressDetail.
        :type estimated_time_remaining_seconds: int
        """

        self._estimated_time_remaining_seconds = estimated_time_remaining_seconds

    @property
    def target_resource(self):
        """Gets the target_resource of this ProgressDetail.


        :return: The target_resource of this ProgressDetail.
        :rtype: str
        """
        return self._target_resource

    @target_resource.setter
    def target_resource(self, target_resource):
        """Sets the target_resource of this ProgressDetail.


        :param target_resource: The target_resource of this ProgressDetail.
        :type target_resource: str
        """

        self._target_resource = target_resource
