# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SimulationJobErrorCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    INTERNALSERVICEERROR = 'InternalServiceError'
    ROBOTAPPLICATIONCRASH = 'RobotApplicationCrash'
    SIMULATIONAPPLICATIONCRASH = 'SimulationApplicationCrash'
    ROBOTAPPLICATIONHEALTHCHECKFAILURE = 'RobotApplicationHealthCheckFailure'
    SIMULATIONAPPLICATIONHEALTHCHECKFAILURE = 'SimulationApplicationHealthCheckFailure'
    BADPERMISSIONSROBOTAPPLICATION = 'BadPermissionsRobotApplication'
    BADPERMISSIONSSIMULATIONAPPLICATION = 'BadPermissionsSimulationApplication'
    BADPERMISSIONSS3OBJECT = 'BadPermissionsS3Object'
    BADPERMISSIONSS3OUTPUT = 'BadPermissionsS3Output'
    BADPERMISSIONSCLOUDWATCHLOGS = 'BadPermissionsCloudwatchLogs'
    SUBNETIPLIMITEXCEEDED = 'SubnetIpLimitExceeded'
    ENILIMITEXCEEDED = 'ENILimitExceeded'
    BADPERMISSIONSUSERCREDENTIALS = 'BadPermissionsUserCredentials'
    INVALIDBUNDLEROBOTAPPLICATION = 'InvalidBundleRobotApplication'
    INVALIDBUNDLESIMULATIONAPPLICATION = 'InvalidBundleSimulationApplication'
    INVALIDS3RESOURCE = 'InvalidS3Resource'
    THROTTLINGERROR = 'ThrottlingError'
    LIMITEXCEEDED = 'LimitExceeded'
    MISMATCHEDETAG = 'MismatchedEtag'
    ROBOTAPPLICATIONVERSIONMISMATCHEDETAG = 'RobotApplicationVersionMismatchedEtag'
    SIMULATIONAPPLICATIONVERSIONMISMATCHEDETAG = 'SimulationApplicationVersionMismatchedEtag'
    RESOURCENOTFOUND = 'ResourceNotFound'
    REQUESTTHROTTLED = 'RequestThrottled'
    BATCHTIMEDOUT = 'BatchTimedOut'
    BATCHCANCELED = 'BatchCanceled'
    INVALIDINPUT = 'InvalidInput'
    WRONGREGIONS3BUCKET = 'WrongRegionS3Bucket'
    WRONGREGIONS3OUTPUT = 'WrongRegionS3Output'
    WRONGREGIONROBOTAPPLICATION = 'WrongRegionRobotApplication'
    WRONGREGIONSIMULATIONAPPLICATION = 'WrongRegionSimulationApplication'
    UPLOADCONTENTMISMATCHERROR = 'UploadContentMismatchError'

    def __init__(self):
        """SimulationJobErrorCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimulationJobErrorCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimulationJobErrorCode of this SimulationJobErrorCode.
        """
        return util.deserialize_model(dikt, cls)
