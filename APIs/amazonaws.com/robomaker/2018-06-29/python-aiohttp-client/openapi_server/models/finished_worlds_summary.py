# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.finished_worlds_summary_failure_summary import FinishedWorldsSummaryFailureSummary
from openapi_server import util


class FinishedWorldsSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, finished_count: int=None, succeeded_worlds: List=None, failure_summary: FinishedWorldsSummaryFailureSummary=None):
        """FinishedWorldsSummary - a model defined in OpenAPI

        :param finished_count: The finished_count of this FinishedWorldsSummary.
        :param succeeded_worlds: The succeeded_worlds of this FinishedWorldsSummary.
        :param failure_summary: The failure_summary of this FinishedWorldsSummary.
        """
        self.openapi_types = {
            'finished_count': int,
            'succeeded_worlds': List,
            'failure_summary': FinishedWorldsSummaryFailureSummary
        }

        self.attribute_map = {
            'finished_count': 'finishedCount',
            'succeeded_worlds': 'succeededWorlds',
            'failure_summary': 'failureSummary'
        }

        self._finished_count = finished_count
        self._succeeded_worlds = succeeded_worlds
        self._failure_summary = failure_summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FinishedWorldsSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FinishedWorldsSummary of this FinishedWorldsSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def finished_count(self):
        """Gets the finished_count of this FinishedWorldsSummary.


        :return: The finished_count of this FinishedWorldsSummary.
        :rtype: int
        """
        return self._finished_count

    @finished_count.setter
    def finished_count(self, finished_count):
        """Sets the finished_count of this FinishedWorldsSummary.


        :param finished_count: The finished_count of this FinishedWorldsSummary.
        :type finished_count: int
        """

        self._finished_count = finished_count

    @property
    def succeeded_worlds(self):
        """Gets the succeeded_worlds of this FinishedWorldsSummary.


        :return: The succeeded_worlds of this FinishedWorldsSummary.
        :rtype: List
        """
        return self._succeeded_worlds

    @succeeded_worlds.setter
    def succeeded_worlds(self, succeeded_worlds):
        """Sets the succeeded_worlds of this FinishedWorldsSummary.


        :param succeeded_worlds: The succeeded_worlds of this FinishedWorldsSummary.
        :type succeeded_worlds: List
        """

        self._succeeded_worlds = succeeded_worlds

    @property
    def failure_summary(self):
        """Gets the failure_summary of this FinishedWorldsSummary.


        :return: The failure_summary of this FinishedWorldsSummary.
        :rtype: FinishedWorldsSummaryFailureSummary
        """
        return self._failure_summary

    @failure_summary.setter
    def failure_summary(self, failure_summary):
        """Sets the failure_summary of this FinishedWorldsSummary.


        :param failure_summary: The failure_summary of this FinishedWorldsSummary.
        :type failure_summary: FinishedWorldsSummaryFailureSummary
        """

        self._failure_summary = failure_summary
