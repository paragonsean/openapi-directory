# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compute_type import ComputeType
from openapi_server import util


class SimulationJobRequestCompute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, simulation_unit_limit: int=None, compute_type: ComputeType=None, gpu_unit_limit: int=None):
        """SimulationJobRequestCompute - a model defined in OpenAPI

        :param simulation_unit_limit: The simulation_unit_limit of this SimulationJobRequestCompute.
        :param compute_type: The compute_type of this SimulationJobRequestCompute.
        :param gpu_unit_limit: The gpu_unit_limit of this SimulationJobRequestCompute.
        """
        self.openapi_types = {
            'simulation_unit_limit': int,
            'compute_type': ComputeType,
            'gpu_unit_limit': int
        }

        self.attribute_map = {
            'simulation_unit_limit': 'simulationUnitLimit',
            'compute_type': 'computeType',
            'gpu_unit_limit': 'gpuUnitLimit'
        }

        self._simulation_unit_limit = simulation_unit_limit
        self._compute_type = compute_type
        self._gpu_unit_limit = gpu_unit_limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimulationJobRequestCompute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimulationJobRequest_compute of this SimulationJobRequestCompute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def simulation_unit_limit(self):
        """Gets the simulation_unit_limit of this SimulationJobRequestCompute.


        :return: The simulation_unit_limit of this SimulationJobRequestCompute.
        :rtype: int
        """
        return self._simulation_unit_limit

    @simulation_unit_limit.setter
    def simulation_unit_limit(self, simulation_unit_limit):
        """Sets the simulation_unit_limit of this SimulationJobRequestCompute.


        :param simulation_unit_limit: The simulation_unit_limit of this SimulationJobRequestCompute.
        :type simulation_unit_limit: int
        """

        self._simulation_unit_limit = simulation_unit_limit

    @property
    def compute_type(self):
        """Gets the compute_type of this SimulationJobRequestCompute.


        :return: The compute_type of this SimulationJobRequestCompute.
        :rtype: ComputeType
        """
        return self._compute_type

    @compute_type.setter
    def compute_type(self, compute_type):
        """Sets the compute_type of this SimulationJobRequestCompute.


        :param compute_type: The compute_type of this SimulationJobRequestCompute.
        :type compute_type: ComputeType
        """

        self._compute_type = compute_type

    @property
    def gpu_unit_limit(self):
        """Gets the gpu_unit_limit of this SimulationJobRequestCompute.


        :return: The gpu_unit_limit of this SimulationJobRequestCompute.
        :rtype: int
        """
        return self._gpu_unit_limit

    @gpu_unit_limit.setter
    def gpu_unit_limit(self, gpu_unit_limit):
        """Sets the gpu_unit_limit of this SimulationJobRequestCompute.


        :param gpu_unit_limit: The gpu_unit_limit of this SimulationJobRequestCompute.
        :type gpu_unit_limit: int
        """

        self._gpu_unit_limit = gpu_unit_limit
