# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class DescribeSimulationApplicationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application: str=None, application_version: str=None):
        """DescribeSimulationApplicationRequest - a model defined in OpenAPI

        :param application: The application of this DescribeSimulationApplicationRequest.
        :param application_version: The application_version of this DescribeSimulationApplicationRequest.
        """
        self.openapi_types = {
            'application': str,
            'application_version': str
        }

        self.attribute_map = {
            'application': 'application',
            'application_version': 'applicationVersion'
        }

        self._application = application
        self._application_version = application_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSimulationApplicationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSimulationApplication_request of this DescribeSimulationApplicationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application(self):
        """Gets the application of this DescribeSimulationApplicationRequest.

        The application information for the simulation application.

        :return: The application of this DescribeSimulationApplicationRequest.
        :rtype: str
        """
        return self._application

    @application.setter
    def application(self, application):
        """Sets the application of this DescribeSimulationApplicationRequest.

        The application information for the simulation application.

        :param application: The application of this DescribeSimulationApplicationRequest.
        :type application: str
        """
        if application is None:
            raise ValueError("Invalid value for `application`, must not be `None`")
        if application is not None and len(application) > 1224:
            raise ValueError("Invalid value for `application`, length must be less than or equal to `1224`")
        if application is not None and len(application) < 1:
            raise ValueError("Invalid value for `application`, length must be greater than or equal to `1`")
        if application is not None and not re.search(r'arn:.*', application):
            raise ValueError("Invalid value for `application`, must be a follow pattern or equal to `/arn:.*/`")

        self._application = application

    @property
    def application_version(self):
        """Gets the application_version of this DescribeSimulationApplicationRequest.

        The version of the simulation application to describe.

        :return: The application_version of this DescribeSimulationApplicationRequest.
        :rtype: str
        """
        return self._application_version

    @application_version.setter
    def application_version(self, application_version):
        """Sets the application_version of this DescribeSimulationApplicationRequest.

        The version of the simulation application to describe.

        :param application_version: The application_version of this DescribeSimulationApplicationRequest.
        :type application_version: str
        """
        if application_version is not None and len(application_version) > 255:
            raise ValueError("Invalid value for `application_version`, length must be less than or equal to `255`")
        if application_version is not None and len(application_version) < 1:
            raise ValueError("Invalid value for `application_version`, length must be greater than or equal to `1`")
        if application_version is not None and not re.search(r'(\$LATEST)|[0-9]*', application_version):
            raise ValueError("Invalid value for `application_version`, must be a follow pattern or equal to `/(\$LATEST)|[0-9]*/`")

        self._application_version = application_version
