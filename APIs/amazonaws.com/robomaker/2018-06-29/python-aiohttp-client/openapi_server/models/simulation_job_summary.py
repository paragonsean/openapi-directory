# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compute_type import ComputeType
from openapi_server.models.simulation_job_status import SimulationJobStatus
from openapi_server import util


class SimulationJobSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, last_updated_at: datetime=None, name: str=None, status: SimulationJobStatus=None, simulation_application_names: List=None, robot_application_names: List=None, data_source_names: List=None, compute_type: ComputeType=None):
        """SimulationJobSummary - a model defined in OpenAPI

        :param arn: The arn of this SimulationJobSummary.
        :param last_updated_at: The last_updated_at of this SimulationJobSummary.
        :param name: The name of this SimulationJobSummary.
        :param status: The status of this SimulationJobSummary.
        :param simulation_application_names: The simulation_application_names of this SimulationJobSummary.
        :param robot_application_names: The robot_application_names of this SimulationJobSummary.
        :param data_source_names: The data_source_names of this SimulationJobSummary.
        :param compute_type: The compute_type of this SimulationJobSummary.
        """
        self.openapi_types = {
            'arn': str,
            'last_updated_at': datetime,
            'name': str,
            'status': SimulationJobStatus,
            'simulation_application_names': List,
            'robot_application_names': List,
            'data_source_names': List,
            'compute_type': ComputeType
        }

        self.attribute_map = {
            'arn': 'arn',
            'last_updated_at': 'lastUpdatedAt',
            'name': 'name',
            'status': 'status',
            'simulation_application_names': 'simulationApplicationNames',
            'robot_application_names': 'robotApplicationNames',
            'data_source_names': 'dataSourceNames',
            'compute_type': 'computeType'
        }

        self._arn = arn
        self._last_updated_at = last_updated_at
        self._name = name
        self._status = status
        self._simulation_application_names = simulation_application_names
        self._robot_application_names = robot_application_names
        self._data_source_names = data_source_names
        self._compute_type = compute_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimulationJobSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimulationJobSummary of this SimulationJobSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this SimulationJobSummary.


        :return: The arn of this SimulationJobSummary.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this SimulationJobSummary.


        :param arn: The arn of this SimulationJobSummary.
        :type arn: str
        """

        self._arn = arn

    @property
    def last_updated_at(self):
        """Gets the last_updated_at of this SimulationJobSummary.


        :return: The last_updated_at of this SimulationJobSummary.
        :rtype: datetime
        """
        return self._last_updated_at

    @last_updated_at.setter
    def last_updated_at(self, last_updated_at):
        """Sets the last_updated_at of this SimulationJobSummary.


        :param last_updated_at: The last_updated_at of this SimulationJobSummary.
        :type last_updated_at: datetime
        """

        self._last_updated_at = last_updated_at

    @property
    def name(self):
        """Gets the name of this SimulationJobSummary.


        :return: The name of this SimulationJobSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SimulationJobSummary.


        :param name: The name of this SimulationJobSummary.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this SimulationJobSummary.


        :return: The status of this SimulationJobSummary.
        :rtype: SimulationJobStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SimulationJobSummary.


        :param status: The status of this SimulationJobSummary.
        :type status: SimulationJobStatus
        """

        self._status = status

    @property
    def simulation_application_names(self):
        """Gets the simulation_application_names of this SimulationJobSummary.


        :return: The simulation_application_names of this SimulationJobSummary.
        :rtype: List
        """
        return self._simulation_application_names

    @simulation_application_names.setter
    def simulation_application_names(self, simulation_application_names):
        """Sets the simulation_application_names of this SimulationJobSummary.


        :param simulation_application_names: The simulation_application_names of this SimulationJobSummary.
        :type simulation_application_names: List
        """

        self._simulation_application_names = simulation_application_names

    @property
    def robot_application_names(self):
        """Gets the robot_application_names of this SimulationJobSummary.


        :return: The robot_application_names of this SimulationJobSummary.
        :rtype: List
        """
        return self._robot_application_names

    @robot_application_names.setter
    def robot_application_names(self, robot_application_names):
        """Sets the robot_application_names of this SimulationJobSummary.


        :param robot_application_names: The robot_application_names of this SimulationJobSummary.
        :type robot_application_names: List
        """

        self._robot_application_names = robot_application_names

    @property
    def data_source_names(self):
        """Gets the data_source_names of this SimulationJobSummary.


        :return: The data_source_names of this SimulationJobSummary.
        :rtype: List
        """
        return self._data_source_names

    @data_source_names.setter
    def data_source_names(self, data_source_names):
        """Sets the data_source_names of this SimulationJobSummary.


        :param data_source_names: The data_source_names of this SimulationJobSummary.
        :type data_source_names: List
        """

        self._data_source_names = data_source_names

    @property
    def compute_type(self):
        """Gets the compute_type of this SimulationJobSummary.


        :return: The compute_type of this SimulationJobSummary.
        :rtype: ComputeType
        """
        return self._compute_type

    @compute_type.setter
    def compute_type(self, compute_type):
        """Sets the compute_type of this SimulationJobSummary.


        :param compute_type: The compute_type of this SimulationJobSummary.
        :type compute_type: ComputeType
        """

        self._compute_type = compute_type
