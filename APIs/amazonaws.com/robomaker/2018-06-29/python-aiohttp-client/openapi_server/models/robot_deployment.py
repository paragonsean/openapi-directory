# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_job_error_code import DeploymentJobErrorCode
from openapi_server.models.robot_deployment_progress_detail import RobotDeploymentProgressDetail
from openapi_server.models.robot_status import RobotStatus
from openapi_server import util


class RobotDeployment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, deployment_start_time: datetime=None, deployment_finish_time: datetime=None, status: RobotStatus=None, progress_detail: RobotDeploymentProgressDetail=None, failure_reason: str=None, failure_code: DeploymentJobErrorCode=None):
        """RobotDeployment - a model defined in OpenAPI

        :param arn: The arn of this RobotDeployment.
        :param deployment_start_time: The deployment_start_time of this RobotDeployment.
        :param deployment_finish_time: The deployment_finish_time of this RobotDeployment.
        :param status: The status of this RobotDeployment.
        :param progress_detail: The progress_detail of this RobotDeployment.
        :param failure_reason: The failure_reason of this RobotDeployment.
        :param failure_code: The failure_code of this RobotDeployment.
        """
        self.openapi_types = {
            'arn': str,
            'deployment_start_time': datetime,
            'deployment_finish_time': datetime,
            'status': RobotStatus,
            'progress_detail': RobotDeploymentProgressDetail,
            'failure_reason': str,
            'failure_code': DeploymentJobErrorCode
        }

        self.attribute_map = {
            'arn': 'arn',
            'deployment_start_time': 'deploymentStartTime',
            'deployment_finish_time': 'deploymentFinishTime',
            'status': 'status',
            'progress_detail': 'progressDetail',
            'failure_reason': 'failureReason',
            'failure_code': 'failureCode'
        }

        self._arn = arn
        self._deployment_start_time = deployment_start_time
        self._deployment_finish_time = deployment_finish_time
        self._status = status
        self._progress_detail = progress_detail
        self._failure_reason = failure_reason
        self._failure_code = failure_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RobotDeployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RobotDeployment of this RobotDeployment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this RobotDeployment.


        :return: The arn of this RobotDeployment.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this RobotDeployment.


        :param arn: The arn of this RobotDeployment.
        :type arn: str
        """

        self._arn = arn

    @property
    def deployment_start_time(self):
        """Gets the deployment_start_time of this RobotDeployment.


        :return: The deployment_start_time of this RobotDeployment.
        :rtype: datetime
        """
        return self._deployment_start_time

    @deployment_start_time.setter
    def deployment_start_time(self, deployment_start_time):
        """Sets the deployment_start_time of this RobotDeployment.


        :param deployment_start_time: The deployment_start_time of this RobotDeployment.
        :type deployment_start_time: datetime
        """

        self._deployment_start_time = deployment_start_time

    @property
    def deployment_finish_time(self):
        """Gets the deployment_finish_time of this RobotDeployment.


        :return: The deployment_finish_time of this RobotDeployment.
        :rtype: datetime
        """
        return self._deployment_finish_time

    @deployment_finish_time.setter
    def deployment_finish_time(self, deployment_finish_time):
        """Sets the deployment_finish_time of this RobotDeployment.


        :param deployment_finish_time: The deployment_finish_time of this RobotDeployment.
        :type deployment_finish_time: datetime
        """

        self._deployment_finish_time = deployment_finish_time

    @property
    def status(self):
        """Gets the status of this RobotDeployment.


        :return: The status of this RobotDeployment.
        :rtype: RobotStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RobotDeployment.


        :param status: The status of this RobotDeployment.
        :type status: RobotStatus
        """

        self._status = status

    @property
    def progress_detail(self):
        """Gets the progress_detail of this RobotDeployment.


        :return: The progress_detail of this RobotDeployment.
        :rtype: RobotDeploymentProgressDetail
        """
        return self._progress_detail

    @progress_detail.setter
    def progress_detail(self, progress_detail):
        """Sets the progress_detail of this RobotDeployment.


        :param progress_detail: The progress_detail of this RobotDeployment.
        :type progress_detail: RobotDeploymentProgressDetail
        """

        self._progress_detail = progress_detail

    @property
    def failure_reason(self):
        """Gets the failure_reason of this RobotDeployment.


        :return: The failure_reason of this RobotDeployment.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this RobotDeployment.


        :param failure_reason: The failure_reason of this RobotDeployment.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def failure_code(self):
        """Gets the failure_code of this RobotDeployment.


        :return: The failure_code of this RobotDeployment.
        :rtype: DeploymentJobErrorCode
        """
        return self._failure_code

    @failure_code.setter
    def failure_code(self, failure_code):
        """Sets the failure_code of this RobotDeployment.


        :param failure_code: The failure_code of this RobotDeployment.
        :type failure_code: DeploymentJobErrorCode
        """

        self._failure_code = failure_code
