openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: This section provides documentation for the AWS RoboMaker API operations.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS RoboMaker
  version: 2018-06-29
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: robomaker
  x-aws-signingName: robomaker
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/robomaker-2018-06-29.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/robomaker/
servers:
- description: The RoboMaker multi-region endpoint
  url: "http://robomaker.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The RoboMaker multi-region endpoint
  url: "https://robomaker.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The RoboMaker endpoint for China (Beijing) and China (Ningxia)
  url: "http://robomaker.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The RoboMaker endpoint for China (Beijing) and China (Ningxia)
  url: "https://robomaker.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /batchDeleteWorlds:
    post:
      description: Deletes one or more worlds in a batch operation.
      operationId: batch_delete_worlds
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteWorlds_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteWorldsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /batchDescribeSimulationJob:
    post:
      description: Describes one or more simulation jobs.
      operationId: batch_describe_simulation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDescribeSimulationJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDescribeSimulationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /cancelDeploymentJob:
    post:
      deprecated: true
      description: "<p>Cancels the specified deployment job.</p> <important> <p>This\
        \ API will no longer be supported as of May 2, 2022. Use it to remove resources\
        \ that were created for Deployment Service.</p> </important>"
      operationId: cancel_deployment_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelDeploymentJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDeploymentJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /cancelSimulationJob:
    post:
      description: Cancels the specified simulation job.
      operationId: cancel_simulation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSimulationJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSimulationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /cancelSimulationJobBatch:
    post:
      description: "Cancels a simulation job batch. When you cancel a simulation job\
        \ batch, you are also cancelling all of the active simulation jobs created\
        \ as part of the batch. "
      operationId: cancel_simulation_job_batch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSimulationJobBatch_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSimulationJobBatchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /cancelWorldExportJob:
    post:
      description: Cancels the specified export job.
      operationId: cancel_world_export_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelWorldExportJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelWorldExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /cancelWorldGenerationJob:
    post:
      description: Cancels the specified world generator job.
      operationId: cancel_world_generation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelWorldGenerationJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelWorldGenerationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createDeploymentJob:
    post:
      deprecated: true
      description: "<p>Deploys a specific version of a robot application to robots\
        \ in a fleet.</p> <important> <p>This API is no longer supported and will\
        \ throw an error if used.</p> </important> <p>The robot application must have\
        \ a numbered <code>applicationVersion</code> for consistency reasons. To create\
        \ a new version, use <code>CreateRobotApplicationVersion</code> or see <a\
        \ href=\"https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html\"\
        >Creating a Robot Application Version</a>. </p> <note> <p>After 90 days, deployment\
        \ jobs expire and will be deleted. They will no longer be accessible. </p>\
        \ </note>"
      operationId: create_deployment_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeploymentJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeploymentJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentDeploymentException'
          description: ConcurrentDeploymentException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createFleet:
    post:
      deprecated: true
      description: "<p>Creates a fleet, a logical group of robots running the same\
        \ robot application.</p> <important> <p>This API is no longer supported and\
        \ will throw an error if used.</p> </important>"
      operationId: create_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFleet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFleetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createRobot:
    post:
      deprecated: true
      description: <p>Creates a robot.</p> <important> <p>This API is no longer supported
        and will throw an error if used.</p> </important>
      operationId: create_robot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRobot_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRobotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createRobotApplication:
    post:
      description: 'Creates a robot application. '
      operationId: create_robot_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRobotApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRobotApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createRobotApplicationVersion:
    post:
      description: Creates a version of a robot application.
      operationId: create_robot_application_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRobotApplicationVersion_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRobotApplicationVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createSimulationApplication:
    post:
      description: Creates a simulation application.
      operationId: create_simulation_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSimulationApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSimulationApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createSimulationApplicationVersion:
    post:
      description: Creates a simulation application with a specific revision id.
      operationId: create_simulation_application_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSimulationApplicationVersion_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSimulationApplicationVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createSimulationJob:
    post:
      description: "<p>Creates a simulation job.</p> <note> <p>After 90 days, simulation\
        \ jobs expire and will be deleted. They will no longer be accessible. </p>\
        \ </note>"
      operationId: create_simulation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSimulationJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSimulationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createWorldExportJob:
    post:
      description: Creates a world export job.
      operationId: create_world_export_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorldExportJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorldExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createWorldGenerationJob:
    post:
      description: Creates worlds using the specified template.
      operationId: create_world_generation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorldGenerationJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorldGenerationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createWorldTemplate:
    post:
      description: Creates a world template.
      operationId: create_world_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorldTemplate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorldTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /deleteFleet:
    post:
      deprecated: true
      description: "<p>Deletes a fleet.</p> <important> <p>This API will no longer\
        \ be supported as of May 2, 2022. Use it to remove resources that were created\
        \ for Deployment Service.</p> </important>"
      operationId: delete_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFleet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFleetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /deleteRobot:
    post:
      deprecated: true
      description: "<p>Deletes a robot.</p> <important> <p>This API will no longer\
        \ be supported as of May 2, 2022. Use it to remove resources that were created\
        \ for Deployment Service.</p> </important>"
      operationId: delete_robot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRobot_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRobotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /deleteRobotApplication:
    post:
      description: Deletes a robot application.
      operationId: delete_robot_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRobotApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRobotApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /deleteSimulationApplication:
    post:
      description: Deletes a simulation application.
      operationId: delete_simulation_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSimulationApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSimulationApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /deleteWorldTemplate:
    post:
      description: Deletes a world template.
      operationId: delete_world_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorldTemplate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorldTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /deregisterRobot:
    post:
      deprecated: true
      description: "<p>Deregisters a robot.</p> <important> <p>This API will no longer\
        \ be supported as of May 2, 2022. Use it to remove resources that were created\
        \ for Deployment Service.</p> </important>"
      operationId: deregister_robot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterRobot_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterRobotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeDeploymentJob:
    post:
      deprecated: true
      description: "<p>Describes a deployment job.</p> <important> <p>This API will\
        \ no longer be supported as of May 2, 2022. Use it to remove resources that\
        \ were created for Deployment Service.</p> </important>"
      operationId: describe_deployment_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDeploymentJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeploymentJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeFleet:
    post:
      deprecated: true
      description: "<p>Describes a fleet.</p> <important> <p>This API will no longer\
        \ be supported as of May 2, 2022. Use it to remove resources that were created\
        \ for Deployment Service.</p> </important>"
      operationId: describe_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFleet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFleetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeRobot:
    post:
      deprecated: true
      description: "<p>Describes a robot.</p> <important> <p>This API will no longer\
        \ be supported as of May 2, 2022. Use it to remove resources that were created\
        \ for Deployment Service.</p> </important>"
      operationId: describe_robot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRobot_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRobotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeRobotApplication:
    post:
      description: Describes a robot application.
      operationId: describe_robot_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRobotApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRobotApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeSimulationApplication:
    post:
      description: Describes a simulation application.
      operationId: describe_simulation_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSimulationApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSimulationApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeSimulationJob:
    post:
      description: Describes a simulation job.
      operationId: describe_simulation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSimulationJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSimulationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeSimulationJobBatch:
    post:
      description: Describes a simulation job batch.
      operationId: describe_simulation_job_batch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSimulationJobBatch_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSimulationJobBatchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeWorld:
    post:
      description: Describes a world.
      operationId: describe_world
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorld_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorldResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeWorldExportJob:
    post:
      description: Describes a world export job.
      operationId: describe_world_export_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorldExportJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorldExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeWorldGenerationJob:
    post:
      description: Describes a world generation job.
      operationId: describe_world_generation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorldGenerationJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorldGenerationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeWorldTemplate:
    post:
      description: Describes a world template.
      operationId: describe_world_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorldTemplate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorldTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /getWorldTemplateBody:
    post:
      description: Gets the world template body.
      operationId: get_world_template_body
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorldTemplateBody_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorldTemplateBodyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listDeploymentJobs:
    post:
      deprecated: true
      description: "<p>Returns a list of deployment jobs for a fleet. You can optionally\
        \ provide filters to retrieve specific deployment jobs.</p> <important> <p>This\
        \ API will no longer be supported as of May 2, 2022. Use it to remove resources\
        \ that were created for Deployment Service.</p> </important>"
      operationId: list_deployment_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeploymentJobs_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeploymentJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listFleets:
    post:
      deprecated: true
      description: "<p>Returns a list of fleets. You can optionally provide filters\
        \ to retrieve specific fleets.</p> <important> <p>This API will no longer\
        \ be supported as of May 2, 2022. Use it to remove resources that were created\
        \ for Deployment Service.</p> </important>"
      operationId: list_fleets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFleets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listRobotApplications:
    post:
      description: Returns a list of robot application. You can optionally provide
        filters to retrieve specific robot applications.
      operationId: list_robot_applications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRobotApplications_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRobotApplicationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listRobots:
    post:
      deprecated: true
      description: "<p>Returns a list of robots. You can optionally provide filters\
        \ to retrieve specific robots.</p> <important> <p>This API will no longer\
        \ be supported as of May 2, 2022. Use it to remove resources that were created\
        \ for Deployment Service.</p> </important>"
      operationId: list_robots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRobots_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRobotsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listSimulationApplications:
    post:
      description: 'Returns a list of simulation applications. You can optionally
        provide filters to retrieve specific simulation applications. '
      operationId: list_simulation_applications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSimulationApplications_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSimulationApplicationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listSimulationJobBatches:
    post:
      description: 'Returns a list simulation job batches. You can optionally provide
        filters to retrieve specific simulation batch jobs. '
      operationId: list_simulation_job_batches
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSimulationJobBatches_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSimulationJobBatchesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listSimulationJobs:
    post:
      description: 'Returns a list of simulation jobs. You can optionally provide
        filters to retrieve specific simulation jobs. '
      operationId: list_simulation_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSimulationJobs_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSimulationJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listWorldExportJobs:
    post:
      description: Lists world export jobs.
      operationId: list_world_export_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorldExportJobs_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorldExportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listWorldGenerationJobs:
    post:
      description: Lists world generator jobs.
      operationId: list_world_generation_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorldGenerationJobs_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorldGenerationJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listWorldTemplates:
    post:
      description: Lists world templates.
      operationId: list_world_templates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorldTemplates_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorldTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listWorlds:
    post:
      description: Lists worlds.
      operationId: list_worlds
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorlds_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorldsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /registerRobot:
    post:
      deprecated: true
      description: <p>Registers a robot with a fleet.</p> <important> <p>This API
        is no longer supported and will throw an error if used.</p> </important>
      operationId: register_robot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterRobot_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterRobotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /restartSimulationJob:
    post:
      description: Restarts a running simulation job.
      operationId: restart_simulation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartSimulationJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestartSimulationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /startSimulationJobBatch:
    post:
      description: 'Starts a new simulation job batch. The batch is defined using
        one or more <code>SimulationJobRequest</code> objects. '
      operationId: start_simulation_job_batch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSimulationJobBatch_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSimulationJobBatchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /syncDeploymentJob:
    post:
      deprecated: true
      description: "<p>Syncrhonizes robots in a fleet to the latest deployment. This\
        \ is helpful if robots were added after a deployment.</p> <important> <p>This\
        \ API will no longer be supported as of May 2, 2022. Use it to remove resources\
        \ that were created for Deployment Service.</p> </important>"
      operationId: sync_deployment_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncDeploymentJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncDeploymentJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentDeploymentException'
          description: ConcurrentDeploymentException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}:
    get:
      description: Lists all tags on a AWS RoboMaker resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The AWS RoboMaker Amazon Resource Name (ARN) with tags to be
          listed.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Adds or edits tags for a AWS RoboMaker resource.</p> <p>Each\
        \ tag consists of a tag key and a tag value. Tag keys and tag values are both\
        \ required, but tag values can be empty strings. </p> <p>For information about\
        \ the rules that apply to tag keys and tag values, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\"\
        >User-Defined Tag Restrictions</a> in the <i>AWS Billing and Cost Management\
        \ User Guide</i>. </p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource
          you are tagging.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: "<p>Removes the specified tags from the specified AWS RoboMaker\
        \ resource.</p> <p>To remove a tag, specify the tag key. To change the tag\
        \ value of an existing tag key, use <a href=\"https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html\"\
        > <code>TagResource</code> </a>. </p>"
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource
          you are removing tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          type: string
        style: simple
      - description: A map that contains tag keys and tag values that will be unattached
          from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /updateRobotApplication:
    post:
      description: Updates a robot application.
      operationId: update_robot_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRobotApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRobotApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /updateSimulationApplication:
    post:
      description: Updates a simulation application.
      operationId: update_simulation_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSimulationApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSimulationApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /updateWorldTemplate:
    post:
      description: Updates a world template.
      operationId: update_world_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorldTemplate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorldTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchDeleteWorldsResponse:
      example:
        unprocessedWorlds: ""
      properties:
        unprocessedWorlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: A list of unprocessed worlds associated with the call. These
              worlds were not deleted.
          title: unprocessedWorlds
      title: BatchDeleteWorldsResponse
      type: object
    Arn:
      maxLength: 1224
      minLength: 1
      pattern: arn:.*
      title: Arn
      type: string
    InvalidParameterException: {}
    ThrottlingException: {}
    InternalServerException: {}
    BatchDescribeSimulationJobResponse:
      example:
        jobs: ""
        unprocessedJobs: ""
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/SimulationJobs'
          - description: A list of simulation jobs.
          title: jobs
        unprocessedJobs:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: A list of unprocessed simulation job Amazon Resource Names
              (ARNs).
          title: unprocessedJobs
      title: BatchDescribeSimulationJobResponse
      type: object
    ResourceNotFoundException: {}
    CancelDeploymentJobResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      properties: {}
      type: object
    CancelSimulationJobResponse:
      properties: {}
      type: object
    CancelSimulationJobBatchResponse:
      properties: {}
      type: object
    CancelWorldExportJobResponse:
      properties: {}
      type: object
    CancelWorldGenerationJobResponse:
      properties: {}
      type: object
    CreateDeploymentJobResponse:
      deprecated: true
      description: "AWS RoboMaker is unable to process this request as the support\
        \ for the AWS RoboMaker application deployment feature has ended. For additional\
        \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        deploymentConfig:
          robotDeploymentTimeoutInSeconds: ""
          failureThresholdPercentage: ""
          concurrentDeploymentPercentage: ""
          downloadConditionFile:
            bucket: ""
            etag: ""
            key: ""
        fleet: ""
        createdAt: ""
        deploymentApplicationConfigs: ""
        failureCode: ""
        failureReason: ""
        arn: ""
        status: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the deployment job.
          title: arn
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The target fleet for the deployment job.
          title: fleet
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The status of the deployment job.
          title: status
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          - description: The deployment application configuration.
          title: deploymentApplicationConfigs
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The failure reason of the deployment job if it failed.
          title: failureReason
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          - description: "<p>The failure code of the simulation job if it failed:</p>\
              \ <dl> <dt>BadPermissionError</dt> <dd> <p>AWS Greengrass requires a\
              \ service-level role permission to access other services. The role must\
              \ include the <a href=\"https://console.aws.amazon.com/iam/home?#/policies/arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy$jsonEditor\"\
              > <code>AWSGreengrassResourceAccessRolePolicy</code> managed policy</a>.\
              \ </p> </dd> <dt>ExtractingBundleFailure</dt> <dd> <p>The robot application\
              \ could not be extracted from the bundle.</p> </dd> <dt>FailureThresholdBreached</dt>\
              \ <dd> <p>The percentage of robots that could not be updated exceeded\
              \ the percentage set for the deployment.</p> </dd> <dt>GreengrassDeploymentFailed</dt>\
              \ <dd> <p>The robot application could not be deployed to the robot.</p>\
              \ </dd> <dt>GreengrassGroupVersionDoesNotExist</dt> <dd> <p>The AWS\
              \ Greengrass group or version associated with a robot is missing.</p>\
              \ </dd> <dt>InternalServerError</dt> <dd> <p>An internal error has occurred.\
              \ Retry your request, but if the problem persists, contact us with details.</p>\
              \ </dd> <dt>MissingRobotApplicationArchitecture</dt> <dd> <p>The robot\
              \ application does not have a source that matches the architecture of\
              \ the robot.</p> </dd> <dt>MissingRobotDeploymentResource</dt> <dd>\
              \ <p>One or more of the resources specified for the robot application\
              \ are missing. For example, does the robot application have the correct\
              \ launch package and launch file?</p> </dd> <dt>PostLaunchFileFailure</dt>\
              \ <dd> <p>The post-launch script failed.</p> </dd> <dt>PreLaunchFileFailure</dt>\
              \ <dd> <p>The pre-launch script failed.</p> </dd> <dt>ResourceNotFound</dt>\
              \ <dd> <p>One or more deployment resources are missing. For example,\
              \ do robot application source bundles still exist? </p> </dd> <dt>RobotDeploymentNoResponse</dt>\
              \ <dd> <p>There is no response from the robot. It might not be powered\
              \ on or connected to the internet.</p> </dd> </dl>"
          title: failureCode
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the fleet\
              \ was created."
          title: createdAt
        deploymentConfig:
          $ref: '#/components/schemas/CreateDeploymentJobResponse_deploymentConfig'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the deployment job.
          title: tags
      title: CreateDeploymentJobResponse
      type: object
    Percentage:
      maximum: 100
      minimum: 1
      type: integer
    DeploymentTimeout:
      type: integer
    S3Object:
      description: Information about an S3 object.
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The bucket containing the object.
          title: bucket
        key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The key of the object.
          title: key
        etag:
          allOf:
          - $ref: '#/components/schemas/S3Etag'
          - description: The etag of the object.
          title: etag
      required:
      - bucket
      - key
      title: S3Object
      type: object
    DeploymentApplicationConfig:
      description: Information about a deployment application configuration.
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot application.
          title: application
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/DeploymentVersion'
          - description: The version of the application.
          title: applicationVersion
        launchConfig:
          $ref: '#/components/schemas/DeploymentApplicationConfig_launchConfig'
      required:
      - application
      - applicationVersion
      - launchConfig
      title: DeploymentApplicationConfig
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "[a-zA-Z0-9 _.\\-\\/+=:]*"
      title: TagValue
      type: string
    LimitExceededException: {}
    ConcurrentDeploymentException: {}
    IdempotentParameterMismatchException: {}
    CreateFleetResponse:
      deprecated: true
      description: "AWS RoboMaker is unable to process this request as the support\
        \ for the AWS RoboMaker application deployment feature has ended. For additional\
        \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        createdAt: ""
        name: ""
        arn: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the fleet.
          title: name
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the fleet\
              \ was created."
          title: createdAt
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the fleet.
          title: tags
      title: CreateFleetResponse
      type: object
    CreateRobotResponse:
      deprecated: true
      description: "AWS RoboMaker is unable to process this request as the support\
        \ for the AWS RoboMaker application deployment feature has ended. For additional\
        \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        createdAt: ""
        name: ""
        arn: ""
        greengrassGroupId: ""
        architecture: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the robot.
          title: name
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the robot\
              \ was created."
          title: createdAt
        greengrassGroupId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The Amazon Resource Name (ARN) of the Greengrass group associated
              with the robot.
          title: greengrassGroupId
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The target architecture of the robot.
          title: architecture
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the robot.
          title: tags
      title: CreateRobotResponse
      type: object
    ResourceAlreadyExistsException: {}
    CreateRobotApplicationResponse:
      example:
        revisionId: ""
        environment:
          uri: ""
        sources: ""
        lastUpdatedAt: ""
        name: ""
        arn: ""
        version: ""
        robotSoftwareSuite:
          name: ""
          version: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot application.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the robot application.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the robot application.
          title: version
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          - description: The sources of the robot application.
          title: sources
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplicationResponse_robotSoftwareSuite'
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the robot\
              \ application was last updated."
          title: lastUpdatedAt
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision id of the robot application.
          title: revisionId
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the robot application.
          title: tags
        environment:
          $ref: '#/components/schemas/CreateRobotApplicationResponse_environment'
      title: CreateRobotApplicationResponse
      type: object
    SourceConfig:
      description: Information about a source configuration.
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The Amazon S3 bucket name.
          title: s3Bucket
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The s3 object key.
          title: s3Key
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The target processor architecture for the application.
          title: architecture
      title: SourceConfig
      type: object
    RobotSoftwareSuiteType:
      enum:
      - ROS
      - ROS2
      - General
      title: RobotSoftwareSuiteType
      type: string
    RobotSoftwareSuiteVersionType:
      enum:
      - Kinetic
      - Melodic
      - Dashing
      - Foxy
      title: RobotSoftwareSuiteVersionType
      type: string
    RepositoryUrl:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    CreateRobotApplicationVersionResponse:
      example:
        revisionId: ""
        environment:
          uri: ""
        sources: ""
        lastUpdatedAt: ""
        name: ""
        arn: ""
        version: ""
        robotSoftwareSuite:
          name: ""
          version: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot application.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the robot application.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the robot application.
          title: version
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          - description: The sources of the robot application.
          title: sources
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplicationResponse_robotSoftwareSuite'
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the robot\
              \ application was last updated."
          title: lastUpdatedAt
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision id of the robot application.
          title: revisionId
        environment:
          $ref: '#/components/schemas/CreateRobotApplicationVersionResponse_environment'
      title: CreateRobotApplicationVersionResponse
      type: object
    S3Etag:
      title: S3Etag
      type: string
    CreateSimulationApplicationResponse:
      example:
        revisionId: ""
        environment:
          uri: ""
        sources: ""
        simulationSoftwareSuite:
          name: ""
          version: ""
        lastUpdatedAt: ""
        name: ""
        renderingEngine:
          name: ""
          version: ""
        arn: ""
        version: ""
        robotSoftwareSuite:
          name: ""
          version: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the simulation application.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the simulation application.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the simulation application.
          title: version
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          - description: The sources of the simulation application.
          title: sources
        simulationSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_simulationSoftwareSuite'
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_robotSoftwareSuite'
        renderingEngine:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_renderingEngine'
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ application was last updated."
          title: lastUpdatedAt
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision id of the simulation application.
          title: revisionId
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the simulation application.
          title: tags
        environment:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_environment'
      title: CreateSimulationApplicationResponse
      type: object
    SimulationSoftwareSuiteType:
      enum:
      - Gazebo
      - RosbagPlay
      - SimulationRuntime
      title: SimulationSoftwareSuiteType
      type: string
    SimulationSoftwareSuiteVersionType:
      maxLength: 1024
      minLength: 0
      pattern: 7|9|11|Kinetic|Melodic|Dashing|Foxy
      type: string
    RenderingEngineType:
      enum:
      - OGRE
      title: RenderingEngineType
      type: string
    RenderingEngineVersionType:
      maxLength: 4
      minLength: 1
      pattern: 1.x
      type: string
    CreateSimulationApplicationVersionResponse:
      example:
        revisionId: ""
        environment:
          uri: ""
        sources: ""
        simulationSoftwareSuite:
          name: ""
          version: ""
        lastUpdatedAt: ""
        name: ""
        renderingEngine:
          name: ""
          version: ""
        arn: ""
        version: ""
        robotSoftwareSuite:
          name: ""
          version: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the simulation application.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the simulation application.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the simulation application.
          title: version
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          - description: The sources of the simulation application.
          title: sources
        simulationSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_simulationSoftwareSuite'
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_robotSoftwareSuite'
        renderingEngine:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_renderingEngine'
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ application was last updated."
          title: lastUpdatedAt
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision ID of the simulation application.
          title: revisionId
        environment:
          $ref: '#/components/schemas/CreateSimulationApplicationVersionResponse_environment'
      title: CreateSimulationApplicationVersionResponse
      type: object
    CreateSimulationJobResponse:
      example:
        outputLocation:
          s3Prefix: ""
          s3Bucket: ""
        failureCode: ""
        lastUpdatedAt: ""
        maxJobDurationInSeconds: ""
        tags: ""
        simulationTimeMillis: ""
        iamRole: ""
        compute:
          computeType: ""
          simulationUnitLimit: ""
          gpuUnitLimit: ""
        failureBehavior: ""
        clientRequestToken: ""
        lastStartedAt: ""
        loggingConfig:
          recordAllRosTopics: ""
        vpcConfig:
          assignPublicIp: ""
          vpcId: ""
          subnets: ""
          securityGroups: ""
        robotApplications: ""
        arn: ""
        dataSources: ""
        status: ""
        simulationApplications: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the simulation job.
          title: arn
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobStatus'
          - description: The status of the simulation job.
          title: status
        lastStartedAt:
          allOf:
          - $ref: '#/components/schemas/LastStartedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job was last started."
          title: lastStartedAt
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job was last updated."
          title: lastUpdatedAt
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          - description: the failure behavior for the simulation job.
          title: failureBehavior
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobErrorCode'
          - description: "<p>The failure code of the simulation job if it failed:</p>\
              \ <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p>\
              \ </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited\
              \ abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p>\
              \ Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt>\
              \ <dd> <p>Robot application bundle could not be downloaded.</p> </dd>\
              \ <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application\
              \ bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt>\
              \ <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p>\
              \ </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish\
              \ logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt>\
              \ <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt>\
              \ <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt>\
              \ <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt>\
              \ <dd> <p>Robot bundle cannot be extracted (invalid format, bundling\
              \ error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt>\
              \ <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling\
              \ error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt>\
              \ <dd> <p>Etag for RobotApplication does not match value during version\
              \ creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt>\
              \ <dd> <p>Etag for SimulationApplication does not match value during\
              \ version creation.</p> </dd> </dl>"
          title: failureCode
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        outputLocation:
          $ref: '#/components/schemas/CreateSimulationJobResponse_outputLocation'
        loggingConfig:
          $ref: '#/components/schemas/CreateSimulationJobResponse_loggingConfig'
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          - description: 'The maximum simulation job duration in seconds. '
          title: maxJobDurationInSeconds
        simulationTimeMillis:
          allOf:
          - $ref: '#/components/schemas/SimulationTimeMillis'
          - description: The simulation job execution duration in milliseconds.
          title: simulationTimeMillis
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: The IAM role that allows the simulation job to call the AWS
              APIs that are specified in its associated policies on your behalf.
          title: iamRole
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          - description: The robot application used by the simulation job.
          title: robotApplications
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          - description: The simulation application used by the simulation job.
          title: simulationApplications
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          - description: The data sources for the simulation job.
          title: dataSources
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the simulation job.
          title: tags
        vpcConfig:
          $ref: '#/components/schemas/CreateSimulationJobResponse_vpcConfig'
        compute:
          $ref: '#/components/schemas/CreateSimulationJobResponse_compute'
      title: CreateSimulationJobResponse
      type: object
    S3Bucket:
      maxLength: 63
      minLength: 3
      pattern: "[a-z0-9][a-z0-9.\\-]*[a-z0-9]"
      type: string
    S3Key:
      maxLength: 1024
      minLength: 1
      pattern: .*
      type: string
    BoxedBoolean:
      type: boolean
    RobotApplicationConfig:
      description: Application configuration information for a robot.
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The application information for the robot application.
          title: application
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the robot application.
          title: applicationVersion
        launchConfig:
          $ref: '#/components/schemas/RobotApplicationConfig_launchConfig'
        uploadConfigurations:
          allOf:
          - $ref: '#/components/schemas/UploadConfigurations'
          - description: The upload configurations for the robot application.
          title: uploadConfigurations
        useDefaultUploadConfigurations:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - deprecated: true
            description: "<p>A Boolean indicating whether to use default upload configurations.\
              \ By default, <code>.ros</code> and <code>.gazebo</code> files are uploaded\
              \ when the application terminates and all ROS topics will be recorded.</p>\
              \ <p>If you set this value, you must specify an <code>outputLocation</code>.</p>\
              \ <important> <p>This API is no longer supported and will throw an error\
              \ if used.</p> </important>AWS RoboMaker is ending support for ROS software\
              \ suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html."
          title: useDefaultUploadConfigurations
        tools:
          allOf:
          - $ref: '#/components/schemas/Tools'
          - description: Information about tools configured for the robot application.
          title: tools
        useDefaultTools:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - deprecated: true
            description: "<p>A Boolean indicating whether to use default robot application\
              \ tools. The default tools are rviz, rqt, terminal and rosbag record.\
              \ The default is <code>False</code>.</p> <important> <p>This API is\
              \ no longer supported and will throw an error if used.</p> </important>AWS\
              \ RoboMaker is ending support for ROS software suite. For additional\
              \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html."
          title: useDefaultTools
      required:
      - application
      - launchConfig
      title: RobotApplicationConfig
      type: object
    SimulationApplicationConfig:
      description: Information about a simulation application configuration.
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The application information for the simulation application.
          title: application
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the simulation application.
          title: applicationVersion
        launchConfig:
          $ref: '#/components/schemas/SimulationApplicationConfig_launchConfig'
        uploadConfigurations:
          allOf:
          - $ref: '#/components/schemas/UploadConfigurations'
          - description: Information about upload configurations for the simulation
              application.
          title: uploadConfigurations
        worldConfigs:
          allOf:
          - $ref: '#/components/schemas/WorldConfigs'
          - description: A list of world configurations.
          title: worldConfigs
        useDefaultUploadConfigurations:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - deprecated: true
            description: "<p>A Boolean indicating whether to use default upload configurations.\
              \ By default, <code>.ros</code> and <code>.gazebo</code> files are uploaded\
              \ when the application terminates and all ROS topics will be recorded.</p>\
              \ <p>If you set this value, you must specify an <code>outputLocation</code>.</p>\
              \ <important> <p>This API is no longer supported and will throw an error\
              \ if used.</p> </important>AWS RoboMaker is ending support for ROS software\
              \ suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html."
          title: useDefaultUploadConfigurations
        tools:
          allOf:
          - $ref: '#/components/schemas/Tools'
          - description: Information about tools configured for the simulation application.
          title: tools
        useDefaultTools:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - deprecated: true
            description: "<p>A Boolean indicating whether to use default simulation\
              \ application tools. The default tools are rviz, rqt, terminal and rosbag\
              \ record. The default is <code>False</code>.</p> <important> <p>This\
              \ API is no longer supported and will throw an error if used.</p> </important>AWS\
              \ RoboMaker is ending support for ROS software suite. For additional\
              \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html."
          title: useDefaultTools
      required:
      - application
      - launchConfig
      title: SimulationApplicationConfig
      type: object
    DataSourceConfig:
      description: Information about a data source.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the data source.
          title: name
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The S3 bucket where the data files are located.
          title: s3Bucket
        s3Keys:
          allOf:
          - $ref: '#/components/schemas/S3KeysOrPrefixes'
          - description: The list of S3 keys identifying the data source files.
          title: s3Keys
        type:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          - description: "<p>The data type for the data source that you're using for\
              \ your container image or simulation job. You can use this field to\
              \ specify whether your data source is an Archive, an Amazon S3 prefix,\
              \ or a file.</p> <p>If you don't specify a field, the default value\
              \ is <code>File</code>.</p>"
          title: type
        destination:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: "<p>The location where your files are mounted in the container\
              \ image.</p> <p>If you've specified the <code>type</code> of the data\
              \ source as an <code>Archive</code>, you must provide an Amazon S3 object\
              \ key to your archive. The object key must point to either a <code>.zip</code>\
              \ or <code>.tar.gz</code> file.</p> <p>If you've specified the <code>type</code>\
              \ of the data source as a <code>Prefix</code>, you provide the Amazon\
              \ S3 prefix that points to the files that you are using for your data\
              \ source.</p> <p>If you've specified the <code>type</code> of the data\
              \ source as a <code>File</code>, you provide the Amazon S3 path to the\
              \ file that you're using as your data source.</p>"
          title: destination
      required:
      - name
      - s3Bucket
      - s3Keys
      title: DataSourceConfig
      type: object
    Subnets:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 16
      minItems: 1
      type: array
    SecurityGroups:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 5
      minItems: 1
      type: array
    Boolean:
      type: boolean
    SimulationUnit:
      maximum: 15
      minimum: 1
      type: integer
    ComputeType:
      enum:
      - CPU
      - GPU_AND_CPU
      title: ComputeType
      type: string
    GPUUnit:
      maximum: 1
      minimum: 0
      type: integer
    ServiceUnavailableException: {}
    CreateWorldExportJobResponse:
      example:
        outputLocation:
          s3Prefix: ""
          s3Bucket: ""
        iamRole: ""
        createdAt: ""
        failureCode: ""
        clientRequestToken: ""
        arn: ""
        status: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the world export job.
          title: arn
        status:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobStatus'
          - description: <p>The status of the world export job.</p> <dl> <dt>Pending</dt>
              <dd> <p>The world export job request is pending.</p> </dd> <dt>Running</dt>
              <dd> <p>The world export job is running. </p> </dd> <dt>Completed</dt>
              <dd> <p>The world export job completed. </p> </dd> <dt>Failed</dt> <dd>
              <p>The world export job failed. See <code>failureCode</code> for more
              information. </p> </dd> <dt>Canceled</dt> <dd> <p>The world export job
              was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world export
              job is being cancelled.</p> </dd> </dl>
          title: status
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ export job was created."
          title: createdAt
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobErrorCode'
          - description: "<p>The failure code of the world export job if it failed:</p>\
              \ <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p>\
              \ </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds\
              \ the maximum number allowed, or the number of concurrent stream requests\
              \ exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt>\
              \ <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt>\
              \ <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt>\
              \ <dd> <p>An input parameter in the request is not valid.</p> </dd>\
              \ <dt>AllWorldGenerationFailed</dt> <dd> <p>All of the worlds in the\
              \ world generation job failed. This can happen if your <code>worldCount</code>\
              \ is greater than 50 or less than 1. </p> </dd> </dl> <p>For more information\
              \ about troubleshooting WorldForge, see <a href=\"https://docs.aws.amazon.com/robomaker/latest/dg/troubleshooting-worldforge.html\"\
              >Troubleshooting Simulation WorldForge</a>. </p>"
          title: failureCode
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: 'The IAM role that the world export process uses to access
              the Amazon S3 bucket and put the export. '
          title: iamRole
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world export job.
          title: tags
      title: CreateWorldExportJobResponse
      type: object
    CreateWorldGenerationJobResponse:
      example:
        template: ""
        createdAt: ""
        worldCount:
          interiorCountPerFloorplan: ""
          floorplanCount: ""
        failureCode: ""
        clientRequestToken: ""
        worldTags: ""
        arn: ""
        status: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the world generator job.
          title: arn
        status:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobStatus'
          - description: <p>The status of the world generator job.</p> <dl> <dt>Pending</dt>
              <dd> <p>The world generator job request is pending.</p> </dd> <dt>Running</dt>
              <dd> <p>The world generator job is running. </p> </dd> <dt>Completed</dt>
              <dd> <p>The world generator job completed. </p> </dd> <dt>Failed</dt>
              <dd> <p>The world generator job failed. See <code>failureCode</code>
              for more information. </p> </dd> <dt>PartialFailed</dt> <dd> <p>Some
              worlds did not generate.</p> </dd> <dt>Canceled</dt> <dd> <p>The world
              generator job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The
              world generator job is being cancelled.</p> </dd> </dl>
          title: status
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ generator job was created."
          title: createdAt
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobErrorCode'
          - description: "<p>The failure code of the world generator job if it failed:</p>\
              \ <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p>\
              \ </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds\
              \ the maximum number allowed, or the number of concurrent stream requests\
              \ exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt>\
              \ <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt>\
              \ <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt>\
              \ <dd> <p>An input parameter in the request is not valid.</p> </dd>\
              \ </dl>"
          title: failureCode
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template.
          title: template
        worldCount:
          $ref: '#/components/schemas/CreateWorldGenerationJobResponse_worldCount'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world generator job.
          title: tags
        worldTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the generated worlds.
          title: worldTags
      title: CreateWorldGenerationJobResponse
      type: object
    FloorplanCount:
      type: integer
    InteriorCountPerFloorplan:
      type: integer
    CreateWorldTemplateResponse:
      example:
        createdAt: ""
        clientRequestToken: ""
        name: ""
        arn: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the world template.
          title: arn
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ template was created."
          title: createdAt
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          - description: The name of the world template.
          title: name
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world template.
          title: tags
      title: CreateWorldTemplateResponse
      type: object
    DeleteFleetResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      properties: {}
      type: object
    DeleteRobotResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      properties: {}
      type: object
    DeleteRobotApplicationResponse:
      properties: {}
      type: object
    DeleteSimulationApplicationResponse:
      properties: {}
      type: object
    DeleteWorldTemplateResponse:
      properties: {}
      type: object
    DeregisterRobotResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        robot: ""
        fleet: ""
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: fleet
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot.
          title: robot
      title: DeregisterRobotResponse
      type: object
    DescribeDeploymentJobResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        deploymentConfig:
          robotDeploymentTimeoutInSeconds: ""
          failureThresholdPercentage: ""
          concurrentDeploymentPercentage: ""
          downloadConditionFile:
            bucket: ""
            etag: ""
            key: ""
        fleet: ""
        createdAt: ""
        deploymentApplicationConfigs: ""
        failureCode: ""
        failureReason: ""
        arn: ""
        robotDeploymentSummary: ""
        status: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the deployment job.
          title: arn
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: fleet
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The status of the deployment job.
          title: status
        deploymentConfig:
          $ref: '#/components/schemas/CreateDeploymentJobResponse_deploymentConfig'
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          - description: The deployment application configuration.
          title: deploymentApplicationConfigs
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A short description of the reason why the deployment job
              failed.
          title: failureReason
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          - description: The deployment job failure code.
          title: failureCode
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the deployment\
              \ job was created."
          title: createdAt
        robotDeploymentSummary:
          allOf:
          - $ref: '#/components/schemas/RobotDeploymentSummary'
          - description: A list of robot deployment summaries.
          title: robotDeploymentSummary
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the specified deployment job.
          title: tags
      title: DescribeDeploymentJobResponse
      type: object
    DescribeFleetResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        createdAt: ""
        lastDeploymentTime: ""
        name: ""
        lastDeploymentJob: ""
        robots: ""
        arn: ""
        lastDeploymentStatus: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the fleet.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: arn
        robots:
          allOf:
          - $ref: '#/components/schemas/Robots'
          - description: A list of robots.
          title: robots
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the fleet\
              \ was created."
          title: createdAt
        lastDeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The status of the last deployment.
          title: lastDeploymentStatus
        lastDeploymentJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the last deployment job.
          title: lastDeploymentJob
        lastDeploymentTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: The time of the last deployment.
          title: lastDeploymentTime
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the specified fleet.
          title: tags
      title: DescribeFleetResponse
      type: object
    DescribeRobotResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        createdAt: ""
        lastDeploymentTime: ""
        name: ""
        fleetArn: ""
        lastDeploymentJob: ""
        arn: ""
        greengrassGroupId: ""
        status: ""
        architecture: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the robot.
          title: name
        fleetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: fleetArn
        status:
          allOf:
          - $ref: '#/components/schemas/RobotStatus'
          - description: The status of the fleet.
          title: status
        greengrassGroupId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The Greengrass group id.
          title: greengrassGroupId
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the robot\
              \ was created."
          title: createdAt
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The target architecture of the robot application.
          title: architecture
        lastDeploymentJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the last deployment job.
          title: lastDeploymentJob
        lastDeploymentTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: The time of the last deployment job.
          title: lastDeploymentTime
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the specified robot.
          title: tags
      title: DescribeRobotResponse
      type: object
    DescribeRobotApplicationResponse:
      example:
        revisionId: ""
        environment:
          uri: ""
        sources: ""
        lastUpdatedAt: ""
        name: ""
        arn: ""
        version: ""
        robotSoftwareSuite:
          name: ""
          version: ""
        tags: ""
        imageDigest: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot application.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the robot application.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the robot application.
          title: version
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          - description: The sources of the robot application.
          title: sources
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplicationResponse_robotSoftwareSuite'
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision id of the robot application.
          title: revisionId
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the robot\
              \ application was last updated."
          title: lastUpdatedAt
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the specified robot application.
          title: tags
        environment:
          $ref: '#/components/schemas/DescribeRobotApplicationResponse_environment'
        imageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          - description: A SHA256 identifier for the Docker image that you use for
              your robot application.
          title: imageDigest
      title: DescribeRobotApplicationResponse
      type: object
    DescribeSimulationApplicationResponse:
      example:
        revisionId: ""
        environment:
          uri: ""
        sources: ""
        simulationSoftwareSuite:
          name: ""
          version: ""
        lastUpdatedAt: ""
        name: ""
        renderingEngine:
          name: ""
          version: ""
        arn: ""
        version: ""
        robotSoftwareSuite:
          name: ""
          version: ""
        tags: ""
        imageDigest: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot simulation application.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the simulation application.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the simulation application.
          title: version
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          - description: The sources of the simulation application.
          title: sources
        simulationSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_simulationSoftwareSuite'
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_robotSoftwareSuite'
        renderingEngine:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_renderingEngine'
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision id of the simulation application.
          title: revisionId
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ application was last updated."
          title: lastUpdatedAt
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the specified simulation application.
          title: tags
        environment:
          $ref: '#/components/schemas/CreateSimulationApplicationVersionResponse_environment'
        imageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          - description: A SHA256 identifier for the Docker image that you use for
              your simulation application.
          title: imageDigest
      title: DescribeSimulationApplicationResponse
      type: object
    DescribeSimulationJobResponse:
      example:
        outputLocation:
          s3Prefix: ""
          s3Bucket: ""
        failureCode: ""
        lastUpdatedAt: ""
        maxJobDurationInSeconds: ""
        tags: ""
        simulationTimeMillis: ""
        iamRole: ""
        compute:
          computeType: ""
          simulationUnitLimit: ""
          gpuUnitLimit: ""
        failureBehavior: ""
        clientRequestToken: ""
        networkInterface:
          networkInterfaceId: ""
          publicIpAddress: ""
          privateIpAddress: ""
        lastStartedAt: ""
        failureReason: ""
        loggingConfig:
          recordAllRosTopics: ""
        vpcConfig:
          assignPublicIp: ""
          vpcId: ""
          subnets: ""
          securityGroups: ""
        name: ""
        robotApplications: ""
        arn: ""
        dataSources: ""
        status: ""
        simulationApplications: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the simulation job.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the simulation job.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobStatus'
          - description: The status of the simulation job.
          title: status
        lastStartedAt:
          allOf:
          - $ref: '#/components/schemas/LastStartedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job was last started."
          title: lastStartedAt
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job was last updated."
          title: lastUpdatedAt
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          - description: The failure behavior for the simulation job.
          title: failureBehavior
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobErrorCode'
          - description: "<p>The failure code of the simulation job if it failed:</p>\
              \ <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p>\
              \ </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited\
              \ abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p>\
              \ Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt>\
              \ <dd> <p>Robot application bundle could not be downloaded.</p> </dd>\
              \ <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application\
              \ bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt>\
              \ <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p>\
              \ </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish\
              \ logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt>\
              \ <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt>\
              \ <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt>\
              \ <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt>\
              \ <dd> <p>Robot bundle cannot be extracted (invalid format, bundling\
              \ error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt>\
              \ <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling\
              \ error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt>\
              \ <dd> <p>Etag for RobotApplication does not match value during version\
              \ creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt>\
              \ <dd> <p>Etag for SimulationApplication does not match value during\
              \ version creation.</p> </dd> </dl>"
          title: failureCode
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "Details about why the simulation job failed. For more information\
              \ about troubleshooting, see <a href=\"https://docs.aws.amazon.com/robomaker/latest/dg/troubleshooting.html\"\
              >Troubleshooting</a>."
          title: failureReason
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        outputLocation:
          $ref: '#/components/schemas/DescribeSimulationJobResponse_outputLocation'
        loggingConfig:
          $ref: '#/components/schemas/CreateSimulationJobResponse_loggingConfig'
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          - description: "The maximum job duration in seconds. The value must be 8\
              \ days (691,200 seconds) or less."
          title: maxJobDurationInSeconds
        simulationTimeMillis:
          allOf:
          - $ref: '#/components/schemas/SimulationTimeMillis'
          - description: The simulation job execution duration in milliseconds.
          title: simulationTimeMillis
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: The IAM role that allows the simulation instance to call
              the AWS APIs that are specified in its associated policies on your behalf.
          title: iamRole
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          - description: A list of robot applications.
          title: robotApplications
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          - description: A list of simulation applications.
          title: simulationApplications
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          - description: The data sources for the simulation job.
          title: dataSources
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the specified simulation job.
          title: tags
        vpcConfig:
          $ref: '#/components/schemas/DescribeSimulationJobResponse_vpcConfig'
        networkInterface:
          $ref: '#/components/schemas/DescribeSimulationJobResponse_networkInterface'
        compute:
          $ref: '#/components/schemas/CreateSimulationJobResponse_compute'
      title: DescribeSimulationJobResponse
      type: object
    DescribeSimulationJobBatchResponse:
      example:
        createdAt: ""
        createdRequests: ""
        failureCode: ""
        clientRequestToken: ""
        lastUpdatedAt: ""
        pendingRequests: ""
        failureReason: ""
        failedRequests: ""
        arn: ""
        batchPolicy:
          timeoutInSeconds: ""
          maxConcurrency: ""
        status: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the batch.
          title: arn
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchStatus'
          - description: "<p>The status of the batch.</p> <dl> <dt>Pending</dt> <dd>\
              \ <p>The simulation job batch request is pending.</p> </dd> <dt>InProgress</dt>\
              \ <dd> <p>The simulation job batch is in progress. </p> </dd> <dt>Failed</dt>\
              \ <dd> <p>The simulation job batch failed. One or more simulation job\
              \ requests could not be completed due to an internal failure (like <code>InternalServiceError</code>).\
              \ See <code>failureCode</code> and <code>failureReason</code> for more\
              \ information.</p> </dd> <dt>Completed</dt> <dd> <p>The simulation batch\
              \ job completed. A batch is complete when (1) there are no pending simulation\
              \ job requests in the batch and none of the failed simulation job requests\
              \ are due to <code>InternalServiceError</code> and (2) when all created\
              \ simulation jobs have reached a terminal state (for example, <code>Completed</code>\
              \ or <code>Failed</code>). </p> </dd> <dt>Canceled</dt> <dd> <p>The\
              \ simulation batch job was cancelled.</p> </dd> <dt>Canceling</dt> <dd>\
              \ <p>The simulation batch job is being cancelled.</p> </dd> <dt>Completing</dt>\
              \ <dd> <p>The simulation batch job is completing.</p> </dd> <dt>TimingOut</dt>\
              \ <dd> <p>The simulation job batch is timing out.</p> <p>If a batch\
              \ timing out, and there are pending requests that were failing due to\
              \ an internal failure (like <code>InternalServiceError</code>), the\
              \ batch status will be <code>Failed</code>. If there are no such failing\
              \ request, the batch status will be <code>TimedOut</code>. </p> </dd>\
              \ <dt>TimedOut</dt> <dd> <p>The simulation batch job timed out.</p>\
              \ </dd> </dl>"
          title: status
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job batch was last updated."
          title: lastUpdatedAt
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job batch was created."
          title: createdAt
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        batchPolicy:
          $ref: '#/components/schemas/DescribeSimulationJobBatchResponse_batchPolicy'
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchErrorCode'
          - description: The failure code of the simulation job batch.
          title: failureCode
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The reason the simulation job batch failed.
          title: failureReason
        failedRequests:
          allOf:
          - $ref: '#/components/schemas/FailedCreateSimulationJobRequests'
          - description: 'A list of failed create simulation job requests. The request
              failed to be created into a simulation job. Failed requests do not have
              a simulation job ID. '
          title: failedRequests
        pendingRequests:
          allOf:
          - $ref: '#/components/schemas/CreateSimulationJobRequests'
          - description: A list of pending simulation job requests. These requests
              have not yet been created into simulation jobs.
          title: pendingRequests
        createdRequests:
          allOf:
          - $ref: '#/components/schemas/SimulationJobSummaries'
          - description: A list of created simulation job summaries.
          title: createdRequests
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the simulation job batch.
          title: tags
      title: DescribeSimulationJobBatchResponse
      type: object
    DescribeWorldResponse:
      example:
        template: ""
        createdAt: ""
        generationJob: ""
        arn: ""
        tags: ""
        worldDescriptionBody: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world.
          title: arn
        generationJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world generation job
              that generated the world.
          title: generationJob
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The world template.
          title: template
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ was created."
          title: createdAt
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world.
          title: tags
        worldDescriptionBody:
          allOf:
          - $ref: '#/components/schemas/Json'
          - description: Returns the JSON formatted string that describes the contents
              of your world.
          title: worldDescriptionBody
      title: DescribeWorldResponse
      type: object
    DescribeWorldExportJobResponse:
      example:
        outputLocation:
          s3Prefix: ""
          s3Bucket: ""
        iamRole: ""
        createdAt: ""
        failureCode: ""
        worlds: ""
        clientRequestToken: ""
        failureReason: ""
        arn: ""
        status: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the world export job.
          title: arn
        status:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobStatus'
          - description: <p>The status of the world export job.</p> <dl> <dt>Pending</dt>
              <dd> <p>The world export job request is pending.</p> </dd> <dt>Running</dt>
              <dd> <p>The world export job is running. </p> </dd> <dt>Completed</dt>
              <dd> <p>The world export job completed. </p> </dd> <dt>Failed</dt> <dd>
              <p>The world export job failed. See <code>failureCode</code> and <code>failureReason</code>
              for more information. </p> </dd> <dt>Canceled</dt> <dd> <p>The world
              export job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world
              export job is being cancelled.</p> </dd> </dl>
          title: status
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ export job was created."
          title: createdAt
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobErrorCode'
          - description: "<p>The failure code of the world export job if it failed:</p>\
              \ <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p>\
              \ </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds\
              \ the maximum number allowed, or the number of concurrent stream requests\
              \ exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt>\
              \ <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt>\
              \ <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt>\
              \ <dd> <p>An input parameter in the request is not valid.</p> </dd>\
              \ </dl>"
          title: failureCode
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The reason why the world export job failed.
          title: failureReason
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        worlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: A list of Amazon Resource Names (arns) that correspond to
              worlds to be exported.
          title: worlds
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: The IAM role that the world export process uses to access
              the Amazon S3 bucket and put the export.
          title: iamRole
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world export job.
          title: tags
      title: DescribeWorldExportJobResponse
      type: object
    DescribeWorldGenerationJobResponse:
      example:
        template: ""
        createdAt: ""
        worldCount:
          interiorCountPerFloorplan: ""
          floorplanCount: ""
        failureCode: ""
        clientRequestToken: ""
        finishedWorldsSummary:
          failureSummary:
            totalFailureCount: ""
            failures: ""
          finishedCount: ""
          succeededWorlds: ""
        failureReason: ""
        worldTags: ""
        arn: ""
        status: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the world generation job.
          title: arn
        status:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobStatus'
          - description: <p>The status of the world generation job:</p> <dl> <dt>Pending</dt>
              <dd> <p>The world generation job request is pending.</p> </dd> <dt>Running</dt>
              <dd> <p>The world generation job is running. </p> </dd> <dt>Completed</dt>
              <dd> <p>The world generation job completed. </p> </dd> <dt>Failed</dt>
              <dd> <p>The world generation job failed. See <code>failureCode</code>
              for more information. </p> </dd> <dt>PartialFailed</dt> <dd> <p>Some
              worlds did not generate.</p> </dd> <dt>Canceled</dt> <dd> <p>The world
              generation job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The
              world generation job is being cancelled.</p> </dd> </dl>
          title: status
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ generation job was created."
          title: createdAt
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobErrorCode'
          - description: "<p>The failure code of the world generation job if it failed:</p>\
              \ <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p>\
              \ </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds\
              \ the maximum number allowed, or the number of concurrent stream requests\
              \ exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt>\
              \ <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt>\
              \ <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt>\
              \ <dd> <p>An input parameter in the request is not valid.</p> </dd>\
              \ </dl>"
          title: failureCode
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The reason why the world generation job failed.
          title: failureReason
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template.
          title: template
        worldCount:
          $ref: '#/components/schemas/DescribeWorldGenerationJobResponse_worldCount'
        finishedWorldsSummary:
          $ref: '#/components/schemas/DescribeWorldGenerationJobResponse_finishedWorldsSummary'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world generation job.
          title: tags
        worldTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the generated worlds.
          title: worldTags
      title: DescribeWorldGenerationJobResponse
      type: object
    DescribeWorldTemplateResponse:
      example:
        createdAt: ""
        clientRequestToken: ""
        lastUpdatedAt: ""
        name: ""
        arn: ""
        version: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the world template.
          title: arn
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          - description: The name of the world template.
          title: name
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ template was created."
          title: createdAt
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ template was last updated."
          title: lastUpdatedAt
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world template.
          title: tags
        version:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The version of the world template that you're using.
          title: version
      title: DescribeWorldTemplateResponse
      type: object
    GetWorldTemplateBodyResponse:
      example:
        templateBody: ""
      properties:
        templateBody:
          allOf:
          - $ref: '#/components/schemas/Json'
          - description: The world template body.
          title: templateBody
      title: GetWorldTemplateBodyResponse
      type: object
    ListDeploymentJobsResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        deploymentJobs: ""
        nextToken: ""
      properties:
        deploymentJobs:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobs'
          - description: A list of deployment jobs that meet the criteria of the request.
          title: deploymentJobs
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListDeploymentJobs</code> again and assign that token to\
              \ the request object's <code>nextToken</code> parameter. If there are\
              \ no remaining results, the previous response object's NextToken parameter\
              \ is set to null. "
          title: nextToken
      title: ListDeploymentJobsResponse
      type: object
    Filter:
      description: Information about a filter.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the filter.
          title: name
        values:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: A list of values.
          title: values
      title: Filter
      type: object
    ListFleetsResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        fleetDetails: ""
        nextToken: ""
      properties:
        fleetDetails:
          allOf:
          - $ref: '#/components/schemas/Fleets'
          - description: A list of fleet details meeting the request criteria.
          title: fleetDetails
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListFleets</code> again and assign that token to the request\
              \ object's <code>nextToken</code> parameter. If there are no remaining\
              \ results, the previous response object's NextToken parameter is set\
              \ to null. "
          title: nextToken
      title: ListFleetsResponse
      type: object
    ListRobotApplicationsResponse:
      example:
        robotApplicationSummaries: ""
        nextToken: ""
      properties:
        robotApplicationSummaries:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationSummaries'
          - description: A list of robot application summaries that meet the criteria
              of the request.
          title: robotApplicationSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListRobotApplications</code> again and assign that token\
              \ to the request object's <code>nextToken</code> parameter. If there\
              \ are no remaining results, the previous response object's NextToken\
              \ parameter is set to null. "
          title: nextToken
      title: ListRobotApplicationsResponse
      type: object
    ListRobotsResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        nextToken: ""
        robots: ""
      properties:
        robots:
          allOf:
          - $ref: '#/components/schemas/Robots'
          - description: A list of robots that meet the criteria of the request.
          title: robots
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListRobots</code> again and assign that token to the request\
              \ object's <code>nextToken</code> parameter. If there are no remaining\
              \ results, the previous response object's NextToken parameter is set\
              \ to null. "
          title: nextToken
      title: ListRobotsResponse
      type: object
    ListSimulationApplicationsResponse:
      example:
        simulationApplicationSummaries: ""
        nextToken: ""
      properties:
        simulationApplicationSummaries:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationSummaries'
          - description: A list of simulation application summaries that meet the
              criteria of the request.
          title: simulationApplicationSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListSimulationApplications</code> again and assign that\
              \ token to the request object's <code>nextToken</code> parameter. If\
              \ there are no remaining results, the previous response object's NextToken\
              \ parameter is set to null. "
          title: nextToken
      title: ListSimulationApplicationsResponse
      type: object
    ListSimulationJobBatchesResponse:
      example:
        nextToken: ""
        simulationJobBatchSummaries: ""
      properties:
        simulationJobBatchSummaries:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchSummaries'
          - description: A list of simulation job batch summaries.
          title: simulationJobBatchSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListSimulationJobBatches</code> again and assign that token\
              \ to the request object's <code>nextToken</code> parameter. If there\
              \ are no remaining results, the previous response object's NextToken\
              \ parameter is set to null. "
          title: nextToken
      title: ListSimulationJobBatchesResponse
      type: object
    ListSimulationJobsResponse:
      example:
        simulationJobSummaries: ""
        nextToken: ""
      properties:
        simulationJobSummaries:
          allOf:
          - $ref: '#/components/schemas/SimulationJobSummaries'
          - description: A list of simulation job summaries that meet the criteria
              of the request.
          title: simulationJobSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListSimulationJobs</code> again and assign that token to\
              \ the request object's <code>nextToken</code> parameter. If there are\
              \ no remaining results, the previous response object's NextToken parameter\
              \ is set to null. "
          title: nextToken
      required:
      - simulationJobSummaries
      title: ListSimulationJobsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of all tags added to the specified resource.
          title: tags
      title: ListTagsForResourceResponse
      type: object
    ListWorldExportJobsResponse:
      example:
        nextToken: ""
        worldExportJobSummaries: ""
      properties:
        worldExportJobSummaries:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobSummaries'
          - description: Summary information for world export jobs.
          title: worldExportJobSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListWorldExportJobsRequest</code> again and assign that\
              \ token to the request object's <code>nextToken</code> parameter. If\
              \ there are no remaining results, the previous response object's NextToken\
              \ parameter is set to null. "
          title: nextToken
      required:
      - worldExportJobSummaries
      title: ListWorldExportJobsResponse
      type: object
    ListWorldGenerationJobsResponse:
      example:
        nextToken: ""
        worldGenerationJobSummaries: ""
      properties:
        worldGenerationJobSummaries:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobSummaries'
          - description: Summary information for world generator jobs.
          title: worldGenerationJobSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListWorldGeneratorJobsRequest</code> again and assign that\
              \ token to the request object's <code>nextToken</code> parameter. If\
              \ there are no remaining results, the previous response object's NextToken\
              \ parameter is set to null. "
          title: nextToken
      required:
      - worldGenerationJobSummaries
      title: ListWorldGenerationJobsResponse
      type: object
    ListWorldTemplatesResponse:
      example:
        nextToken: ""
        templateSummaries: ""
      properties:
        templateSummaries:
          allOf:
          - $ref: '#/components/schemas/TemplateSummaries'
          - description: Summary information for templates.
          title: templateSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListWorldTemplates</code> again and assign that token to\
              \ the request object's <code>nextToken</code> parameter. If there are\
              \ no remaining results, the previous response object's NextToken parameter\
              \ is set to null. "
          title: nextToken
      title: ListWorldTemplatesResponse
      type: object
    ListWorldsResponse:
      example:
        nextToken: ""
        worldSummaries: ""
      properties:
        worldSummaries:
          allOf:
          - $ref: '#/components/schemas/WorldSummaries'
          - description: Summary information for worlds.
          title: worldSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListWorlds</code> again and assign that token to the request\
              \ object's <code>nextToken</code> parameter. If there are no remaining\
              \ results, the previous response object's NextToken parameter is set\
              \ to null. "
          title: nextToken
      title: ListWorldsResponse
      type: object
    RegisterRobotResponse:
      deprecated: true
      description: "AWS RoboMaker is unable to process this request as the support\
        \ for the AWS RoboMaker application deployment feature has ended. For additional\
        \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        robot: ""
        fleet: ""
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet that the robot
              will join.
          title: fleet
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Information about the robot registration.
          title: robot
      title: RegisterRobotResponse
      type: object
    RestartSimulationJobResponse:
      properties: {}
      type: object
    StartSimulationJobBatchResponse:
      example:
        createdAt: ""
        createdRequests: ""
        failureCode: ""
        clientRequestToken: ""
        pendingRequests: ""
        failureReason: ""
        failedRequests: ""
        arn: ""
        batchPolicy:
          timeoutInSeconds: ""
          maxConcurrency: ""
        status: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the batch.
          title: arn
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchStatus'
          - description: "<p>The status of the simulation job batch.</p> <dl> <dt>Pending</dt>\
              \ <dd> <p>The simulation job batch request is pending.</p> </dd> <dt>InProgress</dt>\
              \ <dd> <p>The simulation job batch is in progress. </p> </dd> <dt>Failed</dt>\
              \ <dd> <p>The simulation job batch failed. One or more simulation job\
              \ requests could not be completed due to an internal failure (like <code>InternalServiceError</code>).\
              \ See <code>failureCode</code> and <code>failureReason</code> for more\
              \ information.</p> </dd> <dt>Completed</dt> <dd> <p>The simulation batch\
              \ job completed. A batch is complete when (1) there are no pending simulation\
              \ job requests in the batch and none of the failed simulation job requests\
              \ are due to <code>InternalServiceError</code> and (2) when all created\
              \ simulation jobs have reached a terminal state (for example, <code>Completed</code>\
              \ or <code>Failed</code>). </p> </dd> <dt>Canceled</dt> <dd> <p>The\
              \ simulation batch job was cancelled.</p> </dd> <dt>Canceling</dt> <dd>\
              \ <p>The simulation batch job is being cancelled.</p> </dd> <dt>Completing</dt>\
              \ <dd> <p>The simulation batch job is completing.</p> </dd> <dt>TimingOut</dt>\
              \ <dd> <p>The simulation job batch is timing out.</p> <p>If a batch\
              \ timing out, and there are pending requests that were failing due to\
              \ an internal failure (like <code>InternalServiceError</code>), the\
              \ batch status will be <code>Failed</code>. If there are no such failing\
              \ request, the batch status will be <code>TimedOut</code>. </p> </dd>\
              \ <dt>TimedOut</dt> <dd> <p>The simulation batch job timed out.</p>\
              \ </dd> </dl>"
          title: status
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job batch was created."
          title: createdAt
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
          title: clientRequestToken
        batchPolicy:
          $ref: '#/components/schemas/DescribeSimulationJobBatchResponse_batchPolicy'
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchErrorCode'
          - description: The failure code if the simulation job batch failed.
          title: failureCode
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The reason the simulation job batch failed.
          title: failureReason
        failedRequests:
          allOf:
          - $ref: '#/components/schemas/FailedCreateSimulationJobRequests'
          - description: 'A list of failed simulation job requests. The request failed
              to be created into a simulation job. Failed requests do not have a simulation
              job ID. '
          title: failedRequests
        pendingRequests:
          allOf:
          - $ref: '#/components/schemas/CreateSimulationJobRequests'
          - description: A list of pending simulation job requests. These requests
              have not yet been created into simulation jobs.
          title: pendingRequests
        createdRequests:
          allOf:
          - $ref: '#/components/schemas/SimulationJobSummaries'
          - description: A list of created simulation job request summaries.
          title: createdRequests
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the deployment job batch.
          title: tags
      title: StartSimulationJobBatchResponse
      type: object
    BatchTimeoutInSeconds:
      type: integer
    MaxConcurrency:
      type: integer
    SimulationJobRequest:
      description: Information about a simulation job request.
      properties:
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          - description: "The maximum simulation job duration in seconds. The value\
              \ must be 8 days (691,200 seconds) or less."
          title: maxJobDurationInSeconds
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: 'The IAM role name that allows the simulation instance to
              call the AWS APIs that are specified in its associated policies on your
              behalf. This is how credentials are passed in to your simulation job. '
          title: iamRole
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          - description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt>
              <dd> <p>Leaves the host running for its maximum timeout duration after
              a <code>4XX</code> error code.</p> </dd> <dt>Fail</dt> <dd> <p>Stop
              the simulation job and terminate the instance.</p> </dd> </dl>
          title: failureBehavior
        useDefaultApplications:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: "A Boolean indicating whether to use default applications\
              \ in the simulation job. Default applications include Gazebo, rqt, rviz\
              \ and terminal access. "
          title: useDefaultApplications
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          - description: The robot applications to use in the simulation job.
          title: robotApplications
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          - description: The simulation applications to use in the simulation job.
          title: simulationApplications
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfigs'
          - description: <p>Specify data sources to mount read-only files from S3
              into your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>.
              </p> <note> <p>There is a limit of 100 files and a combined size of
              25GB for all <code>DataSourceConfig</code> objects. </p> </note>
          title: dataSources
        vpcConfig:
          $ref: '#/components/schemas/VPCConfig'
        compute:
          $ref: '#/components/schemas/SimulationJobRequest_compute'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the simulation job request.
          title: tags
      required:
      - maxJobDurationInSeconds
      title: SimulationJobRequest
      type: object
    SyncDeploymentJobResponse:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        deploymentConfig:
          robotDeploymentTimeoutInSeconds: ""
          failureThresholdPercentage: ""
          concurrentDeploymentPercentage: ""
          downloadConditionFile:
            bucket: ""
            etag: ""
            key: ""
        fleet: ""
        createdAt: ""
        deploymentApplicationConfigs: ""
        failureCode: ""
        failureReason: ""
        arn: ""
        status: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the synchronization request.
          title: arn
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: fleet
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The status of the synchronization job.
          title: status
        deploymentConfig:
          $ref: '#/components/schemas/SyncDeploymentJobResponse_deploymentConfig'
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          - description: Information about the deployment application configurations.
          title: deploymentApplicationConfigs
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The failure reason if the job fails.
          title: failureReason
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          - description: "<p>The failure code if the job fails:</p> <dl> <dt>InternalServiceError</dt>\
              \ <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt>\
              \ <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt>\
              \ <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt>\
              \ <dd> <p>Robot application bundle could not be downloaded.</p> </dd>\
              \ <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application\
              \ bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt>\
              \ <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p>\
              \ </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish\
              \ logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt>\
              \ <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt>\
              \ <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt>\
              \ <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt>\
              \ <dd> <p>Robot bundle cannot be extracted (invalid format, bundling\
              \ error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt>\
              \ <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling\
              \ error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt>\
              \ <dd> <p>Etag for RobotApplication does not match value during version\
              \ creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt>\
              \ <dd> <p>Etag for SimulationApplication does not match value during\
              \ version creation.</p> </dd> </dl>"
          title: failureCode
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the fleet\
              \ was created."
          title: createdAt
      title: SyncDeploymentJobResponse
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9 _.\\-\\/+=:]*"
      title: TagKey
      type: string
    UpdateRobotApplicationResponse:
      example:
        revisionId: ""
        environment:
          uri: ""
        sources: ""
        lastUpdatedAt: ""
        name: ""
        arn: ""
        version: ""
        robotSoftwareSuite:
          name: ""
          version: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the updated robot application.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the robot application.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the robot application.
          title: version
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          - description: The sources of the robot application.
          title: sources
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplicationResponse_robotSoftwareSuite'
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the robot\
              \ application was last updated."
          title: lastUpdatedAt
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision id of the robot application.
          title: revisionId
        environment:
          $ref: '#/components/schemas/UpdateRobotApplicationResponse_environment'
      title: UpdateRobotApplicationResponse
      type: object
    UpdateSimulationApplicationResponse:
      example:
        revisionId: ""
        environment:
          uri: ""
        sources: ""
        simulationSoftwareSuite:
          name: ""
          version: ""
        lastUpdatedAt: ""
        name: ""
        renderingEngine:
          name: ""
          version: ""
        arn: ""
        version: ""
        robotSoftwareSuite:
          name: ""
          version: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the updated simulation
              application.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the simulation application.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the robot application.
          title: version
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          - description: The sources of the simulation application.
          title: sources
        simulationSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_simulationSoftwareSuite'
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_robotSoftwareSuite'
        renderingEngine:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_renderingEngine'
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ application was last updated."
          title: lastUpdatedAt
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision id of the simulation application.
          title: revisionId
        environment:
          $ref: '#/components/schemas/UpdateSimulationApplicationResponse_environment'
      title: UpdateSimulationApplicationResponse
      type: object
    UpdateWorldTemplateResponse:
      example:
        createdAt: ""
        lastUpdatedAt: ""
        name: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          - description: The name of the world template.
          title: name
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ template was created."
          title: createdAt
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ template was last updated."
          title: lastUpdatedAt
      title: UpdateWorldTemplateResponse
      type: object
    Architecture:
      enum:
      - X86_64
      - ARM64
      - ARMHF
      title: Architecture
      type: string
    Arns:
      items:
        $ref: '#/components/schemas/Arn'
      maxItems: 100
      minItems: 1
      type: array
    BatchDeleteWorldsRequest:
      example:
        worlds: ""
      properties:
        worlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: A list of Amazon Resource Names (arns) that correspond to
              worlds to delete.
      required:
      - worlds
      title: BatchDeleteWorldsRequest
      type: object
    BatchDescribeSimulationJobRequest:
      example:
        jobs: ""
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: A list of Amazon Resource Names (ARNs) of simulation jobs
              to describe.
      required:
      - jobs
      title: BatchDescribeSimulationJobRequest
      type: object
    SimulationJobs:
      items:
        $ref: '#/components/schemas/SimulationJob'
      type: array
    BatchPolicy:
      description: Information about the batch policy.
      properties:
        timeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/BatchTimeoutInSeconds'
          - description: "<p>The amount of time, in seconds, to wait for the batch\
              \ to complete. </p> <p>If a batch times out, and there are pending requests\
              \ that were failing due to an internal failure (like <code>InternalServiceError</code>),\
              \ they will be moved to the failed list and the batch status will be\
              \ <code>Failed</code>. If the pending requests were failing for any\
              \ other reason, the failed pending requests will be moved to the failed\
              \ list and the batch status will be <code>TimedOut</code>. </p>"
          title: timeoutInSeconds
        maxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The number of active simulation jobs create as part of\
              \ the batch that can be in an active state at the same time. </p> <p>Active\
              \ states include: <code>Pending</code>,<code>Preparing</code>, <code>Running</code>,\
              \ <code>Restarting</code>, <code>RunningFailed</code> and <code>Terminating</code>.\
              \ All other states are terminal states. </p>"
          title: maxConcurrency
      title: BatchPolicy
      type: object
    CancelDeploymentJobRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        job: ""
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The deployment job ARN to cancel.
      required:
      - job
      title: CancelDeploymentJobRequest
      type: object
    CancelSimulationJobBatchRequest:
      example:
        batch: ""
      properties:
        batch:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The id of the batch to cancel.
      required:
      - batch
      title: CancelSimulationJobBatchRequest
      type: object
    CancelSimulationJobRequest:
      example:
        job: ""
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The simulation job ARN to cancel.
      required:
      - job
      title: CancelSimulationJobRequest
      type: object
    CancelWorldExportJobRequest:
      example:
        job: ""
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world export job to
              cancel.
      required:
      - job
      title: CancelWorldExportJobRequest
      type: object
    CancelWorldGenerationJobRequest:
      example:
        job: ""
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world generator job
              to cancel.
      required:
      - job
      title: CancelWorldGenerationJobRequest
      type: object
    ClientRequestToken:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_\\-=]*"
      type: string
    Command:
      maxLength: 1024
      minLength: 1
      pattern: "[a-zA-Z0-9_.\\-]*"
      type: string
    NonEmptyString:
      maxLength: 255
      minLength: 1
      pattern: .+
      title: NonEmptyString
      type: string
    CommandList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      type: array
    Compute:
      description: Compute information for the simulation job.
      properties:
        simulationUnitLimit:
          allOf:
          - $ref: '#/components/schemas/SimulationUnit'
          - description: 'The simulation unit limit. Your simulation is allocated
              CPU and memory proportional to the supplied simulation unit limit. A
              simulation unit is 1 vcpu and 2GB of memory. You are only billed for
              the SU utilization you consume up to the maximum value provided. The
              default is 15. '
          title: simulationUnitLimit
        computeType:
          allOf:
          - $ref: '#/components/schemas/ComputeType'
          - description: Compute type information for the simulation job.
          title: computeType
        gpuUnitLimit:
          allOf:
          - $ref: '#/components/schemas/GPUUnit'
          - description: Compute GPU unit limit for the simulation job. It is the
              same as the number of GPUs allocated to the SimulationJob.
          title: gpuUnitLimit
      title: Compute
      type: object
    ComputeResponse:
      description: Compute information for the simulation job
      properties:
        simulationUnitLimit:
          allOf:
          - $ref: '#/components/schemas/SimulationUnit'
          - description: 'The simulation unit limit. Your simulation is allocated
              CPU and memory proportional to the supplied simulation unit limit. A
              simulation unit is 1 vcpu and 2GB of memory. You are only billed for
              the SU utilization you consume up to the maximum value provided. The
              default is 15. '
          title: simulationUnitLimit
        computeType:
          allOf:
          - $ref: '#/components/schemas/ComputeType'
          - description: Compute type response information for the simulation job.
          title: computeType
        gpuUnitLimit:
          allOf:
          - $ref: '#/components/schemas/GPUUnit'
          - description: Compute GPU unit limit for the simulation job. It is the
              same as the number of GPUs allocated to the SimulationJob.
          title: gpuUnitLimit
      title: ComputeResponse
      type: object
    DeploymentConfig:
      description: Information about a deployment configuration.
      properties:
        concurrentDeploymentPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of robots receiving the deployment at the
              same time.
          title: concurrentDeploymentPercentage
        failureThresholdPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of deployments that need to fail before stopping
              deployment.
          title: failureThresholdPercentage
        robotDeploymentTimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/DeploymentTimeout'
          - description: "The amount of time, in seconds, to wait for deployment to\
              \ a single robot to complete. Choose a time between 1 minute and 7 days.\
              \ The default is 5 hours."
          title: robotDeploymentTimeoutInSeconds
        downloadConditionFile:
          $ref: '#/components/schemas/CreateDeploymentJob_request_deploymentConfig_downloadConditionFile'
      title: DeploymentConfig
      type: object
    DeploymentApplicationConfigs:
      items:
        $ref: '#/components/schemas/DeploymentApplicationConfig'
      maxItems: 1
      minItems: 1
      type: array
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    CreateDeploymentJobRequest:
      deprecated: true
      description: "AWS RoboMaker is unable to process this request as the support\
        \ for the AWS RoboMaker application deployment feature has ended. For additional\
        \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        deploymentConfig:
          robotDeploymentTimeoutInSeconds: ""
          failureThresholdPercentage: ""
          concurrentDeploymentPercentage: ""
          downloadConditionFile:
            bucket: ""
            etag: ""
            key: ""
        fleet: ""
        deploymentApplicationConfigs: ""
        clientRequestToken: ""
        tags: ""
      properties:
        deploymentConfig:
          $ref: '#/components/schemas/CreateDeploymentJobRequest_deploymentConfig'
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet to deploy.
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          - description: The deployment application configuration.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the deployment job.
      required:
      - clientRequestToken
      - deploymentApplicationConfigs
      - fleet
      title: CreateDeploymentJobRequest
      type: object
    DeploymentStatus:
      enum:
      - Pending
      - Preparing
      - InProgress
      - Failed
      - Succeeded
      - Canceled
      title: DeploymentStatus
      type: string
    GenericString:
      maxLength: 1024
      minLength: 0
      pattern: .*
      type: string
    DeploymentJobErrorCode:
      enum:
      - ResourceNotFound
      - EnvironmentSetupError
      - EtagMismatch
      - FailureThresholdBreached
      - RobotDeploymentAborted
      - RobotDeploymentNoResponse
      - RobotAgentConnectionTimeout
      - GreengrassDeploymentFailed
      - InvalidGreengrassGroup
      - MissingRobotArchitecture
      - MissingRobotApplicationArchitecture
      - MissingRobotDeploymentResource
      - GreengrassGroupVersionDoesNotExist
      - LambdaDeleted
      - ExtractingBundleFailure
      - PreLaunchFileFailure
      - PostLaunchFileFailure
      - BadPermissionError
      - DownloadConditionFailed
      - BadLambdaAssociated
      - InternalServerError
      - RobotApplicationDoesNotExist
      - DeploymentFleetDoesNotExist
      - FleetDeploymentTimeout
      title: DeploymentJobErrorCode
      type: string
    CreatedAt:
      format: date-time
      type: string
    Name:
      maxLength: 255
      minLength: 1
      pattern: "[a-zA-Z0-9_\\-]*"
      title: Name
      type: string
    CreateFleetRequest:
      deprecated: true
      description: "AWS RoboMaker is unable to process this request as the support\
        \ for the AWS RoboMaker application deployment feature has ended. For additional\
        \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        name: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the fleet.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the fleet.
      required:
      - name
      title: CreateFleetRequest
      type: object
    SourceConfigs:
      items:
        $ref: '#/components/schemas/SourceConfig'
      type: array
    RobotSoftwareSuite:
      description: Information about a robot software suite (ROS distribution).
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuiteType'
          - description: The name of the robot software suite (ROS distribution).
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuiteVersionType'
          - description: The version of the robot software suite (ROS distribution).
          title: version
      title: RobotSoftwareSuite
      type: object
    Environment:
      description: The object that contains the Docker image URI for either your robot
        or simulation applications.
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/RepositoryUrl'
          - description: The Docker image URI for either your robot or simulation
              applications.
          title: uri
      title: Environment
      type: object
    CreateRobotApplicationRequest:
      example:
        environment:
          uri: ""
        sources: ""
        name: ""
        robotSoftwareSuite:
          name: ""
          version: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the robot application.
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceConfigs'
          - description: The sources of the robot application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplicationRequest_robotSoftwareSuite'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the robot application.
        environment:
          $ref: '#/components/schemas/CreateRobotApplicationRequest_environment'
      required:
      - name
      - robotSoftwareSuite
      title: CreateRobotApplicationRequest
      type: object
    Version:
      maxLength: 255
      minLength: 1
      pattern: "(\\$LATEST)|[0-9]*"
      type: string
    Sources:
      items:
        $ref: '#/components/schemas/Source'
      type: array
    LastUpdatedAt:
      format: date-time
      type: string
    RevisionId:
      maxLength: 40
      minLength: 1
      pattern: "[a-zA-Z0-9_.\\-]*"
      type: string
    S3Etags:
      items:
        $ref: '#/components/schemas/S3Etag'
      type: array
    ImageDigest:
      maxLength: 72
      minLength: 0
      pattern: "[Ss][Hh][Aa]256:[0-9a-fA-F]{64}"
      type: string
    CreateRobotApplicationVersionRequest:
      example:
        application: ""
        s3Etags: ""
        currentRevisionId: ""
        imageDigest: ""
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The application information for the robot application.
        currentRevisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: "The current revision id for the robot application. If you\
              \ provide a value and it matches the latest revision ID, a new version\
              \ will be created."
        s3Etags:
          allOf:
          - $ref: '#/components/schemas/S3Etags'
          - description: The Amazon S3 identifier for the zip file bundle that you
              use for your robot application.
        imageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          - description: A SHA256 identifier for the Docker image that you use for
              your robot application.
      required:
      - application
      title: CreateRobotApplicationVersionRequest
      type: object
    Id:
      maxLength: 1224
      minLength: 1
      pattern: .*
      type: string
    CreateRobotRequest:
      deprecated: true
      description: "AWS RoboMaker is unable to process this request as the support\
        \ for the AWS RoboMaker application deployment feature has ended. For additional\
        \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        name: ""
        greengrassGroupId: ""
        architecture: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the robot.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The target architecture of the robot.
        greengrassGroupId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The Greengrass group id.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the robot.
      required:
      - architecture
      - greengrassGroupId
      - name
      title: CreateRobotRequest
      type: object
    SimulationSoftwareSuite:
      description: Information about a simulation software suite.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuiteType'
          - description: The name of the simulation software suite.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuiteVersionType'
          - description: The version of the simulation software suite.
          title: version
      title: SimulationSoftwareSuite
      type: object
    RenderingEngine:
      description: Information about a rendering engine.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RenderingEngineType'
          - description: The name of the rendering engine.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/RenderingEngineVersionType'
          - description: The version of the rendering engine.
          title: version
      title: RenderingEngine
      type: object
    CreateSimulationApplicationRequest:
      example:
        environment:
          uri: ""
        sources: ""
        simulationSoftwareSuite:
          name: ""
          version: ""
        name: ""
        renderingEngine:
          name: ""
          version: ""
        robotSoftwareSuite:
          name: ""
          version: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the simulation application.
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceConfigs'
          - description: The sources of the simulation application.
        simulationSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_simulationSoftwareSuite'
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationRequest_robotSoftwareSuite'
        renderingEngine:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_renderingEngine'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the simulation application.
        environment:
          $ref: '#/components/schemas/CreateSimulationApplicationRequest_environment'
      required:
      - name
      - robotSoftwareSuite
      - simulationSoftwareSuite
      title: CreateSimulationApplicationRequest
      type: object
    CreateSimulationApplicationVersionRequest:
      example:
        application: ""
        s3Etags: ""
        currentRevisionId: ""
        imageDigest: ""
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The application information for the simulation application.
        currentRevisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: "The current revision id for the simulation application.\
              \ If you provide a value and it matches the latest revision ID, a new\
              \ version will be created."
        s3Etags:
          allOf:
          - $ref: '#/components/schemas/S3Etags'
          - description: The Amazon S3 eTag identifier for the zip file bundle that
              you use to create the simulation application.
        imageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          - description: The SHA256 digest used to identify the Docker image URI used
              to created the simulation application.
      required:
      - application
      title: CreateSimulationApplicationVersionRequest
      type: object
    OutputLocation:
      description: The output location.
      example:
        s3Prefix: ""
        s3Bucket: ""
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The S3 bucket for output.
          title: s3Bucket
        s3Prefix:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The S3 folder in the <code>s3Bucket</code> where output files
              will be placed.
          title: s3Prefix
      title: OutputLocation
      type: object
    LoggingConfig:
      description: The logging configuration.
      properties:
        recordAllRosTopics:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - deprecated: true
            description: "<p>A boolean indicating whether to record all ROS topics.</p>\
              \ <important> <p>This API is no longer supported and will throw an error\
              \ if used.</p> </important>AWS RoboMaker is ending support for ROS software\
              \ suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html."
          title: recordAllRosTopics
      title: LoggingConfig
      type: object
    JobDuration:
      type: integer
    IamRole:
      maxLength: 255
      minLength: 1
      pattern: arn:aws:iam::\w+:role/.*
      type: string
    FailureBehavior:
      enum:
      - Fail
      - Continue
      title: FailureBehavior
      type: string
    RobotApplicationConfigs:
      items:
        $ref: '#/components/schemas/RobotApplicationConfig'
      maxItems: 1
      minItems: 1
      type: array
    SimulationApplicationConfigs:
      items:
        $ref: '#/components/schemas/SimulationApplicationConfig'
      maxItems: 1
      minItems: 1
      type: array
    DataSourceConfigs:
      items:
        $ref: '#/components/schemas/DataSourceConfig'
      maxItems: 6
      minItems: 1
      type: array
    VPCConfig:
      description: "If your simulation job accesses resources in a VPC, you provide\
        \ this parameter identifying the list of security group IDs and subnet IDs.\
        \ These must belong to the same VPC. You must provide at least one security\
        \ group and two subnet IDs."
      properties:
        subnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          - description: A list of one or more subnet IDs in your VPC.
          title: subnets
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          - description: A list of one or more security groups IDs in your VPC.
          title: securityGroups
        assignPublicIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A boolean indicating whether to assign a public IP address.
          title: assignPublicIp
      required:
      - subnets
      title: VPCConfig
      type: object
    CreateSimulationJobRequest:
      example:
        outputLocation:
          s3Prefix: ""
          s3Bucket: ""
        iamRole: ""
        compute:
          computeType: ""
          simulationUnitLimit: ""
          gpuUnitLimit: ""
        clientRequestToken: ""
        failureBehavior: ""
        loggingConfig:
          recordAllRosTopics: ""
        vpcConfig:
          assignPublicIp: ""
          subnets: ""
          securityGroups: ""
        maxJobDurationInSeconds: ""
        robotApplications: ""
        dataSources: ""
        simulationApplications: ""
        tags: ""
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
        outputLocation:
          $ref: '#/components/schemas/DescribeSimulationJobResponse_outputLocation'
        loggingConfig:
          $ref: '#/components/schemas/CreateSimulationJobResponse_loggingConfig'
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          - description: "The maximum simulation job duration in seconds (up to 14\
              \ days or 1,209,600 seconds. When <code>maxJobDurationInSeconds</code>\
              \ is reached, the simulation job will status will transition to <code>Completed</code>."
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: 'The IAM role name that allows the simulation instance to
              call the AWS APIs that are specified in its associated policies on your
              behalf. This is how credentials are passed in to your simulation job. '
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          - description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt>
              <dd> <p>Leaves the instance running for its maximum timeout duration
              after a <code>4XX</code> error code.</p> </dd> <dt>Fail</dt> <dd> <p>Stop
              the simulation job and terminate the instance.</p> </dd> </dl>
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          - description: The robot application to use in the simulation job.
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          - description: The simulation application to use in the simulation job.
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfigs'
          - description: <p>Specify data sources to mount read-only files from S3
              into your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>.
              </p> <note> <p>There is a limit of 100 files and a combined size of
              25GB for all <code>DataSourceConfig</code> objects. </p> </note>
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the simulation job.
        vpcConfig:
          $ref: '#/components/schemas/CreateSimulationJobRequest_vpcConfig'
        compute:
          $ref: '#/components/schemas/CreateSimulationJobRequest_compute'
      required:
      - iamRole
      - maxJobDurationInSeconds
      title: CreateSimulationJobRequest
      type: object
    CreateSimulationJobRequests:
      items:
        $ref: '#/components/schemas/SimulationJobRequest'
      maxItems: 1000
      minItems: 1
      type: array
    SimulationJobStatus:
      enum:
      - Pending
      - Preparing
      - Running
      - Restarting
      - Completed
      - Failed
      - RunningFailed
      - Terminating
      - Terminated
      - Canceled
      title: SimulationJobStatus
      type: string
    LastStartedAt:
      format: date-time
      type: string
    SimulationJobErrorCode:
      enum:
      - InternalServiceError
      - RobotApplicationCrash
      - SimulationApplicationCrash
      - RobotApplicationHealthCheckFailure
      - SimulationApplicationHealthCheckFailure
      - BadPermissionsRobotApplication
      - BadPermissionsSimulationApplication
      - BadPermissionsS3Object
      - BadPermissionsS3Output
      - BadPermissionsCloudwatchLogs
      - SubnetIpLimitExceeded
      - ENILimitExceeded
      - BadPermissionsUserCredentials
      - InvalidBundleRobotApplication
      - InvalidBundleSimulationApplication
      - InvalidS3Resource
      - ThrottlingError
      - LimitExceeded
      - MismatchedEtag
      - RobotApplicationVersionMismatchedEtag
      - SimulationApplicationVersionMismatchedEtag
      - ResourceNotFound
      - RequestThrottled
      - BatchTimedOut
      - BatchCanceled
      - InvalidInput
      - WrongRegionS3Bucket
      - WrongRegionS3Output
      - WrongRegionRobotApplication
      - WrongRegionSimulationApplication
      - UploadContentMismatchError
      title: SimulationJobErrorCode
      type: string
    SimulationTimeMillis:
      type: integer
    DataSources:
      items:
        $ref: '#/components/schemas/DataSource'
      type: array
    VPCConfigResponse:
      description: VPC configuration associated with your simulation job.
      properties:
        subnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          - description: A list of subnet IDs associated with the simulation job.
          title: subnets
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          - description: A list of security group IDs associated with the simulation
              job.
          title: securityGroups
        vpcId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The VPC ID associated with your simulation job.
          title: vpcId
        assignPublicIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A boolean indicating if a public IP was assigned.
          title: assignPublicIp
      title: VPCConfigResponse
      type: object
    CreateWorldExportJobRequest:
      example:
        outputLocation:
          s3Prefix: ""
          s3Bucket: ""
        iamRole: ""
        worlds: ""
        clientRequestToken: ""
        tags: ""
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
        worlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: A list of Amazon Resource Names (arns) that correspond to
              worlds to export.
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: The IAM role that the world export process uses to access
              the Amazon S3 bucket and put the export.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world export job.
      required:
      - iamRole
      - outputLocation
      - worlds
      title: CreateWorldExportJobRequest
      type: object
    WorldExportJobStatus:
      enum:
      - Pending
      - Running
      - Completed
      - Failed
      - Canceling
      - Canceled
      title: WorldExportJobStatus
      type: string
    WorldExportJobErrorCode:
      enum:
      - InternalServiceError
      - LimitExceeded
      - ResourceNotFound
      - RequestThrottled
      - InvalidInput
      - AccessDenied
      title: WorldExportJobErrorCode
      type: string
    WorldCount:
      description: "<p>The number of worlds that will be created. You can configure\
        \ the number of unique floorplans and the number of unique interiors for each\
        \ floor plan. For example, if you want 1 world with 20 unique interiors, you\
        \ set <code>floorplanCount = 1</code> and <code>interiorCountPerFloorplan\
        \ = 20</code>. This will result in 20 worlds (<code>floorplanCount</code>\
        \ * <code>interiorCountPerFloorplan)</code>. </p> <p>If you set <code>floorplanCount\
        \ = 4</code> and <code>interiorCountPerFloorplan = 5</code>, there will be\
        \ 20 worlds with 5 unique floor plans. </p>"
      properties:
        floorplanCount:
          allOf:
          - $ref: '#/components/schemas/FloorplanCount'
          - description: The number of unique floorplans.
          title: floorplanCount
        interiorCountPerFloorplan:
          allOf:
          - $ref: '#/components/schemas/InteriorCountPerFloorplan'
          - description: The number of unique interiors per floorplan.
          title: interiorCountPerFloorplan
      title: WorldCount
      type: object
    CreateWorldGenerationJobRequest:
      example:
        template: ""
        worldCount:
          interiorCountPerFloorplan: ""
          floorplanCount: ""
        clientRequestToken: ""
        worldTags: ""
        tags: ""
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template describing
              the worlds you want to create.
        worldCount:
          $ref: '#/components/schemas/DescribeWorldGenerationJobResponse_worldCount'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world generator job.
        worldTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the generated worlds.
      required:
      - template
      - worldCount
      title: CreateWorldGenerationJobRequest
      type: object
    WorldGenerationJobStatus:
      enum:
      - Pending
      - Running
      - Completed
      - Failed
      - PartialFailed
      - Canceling
      - Canceled
      title: WorldGenerationJobStatus
      type: string
    WorldGenerationJobErrorCode:
      enum:
      - InternalServiceError
      - LimitExceeded
      - ResourceNotFound
      - RequestThrottled
      - InvalidInput
      - AllWorldGenerationFailed
      title: WorldGenerationJobErrorCode
      type: string
    TemplateName:
      maxLength: 255
      minLength: 0
      pattern: .*
      type: string
    Json:
      maxLength: 262144
      minLength: 1
      pattern: "[\\S\\s]+"
      type: string
    TemplateLocation:
      description: Information about a template location.
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The Amazon S3 bucket name.
          title: s3Bucket
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The list of S3 keys identifying the data source files.
          title: s3Key
      required:
      - s3Bucket
      - s3Key
      title: TemplateLocation
      type: object
    CreateWorldTemplateRequest:
      example:
        clientRequestToken: ""
        templateBody: ""
        name: ""
        templateLocation:
          s3Key: ""
          s3Bucket: ""
        tags: ""
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          - description: The name of the world template.
        templateBody:
          allOf:
          - $ref: '#/components/schemas/Json'
          - description: The world template body.
        templateLocation:
          $ref: '#/components/schemas/CreateWorldTemplateRequest_templateLocation'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the world template.
      title: CreateWorldTemplateRequest
      type: object
    S3KeyOutputs:
      items:
        $ref: '#/components/schemas/S3KeyOutput'
      type: array
    DataSourceType:
      enum:
      - Prefix
      - Archive
      - File
      title: DataSourceType
      type: string
    Path:
      maxLength: 1024
      minLength: 1
      pattern: .*
      type: string
    DataSource:
      description: Information about a data source.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the data source.
          title: name
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The S3 bucket where the data files are located.
          title: s3Bucket
        s3Keys:
          allOf:
          - $ref: '#/components/schemas/S3KeyOutputs'
          - description: The list of S3 keys identifying the data source files.
          title: s3Keys
        type:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          - description: "<p>The data type for the data source that you're using for\
              \ your container image or simulation job. You can use this field to\
              \ specify whether your data source is an Archive, an Amazon S3 prefix,\
              \ or a file.</p> <p>If you don't specify a field, the default value\
              \ is <code>File</code>.</p>"
          title: type
        destination:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: "<p>The location where your files are mounted in the container\
              \ image.</p> <p>If you've specified the <code>type</code> of the data\
              \ source as an <code>Archive</code>, you must provide an Amazon S3 object\
              \ key to your archive. The object key must point to either a <code>.zip</code>\
              \ or <code>.tar.gz</code> file.</p> <p>If you've specified the <code>type</code>\
              \ of the data source as a <code>Prefix</code>, you provide the Amazon\
              \ S3 prefix that points to the files that you are using for your data\
              \ source.</p> <p>If you've specified the <code>type</code> of the data\
              \ source as a <code>File</code>, you provide the Amazon S3 path to the\
              \ file that you're using as your data source.</p>"
          title: destination
      title: DataSource
      type: object
    S3KeysOrPrefixes:
      items:
        $ref: '#/components/schemas/S3KeyOrPrefix'
      maxItems: 100
      minItems: 1
      type: array
    DataSourceNames:
      items:
        $ref: '#/components/schemas/Name'
      type: array
    DeleteFleetRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        fleet: ""
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
      required:
      - fleet
      title: DeleteFleetRequest
      type: object
    DeleteRobotApplicationRequest:
      example:
        applicationVersion: ""
        application: ""
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the the robot application.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the robot application to delete.
      required:
      - application
      title: DeleteRobotApplicationRequest
      type: object
    DeleteRobotRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        robot: ""
      properties:
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot.
      required:
      - robot
      title: DeleteRobotRequest
      type: object
    DeleteSimulationApplicationRequest:
      example:
        applicationVersion: ""
        application: ""
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The application information for the simulation application
              to delete.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the simulation application to delete.
      required:
      - application
      title: DeleteSimulationApplicationRequest
      type: object
    DeleteWorldTemplateRequest:
      example:
        template: ""
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template you
              want to delete.
      required:
      - template
      title: DeleteWorldTemplateRequest
      type: object
    DeploymentVersion:
      maxLength: 255
      minLength: 1
      pattern: "[0-9]*"
      type: string
    DeploymentLaunchConfig:
      description: Configuration information for a deployment launch.
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/Command'
          - description: The package name.
          title: packageName
        preLaunchFile:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: The deployment pre-launch file. This file will be executed
              prior to the launch file.
          title: preLaunchFile
        launchFile:
          allOf:
          - $ref: '#/components/schemas/Command'
          - description: The launch file name.
          title: launchFile
        postLaunchFile:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: The deployment post-launch file. This file will be executed
              after the launch file.
          title: postLaunchFile
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariableMap'
          - description: An array of key/value pairs specifying environment variables
              for the robot application
          title: environmentVariables
      required:
      - launchFile
      - packageName
      title: DeploymentLaunchConfig
      type: object
    DeploymentJob:
      description: Information about a deployment job.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the deployment job.
          title: arn
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: fleet
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The status of the deployment job.
          title: status
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          - description: The deployment application configuration.
          title: deploymentApplicationConfigs
        deploymentConfig:
          $ref: '#/components/schemas/CreateDeploymentJobResponse_deploymentConfig'
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A short description of the reason why the deployment job
              failed.
          title: failureReason
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          - description: The deployment job failure code.
          title: failureCode
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the deployment\
              \ job was created."
          title: createdAt
      title: DeploymentJob
      type: object
    DeploymentJobs:
      items:
        $ref: '#/components/schemas/DeploymentJob'
      maxItems: 200
      minItems: 0
      type: array
    EnvironmentVariableMap:
      additionalProperties:
        $ref: '#/components/schemas/EnvironmentVariableValue'
      maxProperties: 20
      minProperties: 0
      type: object
    DeregisterRobotRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        robot: ""
        fleet: ""
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot.
      required:
      - fleet
      - robot
      title: DeregisterRobotRequest
      type: object
    DescribeDeploymentJobRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        job: ""
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the deployment job.
      required:
      - job
      title: DescribeDeploymentJobRequest
      type: object
    RobotDeploymentSummary:
      items:
        $ref: '#/components/schemas/RobotDeployment'
      type: array
    DescribeFleetRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
      required:
      - fleet
      title: DescribeFleetRequest
      type: object
    Robots:
      items:
        $ref: '#/components/schemas/Robot'
      maxItems: 1000
      minItems: 0
      type: array
    DescribeRobotApplicationRequest:
      example:
        applicationVersion: ""
        application: ""
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot application.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the robot application to describe.
      required:
      - application
      title: DescribeRobotApplicationRequest
      type: object
    DescribeRobotRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        robot: ""
      properties:
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot to be described.
      required:
      - robot
      title: DescribeRobotRequest
      type: object
    RobotStatus:
      enum:
      - Available
      - Registered
      - PendingNewDeployment
      - Deploying
      - Failed
      - InSync
      - NoResponse
      title: RobotStatus
      type: string
    DescribeSimulationApplicationRequest:
      example:
        applicationVersion: ""
        application: ""
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The application information for the simulation application.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the simulation application to describe.
      required:
      - application
      title: DescribeSimulationApplicationRequest
      type: object
    DescribeSimulationJobBatchRequest:
      example:
        batch: ""
      properties:
        batch:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The id of the batch to describe.
      required:
      - batch
      title: DescribeSimulationJobBatchRequest
      type: object
    SimulationJobBatchStatus:
      enum:
      - Pending
      - InProgress
      - Failed
      - Completed
      - Canceled
      - Canceling
      - Completing
      - TimingOut
      - TimedOut
      title: SimulationJobBatchStatus
      type: string
    SimulationJobBatchErrorCode:
      enum:
      - InternalServiceError
      title: SimulationJobBatchErrorCode
      type: string
    FailedCreateSimulationJobRequests:
      items:
        $ref: '#/components/schemas/FailedCreateSimulationJobRequest'
      type: array
    SimulationJobSummaries:
      items:
        $ref: '#/components/schemas/SimulationJobSummary'
      maxItems: 100
      minItems: 0
      type: array
    DescribeSimulationJobRequest:
      example:
        job: ""
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the simulation job to be
              described.
      required:
      - job
      title: DescribeSimulationJobRequest
      type: object
    NetworkInterface:
      description: Describes a network interface.
      properties:
        networkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The ID of the network interface.
          title: networkInterfaceId
        privateIpAddress:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The IPv4 address of the network interface within the subnet.
          title: privateIpAddress
        publicIpAddress:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The IPv4 public address of the network interface.
          title: publicIpAddress
      title: NetworkInterface
      type: object
    DescribeWorldExportJobRequest:
      example:
        job: ""
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world export job to
              describe.
      required:
      - job
      title: DescribeWorldExportJobRequest
      type: object
    DescribeWorldGenerationJobRequest:
      example:
        job: ""
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world generation job
              to describe.
      required:
      - job
      title: DescribeWorldGenerationJobRequest
      type: object
    FinishedWorldsSummary:
      description: Information about worlds that finished.
      properties:
        finishedCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of finished worlds.
          title: finishedCount
        succeededWorlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: A list of worlds that succeeded.
          title: succeededWorlds
        failureSummary:
          $ref: '#/components/schemas/FinishedWorldsSummary_failureSummary'
      title: FinishedWorldsSummary
      type: object
    DescribeWorldRequest:
      example:
        world: ""
      properties:
        world:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world you want to describe.
      required:
      - world
      title: DescribeWorldRequest
      type: object
    DescribeWorldTemplateRequest:
      example:
        template: ""
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template you
              want to describe.
      required:
      - template
      title: DescribeWorldTemplateRequest
      type: object
    EnvironmentVariableKey:
      maxLength: 1024
      minLength: 1
      pattern: "[A-Z_][A-Z0-9_]*"
      type: string
    EnvironmentVariableValue:
      maxLength: 1024
      minLength: 1
      pattern: .*
      title: EnvironmentVariableValue
      type: string
    ExitBehavior:
      enum:
      - FAIL
      - RESTART
      title: ExitBehavior
      type: string
    FailedAt:
      format: date-time
      type: string
    FailedCreateSimulationJobRequest:
      description: Information about a failed create simulation job request.
      properties:
        request:
          $ref: '#/components/schemas/FailedCreateSimulationJobRequest_request'
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The failure reason of the simulation job request.
          title: failureReason
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobErrorCode'
          - description: The failure code.
          title: failureCode
        failedAt:
          allOf:
          - $ref: '#/components/schemas/FailedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job batch failed."
          title: failedAt
      title: FailedCreateSimulationJobRequest
      type: object
    Integer:
      type: integer
    WorldFailures:
      items:
        $ref: '#/components/schemas/WorldFailure'
      maxItems: 100
      minItems: 0
      type: array
    FailureSummary:
      description: Information about worlds that failed.
      properties:
        totalFailureCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of failures.
          title: totalFailureCount
        failures:
          allOf:
          - $ref: '#/components/schemas/WorldFailures'
          - description: The worlds that failed.
          title: failures
      title: FailureSummary
      type: object
    FilterValues:
      items:
        $ref: '#/components/schemas/Name'
      maxItems: 1
      minItems: 1
      type: array
    Filters:
      items:
        $ref: '#/components/schemas/Filter'
      maxItems: 1
      minItems: 1
      type: array
    Fleet:
      description: Information about a fleet.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the fleet.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the fleet\
              \ was created."
          title: createdAt
        lastDeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The status of the last fleet deployment.
          title: lastDeploymentStatus
        lastDeploymentJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the last deployment job.
          title: lastDeploymentJob
        lastDeploymentTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: The time of the last deployment.
          title: lastDeploymentTime
      title: Fleet
      type: object
    Fleets:
      items:
        $ref: '#/components/schemas/Fleet'
      maxItems: 200
      minItems: 0
      type: array
    GenericInteger:
      type: integer
    GetWorldTemplateBodyRequest:
      example:
        template: ""
        generationJob: ""
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template.
        generationJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world generator job.
      title: GetWorldTemplateBodyRequest
      type: object
    PortForwardingConfig:
      description: Configuration information for port forwarding.
      properties:
        portMappings:
          allOf:
          - $ref: '#/components/schemas/PortMappingList'
          - description: The port mappings for the configuration.
          title: portMappings
      title: PortForwardingConfig
      type: object
    LaunchConfig:
      description: Information about a launch configuration.
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/Command'
          - description: The package name.
          title: packageName
        launchFile:
          allOf:
          - $ref: '#/components/schemas/Command'
          - description: The launch file name.
          title: launchFile
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariableMap'
          - description: The environment variables for the application launch.
          title: environmentVariables
        portForwardingConfig:
          $ref: '#/components/schemas/LaunchConfig_portForwardingConfig'
        streamUI:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Boolean indicating whether a streaming session will be configured\
              \ for the application. If <code>True</code>, AWS RoboMaker will configure\
              \ a connection so you can interact with your application as it is running\
              \ in the simulation. You must configure and launch the component. It\
              \ must have a graphical user interface. "
          title: streamUI
        command:
          allOf:
          - $ref: '#/components/schemas/CommandList'
          - description: "<p>If you've specified <code>General</code> as the value\
              \ for your <code>RobotSoftwareSuite</code>, you can use this field to\
              \ specify a list of commands for your container image.</p> <p>If you've\
              \ specified <code>SimulationRuntime</code> as the value for your <code>SimulationSoftwareSuite</code>,\
              \ you can use this field to specify a list of commands for your container\
              \ image.</p>"
          title: command
      title: LaunchConfig
      type: object
    PaginationToken:
      maxLength: 2048
      minLength: 1
      pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
      type: string
    MaxResults:
      type: integer
    ListDeploymentJobsRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>Optional filters to limit results.</p> <p>The filter\
              \ names <code>status</code> and <code>fleetName</code> are supported.\
              \ When filtering, you must use the complete value of the filtered item.\
              \ You can use up to three filters, but they must be for the same named\
              \ item. For example, if you are looking for items with the status <code>InProgress</code>\
              \ or the status <code>Pending</code>.</p>"
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListDeploymentJobs</code> again and assign that token to\
              \ the request object's <code>nextToken</code> parameter. If there are\
              \ no remaining results, the previous response object's NextToken parameter\
              \ is set to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListDeploymentJobs</code>\
              \ only returns <code>maxResults</code> results in a single page along\
              \ with a <code>nextToken</code> response element. The remaining results\
              \ of the initial request can be seen by sending another <code>ListDeploymentJobs</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 200. If this parameter is not used, then <code>ListDeploymentJobs</code>\
              \ returns up to 200 results and a <code>nextToken</code> value if applicable. "
      title: ListDeploymentJobsRequest
      type: object
    ListFleetsRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "<p>If the previous paginated request did not return all\
              \ of the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListFleets</code> again and assign that token to the request\
              \ object's <code>nextToken</code> parameter. If there are no remaining\
              \ results, the previous response object's NextToken parameter is set\
              \ to null. </p> <note> <p>This token should be treated as an opaque\
              \ identifier that is only used to retrieve the next items in a list\
              \ and not for other programmatic purposes.</p> </note>"
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListFleets</code> only\
              \ returns <code>maxResults</code> results in a single page along with\
              \ a <code>nextToken</code> response element. The remaining results of\
              \ the initial request can be seen by sending another <code>ListFleets</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 200. If this parameter is not used, then <code>ListFleets</code>\
              \ returns up to 200 results and a <code>nextToken</code> value if applicable. "
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>Optional filters to limit results.</p> <p>The filter\
              \ name <code>name</code> is supported. When filtering, you must use\
              \ the complete value of the filtered item. You can use up to three filters.</p>"
      title: ListFleetsRequest
      type: object
    VersionQualifier:
      maxLength: 255
      minLength: 1
      pattern: ALL
      type: string
    ListRobotApplicationsRequest:
      example:
        versionQualifier: ""
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        versionQualifier:
          allOf:
          - $ref: '#/components/schemas/VersionQualifier'
          - description: The version qualifier of the robot application.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListRobotApplications</code> again and assign that token\
              \ to the request object's <code>nextToken</code> parameter. If there\
              \ are no remaining results, the previous response object's NextToken\
              \ parameter is set to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListRobotApplications</code>\
              \ only returns <code>maxResults</code> results in a single page along\
              \ with a <code>nextToken</code> response element. The remaining results\
              \ of the initial request can be seen by sending another <code>ListRobotApplications</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 100. If this parameter is not used, then <code>ListRobotApplications</code>\
              \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>Optional filters to limit results.</p> <p>The filter\
              \ name <code>name</code> is supported. When filtering, you must use\
              \ the complete value of the filtered item. You can use up to three filters.</p>"
      title: ListRobotApplicationsRequest
      type: object
    RobotApplicationSummaries:
      items:
        $ref: '#/components/schemas/RobotApplicationSummary'
      maxItems: 100
      minItems: 0
      type: array
    ListRobotsRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListRobots</code> again and assign that token to the request\
              \ object's <code>nextToken</code> parameter. If there are no remaining\
              \ results, the previous response object's NextToken parameter is set\
              \ to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListRobots</code> only\
              \ returns <code>maxResults</code> results in a single page along with\
              \ a <code>nextToken</code> response element. The remaining results of\
              \ the initial request can be seen by sending another <code>ListRobots</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 200. If this parameter is not used, then <code>ListRobots</code>\
              \ returns up to 200 results and a <code>nextToken</code> value if applicable. "
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>Optional filters to limit results.</p> <p>The filter\
              \ names <code>status</code> and <code>fleetName</code> are supported.\
              \ When filtering, you must use the complete value of the filtered item.\
              \ You can use up to three filters, but they must be for the same named\
              \ item. For example, if you are looking for items with the status <code>Registered</code>\
              \ or the status <code>Available</code>.</p>"
      title: ListRobotsRequest
      type: object
    ListSimulationApplicationsRequest:
      example:
        versionQualifier: ""
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        versionQualifier:
          allOf:
          - $ref: '#/components/schemas/VersionQualifier'
          - description: The version qualifier of the simulation application.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListSimulationApplications</code> again and assign that\
              \ token to the request object's <code>nextToken</code> parameter. If\
              \ there are no remaining results, the previous response object's NextToken\
              \ parameter is set to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListSimulationApplications</code>\
              \ only returns <code>maxResults</code> results in a single page along\
              \ with a <code>nextToken</code> response element. The remaining results\
              \ of the initial request can be seen by sending another <code>ListSimulationApplications</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 100. If this parameter is not used, then <code>ListSimulationApplications</code>\
              \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>Optional list of filters to limit results.</p> <p>The\
              \ filter name <code>name</code> is supported. When filtering, you must\
              \ use the complete value of the filtered item. You can use up to three\
              \ filters.</p>"
      title: ListSimulationApplicationsRequest
      type: object
    SimulationApplicationSummaries:
      items:
        $ref: '#/components/schemas/SimulationApplicationSummary'
      maxItems: 100
      minItems: 0
      type: array
    ListSimulationJobBatchesRequest:
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListSimulationJobBatches</code> again and assign that token\
              \ to the request object's <code>nextToken</code> parameter. If there\
              \ are no remaining results, the previous response object's NextToken\
              \ parameter is set to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListSimulationJobBatches</code>\
              \ only returns <code>maxResults</code> results in a single page along\
              \ with a <code>nextToken</code> response element. The remaining results\
              \ of the initial request can be seen by sending another <code>ListSimulationJobBatches</code>\
              \ request with the returned <code>nextToken</code> value. "
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: Optional filters to limit results.
      title: ListSimulationJobBatchesRequest
      type: object
    SimulationJobBatchSummaries:
      items:
        $ref: '#/components/schemas/SimulationJobBatchSummary'
      type: array
    ListSimulationJobsRequest:
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListSimulationJobs</code> again and assign that token to\
              \ the request object's <code>nextToken</code> parameter. If there are\
              \ no remaining results, the previous response object's NextToken parameter\
              \ is set to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListSimulationJobs</code>\
              \ only returns <code>maxResults</code> results in a single page along\
              \ with a <code>nextToken</code> response element. The remaining results\
              \ of the initial request can be seen by sending another <code>ListSimulationJobs</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 1000. If this parameter is not used, then <code>ListSimulationJobs</code>\
              \ returns up to 1000 results and a <code>nextToken</code> value if applicable. "
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>Optional filters to limit results.</p> <p>The filter\
              \ names <code>status</code> and <code>simulationApplicationName</code>\
              \ and <code>robotApplicationName</code> are supported. When filtering,\
              \ you must use the complete value of the filtered item. You can use\
              \ up to three filters, but they must be for the same named item. For\
              \ example, if you are looking for items with the status <code>Preparing</code>\
              \ or the status <code>Running</code>.</p>"
      title: ListSimulationJobsRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListWorldExportJobsRequest:
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListWorldExportJobs</code> again and assign that token\
              \ to the request object's <code>nextToken</code> parameter. If there\
              \ are no remaining results, the previous response object's NextToken\
              \ parameter is set to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListWorldExportJobs</code>\
              \ only returns <code>maxResults</code> results in a single page along\
              \ with a <code>nextToken</code> response element. The remaining results\
              \ of the initial request can be seen by sending another <code>ListWorldExportJobs</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 100. If this parameter is not used, then <code>ListWorldExportJobs</code>\
              \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: Optional filters to limit results. You can use <code>generationJobId</code>
              and <code>templateId</code>.
      title: ListWorldExportJobsRequest
      type: object
    WorldExportJobSummaries:
      items:
        $ref: '#/components/schemas/WorldExportJobSummary'
      maxItems: 100
      minItems: 0
      type: array
    ListWorldGenerationJobsRequest:
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListWorldGenerationJobsRequest</code> again and assign\
              \ that token to the request object's <code>nextToken</code> parameter.\
              \ If there are no remaining results, the previous response object's\
              \ NextToken parameter is set to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListWorldGeneratorJobs</code>\
              \ only returns <code>maxResults</code> results in a single page along\
              \ with a <code>nextToken</code> response element. The remaining results\
              \ of the initial request can be seen by sending another <code>ListWorldGeneratorJobs</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 100. If this parameter is not used, then <code>ListWorldGeneratorJobs</code>\
              \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: Optional filters to limit results. You can use <code>status</code>
              and <code>templateId</code>.
      title: ListWorldGenerationJobsRequest
      type: object
    WorldGenerationJobSummaries:
      items:
        $ref: '#/components/schemas/WorldGenerationJobSummary'
      maxItems: 100
      minItems: 0
      type: array
    ListWorldTemplatesRequest:
      example:
        nextToken: ""
        maxResults: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListWorldTemplates</code> again and assign that token to\
              \ the request object's <code>nextToken</code> parameter. If there are\
              \ no remaining results, the previous response object's NextToken parameter\
              \ is set to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListWorldTemplates</code>\
              \ only returns <code>maxResults</code> results in a single page along\
              \ with a <code>nextToken</code> response element. The remaining results\
              \ of the initial request can be seen by sending another <code>ListWorldTemplates</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 100. If this parameter is not used, then <code>ListWorldTemplates</code>\
              \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
      title: ListWorldTemplatesRequest
      type: object
    TemplateSummaries:
      items:
        $ref: '#/components/schemas/TemplateSummary'
      type: array
    ListWorldsRequest:
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the previous paginated request did not return all of\
              \ the remaining results, the response object's <code>nextToken</code>\
              \ parameter value is set to a token. To retrieve the next set of results,\
              \ call <code>ListWorlds</code> again and assign that token to the request\
              \ object's <code>nextToken</code> parameter. If there are no remaining\
              \ results, the previous response object's NextToken parameter is set\
              \ to null. "
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "When this parameter is used, <code>ListWorlds</code> only\
              \ returns <code>maxResults</code> results in a single page along with\
              \ a <code>nextToken</code> response element. The remaining results of\
              \ the initial request can be seen by sending another <code>ListWorlds</code>\
              \ request with the returned <code>nextToken</code> value. This value\
              \ can be between 1 and 100. If this parameter is not used, then <code>ListWorlds</code>\
              \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: Optional filters to limit results. You can use <code>status</code>.
      title: ListWorldsRequest
      type: object
    WorldSummaries:
      items:
        $ref: '#/components/schemas/WorldSummary'
      type: array
    NonSystemPort:
      maximum: 65535
      minimum: 1024
      type: integer
    PercentDone:
      format: float
      maximum: 100
      minimum: 0
      type: number
    Port:
      maximum: 65535
      minimum: 1
      type: integer
    PortMappingList:
      items:
        $ref: '#/components/schemas/PortMapping'
      maxItems: 10
      minItems: 0
      type: array
    PortMapping:
      description: An object representing a port mapping.
      properties:
        jobPort:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: 'The port number on the simulation job instance to use as
              a remote connection point. '
          title: jobPort
        applicationPort:
          allOf:
          - $ref: '#/components/schemas/NonSystemPort'
          - description: The port number on the application.
          title: applicationPort
        enableOnPublicIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A Boolean indicating whether to enable this port mapping
              on public IP.
          title: enableOnPublicIp
      required:
      - applicationPort
      - jobPort
      title: PortMapping
      type: object
    RobotDeploymentStep:
      enum:
      - Validating
      - DownloadingExtracting
      - ExecutingDownloadCondition
      - ExecutingPreLaunch
      - Launching
      - ExecutingPostLaunch
      - Finished
      title: RobotDeploymentStep
      type: string
    ProgressDetail:
      description: Information about the progress of a deployment job.
      properties:
        currentProgress:
          allOf:
          - $ref: '#/components/schemas/RobotDeploymentStep'
          - description: <p>The current progress status.</p> <dl> <dt>Validating</dt>
              <dd> <p>Validating the deployment.</p> </dd> <dt>DownloadingExtracting</dt>
              <dd> <p>Downloading and extracting the bundle on the robot.</p> </dd>
              <dt>ExecutingPreLaunch</dt> <dd> <p>Executing pre-launch script(s) if
              provided.</p> </dd> <dt>Launching</dt> <dd> <p>Launching the robot application.</p>
              </dd> <dt>ExecutingPostLaunch</dt> <dd> <p>Executing post-launch script(s)
              if provided.</p> </dd> <dt>Finished</dt> <dd> <p>Deployment is complete.</p>
              </dd> </dl>
          title: currentProgress
        percentDone:
          allOf:
          - $ref: '#/components/schemas/PercentDone'
          - description: Precentage of the step that is done. This currently only
              applies to the <code>Downloading/Extracting</code> step of the deployment.
              It is empty for other steps.
          title: percentDone
        estimatedTimeRemainingSeconds:
          allOf:
          - $ref: '#/components/schemas/GenericInteger'
          - description: Estimated amount of time in seconds remaining in the step.
              This currently only applies to the <code>Downloading/Extracting</code>
              step of the deployment. It is empty for other steps.
          title: estimatedTimeRemainingSeconds
        targetResource:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Resource Name (ARN) of the deployment job.
          title: targetResource
      title: ProgressDetail
      type: object
    RegisterRobotRequest:
      deprecated: true
      description: "AWS RoboMaker is unable to process this request as the support\
        \ for the AWS RoboMaker application deployment feature has ended. For additional\
        \ information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot.
      required:
      - fleet
      - robot
      title: RegisterRobotRequest
      type: object
    RestartSimulationJobRequest:
      example:
        job: ""
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the simulation job.
      required:
      - job
      title: RestartSimulationJobRequest
      type: object
    Robot:
      description: Information about a robot.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the robot.
          title: name
        fleetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: fleetArn
        status:
          allOf:
          - $ref: '#/components/schemas/RobotStatus'
          - description: The status of the robot.
          title: status
        greenGrassGroupId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The Greengrass group associated with the robot.
          title: greenGrassGroupId
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the robot\
              \ was created."
          title: createdAt
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The architecture of the robot.
          title: architecture
        lastDeploymentJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the last deployment job.
          title: lastDeploymentJob
        lastDeploymentTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: The time of the last deployment.
          title: lastDeploymentTime
      title: Robot
      type: object
    UploadConfigurations:
      items:
        $ref: '#/components/schemas/UploadConfiguration'
      maxItems: 10
      minItems: 0
      type: array
    Tools:
      items:
        $ref: '#/components/schemas/Tool'
      maxItems: 10
      minItems: 0
      type: array
    RobotApplicationNames:
      items:
        $ref: '#/components/schemas/Name'
      type: array
    RobotApplicationSummary:
      description: Summary information for a robot application.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the robot application.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the robot.
          title: arn
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the robot application.
          title: version
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the robot\
              \ application was last updated."
          title: lastUpdatedAt
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotApplicationSummary_robotSoftwareSuite'
      title: RobotApplicationSummary
      type: object
    RobotDeployment:
      description: Information about a robot deployment.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The robot deployment Amazon Resource Name (ARN).
          title: arn
        deploymentStartTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the deployment\
              \ was started."
          title: deploymentStartTime
        deploymentFinishTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the deployment\
              \ finished."
          title: deploymentFinishTime
        status:
          allOf:
          - $ref: '#/components/schemas/RobotStatus'
          - description: The status of the robot deployment.
          title: status
        progressDetail:
          $ref: '#/components/schemas/RobotDeployment_progressDetail'
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A short description of the reason why the robot deployment
              failed.
          title: failureReason
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          - description: The robot deployment failure code.
          title: failureCode
      title: RobotDeployment
      type: object
    S3KeyOrPrefix:
      maxLength: 1024
      minLength: 0
      pattern: .*
      title: S3KeyOrPrefix
      type: string
    S3KeyOutput:
      description: Information about S3 keys.
      properties:
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3KeyOrPrefix'
          - description: The S3 key.
          title: s3Key
        etag:
          allOf:
          - $ref: '#/components/schemas/S3Etag'
          - description: The etag for the object.
          title: etag
      title: S3KeyOutput
      type: object
    WorldConfigs:
      items:
        $ref: '#/components/schemas/WorldConfig'
      maxItems: 1
      minItems: 0
      type: array
    SimulationApplicationNames:
      items:
        $ref: '#/components/schemas/Name'
      type: array
    SimulationApplicationSummary:
      description: Summary information for a simulation application.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the simulation application.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the simulation application.
          title: arn
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the simulation application.
          title: version
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ application was last updated."
          title: lastUpdatedAt
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotApplicationSummary_robotSoftwareSuite'
        simulationSoftwareSuite:
          $ref: '#/components/schemas/SimulationApplicationSummary_simulationSoftwareSuite'
      title: SimulationApplicationSummary
      type: object
    SimulationJob:
      description: Information about a simulation job.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the simulation job.
          title: arn
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the simulation job.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobStatus'
          - description: Status of the simulation job.
          title: status
        lastStartedAt:
          allOf:
          - $ref: '#/components/schemas/LastStartedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job was last started."
          title: lastStartedAt
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job was last updated."
          title: lastUpdatedAt
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          - description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt>
              <dd> <p>Leaves the host running for its maximum timeout duration after
              a <code>4XX</code> error code.</p> </dd> <dt>Fail</dt> <dd> <p>Stop
              the simulation job and terminate the instance.</p> </dd> </dl>
          title: failureBehavior
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobErrorCode'
          - description: The failure code of the simulation job if it failed.
          title: failureCode
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The reason why the simulation job failed.
          title: failureReason
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: A unique identifier for this <code>SimulationJob</code> request.
          title: clientRequestToken
        outputLocation:
          $ref: '#/components/schemas/DescribeSimulationJobResponse_outputLocation'
        loggingConfig:
          $ref: '#/components/schemas/CreateSimulationJobResponse_loggingConfig'
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          - description: "The maximum simulation job duration in seconds. The value\
              \ must be 8 days (691,200 seconds) or less."
          title: maxJobDurationInSeconds
        simulationTimeMillis:
          allOf:
          - $ref: '#/components/schemas/SimulationTimeMillis'
          - description: The simulation job execution duration in milliseconds.
          title: simulationTimeMillis
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: 'The IAM role that allows the simulation instance to call
              the AWS APIs that are specified in its associated policies on your behalf.
              This is how credentials are passed in to your simulation job. '
          title: iamRole
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          - description: A list of robot applications.
          title: robotApplications
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          - description: A list of simulation applications.
          title: simulationApplications
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          - description: The data sources for the simulation job.
          title: dataSources
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the simulation job.
          title: tags
        vpcConfig:
          $ref: '#/components/schemas/SimulationJob_vpcConfig'
        networkInterface:
          $ref: '#/components/schemas/SimulationJob_networkInterface'
        compute:
          $ref: '#/components/schemas/SimulationJob_compute'
      title: SimulationJob
      type: object
    SimulationJobBatchSummary:
      description: Information about a simulation job batch.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the batch.
          title: arn
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job batch was last updated."
          title: lastUpdatedAt
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job batch was created."
          title: createdAt
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchStatus'
          - description: "<p>The status of the simulation job batch.</p> <dl> <dt>Pending</dt>\
              \ <dd> <p>The simulation job batch request is pending.</p> </dd> <dt>InProgress</dt>\
              \ <dd> <p>The simulation job batch is in progress. </p> </dd> <dt>Failed</dt>\
              \ <dd> <p>The simulation job batch failed. One or more simulation job\
              \ requests could not be completed due to an internal failure (like <code>InternalServiceError</code>).\
              \ See <code>failureCode</code> and <code>failureReason</code> for more\
              \ information.</p> </dd> <dt>Completed</dt> <dd> <p>The simulation batch\
              \ job completed. A batch is complete when (1) there are no pending simulation\
              \ job requests in the batch and none of the failed simulation job requests\
              \ are due to <code>InternalServiceError</code> and (2) when all created\
              \ simulation jobs have reached a terminal state (for example, <code>Completed</code>\
              \ or <code>Failed</code>). </p> </dd> <dt>Canceled</dt> <dd> <p>The\
              \ simulation batch job was cancelled.</p> </dd> <dt>Canceling</dt> <dd>\
              \ <p>The simulation batch job is being cancelled.</p> </dd> <dt>Completing</dt>\
              \ <dd> <p>The simulation batch job is completing.</p> </dd> <dt>TimingOut</dt>\
              \ <dd> <p>The simulation job batch is timing out.</p> <p>If a batch\
              \ timing out, and there are pending requests that were failing due to\
              \ an internal failure (like <code>InternalServiceError</code>), the\
              \ batch status will be <code>Failed</code>. If there are no such failing\
              \ request, the batch status will be <code>TimedOut</code>. </p> </dd>\
              \ <dt>TimedOut</dt> <dd> <p>The simulation batch job timed out.</p>\
              \ </dd> </dl>"
          title: status
        failedRequestCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of failed simulation job requests.
          title: failedRequestCount
        pendingRequestCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of pending simulation job requests.
          title: pendingRequestCount
        createdRequestCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of created simulation job requests.
          title: createdRequestCount
      title: SimulationJobBatchSummary
      type: object
    SimulationJobSummary:
      description: Summary information for a simulation job.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the simulation job.
          title: arn
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the simulation\
              \ job was last updated."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the simulation job.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobStatus'
          - description: The status of the simulation job.
          title: status
        simulationApplicationNames:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationNames'
          - description: A list of simulation job simulation application names.
          title: simulationApplicationNames
        robotApplicationNames:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationNames'
          - description: A list of simulation job robot application names.
          title: robotApplicationNames
        dataSourceNames:
          allOf:
          - $ref: '#/components/schemas/DataSourceNames'
          - description: The names of the data sources.
          title: dataSourceNames
        computeType:
          allOf:
          - $ref: '#/components/schemas/ComputeType'
          - description: The compute type for the simulation job summary.
          title: computeType
      title: SimulationJobSummary
      type: object
    Source:
      description: Information about a source.
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The s3 bucket name.
          title: s3Bucket
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The s3 object key.
          title: s3Key
        etag:
          allOf:
          - $ref: '#/components/schemas/S3Etag'
          - description: A hash of the object specified by <code>s3Bucket</code> and
              <code>s3Key</code>.
          title: etag
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The taget processor architecture for the application.
          title: architecture
      title: Source
      type: object
    StartSimulationJobBatchRequest:
      example:
        clientRequestToken: ""
        createSimulationJobRequests: ""
        batchPolicy:
          timeoutInSeconds: ""
          maxConcurrency: ""
        tags: ""
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
        batchPolicy:
          $ref: '#/components/schemas/DescribeSimulationJobBatchResponse_batchPolicy'
        createSimulationJobRequests:
          allOf:
          - $ref: '#/components/schemas/CreateSimulationJobRequests'
          - description: A list of simulation job requests to create in the batch.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the deployment job batch.
      required:
      - createSimulationJobRequests
      title: StartSimulationJobBatchRequest
      type: object
    SyncDeploymentJobRequest:
      deprecated: true
      description: "Support for the AWS RoboMaker application deployment feature has\
        \ ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
      example:
        fleet: ""
        clientRequestToken: ""
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The target fleet for the synchronization.
      required:
      - clientRequestToken
      - fleet
      title: SyncDeploymentJobRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A map that contains tag keys and tag values that are attached
              to the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    TemplateSummary:
      description: Summary information for a template.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the template.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the template\
              \ was created."
          title: createdAt
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          - description: "The time, in milliseconds since the epoch, when the template\
              \ was last updated."
          title: lastUpdatedAt
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          - description: The name of the template.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The version of the template that you're using.
          title: version
      title: TemplateSummary
      type: object
    UnrestrictedCommand:
      maxLength: 1024
      minLength: 1
      pattern: .*
      type: string
    Tool:
      description: Information about a tool. Tools are used in a simulation job.
      properties:
        streamUI:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: "Boolean indicating whether a streaming session will be configured\
              \ for the tool. If <code>True</code>, AWS RoboMaker will configure a\
              \ connection so you can interact with the tool as it is running in the\
              \ simulation. It must have a graphical user interface. The default is\
              \ <code>False</code>. "
          title: streamUI
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the tool.
          title: name
        command:
          allOf:
          - $ref: '#/components/schemas/UnrestrictedCommand'
          - description: Command-line arguments for the tool. It must include the
              tool executable name.
          title: command
        streamOutputToCloudWatch:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: 'Boolean indicating whether logs will be recorded in CloudWatch
              for the tool. The default is <code>False</code>. '
          title: streamOutputToCloudWatch
        exitBehavior:
          allOf:
          - $ref: '#/components/schemas/ExitBehavior'
          - description: 'Exit behavior determines what happens when your tool quits
              running. <code>RESTART</code> will cause your tool to be restarted.
              <code>FAIL</code> will cause your job to exit. The default is <code>RESTART</code>. '
          title: exitBehavior
      required:
      - command
      - name
      title: Tool
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateRobotApplicationRequest:
      example:
        environment:
          uri: ""
        application: ""
        sources: ""
        currentRevisionId: ""
        robotSoftwareSuite:
          name: ""
          version: ""
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The application information for the robot application.
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceConfigs'
          - description: The sources of the robot application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplicationResponse_robotSoftwareSuite'
        currentRevisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision id for the robot application.
        environment:
          $ref: '#/components/schemas/UpdateRobotApplicationResponse_environment'
      required:
      - application
      - robotSoftwareSuite
      title: UpdateRobotApplicationRequest
      type: object
    UpdateSimulationApplicationRequest:
      example:
        environment:
          uri: ""
        application: ""
        sources: ""
        simulationSoftwareSuite:
          name: ""
          version: ""
        renderingEngine:
          name: ""
          version: ""
        currentRevisionId: ""
        robotSoftwareSuite:
          name: ""
          version: ""
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The application information for the simulation application.
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceConfigs'
          - description: The sources of the simulation application.
        simulationSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_simulationSoftwareSuite'
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_robotSoftwareSuite'
        renderingEngine:
          $ref: '#/components/schemas/CreateSimulationApplicationResponse_renderingEngine'
        currentRevisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: The revision id for the robot application.
        environment:
          $ref: '#/components/schemas/UpdateSimulationApplicationRequest_environment'
      required:
      - application
      - robotSoftwareSuite
      - simulationSoftwareSuite
      title: UpdateSimulationApplicationRequest
      type: object
    UpdateWorldTemplateRequest:
      example:
        template: ""
        templateBody: ""
        name: ""
        templateLocation:
          s3Key: ""
          s3Bucket: ""
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template to update.
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          - description: The name of the template.
        templateBody:
          allOf:
          - $ref: '#/components/schemas/Json'
          - description: The world template body.
        templateLocation:
          $ref: '#/components/schemas/CreateWorldTemplateRequest_templateLocation'
      required:
      - template
      title: UpdateWorldTemplateRequest
      type: object
    UploadBehavior:
      enum:
      - UPLOAD_ON_TERMINATE
      - UPLOAD_ROLLING_AUTO_REMOVE
      title: UploadBehavior
      type: string
    UploadConfiguration:
      description: 'Provides upload configuration information. Files are uploaded
        from the simulation job to a location you specify. '
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "<p>A prefix that specifies where files will be uploaded\
              \ in Amazon S3. It is appended to the simulation output location to\
              \ determine the final path. </p> <p> For example, if your simulation\
              \ output location is <code>s3://my-bucket</code> and your upload configuration\
              \ name is <code>robot-test</code>, your files will be uploaded to <code>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</code>.\
              \ </p>"
          title: name
        path:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: " Specifies the path of the file(s) to upload. Standard Unix\
              \ glob matching rules are accepted, with the addition of <code>**</code>\
              \ as a <i>super asterisk</i>. For example, specifying <code>/var/log/**.log</code>\
              \ causes all .log files in the <code>/var/log</code> directory tree\
              \ to be collected. For more examples, see <a href=\"https://github.com/gobwas/glob\"\
              >Glob Library</a>. "
          title: path
        uploadBehavior:
          allOf:
          - $ref: '#/components/schemas/UploadBehavior'
          - description: "<p>Specifies when to upload the files:</p> <dl> <dt>UPLOAD_ON_TERMINATE</dt>\
              \ <dd> <p>Matching files are uploaded once the simulation enters the\
              \ <code>TERMINATING</code> state. Matching files are not uploaded until\
              \ all of your code (including tools) have stopped. </p> <p>If there\
              \ is a problem uploading a file, the upload is retried. If problems\
              \ persist, no further upload attempts will be made.</p> </dd> <dt>UPLOAD_ROLLING_AUTO_REMOVE</dt>\
              \ <dd> <p>Matching files are uploaded as they are created. They are\
              \ deleted after they are uploaded. The specified path is checked every\
              \ 5 seconds. A final check is made when all of your code (including\
              \ tools) have stopped. </p> </dd> </dl>"
          title: uploadBehavior
      required:
      - name
      - path
      - uploadBehavior
      title: UploadConfiguration
      type: object
    WorldConfig:
      description: Configuration information for a world.
      properties:
        world:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The world generated by Simulation WorldForge.
          title: world
      title: WorldConfig
      type: object
    WorldExportJobSummary:
      description: Information about a world export job.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the world export job.
          title: arn
        status:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobStatus'
          - description: <p>The status of the world export job.</p> <dl> <dt>Pending</dt>
              <dd> <p>The world export job request is pending.</p> </dd> <dt>Running</dt>
              <dd> <p>The world export job is running. </p> </dd> <dt>Completed</dt>
              <dd> <p>The world export job completed. </p> </dd> <dt>Failed</dt> <dd>
              <p>The world export job failed. See <code>failureCode</code> for more
              information. </p> </dd> <dt>Canceled</dt> <dd> <p>The world export job
              was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world export
              job is being cancelled.</p> </dd> </dl>
          title: status
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ export job was created."
          title: createdAt
        worlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          - description: A list of worlds.
          title: worlds
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
      title: WorldExportJobSummary
      type: object
    WorldFailure:
      description: Information about a failed world.
      properties:
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobErrorCode'
          - description: "<p>The failure code of the world export job if it failed:</p>\
              \ <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p>\
              \ </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds\
              \ the maximum number allowed, or the number of concurrent stream requests\
              \ exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt>\
              \ <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt>\
              \ <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt>\
              \ <dd> <p>An input parameter in the request is not valid.</p> </dd>\
              \ </dl>"
          title: failureCode
        sampleFailureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The sample reason why the world failed. World errors are
              aggregated. A sample is used as the <code>sampleFailureReason</code>. '
          title: sampleFailureReason
        failureCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of failed worlds.
          title: failureCount
      title: WorldFailure
      type: object
    WorldGenerationJobSummary:
      description: Information about a world generator job.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the world generator job.
          title: arn
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template.
          title: template
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ generator job was created."
          title: createdAt
        status:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobStatus'
          - description: <p>The status of the world generator job:</p> <dl> <dt>Pending</dt>
              <dd> <p>The world generator job request is pending.</p> </dd> <dt>Running</dt>
              <dd> <p>The world generator job is running. </p> </dd> <dt>Completed</dt>
              <dd> <p>The world generator job completed. </p> </dd> <dt>Failed</dt>
              <dd> <p>The world generator job failed. See <code>failureCode</code>
              for more information. </p> </dd> <dt>PartialFailed</dt> <dd> <p>Some
              worlds did not generate.</p> </dd> <dt>Canceled</dt> <dd> <p>The world
              generator job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The
              world generator job is being cancelled.</p> </dd> </dl>
          title: status
        worldCount:
          $ref: '#/components/schemas/DescribeWorldGenerationJobResponse_worldCount'
        succeededWorldCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of worlds that were generated.
          title: succeededWorldCount
        failedWorldCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of worlds that failed.
          title: failedWorldCount
      title: WorldGenerationJobSummary
      type: object
    WorldSummary:
      description: Information about a world.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the world.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          - description: "The time, in milliseconds since the epoch, when the world\
              \ was created."
          title: createdAt
        generationJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world generation job.
          title: generationJob
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (arn) of the world template.
          title: template
      title: WorldSummary
      type: object
    BatchDeleteWorlds_request:
      properties:
        worlds:
          description: A list of Amazon Resource Names (arns) that correspond to worlds
            to delete.
          items:
            $ref: '#/components/schemas/Arn'
          maxItems: 100
          minItems: 1
          title: worlds
          type: array
      required:
      - worlds
      title: BatchDeleteWorlds_request
      type: object
    BatchDescribeSimulationJob_request:
      properties:
        jobs:
          description: A list of Amazon Resource Names (ARNs) of simulation jobs to
            describe.
          items:
            $ref: '#/components/schemas/Arn'
          maxItems: 100
          minItems: 1
          title: jobs
          type: array
      required:
      - jobs
      title: BatchDescribeSimulationJob_request
      type: object
    CancelDeploymentJob_request:
      properties:
        job:
          description: The deployment job ARN to cancel.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: job
          type: string
      required:
      - job
      title: CancelDeploymentJob_request
      type: object
    CancelSimulationJob_request:
      properties:
        job:
          description: The simulation job ARN to cancel.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: job
          type: string
      required:
      - job
      title: CancelSimulationJob_request
      type: object
    CancelSimulationJobBatch_request:
      properties:
        batch:
          description: The id of the batch to cancel.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: batch
          type: string
      required:
      - batch
      title: CancelSimulationJobBatch_request
      type: object
    CancelWorldExportJob_request:
      properties:
        job:
          description: The Amazon Resource Name (arn) of the world export job to cancel.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: job
          type: string
      required:
      - job
      title: CancelWorldExportJob_request
      type: object
    CancelWorldGenerationJob_request:
      properties:
        job:
          description: The Amazon Resource Name (arn) of the world generator job to
            cancel.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: job
          type: string
      required:
      - job
      title: CancelWorldGenerationJob_request
      type: object
    CreateDeploymentJob_request_deploymentConfig_downloadConditionFile:
      allOf:
      - $ref: '#/components/schemas/S3Object'
      - description: The download condition file.
      example:
        bucket: ""
        etag: ""
        key: ""
      title: CreateDeploymentJob_request_deploymentConfig_downloadConditionFile
    CreateDeploymentJob_request_deploymentConfig:
      description: Information about a deployment configuration.
      properties:
        concurrentDeploymentPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of robots receiving the deployment at the
              same time.
          title: concurrentDeploymentPercentage
        failureThresholdPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of deployments that need to fail before stopping
              deployment.
          title: failureThresholdPercentage
        robotDeploymentTimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/DeploymentTimeout'
          - description: "The amount of time, in seconds, to wait for deployment to\
              \ a single robot to complete. Choose a time between 1 minute and 7 days.\
              \ The default is 5 hours."
          title: robotDeploymentTimeoutInSeconds
        downloadConditionFile:
          $ref: '#/components/schemas/CreateDeploymentJob_request_deploymentConfig_downloadConditionFile'
      title: CreateDeploymentJob_request_deploymentConfig
      type: object
    CreateDeploymentJob_request:
      properties:
        deploymentConfig:
          $ref: '#/components/schemas/CreateDeploymentJob_request_deploymentConfig'
        clientRequestToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-=]*"
          title: clientRequestToken
          type: string
        fleet:
          description: The Amazon Resource Name (ARN) of the fleet to deploy.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: fleet
          type: string
        deploymentApplicationConfigs:
          description: The deployment application configuration.
          items:
            $ref: '#/components/schemas/DeploymentApplicationConfig'
          maxItems: 1
          minItems: 1
          title: deploymentApplicationConfigs
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the deployment job.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
      required:
      - clientRequestToken
      - deploymentApplicationConfigs
      - fleet
      title: CreateDeploymentJob_request
      type: object
    CreateFleet_request:
      properties:
        name:
          description: The name of the fleet.
          maxLength: 255
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-]*"
          title: name
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the fleet.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
      required:
      - name
      title: CreateFleet_request
      type: object
    CreateRobot_request:
      properties:
        name:
          description: The name for the robot.
          maxLength: 255
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-]*"
          title: name
          type: string
        architecture:
          description: The target architecture of the robot.
          enum:
          - X86_64
          - ARM64
          - ARMHF
          title: architecture
          type: string
        greengrassGroupId:
          description: The Greengrass group id.
          maxLength: 1224
          minLength: 1
          pattern: .*
          title: greengrassGroupId
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the robot.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
      required:
      - architecture
      - greengrassGroupId
      - name
      title: CreateRobot_request
      type: object
    CreateRobotApplication_request_robotSoftwareSuite:
      description: Information about a robot software suite (ROS distribution).
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuiteType'
          - description: The name of the robot software suite (ROS distribution).
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuiteVersionType'
          - description: The version of the robot software suite (ROS distribution).
          title: version
      title: CreateRobotApplication_request_robotSoftwareSuite
      type: object
    CreateRobotApplication_request_environment:
      description: The object that contains the Docker image URI for either your robot
        or simulation applications.
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/RepositoryUrl'
          - description: The Docker image URI for either your robot or simulation
              applications.
          title: uri
      title: CreateRobotApplication_request_environment
      type: object
    CreateRobotApplication_request:
      properties:
        name:
          description: The name of the robot application.
          maxLength: 255
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-]*"
          title: name
          type: string
        sources:
          description: The sources of the robot application.
          items:
            $ref: '#/components/schemas/SourceConfig'
          title: sources
          type: array
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplication_request_robotSoftwareSuite'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the robot application.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
        environment:
          $ref: '#/components/schemas/CreateRobotApplication_request_environment'
      required:
      - name
      - robotSoftwareSuite
      title: CreateRobotApplication_request
      type: object
    CreateRobotApplicationVersion_request:
      properties:
        application:
          description: The application information for the robot application.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: application
          type: string
        currentRevisionId:
          description: "The current revision id for the robot application. If you\
            \ provide a value and it matches the latest revision ID, a new version\
            \ will be created."
          maxLength: 40
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-]*"
          title: currentRevisionId
          type: string
        s3Etags:
          description: The Amazon S3 identifier for the zip file bundle that you use
            for your robot application.
          items:
            $ref: '#/components/schemas/S3Etag'
          title: s3Etags
          type: array
        imageDigest:
          description: A SHA256 identifier for the Docker image that you use for your
            robot application.
          maxLength: 72
          minLength: 0
          pattern: "[Ss][Hh][Aa]256:[0-9a-fA-F]{64}"
          title: imageDigest
          type: string
      required:
      - application
      title: CreateRobotApplicationVersion_request
      type: object
    CreateSimulationApplication_request_simulationSoftwareSuite:
      description: Information about a simulation software suite.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuiteType'
          - description: The name of the simulation software suite.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuiteVersionType'
          - description: The version of the simulation software suite.
          title: version
      title: CreateSimulationApplication_request_simulationSoftwareSuite
      type: object
    CreateSimulationApplication_request_renderingEngine:
      description: Information about a rendering engine.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RenderingEngineType'
          - description: The name of the rendering engine.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/RenderingEngineVersionType'
          - description: The version of the rendering engine.
          title: version
      title: CreateSimulationApplication_request_renderingEngine
      type: object
    CreateSimulationApplication_request:
      properties:
        name:
          description: The name of the simulation application.
          maxLength: 255
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-]*"
          title: name
          type: string
        sources:
          description: The sources of the simulation application.
          items:
            $ref: '#/components/schemas/SourceConfig'
          title: sources
          type: array
        simulationSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplication_request_simulationSoftwareSuite'
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplication_request_robotSoftwareSuite'
        renderingEngine:
          $ref: '#/components/schemas/CreateSimulationApplication_request_renderingEngine'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the simulation application.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
        environment:
          $ref: '#/components/schemas/CreateRobotApplication_request_environment'
      required:
      - name
      - robotSoftwareSuite
      - simulationSoftwareSuite
      title: CreateSimulationApplication_request
      type: object
    CreateSimulationApplicationVersion_request:
      properties:
        application:
          description: The application information for the simulation application.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: application
          type: string
        currentRevisionId:
          description: "The current revision id for the simulation application. If\
            \ you provide a value and it matches the latest revision ID, a new version\
            \ will be created."
          maxLength: 40
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-]*"
          title: currentRevisionId
          type: string
        s3Etags:
          description: The Amazon S3 eTag identifier for the zip file bundle that
            you use to create the simulation application.
          items:
            $ref: '#/components/schemas/S3Etag'
          title: s3Etags
          type: array
        imageDigest:
          description: The SHA256 digest used to identify the Docker image URI used
            to created the simulation application.
          maxLength: 72
          minLength: 0
          pattern: "[Ss][Hh][Aa]256:[0-9a-fA-F]{64}"
          title: imageDigest
          type: string
      required:
      - application
      title: CreateSimulationApplicationVersion_request
      type: object
    CreateSimulationJob_request_outputLocation:
      description: The output location.
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The S3 bucket for output.
          title: s3Bucket
        s3Prefix:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The S3 folder in the <code>s3Bucket</code> where output files
              will be placed.
          title: s3Prefix
      title: CreateSimulationJob_request_outputLocation
      type: object
    CreateSimulationJob_request_loggingConfig:
      description: The logging configuration.
      properties:
        recordAllRosTopics:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - deprecated: true
            description: "<p>A boolean indicating whether to record all ROS topics.</p>\
              \ <important> <p>This API is no longer supported and will throw an error\
              \ if used.</p> </important>AWS RoboMaker is ending support for ROS software\
              \ suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html."
          title: recordAllRosTopics
      title: CreateSimulationJob_request_loggingConfig
      type: object
    CreateSimulationJob_request_vpcConfig:
      description: "If your simulation job accesses resources in a VPC, you provide\
        \ this parameter identifying the list of security group IDs and subnet IDs.\
        \ These must belong to the same VPC. You must provide at least one security\
        \ group and two subnet IDs."
      properties:
        subnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          - description: A list of one or more subnet IDs in your VPC.
          title: subnets
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          - description: A list of one or more security groups IDs in your VPC.
          title: securityGroups
        assignPublicIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A boolean indicating whether to assign a public IP address.
          title: assignPublicIp
      title: CreateSimulationJob_request_vpcConfig
      type: object
    CreateSimulationJob_request_compute:
      description: Compute information for the simulation job.
      properties:
        simulationUnitLimit:
          allOf:
          - $ref: '#/components/schemas/SimulationUnit'
          - description: 'The simulation unit limit. Your simulation is allocated
              CPU and memory proportional to the supplied simulation unit limit. A
              simulation unit is 1 vcpu and 2GB of memory. You are only billed for
              the SU utilization you consume up to the maximum value provided. The
              default is 15. '
          title: simulationUnitLimit
        computeType:
          allOf:
          - $ref: '#/components/schemas/ComputeType'
          - description: Compute type information for the simulation job.
          title: computeType
        gpuUnitLimit:
          allOf:
          - $ref: '#/components/schemas/GPUUnit'
          - description: Compute GPU unit limit for the simulation job. It is the
              same as the number of GPUs allocated to the SimulationJob.
          title: gpuUnitLimit
      title: CreateSimulationJob_request_compute
      type: object
    CreateSimulationJob_request:
      properties:
        clientRequestToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-=]*"
          title: clientRequestToken
          type: string
        outputLocation:
          $ref: '#/components/schemas/CreateSimulationJob_request_outputLocation'
        loggingConfig:
          $ref: '#/components/schemas/CreateSimulationJob_request_loggingConfig'
        maxJobDurationInSeconds:
          description: "The maximum simulation job duration in seconds (up to 14 days\
            \ or 1,209,600 seconds. When <code>maxJobDurationInSeconds</code> is reached,\
            \ the simulation job will status will transition to <code>Completed</code>."
          title: maxJobDurationInSeconds
          type: integer
        iamRole:
          description: 'The IAM role name that allows the simulation instance to call
            the AWS APIs that are specified in its associated policies on your behalf.
            This is how credentials are passed in to your simulation job. '
          maxLength: 255
          minLength: 1
          pattern: arn:aws:iam::\w+:role/.*
          title: iamRole
          type: string
        failureBehavior:
          description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt>
            <dd> <p>Leaves the instance running for its maximum timeout duration after
            a <code>4XX</code> error code.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the
            simulation job and terminate the instance.</p> </dd> </dl>
          enum:
          - Fail
          - Continue
          title: failureBehavior
          type: string
        robotApplications:
          description: The robot application to use in the simulation job.
          items:
            $ref: '#/components/schemas/RobotApplicationConfig'
          maxItems: 1
          minItems: 1
          title: robotApplications
          type: array
        simulationApplications:
          description: The simulation application to use in the simulation job.
          items:
            $ref: '#/components/schemas/SimulationApplicationConfig'
          maxItems: 1
          minItems: 1
          title: simulationApplications
          type: array
        dataSources:
          description: <p>Specify data sources to mount read-only files from S3 into
            your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>.
            </p> <note> <p>There is a limit of 100 files and a combined size of 25GB
            for all <code>DataSourceConfig</code> objects. </p> </note>
          items:
            $ref: '#/components/schemas/DataSourceConfig'
          maxItems: 6
          minItems: 1
          title: dataSources
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the simulation job.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
        vpcConfig:
          $ref: '#/components/schemas/CreateSimulationJob_request_vpcConfig'
        compute:
          $ref: '#/components/schemas/CreateSimulationJob_request_compute'
      required:
      - iamRole
      - maxJobDurationInSeconds
      title: CreateSimulationJob_request
      type: object
    CreateWorldExportJob_request:
      properties:
        clientRequestToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-=]*"
          title: clientRequestToken
          type: string
        worlds:
          description: A list of Amazon Resource Names (arns) that correspond to worlds
            to export.
          items:
            $ref: '#/components/schemas/Arn'
          maxItems: 100
          minItems: 1
          title: worlds
          type: array
        outputLocation:
          $ref: '#/components/schemas/CreateSimulationJob_request_outputLocation'
        iamRole:
          description: The IAM role that the world export process uses to access the
            Amazon S3 bucket and put the export.
          maxLength: 255
          minLength: 1
          pattern: arn:aws:iam::\w+:role/.*
          title: iamRole
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the world export job.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
      required:
      - iamRole
      - outputLocation
      - worlds
      title: CreateWorldExportJob_request
      type: object
    CreateWorldGenerationJob_request_worldCount:
      description: "<p>The number of worlds that will be created. You can configure\
        \ the number of unique floorplans and the number of unique interiors for each\
        \ floor plan. For example, if you want 1 world with 20 unique interiors, you\
        \ set <code>floorplanCount = 1</code> and <code>interiorCountPerFloorplan\
        \ = 20</code>. This will result in 20 worlds (<code>floorplanCount</code>\
        \ * <code>interiorCountPerFloorplan)</code>. </p> <p>If you set <code>floorplanCount\
        \ = 4</code> and <code>interiorCountPerFloorplan = 5</code>, there will be\
        \ 20 worlds with 5 unique floor plans. </p>"
      properties:
        floorplanCount:
          allOf:
          - $ref: '#/components/schemas/FloorplanCount'
          - description: The number of unique floorplans.
          title: floorplanCount
        interiorCountPerFloorplan:
          allOf:
          - $ref: '#/components/schemas/InteriorCountPerFloorplan'
          - description: The number of unique interiors per floorplan.
          title: interiorCountPerFloorplan
      title: CreateWorldGenerationJob_request_worldCount
      type: object
    CreateWorldGenerationJob_request:
      properties:
        clientRequestToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-=]*"
          title: clientRequestToken
          type: string
        template:
          description: The Amazon Resource Name (arn) of the world template describing
            the worlds you want to create.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: template
          type: string
        worldCount:
          $ref: '#/components/schemas/CreateWorldGenerationJob_request_worldCount'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the world generator job.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
        worldTags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the generated worlds.
          maxProperties: 50
          minProperties: 0
          title: worldTags
          type: object
      required:
      - template
      - worldCount
      title: CreateWorldGenerationJob_request
      type: object
    CreateWorldTemplate_request_templateLocation:
      description: Information about a template location.
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The Amazon S3 bucket name.
          title: s3Bucket
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The list of S3 keys identifying the data source files.
          title: s3Key
      title: CreateWorldTemplate_request_templateLocation
      type: object
    CreateWorldTemplate_request:
      properties:
        clientRequestToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-=]*"
          title: clientRequestToken
          type: string
        name:
          description: The name of the world template.
          maxLength: 255
          minLength: 0
          pattern: .*
          title: name
          type: string
        templateBody:
          description: The world template body.
          maxLength: 262144
          minLength: 1
          pattern: "[\\S\\s]+"
          title: templateBody
          type: string
        templateLocation:
          $ref: '#/components/schemas/CreateWorldTemplate_request_templateLocation'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the world template.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
      title: CreateWorldTemplate_request
      type: object
    DeleteFleet_request:
      properties:
        fleet:
          description: The Amazon Resource Name (ARN) of the fleet.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: fleet
          type: string
      required:
      - fleet
      title: DeleteFleet_request
      type: object
    DeleteRobot_request:
      properties:
        robot:
          description: The Amazon Resource Name (ARN) of the robot.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: robot
          type: string
      required:
      - robot
      title: DeleteRobot_request
      type: object
    DeleteRobotApplication_request:
      properties:
        application:
          description: The Amazon Resource Name (ARN) of the the robot application.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: application
          type: string
        applicationVersion:
          description: The version of the robot application to delete.
          maxLength: 255
          minLength: 1
          pattern: "(\\$LATEST)|[0-9]*"
          title: applicationVersion
          type: string
      required:
      - application
      title: DeleteRobotApplication_request
      type: object
    DeleteSimulationApplication_request:
      properties:
        application:
          description: The application information for the simulation application
            to delete.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: application
          type: string
        applicationVersion:
          description: The version of the simulation application to delete.
          maxLength: 255
          minLength: 1
          pattern: "(\\$LATEST)|[0-9]*"
          title: applicationVersion
          type: string
      required:
      - application
      title: DeleteSimulationApplication_request
      type: object
    DeleteWorldTemplate_request:
      properties:
        template:
          description: The Amazon Resource Name (arn) of the world template you want
            to delete.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: template
          type: string
      required:
      - template
      title: DeleteWorldTemplate_request
      type: object
    DeregisterRobot_request:
      properties:
        fleet:
          description: The Amazon Resource Name (ARN) of the fleet.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: fleet
          type: string
        robot:
          description: The Amazon Resource Name (ARN) of the robot.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: robot
          type: string
      required:
      - fleet
      - robot
      title: DeregisterRobot_request
      type: object
    DescribeDeploymentJob_request:
      properties:
        job:
          description: The Amazon Resource Name (ARN) of the deployment job.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: job
          type: string
      required:
      - job
      title: DescribeDeploymentJob_request
      type: object
    DescribeRobot_request:
      properties:
        robot:
          description: The Amazon Resource Name (ARN) of the robot to be described.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: robot
          type: string
      required:
      - robot
      title: DescribeRobot_request
      type: object
    DescribeRobotApplication_request:
      properties:
        application:
          description: The Amazon Resource Name (ARN) of the robot application.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: application
          type: string
        applicationVersion:
          description: The version of the robot application to describe.
          maxLength: 255
          minLength: 1
          pattern: "(\\$LATEST)|[0-9]*"
          title: applicationVersion
          type: string
      required:
      - application
      title: DescribeRobotApplication_request
      type: object
    DescribeSimulationApplication_request:
      properties:
        application:
          description: The application information for the simulation application.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: application
          type: string
        applicationVersion:
          description: The version of the simulation application to describe.
          maxLength: 255
          minLength: 1
          pattern: "(\\$LATEST)|[0-9]*"
          title: applicationVersion
          type: string
      required:
      - application
      title: DescribeSimulationApplication_request
      type: object
    DescribeSimulationJob_request:
      properties:
        job:
          description: The Amazon Resource Name (ARN) of the simulation job to be
            described.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: job
          type: string
      required:
      - job
      title: DescribeSimulationJob_request
      type: object
    DescribeSimulationJobBatch_request:
      properties:
        batch:
          description: The id of the batch to describe.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: batch
          type: string
      required:
      - batch
      title: DescribeSimulationJobBatch_request
      type: object
    DescribeWorld_request:
      properties:
        world:
          description: The Amazon Resource Name (arn) of the world you want to describe.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: world
          type: string
      required:
      - world
      title: DescribeWorld_request
      type: object
    DescribeWorldExportJob_request:
      properties:
        job:
          description: The Amazon Resource Name (arn) of the world export job to describe.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: job
          type: string
      required:
      - job
      title: DescribeWorldExportJob_request
      type: object
    DescribeWorldGenerationJob_request:
      properties:
        job:
          description: The Amazon Resource Name (arn) of the world generation job
            to describe.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: job
          type: string
      required:
      - job
      title: DescribeWorldGenerationJob_request
      type: object
    DescribeWorldTemplate_request:
      properties:
        template:
          description: The Amazon Resource Name (arn) of the world template you want
            to describe.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: template
          type: string
      required:
      - template
      title: DescribeWorldTemplate_request
      type: object
    GetWorldTemplateBody_request:
      properties:
        template:
          description: The Amazon Resource Name (arn) of the world template.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: template
          type: string
        generationJob:
          description: The Amazon Resource Name (arn) of the world generator job.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: generationJob
          type: string
      title: GetWorldTemplateBody_request
      type: object
    ListDeploymentJobs_request:
      properties:
        filters:
          description: "<p>Optional filters to limit results.</p> <p>The filter names\
            \ <code>status</code> and <code>fleetName</code> are supported. When filtering,\
            \ you must use the complete value of the filtered item. You can use up\
            \ to three filters, but they must be for the same named item. For example,\
            \ if you are looking for items with the status <code>InProgress</code>\
            \ or the status <code>Pending</code>.</p>"
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListDeploymentJobs</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListDeploymentJobs</code>\
            \ only returns <code>maxResults</code> results in a single page along\
            \ with a <code>nextToken</code> response element. The remaining results\
            \ of the initial request can be seen by sending another <code>ListDeploymentJobs</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 200. If this parameter is not used, then <code>ListDeploymentJobs</code>\
            \ returns up to 200 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
      title: ListDeploymentJobs_request
      type: object
    ListFleets_request:
      properties:
        nextToken:
          description: "<p>If the previous paginated request did not return all of\
            \ the remaining results, the response object's <code>nextToken</code>\
            \ parameter value is set to a token. To retrieve the next set of results,\
            \ call <code>ListFleets</code> again and assign that token to the request\
            \ object's <code>nextToken</code> parameter. If there are no remaining\
            \ results, the previous response object's NextToken parameter is set to\
            \ null. </p> <note> <p>This token should be treated as an opaque identifier\
            \ that is only used to retrieve the next items in a list and not for other\
            \ programmatic purposes.</p> </note>"
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListFleets</code> only\
            \ returns <code>maxResults</code> results in a single page along with\
            \ a <code>nextToken</code> response element. The remaining results of\
            \ the initial request can be seen by sending another <code>ListFleets</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 200. If this parameter is not used, then <code>ListFleets</code>\
            \ returns up to 200 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
        filters:
          description: "<p>Optional filters to limit results.</p> <p>The filter name\
            \ <code>name</code> is supported. When filtering, you must use the complete\
            \ value of the filtered item. You can use up to three filters.</p>"
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
      title: ListFleets_request
      type: object
    ListRobotApplications_request:
      properties:
        versionQualifier:
          description: The version qualifier of the robot application.
          maxLength: 255
          minLength: 1
          pattern: ALL
          title: versionQualifier
          type: string
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListRobotApplications</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListRobotApplications</code>\
            \ only returns <code>maxResults</code> results in a single page along\
            \ with a <code>nextToken</code> response element. The remaining results\
            \ of the initial request can be seen by sending another <code>ListRobotApplications</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 100. If this parameter is not used, then <code>ListRobotApplications</code>\
            \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
        filters:
          description: "<p>Optional filters to limit results.</p> <p>The filter name\
            \ <code>name</code> is supported. When filtering, you must use the complete\
            \ value of the filtered item. You can use up to three filters.</p>"
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
      title: ListRobotApplications_request
      type: object
    ListRobots_request:
      properties:
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListRobots</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListRobots</code> only\
            \ returns <code>maxResults</code> results in a single page along with\
            \ a <code>nextToken</code> response element. The remaining results of\
            \ the initial request can be seen by sending another <code>ListRobots</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 200. If this parameter is not used, then <code>ListRobots</code>\
            \ returns up to 200 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
        filters:
          description: "<p>Optional filters to limit results.</p> <p>The filter names\
            \ <code>status</code> and <code>fleetName</code> are supported. When filtering,\
            \ you must use the complete value of the filtered item. You can use up\
            \ to three filters, but they must be for the same named item. For example,\
            \ if you are looking for items with the status <code>Registered</code>\
            \ or the status <code>Available</code>.</p>"
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
      title: ListRobots_request
      type: object
    ListSimulationApplications_request:
      properties:
        versionQualifier:
          description: The version qualifier of the simulation application.
          maxLength: 255
          minLength: 1
          pattern: ALL
          title: versionQualifier
          type: string
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListSimulationApplications</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListSimulationApplications</code>\
            \ only returns <code>maxResults</code> results in a single page along\
            \ with a <code>nextToken</code> response element. The remaining results\
            \ of the initial request can be seen by sending another <code>ListSimulationApplications</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 100. If this parameter is not used, then <code>ListSimulationApplications</code>\
            \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
        filters:
          description: "<p>Optional list of filters to limit results.</p> <p>The filter\
            \ name <code>name</code> is supported. When filtering, you must use the\
            \ complete value of the filtered item. You can use up to three filters.</p>"
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
      title: ListSimulationApplications_request
      type: object
    ListSimulationJobBatches_request:
      properties:
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListSimulationJobBatches</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListSimulationJobBatches</code>\
            \ only returns <code>maxResults</code> results in a single page along\
            \ with a <code>nextToken</code> response element. The remaining results\
            \ of the initial request can be seen by sending another <code>ListSimulationJobBatches</code>\
            \ request with the returned <code>nextToken</code> value. "
          title: maxResults
          type: integer
        filters:
          description: Optional filters to limit results.
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
      title: ListSimulationJobBatches_request
      type: object
    ListSimulationJobs_request:
      properties:
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListSimulationJobs</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListSimulationJobs</code>\
            \ only returns <code>maxResults</code> results in a single page along\
            \ with a <code>nextToken</code> response element. The remaining results\
            \ of the initial request can be seen by sending another <code>ListSimulationJobs</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 1000. If this parameter is not used, then <code>ListSimulationJobs</code>\
            \ returns up to 1000 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
        filters:
          description: "<p>Optional filters to limit results.</p> <p>The filter names\
            \ <code>status</code> and <code>simulationApplicationName</code> and <code>robotApplicationName</code>\
            \ are supported. When filtering, you must use the complete value of the\
            \ filtered item. You can use up to three filters, but they must be for\
            \ the same named item. For example, if you are looking for items with\
            \ the status <code>Preparing</code> or the status <code>Running</code>.</p>"
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
      title: ListSimulationJobs_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the resource.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    ListWorldExportJobs_request:
      properties:
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListWorldExportJobs</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListWorldExportJobs</code>\
            \ only returns <code>maxResults</code> results in a single page along\
            \ with a <code>nextToken</code> response element. The remaining results\
            \ of the initial request can be seen by sending another <code>ListWorldExportJobs</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 100. If this parameter is not used, then <code>ListWorldExportJobs</code>\
            \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
        filters:
          description: Optional filters to limit results. You can use <code>generationJobId</code>
            and <code>templateId</code>.
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
      title: ListWorldExportJobs_request
      type: object
    ListWorldGenerationJobs_request:
      properties:
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListWorldGenerationJobsRequest</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListWorldGeneratorJobs</code>\
            \ only returns <code>maxResults</code> results in a single page along\
            \ with a <code>nextToken</code> response element. The remaining results\
            \ of the initial request can be seen by sending another <code>ListWorldGeneratorJobs</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 100. If this parameter is not used, then <code>ListWorldGeneratorJobs</code>\
            \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
        filters:
          description: Optional filters to limit results. You can use <code>status</code>
            and <code>templateId</code>.
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
      title: ListWorldGenerationJobs_request
      type: object
    ListWorldTemplates_request:
      properties:
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListWorldTemplates</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListWorldTemplates</code>\
            \ only returns <code>maxResults</code> results in a single page along\
            \ with a <code>nextToken</code> response element. The remaining results\
            \ of the initial request can be seen by sending another <code>ListWorldTemplates</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 100. If this parameter is not used, then <code>ListWorldTemplates</code>\
            \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
      title: ListWorldTemplates_request
      type: object
    ListWorlds_request:
      properties:
        nextToken:
          description: "If the previous paginated request did not return all of the\
            \ remaining results, the response object's <code>nextToken</code> parameter\
            \ value is set to a token. To retrieve the next set of results, call <code>ListWorlds</code>\
            \ again and assign that token to the request object's <code>nextToken</code>\
            \ parameter. If there are no remaining results, the previous response\
            \ object's NextToken parameter is set to null. "
          maxLength: 2048
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-\\/+=]*"
          title: nextToken
          type: string
        maxResults:
          description: "When this parameter is used, <code>ListWorlds</code> only\
            \ returns <code>maxResults</code> results in a single page along with\
            \ a <code>nextToken</code> response element. The remaining results of\
            \ the initial request can be seen by sending another <code>ListWorlds</code>\
            \ request with the returned <code>nextToken</code> value. This value can\
            \ be between 1 and 100. If this parameter is not used, then <code>ListWorlds</code>\
            \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
          title: maxResults
          type: integer
        filters:
          description: Optional filters to limit results. You can use <code>status</code>.
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 1
          minItems: 1
          title: filters
          type: array
      title: ListWorlds_request
      type: object
    RestartSimulationJob_request:
      properties:
        job:
          description: The Amazon Resource Name (ARN) of the simulation job.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: job
          type: string
      required:
      - job
      title: RestartSimulationJob_request
      type: object
    StartSimulationJobBatch_request_batchPolicy:
      description: Information about the batch policy.
      properties:
        timeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/BatchTimeoutInSeconds'
          - description: "<p>The amount of time, in seconds, to wait for the batch\
              \ to complete. </p> <p>If a batch times out, and there are pending requests\
              \ that were failing due to an internal failure (like <code>InternalServiceError</code>),\
              \ they will be moved to the failed list and the batch status will be\
              \ <code>Failed</code>. If the pending requests were failing for any\
              \ other reason, the failed pending requests will be moved to the failed\
              \ list and the batch status will be <code>TimedOut</code>. </p>"
          title: timeoutInSeconds
        maxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The number of active simulation jobs create as part of\
              \ the batch that can be in an active state at the same time. </p> <p>Active\
              \ states include: <code>Pending</code>,<code>Preparing</code>, <code>Running</code>,\
              \ <code>Restarting</code>, <code>RunningFailed</code> and <code>Terminating</code>.\
              \ All other states are terminal states. </p>"
          title: maxConcurrency
      title: StartSimulationJobBatch_request_batchPolicy
      type: object
    StartSimulationJobBatch_request:
      properties:
        clientRequestToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-=]*"
          title: clientRequestToken
          type: string
        batchPolicy:
          $ref: '#/components/schemas/StartSimulationJobBatch_request_batchPolicy'
        createSimulationJobRequests:
          description: A list of simulation job requests to create in the batch.
          items:
            $ref: '#/components/schemas/SimulationJobRequest'
          maxItems: 1000
          minItems: 1
          title: createSimulationJobRequests
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A map that contains tag keys and tag values that are attached
            to the deployment job batch.
          maxProperties: 50
          minProperties: 0
          title: tags
          type: object
      required:
      - createSimulationJobRequests
      title: StartSimulationJobBatch_request
      type: object
    SyncDeploymentJob_request:
      properties:
        clientRequestToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9_\\-=]*"
          title: clientRequestToken
          type: string
        fleet:
          description: The target fleet for the synchronization.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: fleet
          type: string
      required:
      - clientRequestToken
      - fleet
      title: SyncDeploymentJob_request
      type: object
    UpdateRobotApplication_request:
      properties:
        application:
          description: The application information for the robot application.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: application
          type: string
        sources:
          description: The sources of the robot application.
          items:
            $ref: '#/components/schemas/SourceConfig'
          title: sources
          type: array
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplication_request_robotSoftwareSuite'
        currentRevisionId:
          description: The revision id for the robot application.
          maxLength: 40
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-]*"
          title: currentRevisionId
          type: string
        environment:
          $ref: '#/components/schemas/CreateRobotApplication_request_environment'
      required:
      - application
      - robotSoftwareSuite
      title: UpdateRobotApplication_request
      type: object
    UpdateSimulationApplication_request:
      properties:
        application:
          description: The application information for the simulation application.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: application
          type: string
        sources:
          description: The sources of the simulation application.
          items:
            $ref: '#/components/schemas/SourceConfig'
          title: sources
          type: array
        simulationSoftwareSuite:
          $ref: '#/components/schemas/CreateSimulationApplication_request_simulationSoftwareSuite'
        robotSoftwareSuite:
          $ref: '#/components/schemas/CreateRobotApplication_request_robotSoftwareSuite'
        renderingEngine:
          $ref: '#/components/schemas/CreateSimulationApplication_request_renderingEngine'
        currentRevisionId:
          description: The revision id for the robot application.
          maxLength: 40
          minLength: 1
          pattern: "[a-zA-Z0-9_.\\-]*"
          title: currentRevisionId
          type: string
        environment:
          $ref: '#/components/schemas/CreateRobotApplication_request_environment'
      required:
      - application
      - robotSoftwareSuite
      - simulationSoftwareSuite
      title: UpdateSimulationApplication_request
      type: object
    UpdateWorldTemplate_request:
      properties:
        template:
          description: The Amazon Resource Name (arn) of the world template to update.
          maxLength: 1224
          minLength: 1
          pattern: arn:.*
          title: template
          type: string
        name:
          description: The name of the template.
          maxLength: 255
          minLength: 0
          pattern: .*
          title: name
          type: string
        templateBody:
          description: The world template body.
          maxLength: 262144
          minLength: 1
          pattern: "[\\S\\s]+"
          title: templateBody
          type: string
        templateLocation:
          $ref: '#/components/schemas/CreateWorldTemplate_request_templateLocation'
      required:
      - template
      title: UpdateWorldTemplate_request
      type: object
    CreateDeploymentJobResponse_deploymentConfig:
      allOf:
      - $ref: '#/components/schemas/DeploymentConfig'
      - description: The deployment configuration.
      example:
        robotDeploymentTimeoutInSeconds: ""
        failureThresholdPercentage: ""
        concurrentDeploymentPercentage: ""
        downloadConditionFile:
          bucket: ""
          etag: ""
          key: ""
      title: CreateDeploymentJobResponse_deploymentConfig
    DeploymentApplicationConfig_launchConfig:
      allOf:
      - $ref: '#/components/schemas/DeploymentLaunchConfig'
      - description: The launch configuration.
      title: DeploymentApplicationConfig_launchConfig
    CreateRobotApplicationResponse_robotSoftwareSuite:
      allOf:
      - $ref: '#/components/schemas/RobotSoftwareSuite'
      - description: The robot software suite (ROS distribution) used by the robot
          application.
      example:
        name: ""
        version: ""
      title: CreateRobotApplicationResponse_robotSoftwareSuite
    CreateRobotApplicationResponse_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: An object that contains the Docker image URI used to a create
          your robot application.
      example:
        uri: ""
      title: CreateRobotApplicationResponse_environment
    CreateRobotApplicationVersionResponse_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The object that contains the Docker image URI used to create
          your robot application.
      example:
        uri: ""
      title: CreateRobotApplicationVersionResponse_environment
    CreateSimulationApplicationResponse_simulationSoftwareSuite:
      allOf:
      - $ref: '#/components/schemas/SimulationSoftwareSuite'
      - description: The simulation software suite used by the simulation application.
      example:
        name: ""
        version: ""
      title: CreateSimulationApplicationResponse_simulationSoftwareSuite
    CreateSimulationApplicationResponse_robotSoftwareSuite:
      allOf:
      - $ref: '#/components/schemas/RobotSoftwareSuite'
      - description: Information about the robot software suite (ROS distribution).
      example:
        name: ""
        version: ""
      title: CreateSimulationApplicationResponse_robotSoftwareSuite
    CreateSimulationApplicationResponse_renderingEngine:
      allOf:
      - $ref: '#/components/schemas/RenderingEngine'
      - description: The rendering engine for the simulation application.
      example:
        name: ""
        version: ""
      title: CreateSimulationApplicationResponse_renderingEngine
    CreateSimulationApplicationResponse_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The object that contains the Docker image URI that you used to
          create your simulation application.
      example:
        uri: ""
      title: CreateSimulationApplicationResponse_environment
    CreateSimulationApplicationVersionResponse_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The object that contains the Docker image URI used to create
          the simulation application.
      example:
        uri: ""
      title: CreateSimulationApplicationVersionResponse_environment
    CreateSimulationJobResponse_outputLocation:
      allOf:
      - $ref: '#/components/schemas/OutputLocation'
      - description: Simulation job output files location.
      example:
        s3Prefix: ""
        s3Bucket: ""
      title: CreateSimulationJobResponse_outputLocation
    CreateSimulationJobResponse_loggingConfig:
      allOf:
      - $ref: '#/components/schemas/LoggingConfig'
      - description: The logging configuration.
      example:
        recordAllRosTopics: ""
      title: CreateSimulationJobResponse_loggingConfig
    CreateSimulationJobResponse_vpcConfig:
      allOf:
      - $ref: '#/components/schemas/VPCConfigResponse'
      - description: Information about the vpc configuration.
      example:
        assignPublicIp: ""
        vpcId: ""
        subnets: ""
        securityGroups: ""
      title: CreateSimulationJobResponse_vpcConfig
    CreateSimulationJobResponse_compute:
      allOf:
      - $ref: '#/components/schemas/ComputeResponse'
      - description: Compute information for the simulation job.
      example:
        computeType: ""
        simulationUnitLimit: ""
        gpuUnitLimit: ""
      title: CreateSimulationJobResponse_compute
    RobotApplicationConfig_launchConfig:
      allOf:
      - $ref: '#/components/schemas/LaunchConfig'
      - description: The launch configuration for the robot application.
      title: RobotApplicationConfig_launchConfig
    SimulationApplicationConfig_launchConfig:
      allOf:
      - $ref: '#/components/schemas/LaunchConfig'
      - description: The launch configuration for the simulation application.
      title: SimulationApplicationConfig_launchConfig
    CreateWorldGenerationJobResponse_worldCount:
      allOf:
      - $ref: '#/components/schemas/WorldCount'
      - description: 'Information about the world count. '
      example:
        interiorCountPerFloorplan: ""
        floorplanCount: ""
      title: CreateWorldGenerationJobResponse_worldCount
    DescribeRobotApplicationResponse_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The object that contains the Docker image URI used to create
          the robot application.
      example:
        uri: ""
      title: DescribeRobotApplicationResponse_environment
    DescribeSimulationJobResponse_outputLocation:
      allOf:
      - $ref: '#/components/schemas/OutputLocation'
      - description: Location for output files generated by the simulation job.
      example:
        s3Prefix: ""
        s3Bucket: ""
      title: DescribeSimulationJobResponse_outputLocation
    DescribeSimulationJobResponse_vpcConfig:
      allOf:
      - $ref: '#/components/schemas/VPCConfigResponse'
      - description: The VPC configuration.
      example:
        assignPublicIp: ""
        vpcId: ""
        subnets: ""
        securityGroups: ""
      title: DescribeSimulationJobResponse_vpcConfig
    DescribeSimulationJobResponse_networkInterface:
      allOf:
      - $ref: '#/components/schemas/NetworkInterface'
      - description: The network interface information for the simulation job.
      example:
        networkInterfaceId: ""
        publicIpAddress: ""
        privateIpAddress: ""
      title: DescribeSimulationJobResponse_networkInterface
    DescribeSimulationJobBatchResponse_batchPolicy:
      allOf:
      - $ref: '#/components/schemas/BatchPolicy'
      - description: The batch policy.
      example:
        timeoutInSeconds: ""
        maxConcurrency: ""
      title: DescribeSimulationJobBatchResponse_batchPolicy
    DescribeWorldGenerationJobResponse_worldCount:
      allOf:
      - $ref: '#/components/schemas/WorldCount'
      - description: Information about the world count.
      example:
        interiorCountPerFloorplan: ""
        floorplanCount: ""
      title: DescribeWorldGenerationJobResponse_worldCount
    DescribeWorldGenerationJobResponse_finishedWorldsSummary:
      allOf:
      - $ref: '#/components/schemas/FinishedWorldsSummary'
      - description: Summary information about finished worlds.
      example:
        failureSummary:
          totalFailureCount: ""
          failures: ""
        finishedCount: ""
        succeededWorlds: ""
      title: DescribeWorldGenerationJobResponse_finishedWorldsSummary
    SimulationJobRequest_compute:
      allOf:
      - $ref: '#/components/schemas/Compute'
      - description: Compute information for the simulation job
      title: SimulationJobRequest_compute
    SyncDeploymentJobResponse_deploymentConfig:
      allOf:
      - $ref: '#/components/schemas/DeploymentConfig'
      - description: Information about the deployment configuration.
      example:
        robotDeploymentTimeoutInSeconds: ""
        failureThresholdPercentage: ""
        concurrentDeploymentPercentage: ""
        downloadConditionFile:
          bucket: ""
          etag: ""
          key: ""
      title: SyncDeploymentJobResponse_deploymentConfig
    UpdateRobotApplicationResponse_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The object that contains the Docker image URI for your robot
          application.
      example:
        uri: ""
      title: UpdateRobotApplicationResponse_environment
    UpdateSimulationApplicationResponse_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The object that contains the Docker image URI used for your simulation
          application.
      example:
        uri: ""
      title: UpdateSimulationApplicationResponse_environment
    CreateDeploymentJobRequest_deploymentConfig:
      allOf:
      - $ref: '#/components/schemas/DeploymentConfig'
      - description: The requested deployment configuration.
      example:
        robotDeploymentTimeoutInSeconds: ""
        failureThresholdPercentage: ""
        concurrentDeploymentPercentage: ""
        downloadConditionFile:
          bucket: ""
          etag: ""
          key: ""
      title: CreateDeploymentJobRequest_deploymentConfig
    CreateRobotApplicationRequest_robotSoftwareSuite:
      allOf:
      - $ref: '#/components/schemas/RobotSoftwareSuite'
      - description: The robot software suite (ROS distribuition) used by the robot
          application.
      example:
        name: ""
        version: ""
      title: CreateRobotApplicationRequest_robotSoftwareSuite
    CreateRobotApplicationRequest_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The object that contains that URI of the Docker image that you
          use for your robot application.
      example:
        uri: ""
      title: CreateRobotApplicationRequest_environment
    CreateSimulationApplicationRequest_robotSoftwareSuite:
      allOf:
      - $ref: '#/components/schemas/RobotSoftwareSuite'
      - description: The robot software suite (ROS distribution) used by the simulation
          application.
      example:
        name: ""
        version: ""
      title: CreateSimulationApplicationRequest_robotSoftwareSuite
    CreateSimulationApplicationRequest_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The object that contains the Docker image URI used to create
          your simulation application.
      example:
        uri: ""
      title: CreateSimulationApplicationRequest_environment
    CreateSimulationJobRequest_vpcConfig:
      allOf:
      - $ref: '#/components/schemas/VPCConfig'
      - description: "If your simulation job accesses resources in a VPC, you provide\
          \ this parameter identifying the list of security group IDs and subnet IDs.\
          \ These must belong to the same VPC. You must provide at least one security\
          \ group and one subnet ID. "
      example:
        assignPublicIp: ""
        subnets: ""
        securityGroups: ""
      title: CreateSimulationJobRequest_vpcConfig
    CreateSimulationJobRequest_compute:
      allOf:
      - $ref: '#/components/schemas/Compute'
      - description: Compute information for the simulation job.
      example:
        computeType: ""
        simulationUnitLimit: ""
        gpuUnitLimit: ""
      title: CreateSimulationJobRequest_compute
    CreateWorldTemplateRequest_templateLocation:
      allOf:
      - $ref: '#/components/schemas/TemplateLocation'
      - description: The location of the world template.
      example:
        s3Key: ""
        s3Bucket: ""
      title: CreateWorldTemplateRequest_templateLocation
    FinishedWorldsSummary_failureSummary:
      allOf:
      - $ref: '#/components/schemas/FailureSummary'
      - description: Information about worlds that failed.
      example:
        totalFailureCount: ""
        failures: ""
      title: FinishedWorldsSummary_failureSummary
    FailedCreateSimulationJobRequest_request:
      allOf:
      - $ref: '#/components/schemas/SimulationJobRequest'
      - description: The simulation job request.
      title: FailedCreateSimulationJobRequest_request
    LaunchConfig_portForwardingConfig:
      allOf:
      - $ref: '#/components/schemas/PortForwardingConfig'
      - description: The port forwarding configuration.
      title: LaunchConfig_portForwardingConfig
    RobotApplicationSummary_robotSoftwareSuite:
      allOf:
      - $ref: '#/components/schemas/RobotSoftwareSuite'
      - description: Information about a robot software suite (ROS distribution).
      title: RobotApplicationSummary_robotSoftwareSuite
    RobotDeployment_progressDetail:
      allOf:
      - $ref: '#/components/schemas/ProgressDetail'
      - description: Information about how the deployment is progressing.
      title: RobotDeployment_progressDetail
    SimulationApplicationSummary_simulationSoftwareSuite:
      allOf:
      - $ref: '#/components/schemas/SimulationSoftwareSuite'
      - description: Information about a simulation software suite.
      title: SimulationApplicationSummary_simulationSoftwareSuite
    SimulationJob_vpcConfig:
      allOf:
      - $ref: '#/components/schemas/VPCConfigResponse'
      - description: VPC configuration information.
      title: SimulationJob_vpcConfig
    SimulationJob_networkInterface:
      allOf:
      - $ref: '#/components/schemas/NetworkInterface'
      - description: Information about a network interface.
      title: SimulationJob_networkInterface
    SimulationJob_compute:
      allOf:
      - $ref: '#/components/schemas/ComputeResponse'
      - description: Compute information for the simulation job
      title: SimulationJob_compute
    UpdateSimulationApplicationRequest_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The object that contains the Docker image URI for your simulation
          application.
      example:
        uri: ""
      title: UpdateSimulationApplicationRequest_environment
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
