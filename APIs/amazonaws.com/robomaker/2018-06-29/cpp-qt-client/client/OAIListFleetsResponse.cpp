/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListFleetsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListFleetsResponse::OAIListFleetsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListFleetsResponse::OAIListFleetsResponse() {
    this->initializeModel();
}

OAIListFleetsResponse::~OAIListFleetsResponse() {}

void OAIListFleetsResponse::initializeModel() {

    m_fleet_details_isSet = false;
    m_fleet_details_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListFleetsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListFleetsResponse::fromJsonObject(QJsonObject json) {

    m_fleet_details_isValid = ::OpenAPI::fromJsonValue(m_fleet_details, json[QString("fleetDetails")]);
    m_fleet_details_isSet = !json[QString("fleetDetails")].isNull() && m_fleet_details_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListFleetsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListFleetsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_fleet_details.isSet()) {
        obj.insert(QString("fleetDetails"), ::OpenAPI::toJsonValue(m_fleet_details));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListFleetsResponse::getFleetDetails() const {
    return m_fleet_details;
}
void OAIListFleetsResponse::setFleetDetails(const QList &fleet_details) {
    m_fleet_details = fleet_details;
    m_fleet_details_isSet = true;
}

bool OAIListFleetsResponse::is_fleet_details_Set() const{
    return m_fleet_details_isSet;
}

bool OAIListFleetsResponse::is_fleet_details_Valid() const{
    return m_fleet_details_isValid;
}

QString OAIListFleetsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListFleetsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListFleetsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListFleetsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListFleetsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fleet_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListFleetsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
