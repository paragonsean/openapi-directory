/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFleetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFleetResponse::OAICreateFleetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFleetResponse::OAICreateFleetResponse() {
    this->initializeModel();
}

OAICreateFleetResponse::~OAICreateFleetResponse() {}

void OAICreateFleetResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateFleetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFleetResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAICreateFleetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFleetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateFleetResponse::getArn() const {
    return m_arn;
}
void OAICreateFleetResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateFleetResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateFleetResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateFleetResponse::getName() const {
    return m_name;
}
void OAICreateFleetResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateFleetResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateFleetResponse::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAICreateFleetResponse::getCreatedAt() const {
    return m_created_at;
}
void OAICreateFleetResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICreateFleetResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICreateFleetResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QMap OAICreateFleetResponse::getTags() const {
    return m_tags;
}
void OAICreateFleetResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateFleetResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateFleetResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateFleetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFleetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
