/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorldConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorldConfig::OAIWorldConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorldConfig::OAIWorldConfig() {
    this->initializeModel();
}

OAIWorldConfig::~OAIWorldConfig() {}

void OAIWorldConfig::initializeModel() {

    m_world_isSet = false;
    m_world_isValid = false;
}

void OAIWorldConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorldConfig::fromJsonObject(QJsonObject json) {

    m_world_isValid = ::OpenAPI::fromJsonValue(m_world, json[QString("world")]);
    m_world_isSet = !json[QString("world")].isNull() && m_world_isValid;
}

QString OAIWorldConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorldConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_world_isSet) {
        obj.insert(QString("world"), ::OpenAPI::toJsonValue(m_world));
    }
    return obj;
}

QString OAIWorldConfig::getWorld() const {
    return m_world;
}
void OAIWorldConfig::setWorld(const QString &world) {
    m_world = world;
    m_world_isSet = true;
}

bool OAIWorldConfig::is_world_Set() const{
    return m_world_isSet;
}

bool OAIWorldConfig::is_world_Valid() const{
    return m_world_isValid;
}

bool OAIWorldConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_world_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorldConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
