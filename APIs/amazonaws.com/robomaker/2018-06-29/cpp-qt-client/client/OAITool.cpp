/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITool.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITool::OAITool(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITool::OAITool() {
    this->initializeModel();
}

OAITool::~OAITool() {}

void OAITool::initializeModel() {

    m_stream_ui_isSet = false;
    m_stream_ui_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_command_isSet = false;
    m_command_isValid = false;

    m_stream_output_to_cloud_watch_isSet = false;
    m_stream_output_to_cloud_watch_isValid = false;

    m_exit_behavior_isSet = false;
    m_exit_behavior_isValid = false;
}

void OAITool::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITool::fromJsonObject(QJsonObject json) {

    m_stream_ui_isValid = ::OpenAPI::fromJsonValue(m_stream_ui, json[QString("streamUI")]);
    m_stream_ui_isSet = !json[QString("streamUI")].isNull() && m_stream_ui_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_command_isValid = ::OpenAPI::fromJsonValue(m_command, json[QString("command")]);
    m_command_isSet = !json[QString("command")].isNull() && m_command_isValid;

    m_stream_output_to_cloud_watch_isValid = ::OpenAPI::fromJsonValue(m_stream_output_to_cloud_watch, json[QString("streamOutputToCloudWatch")]);
    m_stream_output_to_cloud_watch_isSet = !json[QString("streamOutputToCloudWatch")].isNull() && m_stream_output_to_cloud_watch_isValid;

    m_exit_behavior_isValid = ::OpenAPI::fromJsonValue(m_exit_behavior, json[QString("exitBehavior")]);
    m_exit_behavior_isSet = !json[QString("exitBehavior")].isNull() && m_exit_behavior_isValid;
}

QString OAITool::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITool::asJsonObject() const {
    QJsonObject obj;
    if (m_stream_ui_isSet) {
        obj.insert(QString("streamUI"), ::OpenAPI::toJsonValue(m_stream_ui));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_command_isSet) {
        obj.insert(QString("command"), ::OpenAPI::toJsonValue(m_command));
    }
    if (m_stream_output_to_cloud_watch_isSet) {
        obj.insert(QString("streamOutputToCloudWatch"), ::OpenAPI::toJsonValue(m_stream_output_to_cloud_watch));
    }
    if (m_exit_behavior.isSet()) {
        obj.insert(QString("exitBehavior"), ::OpenAPI::toJsonValue(m_exit_behavior));
    }
    return obj;
}

bool OAITool::getStreamUi() const {
    return m_stream_ui;
}
void OAITool::setStreamUi(const bool &stream_ui) {
    m_stream_ui = stream_ui;
    m_stream_ui_isSet = true;
}

bool OAITool::is_stream_ui_Set() const{
    return m_stream_ui_isSet;
}

bool OAITool::is_stream_ui_Valid() const{
    return m_stream_ui_isValid;
}

QString OAITool::getName() const {
    return m_name;
}
void OAITool::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITool::is_name_Set() const{
    return m_name_isSet;
}

bool OAITool::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITool::getCommand() const {
    return m_command;
}
void OAITool::setCommand(const QString &command) {
    m_command = command;
    m_command_isSet = true;
}

bool OAITool::is_command_Set() const{
    return m_command_isSet;
}

bool OAITool::is_command_Valid() const{
    return m_command_isValid;
}

bool OAITool::getStreamOutputToCloudWatch() const {
    return m_stream_output_to_cloud_watch;
}
void OAITool::setStreamOutputToCloudWatch(const bool &stream_output_to_cloud_watch) {
    m_stream_output_to_cloud_watch = stream_output_to_cloud_watch;
    m_stream_output_to_cloud_watch_isSet = true;
}

bool OAITool::is_stream_output_to_cloud_watch_Set() const{
    return m_stream_output_to_cloud_watch_isSet;
}

bool OAITool::is_stream_output_to_cloud_watch_Valid() const{
    return m_stream_output_to_cloud_watch_isValid;
}

OAIExitBehavior OAITool::getExitBehavior() const {
    return m_exit_behavior;
}
void OAITool::setExitBehavior(const OAIExitBehavior &exit_behavior) {
    m_exit_behavior = exit_behavior;
    m_exit_behavior_isSet = true;
}

bool OAITool::is_exit_behavior_Set() const{
    return m_exit_behavior_isSet;
}

bool OAITool::is_exit_behavior_Valid() const{
    return m_exit_behavior_isValid;
}

bool OAITool::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_stream_ui_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_command_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_output_to_cloud_watch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exit_behavior.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITool::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_command_isValid && true;
}

} // namespace OpenAPI
