/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeWorldGenerationJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeWorldGenerationJobResponse::OAIDescribeWorldGenerationJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeWorldGenerationJobResponse::OAIDescribeWorldGenerationJobResponse() {
    this->initializeModel();
}

OAIDescribeWorldGenerationJobResponse::~OAIDescribeWorldGenerationJobResponse() {}

void OAIDescribeWorldGenerationJobResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_failure_code_isSet = false;
    m_failure_code_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;

    m_r_template_isSet = false;
    m_r_template_isValid = false;

    m_world_count_isSet = false;
    m_world_count_isValid = false;

    m_finished_worlds_summary_isSet = false;
    m_finished_worlds_summary_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_world_tags_isSet = false;
    m_world_tags_isValid = false;
}

void OAIDescribeWorldGenerationJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeWorldGenerationJobResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_failure_code_isValid = ::OpenAPI::fromJsonValue(m_failure_code, json[QString("failureCode")]);
    m_failure_code_isSet = !json[QString("failureCode")].isNull() && m_failure_code_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("failureReason")]);
    m_failure_reason_isSet = !json[QString("failureReason")].isNull() && m_failure_reason_isValid;

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("clientRequestToken")]);
    m_client_request_token_isSet = !json[QString("clientRequestToken")].isNull() && m_client_request_token_isValid;

    m_r_template_isValid = ::OpenAPI::fromJsonValue(m_r_template, json[QString("template")]);
    m_r_template_isSet = !json[QString("template")].isNull() && m_r_template_isValid;

    m_world_count_isValid = ::OpenAPI::fromJsonValue(m_world_count, json[QString("worldCount")]);
    m_world_count_isSet = !json[QString("worldCount")].isNull() && m_world_count_isValid;

    m_finished_worlds_summary_isValid = ::OpenAPI::fromJsonValue(m_finished_worlds_summary, json[QString("finishedWorldsSummary")]);
    m_finished_worlds_summary_isSet = !json[QString("finishedWorldsSummary")].isNull() && m_finished_worlds_summary_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_world_tags_isValid = ::OpenAPI::fromJsonValue(m_world_tags, json[QString("worldTags")]);
    m_world_tags_isSet = !json[QString("worldTags")].isNull() && m_world_tags_isValid;
}

QString OAIDescribeWorldGenerationJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeWorldGenerationJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_failure_code.isSet()) {
        obj.insert(QString("failureCode"), ::OpenAPI::toJsonValue(m_failure_code));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("failureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_client_request_token_isSet) {
        obj.insert(QString("clientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    if (m_r_template_isSet) {
        obj.insert(QString("template"), ::OpenAPI::toJsonValue(m_r_template));
    }
    if (m_world_count.isSet()) {
        obj.insert(QString("worldCount"), ::OpenAPI::toJsonValue(m_world_count));
    }
    if (m_finished_worlds_summary.isSet()) {
        obj.insert(QString("finishedWorldsSummary"), ::OpenAPI::toJsonValue(m_finished_worlds_summary));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_world_tags.isSet()) {
        obj.insert(QString("worldTags"), ::OpenAPI::toJsonValue(m_world_tags));
    }
    return obj;
}

QString OAIDescribeWorldGenerationJobResponse::getArn() const {
    return m_arn;
}
void OAIDescribeWorldGenerationJobResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

OAIWorldGenerationJobStatus OAIDescribeWorldGenerationJobResponse::getStatus() const {
    return m_status;
}
void OAIDescribeWorldGenerationJobResponse::setStatus(const OAIWorldGenerationJobStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIDescribeWorldGenerationJobResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIDescribeWorldGenerationJobResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIWorldGenerationJobErrorCode OAIDescribeWorldGenerationJobResponse::getFailureCode() const {
    return m_failure_code;
}
void OAIDescribeWorldGenerationJobResponse::setFailureCode(const OAIWorldGenerationJobErrorCode &failure_code) {
    m_failure_code = failure_code;
    m_failure_code_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_failure_code_Set() const{
    return m_failure_code_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_failure_code_Valid() const{
    return m_failure_code_isValid;
}

QString OAIDescribeWorldGenerationJobResponse::getFailureReason() const {
    return m_failure_reason;
}
void OAIDescribeWorldGenerationJobResponse::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

QString OAIDescribeWorldGenerationJobResponse::getClientRequestToken() const {
    return m_client_request_token;
}
void OAIDescribeWorldGenerationJobResponse::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

QString OAIDescribeWorldGenerationJobResponse::getRTemplate() const {
    return m_r_template;
}
void OAIDescribeWorldGenerationJobResponse::setRTemplate(const QString &r_template) {
    m_r_template = r_template;
    m_r_template_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_r_template_Set() const{
    return m_r_template_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_r_template_Valid() const{
    return m_r_template_isValid;
}

OAIDescribeWorldGenerationJobResponse_worldCount OAIDescribeWorldGenerationJobResponse::getWorldCount() const {
    return m_world_count;
}
void OAIDescribeWorldGenerationJobResponse::setWorldCount(const OAIDescribeWorldGenerationJobResponse_worldCount &world_count) {
    m_world_count = world_count;
    m_world_count_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_world_count_Set() const{
    return m_world_count_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_world_count_Valid() const{
    return m_world_count_isValid;
}

OAIDescribeWorldGenerationJobResponse_finishedWorldsSummary OAIDescribeWorldGenerationJobResponse::getFinishedWorldsSummary() const {
    return m_finished_worlds_summary;
}
void OAIDescribeWorldGenerationJobResponse::setFinishedWorldsSummary(const OAIDescribeWorldGenerationJobResponse_finishedWorldsSummary &finished_worlds_summary) {
    m_finished_worlds_summary = finished_worlds_summary;
    m_finished_worlds_summary_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_finished_worlds_summary_Set() const{
    return m_finished_worlds_summary_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_finished_worlds_summary_Valid() const{
    return m_finished_worlds_summary_isValid;
}

QMap OAIDescribeWorldGenerationJobResponse::getTags() const {
    return m_tags;
}
void OAIDescribeWorldGenerationJobResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

QMap OAIDescribeWorldGenerationJobResponse::getWorldTags() const {
    return m_world_tags;
}
void OAIDescribeWorldGenerationJobResponse::setWorldTags(const QMap &world_tags) {
    m_world_tags = world_tags;
    m_world_tags_isSet = true;
}

bool OAIDescribeWorldGenerationJobResponse::is_world_tags_Set() const{
    return m_world_tags_isSet;
}

bool OAIDescribeWorldGenerationJobResponse::is_world_tags_Valid() const{
    return m_world_tags_isValid;
}

bool OAIDescribeWorldGenerationJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_world_count.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_finished_worlds_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_world_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeWorldGenerationJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
