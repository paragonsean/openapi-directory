/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISimulationJob_networkInterface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISimulationJob_networkInterface::OAISimulationJob_networkInterface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISimulationJob_networkInterface::OAISimulationJob_networkInterface() {
    this->initializeModel();
}

OAISimulationJob_networkInterface::~OAISimulationJob_networkInterface() {}

void OAISimulationJob_networkInterface::initializeModel() {

    m_network_interface_id_isSet = false;
    m_network_interface_id_isValid = false;

    m_private_ip_address_isSet = false;
    m_private_ip_address_isValid = false;

    m_public_ip_address_isSet = false;
    m_public_ip_address_isValid = false;
}

void OAISimulationJob_networkInterface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISimulationJob_networkInterface::fromJsonObject(QJsonObject json) {

    m_network_interface_id_isValid = ::OpenAPI::fromJsonValue(m_network_interface_id, json[QString("networkInterfaceId")]);
    m_network_interface_id_isSet = !json[QString("networkInterfaceId")].isNull() && m_network_interface_id_isValid;

    m_private_ip_address_isValid = ::OpenAPI::fromJsonValue(m_private_ip_address, json[QString("privateIpAddress")]);
    m_private_ip_address_isSet = !json[QString("privateIpAddress")].isNull() && m_private_ip_address_isValid;

    m_public_ip_address_isValid = ::OpenAPI::fromJsonValue(m_public_ip_address, json[QString("publicIpAddress")]);
    m_public_ip_address_isSet = !json[QString("publicIpAddress")].isNull() && m_public_ip_address_isValid;
}

QString OAISimulationJob_networkInterface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISimulationJob_networkInterface::asJsonObject() const {
    QJsonObject obj;
    if (m_network_interface_id_isSet) {
        obj.insert(QString("networkInterfaceId"), ::OpenAPI::toJsonValue(m_network_interface_id));
    }
    if (m_private_ip_address_isSet) {
        obj.insert(QString("privateIpAddress"), ::OpenAPI::toJsonValue(m_private_ip_address));
    }
    if (m_public_ip_address_isSet) {
        obj.insert(QString("publicIpAddress"), ::OpenAPI::toJsonValue(m_public_ip_address));
    }
    return obj;
}

QString OAISimulationJob_networkInterface::getNetworkInterfaceId() const {
    return m_network_interface_id;
}
void OAISimulationJob_networkInterface::setNetworkInterfaceId(const QString &network_interface_id) {
    m_network_interface_id = network_interface_id;
    m_network_interface_id_isSet = true;
}

bool OAISimulationJob_networkInterface::is_network_interface_id_Set() const{
    return m_network_interface_id_isSet;
}

bool OAISimulationJob_networkInterface::is_network_interface_id_Valid() const{
    return m_network_interface_id_isValid;
}

QString OAISimulationJob_networkInterface::getPrivateIpAddress() const {
    return m_private_ip_address;
}
void OAISimulationJob_networkInterface::setPrivateIpAddress(const QString &private_ip_address) {
    m_private_ip_address = private_ip_address;
    m_private_ip_address_isSet = true;
}

bool OAISimulationJob_networkInterface::is_private_ip_address_Set() const{
    return m_private_ip_address_isSet;
}

bool OAISimulationJob_networkInterface::is_private_ip_address_Valid() const{
    return m_private_ip_address_isValid;
}

QString OAISimulationJob_networkInterface::getPublicIpAddress() const {
    return m_public_ip_address;
}
void OAISimulationJob_networkInterface::setPublicIpAddress(const QString &public_ip_address) {
    m_public_ip_address = public_ip_address;
    m_public_ip_address_isSet = true;
}

bool OAISimulationJob_networkInterface::is_public_ip_address_Set() const{
    return m_public_ip_address_isSet;
}

bool OAISimulationJob_networkInterface::is_public_ip_address_Valid() const{
    return m_public_ip_address_isValid;
}

bool OAISimulationJob_networkInterface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_interface_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISimulationJob_networkInterface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
