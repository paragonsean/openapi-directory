/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFailedCreateSimulationJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFailedCreateSimulationJobRequest::OAIFailedCreateSimulationJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFailedCreateSimulationJobRequest::OAIFailedCreateSimulationJobRequest() {
    this->initializeModel();
}

OAIFailedCreateSimulationJobRequest::~OAIFailedCreateSimulationJobRequest() {}

void OAIFailedCreateSimulationJobRequest::initializeModel() {

    m_request_isSet = false;
    m_request_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_failure_code_isSet = false;
    m_failure_code_isValid = false;

    m_failed_at_isSet = false;
    m_failed_at_isValid = false;
}

void OAIFailedCreateSimulationJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFailedCreateSimulationJobRequest::fromJsonObject(QJsonObject json) {

    m_request_isValid = ::OpenAPI::fromJsonValue(m_request, json[QString("request")]);
    m_request_isSet = !json[QString("request")].isNull() && m_request_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("failureReason")]);
    m_failure_reason_isSet = !json[QString("failureReason")].isNull() && m_failure_reason_isValid;

    m_failure_code_isValid = ::OpenAPI::fromJsonValue(m_failure_code, json[QString("failureCode")]);
    m_failure_code_isSet = !json[QString("failureCode")].isNull() && m_failure_code_isValid;

    m_failed_at_isValid = ::OpenAPI::fromJsonValue(m_failed_at, json[QString("failedAt")]);
    m_failed_at_isSet = !json[QString("failedAt")].isNull() && m_failed_at_isValid;
}

QString OAIFailedCreateSimulationJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFailedCreateSimulationJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_request.isSet()) {
        obj.insert(QString("request"), ::OpenAPI::toJsonValue(m_request));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("failureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_failure_code.isSet()) {
        obj.insert(QString("failureCode"), ::OpenAPI::toJsonValue(m_failure_code));
    }
    if (m_failed_at_isSet) {
        obj.insert(QString("failedAt"), ::OpenAPI::toJsonValue(m_failed_at));
    }
    return obj;
}

OAIFailedCreateSimulationJobRequest_request OAIFailedCreateSimulationJobRequest::getRequest() const {
    return m_request;
}
void OAIFailedCreateSimulationJobRequest::setRequest(const OAIFailedCreateSimulationJobRequest_request &request) {
    m_request = request;
    m_request_isSet = true;
}

bool OAIFailedCreateSimulationJobRequest::is_request_Set() const{
    return m_request_isSet;
}

bool OAIFailedCreateSimulationJobRequest::is_request_Valid() const{
    return m_request_isValid;
}

QString OAIFailedCreateSimulationJobRequest::getFailureReason() const {
    return m_failure_reason;
}
void OAIFailedCreateSimulationJobRequest::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIFailedCreateSimulationJobRequest::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIFailedCreateSimulationJobRequest::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

OAISimulationJobErrorCode OAIFailedCreateSimulationJobRequest::getFailureCode() const {
    return m_failure_code;
}
void OAIFailedCreateSimulationJobRequest::setFailureCode(const OAISimulationJobErrorCode &failure_code) {
    m_failure_code = failure_code;
    m_failure_code_isSet = true;
}

bool OAIFailedCreateSimulationJobRequest::is_failure_code_Set() const{
    return m_failure_code_isSet;
}

bool OAIFailedCreateSimulationJobRequest::is_failure_code_Valid() const{
    return m_failure_code_isValid;
}

QDateTime OAIFailedCreateSimulationJobRequest::getFailedAt() const {
    return m_failed_at;
}
void OAIFailedCreateSimulationJobRequest::setFailedAt(const QDateTime &failed_at) {
    m_failed_at = failed_at;
    m_failed_at_isSet = true;
}

bool OAIFailedCreateSimulationJobRequest::is_failed_at_Set() const{
    return m_failed_at_isSet;
}

bool OAIFailedCreateSimulationJobRequest::is_failed_at_Valid() const{
    return m_failed_at_isValid;
}

bool OAIFailedCreateSimulationJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_request.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failed_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFailedCreateSimulationJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
