/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateSimulationJob_request.h
 *
 * 
 */

#ifndef OAICreateSimulationJob_request_H
#define OAICreateSimulationJob_request_H

#include <QJsonObject>

#include "OAICreateSimulationJob_request_compute.h"
#include "OAICreateSimulationJob_request_loggingConfig.h"
#include "OAICreateSimulationJob_request_outputLocation.h"
#include "OAICreateSimulationJob_request_vpcConfig.h"
#include "OAIDataSourceConfig.h"
#include "OAIRobotApplicationConfig.h"
#include "OAISimulationApplicationConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateSimulationJob_request_outputLocation;
class OAICreateSimulationJob_request_loggingConfig;
class OAIRobotApplicationConfig;
class OAISimulationApplicationConfig;
class OAIDataSourceConfig;
class OAICreateSimulationJob_request_vpcConfig;
class OAICreateSimulationJob_request_compute;

class OAICreateSimulationJob_request : public OAIObject {
public:
    OAICreateSimulationJob_request();
    OAICreateSimulationJob_request(QString json);
    ~OAICreateSimulationJob_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    OAICreateSimulationJob_request_outputLocation getOutputLocation() const;
    void setOutputLocation(const OAICreateSimulationJob_request_outputLocation &output_location);
    bool is_output_location_Set() const;
    bool is_output_location_Valid() const;

    OAICreateSimulationJob_request_loggingConfig getLoggingConfig() const;
    void setLoggingConfig(const OAICreateSimulationJob_request_loggingConfig &logging_config);
    bool is_logging_config_Set() const;
    bool is_logging_config_Valid() const;

    qint32 getMaxJobDurationInSeconds() const;
    void setMaxJobDurationInSeconds(const qint32 &max_job_duration_in_seconds);
    bool is_max_job_duration_in_seconds_Set() const;
    bool is_max_job_duration_in_seconds_Valid() const;

    QString getIamRole() const;
    void setIamRole(const QString &iam_role);
    bool is_iam_role_Set() const;
    bool is_iam_role_Valid() const;

    QString getFailureBehavior() const;
    void setFailureBehavior(const QString &failure_behavior);
    bool is_failure_behavior_Set() const;
    bool is_failure_behavior_Valid() const;

    QList<OAIRobotApplicationConfig> getRobotApplications() const;
    void setRobotApplications(const QList<OAIRobotApplicationConfig> &robot_applications);
    bool is_robot_applications_Set() const;
    bool is_robot_applications_Valid() const;

    QList<OAISimulationApplicationConfig> getSimulationApplications() const;
    void setSimulationApplications(const QList<OAISimulationApplicationConfig> &simulation_applications);
    bool is_simulation_applications_Set() const;
    bool is_simulation_applications_Valid() const;

    QList<OAIDataSourceConfig> getDataSources() const;
    void setDataSources(const QList<OAIDataSourceConfig> &data_sources);
    bool is_data_sources_Set() const;
    bool is_data_sources_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICreateSimulationJob_request_vpcConfig getVpcConfig() const;
    void setVpcConfig(const OAICreateSimulationJob_request_vpcConfig &vpc_config);
    bool is_vpc_config_Set() const;
    bool is_vpc_config_Valid() const;

    OAICreateSimulationJob_request_compute getCompute() const;
    void setCompute(const OAICreateSimulationJob_request_compute &compute);
    bool is_compute_Set() const;
    bool is_compute_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    OAICreateSimulationJob_request_outputLocation m_output_location;
    bool m_output_location_isSet;
    bool m_output_location_isValid;

    OAICreateSimulationJob_request_loggingConfig m_logging_config;
    bool m_logging_config_isSet;
    bool m_logging_config_isValid;

    qint32 m_max_job_duration_in_seconds;
    bool m_max_job_duration_in_seconds_isSet;
    bool m_max_job_duration_in_seconds_isValid;

    QString m_iam_role;
    bool m_iam_role_isSet;
    bool m_iam_role_isValid;

    QString m_failure_behavior;
    bool m_failure_behavior_isSet;
    bool m_failure_behavior_isValid;

    QList<OAIRobotApplicationConfig> m_robot_applications;
    bool m_robot_applications_isSet;
    bool m_robot_applications_isValid;

    QList<OAISimulationApplicationConfig> m_simulation_applications;
    bool m_simulation_applications_isSet;
    bool m_simulation_applications_isValid;

    QList<OAIDataSourceConfig> m_data_sources;
    bool m_data_sources_isSet;
    bool m_data_sources_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICreateSimulationJob_request_vpcConfig m_vpc_config;
    bool m_vpc_config_isSet;
    bool m_vpc_config_isValid;

    OAICreateSimulationJob_request_compute m_compute;
    bool m_compute_isSet;
    bool m_compute_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateSimulationJob_request)

#endif // OAICreateSimulationJob_request_H
