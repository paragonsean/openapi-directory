/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRobotStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRobotStatus::OAIRobotStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRobotStatus::OAIRobotStatus() {
    this->initializeModel();
}

OAIRobotStatus::~OAIRobotStatus() {}

void OAIRobotStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRobotStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRobotStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Available", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRobotStatus::AVAILABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Registered", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRobotStatus::REGISTERED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PendingNewDeployment", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRobotStatus::PENDINGNEWDEPLOYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Deploying", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRobotStatus::DEPLOYING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRobotStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("InSync", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRobotStatus::INSYNC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NoResponse", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRobotStatus::NORESPONSE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRobotStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRobotStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRobotStatus::AVAILABLE:
            val = "Available";
            break;
        case eOAIRobotStatus::REGISTERED:
            val = "Registered";
            break;
        case eOAIRobotStatus::PENDINGNEWDEPLOYMENT:
            val = "PendingNewDeployment";
            break;
        case eOAIRobotStatus::DEPLOYING:
            val = "Deploying";
            break;
        case eOAIRobotStatus::FAILED:
            val = "Failed";
            break;
        case eOAIRobotStatus::INSYNC:
            val = "InSync";
            break;
        case eOAIRobotStatus::NORESPONSE:
            val = "NoResponse";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRobotStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRobotStatus::eOAIRobotStatus OAIRobotStatus::getValue() const {
    return m_value;
}

void OAIRobotStatus::setValue(const OAIRobotStatus::eOAIRobotStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRobotStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIRobotStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
