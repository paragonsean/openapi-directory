/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile() {
    this->initializeModel();
}

OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::~OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile() {}

void OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::initializeModel() {

    m_bucket_isSet = false;
    m_bucket_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;
}

void OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::fromJsonObject(QJsonObject json) {

    m_bucket_isValid = ::OpenAPI::fromJsonValue(m_bucket, json[QString("bucket")]);
    m_bucket_isSet = !json[QString("bucket")].isNull() && m_bucket_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;
}

QString OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket_isSet) {
        obj.insert(QString("bucket"), ::OpenAPI::toJsonValue(m_bucket));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    return obj;
}

QString OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::getBucket() const {
    return m_bucket;
}
void OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::setBucket(const QString &bucket) {
    m_bucket = bucket;
    m_bucket_isSet = true;
}

bool OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::is_bucket_Set() const{
    return m_bucket_isSet;
}

bool OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::is_bucket_Valid() const{
    return m_bucket_isValid;
}

QString OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::getKey() const {
    return m_key;
}
void OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::is_key_Set() const{
    return m_key_isSet;
}

bool OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::is_key_Valid() const{
    return m_key_isValid;
}

QString OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::getEtag() const {
    return m_etag;
}
void OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::is_etag_Valid() const{
    return m_etag_isValid;
}

bool OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDeploymentJob_request_deploymentConfig_downloadConditionFile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bucket_isValid && m_key_isValid && true;
}

} // namespace OpenAPI
