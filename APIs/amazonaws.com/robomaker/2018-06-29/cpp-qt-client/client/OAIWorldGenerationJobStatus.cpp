/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorldGenerationJobStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorldGenerationJobStatus::OAIWorldGenerationJobStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorldGenerationJobStatus::OAIWorldGenerationJobStatus() {
    this->initializeModel();
}

OAIWorldGenerationJobStatus::~OAIWorldGenerationJobStatus() {}

void OAIWorldGenerationJobStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWorldGenerationJobStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWorldGenerationJobStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Pending", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorldGenerationJobStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Running", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorldGenerationJobStatus::RUNNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorldGenerationJobStatus::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorldGenerationJobStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PartialFailed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorldGenerationJobStatus::PARTIALFAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Canceling", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorldGenerationJobStatus::CANCELING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Canceled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWorldGenerationJobStatus::CANCELED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWorldGenerationJobStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWorldGenerationJobStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWorldGenerationJobStatus::PENDING:
            val = "Pending";
            break;
        case eOAIWorldGenerationJobStatus::RUNNING:
            val = "Running";
            break;
        case eOAIWorldGenerationJobStatus::COMPLETED:
            val = "Completed";
            break;
        case eOAIWorldGenerationJobStatus::FAILED:
            val = "Failed";
            break;
        case eOAIWorldGenerationJobStatus::PARTIALFAILED:
            val = "PartialFailed";
            break;
        case eOAIWorldGenerationJobStatus::CANCELING:
            val = "Canceling";
            break;
        case eOAIWorldGenerationJobStatus::CANCELED:
            val = "Canceled";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWorldGenerationJobStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWorldGenerationJobStatus::eOAIWorldGenerationJobStatus OAIWorldGenerationJobStatus::getValue() const {
    return m_value;
}

void OAIWorldGenerationJobStatus::setValue(const OAIWorldGenerationJobStatus::eOAIWorldGenerationJobStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWorldGenerationJobStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIWorldGenerationJobStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
