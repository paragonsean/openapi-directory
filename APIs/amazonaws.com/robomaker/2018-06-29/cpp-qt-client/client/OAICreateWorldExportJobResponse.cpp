/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateWorldExportJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateWorldExportJobResponse::OAICreateWorldExportJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateWorldExportJobResponse::OAICreateWorldExportJobResponse() {
    this->initializeModel();
}

OAICreateWorldExportJobResponse::~OAICreateWorldExportJobResponse() {}

void OAICreateWorldExportJobResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_failure_code_isSet = false;
    m_failure_code_isValid = false;

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;

    m_output_location_isSet = false;
    m_output_location_isValid = false;

    m_iam_role_isSet = false;
    m_iam_role_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateWorldExportJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateWorldExportJobResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_failure_code_isValid = ::OpenAPI::fromJsonValue(m_failure_code, json[QString("failureCode")]);
    m_failure_code_isSet = !json[QString("failureCode")].isNull() && m_failure_code_isValid;

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("clientRequestToken")]);
    m_client_request_token_isSet = !json[QString("clientRequestToken")].isNull() && m_client_request_token_isValid;

    m_output_location_isValid = ::OpenAPI::fromJsonValue(m_output_location, json[QString("outputLocation")]);
    m_output_location_isSet = !json[QString("outputLocation")].isNull() && m_output_location_isValid;

    m_iam_role_isValid = ::OpenAPI::fromJsonValue(m_iam_role, json[QString("iamRole")]);
    m_iam_role_isSet = !json[QString("iamRole")].isNull() && m_iam_role_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAICreateWorldExportJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateWorldExportJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_failure_code.isSet()) {
        obj.insert(QString("failureCode"), ::OpenAPI::toJsonValue(m_failure_code));
    }
    if (m_client_request_token_isSet) {
        obj.insert(QString("clientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    if (m_output_location.isSet()) {
        obj.insert(QString("outputLocation"), ::OpenAPI::toJsonValue(m_output_location));
    }
    if (m_iam_role_isSet) {
        obj.insert(QString("iamRole"), ::OpenAPI::toJsonValue(m_iam_role));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateWorldExportJobResponse::getArn() const {
    return m_arn;
}
void OAICreateWorldExportJobResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateWorldExportJobResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateWorldExportJobResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

OAIWorldExportJobStatus OAICreateWorldExportJobResponse::getStatus() const {
    return m_status;
}
void OAICreateWorldExportJobResponse::setStatus(const OAIWorldExportJobStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateWorldExportJobResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateWorldExportJobResponse::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAICreateWorldExportJobResponse::getCreatedAt() const {
    return m_created_at;
}
void OAICreateWorldExportJobResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICreateWorldExportJobResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICreateWorldExportJobResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIWorldExportJobErrorCode OAICreateWorldExportJobResponse::getFailureCode() const {
    return m_failure_code;
}
void OAICreateWorldExportJobResponse::setFailureCode(const OAIWorldExportJobErrorCode &failure_code) {
    m_failure_code = failure_code;
    m_failure_code_isSet = true;
}

bool OAICreateWorldExportJobResponse::is_failure_code_Set() const{
    return m_failure_code_isSet;
}

bool OAICreateWorldExportJobResponse::is_failure_code_Valid() const{
    return m_failure_code_isValid;
}

QString OAICreateWorldExportJobResponse::getClientRequestToken() const {
    return m_client_request_token;
}
void OAICreateWorldExportJobResponse::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAICreateWorldExportJobResponse::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAICreateWorldExportJobResponse::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

OAIOutputLocation OAICreateWorldExportJobResponse::getOutputLocation() const {
    return m_output_location;
}
void OAICreateWorldExportJobResponse::setOutputLocation(const OAIOutputLocation &output_location) {
    m_output_location = output_location;
    m_output_location_isSet = true;
}

bool OAICreateWorldExportJobResponse::is_output_location_Set() const{
    return m_output_location_isSet;
}

bool OAICreateWorldExportJobResponse::is_output_location_Valid() const{
    return m_output_location_isValid;
}

QString OAICreateWorldExportJobResponse::getIamRole() const {
    return m_iam_role;
}
void OAICreateWorldExportJobResponse::setIamRole(const QString &iam_role) {
    m_iam_role = iam_role;
    m_iam_role_isSet = true;
}

bool OAICreateWorldExportJobResponse::is_iam_role_Set() const{
    return m_iam_role_isSet;
}

bool OAICreateWorldExportJobResponse::is_iam_role_Valid() const{
    return m_iam_role_isValid;
}

QMap OAICreateWorldExportJobResponse::getTags() const {
    return m_tags;
}
void OAICreateWorldExportJobResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateWorldExportJobResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateWorldExportJobResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateWorldExportJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_iam_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateWorldExportJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
