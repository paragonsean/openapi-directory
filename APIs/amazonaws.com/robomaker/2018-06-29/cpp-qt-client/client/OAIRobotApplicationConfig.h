/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRobotApplicationConfig.h
 *
 * Application configuration information for a robot.
 */

#ifndef OAIRobotApplicationConfig_H
#define OAIRobotApplicationConfig_H

#include <QJsonObject>

#include "OAIRobotApplicationConfig_launchConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRobotApplicationConfig_launchConfig;

class OAIRobotApplicationConfig : public OAIObject {
public:
    OAIRobotApplicationConfig();
    OAIRobotApplicationConfig(QString json);
    ~OAIRobotApplicationConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplication() const;
    void setApplication(const QString &application);
    bool is_application_Set() const;
    bool is_application_Valid() const;

    QString getApplicationVersion() const;
    void setApplicationVersion(const QString &application_version);
    bool is_application_version_Set() const;
    bool is_application_version_Valid() const;

    OAIRobotApplicationConfig_launchConfig getLaunchConfig() const;
    void setLaunchConfig(const OAIRobotApplicationConfig_launchConfig &launch_config);
    bool is_launch_config_Set() const;
    bool is_launch_config_Valid() const;

    QList getUploadConfigurations() const;
    void setUploadConfigurations(const QList &upload_configurations);
    bool is_upload_configurations_Set() const;
    bool is_upload_configurations_Valid() const;

    bool getUseDefaultUploadConfigurations() const;
    void setUseDefaultUploadConfigurations(const bool &use_default_upload_configurations);
    bool is_use_default_upload_configurations_Set() const;
    bool is_use_default_upload_configurations_Valid() const;

    QList getTools() const;
    void setTools(const QList &tools);
    bool is_tools_Set() const;
    bool is_tools_Valid() const;

    bool getUseDefaultTools() const;
    void setUseDefaultTools(const bool &use_default_tools);
    bool is_use_default_tools_Set() const;
    bool is_use_default_tools_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application;
    bool m_application_isSet;
    bool m_application_isValid;

    QString m_application_version;
    bool m_application_version_isSet;
    bool m_application_version_isValid;

    OAIRobotApplicationConfig_launchConfig m_launch_config;
    bool m_launch_config_isSet;
    bool m_launch_config_isValid;

    QList m_upload_configurations;
    bool m_upload_configurations_isSet;
    bool m_upload_configurations_isValid;

    bool m_use_default_upload_configurations;
    bool m_use_default_upload_configurations_isSet;
    bool m_use_default_upload_configurations_isValid;

    QList m_tools;
    bool m_tools_isSet;
    bool m_tools_isValid;

    bool m_use_default_tools;
    bool m_use_default_tools_isSet;
    bool m_use_default_tools_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRobotApplicationConfig)

#endif // OAIRobotApplicationConfig_H
