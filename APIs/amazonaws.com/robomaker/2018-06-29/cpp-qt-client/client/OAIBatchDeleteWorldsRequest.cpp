/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchDeleteWorldsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchDeleteWorldsRequest::OAIBatchDeleteWorldsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchDeleteWorldsRequest::OAIBatchDeleteWorldsRequest() {
    this->initializeModel();
}

OAIBatchDeleteWorldsRequest::~OAIBatchDeleteWorldsRequest() {}

void OAIBatchDeleteWorldsRequest::initializeModel() {

    m_worlds_isSet = false;
    m_worlds_isValid = false;
}

void OAIBatchDeleteWorldsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchDeleteWorldsRequest::fromJsonObject(QJsonObject json) {

    m_worlds_isValid = ::OpenAPI::fromJsonValue(m_worlds, json[QString("worlds")]);
    m_worlds_isSet = !json[QString("worlds")].isNull() && m_worlds_isValid;
}

QString OAIBatchDeleteWorldsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchDeleteWorldsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_worlds.isSet()) {
        obj.insert(QString("worlds"), ::OpenAPI::toJsonValue(m_worlds));
    }
    return obj;
}

QList OAIBatchDeleteWorldsRequest::getWorlds() const {
    return m_worlds;
}
void OAIBatchDeleteWorldsRequest::setWorlds(const QList &worlds) {
    m_worlds = worlds;
    m_worlds_isSet = true;
}

bool OAIBatchDeleteWorldsRequest::is_worlds_Set() const{
    return m_worlds_isSet;
}

bool OAIBatchDeleteWorldsRequest::is_worlds_Valid() const{
    return m_worlds_isValid;
}

bool OAIBatchDeleteWorldsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_worlds.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchDeleteWorldsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_worlds_isValid && true;
}

} // namespace OpenAPI
