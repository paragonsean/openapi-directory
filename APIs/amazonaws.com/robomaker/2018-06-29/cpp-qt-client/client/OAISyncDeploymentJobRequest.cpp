/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISyncDeploymentJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISyncDeploymentJobRequest::OAISyncDeploymentJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISyncDeploymentJobRequest::OAISyncDeploymentJobRequest() {
    this->initializeModel();
}

OAISyncDeploymentJobRequest::~OAISyncDeploymentJobRequest() {}

void OAISyncDeploymentJobRequest::initializeModel() {

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;

    m_fleet_isSet = false;
    m_fleet_isValid = false;
}

void OAISyncDeploymentJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISyncDeploymentJobRequest::fromJsonObject(QJsonObject json) {

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("clientRequestToken")]);
    m_client_request_token_isSet = !json[QString("clientRequestToken")].isNull() && m_client_request_token_isValid;

    m_fleet_isValid = ::OpenAPI::fromJsonValue(m_fleet, json[QString("fleet")]);
    m_fleet_isSet = !json[QString("fleet")].isNull() && m_fleet_isValid;
}

QString OAISyncDeploymentJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISyncDeploymentJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_client_request_token_isSet) {
        obj.insert(QString("clientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    if (m_fleet_isSet) {
        obj.insert(QString("fleet"), ::OpenAPI::toJsonValue(m_fleet));
    }
    return obj;
}

QString OAISyncDeploymentJobRequest::getClientRequestToken() const {
    return m_client_request_token;
}
void OAISyncDeploymentJobRequest::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAISyncDeploymentJobRequest::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAISyncDeploymentJobRequest::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

QString OAISyncDeploymentJobRequest::getFleet() const {
    return m_fleet;
}
void OAISyncDeploymentJobRequest::setFleet(const QString &fleet) {
    m_fleet = fleet;
    m_fleet_isSet = true;
}

bool OAISyncDeploymentJobRequest::is_fleet_Set() const{
    return m_fleet_isSet;
}

bool OAISyncDeploymentJobRequest::is_fleet_Valid() const{
    return m_fleet_isValid;
}

bool OAISyncDeploymentJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fleet_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISyncDeploymentJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_client_request_token_isValid && m_fleet_isValid && true;
}

} // namespace OpenAPI
