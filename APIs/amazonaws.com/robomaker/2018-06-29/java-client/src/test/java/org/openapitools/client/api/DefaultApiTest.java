/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BatchDeleteWorldsRequest;
import org.openapitools.client.model.BatchDeleteWorldsResponse;
import org.openapitools.client.model.BatchDescribeSimulationJobRequest;
import org.openapitools.client.model.BatchDescribeSimulationJobResponse;
import org.openapitools.client.model.CancelDeploymentJobRequest;
import org.openapitools.client.model.CancelSimulationJobBatchRequest;
import org.openapitools.client.model.CancelSimulationJobRequest;
import org.openapitools.client.model.CancelWorldExportJobRequest;
import org.openapitools.client.model.CancelWorldGenerationJobRequest;
import org.openapitools.client.model.CreateDeploymentJobRequest;
import org.openapitools.client.model.CreateDeploymentJobResponse;
import org.openapitools.client.model.CreateFleetRequest;
import org.openapitools.client.model.CreateFleetResponse;
import org.openapitools.client.model.CreateRobotApplicationRequest;
import org.openapitools.client.model.CreateRobotApplicationResponse;
import org.openapitools.client.model.CreateRobotApplicationVersionRequest;
import org.openapitools.client.model.CreateRobotApplicationVersionResponse;
import org.openapitools.client.model.CreateRobotRequest;
import org.openapitools.client.model.CreateRobotResponse;
import org.openapitools.client.model.CreateSimulationApplicationRequest;
import org.openapitools.client.model.CreateSimulationApplicationResponse;
import org.openapitools.client.model.CreateSimulationApplicationVersionRequest;
import org.openapitools.client.model.CreateSimulationApplicationVersionResponse;
import org.openapitools.client.model.CreateSimulationJobRequest;
import org.openapitools.client.model.CreateSimulationJobResponse;
import org.openapitools.client.model.CreateWorldExportJobRequest;
import org.openapitools.client.model.CreateWorldExportJobResponse;
import org.openapitools.client.model.CreateWorldGenerationJobRequest;
import org.openapitools.client.model.CreateWorldGenerationJobResponse;
import org.openapitools.client.model.CreateWorldTemplateRequest;
import org.openapitools.client.model.CreateWorldTemplateResponse;
import org.openapitools.client.model.DeleteFleetRequest;
import org.openapitools.client.model.DeleteRobotApplicationRequest;
import org.openapitools.client.model.DeleteRobotRequest;
import org.openapitools.client.model.DeleteSimulationApplicationRequest;
import org.openapitools.client.model.DeleteWorldTemplateRequest;
import org.openapitools.client.model.DeregisterRobotRequest;
import org.openapitools.client.model.DeregisterRobotResponse;
import org.openapitools.client.model.DescribeDeploymentJobRequest;
import org.openapitools.client.model.DescribeDeploymentJobResponse;
import org.openapitools.client.model.DescribeFleetResponse;
import org.openapitools.client.model.DescribeRobotApplicationRequest;
import org.openapitools.client.model.DescribeRobotApplicationResponse;
import org.openapitools.client.model.DescribeRobotRequest;
import org.openapitools.client.model.DescribeRobotResponse;
import org.openapitools.client.model.DescribeSimulationApplicationRequest;
import org.openapitools.client.model.DescribeSimulationApplicationResponse;
import org.openapitools.client.model.DescribeSimulationJobBatchRequest;
import org.openapitools.client.model.DescribeSimulationJobBatchResponse;
import org.openapitools.client.model.DescribeSimulationJobRequest;
import org.openapitools.client.model.DescribeSimulationJobResponse;
import org.openapitools.client.model.DescribeWorldExportJobRequest;
import org.openapitools.client.model.DescribeWorldExportJobResponse;
import org.openapitools.client.model.DescribeWorldGenerationJobRequest;
import org.openapitools.client.model.DescribeWorldGenerationJobResponse;
import org.openapitools.client.model.DescribeWorldRequest;
import org.openapitools.client.model.DescribeWorldResponse;
import org.openapitools.client.model.DescribeWorldTemplateRequest;
import org.openapitools.client.model.DescribeWorldTemplateResponse;
import org.openapitools.client.model.GetWorldTemplateBodyRequest;
import org.openapitools.client.model.GetWorldTemplateBodyResponse;
import org.openapitools.client.model.ListDeploymentJobsRequest;
import org.openapitools.client.model.ListDeploymentJobsResponse;
import org.openapitools.client.model.ListFleetsRequest;
import org.openapitools.client.model.ListFleetsResponse;
import org.openapitools.client.model.ListRobotApplicationsRequest;
import org.openapitools.client.model.ListRobotApplicationsResponse;
import org.openapitools.client.model.ListRobotsRequest;
import org.openapitools.client.model.ListRobotsResponse;
import org.openapitools.client.model.ListSimulationApplicationsRequest;
import org.openapitools.client.model.ListSimulationApplicationsResponse;
import org.openapitools.client.model.ListSimulationJobBatchesRequest;
import org.openapitools.client.model.ListSimulationJobBatchesResponse;
import org.openapitools.client.model.ListSimulationJobsRequest;
import org.openapitools.client.model.ListSimulationJobsResponse;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.ListWorldExportJobsRequest;
import org.openapitools.client.model.ListWorldExportJobsResponse;
import org.openapitools.client.model.ListWorldGenerationJobsRequest;
import org.openapitools.client.model.ListWorldGenerationJobsResponse;
import org.openapitools.client.model.ListWorldTemplatesRequest;
import org.openapitools.client.model.ListWorldTemplatesResponse;
import org.openapitools.client.model.ListWorldsRequest;
import org.openapitools.client.model.ListWorldsResponse;
import org.openapitools.client.model.RegisterRobotResponse;
import org.openapitools.client.model.RestartSimulationJobRequest;
import org.openapitools.client.model.StartSimulationJobBatchRequest;
import org.openapitools.client.model.StartSimulationJobBatchResponse;
import org.openapitools.client.model.SyncDeploymentJobRequest;
import org.openapitools.client.model.SyncDeploymentJobResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateRobotApplicationRequest;
import org.openapitools.client.model.UpdateRobotApplicationResponse;
import org.openapitools.client.model.UpdateSimulationApplicationRequest;
import org.openapitools.client.model.UpdateSimulationApplicationResponse;
import org.openapitools.client.model.UpdateWorldTemplateRequest;
import org.openapitools.client.model.UpdateWorldTemplateResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Deletes one or more worlds in a batch operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchDeleteWorldsTest() throws ApiException {
        BatchDeleteWorldsRequest batchDeleteWorldsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchDeleteWorldsResponse response = api.batchDeleteWorlds(batchDeleteWorldsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes one or more simulation jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchDescribeSimulationJobTest() throws ApiException {
        BatchDescribeSimulationJobRequest batchDescribeSimulationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchDescribeSimulationJobResponse response = api.batchDescribeSimulationJob(batchDescribeSimulationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Cancels the specified deployment job.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelDeploymentJobTest() throws ApiException {
        CancelDeploymentJobRequest cancelDeploymentJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.cancelDeploymentJob(cancelDeploymentJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Cancels the specified simulation job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelSimulationJobTest() throws ApiException {
        CancelSimulationJobRequest cancelSimulationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.cancelSimulationJob(cancelSimulationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Cancels a simulation job batch. When you cancel a simulation job batch, you are also cancelling all of the active simulation jobs created as part of the batch. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelSimulationJobBatchTest() throws ApiException {
        CancelSimulationJobBatchRequest cancelSimulationJobBatchRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.cancelSimulationJobBatch(cancelSimulationJobBatchRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Cancels the specified export job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelWorldExportJobTest() throws ApiException {
        CancelWorldExportJobRequest cancelWorldExportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.cancelWorldExportJob(cancelWorldExportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Cancels the specified world generator job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelWorldGenerationJobTest() throws ApiException {
        CancelWorldGenerationJobRequest cancelWorldGenerationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.cancelWorldGenerationJob(cancelWorldGenerationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deploys a specific version of a robot application to robots in a fleet.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API is no longer supported and will throw an error if used.&lt;/p&gt; &lt;/important&gt; &lt;p&gt;The robot application must have a numbered &lt;code&gt;applicationVersion&lt;/code&gt; for consistency reasons. To create a new version, use &lt;code&gt;CreateRobotApplicationVersion&lt;/code&gt; or see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html\&quot;&gt;Creating a Robot Application Version&lt;/a&gt;. &lt;/p&gt; &lt;note&gt; &lt;p&gt;After 90 days, deployment jobs expire and will be deleted. They will no longer be accessible. &lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDeploymentJobTest() throws ApiException {
        CreateDeploymentJobRequest createDeploymentJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDeploymentJobResponse response = api.createDeploymentJob(createDeploymentJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a fleet, a logical group of robots running the same robot application.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API is no longer supported and will throw an error if used.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFleetTest() throws ApiException {
        CreateFleetRequest createFleetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateFleetResponse response = api.createFleet(createFleetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a robot.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API is no longer supported and will throw an error if used.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRobotTest() throws ApiException {
        CreateRobotRequest createRobotRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateRobotResponse response = api.createRobot(createRobotRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a robot application. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRobotApplicationTest() throws ApiException {
        CreateRobotApplicationRequest createRobotApplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateRobotApplicationResponse response = api.createRobotApplication(createRobotApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a version of a robot application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRobotApplicationVersionTest() throws ApiException {
        CreateRobotApplicationVersionRequest createRobotApplicationVersionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateRobotApplicationVersionResponse response = api.createRobotApplicationVersion(createRobotApplicationVersionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a simulation application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSimulationApplicationTest() throws ApiException {
        CreateSimulationApplicationRequest createSimulationApplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateSimulationApplicationResponse response = api.createSimulationApplication(createSimulationApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a simulation application with a specific revision id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSimulationApplicationVersionTest() throws ApiException {
        CreateSimulationApplicationVersionRequest createSimulationApplicationVersionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateSimulationApplicationVersionResponse response = api.createSimulationApplicationVersion(createSimulationApplicationVersionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a simulation job.&lt;/p&gt; &lt;note&gt; &lt;p&gt;After 90 days, simulation jobs expire and will be deleted. They will no longer be accessible. &lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSimulationJobTest() throws ApiException {
        CreateSimulationJobRequest createSimulationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateSimulationJobResponse response = api.createSimulationJob(createSimulationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a world export job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorldExportJobTest() throws ApiException {
        CreateWorldExportJobRequest createWorldExportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateWorldExportJobResponse response = api.createWorldExportJob(createWorldExportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates worlds using the specified template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorldGenerationJobTest() throws ApiException {
        CreateWorldGenerationJobRequest createWorldGenerationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateWorldGenerationJobResponse response = api.createWorldGenerationJob(createWorldGenerationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a world template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorldTemplateTest() throws ApiException {
        CreateWorldTemplateRequest createWorldTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateWorldTemplateResponse response = api.createWorldTemplate(createWorldTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a fleet.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFleetTest() throws ApiException {
        DeleteFleetRequest deleteFleetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteFleet(deleteFleetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a robot.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRobotTest() throws ApiException {
        DeleteRobotRequest deleteRobotRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteRobot(deleteRobotRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a robot application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRobotApplicationTest() throws ApiException {
        DeleteRobotApplicationRequest deleteRobotApplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteRobotApplication(deleteRobotApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a simulation application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSimulationApplicationTest() throws ApiException {
        DeleteSimulationApplicationRequest deleteSimulationApplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteSimulationApplication(deleteSimulationApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a world template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWorldTemplateTest() throws ApiException {
        DeleteWorldTemplateRequest deleteWorldTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteWorldTemplate(deleteWorldTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deregisters a robot.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deregisterRobotTest() throws ApiException {
        DeregisterRobotRequest deregisterRobotRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeregisterRobotResponse response = api.deregisterRobot(deregisterRobotRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes a deployment job.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDeploymentJobTest() throws ApiException {
        DescribeDeploymentJobRequest describeDeploymentJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDeploymentJobResponse response = api.describeDeploymentJob(describeDeploymentJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes a fleet.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeFleetTest() throws ApiException {
        DeleteFleetRequest deleteFleetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeFleetResponse response = api.describeFleet(deleteFleetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes a robot.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeRobotTest() throws ApiException {
        DescribeRobotRequest describeRobotRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeRobotResponse response = api.describeRobot(describeRobotRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a robot application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeRobotApplicationTest() throws ApiException {
        DescribeRobotApplicationRequest describeRobotApplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeRobotApplicationResponse response = api.describeRobotApplication(describeRobotApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a simulation application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeSimulationApplicationTest() throws ApiException {
        DescribeSimulationApplicationRequest describeSimulationApplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeSimulationApplicationResponse response = api.describeSimulationApplication(describeSimulationApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a simulation job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeSimulationJobTest() throws ApiException {
        DescribeSimulationJobRequest describeSimulationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeSimulationJobResponse response = api.describeSimulationJob(describeSimulationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a simulation job batch.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeSimulationJobBatchTest() throws ApiException {
        DescribeSimulationJobBatchRequest describeSimulationJobBatchRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeSimulationJobBatchResponse response = api.describeSimulationJobBatch(describeSimulationJobBatchRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a world.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeWorldTest() throws ApiException {
        DescribeWorldRequest describeWorldRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeWorldResponse response = api.describeWorld(describeWorldRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a world export job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeWorldExportJobTest() throws ApiException {
        DescribeWorldExportJobRequest describeWorldExportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeWorldExportJobResponse response = api.describeWorldExportJob(describeWorldExportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a world generation job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeWorldGenerationJobTest() throws ApiException {
        DescribeWorldGenerationJobRequest describeWorldGenerationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeWorldGenerationJobResponse response = api.describeWorldGenerationJob(describeWorldGenerationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a world template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeWorldTemplateTest() throws ApiException {
        DescribeWorldTemplateRequest describeWorldTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeWorldTemplateResponse response = api.describeWorldTemplate(describeWorldTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the world template body.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorldTemplateBodyTest() throws ApiException {
        GetWorldTemplateBodyRequest getWorldTemplateBodyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetWorldTemplateBodyResponse response = api.getWorldTemplateBody(getWorldTemplateBodyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a list of deployment jobs for a fleet. You can optionally provide filters to retrieve specific deployment jobs.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDeploymentJobsTest() throws ApiException {
        ListDeploymentJobsRequest listDeploymentJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListDeploymentJobsResponse response = api.listDeploymentJobs(listDeploymentJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a list of fleets. You can optionally provide filters to retrieve specific fleets.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFleetsTest() throws ApiException {
        ListFleetsRequest listFleetsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListFleetsResponse response = api.listFleets(listFleetsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of robot application. You can optionally provide filters to retrieve specific robot applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRobotApplicationsTest() throws ApiException {
        ListRobotApplicationsRequest listRobotApplicationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListRobotApplicationsResponse response = api.listRobotApplications(listRobotApplicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a list of robots. You can optionally provide filters to retrieve specific robots.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRobotsTest() throws ApiException {
        ListRobotsRequest listRobotsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListRobotsResponse response = api.listRobots(listRobotsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of simulation applications. You can optionally provide filters to retrieve specific simulation applications. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSimulationApplicationsTest() throws ApiException {
        ListSimulationApplicationsRequest listSimulationApplicationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListSimulationApplicationsResponse response = api.listSimulationApplications(listSimulationApplicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list simulation job batches. You can optionally provide filters to retrieve specific simulation batch jobs. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSimulationJobBatchesTest() throws ApiException {
        ListSimulationJobBatchesRequest listSimulationJobBatchesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListSimulationJobBatchesResponse response = api.listSimulationJobBatches(listSimulationJobBatchesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of simulation jobs. You can optionally provide filters to retrieve specific simulation jobs. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSimulationJobsTest() throws ApiException {
        ListSimulationJobsRequest listSimulationJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListSimulationJobsResponse response = api.listSimulationJobs(listSimulationJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists all tags on a AWS RoboMaker resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists world export jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorldExportJobsTest() throws ApiException {
        ListWorldExportJobsRequest listWorldExportJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListWorldExportJobsResponse response = api.listWorldExportJobs(listWorldExportJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists world generator jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorldGenerationJobsTest() throws ApiException {
        ListWorldGenerationJobsRequest listWorldGenerationJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListWorldGenerationJobsResponse response = api.listWorldGenerationJobs(listWorldGenerationJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists world templates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorldTemplatesTest() throws ApiException {
        ListWorldTemplatesRequest listWorldTemplatesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListWorldTemplatesResponse response = api.listWorldTemplates(listWorldTemplatesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists worlds.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorldsTest() throws ApiException {
        ListWorldsRequest listWorldsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListWorldsResponse response = api.listWorlds(listWorldsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Registers a robot with a fleet.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API is no longer supported and will throw an error if used.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registerRobotTest() throws ApiException {
        DeregisterRobotRequest deregisterRobotRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RegisterRobotResponse response = api.registerRobot(deregisterRobotRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Restarts a running simulation job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void restartSimulationJobTest() throws ApiException {
        RestartSimulationJobRequest restartSimulationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.restartSimulationJob(restartSimulationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Starts a new simulation job batch. The batch is defined using one or more &lt;code&gt;SimulationJobRequest&lt;/code&gt; objects. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startSimulationJobBatchTest() throws ApiException {
        StartSimulationJobBatchRequest startSimulationJobBatchRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartSimulationJobBatchResponse response = api.startSimulationJobBatch(startSimulationJobBatchRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Syncrhonizes robots in a fleet to the latest deployment. This is helpful if robots were added after a deployment.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncDeploymentJobTest() throws ApiException {
        SyncDeploymentJobRequest syncDeploymentJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        SyncDeploymentJobResponse response = api.syncDeploymentJob(syncDeploymentJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Adds or edits tags for a AWS RoboMaker resource.&lt;/p&gt; &lt;p&gt;Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty strings. &lt;/p&gt; &lt;p&gt;For information about the rules that apply to tag keys and tag values, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\&quot;&gt;User-Defined Tag Restrictions&lt;/a&gt; in the &lt;i&gt;AWS Billing and Cost Management User Guide&lt;/i&gt;. &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Removes the specified tags from the specified AWS RoboMaker resource.&lt;/p&gt; &lt;p&gt;To remove a tag, specify the tag key. To change the tag value of an existing tag key, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html\&quot;&gt; &lt;code&gt;TagResource&lt;/code&gt; &lt;/a&gt;. &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(resourceArn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a robot application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRobotApplicationTest() throws ApiException {
        UpdateRobotApplicationRequest updateRobotApplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateRobotApplicationResponse response = api.updateRobotApplication(updateRobotApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a simulation application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSimulationApplicationTest() throws ApiException {
        UpdateSimulationApplicationRequest updateSimulationApplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateSimulationApplicationResponse response = api.updateSimulationApplication(updateSimulationApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a world template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorldTemplateTest() throws ApiException {
        UpdateWorldTemplateRequest updateWorldTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateWorldTemplateResponse response = api.updateWorldTemplate(updateWorldTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
