/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DeploymentStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a fleet.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:34.495509-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Fleet {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_DEPLOYMENT_STATUS = "lastDeploymentStatus";
  @SerializedName(SERIALIZED_NAME_LAST_DEPLOYMENT_STATUS)
  private DeploymentStatus lastDeploymentStatus;

  public static final String SERIALIZED_NAME_LAST_DEPLOYMENT_JOB = "lastDeploymentJob";
  @SerializedName(SERIALIZED_NAME_LAST_DEPLOYMENT_JOB)
  private String lastDeploymentJob;

  public static final String SERIALIZED_NAME_LAST_DEPLOYMENT_TIME = "lastDeploymentTime";
  @SerializedName(SERIALIZED_NAME_LAST_DEPLOYMENT_TIME)
  private OffsetDateTime lastDeploymentTime;

  public Fleet() {
  }

  public Fleet name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Fleet arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public Fleet createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Fleet lastDeploymentStatus(DeploymentStatus lastDeploymentStatus) {
    this.lastDeploymentStatus = lastDeploymentStatus;
    return this;
  }

  /**
   * Get lastDeploymentStatus
   * @return lastDeploymentStatus
   */
  @javax.annotation.Nullable
  public DeploymentStatus getLastDeploymentStatus() {
    return lastDeploymentStatus;
  }

  public void setLastDeploymentStatus(DeploymentStatus lastDeploymentStatus) {
    this.lastDeploymentStatus = lastDeploymentStatus;
  }


  public Fleet lastDeploymentJob(String lastDeploymentJob) {
    this.lastDeploymentJob = lastDeploymentJob;
    return this;
  }

  /**
   * Get lastDeploymentJob
   * @return lastDeploymentJob
   */
  @javax.annotation.Nullable
  public String getLastDeploymentJob() {
    return lastDeploymentJob;
  }

  public void setLastDeploymentJob(String lastDeploymentJob) {
    this.lastDeploymentJob = lastDeploymentJob;
  }


  public Fleet lastDeploymentTime(OffsetDateTime lastDeploymentTime) {
    this.lastDeploymentTime = lastDeploymentTime;
    return this;
  }

  /**
   * Get lastDeploymentTime
   * @return lastDeploymentTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastDeploymentTime() {
    return lastDeploymentTime;
  }

  public void setLastDeploymentTime(OffsetDateTime lastDeploymentTime) {
    this.lastDeploymentTime = lastDeploymentTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fleet fleet = (Fleet) o;
    return Objects.equals(this.name, fleet.name) &&
        Objects.equals(this.arn, fleet.arn) &&
        Objects.equals(this.createdAt, fleet.createdAt) &&
        Objects.equals(this.lastDeploymentStatus, fleet.lastDeploymentStatus) &&
        Objects.equals(this.lastDeploymentJob, fleet.lastDeploymentJob) &&
        Objects.equals(this.lastDeploymentTime, fleet.lastDeploymentTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, arn, createdAt, lastDeploymentStatus, lastDeploymentJob, lastDeploymentTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fleet {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastDeploymentStatus: ").append(toIndentedString(lastDeploymentStatus)).append("\n");
    sb.append("    lastDeploymentJob: ").append(toIndentedString(lastDeploymentJob)).append("\n");
    sb.append("    lastDeploymentTime: ").append(toIndentedString(lastDeploymentTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("arn");
    openapiFields.add("createdAt");
    openapiFields.add("lastDeploymentStatus");
    openapiFields.add("lastDeploymentJob");
    openapiFields.add("lastDeploymentTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Fleet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Fleet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Fleet is not found in the empty JSON string", Fleet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Fleet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Fleet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `lastDeploymentStatus`
      if (jsonObj.get("lastDeploymentStatus") != null && !jsonObj.get("lastDeploymentStatus").isJsonNull()) {
        DeploymentStatus.validateJsonElement(jsonObj.get("lastDeploymentStatus"));
      }
      // validate the optional field `lastDeploymentJob`
      if (jsonObj.get("lastDeploymentJob") != null && !jsonObj.get("lastDeploymentJob").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("lastDeploymentJob"));
      }
      // validate the optional field `lastDeploymentTime`
      if (jsonObj.get("lastDeploymentTime") != null && !jsonObj.get("lastDeploymentTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastDeploymentTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Fleet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Fleet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Fleet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Fleet.class));

       return (TypeAdapter<T>) new TypeAdapter<Fleet>() {
           @Override
           public void write(JsonWriter out, Fleet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Fleet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Fleet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Fleet
   * @throws IOException if the JSON string is invalid with respect to Fleet
   */
  public static Fleet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Fleet.class);
  }

  /**
   * Convert an instance of Fleet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

