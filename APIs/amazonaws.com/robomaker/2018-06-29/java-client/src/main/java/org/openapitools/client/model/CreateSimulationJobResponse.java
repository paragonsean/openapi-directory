/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateSimulationJobResponseCompute;
import org.openapitools.client.model.CreateSimulationJobResponseLoggingConfig;
import org.openapitools.client.model.CreateSimulationJobResponseOutputLocation;
import org.openapitools.client.model.CreateSimulationJobResponseVpcConfig;
import org.openapitools.client.model.FailureBehavior;
import org.openapitools.client.model.SimulationJobErrorCode;
import org.openapitools.client.model.SimulationJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateSimulationJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:34.495509-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateSimulationJobResponse {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private SimulationJobStatus status;

  public static final String SERIALIZED_NAME_LAST_STARTED_AT = "lastStartedAt";
  @SerializedName(SERIALIZED_NAME_LAST_STARTED_AT)
  private OffsetDateTime lastStartedAt;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "lastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_FAILURE_BEHAVIOR = "failureBehavior";
  @SerializedName(SERIALIZED_NAME_FAILURE_BEHAVIOR)
  private FailureBehavior failureBehavior;

  public static final String SERIALIZED_NAME_FAILURE_CODE = "failureCode";
  @SerializedName(SERIALIZED_NAME_FAILURE_CODE)
  private SimulationJobErrorCode failureCode;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "clientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_OUTPUT_LOCATION = "outputLocation";
  @SerializedName(SERIALIZED_NAME_OUTPUT_LOCATION)
  private CreateSimulationJobResponseOutputLocation outputLocation;

  public static final String SERIALIZED_NAME_LOGGING_CONFIG = "loggingConfig";
  @SerializedName(SERIALIZED_NAME_LOGGING_CONFIG)
  private CreateSimulationJobResponseLoggingConfig loggingConfig;

  public static final String SERIALIZED_NAME_MAX_JOB_DURATION_IN_SECONDS = "maxJobDurationInSeconds";
  @SerializedName(SERIALIZED_NAME_MAX_JOB_DURATION_IN_SECONDS)
  private Integer maxJobDurationInSeconds;

  public static final String SERIALIZED_NAME_SIMULATION_TIME_MILLIS = "simulationTimeMillis";
  @SerializedName(SERIALIZED_NAME_SIMULATION_TIME_MILLIS)
  private Integer simulationTimeMillis;

  public static final String SERIALIZED_NAME_IAM_ROLE = "iamRole";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE)
  private String iamRole;

  public static final String SERIALIZED_NAME_ROBOT_APPLICATIONS = "robotApplications";
  @SerializedName(SERIALIZED_NAME_ROBOT_APPLICATIONS)
  private List robotApplications;

  public static final String SERIALIZED_NAME_SIMULATION_APPLICATIONS = "simulationApplications";
  @SerializedName(SERIALIZED_NAME_SIMULATION_APPLICATIONS)
  private List simulationApplications;

  public static final String SERIALIZED_NAME_DATA_SOURCES = "dataSources";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCES)
  private List dataSources;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_VPC_CONFIG = "vpcConfig";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIG)
  private CreateSimulationJobResponseVpcConfig vpcConfig;

  public static final String SERIALIZED_NAME_COMPUTE = "compute";
  @SerializedName(SERIALIZED_NAME_COMPUTE)
  private CreateSimulationJobResponseCompute compute;

  public CreateSimulationJobResponse() {
  }

  public CreateSimulationJobResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public CreateSimulationJobResponse status(SimulationJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public SimulationJobStatus getStatus() {
    return status;
  }

  public void setStatus(SimulationJobStatus status) {
    this.status = status;
  }


  public CreateSimulationJobResponse lastStartedAt(OffsetDateTime lastStartedAt) {
    this.lastStartedAt = lastStartedAt;
    return this;
  }

  /**
   * Get lastStartedAt
   * @return lastStartedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastStartedAt() {
    return lastStartedAt;
  }

  public void setLastStartedAt(OffsetDateTime lastStartedAt) {
    this.lastStartedAt = lastStartedAt;
  }


  public CreateSimulationJobResponse lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public CreateSimulationJobResponse failureBehavior(FailureBehavior failureBehavior) {
    this.failureBehavior = failureBehavior;
    return this;
  }

  /**
   * Get failureBehavior
   * @return failureBehavior
   */
  @javax.annotation.Nullable
  public FailureBehavior getFailureBehavior() {
    return failureBehavior;
  }

  public void setFailureBehavior(FailureBehavior failureBehavior) {
    this.failureBehavior = failureBehavior;
  }


  public CreateSimulationJobResponse failureCode(SimulationJobErrorCode failureCode) {
    this.failureCode = failureCode;
    return this;
  }

  /**
   * Get failureCode
   * @return failureCode
   */
  @javax.annotation.Nullable
  public SimulationJobErrorCode getFailureCode() {
    return failureCode;
  }

  public void setFailureCode(SimulationJobErrorCode failureCode) {
    this.failureCode = failureCode;
  }


  public CreateSimulationJobResponse clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Get clientRequestToken
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public CreateSimulationJobResponse outputLocation(CreateSimulationJobResponseOutputLocation outputLocation) {
    this.outputLocation = outputLocation;
    return this;
  }

  /**
   * Get outputLocation
   * @return outputLocation
   */
  @javax.annotation.Nullable
  public CreateSimulationJobResponseOutputLocation getOutputLocation() {
    return outputLocation;
  }

  public void setOutputLocation(CreateSimulationJobResponseOutputLocation outputLocation) {
    this.outputLocation = outputLocation;
  }


  public CreateSimulationJobResponse loggingConfig(CreateSimulationJobResponseLoggingConfig loggingConfig) {
    this.loggingConfig = loggingConfig;
    return this;
  }

  /**
   * Get loggingConfig
   * @return loggingConfig
   */
  @javax.annotation.Nullable
  public CreateSimulationJobResponseLoggingConfig getLoggingConfig() {
    return loggingConfig;
  }

  public void setLoggingConfig(CreateSimulationJobResponseLoggingConfig loggingConfig) {
    this.loggingConfig = loggingConfig;
  }


  public CreateSimulationJobResponse maxJobDurationInSeconds(Integer maxJobDurationInSeconds) {
    this.maxJobDurationInSeconds = maxJobDurationInSeconds;
    return this;
  }

  /**
   * Get maxJobDurationInSeconds
   * @return maxJobDurationInSeconds
   */
  @javax.annotation.Nullable
  public Integer getMaxJobDurationInSeconds() {
    return maxJobDurationInSeconds;
  }

  public void setMaxJobDurationInSeconds(Integer maxJobDurationInSeconds) {
    this.maxJobDurationInSeconds = maxJobDurationInSeconds;
  }


  public CreateSimulationJobResponse simulationTimeMillis(Integer simulationTimeMillis) {
    this.simulationTimeMillis = simulationTimeMillis;
    return this;
  }

  /**
   * Get simulationTimeMillis
   * @return simulationTimeMillis
   */
  @javax.annotation.Nullable
  public Integer getSimulationTimeMillis() {
    return simulationTimeMillis;
  }

  public void setSimulationTimeMillis(Integer simulationTimeMillis) {
    this.simulationTimeMillis = simulationTimeMillis;
  }


  public CreateSimulationJobResponse iamRole(String iamRole) {
    this.iamRole = iamRole;
    return this;
  }

  /**
   * Get iamRole
   * @return iamRole
   */
  @javax.annotation.Nullable
  public String getIamRole() {
    return iamRole;
  }

  public void setIamRole(String iamRole) {
    this.iamRole = iamRole;
  }


  public CreateSimulationJobResponse robotApplications(List robotApplications) {
    this.robotApplications = robotApplications;
    return this;
  }

  /**
   * Get robotApplications
   * @return robotApplications
   */
  @javax.annotation.Nullable
  public List getRobotApplications() {
    return robotApplications;
  }

  public void setRobotApplications(List robotApplications) {
    this.robotApplications = robotApplications;
  }


  public CreateSimulationJobResponse simulationApplications(List simulationApplications) {
    this.simulationApplications = simulationApplications;
    return this;
  }

  /**
   * Get simulationApplications
   * @return simulationApplications
   */
  @javax.annotation.Nullable
  public List getSimulationApplications() {
    return simulationApplications;
  }

  public void setSimulationApplications(List simulationApplications) {
    this.simulationApplications = simulationApplications;
  }


  public CreateSimulationJobResponse dataSources(List dataSources) {
    this.dataSources = dataSources;
    return this;
  }

  /**
   * Get dataSources
   * @return dataSources
   */
  @javax.annotation.Nullable
  public List getDataSources() {
    return dataSources;
  }

  public void setDataSources(List dataSources) {
    this.dataSources = dataSources;
  }


  public CreateSimulationJobResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public CreateSimulationJobResponse vpcConfig(CreateSimulationJobResponseVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
    return this;
  }

  /**
   * Get vpcConfig
   * @return vpcConfig
   */
  @javax.annotation.Nullable
  public CreateSimulationJobResponseVpcConfig getVpcConfig() {
    return vpcConfig;
  }

  public void setVpcConfig(CreateSimulationJobResponseVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
  }


  public CreateSimulationJobResponse compute(CreateSimulationJobResponseCompute compute) {
    this.compute = compute;
    return this;
  }

  /**
   * Get compute
   * @return compute
   */
  @javax.annotation.Nullable
  public CreateSimulationJobResponseCompute getCompute() {
    return compute;
  }

  public void setCompute(CreateSimulationJobResponseCompute compute) {
    this.compute = compute;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSimulationJobResponse createSimulationJobResponse = (CreateSimulationJobResponse) o;
    return Objects.equals(this.arn, createSimulationJobResponse.arn) &&
        Objects.equals(this.status, createSimulationJobResponse.status) &&
        Objects.equals(this.lastStartedAt, createSimulationJobResponse.lastStartedAt) &&
        Objects.equals(this.lastUpdatedAt, createSimulationJobResponse.lastUpdatedAt) &&
        Objects.equals(this.failureBehavior, createSimulationJobResponse.failureBehavior) &&
        Objects.equals(this.failureCode, createSimulationJobResponse.failureCode) &&
        Objects.equals(this.clientRequestToken, createSimulationJobResponse.clientRequestToken) &&
        Objects.equals(this.outputLocation, createSimulationJobResponse.outputLocation) &&
        Objects.equals(this.loggingConfig, createSimulationJobResponse.loggingConfig) &&
        Objects.equals(this.maxJobDurationInSeconds, createSimulationJobResponse.maxJobDurationInSeconds) &&
        Objects.equals(this.simulationTimeMillis, createSimulationJobResponse.simulationTimeMillis) &&
        Objects.equals(this.iamRole, createSimulationJobResponse.iamRole) &&
        Objects.equals(this.robotApplications, createSimulationJobResponse.robotApplications) &&
        Objects.equals(this.simulationApplications, createSimulationJobResponse.simulationApplications) &&
        Objects.equals(this.dataSources, createSimulationJobResponse.dataSources) &&
        Objects.equals(this.tags, createSimulationJobResponse.tags) &&
        Objects.equals(this.vpcConfig, createSimulationJobResponse.vpcConfig) &&
        Objects.equals(this.compute, createSimulationJobResponse.compute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, status, lastStartedAt, lastUpdatedAt, failureBehavior, failureCode, clientRequestToken, outputLocation, loggingConfig, maxJobDurationInSeconds, simulationTimeMillis, iamRole, robotApplications, simulationApplications, dataSources, tags, vpcConfig, compute);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSimulationJobResponse {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastStartedAt: ").append(toIndentedString(lastStartedAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    failureBehavior: ").append(toIndentedString(failureBehavior)).append("\n");
    sb.append("    failureCode: ").append(toIndentedString(failureCode)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    outputLocation: ").append(toIndentedString(outputLocation)).append("\n");
    sb.append("    loggingConfig: ").append(toIndentedString(loggingConfig)).append("\n");
    sb.append("    maxJobDurationInSeconds: ").append(toIndentedString(maxJobDurationInSeconds)).append("\n");
    sb.append("    simulationTimeMillis: ").append(toIndentedString(simulationTimeMillis)).append("\n");
    sb.append("    iamRole: ").append(toIndentedString(iamRole)).append("\n");
    sb.append("    robotApplications: ").append(toIndentedString(robotApplications)).append("\n");
    sb.append("    simulationApplications: ").append(toIndentedString(simulationApplications)).append("\n");
    sb.append("    dataSources: ").append(toIndentedString(dataSources)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    vpcConfig: ").append(toIndentedString(vpcConfig)).append("\n");
    sb.append("    compute: ").append(toIndentedString(compute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("status");
    openapiFields.add("lastStartedAt");
    openapiFields.add("lastUpdatedAt");
    openapiFields.add("failureBehavior");
    openapiFields.add("failureCode");
    openapiFields.add("clientRequestToken");
    openapiFields.add("outputLocation");
    openapiFields.add("loggingConfig");
    openapiFields.add("maxJobDurationInSeconds");
    openapiFields.add("simulationTimeMillis");
    openapiFields.add("iamRole");
    openapiFields.add("robotApplications");
    openapiFields.add("simulationApplications");
    openapiFields.add("dataSources");
    openapiFields.add("tags");
    openapiFields.add("vpcConfig");
    openapiFields.add("compute");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateSimulationJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateSimulationJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateSimulationJobResponse is not found in the empty JSON string", CreateSimulationJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateSimulationJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateSimulationJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        SimulationJobStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `lastStartedAt`
      if (jsonObj.get("lastStartedAt") != null && !jsonObj.get("lastStartedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastStartedAt"));
      }
      // validate the optional field `lastUpdatedAt`
      if (jsonObj.get("lastUpdatedAt") != null && !jsonObj.get("lastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedAt"));
      }
      // validate the optional field `failureBehavior`
      if (jsonObj.get("failureBehavior") != null && !jsonObj.get("failureBehavior").isJsonNull()) {
        FailureBehavior.validateJsonElement(jsonObj.get("failureBehavior"));
      }
      // validate the optional field `failureCode`
      if (jsonObj.get("failureCode") != null && !jsonObj.get("failureCode").isJsonNull()) {
        SimulationJobErrorCode.validateJsonElement(jsonObj.get("failureCode"));
      }
      // validate the optional field `clientRequestToken`
      if (jsonObj.get("clientRequestToken") != null && !jsonObj.get("clientRequestToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clientRequestToken"));
      }
      // validate the optional field `outputLocation`
      if (jsonObj.get("outputLocation") != null && !jsonObj.get("outputLocation").isJsonNull()) {
        CreateSimulationJobResponseOutputLocation.validateJsonElement(jsonObj.get("outputLocation"));
      }
      // validate the optional field `loggingConfig`
      if (jsonObj.get("loggingConfig") != null && !jsonObj.get("loggingConfig").isJsonNull()) {
        CreateSimulationJobResponseLoggingConfig.validateJsonElement(jsonObj.get("loggingConfig"));
      }
      // validate the optional field `maxJobDurationInSeconds`
      if (jsonObj.get("maxJobDurationInSeconds") != null && !jsonObj.get("maxJobDurationInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("maxJobDurationInSeconds"));
      }
      // validate the optional field `simulationTimeMillis`
      if (jsonObj.get("simulationTimeMillis") != null && !jsonObj.get("simulationTimeMillis").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("simulationTimeMillis"));
      }
      // validate the optional field `iamRole`
      if (jsonObj.get("iamRole") != null && !jsonObj.get("iamRole").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("iamRole"));
      }
      // validate the optional field `robotApplications`
      if (jsonObj.get("robotApplications") != null && !jsonObj.get("robotApplications").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("robotApplications"));
      }
      // validate the optional field `simulationApplications`
      if (jsonObj.get("simulationApplications") != null && !jsonObj.get("simulationApplications").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("simulationApplications"));
      }
      // validate the optional field `dataSources`
      if (jsonObj.get("dataSources") != null && !jsonObj.get("dataSources").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("dataSources"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `vpcConfig`
      if (jsonObj.get("vpcConfig") != null && !jsonObj.get("vpcConfig").isJsonNull()) {
        CreateSimulationJobResponseVpcConfig.validateJsonElement(jsonObj.get("vpcConfig"));
      }
      // validate the optional field `compute`
      if (jsonObj.get("compute") != null && !jsonObj.get("compute").isJsonNull()) {
        CreateSimulationJobResponseCompute.validateJsonElement(jsonObj.get("compute"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateSimulationJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateSimulationJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateSimulationJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateSimulationJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateSimulationJobResponse>() {
           @Override
           public void write(JsonWriter out, CreateSimulationJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateSimulationJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateSimulationJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateSimulationJobResponse
   * @throws IOException if the JSON string is invalid with respect to CreateSimulationJobResponse
   */
  public static CreateSimulationJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateSimulationJobResponse.class);
  }

  /**
   * Convert an instance of CreateSimulationJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

