/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.DescribeWorldGenerationJobResponseFinishedWorldsSummary;
import org.openapitools.client.model.DescribeWorldGenerationJobResponseWorldCount;
import org.openapitools.client.model.WorldGenerationJobErrorCode;
import org.openapitools.client.model.WorldGenerationJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeWorldGenerationJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:34.495509-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeWorldGenerationJobResponse {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private WorldGenerationJobStatus status;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_FAILURE_CODE = "failureCode";
  @SerializedName(SERIALIZED_NAME_FAILURE_CODE)
  private WorldGenerationJobErrorCode failureCode;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "failureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "clientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private String template;

  public static final String SERIALIZED_NAME_WORLD_COUNT = "worldCount";
  @SerializedName(SERIALIZED_NAME_WORLD_COUNT)
  private DescribeWorldGenerationJobResponseWorldCount worldCount;

  public static final String SERIALIZED_NAME_FINISHED_WORLDS_SUMMARY = "finishedWorldsSummary";
  @SerializedName(SERIALIZED_NAME_FINISHED_WORLDS_SUMMARY)
  private DescribeWorldGenerationJobResponseFinishedWorldsSummary finishedWorldsSummary;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_WORLD_TAGS = "worldTags";
  @SerializedName(SERIALIZED_NAME_WORLD_TAGS)
  private Map worldTags;

  public DescribeWorldGenerationJobResponse() {
  }

  public DescribeWorldGenerationJobResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public DescribeWorldGenerationJobResponse status(WorldGenerationJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public WorldGenerationJobStatus getStatus() {
    return status;
  }

  public void setStatus(WorldGenerationJobStatus status) {
    this.status = status;
  }


  public DescribeWorldGenerationJobResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeWorldGenerationJobResponse failureCode(WorldGenerationJobErrorCode failureCode) {
    this.failureCode = failureCode;
    return this;
  }

  /**
   * Get failureCode
   * @return failureCode
   */
  @javax.annotation.Nullable
  public WorldGenerationJobErrorCode getFailureCode() {
    return failureCode;
  }

  public void setFailureCode(WorldGenerationJobErrorCode failureCode) {
    this.failureCode = failureCode;
  }


  public DescribeWorldGenerationJobResponse failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeWorldGenerationJobResponse clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Get clientRequestToken
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public DescribeWorldGenerationJobResponse template(String template) {
    this.template = template;
    return this;
  }

  /**
   * Get template
   * @return template
   */
  @javax.annotation.Nullable
  public String getTemplate() {
    return template;
  }

  public void setTemplate(String template) {
    this.template = template;
  }


  public DescribeWorldGenerationJobResponse worldCount(DescribeWorldGenerationJobResponseWorldCount worldCount) {
    this.worldCount = worldCount;
    return this;
  }

  /**
   * Get worldCount
   * @return worldCount
   */
  @javax.annotation.Nullable
  public DescribeWorldGenerationJobResponseWorldCount getWorldCount() {
    return worldCount;
  }

  public void setWorldCount(DescribeWorldGenerationJobResponseWorldCount worldCount) {
    this.worldCount = worldCount;
  }


  public DescribeWorldGenerationJobResponse finishedWorldsSummary(DescribeWorldGenerationJobResponseFinishedWorldsSummary finishedWorldsSummary) {
    this.finishedWorldsSummary = finishedWorldsSummary;
    return this;
  }

  /**
   * Get finishedWorldsSummary
   * @return finishedWorldsSummary
   */
  @javax.annotation.Nullable
  public DescribeWorldGenerationJobResponseFinishedWorldsSummary getFinishedWorldsSummary() {
    return finishedWorldsSummary;
  }

  public void setFinishedWorldsSummary(DescribeWorldGenerationJobResponseFinishedWorldsSummary finishedWorldsSummary) {
    this.finishedWorldsSummary = finishedWorldsSummary;
  }


  public DescribeWorldGenerationJobResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public DescribeWorldGenerationJobResponse worldTags(Map worldTags) {
    this.worldTags = worldTags;
    return this;
  }

  /**
   * Get worldTags
   * @return worldTags
   */
  @javax.annotation.Nullable
  public Map getWorldTags() {
    return worldTags;
  }

  public void setWorldTags(Map worldTags) {
    this.worldTags = worldTags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeWorldGenerationJobResponse describeWorldGenerationJobResponse = (DescribeWorldGenerationJobResponse) o;
    return Objects.equals(this.arn, describeWorldGenerationJobResponse.arn) &&
        Objects.equals(this.status, describeWorldGenerationJobResponse.status) &&
        Objects.equals(this.createdAt, describeWorldGenerationJobResponse.createdAt) &&
        Objects.equals(this.failureCode, describeWorldGenerationJobResponse.failureCode) &&
        Objects.equals(this.failureReason, describeWorldGenerationJobResponse.failureReason) &&
        Objects.equals(this.clientRequestToken, describeWorldGenerationJobResponse.clientRequestToken) &&
        Objects.equals(this.template, describeWorldGenerationJobResponse.template) &&
        Objects.equals(this.worldCount, describeWorldGenerationJobResponse.worldCount) &&
        Objects.equals(this.finishedWorldsSummary, describeWorldGenerationJobResponse.finishedWorldsSummary) &&
        Objects.equals(this.tags, describeWorldGenerationJobResponse.tags) &&
        Objects.equals(this.worldTags, describeWorldGenerationJobResponse.worldTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, status, createdAt, failureCode, failureReason, clientRequestToken, template, worldCount, finishedWorldsSummary, tags, worldTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeWorldGenerationJobResponse {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    failureCode: ").append(toIndentedString(failureCode)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    worldCount: ").append(toIndentedString(worldCount)).append("\n");
    sb.append("    finishedWorldsSummary: ").append(toIndentedString(finishedWorldsSummary)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    worldTags: ").append(toIndentedString(worldTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("status");
    openapiFields.add("createdAt");
    openapiFields.add("failureCode");
    openapiFields.add("failureReason");
    openapiFields.add("clientRequestToken");
    openapiFields.add("template");
    openapiFields.add("worldCount");
    openapiFields.add("finishedWorldsSummary");
    openapiFields.add("tags");
    openapiFields.add("worldTags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeWorldGenerationJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeWorldGenerationJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeWorldGenerationJobResponse is not found in the empty JSON string", DescribeWorldGenerationJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeWorldGenerationJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeWorldGenerationJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        WorldGenerationJobStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `failureCode`
      if (jsonObj.get("failureCode") != null && !jsonObj.get("failureCode").isJsonNull()) {
        WorldGenerationJobErrorCode.validateJsonElement(jsonObj.get("failureCode"));
      }
      // validate the optional field `failureReason`
      if (jsonObj.get("failureReason") != null && !jsonObj.get("failureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("failureReason"));
      }
      // validate the optional field `clientRequestToken`
      if (jsonObj.get("clientRequestToken") != null && !jsonObj.get("clientRequestToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clientRequestToken"));
      }
      // validate the optional field `template`
      if (jsonObj.get("template") != null && !jsonObj.get("template").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("template"));
      }
      // validate the optional field `worldCount`
      if (jsonObj.get("worldCount") != null && !jsonObj.get("worldCount").isJsonNull()) {
        DescribeWorldGenerationJobResponseWorldCount.validateJsonElement(jsonObj.get("worldCount"));
      }
      // validate the optional field `finishedWorldsSummary`
      if (jsonObj.get("finishedWorldsSummary") != null && !jsonObj.get("finishedWorldsSummary").isJsonNull()) {
        DescribeWorldGenerationJobResponseFinishedWorldsSummary.validateJsonElement(jsonObj.get("finishedWorldsSummary"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `worldTags`
      if (jsonObj.get("worldTags") != null && !jsonObj.get("worldTags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("worldTags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeWorldGenerationJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeWorldGenerationJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeWorldGenerationJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeWorldGenerationJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeWorldGenerationJobResponse>() {
           @Override
           public void write(JsonWriter out, DescribeWorldGenerationJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeWorldGenerationJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeWorldGenerationJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeWorldGenerationJobResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeWorldGenerationJobResponse
   */
  public static DescribeWorldGenerationJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeWorldGenerationJobResponse.class);
  }

  /**
   * Convert an instance of DescribeWorldGenerationJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

