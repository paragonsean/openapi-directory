/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.FailureBehavior;
import org.openapitools.client.model.LoggingConfig;
import org.openapitools.client.model.OutputLocation;
import org.openapitools.client.model.SimulationJobRequestCompute;
import org.openapitools.client.model.VPCConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FailedCreateSimulationJobRequestRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:34.495509-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FailedCreateSimulationJobRequestRequest {
  public static final String SERIALIZED_NAME_OUTPUT_LOCATION = "outputLocation";
  @SerializedName(SERIALIZED_NAME_OUTPUT_LOCATION)
  private OutputLocation outputLocation;

  public static final String SERIALIZED_NAME_LOGGING_CONFIG = "loggingConfig";
  @SerializedName(SERIALIZED_NAME_LOGGING_CONFIG)
  private LoggingConfig loggingConfig;

  public static final String SERIALIZED_NAME_MAX_JOB_DURATION_IN_SECONDS = "maxJobDurationInSeconds";
  @SerializedName(SERIALIZED_NAME_MAX_JOB_DURATION_IN_SECONDS)
  private Integer maxJobDurationInSeconds;

  public static final String SERIALIZED_NAME_IAM_ROLE = "iamRole";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE)
  private String iamRole;

  public static final String SERIALIZED_NAME_FAILURE_BEHAVIOR = "failureBehavior";
  @SerializedName(SERIALIZED_NAME_FAILURE_BEHAVIOR)
  private FailureBehavior failureBehavior;

  public static final String SERIALIZED_NAME_USE_DEFAULT_APPLICATIONS = "useDefaultApplications";
  @SerializedName(SERIALIZED_NAME_USE_DEFAULT_APPLICATIONS)
  private Boolean useDefaultApplications;

  public static final String SERIALIZED_NAME_ROBOT_APPLICATIONS = "robotApplications";
  @SerializedName(SERIALIZED_NAME_ROBOT_APPLICATIONS)
  private List robotApplications;

  public static final String SERIALIZED_NAME_SIMULATION_APPLICATIONS = "simulationApplications";
  @SerializedName(SERIALIZED_NAME_SIMULATION_APPLICATIONS)
  private List simulationApplications;

  public static final String SERIALIZED_NAME_DATA_SOURCES = "dataSources";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCES)
  private List dataSources;

  public static final String SERIALIZED_NAME_VPC_CONFIG = "vpcConfig";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIG)
  private VPCConfig vpcConfig;

  public static final String SERIALIZED_NAME_COMPUTE = "compute";
  @SerializedName(SERIALIZED_NAME_COMPUTE)
  private SimulationJobRequestCompute compute;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public FailedCreateSimulationJobRequestRequest() {
  }

  public FailedCreateSimulationJobRequestRequest outputLocation(OutputLocation outputLocation) {
    this.outputLocation = outputLocation;
    return this;
  }

  /**
   * Get outputLocation
   * @return outputLocation
   */
  @javax.annotation.Nullable
  public OutputLocation getOutputLocation() {
    return outputLocation;
  }

  public void setOutputLocation(OutputLocation outputLocation) {
    this.outputLocation = outputLocation;
  }


  public FailedCreateSimulationJobRequestRequest loggingConfig(LoggingConfig loggingConfig) {
    this.loggingConfig = loggingConfig;
    return this;
  }

  /**
   * Get loggingConfig
   * @return loggingConfig
   */
  @javax.annotation.Nullable
  public LoggingConfig getLoggingConfig() {
    return loggingConfig;
  }

  public void setLoggingConfig(LoggingConfig loggingConfig) {
    this.loggingConfig = loggingConfig;
  }


  public FailedCreateSimulationJobRequestRequest maxJobDurationInSeconds(Integer maxJobDurationInSeconds) {
    this.maxJobDurationInSeconds = maxJobDurationInSeconds;
    return this;
  }

  /**
   * Get maxJobDurationInSeconds
   * @return maxJobDurationInSeconds
   */
  @javax.annotation.Nonnull
  public Integer getMaxJobDurationInSeconds() {
    return maxJobDurationInSeconds;
  }

  public void setMaxJobDurationInSeconds(Integer maxJobDurationInSeconds) {
    this.maxJobDurationInSeconds = maxJobDurationInSeconds;
  }


  public FailedCreateSimulationJobRequestRequest iamRole(String iamRole) {
    this.iamRole = iamRole;
    return this;
  }

  /**
   * Get iamRole
   * @return iamRole
   */
  @javax.annotation.Nullable
  public String getIamRole() {
    return iamRole;
  }

  public void setIamRole(String iamRole) {
    this.iamRole = iamRole;
  }


  public FailedCreateSimulationJobRequestRequest failureBehavior(FailureBehavior failureBehavior) {
    this.failureBehavior = failureBehavior;
    return this;
  }

  /**
   * Get failureBehavior
   * @return failureBehavior
   */
  @javax.annotation.Nullable
  public FailureBehavior getFailureBehavior() {
    return failureBehavior;
  }

  public void setFailureBehavior(FailureBehavior failureBehavior) {
    this.failureBehavior = failureBehavior;
  }


  public FailedCreateSimulationJobRequestRequest useDefaultApplications(Boolean useDefaultApplications) {
    this.useDefaultApplications = useDefaultApplications;
    return this;
  }

  /**
   * Get useDefaultApplications
   * @return useDefaultApplications
   */
  @javax.annotation.Nullable
  public Boolean getUseDefaultApplications() {
    return useDefaultApplications;
  }

  public void setUseDefaultApplications(Boolean useDefaultApplications) {
    this.useDefaultApplications = useDefaultApplications;
  }


  public FailedCreateSimulationJobRequestRequest robotApplications(List robotApplications) {
    this.robotApplications = robotApplications;
    return this;
  }

  /**
   * Get robotApplications
   * @return robotApplications
   */
  @javax.annotation.Nullable
  public List getRobotApplications() {
    return robotApplications;
  }

  public void setRobotApplications(List robotApplications) {
    this.robotApplications = robotApplications;
  }


  public FailedCreateSimulationJobRequestRequest simulationApplications(List simulationApplications) {
    this.simulationApplications = simulationApplications;
    return this;
  }

  /**
   * Get simulationApplications
   * @return simulationApplications
   */
  @javax.annotation.Nullable
  public List getSimulationApplications() {
    return simulationApplications;
  }

  public void setSimulationApplications(List simulationApplications) {
    this.simulationApplications = simulationApplications;
  }


  public FailedCreateSimulationJobRequestRequest dataSources(List dataSources) {
    this.dataSources = dataSources;
    return this;
  }

  /**
   * Get dataSources
   * @return dataSources
   */
  @javax.annotation.Nullable
  public List getDataSources() {
    return dataSources;
  }

  public void setDataSources(List dataSources) {
    this.dataSources = dataSources;
  }


  public FailedCreateSimulationJobRequestRequest vpcConfig(VPCConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
    return this;
  }

  /**
   * Get vpcConfig
   * @return vpcConfig
   */
  @javax.annotation.Nullable
  public VPCConfig getVpcConfig() {
    return vpcConfig;
  }

  public void setVpcConfig(VPCConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
  }


  public FailedCreateSimulationJobRequestRequest compute(SimulationJobRequestCompute compute) {
    this.compute = compute;
    return this;
  }

  /**
   * Get compute
   * @return compute
   */
  @javax.annotation.Nullable
  public SimulationJobRequestCompute getCompute() {
    return compute;
  }

  public void setCompute(SimulationJobRequestCompute compute) {
    this.compute = compute;
  }


  public FailedCreateSimulationJobRequestRequest tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FailedCreateSimulationJobRequestRequest failedCreateSimulationJobRequestRequest = (FailedCreateSimulationJobRequestRequest) o;
    return Objects.equals(this.outputLocation, failedCreateSimulationJobRequestRequest.outputLocation) &&
        Objects.equals(this.loggingConfig, failedCreateSimulationJobRequestRequest.loggingConfig) &&
        Objects.equals(this.maxJobDurationInSeconds, failedCreateSimulationJobRequestRequest.maxJobDurationInSeconds) &&
        Objects.equals(this.iamRole, failedCreateSimulationJobRequestRequest.iamRole) &&
        Objects.equals(this.failureBehavior, failedCreateSimulationJobRequestRequest.failureBehavior) &&
        Objects.equals(this.useDefaultApplications, failedCreateSimulationJobRequestRequest.useDefaultApplications) &&
        Objects.equals(this.robotApplications, failedCreateSimulationJobRequestRequest.robotApplications) &&
        Objects.equals(this.simulationApplications, failedCreateSimulationJobRequestRequest.simulationApplications) &&
        Objects.equals(this.dataSources, failedCreateSimulationJobRequestRequest.dataSources) &&
        Objects.equals(this.vpcConfig, failedCreateSimulationJobRequestRequest.vpcConfig) &&
        Objects.equals(this.compute, failedCreateSimulationJobRequestRequest.compute) &&
        Objects.equals(this.tags, failedCreateSimulationJobRequestRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outputLocation, loggingConfig, maxJobDurationInSeconds, iamRole, failureBehavior, useDefaultApplications, robotApplications, simulationApplications, dataSources, vpcConfig, compute, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FailedCreateSimulationJobRequestRequest {\n");
    sb.append("    outputLocation: ").append(toIndentedString(outputLocation)).append("\n");
    sb.append("    loggingConfig: ").append(toIndentedString(loggingConfig)).append("\n");
    sb.append("    maxJobDurationInSeconds: ").append(toIndentedString(maxJobDurationInSeconds)).append("\n");
    sb.append("    iamRole: ").append(toIndentedString(iamRole)).append("\n");
    sb.append("    failureBehavior: ").append(toIndentedString(failureBehavior)).append("\n");
    sb.append("    useDefaultApplications: ").append(toIndentedString(useDefaultApplications)).append("\n");
    sb.append("    robotApplications: ").append(toIndentedString(robotApplications)).append("\n");
    sb.append("    simulationApplications: ").append(toIndentedString(simulationApplications)).append("\n");
    sb.append("    dataSources: ").append(toIndentedString(dataSources)).append("\n");
    sb.append("    vpcConfig: ").append(toIndentedString(vpcConfig)).append("\n");
    sb.append("    compute: ").append(toIndentedString(compute)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("outputLocation");
    openapiFields.add("loggingConfig");
    openapiFields.add("maxJobDurationInSeconds");
    openapiFields.add("iamRole");
    openapiFields.add("failureBehavior");
    openapiFields.add("useDefaultApplications");
    openapiFields.add("robotApplications");
    openapiFields.add("simulationApplications");
    openapiFields.add("dataSources");
    openapiFields.add("vpcConfig");
    openapiFields.add("compute");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("maxJobDurationInSeconds");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FailedCreateSimulationJobRequestRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FailedCreateSimulationJobRequestRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FailedCreateSimulationJobRequestRequest is not found in the empty JSON string", FailedCreateSimulationJobRequestRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FailedCreateSimulationJobRequestRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FailedCreateSimulationJobRequestRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : FailedCreateSimulationJobRequestRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `outputLocation`
      if (jsonObj.get("outputLocation") != null && !jsonObj.get("outputLocation").isJsonNull()) {
        OutputLocation.validateJsonElement(jsonObj.get("outputLocation"));
      }
      // validate the optional field `loggingConfig`
      if (jsonObj.get("loggingConfig") != null && !jsonObj.get("loggingConfig").isJsonNull()) {
        LoggingConfig.validateJsonElement(jsonObj.get("loggingConfig"));
      }
      // validate the required field `maxJobDurationInSeconds`
      Integer.validateJsonElement(jsonObj.get("maxJobDurationInSeconds"));
      // validate the optional field `iamRole`
      if (jsonObj.get("iamRole") != null && !jsonObj.get("iamRole").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("iamRole"));
      }
      // validate the optional field `failureBehavior`
      if (jsonObj.get("failureBehavior") != null && !jsonObj.get("failureBehavior").isJsonNull()) {
        FailureBehavior.validateJsonElement(jsonObj.get("failureBehavior"));
      }
      // validate the optional field `useDefaultApplications`
      if (jsonObj.get("useDefaultApplications") != null && !jsonObj.get("useDefaultApplications").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("useDefaultApplications"));
      }
      // validate the optional field `robotApplications`
      if (jsonObj.get("robotApplications") != null && !jsonObj.get("robotApplications").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("robotApplications"));
      }
      // validate the optional field `simulationApplications`
      if (jsonObj.get("simulationApplications") != null && !jsonObj.get("simulationApplications").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("simulationApplications"));
      }
      // validate the optional field `dataSources`
      if (jsonObj.get("dataSources") != null && !jsonObj.get("dataSources").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("dataSources"));
      }
      // validate the optional field `vpcConfig`
      if (jsonObj.get("vpcConfig") != null && !jsonObj.get("vpcConfig").isJsonNull()) {
        VPCConfig.validateJsonElement(jsonObj.get("vpcConfig"));
      }
      // validate the optional field `compute`
      if (jsonObj.get("compute") != null && !jsonObj.get("compute").isJsonNull()) {
        SimulationJobRequestCompute.validateJsonElement(jsonObj.get("compute"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FailedCreateSimulationJobRequestRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FailedCreateSimulationJobRequestRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FailedCreateSimulationJobRequestRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FailedCreateSimulationJobRequestRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<FailedCreateSimulationJobRequestRequest>() {
           @Override
           public void write(JsonWriter out, FailedCreateSimulationJobRequestRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FailedCreateSimulationJobRequestRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FailedCreateSimulationJobRequestRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FailedCreateSimulationJobRequestRequest
   * @throws IOException if the JSON string is invalid with respect to FailedCreateSimulationJobRequestRequest
   */
  public static FailedCreateSimulationJobRequestRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FailedCreateSimulationJobRequestRequest.class);
  }

  /**
   * Convert an instance of FailedCreateSimulationJobRequestRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

