/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ComputeType;
import org.openapitools.client.model.SimulationJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Summary information for a simulation job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:34.495509-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SimulationJobSummary {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "lastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private SimulationJobStatus status;

  public static final String SERIALIZED_NAME_SIMULATION_APPLICATION_NAMES = "simulationApplicationNames";
  @SerializedName(SERIALIZED_NAME_SIMULATION_APPLICATION_NAMES)
  private List simulationApplicationNames;

  public static final String SERIALIZED_NAME_ROBOT_APPLICATION_NAMES = "robotApplicationNames";
  @SerializedName(SERIALIZED_NAME_ROBOT_APPLICATION_NAMES)
  private List robotApplicationNames;

  public static final String SERIALIZED_NAME_DATA_SOURCE_NAMES = "dataSourceNames";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE_NAMES)
  private List dataSourceNames;

  public static final String SERIALIZED_NAME_COMPUTE_TYPE = "computeType";
  @SerializedName(SERIALIZED_NAME_COMPUTE_TYPE)
  private ComputeType computeType;

  public SimulationJobSummary() {
  }

  public SimulationJobSummary arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public SimulationJobSummary lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public SimulationJobSummary name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public SimulationJobSummary status(SimulationJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public SimulationJobStatus getStatus() {
    return status;
  }

  public void setStatus(SimulationJobStatus status) {
    this.status = status;
  }


  public SimulationJobSummary simulationApplicationNames(List simulationApplicationNames) {
    this.simulationApplicationNames = simulationApplicationNames;
    return this;
  }

  /**
   * Get simulationApplicationNames
   * @return simulationApplicationNames
   */
  @javax.annotation.Nullable
  public List getSimulationApplicationNames() {
    return simulationApplicationNames;
  }

  public void setSimulationApplicationNames(List simulationApplicationNames) {
    this.simulationApplicationNames = simulationApplicationNames;
  }


  public SimulationJobSummary robotApplicationNames(List robotApplicationNames) {
    this.robotApplicationNames = robotApplicationNames;
    return this;
  }

  /**
   * Get robotApplicationNames
   * @return robotApplicationNames
   */
  @javax.annotation.Nullable
  public List getRobotApplicationNames() {
    return robotApplicationNames;
  }

  public void setRobotApplicationNames(List robotApplicationNames) {
    this.robotApplicationNames = robotApplicationNames;
  }


  public SimulationJobSummary dataSourceNames(List dataSourceNames) {
    this.dataSourceNames = dataSourceNames;
    return this;
  }

  /**
   * Get dataSourceNames
   * @return dataSourceNames
   */
  @javax.annotation.Nullable
  public List getDataSourceNames() {
    return dataSourceNames;
  }

  public void setDataSourceNames(List dataSourceNames) {
    this.dataSourceNames = dataSourceNames;
  }


  public SimulationJobSummary computeType(ComputeType computeType) {
    this.computeType = computeType;
    return this;
  }

  /**
   * Get computeType
   * @return computeType
   */
  @javax.annotation.Nullable
  public ComputeType getComputeType() {
    return computeType;
  }

  public void setComputeType(ComputeType computeType) {
    this.computeType = computeType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimulationJobSummary simulationJobSummary = (SimulationJobSummary) o;
    return Objects.equals(this.arn, simulationJobSummary.arn) &&
        Objects.equals(this.lastUpdatedAt, simulationJobSummary.lastUpdatedAt) &&
        Objects.equals(this.name, simulationJobSummary.name) &&
        Objects.equals(this.status, simulationJobSummary.status) &&
        Objects.equals(this.simulationApplicationNames, simulationJobSummary.simulationApplicationNames) &&
        Objects.equals(this.robotApplicationNames, simulationJobSummary.robotApplicationNames) &&
        Objects.equals(this.dataSourceNames, simulationJobSummary.dataSourceNames) &&
        Objects.equals(this.computeType, simulationJobSummary.computeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, lastUpdatedAt, name, status, simulationApplicationNames, robotApplicationNames, dataSourceNames, computeType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimulationJobSummary {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    simulationApplicationNames: ").append(toIndentedString(simulationApplicationNames)).append("\n");
    sb.append("    robotApplicationNames: ").append(toIndentedString(robotApplicationNames)).append("\n");
    sb.append("    dataSourceNames: ").append(toIndentedString(dataSourceNames)).append("\n");
    sb.append("    computeType: ").append(toIndentedString(computeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("lastUpdatedAt");
    openapiFields.add("name");
    openapiFields.add("status");
    openapiFields.add("simulationApplicationNames");
    openapiFields.add("robotApplicationNames");
    openapiFields.add("dataSourceNames");
    openapiFields.add("computeType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SimulationJobSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SimulationJobSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SimulationJobSummary is not found in the empty JSON string", SimulationJobSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SimulationJobSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SimulationJobSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `lastUpdatedAt`
      if (jsonObj.get("lastUpdatedAt") != null && !jsonObj.get("lastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedAt"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        SimulationJobStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `simulationApplicationNames`
      if (jsonObj.get("simulationApplicationNames") != null && !jsonObj.get("simulationApplicationNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("simulationApplicationNames"));
      }
      // validate the optional field `robotApplicationNames`
      if (jsonObj.get("robotApplicationNames") != null && !jsonObj.get("robotApplicationNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("robotApplicationNames"));
      }
      // validate the optional field `dataSourceNames`
      if (jsonObj.get("dataSourceNames") != null && !jsonObj.get("dataSourceNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("dataSourceNames"));
      }
      // validate the optional field `computeType`
      if (jsonObj.get("computeType") != null && !jsonObj.get("computeType").isJsonNull()) {
        ComputeType.validateJsonElement(jsonObj.get("computeType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SimulationJobSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SimulationJobSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SimulationJobSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SimulationJobSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<SimulationJobSummary>() {
           @Override
           public void write(JsonWriter out, SimulationJobSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SimulationJobSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SimulationJobSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SimulationJobSummary
   * @throws IOException if the JSON string is invalid with respect to SimulationJobSummary
   */
  public static SimulationJobSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SimulationJobSummary.class);
  }

  /**
   * Convert an instance of SimulationJobSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

