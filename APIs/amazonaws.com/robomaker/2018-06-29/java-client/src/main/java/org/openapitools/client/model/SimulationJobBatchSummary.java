/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.SimulationJobBatchStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a simulation job batch.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:34.495509-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SimulationJobBatchSummary {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "lastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private SimulationJobBatchStatus status;

  public static final String SERIALIZED_NAME_FAILED_REQUEST_COUNT = "failedRequestCount";
  @SerializedName(SERIALIZED_NAME_FAILED_REQUEST_COUNT)
  private Integer failedRequestCount;

  public static final String SERIALIZED_NAME_PENDING_REQUEST_COUNT = "pendingRequestCount";
  @SerializedName(SERIALIZED_NAME_PENDING_REQUEST_COUNT)
  private Integer pendingRequestCount;

  public static final String SERIALIZED_NAME_CREATED_REQUEST_COUNT = "createdRequestCount";
  @SerializedName(SERIALIZED_NAME_CREATED_REQUEST_COUNT)
  private Integer createdRequestCount;

  public SimulationJobBatchSummary() {
  }

  public SimulationJobBatchSummary arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public SimulationJobBatchSummary lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public SimulationJobBatchSummary createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public SimulationJobBatchSummary status(SimulationJobBatchStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public SimulationJobBatchStatus getStatus() {
    return status;
  }

  public void setStatus(SimulationJobBatchStatus status) {
    this.status = status;
  }


  public SimulationJobBatchSummary failedRequestCount(Integer failedRequestCount) {
    this.failedRequestCount = failedRequestCount;
    return this;
  }

  /**
   * Get failedRequestCount
   * @return failedRequestCount
   */
  @javax.annotation.Nullable
  public Integer getFailedRequestCount() {
    return failedRequestCount;
  }

  public void setFailedRequestCount(Integer failedRequestCount) {
    this.failedRequestCount = failedRequestCount;
  }


  public SimulationJobBatchSummary pendingRequestCount(Integer pendingRequestCount) {
    this.pendingRequestCount = pendingRequestCount;
    return this;
  }

  /**
   * Get pendingRequestCount
   * @return pendingRequestCount
   */
  @javax.annotation.Nullable
  public Integer getPendingRequestCount() {
    return pendingRequestCount;
  }

  public void setPendingRequestCount(Integer pendingRequestCount) {
    this.pendingRequestCount = pendingRequestCount;
  }


  public SimulationJobBatchSummary createdRequestCount(Integer createdRequestCount) {
    this.createdRequestCount = createdRequestCount;
    return this;
  }

  /**
   * Get createdRequestCount
   * @return createdRequestCount
   */
  @javax.annotation.Nullable
  public Integer getCreatedRequestCount() {
    return createdRequestCount;
  }

  public void setCreatedRequestCount(Integer createdRequestCount) {
    this.createdRequestCount = createdRequestCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimulationJobBatchSummary simulationJobBatchSummary = (SimulationJobBatchSummary) o;
    return Objects.equals(this.arn, simulationJobBatchSummary.arn) &&
        Objects.equals(this.lastUpdatedAt, simulationJobBatchSummary.lastUpdatedAt) &&
        Objects.equals(this.createdAt, simulationJobBatchSummary.createdAt) &&
        Objects.equals(this.status, simulationJobBatchSummary.status) &&
        Objects.equals(this.failedRequestCount, simulationJobBatchSummary.failedRequestCount) &&
        Objects.equals(this.pendingRequestCount, simulationJobBatchSummary.pendingRequestCount) &&
        Objects.equals(this.createdRequestCount, simulationJobBatchSummary.createdRequestCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, lastUpdatedAt, createdAt, status, failedRequestCount, pendingRequestCount, createdRequestCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimulationJobBatchSummary {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    failedRequestCount: ").append(toIndentedString(failedRequestCount)).append("\n");
    sb.append("    pendingRequestCount: ").append(toIndentedString(pendingRequestCount)).append("\n");
    sb.append("    createdRequestCount: ").append(toIndentedString(createdRequestCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("lastUpdatedAt");
    openapiFields.add("createdAt");
    openapiFields.add("status");
    openapiFields.add("failedRequestCount");
    openapiFields.add("pendingRequestCount");
    openapiFields.add("createdRequestCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SimulationJobBatchSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SimulationJobBatchSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SimulationJobBatchSummary is not found in the empty JSON string", SimulationJobBatchSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SimulationJobBatchSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SimulationJobBatchSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `lastUpdatedAt`
      if (jsonObj.get("lastUpdatedAt") != null && !jsonObj.get("lastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedAt"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        SimulationJobBatchStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `failedRequestCount`
      if (jsonObj.get("failedRequestCount") != null && !jsonObj.get("failedRequestCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("failedRequestCount"));
      }
      // validate the optional field `pendingRequestCount`
      if (jsonObj.get("pendingRequestCount") != null && !jsonObj.get("pendingRequestCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("pendingRequestCount"));
      }
      // validate the optional field `createdRequestCount`
      if (jsonObj.get("createdRequestCount") != null && !jsonObj.get("createdRequestCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("createdRequestCount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SimulationJobBatchSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SimulationJobBatchSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SimulationJobBatchSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SimulationJobBatchSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<SimulationJobBatchSummary>() {
           @Override
           public void write(JsonWriter out, SimulationJobBatchSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SimulationJobBatchSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SimulationJobBatchSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SimulationJobBatchSummary
   * @throws IOException if the JSON string is invalid with respect to SimulationJobBatchSummary
   */
  public static SimulationJobBatchSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SimulationJobBatchSummary.class);
  }

  /**
   * Convert an instance of SimulationJobBatchSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

