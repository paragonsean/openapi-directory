/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets DeploymentJobErrorCode
 */
@JsonAdapter(DeploymentJobErrorCode.Adapter.class)
public enum DeploymentJobErrorCode {
  
  RESOURCE_NOT_FOUND("ResourceNotFound"),
  
  ENVIRONMENT_SETUP_ERROR("EnvironmentSetupError"),
  
  ETAG_MISMATCH("EtagMismatch"),
  
  FAILURE_THRESHOLD_BREACHED("FailureThresholdBreached"),
  
  ROBOT_DEPLOYMENT_ABORTED("RobotDeploymentAborted"),
  
  ROBOT_DEPLOYMENT_NO_RESPONSE("RobotDeploymentNoResponse"),
  
  ROBOT_AGENT_CONNECTION_TIMEOUT("RobotAgentConnectionTimeout"),
  
  GREENGRASS_DEPLOYMENT_FAILED("GreengrassDeploymentFailed"),
  
  INVALID_GREENGRASS_GROUP("InvalidGreengrassGroup"),
  
  MISSING_ROBOT_ARCHITECTURE("MissingRobotArchitecture"),
  
  MISSING_ROBOT_APPLICATION_ARCHITECTURE("MissingRobotApplicationArchitecture"),
  
  MISSING_ROBOT_DEPLOYMENT_RESOURCE("MissingRobotDeploymentResource"),
  
  GREENGRASS_GROUP_VERSION_DOES_NOT_EXIST("GreengrassGroupVersionDoesNotExist"),
  
  LAMBDA_DELETED("LambdaDeleted"),
  
  EXTRACTING_BUNDLE_FAILURE("ExtractingBundleFailure"),
  
  PRE_LAUNCH_FILE_FAILURE("PreLaunchFileFailure"),
  
  POST_LAUNCH_FILE_FAILURE("PostLaunchFileFailure"),
  
  BAD_PERMISSION_ERROR("BadPermissionError"),
  
  DOWNLOAD_CONDITION_FAILED("DownloadConditionFailed"),
  
  BAD_LAMBDA_ASSOCIATED("BadLambdaAssociated"),
  
  INTERNAL_SERVER_ERROR("InternalServerError"),
  
  ROBOT_APPLICATION_DOES_NOT_EXIST("RobotApplicationDoesNotExist"),
  
  DEPLOYMENT_FLEET_DOES_NOT_EXIST("DeploymentFleetDoesNotExist"),
  
  FLEET_DEPLOYMENT_TIMEOUT("FleetDeploymentTimeout");

  private String value;

  DeploymentJobErrorCode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DeploymentJobErrorCode fromValue(String value) {
    for (DeploymentJobErrorCode b : DeploymentJobErrorCode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DeploymentJobErrorCode> {
    @Override
    public void write(final JsonWriter jsonWriter, final DeploymentJobErrorCode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DeploymentJobErrorCode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DeploymentJobErrorCode.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    DeploymentJobErrorCode.fromValue(value);
  }
}

