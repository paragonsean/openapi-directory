/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.RobotDeploymentStep;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the progress of a deployment job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:34.495509-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProgressDetail {
  public static final String SERIALIZED_NAME_CURRENT_PROGRESS = "currentProgress";
  @SerializedName(SERIALIZED_NAME_CURRENT_PROGRESS)
  private RobotDeploymentStep currentProgress;

  public static final String SERIALIZED_NAME_PERCENT_DONE = "percentDone";
  @SerializedName(SERIALIZED_NAME_PERCENT_DONE)
  private Float percentDone;

  public static final String SERIALIZED_NAME_ESTIMATED_TIME_REMAINING_SECONDS = "estimatedTimeRemainingSeconds";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_TIME_REMAINING_SECONDS)
  private Integer estimatedTimeRemainingSeconds;

  public static final String SERIALIZED_NAME_TARGET_RESOURCE = "targetResource";
  @SerializedName(SERIALIZED_NAME_TARGET_RESOURCE)
  private String targetResource;

  public ProgressDetail() {
  }

  public ProgressDetail currentProgress(RobotDeploymentStep currentProgress) {
    this.currentProgress = currentProgress;
    return this;
  }

  /**
   * Get currentProgress
   * @return currentProgress
   */
  @javax.annotation.Nullable
  public RobotDeploymentStep getCurrentProgress() {
    return currentProgress;
  }

  public void setCurrentProgress(RobotDeploymentStep currentProgress) {
    this.currentProgress = currentProgress;
  }


  public ProgressDetail percentDone(Float percentDone) {
    this.percentDone = percentDone;
    return this;
  }

  /**
   * Get percentDone
   * @return percentDone
   */
  @javax.annotation.Nullable
  public Float getPercentDone() {
    return percentDone;
  }

  public void setPercentDone(Float percentDone) {
    this.percentDone = percentDone;
  }


  public ProgressDetail estimatedTimeRemainingSeconds(Integer estimatedTimeRemainingSeconds) {
    this.estimatedTimeRemainingSeconds = estimatedTimeRemainingSeconds;
    return this;
  }

  /**
   * Get estimatedTimeRemainingSeconds
   * @return estimatedTimeRemainingSeconds
   */
  @javax.annotation.Nullable
  public Integer getEstimatedTimeRemainingSeconds() {
    return estimatedTimeRemainingSeconds;
  }

  public void setEstimatedTimeRemainingSeconds(Integer estimatedTimeRemainingSeconds) {
    this.estimatedTimeRemainingSeconds = estimatedTimeRemainingSeconds;
  }


  public ProgressDetail targetResource(String targetResource) {
    this.targetResource = targetResource;
    return this;
  }

  /**
   * Get targetResource
   * @return targetResource
   */
  @javax.annotation.Nullable
  public String getTargetResource() {
    return targetResource;
  }

  public void setTargetResource(String targetResource) {
    this.targetResource = targetResource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProgressDetail progressDetail = (ProgressDetail) o;
    return Objects.equals(this.currentProgress, progressDetail.currentProgress) &&
        Objects.equals(this.percentDone, progressDetail.percentDone) &&
        Objects.equals(this.estimatedTimeRemainingSeconds, progressDetail.estimatedTimeRemainingSeconds) &&
        Objects.equals(this.targetResource, progressDetail.targetResource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentProgress, percentDone, estimatedTimeRemainingSeconds, targetResource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProgressDetail {\n");
    sb.append("    currentProgress: ").append(toIndentedString(currentProgress)).append("\n");
    sb.append("    percentDone: ").append(toIndentedString(percentDone)).append("\n");
    sb.append("    estimatedTimeRemainingSeconds: ").append(toIndentedString(estimatedTimeRemainingSeconds)).append("\n");
    sb.append("    targetResource: ").append(toIndentedString(targetResource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("currentProgress");
    openapiFields.add("percentDone");
    openapiFields.add("estimatedTimeRemainingSeconds");
    openapiFields.add("targetResource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProgressDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProgressDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProgressDetail is not found in the empty JSON string", ProgressDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProgressDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProgressDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `currentProgress`
      if (jsonObj.get("currentProgress") != null && !jsonObj.get("currentProgress").isJsonNull()) {
        RobotDeploymentStep.validateJsonElement(jsonObj.get("currentProgress"));
      }
      // validate the optional field `percentDone`
      if (jsonObj.get("percentDone") != null && !jsonObj.get("percentDone").isJsonNull()) {
        Float.validateJsonElement(jsonObj.get("percentDone"));
      }
      // validate the optional field `estimatedTimeRemainingSeconds`
      if (jsonObj.get("estimatedTimeRemainingSeconds") != null && !jsonObj.get("estimatedTimeRemainingSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("estimatedTimeRemainingSeconds"));
      }
      // validate the optional field `targetResource`
      if (jsonObj.get("targetResource") != null && !jsonObj.get("targetResource").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("targetResource"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProgressDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProgressDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProgressDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProgressDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<ProgressDetail>() {
           @Override
           public void write(JsonWriter out, ProgressDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProgressDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProgressDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProgressDetail
   * @throws IOException if the JSON string is invalid with respect to ProgressDetail
   */
  public static ProgressDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProgressDetail.class);
  }

  /**
   * Convert an instance of ProgressDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

