/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateDeploymentJobResponseDeploymentConfig;
import org.openapitools.client.model.DeploymentJobErrorCode;
import org.openapitools.client.model.DeploymentStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a deployment job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:34.495509-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeploymentJob {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_FLEET = "fleet";
  @SerializedName(SERIALIZED_NAME_FLEET)
  private String fleet;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private DeploymentStatus status;

  public static final String SERIALIZED_NAME_DEPLOYMENT_APPLICATION_CONFIGS = "deploymentApplicationConfigs";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_APPLICATION_CONFIGS)
  private List deploymentApplicationConfigs;

  public static final String SERIALIZED_NAME_DEPLOYMENT_CONFIG = "deploymentConfig";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_CONFIG)
  private CreateDeploymentJobResponseDeploymentConfig deploymentConfig;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "failureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_FAILURE_CODE = "failureCode";
  @SerializedName(SERIALIZED_NAME_FAILURE_CODE)
  private DeploymentJobErrorCode failureCode;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public DeploymentJob() {
  }

  public DeploymentJob arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public DeploymentJob fleet(String fleet) {
    this.fleet = fleet;
    return this;
  }

  /**
   * Get fleet
   * @return fleet
   */
  @javax.annotation.Nullable
  public String getFleet() {
    return fleet;
  }

  public void setFleet(String fleet) {
    this.fleet = fleet;
  }


  public DeploymentJob status(DeploymentStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public DeploymentStatus getStatus() {
    return status;
  }

  public void setStatus(DeploymentStatus status) {
    this.status = status;
  }


  public DeploymentJob deploymentApplicationConfigs(List deploymentApplicationConfigs) {
    this.deploymentApplicationConfigs = deploymentApplicationConfigs;
    return this;
  }

  /**
   * Get deploymentApplicationConfigs
   * @return deploymentApplicationConfigs
   */
  @javax.annotation.Nullable
  public List getDeploymentApplicationConfigs() {
    return deploymentApplicationConfigs;
  }

  public void setDeploymentApplicationConfigs(List deploymentApplicationConfigs) {
    this.deploymentApplicationConfigs = deploymentApplicationConfigs;
  }


  public DeploymentJob deploymentConfig(CreateDeploymentJobResponseDeploymentConfig deploymentConfig) {
    this.deploymentConfig = deploymentConfig;
    return this;
  }

  /**
   * Get deploymentConfig
   * @return deploymentConfig
   */
  @javax.annotation.Nullable
  public CreateDeploymentJobResponseDeploymentConfig getDeploymentConfig() {
    return deploymentConfig;
  }

  public void setDeploymentConfig(CreateDeploymentJobResponseDeploymentConfig deploymentConfig) {
    this.deploymentConfig = deploymentConfig;
  }


  public DeploymentJob failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DeploymentJob failureCode(DeploymentJobErrorCode failureCode) {
    this.failureCode = failureCode;
    return this;
  }

  /**
   * Get failureCode
   * @return failureCode
   */
  @javax.annotation.Nullable
  public DeploymentJobErrorCode getFailureCode() {
    return failureCode;
  }

  public void setFailureCode(DeploymentJobErrorCode failureCode) {
    this.failureCode = failureCode;
  }


  public DeploymentJob createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeploymentJob deploymentJob = (DeploymentJob) o;
    return Objects.equals(this.arn, deploymentJob.arn) &&
        Objects.equals(this.fleet, deploymentJob.fleet) &&
        Objects.equals(this.status, deploymentJob.status) &&
        Objects.equals(this.deploymentApplicationConfigs, deploymentJob.deploymentApplicationConfigs) &&
        Objects.equals(this.deploymentConfig, deploymentJob.deploymentConfig) &&
        Objects.equals(this.failureReason, deploymentJob.failureReason) &&
        Objects.equals(this.failureCode, deploymentJob.failureCode) &&
        Objects.equals(this.createdAt, deploymentJob.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, fleet, status, deploymentApplicationConfigs, deploymentConfig, failureReason, failureCode, createdAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeploymentJob {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    fleet: ").append(toIndentedString(fleet)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    deploymentApplicationConfigs: ").append(toIndentedString(deploymentApplicationConfigs)).append("\n");
    sb.append("    deploymentConfig: ").append(toIndentedString(deploymentConfig)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    failureCode: ").append(toIndentedString(failureCode)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("fleet");
    openapiFields.add("status");
    openapiFields.add("deploymentApplicationConfigs");
    openapiFields.add("deploymentConfig");
    openapiFields.add("failureReason");
    openapiFields.add("failureCode");
    openapiFields.add("createdAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeploymentJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeploymentJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeploymentJob is not found in the empty JSON string", DeploymentJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeploymentJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeploymentJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `fleet`
      if (jsonObj.get("fleet") != null && !jsonObj.get("fleet").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("fleet"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        DeploymentStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `deploymentApplicationConfigs`
      if (jsonObj.get("deploymentApplicationConfigs") != null && !jsonObj.get("deploymentApplicationConfigs").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("deploymentApplicationConfigs"));
      }
      // validate the optional field `deploymentConfig`
      if (jsonObj.get("deploymentConfig") != null && !jsonObj.get("deploymentConfig").isJsonNull()) {
        CreateDeploymentJobResponseDeploymentConfig.validateJsonElement(jsonObj.get("deploymentConfig"));
      }
      // validate the optional field `failureReason`
      if (jsonObj.get("failureReason") != null && !jsonObj.get("failureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("failureReason"));
      }
      // validate the optional field `failureCode`
      if (jsonObj.get("failureCode") != null && !jsonObj.get("failureCode").isJsonNull()) {
        DeploymentJobErrorCode.validateJsonElement(jsonObj.get("failureCode"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeploymentJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeploymentJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeploymentJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeploymentJob.class));

       return (TypeAdapter<T>) new TypeAdapter<DeploymentJob>() {
           @Override
           public void write(JsonWriter out, DeploymentJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeploymentJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeploymentJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeploymentJob
   * @throws IOException if the JSON string is invalid with respect to DeploymentJob
   */
  public static DeploymentJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeploymentJob.class);
  }

  /**
   * Convert an instance of DeploymentJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

