/*
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateDeploymentJobRequestDeploymentConfigDownloadConditionFile;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateDeploymentJobRequestDeploymentConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:34.495509-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateDeploymentJobRequestDeploymentConfig {
  public static final String SERIALIZED_NAME_CONCURRENT_DEPLOYMENT_PERCENTAGE = "concurrentDeploymentPercentage";
  @SerializedName(SERIALIZED_NAME_CONCURRENT_DEPLOYMENT_PERCENTAGE)
  private Integer concurrentDeploymentPercentage;

  public static final String SERIALIZED_NAME_FAILURE_THRESHOLD_PERCENTAGE = "failureThresholdPercentage";
  @SerializedName(SERIALIZED_NAME_FAILURE_THRESHOLD_PERCENTAGE)
  private Integer failureThresholdPercentage;

  public static final String SERIALIZED_NAME_ROBOT_DEPLOYMENT_TIMEOUT_IN_SECONDS = "robotDeploymentTimeoutInSeconds";
  @SerializedName(SERIALIZED_NAME_ROBOT_DEPLOYMENT_TIMEOUT_IN_SECONDS)
  private Integer robotDeploymentTimeoutInSeconds;

  public static final String SERIALIZED_NAME_DOWNLOAD_CONDITION_FILE = "downloadConditionFile";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_CONDITION_FILE)
  private CreateDeploymentJobRequestDeploymentConfigDownloadConditionFile downloadConditionFile;

  public CreateDeploymentJobRequestDeploymentConfig() {
  }

  public CreateDeploymentJobRequestDeploymentConfig concurrentDeploymentPercentage(Integer concurrentDeploymentPercentage) {
    this.concurrentDeploymentPercentage = concurrentDeploymentPercentage;
    return this;
  }

  /**
   * Get concurrentDeploymentPercentage
   * @return concurrentDeploymentPercentage
   */
  @javax.annotation.Nullable
  public Integer getConcurrentDeploymentPercentage() {
    return concurrentDeploymentPercentage;
  }

  public void setConcurrentDeploymentPercentage(Integer concurrentDeploymentPercentage) {
    this.concurrentDeploymentPercentage = concurrentDeploymentPercentage;
  }


  public CreateDeploymentJobRequestDeploymentConfig failureThresholdPercentage(Integer failureThresholdPercentage) {
    this.failureThresholdPercentage = failureThresholdPercentage;
    return this;
  }

  /**
   * Get failureThresholdPercentage
   * @return failureThresholdPercentage
   */
  @javax.annotation.Nullable
  public Integer getFailureThresholdPercentage() {
    return failureThresholdPercentage;
  }

  public void setFailureThresholdPercentage(Integer failureThresholdPercentage) {
    this.failureThresholdPercentage = failureThresholdPercentage;
  }


  public CreateDeploymentJobRequestDeploymentConfig robotDeploymentTimeoutInSeconds(Integer robotDeploymentTimeoutInSeconds) {
    this.robotDeploymentTimeoutInSeconds = robotDeploymentTimeoutInSeconds;
    return this;
  }

  /**
   * Get robotDeploymentTimeoutInSeconds
   * @return robotDeploymentTimeoutInSeconds
   */
  @javax.annotation.Nullable
  public Integer getRobotDeploymentTimeoutInSeconds() {
    return robotDeploymentTimeoutInSeconds;
  }

  public void setRobotDeploymentTimeoutInSeconds(Integer robotDeploymentTimeoutInSeconds) {
    this.robotDeploymentTimeoutInSeconds = robotDeploymentTimeoutInSeconds;
  }


  public CreateDeploymentJobRequestDeploymentConfig downloadConditionFile(CreateDeploymentJobRequestDeploymentConfigDownloadConditionFile downloadConditionFile) {
    this.downloadConditionFile = downloadConditionFile;
    return this;
  }

  /**
   * Get downloadConditionFile
   * @return downloadConditionFile
   */
  @javax.annotation.Nullable
  public CreateDeploymentJobRequestDeploymentConfigDownloadConditionFile getDownloadConditionFile() {
    return downloadConditionFile;
  }

  public void setDownloadConditionFile(CreateDeploymentJobRequestDeploymentConfigDownloadConditionFile downloadConditionFile) {
    this.downloadConditionFile = downloadConditionFile;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDeploymentJobRequestDeploymentConfig createDeploymentJobRequestDeploymentConfig = (CreateDeploymentJobRequestDeploymentConfig) o;
    return Objects.equals(this.concurrentDeploymentPercentage, createDeploymentJobRequestDeploymentConfig.concurrentDeploymentPercentage) &&
        Objects.equals(this.failureThresholdPercentage, createDeploymentJobRequestDeploymentConfig.failureThresholdPercentage) &&
        Objects.equals(this.robotDeploymentTimeoutInSeconds, createDeploymentJobRequestDeploymentConfig.robotDeploymentTimeoutInSeconds) &&
        Objects.equals(this.downloadConditionFile, createDeploymentJobRequestDeploymentConfig.downloadConditionFile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(concurrentDeploymentPercentage, failureThresholdPercentage, robotDeploymentTimeoutInSeconds, downloadConditionFile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDeploymentJobRequestDeploymentConfig {\n");
    sb.append("    concurrentDeploymentPercentage: ").append(toIndentedString(concurrentDeploymentPercentage)).append("\n");
    sb.append("    failureThresholdPercentage: ").append(toIndentedString(failureThresholdPercentage)).append("\n");
    sb.append("    robotDeploymentTimeoutInSeconds: ").append(toIndentedString(robotDeploymentTimeoutInSeconds)).append("\n");
    sb.append("    downloadConditionFile: ").append(toIndentedString(downloadConditionFile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("concurrentDeploymentPercentage");
    openapiFields.add("failureThresholdPercentage");
    openapiFields.add("robotDeploymentTimeoutInSeconds");
    openapiFields.add("downloadConditionFile");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateDeploymentJobRequestDeploymentConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateDeploymentJobRequestDeploymentConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateDeploymentJobRequestDeploymentConfig is not found in the empty JSON string", CreateDeploymentJobRequestDeploymentConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateDeploymentJobRequestDeploymentConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateDeploymentJobRequestDeploymentConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `concurrentDeploymentPercentage`
      if (jsonObj.get("concurrentDeploymentPercentage") != null && !jsonObj.get("concurrentDeploymentPercentage").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("concurrentDeploymentPercentage"));
      }
      // validate the optional field `failureThresholdPercentage`
      if (jsonObj.get("failureThresholdPercentage") != null && !jsonObj.get("failureThresholdPercentage").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("failureThresholdPercentage"));
      }
      // validate the optional field `robotDeploymentTimeoutInSeconds`
      if (jsonObj.get("robotDeploymentTimeoutInSeconds") != null && !jsonObj.get("robotDeploymentTimeoutInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("robotDeploymentTimeoutInSeconds"));
      }
      // validate the optional field `downloadConditionFile`
      if (jsonObj.get("downloadConditionFile") != null && !jsonObj.get("downloadConditionFile").isJsonNull()) {
        CreateDeploymentJobRequestDeploymentConfigDownloadConditionFile.validateJsonElement(jsonObj.get("downloadConditionFile"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateDeploymentJobRequestDeploymentConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateDeploymentJobRequestDeploymentConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateDeploymentJobRequestDeploymentConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateDeploymentJobRequestDeploymentConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateDeploymentJobRequestDeploymentConfig>() {
           @Override
           public void write(JsonWriter out, CreateDeploymentJobRequestDeploymentConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateDeploymentJobRequestDeploymentConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateDeploymentJobRequestDeploymentConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateDeploymentJobRequestDeploymentConfig
   * @throws IOException if the JSON string is invalid with respect to CreateDeploymentJobRequestDeploymentConfig
   */
  public static CreateDeploymentJobRequestDeploymentConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateDeploymentJobRequestDeploymentConfig.class);
  }

  /**
   * Convert an instance of CreateDeploymentJobRequestDeploymentConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

