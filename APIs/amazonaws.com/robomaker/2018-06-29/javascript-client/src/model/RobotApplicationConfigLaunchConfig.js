/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LaunchConfig from './LaunchConfig';
import LaunchConfigPortForwardingConfig from './LaunchConfigPortForwardingConfig';

/**
 * The RobotApplicationConfigLaunchConfig model module.
 * @module model/RobotApplicationConfigLaunchConfig
 * @version 2018-06-29
 */
class RobotApplicationConfigLaunchConfig {
    /**
     * Constructs a new <code>RobotApplicationConfigLaunchConfig</code>.
     * @alias module:model/RobotApplicationConfigLaunchConfig
     * @implements module:model/LaunchConfig
     */
    constructor() { 
        LaunchConfig.initialize(this);
        RobotApplicationConfigLaunchConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RobotApplicationConfigLaunchConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RobotApplicationConfigLaunchConfig} obj Optional instance to populate.
     * @return {module:model/RobotApplicationConfigLaunchConfig} The populated <code>RobotApplicationConfigLaunchConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RobotApplicationConfigLaunchConfig();
            LaunchConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('packageName')) {
                obj['packageName'] = ApiClient.convertToType(data['packageName'], 'String');
            }
            if (data.hasOwnProperty('launchFile')) {
                obj['launchFile'] = ApiClient.convertToType(data['launchFile'], 'String');
            }
            if (data.hasOwnProperty('environmentVariables')) {
                obj['environmentVariables'] = ApiClient.convertToType(data['environmentVariables'], Object);
            }
            if (data.hasOwnProperty('portForwardingConfig')) {
                obj['portForwardingConfig'] = LaunchConfigPortForwardingConfig.constructFromObject(data['portForwardingConfig']);
            }
            if (data.hasOwnProperty('streamUI')) {
                obj['streamUI'] = ApiClient.convertToType(data['streamUI'], 'Boolean');
            }
            if (data.hasOwnProperty('command')) {
                obj['command'] = ApiClient.convertToType(data['command'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RobotApplicationConfigLaunchConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RobotApplicationConfigLaunchConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `packageName`
        if (data['packageName']) { // data not null
          String.validateJSON(data['packageName']);
        }
        // validate the optional field `launchFile`
        if (data['launchFile']) { // data not null
          String.validateJSON(data['launchFile']);
        }
        // validate the optional field `environmentVariables`
        if (data['environmentVariables']) { // data not null
          Object.validateJSON(data['environmentVariables']);
        }
        // validate the optional field `portForwardingConfig`
        if (data['portForwardingConfig']) { // data not null
          LaunchConfigPortForwardingConfig.validateJSON(data['portForwardingConfig']);
        }
        // validate the optional field `streamUI`
        if (data['streamUI']) { // data not null
          Boolean.validateJSON(data['streamUI']);
        }
        // validate the optional field `command`
        if (data['command']) { // data not null
          Array.validateJSON(data['command']);
        }

        return true;
    }


}



/**
 * @member {String} packageName
 */
RobotApplicationConfigLaunchConfig.prototype['packageName'] = undefined;

/**
 * @member {String} launchFile
 */
RobotApplicationConfigLaunchConfig.prototype['launchFile'] = undefined;

/**
 * @member {Object} environmentVariables
 */
RobotApplicationConfigLaunchConfig.prototype['environmentVariables'] = undefined;

/**
 * @member {module:model/LaunchConfigPortForwardingConfig} portForwardingConfig
 */
RobotApplicationConfigLaunchConfig.prototype['portForwardingConfig'] = undefined;

/**
 * @member {Boolean} streamUI
 */
RobotApplicationConfigLaunchConfig.prototype['streamUI'] = undefined;

/**
 * @member {Array} command
 */
RobotApplicationConfigLaunchConfig.prototype['command'] = undefined;


// Implement LaunchConfig interface:
/**
 * @member {String} packageName
 */
LaunchConfig.prototype['packageName'] = undefined;
/**
 * @member {String} launchFile
 */
LaunchConfig.prototype['launchFile'] = undefined;
/**
 * @member {Object} environmentVariables
 */
LaunchConfig.prototype['environmentVariables'] = undefined;
/**
 * @member {module:model/LaunchConfigPortForwardingConfig} portForwardingConfig
 */
LaunchConfig.prototype['portForwardingConfig'] = undefined;
/**
 * @member {Boolean} streamUI
 */
LaunchConfig.prototype['streamUI'] = undefined;
/**
 * @member {Array} command
 */
LaunchConfig.prototype['command'] = undefined;




export default RobotApplicationConfigLaunchConfig;

