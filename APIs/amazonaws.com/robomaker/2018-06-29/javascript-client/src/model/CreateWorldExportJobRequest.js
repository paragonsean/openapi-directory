/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateSimulationJobRequestOutputLocation from './CreateSimulationJobRequestOutputLocation';

/**
 * The CreateWorldExportJobRequest model module.
 * @module model/CreateWorldExportJobRequest
 * @version 2018-06-29
 */
class CreateWorldExportJobRequest {
    /**
     * Constructs a new <code>CreateWorldExportJobRequest</code>.
     * @alias module:model/CreateWorldExportJobRequest
     * @param worlds {Array.<String>} A list of Amazon Resource Names (arns) that correspond to worlds to export.
     * @param outputLocation {module:model/CreateSimulationJobRequestOutputLocation} 
     * @param iamRole {String} The IAM role that the world export process uses to access the Amazon S3 bucket and put the export.
     */
    constructor(worlds, outputLocation, iamRole) { 
        
        CreateWorldExportJobRequest.initialize(this, worlds, outputLocation, iamRole);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, worlds, outputLocation, iamRole) { 
        obj['worlds'] = worlds;
        obj['outputLocation'] = outputLocation;
        obj['iamRole'] = iamRole;
    }

    /**
     * Constructs a <code>CreateWorldExportJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateWorldExportJobRequest} obj Optional instance to populate.
     * @return {module:model/CreateWorldExportJobRequest} The populated <code>CreateWorldExportJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateWorldExportJobRequest();

            if (data.hasOwnProperty('clientRequestToken')) {
                obj['clientRequestToken'] = ApiClient.convertToType(data['clientRequestToken'], 'String');
            }
            if (data.hasOwnProperty('worlds')) {
                obj['worlds'] = ApiClient.convertToType(data['worlds'], ['String']);
            }
            if (data.hasOwnProperty('outputLocation')) {
                obj['outputLocation'] = CreateSimulationJobRequestOutputLocation.constructFromObject(data['outputLocation']);
            }
            if (data.hasOwnProperty('iamRole')) {
                obj['iamRole'] = ApiClient.convertToType(data['iamRole'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateWorldExportJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateWorldExportJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateWorldExportJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clientRequestToken'] && !(typeof data['clientRequestToken'] === 'string' || data['clientRequestToken'] instanceof String)) {
            throw new Error("Expected the field `clientRequestToken` to be a primitive type in the JSON string but got " + data['clientRequestToken']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['worlds'])) {
            throw new Error("Expected the field `worlds` to be an array in the JSON data but got " + data['worlds']);
        }
        // validate the optional field `outputLocation`
        if (data['outputLocation']) { // data not null
          CreateSimulationJobRequestOutputLocation.validateJSON(data['outputLocation']);
        }
        // ensure the json data is a string
        if (data['iamRole'] && !(typeof data['iamRole'] === 'string' || data['iamRole'] instanceof String)) {
            throw new Error("Expected the field `iamRole` to be a primitive type in the JSON string but got " + data['iamRole']);
        }

        return true;
    }


}

CreateWorldExportJobRequest.RequiredProperties = ["worlds", "outputLocation", "iamRole"];

/**
 * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
 * @member {String} clientRequestToken
 */
CreateWorldExportJobRequest.prototype['clientRequestToken'] = undefined;

/**
 * A list of Amazon Resource Names (arns) that correspond to worlds to export.
 * @member {Array.<String>} worlds
 */
CreateWorldExportJobRequest.prototype['worlds'] = undefined;

/**
 * @member {module:model/CreateSimulationJobRequestOutputLocation} outputLocation
 */
CreateWorldExportJobRequest.prototype['outputLocation'] = undefined;

/**
 * The IAM role that the world export process uses to access the Amazon S3 bucket and put the export.
 * @member {String} iamRole
 */
CreateWorldExportJobRequest.prototype['iamRole'] = undefined;

/**
 * A map that contains tag keys and tag values that are attached to the world export job.
 * @member {Object.<String, String>} tags
 */
CreateWorldExportJobRequest.prototype['tags'] = undefined;






export default CreateWorldExportJobRequest;

