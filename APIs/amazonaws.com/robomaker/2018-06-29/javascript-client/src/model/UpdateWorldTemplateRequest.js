/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateWorldTemplateRequestTemplateLocation from './CreateWorldTemplateRequestTemplateLocation';

/**
 * The UpdateWorldTemplateRequest model module.
 * @module model/UpdateWorldTemplateRequest
 * @version 2018-06-29
 */
class UpdateWorldTemplateRequest {
    /**
     * Constructs a new <code>UpdateWorldTemplateRequest</code>.
     * @alias module:model/UpdateWorldTemplateRequest
     * @param template {String} The Amazon Resource Name (arn) of the world template to update.
     */
    constructor(template) { 
        
        UpdateWorldTemplateRequest.initialize(this, template);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, template) { 
        obj['template'] = template;
    }

    /**
     * Constructs a <code>UpdateWorldTemplateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateWorldTemplateRequest} obj Optional instance to populate.
     * @return {module:model/UpdateWorldTemplateRequest} The populated <code>UpdateWorldTemplateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateWorldTemplateRequest();

            if (data.hasOwnProperty('template')) {
                obj['template'] = ApiClient.convertToType(data['template'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('templateBody')) {
                obj['templateBody'] = ApiClient.convertToType(data['templateBody'], 'String');
            }
            if (data.hasOwnProperty('templateLocation')) {
                obj['templateLocation'] = CreateWorldTemplateRequestTemplateLocation.constructFromObject(data['templateLocation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateWorldTemplateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateWorldTemplateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateWorldTemplateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['template'] && !(typeof data['template'] === 'string' || data['template'] instanceof String)) {
            throw new Error("Expected the field `template` to be a primitive type in the JSON string but got " + data['template']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['templateBody'] && !(typeof data['templateBody'] === 'string' || data['templateBody'] instanceof String)) {
            throw new Error("Expected the field `templateBody` to be a primitive type in the JSON string but got " + data['templateBody']);
        }
        // validate the optional field `templateLocation`
        if (data['templateLocation']) { // data not null
          CreateWorldTemplateRequestTemplateLocation.validateJSON(data['templateLocation']);
        }

        return true;
    }


}

UpdateWorldTemplateRequest.RequiredProperties = ["template"];

/**
 * The Amazon Resource Name (arn) of the world template to update.
 * @member {String} template
 */
UpdateWorldTemplateRequest.prototype['template'] = undefined;

/**
 * The name of the template.
 * @member {String} name
 */
UpdateWorldTemplateRequest.prototype['name'] = undefined;

/**
 * The world template body.
 * @member {String} templateBody
 */
UpdateWorldTemplateRequest.prototype['templateBody'] = undefined;

/**
 * @member {module:model/CreateWorldTemplateRequestTemplateLocation} templateLocation
 */
UpdateWorldTemplateRequest.prototype['templateLocation'] = undefined;






export default UpdateWorldTemplateRequest;

