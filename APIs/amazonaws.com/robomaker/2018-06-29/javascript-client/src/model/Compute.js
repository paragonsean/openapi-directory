/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ComputeType from './ComputeType';

/**
 * The Compute model module.
 * @module model/Compute
 * @version 2018-06-29
 */
class Compute {
    /**
     * Constructs a new <code>Compute</code>.
     * Compute information for the simulation job.
     * @alias module:model/Compute
     */
    constructor() { 
        
        Compute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Compute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Compute} obj Optional instance to populate.
     * @return {module:model/Compute} The populated <code>Compute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Compute();

            if (data.hasOwnProperty('simulationUnitLimit')) {
                obj['simulationUnitLimit'] = ApiClient.convertToType(data['simulationUnitLimit'], 'Number');
            }
            if (data.hasOwnProperty('computeType')) {
                obj['computeType'] = ApiClient.convertToType(data['computeType'], ComputeType);
            }
            if (data.hasOwnProperty('gpuUnitLimit')) {
                obj['gpuUnitLimit'] = ApiClient.convertToType(data['gpuUnitLimit'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Compute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Compute</code>.
     */
    static validateJSON(data) {
        // validate the optional field `simulationUnitLimit`
        if (data['simulationUnitLimit']) { // data not null
          Number.validateJSON(data['simulationUnitLimit']);
        }
        // validate the optional field `computeType`
        if (data['computeType']) { // data not null
          ComputeType.validateJSON(data['computeType']);
        }
        // validate the optional field `gpuUnitLimit`
        if (data['gpuUnitLimit']) { // data not null
          Number.validateJSON(data['gpuUnitLimit']);
        }

        return true;
    }


}



/**
 * @member {Number} simulationUnitLimit
 */
Compute.prototype['simulationUnitLimit'] = undefined;

/**
 * @member {module:model/ComputeType} computeType
 */
Compute.prototype['computeType'] = undefined;

/**
 * @member {Number} gpuUnitLimit
 */
Compute.prototype['gpuUnitLimit'] = undefined;






export default Compute;

