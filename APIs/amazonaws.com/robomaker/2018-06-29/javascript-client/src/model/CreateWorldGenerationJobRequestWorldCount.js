/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateWorldGenerationJobRequestWorldCount model module.
 * @module model/CreateWorldGenerationJobRequestWorldCount
 * @version 2018-06-29
 */
class CreateWorldGenerationJobRequestWorldCount {
    /**
     * Constructs a new <code>CreateWorldGenerationJobRequestWorldCount</code>.
     * &lt;p&gt;The number of worlds that will be created. You can configure the number of unique floorplans and the number of unique interiors for each floor plan. For example, if you want 1 world with 20 unique interiors, you set &lt;code&gt;floorplanCount &#x3D; 1&lt;/code&gt; and &lt;code&gt;interiorCountPerFloorplan &#x3D; 20&lt;/code&gt;. This will result in 20 worlds (&lt;code&gt;floorplanCount&lt;/code&gt; * &lt;code&gt;interiorCountPerFloorplan)&lt;/code&gt;. &lt;/p&gt; &lt;p&gt;If you set &lt;code&gt;floorplanCount &#x3D; 4&lt;/code&gt; and &lt;code&gt;interiorCountPerFloorplan &#x3D; 5&lt;/code&gt;, there will be 20 worlds with 5 unique floor plans. &lt;/p&gt;
     * @alias module:model/CreateWorldGenerationJobRequestWorldCount
     */
    constructor() { 
        
        CreateWorldGenerationJobRequestWorldCount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateWorldGenerationJobRequestWorldCount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateWorldGenerationJobRequestWorldCount} obj Optional instance to populate.
     * @return {module:model/CreateWorldGenerationJobRequestWorldCount} The populated <code>CreateWorldGenerationJobRequestWorldCount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateWorldGenerationJobRequestWorldCount();

            if (data.hasOwnProperty('floorplanCount')) {
                obj['floorplanCount'] = ApiClient.convertToType(data['floorplanCount'], 'Number');
            }
            if (data.hasOwnProperty('interiorCountPerFloorplan')) {
                obj['interiorCountPerFloorplan'] = ApiClient.convertToType(data['interiorCountPerFloorplan'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateWorldGenerationJobRequestWorldCount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateWorldGenerationJobRequestWorldCount</code>.
     */
    static validateJSON(data) {
        // validate the optional field `floorplanCount`
        if (data['floorplanCount']) { // data not null
          Number.validateJSON(data['floorplanCount']);
        }
        // validate the optional field `interiorCountPerFloorplan`
        if (data['interiorCountPerFloorplan']) { // data not null
          Number.validateJSON(data['interiorCountPerFloorplan']);
        }

        return true;
    }


}



/**
 * @member {Number} floorplanCount
 */
CreateWorldGenerationJobRequestWorldCount.prototype['floorplanCount'] = undefined;

/**
 * @member {Number} interiorCountPerFloorplan
 */
CreateWorldGenerationJobRequestWorldCount.prototype['interiorCountPerFloorplan'] = undefined;






export default CreateWorldGenerationJobRequestWorldCount;

