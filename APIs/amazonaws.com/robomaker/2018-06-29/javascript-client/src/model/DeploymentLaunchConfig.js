/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeploymentLaunchConfig model module.
 * @module model/DeploymentLaunchConfig
 * @version 2018-06-29
 */
class DeploymentLaunchConfig {
    /**
     * Constructs a new <code>DeploymentLaunchConfig</code>.
     * Configuration information for a deployment launch.
     * @alias module:model/DeploymentLaunchConfig
     * @param packageName {String} 
     * @param launchFile {String} 
     */
    constructor(packageName, launchFile) { 
        
        DeploymentLaunchConfig.initialize(this, packageName, launchFile);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, packageName, launchFile) { 
        obj['packageName'] = packageName;
        obj['launchFile'] = launchFile;
    }

    /**
     * Constructs a <code>DeploymentLaunchConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeploymentLaunchConfig} obj Optional instance to populate.
     * @return {module:model/DeploymentLaunchConfig} The populated <code>DeploymentLaunchConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeploymentLaunchConfig();

            if (data.hasOwnProperty('packageName')) {
                obj['packageName'] = ApiClient.convertToType(data['packageName'], 'String');
            }
            if (data.hasOwnProperty('preLaunchFile')) {
                obj['preLaunchFile'] = ApiClient.convertToType(data['preLaunchFile'], 'String');
            }
            if (data.hasOwnProperty('launchFile')) {
                obj['launchFile'] = ApiClient.convertToType(data['launchFile'], 'String');
            }
            if (data.hasOwnProperty('postLaunchFile')) {
                obj['postLaunchFile'] = ApiClient.convertToType(data['postLaunchFile'], 'String');
            }
            if (data.hasOwnProperty('environmentVariables')) {
                obj['environmentVariables'] = ApiClient.convertToType(data['environmentVariables'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeploymentLaunchConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeploymentLaunchConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeploymentLaunchConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `packageName`
        if (data['packageName']) { // data not null
          String.validateJSON(data['packageName']);
        }
        // validate the optional field `preLaunchFile`
        if (data['preLaunchFile']) { // data not null
          String.validateJSON(data['preLaunchFile']);
        }
        // validate the optional field `launchFile`
        if (data['launchFile']) { // data not null
          String.validateJSON(data['launchFile']);
        }
        // validate the optional field `postLaunchFile`
        if (data['postLaunchFile']) { // data not null
          String.validateJSON(data['postLaunchFile']);
        }
        // validate the optional field `environmentVariables`
        if (data['environmentVariables']) { // data not null
          Object.validateJSON(data['environmentVariables']);
        }

        return true;
    }


}

DeploymentLaunchConfig.RequiredProperties = ["packageName", "launchFile"];

/**
 * @member {String} packageName
 */
DeploymentLaunchConfig.prototype['packageName'] = undefined;

/**
 * @member {String} preLaunchFile
 */
DeploymentLaunchConfig.prototype['preLaunchFile'] = undefined;

/**
 * @member {String} launchFile
 */
DeploymentLaunchConfig.prototype['launchFile'] = undefined;

/**
 * @member {String} postLaunchFile
 */
DeploymentLaunchConfig.prototype['postLaunchFile'] = undefined;

/**
 * @member {Object} environmentVariables
 */
DeploymentLaunchConfig.prototype['environmentVariables'] = undefined;






export default DeploymentLaunchConfig;

