/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateRobotApplicationVersionRequest model module.
 * @module model/CreateRobotApplicationVersionRequest
 * @version 2018-06-29
 */
class CreateRobotApplicationVersionRequest {
    /**
     * Constructs a new <code>CreateRobotApplicationVersionRequest</code>.
     * @alias module:model/CreateRobotApplicationVersionRequest
     * @param application {String} The application information for the robot application.
     */
    constructor(application) { 
        
        CreateRobotApplicationVersionRequest.initialize(this, application);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, application) { 
        obj['application'] = application;
    }

    /**
     * Constructs a <code>CreateRobotApplicationVersionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRobotApplicationVersionRequest} obj Optional instance to populate.
     * @return {module:model/CreateRobotApplicationVersionRequest} The populated <code>CreateRobotApplicationVersionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRobotApplicationVersionRequest();

            if (data.hasOwnProperty('application')) {
                obj['application'] = ApiClient.convertToType(data['application'], 'String');
            }
            if (data.hasOwnProperty('currentRevisionId')) {
                obj['currentRevisionId'] = ApiClient.convertToType(data['currentRevisionId'], 'String');
            }
            if (data.hasOwnProperty('s3Etags')) {
                obj['s3Etags'] = ApiClient.convertToType(data['s3Etags'], ['String']);
            }
            if (data.hasOwnProperty('imageDigest')) {
                obj['imageDigest'] = ApiClient.convertToType(data['imageDigest'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRobotApplicationVersionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRobotApplicationVersionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRobotApplicationVersionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['application'] && !(typeof data['application'] === 'string' || data['application'] instanceof String)) {
            throw new Error("Expected the field `application` to be a primitive type in the JSON string but got " + data['application']);
        }
        // ensure the json data is a string
        if (data['currentRevisionId'] && !(typeof data['currentRevisionId'] === 'string' || data['currentRevisionId'] instanceof String)) {
            throw new Error("Expected the field `currentRevisionId` to be a primitive type in the JSON string but got " + data['currentRevisionId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['s3Etags'])) {
            throw new Error("Expected the field `s3Etags` to be an array in the JSON data but got " + data['s3Etags']);
        }
        // ensure the json data is a string
        if (data['imageDigest'] && !(typeof data['imageDigest'] === 'string' || data['imageDigest'] instanceof String)) {
            throw new Error("Expected the field `imageDigest` to be a primitive type in the JSON string but got " + data['imageDigest']);
        }

        return true;
    }


}

CreateRobotApplicationVersionRequest.RequiredProperties = ["application"];

/**
 * The application information for the robot application.
 * @member {String} application
 */
CreateRobotApplicationVersionRequest.prototype['application'] = undefined;

/**
 * The current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.
 * @member {String} currentRevisionId
 */
CreateRobotApplicationVersionRequest.prototype['currentRevisionId'] = undefined;

/**
 * The Amazon S3 identifier for the zip file bundle that you use for your robot application.
 * @member {Array.<String>} s3Etags
 */
CreateRobotApplicationVersionRequest.prototype['s3Etags'] = undefined;

/**
 * A SHA256 identifier for the Docker image that you use for your robot application.
 * @member {String} imageDigest
 */
CreateRobotApplicationVersionRequest.prototype['imageDigest'] = undefined;






export default CreateRobotApplicationVersionRequest;

