/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VPCConfigResponse model module.
 * @module model/VPCConfigResponse
 * @version 2018-06-29
 */
class VPCConfigResponse {
    /**
     * Constructs a new <code>VPCConfigResponse</code>.
     * VPC configuration associated with your simulation job.
     * @alias module:model/VPCConfigResponse
     */
    constructor() { 
        
        VPCConfigResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VPCConfigResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VPCConfigResponse} obj Optional instance to populate.
     * @return {module:model/VPCConfigResponse} The populated <code>VPCConfigResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VPCConfigResponse();

            if (data.hasOwnProperty('subnets')) {
                obj['subnets'] = ApiClient.convertToType(data['subnets'], Array);
            }
            if (data.hasOwnProperty('securityGroups')) {
                obj['securityGroups'] = ApiClient.convertToType(data['securityGroups'], Array);
            }
            if (data.hasOwnProperty('vpcId')) {
                obj['vpcId'] = ApiClient.convertToType(data['vpcId'], 'String');
            }
            if (data.hasOwnProperty('assignPublicIp')) {
                obj['assignPublicIp'] = ApiClient.convertToType(data['assignPublicIp'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VPCConfigResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VPCConfigResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `subnets`
        if (data['subnets']) { // data not null
          Array.validateJSON(data['subnets']);
        }
        // validate the optional field `securityGroups`
        if (data['securityGroups']) { // data not null
          Array.validateJSON(data['securityGroups']);
        }
        // validate the optional field `vpcId`
        if (data['vpcId']) { // data not null
          String.validateJSON(data['vpcId']);
        }
        // validate the optional field `assignPublicIp`
        if (data['assignPublicIp']) { // data not null
          Boolean.validateJSON(data['assignPublicIp']);
        }

        return true;
    }


}



/**
 * @member {Array} subnets
 */
VPCConfigResponse.prototype['subnets'] = undefined;

/**
 * @member {Array} securityGroups
 */
VPCConfigResponse.prototype['securityGroups'] = undefined;

/**
 * @member {String} vpcId
 */
VPCConfigResponse.prototype['vpcId'] = undefined;

/**
 * @member {Boolean} assignPublicIp
 */
VPCConfigResponse.prototype['assignPublicIp'] = undefined;






export default VPCConfigResponse;

