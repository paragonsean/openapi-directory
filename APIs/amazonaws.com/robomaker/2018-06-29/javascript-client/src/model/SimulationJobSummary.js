/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ComputeType from './ComputeType';
import SimulationJobStatus from './SimulationJobStatus';

/**
 * The SimulationJobSummary model module.
 * @module model/SimulationJobSummary
 * @version 2018-06-29
 */
class SimulationJobSummary {
    /**
     * Constructs a new <code>SimulationJobSummary</code>.
     * Summary information for a simulation job.
     * @alias module:model/SimulationJobSummary
     */
    constructor() { 
        
        SimulationJobSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SimulationJobSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimulationJobSummary} obj Optional instance to populate.
     * @return {module:model/SimulationJobSummary} The populated <code>SimulationJobSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimulationJobSummary();

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedAt')) {
                obj['lastUpdatedAt'] = ApiClient.convertToType(data['lastUpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], SimulationJobStatus);
            }
            if (data.hasOwnProperty('simulationApplicationNames')) {
                obj['simulationApplicationNames'] = ApiClient.convertToType(data['simulationApplicationNames'], Array);
            }
            if (data.hasOwnProperty('robotApplicationNames')) {
                obj['robotApplicationNames'] = ApiClient.convertToType(data['robotApplicationNames'], Array);
            }
            if (data.hasOwnProperty('dataSourceNames')) {
                obj['dataSourceNames'] = ApiClient.convertToType(data['dataSourceNames'], Array);
            }
            if (data.hasOwnProperty('computeType')) {
                obj['computeType'] = ApiClient.convertToType(data['computeType'], ComputeType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SimulationJobSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SimulationJobSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `lastUpdatedAt`
        if (data['lastUpdatedAt']) { // data not null
          Date.validateJSON(data['lastUpdatedAt']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          SimulationJobStatus.validateJSON(data['status']);
        }
        // validate the optional field `simulationApplicationNames`
        if (data['simulationApplicationNames']) { // data not null
          Array.validateJSON(data['simulationApplicationNames']);
        }
        // validate the optional field `robotApplicationNames`
        if (data['robotApplicationNames']) { // data not null
          Array.validateJSON(data['robotApplicationNames']);
        }
        // validate the optional field `dataSourceNames`
        if (data['dataSourceNames']) { // data not null
          Array.validateJSON(data['dataSourceNames']);
        }
        // validate the optional field `computeType`
        if (data['computeType']) { // data not null
          ComputeType.validateJSON(data['computeType']);
        }

        return true;
    }


}



/**
 * @member {String} arn
 */
SimulationJobSummary.prototype['arn'] = undefined;

/**
 * @member {Date} lastUpdatedAt
 */
SimulationJobSummary.prototype['lastUpdatedAt'] = undefined;

/**
 * @member {String} name
 */
SimulationJobSummary.prototype['name'] = undefined;

/**
 * @member {module:model/SimulationJobStatus} status
 */
SimulationJobSummary.prototype['status'] = undefined;

/**
 * @member {Array} simulationApplicationNames
 */
SimulationJobSummary.prototype['simulationApplicationNames'] = undefined;

/**
 * @member {Array} robotApplicationNames
 */
SimulationJobSummary.prototype['robotApplicationNames'] = undefined;

/**
 * @member {Array} dataSourceNames
 */
SimulationJobSummary.prototype['dataSourceNames'] = undefined;

/**
 * @member {module:model/ComputeType} computeType
 */
SimulationJobSummary.prototype['computeType'] = undefined;






export default SimulationJobSummary;

