/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateDeploymentJobRequestDeploymentConfig from './CreateDeploymentJobRequestDeploymentConfig';
import DeploymentApplicationConfig from './DeploymentApplicationConfig';

/**
 * The CreateDeploymentJobRequest model module.
 * @module model/CreateDeploymentJobRequest
 * @version 2018-06-29
 */
class CreateDeploymentJobRequest {
    /**
     * Constructs a new <code>CreateDeploymentJobRequest</code>.
     * @alias module:model/CreateDeploymentJobRequest
     * @param clientRequestToken {String} Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
     * @param fleet {String} The Amazon Resource Name (ARN) of the fleet to deploy.
     * @param deploymentApplicationConfigs {Array.<module:model/DeploymentApplicationConfig>} The deployment application configuration.
     */
    constructor(clientRequestToken, fleet, deploymentApplicationConfigs) { 
        
        CreateDeploymentJobRequest.initialize(this, clientRequestToken, fleet, deploymentApplicationConfigs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientRequestToken, fleet, deploymentApplicationConfigs) { 
        obj['clientRequestToken'] = clientRequestToken;
        obj['fleet'] = fleet;
        obj['deploymentApplicationConfigs'] = deploymentApplicationConfigs;
    }

    /**
     * Constructs a <code>CreateDeploymentJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDeploymentJobRequest} obj Optional instance to populate.
     * @return {module:model/CreateDeploymentJobRequest} The populated <code>CreateDeploymentJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDeploymentJobRequest();

            if (data.hasOwnProperty('deploymentConfig')) {
                obj['deploymentConfig'] = CreateDeploymentJobRequestDeploymentConfig.constructFromObject(data['deploymentConfig']);
            }
            if (data.hasOwnProperty('clientRequestToken')) {
                obj['clientRequestToken'] = ApiClient.convertToType(data['clientRequestToken'], 'String');
            }
            if (data.hasOwnProperty('fleet')) {
                obj['fleet'] = ApiClient.convertToType(data['fleet'], 'String');
            }
            if (data.hasOwnProperty('deploymentApplicationConfigs')) {
                obj['deploymentApplicationConfigs'] = ApiClient.convertToType(data['deploymentApplicationConfigs'], [DeploymentApplicationConfig]);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDeploymentJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDeploymentJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDeploymentJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `deploymentConfig`
        if (data['deploymentConfig']) { // data not null
          CreateDeploymentJobRequestDeploymentConfig.validateJSON(data['deploymentConfig']);
        }
        // ensure the json data is a string
        if (data['clientRequestToken'] && !(typeof data['clientRequestToken'] === 'string' || data['clientRequestToken'] instanceof String)) {
            throw new Error("Expected the field `clientRequestToken` to be a primitive type in the JSON string but got " + data['clientRequestToken']);
        }
        // ensure the json data is a string
        if (data['fleet'] && !(typeof data['fleet'] === 'string' || data['fleet'] instanceof String)) {
            throw new Error("Expected the field `fleet` to be a primitive type in the JSON string but got " + data['fleet']);
        }
        if (data['deploymentApplicationConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['deploymentApplicationConfigs'])) {
                throw new Error("Expected the field `deploymentApplicationConfigs` to be an array in the JSON data but got " + data['deploymentApplicationConfigs']);
            }
            // validate the optional field `deploymentApplicationConfigs` (array)
            for (const item of data['deploymentApplicationConfigs']) {
                DeploymentApplicationConfig.validateJSON(item);
            };
        }

        return true;
    }


}

CreateDeploymentJobRequest.RequiredProperties = ["clientRequestToken", "fleet", "deploymentApplicationConfigs"];

/**
 * @member {module:model/CreateDeploymentJobRequestDeploymentConfig} deploymentConfig
 */
CreateDeploymentJobRequest.prototype['deploymentConfig'] = undefined;

/**
 * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
 * @member {String} clientRequestToken
 */
CreateDeploymentJobRequest.prototype['clientRequestToken'] = undefined;

/**
 * The Amazon Resource Name (ARN) of the fleet to deploy.
 * @member {String} fleet
 */
CreateDeploymentJobRequest.prototype['fleet'] = undefined;

/**
 * The deployment application configuration.
 * @member {Array.<module:model/DeploymentApplicationConfig>} deploymentApplicationConfigs
 */
CreateDeploymentJobRequest.prototype['deploymentApplicationConfigs'] = undefined;

/**
 * A map that contains tag keys and tag values that are attached to the deployment job.
 * @member {Object.<String, String>} tags
 */
CreateDeploymentJobRequest.prototype['tags'] = undefined;






export default CreateDeploymentJobRequest;

