/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateRobotApplicationRequestEnvironment from './CreateRobotApplicationRequestEnvironment';
import CreateRobotApplicationRequestRobotSoftwareSuite from './CreateRobotApplicationRequestRobotSoftwareSuite';
import SourceConfig from './SourceConfig';

/**
 * The UpdateRobotApplicationRequest model module.
 * @module model/UpdateRobotApplicationRequest
 * @version 2018-06-29
 */
class UpdateRobotApplicationRequest {
    /**
     * Constructs a new <code>UpdateRobotApplicationRequest</code>.
     * @alias module:model/UpdateRobotApplicationRequest
     * @param application {String} The application information for the robot application.
     * @param robotSoftwareSuite {module:model/CreateRobotApplicationRequestRobotSoftwareSuite} 
     */
    constructor(application, robotSoftwareSuite) { 
        
        UpdateRobotApplicationRequest.initialize(this, application, robotSoftwareSuite);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, application, robotSoftwareSuite) { 
        obj['application'] = application;
        obj['robotSoftwareSuite'] = robotSoftwareSuite;
    }

    /**
     * Constructs a <code>UpdateRobotApplicationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateRobotApplicationRequest} obj Optional instance to populate.
     * @return {module:model/UpdateRobotApplicationRequest} The populated <code>UpdateRobotApplicationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateRobotApplicationRequest();

            if (data.hasOwnProperty('application')) {
                obj['application'] = ApiClient.convertToType(data['application'], 'String');
            }
            if (data.hasOwnProperty('sources')) {
                obj['sources'] = ApiClient.convertToType(data['sources'], [SourceConfig]);
            }
            if (data.hasOwnProperty('robotSoftwareSuite')) {
                obj['robotSoftwareSuite'] = CreateRobotApplicationRequestRobotSoftwareSuite.constructFromObject(data['robotSoftwareSuite']);
            }
            if (data.hasOwnProperty('currentRevisionId')) {
                obj['currentRevisionId'] = ApiClient.convertToType(data['currentRevisionId'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = CreateRobotApplicationRequestEnvironment.constructFromObject(data['environment']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateRobotApplicationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateRobotApplicationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateRobotApplicationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['application'] && !(typeof data['application'] === 'string' || data['application'] instanceof String)) {
            throw new Error("Expected the field `application` to be a primitive type in the JSON string but got " + data['application']);
        }
        if (data['sources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sources'])) {
                throw new Error("Expected the field `sources` to be an array in the JSON data but got " + data['sources']);
            }
            // validate the optional field `sources` (array)
            for (const item of data['sources']) {
                SourceConfig.validateJSON(item);
            };
        }
        // validate the optional field `robotSoftwareSuite`
        if (data['robotSoftwareSuite']) { // data not null
          CreateRobotApplicationRequestRobotSoftwareSuite.validateJSON(data['robotSoftwareSuite']);
        }
        // ensure the json data is a string
        if (data['currentRevisionId'] && !(typeof data['currentRevisionId'] === 'string' || data['currentRevisionId'] instanceof String)) {
            throw new Error("Expected the field `currentRevisionId` to be a primitive type in the JSON string but got " + data['currentRevisionId']);
        }
        // validate the optional field `environment`
        if (data['environment']) { // data not null
          CreateRobotApplicationRequestEnvironment.validateJSON(data['environment']);
        }

        return true;
    }


}

UpdateRobotApplicationRequest.RequiredProperties = ["application", "robotSoftwareSuite"];

/**
 * The application information for the robot application.
 * @member {String} application
 */
UpdateRobotApplicationRequest.prototype['application'] = undefined;

/**
 * The sources of the robot application.
 * @member {Array.<module:model/SourceConfig>} sources
 */
UpdateRobotApplicationRequest.prototype['sources'] = undefined;

/**
 * @member {module:model/CreateRobotApplicationRequestRobotSoftwareSuite} robotSoftwareSuite
 */
UpdateRobotApplicationRequest.prototype['robotSoftwareSuite'] = undefined;

/**
 * The revision id for the robot application.
 * @member {String} currentRevisionId
 */
UpdateRobotApplicationRequest.prototype['currentRevisionId'] = undefined;

/**
 * @member {module:model/CreateRobotApplicationRequestEnvironment} environment
 */
UpdateRobotApplicationRequest.prototype['environment'] = undefined;






export default UpdateRobotApplicationRequest;

