/**
 * AWS RoboMaker
 * This section provides documentation for the AWS RoboMaker API operations.
 *
 * The version of the OpenAPI document: 2018-06-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExitBehavior from './ExitBehavior';

/**
 * The Tool model module.
 * @module model/Tool
 * @version 2018-06-29
 */
class Tool {
    /**
     * Constructs a new <code>Tool</code>.
     * Information about a tool. Tools are used in a simulation job.
     * @alias module:model/Tool
     * @param name {String} 
     * @param command {String} 
     */
    constructor(name, command) { 
        
        Tool.initialize(this, name, command);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, command) { 
        obj['name'] = name;
        obj['command'] = command;
    }

    /**
     * Constructs a <code>Tool</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Tool} obj Optional instance to populate.
     * @return {module:model/Tool} The populated <code>Tool</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Tool();

            if (data.hasOwnProperty('streamUI')) {
                obj['streamUI'] = ApiClient.convertToType(data['streamUI'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('command')) {
                obj['command'] = ApiClient.convertToType(data['command'], 'String');
            }
            if (data.hasOwnProperty('streamOutputToCloudWatch')) {
                obj['streamOutputToCloudWatch'] = ApiClient.convertToType(data['streamOutputToCloudWatch'], 'Boolean');
            }
            if (data.hasOwnProperty('exitBehavior')) {
                obj['exitBehavior'] = ApiClient.convertToType(data['exitBehavior'], ExitBehavior);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Tool</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Tool</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Tool.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `streamUI`
        if (data['streamUI']) { // data not null
          Boolean.validateJSON(data['streamUI']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `command`
        if (data['command']) { // data not null
          String.validateJSON(data['command']);
        }
        // validate the optional field `streamOutputToCloudWatch`
        if (data['streamOutputToCloudWatch']) { // data not null
          Boolean.validateJSON(data['streamOutputToCloudWatch']);
        }
        // validate the optional field `exitBehavior`
        if (data['exitBehavior']) { // data not null
          ExitBehavior.validateJSON(data['exitBehavior']);
        }

        return true;
    }


}

Tool.RequiredProperties = ["name", "command"];

/**
 * @member {Boolean} streamUI
 */
Tool.prototype['streamUI'] = undefined;

/**
 * @member {String} name
 */
Tool.prototype['name'] = undefined;

/**
 * @member {String} command
 */
Tool.prototype['command'] = undefined;

/**
 * @member {Boolean} streamOutputToCloudWatch
 */
Tool.prototype['streamOutputToCloudWatch'] = undefined;

/**
 * @member {module:model/ExitBehavior} exitBehavior
 */
Tool.prototype['exitBehavior'] = undefined;






export default Tool;

