/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateLaunchConfigurationTypeInstanceMonitoring;
import org.openapitools.client.model.CreateLaunchConfigurationTypeMetadataOptions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateLaunchConfigurationType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateLaunchConfigurationType {
  public static final String SERIALIZED_NAME_LAUNCH_CONFIGURATION_NAME = "LaunchConfigurationName";
  @SerializedName(SERIALIZED_NAME_LAUNCH_CONFIGURATION_NAME)
  private String launchConfigurationName;

  public static final String SERIALIZED_NAME_IMAGE_ID = "ImageId";
  @SerializedName(SERIALIZED_NAME_IMAGE_ID)
  private String imageId;

  public static final String SERIALIZED_NAME_KEY_NAME = "KeyName";
  @SerializedName(SERIALIZED_NAME_KEY_NAME)
  private String keyName;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_CLASSIC_LINK_V_P_C_ID = "ClassicLinkVPCId";
  @SerializedName(SERIALIZED_NAME_CLASSIC_LINK_V_P_C_ID)
  private String classicLinkVPCId;

  public static final String SERIALIZED_NAME_CLASSIC_LINK_V_P_C_SECURITY_GROUPS = "ClassicLinkVPCSecurityGroups";
  @SerializedName(SERIALIZED_NAME_CLASSIC_LINK_V_P_C_SECURITY_GROUPS)
  private List classicLinkVPCSecurityGroups;

  public static final String SERIALIZED_NAME_USER_DATA = "UserData";
  @SerializedName(SERIALIZED_NAME_USER_DATA)
  private String userData;

  public static final String SERIALIZED_NAME_INSTANCE_ID = "InstanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private String instanceType;

  public static final String SERIALIZED_NAME_KERNEL_ID = "KernelId";
  @SerializedName(SERIALIZED_NAME_KERNEL_ID)
  private String kernelId;

  public static final String SERIALIZED_NAME_RAMDISK_ID = "RamdiskId";
  @SerializedName(SERIALIZED_NAME_RAMDISK_ID)
  private String ramdiskId;

  public static final String SERIALIZED_NAME_BLOCK_DEVICE_MAPPINGS = "BlockDeviceMappings";
  @SerializedName(SERIALIZED_NAME_BLOCK_DEVICE_MAPPINGS)
  private List blockDeviceMappings;

  public static final String SERIALIZED_NAME_INSTANCE_MONITORING = "InstanceMonitoring";
  @SerializedName(SERIALIZED_NAME_INSTANCE_MONITORING)
  private CreateLaunchConfigurationTypeInstanceMonitoring instanceMonitoring;

  public static final String SERIALIZED_NAME_SPOT_PRICE = "SpotPrice";
  @SerializedName(SERIALIZED_NAME_SPOT_PRICE)
  private String spotPrice;

  public static final String SERIALIZED_NAME_IAM_INSTANCE_PROFILE = "IamInstanceProfile";
  @SerializedName(SERIALIZED_NAME_IAM_INSTANCE_PROFILE)
  private String iamInstanceProfile;

  public static final String SERIALIZED_NAME_EBS_OPTIMIZED = "EbsOptimized";
  @SerializedName(SERIALIZED_NAME_EBS_OPTIMIZED)
  private Boolean ebsOptimized;

  public static final String SERIALIZED_NAME_ASSOCIATE_PUBLIC_IP_ADDRESS = "AssociatePublicIpAddress";
  @SerializedName(SERIALIZED_NAME_ASSOCIATE_PUBLIC_IP_ADDRESS)
  private Boolean associatePublicIpAddress;

  public static final String SERIALIZED_NAME_PLACEMENT_TENANCY = "PlacementTenancy";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_TENANCY)
  private String placementTenancy;

  public static final String SERIALIZED_NAME_METADATA_OPTIONS = "MetadataOptions";
  @SerializedName(SERIALIZED_NAME_METADATA_OPTIONS)
  private CreateLaunchConfigurationTypeMetadataOptions metadataOptions;

  public CreateLaunchConfigurationType() {
  }

  public CreateLaunchConfigurationType launchConfigurationName(String launchConfigurationName) {
    this.launchConfigurationName = launchConfigurationName;
    return this;
  }

  /**
   * Get launchConfigurationName
   * @return launchConfigurationName
   */
  @javax.annotation.Nonnull
  public String getLaunchConfigurationName() {
    return launchConfigurationName;
  }

  public void setLaunchConfigurationName(String launchConfigurationName) {
    this.launchConfigurationName = launchConfigurationName;
  }


  public CreateLaunchConfigurationType imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

  /**
   * Get imageId
   * @return imageId
   */
  @javax.annotation.Nullable
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }


  public CreateLaunchConfigurationType keyName(String keyName) {
    this.keyName = keyName;
    return this;
  }

  /**
   * Get keyName
   * @return keyName
   */
  @javax.annotation.Nullable
  public String getKeyName() {
    return keyName;
  }

  public void setKeyName(String keyName) {
    this.keyName = keyName;
  }


  public CreateLaunchConfigurationType securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public CreateLaunchConfigurationType classicLinkVPCId(String classicLinkVPCId) {
    this.classicLinkVPCId = classicLinkVPCId;
    return this;
  }

  /**
   * Get classicLinkVPCId
   * @return classicLinkVPCId
   */
  @javax.annotation.Nullable
  public String getClassicLinkVPCId() {
    return classicLinkVPCId;
  }

  public void setClassicLinkVPCId(String classicLinkVPCId) {
    this.classicLinkVPCId = classicLinkVPCId;
  }


  public CreateLaunchConfigurationType classicLinkVPCSecurityGroups(List classicLinkVPCSecurityGroups) {
    this.classicLinkVPCSecurityGroups = classicLinkVPCSecurityGroups;
    return this;
  }

  /**
   * Get classicLinkVPCSecurityGroups
   * @return classicLinkVPCSecurityGroups
   */
  @javax.annotation.Nullable
  public List getClassicLinkVPCSecurityGroups() {
    return classicLinkVPCSecurityGroups;
  }

  public void setClassicLinkVPCSecurityGroups(List classicLinkVPCSecurityGroups) {
    this.classicLinkVPCSecurityGroups = classicLinkVPCSecurityGroups;
  }


  public CreateLaunchConfigurationType userData(String userData) {
    this.userData = userData;
    return this;
  }

  /**
   * Get userData
   * @return userData
   */
  @javax.annotation.Nullable
  public String getUserData() {
    return userData;
  }

  public void setUserData(String userData) {
    this.userData = userData;
  }


  public CreateLaunchConfigurationType instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public CreateLaunchConfigurationType instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }


  public CreateLaunchConfigurationType kernelId(String kernelId) {
    this.kernelId = kernelId;
    return this;
  }

  /**
   * Get kernelId
   * @return kernelId
   */
  @javax.annotation.Nullable
  public String getKernelId() {
    return kernelId;
  }

  public void setKernelId(String kernelId) {
    this.kernelId = kernelId;
  }


  public CreateLaunchConfigurationType ramdiskId(String ramdiskId) {
    this.ramdiskId = ramdiskId;
    return this;
  }

  /**
   * Get ramdiskId
   * @return ramdiskId
   */
  @javax.annotation.Nullable
  public String getRamdiskId() {
    return ramdiskId;
  }

  public void setRamdiskId(String ramdiskId) {
    this.ramdiskId = ramdiskId;
  }


  public CreateLaunchConfigurationType blockDeviceMappings(List blockDeviceMappings) {
    this.blockDeviceMappings = blockDeviceMappings;
    return this;
  }

  /**
   * Get blockDeviceMappings
   * @return blockDeviceMappings
   */
  @javax.annotation.Nullable
  public List getBlockDeviceMappings() {
    return blockDeviceMappings;
  }

  public void setBlockDeviceMappings(List blockDeviceMappings) {
    this.blockDeviceMappings = blockDeviceMappings;
  }


  public CreateLaunchConfigurationType instanceMonitoring(CreateLaunchConfigurationTypeInstanceMonitoring instanceMonitoring) {
    this.instanceMonitoring = instanceMonitoring;
    return this;
  }

  /**
   * Get instanceMonitoring
   * @return instanceMonitoring
   */
  @javax.annotation.Nullable
  public CreateLaunchConfigurationTypeInstanceMonitoring getInstanceMonitoring() {
    return instanceMonitoring;
  }

  public void setInstanceMonitoring(CreateLaunchConfigurationTypeInstanceMonitoring instanceMonitoring) {
    this.instanceMonitoring = instanceMonitoring;
  }


  public CreateLaunchConfigurationType spotPrice(String spotPrice) {
    this.spotPrice = spotPrice;
    return this;
  }

  /**
   * Get spotPrice
   * @return spotPrice
   */
  @javax.annotation.Nullable
  public String getSpotPrice() {
    return spotPrice;
  }

  public void setSpotPrice(String spotPrice) {
    this.spotPrice = spotPrice;
  }


  public CreateLaunchConfigurationType iamInstanceProfile(String iamInstanceProfile) {
    this.iamInstanceProfile = iamInstanceProfile;
    return this;
  }

  /**
   * Get iamInstanceProfile
   * @return iamInstanceProfile
   */
  @javax.annotation.Nullable
  public String getIamInstanceProfile() {
    return iamInstanceProfile;
  }

  public void setIamInstanceProfile(String iamInstanceProfile) {
    this.iamInstanceProfile = iamInstanceProfile;
  }


  public CreateLaunchConfigurationType ebsOptimized(Boolean ebsOptimized) {
    this.ebsOptimized = ebsOptimized;
    return this;
  }

  /**
   * Get ebsOptimized
   * @return ebsOptimized
   */
  @javax.annotation.Nullable
  public Boolean getEbsOptimized() {
    return ebsOptimized;
  }

  public void setEbsOptimized(Boolean ebsOptimized) {
    this.ebsOptimized = ebsOptimized;
  }


  public CreateLaunchConfigurationType associatePublicIpAddress(Boolean associatePublicIpAddress) {
    this.associatePublicIpAddress = associatePublicIpAddress;
    return this;
  }

  /**
   * Get associatePublicIpAddress
   * @return associatePublicIpAddress
   */
  @javax.annotation.Nullable
  public Boolean getAssociatePublicIpAddress() {
    return associatePublicIpAddress;
  }

  public void setAssociatePublicIpAddress(Boolean associatePublicIpAddress) {
    this.associatePublicIpAddress = associatePublicIpAddress;
  }


  public CreateLaunchConfigurationType placementTenancy(String placementTenancy) {
    this.placementTenancy = placementTenancy;
    return this;
  }

  /**
   * Get placementTenancy
   * @return placementTenancy
   */
  @javax.annotation.Nullable
  public String getPlacementTenancy() {
    return placementTenancy;
  }

  public void setPlacementTenancy(String placementTenancy) {
    this.placementTenancy = placementTenancy;
  }


  public CreateLaunchConfigurationType metadataOptions(CreateLaunchConfigurationTypeMetadataOptions metadataOptions) {
    this.metadataOptions = metadataOptions;
    return this;
  }

  /**
   * Get metadataOptions
   * @return metadataOptions
   */
  @javax.annotation.Nullable
  public CreateLaunchConfigurationTypeMetadataOptions getMetadataOptions() {
    return metadataOptions;
  }

  public void setMetadataOptions(CreateLaunchConfigurationTypeMetadataOptions metadataOptions) {
    this.metadataOptions = metadataOptions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateLaunchConfigurationType createLaunchConfigurationType = (CreateLaunchConfigurationType) o;
    return Objects.equals(this.launchConfigurationName, createLaunchConfigurationType.launchConfigurationName) &&
        Objects.equals(this.imageId, createLaunchConfigurationType.imageId) &&
        Objects.equals(this.keyName, createLaunchConfigurationType.keyName) &&
        Objects.equals(this.securityGroups, createLaunchConfigurationType.securityGroups) &&
        Objects.equals(this.classicLinkVPCId, createLaunchConfigurationType.classicLinkVPCId) &&
        Objects.equals(this.classicLinkVPCSecurityGroups, createLaunchConfigurationType.classicLinkVPCSecurityGroups) &&
        Objects.equals(this.userData, createLaunchConfigurationType.userData) &&
        Objects.equals(this.instanceId, createLaunchConfigurationType.instanceId) &&
        Objects.equals(this.instanceType, createLaunchConfigurationType.instanceType) &&
        Objects.equals(this.kernelId, createLaunchConfigurationType.kernelId) &&
        Objects.equals(this.ramdiskId, createLaunchConfigurationType.ramdiskId) &&
        Objects.equals(this.blockDeviceMappings, createLaunchConfigurationType.blockDeviceMappings) &&
        Objects.equals(this.instanceMonitoring, createLaunchConfigurationType.instanceMonitoring) &&
        Objects.equals(this.spotPrice, createLaunchConfigurationType.spotPrice) &&
        Objects.equals(this.iamInstanceProfile, createLaunchConfigurationType.iamInstanceProfile) &&
        Objects.equals(this.ebsOptimized, createLaunchConfigurationType.ebsOptimized) &&
        Objects.equals(this.associatePublicIpAddress, createLaunchConfigurationType.associatePublicIpAddress) &&
        Objects.equals(this.placementTenancy, createLaunchConfigurationType.placementTenancy) &&
        Objects.equals(this.metadataOptions, createLaunchConfigurationType.metadataOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(launchConfigurationName, imageId, keyName, securityGroups, classicLinkVPCId, classicLinkVPCSecurityGroups, userData, instanceId, instanceType, kernelId, ramdiskId, blockDeviceMappings, instanceMonitoring, spotPrice, iamInstanceProfile, ebsOptimized, associatePublicIpAddress, placementTenancy, metadataOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateLaunchConfigurationType {\n");
    sb.append("    launchConfigurationName: ").append(toIndentedString(launchConfigurationName)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    keyName: ").append(toIndentedString(keyName)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    classicLinkVPCId: ").append(toIndentedString(classicLinkVPCId)).append("\n");
    sb.append("    classicLinkVPCSecurityGroups: ").append(toIndentedString(classicLinkVPCSecurityGroups)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    kernelId: ").append(toIndentedString(kernelId)).append("\n");
    sb.append("    ramdiskId: ").append(toIndentedString(ramdiskId)).append("\n");
    sb.append("    blockDeviceMappings: ").append(toIndentedString(blockDeviceMappings)).append("\n");
    sb.append("    instanceMonitoring: ").append(toIndentedString(instanceMonitoring)).append("\n");
    sb.append("    spotPrice: ").append(toIndentedString(spotPrice)).append("\n");
    sb.append("    iamInstanceProfile: ").append(toIndentedString(iamInstanceProfile)).append("\n");
    sb.append("    ebsOptimized: ").append(toIndentedString(ebsOptimized)).append("\n");
    sb.append("    associatePublicIpAddress: ").append(toIndentedString(associatePublicIpAddress)).append("\n");
    sb.append("    placementTenancy: ").append(toIndentedString(placementTenancy)).append("\n");
    sb.append("    metadataOptions: ").append(toIndentedString(metadataOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LaunchConfigurationName");
    openapiFields.add("ImageId");
    openapiFields.add("KeyName");
    openapiFields.add("SecurityGroups");
    openapiFields.add("ClassicLinkVPCId");
    openapiFields.add("ClassicLinkVPCSecurityGroups");
    openapiFields.add("UserData");
    openapiFields.add("InstanceId");
    openapiFields.add("InstanceType");
    openapiFields.add("KernelId");
    openapiFields.add("RamdiskId");
    openapiFields.add("BlockDeviceMappings");
    openapiFields.add("InstanceMonitoring");
    openapiFields.add("SpotPrice");
    openapiFields.add("IamInstanceProfile");
    openapiFields.add("EbsOptimized");
    openapiFields.add("AssociatePublicIpAddress");
    openapiFields.add("PlacementTenancy");
    openapiFields.add("MetadataOptions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("LaunchConfigurationName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateLaunchConfigurationType
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateLaunchConfigurationType.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateLaunchConfigurationType is not found in the empty JSON string", CreateLaunchConfigurationType.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateLaunchConfigurationType.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateLaunchConfigurationType` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateLaunchConfigurationType.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `LaunchConfigurationName`
      String.validateJsonElement(jsonObj.get("LaunchConfigurationName"));
      // validate the optional field `ImageId`
      if (jsonObj.get("ImageId") != null && !jsonObj.get("ImageId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ImageId"));
      }
      // validate the optional field `KeyName`
      if (jsonObj.get("KeyName") != null && !jsonObj.get("KeyName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KeyName"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `ClassicLinkVPCId`
      if (jsonObj.get("ClassicLinkVPCId") != null && !jsonObj.get("ClassicLinkVPCId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClassicLinkVPCId"));
      }
      // validate the optional field `ClassicLinkVPCSecurityGroups`
      if (jsonObj.get("ClassicLinkVPCSecurityGroups") != null && !jsonObj.get("ClassicLinkVPCSecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ClassicLinkVPCSecurityGroups"));
      }
      // validate the optional field `UserData`
      if (jsonObj.get("UserData") != null && !jsonObj.get("UserData").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("UserData"));
      }
      // validate the optional field `InstanceId`
      if (jsonObj.get("InstanceId") != null && !jsonObj.get("InstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceId"));
      }
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the optional field `KernelId`
      if (jsonObj.get("KernelId") != null && !jsonObj.get("KernelId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KernelId"));
      }
      // validate the optional field `RamdiskId`
      if (jsonObj.get("RamdiskId") != null && !jsonObj.get("RamdiskId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RamdiskId"));
      }
      // validate the optional field `BlockDeviceMappings`
      if (jsonObj.get("BlockDeviceMappings") != null && !jsonObj.get("BlockDeviceMappings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("BlockDeviceMappings"));
      }
      // validate the optional field `InstanceMonitoring`
      if (jsonObj.get("InstanceMonitoring") != null && !jsonObj.get("InstanceMonitoring").isJsonNull()) {
        CreateLaunchConfigurationTypeInstanceMonitoring.validateJsonElement(jsonObj.get("InstanceMonitoring"));
      }
      // validate the optional field `SpotPrice`
      if (jsonObj.get("SpotPrice") != null && !jsonObj.get("SpotPrice").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SpotPrice"));
      }
      // validate the optional field `IamInstanceProfile`
      if (jsonObj.get("IamInstanceProfile") != null && !jsonObj.get("IamInstanceProfile").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamInstanceProfile"));
      }
      // validate the optional field `EbsOptimized`
      if (jsonObj.get("EbsOptimized") != null && !jsonObj.get("EbsOptimized").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EbsOptimized"));
      }
      // validate the optional field `AssociatePublicIpAddress`
      if (jsonObj.get("AssociatePublicIpAddress") != null && !jsonObj.get("AssociatePublicIpAddress").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AssociatePublicIpAddress"));
      }
      // validate the optional field `PlacementTenancy`
      if (jsonObj.get("PlacementTenancy") != null && !jsonObj.get("PlacementTenancy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlacementTenancy"));
      }
      // validate the optional field `MetadataOptions`
      if (jsonObj.get("MetadataOptions") != null && !jsonObj.get("MetadataOptions").isJsonNull()) {
        CreateLaunchConfigurationTypeMetadataOptions.validateJsonElement(jsonObj.get("MetadataOptions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateLaunchConfigurationType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateLaunchConfigurationType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateLaunchConfigurationType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateLaunchConfigurationType.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateLaunchConfigurationType>() {
           @Override
           public void write(JsonWriter out, CreateLaunchConfigurationType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateLaunchConfigurationType read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateLaunchConfigurationType given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateLaunchConfigurationType
   * @throws IOException if the JSON string is invalid with respect to CreateLaunchConfigurationType
   */
  public static CreateLaunchConfigurationType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateLaunchConfigurationType.class);
  }

  /**
   * Convert an instance of CreateLaunchConfigurationType to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

