/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutoScalingGroupLaunchTemplate;
import org.openapitools.client.model.AutoScalingGroupMixedInstancesPolicy;
import org.openapitools.client.model.AutoScalingGroupWarmPoolConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes an Auto Scaling group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutoScalingGroup {
  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME = "AutoScalingGroupName";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME)
  private String autoScalingGroupName;

  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUP_A_R_N = "AutoScalingGroupARN";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUP_A_R_N)
  private String autoScalingGroupARN;

  public static final String SERIALIZED_NAME_LAUNCH_CONFIGURATION_NAME = "LaunchConfigurationName";
  @SerializedName(SERIALIZED_NAME_LAUNCH_CONFIGURATION_NAME)
  private String launchConfigurationName;

  public static final String SERIALIZED_NAME_LAUNCH_TEMPLATE = "LaunchTemplate";
  @SerializedName(SERIALIZED_NAME_LAUNCH_TEMPLATE)
  private AutoScalingGroupLaunchTemplate launchTemplate;

  public static final String SERIALIZED_NAME_MIXED_INSTANCES_POLICY = "MixedInstancesPolicy";
  @SerializedName(SERIALIZED_NAME_MIXED_INSTANCES_POLICY)
  private AutoScalingGroupMixedInstancesPolicy mixedInstancesPolicy;

  public static final String SERIALIZED_NAME_MIN_SIZE = "MinSize";
  @SerializedName(SERIALIZED_NAME_MIN_SIZE)
  private Integer minSize;

  public static final String SERIALIZED_NAME_MAX_SIZE = "MaxSize";
  @SerializedName(SERIALIZED_NAME_MAX_SIZE)
  private Integer maxSize;

  public static final String SERIALIZED_NAME_DESIRED_CAPACITY = "DesiredCapacity";
  @SerializedName(SERIALIZED_NAME_DESIRED_CAPACITY)
  private Integer desiredCapacity;

  public static final String SERIALIZED_NAME_PREDICTED_CAPACITY = "PredictedCapacity";
  @SerializedName(SERIALIZED_NAME_PREDICTED_CAPACITY)
  private Integer predictedCapacity;

  public static final String SERIALIZED_NAME_DEFAULT_COOLDOWN = "DefaultCooldown";
  @SerializedName(SERIALIZED_NAME_DEFAULT_COOLDOWN)
  private Integer defaultCooldown;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONES = "AvailabilityZones";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONES)
  private List availabilityZones;

  public static final String SERIALIZED_NAME_LOAD_BALANCER_NAMES = "LoadBalancerNames";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_NAMES)
  private List loadBalancerNames;

  public static final String SERIALIZED_NAME_TARGET_GROUP_A_R_NS = "TargetGroupARNs";
  @SerializedName(SERIALIZED_NAME_TARGET_GROUP_A_R_NS)
  private List targetGroupARNs;

  public static final String SERIALIZED_NAME_HEALTH_CHECK_TYPE = "HealthCheckType";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK_TYPE)
  private String healthCheckType;

  public static final String SERIALIZED_NAME_HEALTH_CHECK_GRACE_PERIOD = "HealthCheckGracePeriod";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK_GRACE_PERIOD)
  private Integer healthCheckGracePeriod;

  public static final String SERIALIZED_NAME_INSTANCES = "Instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private List instances;

  public static final String SERIALIZED_NAME_CREATED_TIME = "CreatedTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private OffsetDateTime createdTime;

  public static final String SERIALIZED_NAME_SUSPENDED_PROCESSES = "SuspendedProcesses";
  @SerializedName(SERIALIZED_NAME_SUSPENDED_PROCESSES)
  private List suspendedProcesses;

  public static final String SERIALIZED_NAME_PLACEMENT_GROUP = "PlacementGroup";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_GROUP)
  private String placementGroup;

  public static final String SERIALIZED_NAME_VP_C_ZONE_IDENTIFIER = "VPCZoneIdentifier";
  @SerializedName(SERIALIZED_NAME_VP_C_ZONE_IDENTIFIER)
  private String vpCZoneIdentifier;

  public static final String SERIALIZED_NAME_ENABLED_METRICS = "EnabledMetrics";
  @SerializedName(SERIALIZED_NAME_ENABLED_METRICS)
  private List enabledMetrics;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_TERMINATION_POLICIES = "TerminationPolicies";
  @SerializedName(SERIALIZED_NAME_TERMINATION_POLICIES)
  private List terminationPolicies;

  public static final String SERIALIZED_NAME_NEW_INSTANCES_PROTECTED_FROM_SCALE_IN = "NewInstancesProtectedFromScaleIn";
  @SerializedName(SERIALIZED_NAME_NEW_INSTANCES_PROTECTED_FROM_SCALE_IN)
  private Boolean newInstancesProtectedFromScaleIn;

  public static final String SERIALIZED_NAME_SERVICE_LINKED_ROLE_A_R_N = "ServiceLinkedRoleARN";
  @SerializedName(SERIALIZED_NAME_SERVICE_LINKED_ROLE_A_R_N)
  private String serviceLinkedRoleARN;

  public static final String SERIALIZED_NAME_MAX_INSTANCE_LIFETIME = "MaxInstanceLifetime";
  @SerializedName(SERIALIZED_NAME_MAX_INSTANCE_LIFETIME)
  private Integer maxInstanceLifetime;

  public static final String SERIALIZED_NAME_CAPACITY_REBALANCE = "CapacityRebalance";
  @SerializedName(SERIALIZED_NAME_CAPACITY_REBALANCE)
  private Boolean capacityRebalance;

  public static final String SERIALIZED_NAME_WARM_POOL_CONFIGURATION = "WarmPoolConfiguration";
  @SerializedName(SERIALIZED_NAME_WARM_POOL_CONFIGURATION)
  private AutoScalingGroupWarmPoolConfiguration warmPoolConfiguration;

  public static final String SERIALIZED_NAME_WARM_POOL_SIZE = "WarmPoolSize";
  @SerializedName(SERIALIZED_NAME_WARM_POOL_SIZE)
  private Integer warmPoolSize;

  public static final String SERIALIZED_NAME_CONTEXT = "Context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private String context;

  public static final String SERIALIZED_NAME_DESIRED_CAPACITY_TYPE = "DesiredCapacityType";
  @SerializedName(SERIALIZED_NAME_DESIRED_CAPACITY_TYPE)
  private String desiredCapacityType;

  public static final String SERIALIZED_NAME_DEFAULT_INSTANCE_WARMUP = "DefaultInstanceWarmup";
  @SerializedName(SERIALIZED_NAME_DEFAULT_INSTANCE_WARMUP)
  private Integer defaultInstanceWarmup;

  public static final String SERIALIZED_NAME_TRAFFIC_SOURCES = "TrafficSources";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_SOURCES)
  private List trafficSources;

  public AutoScalingGroup() {
  }

  public AutoScalingGroup autoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
    return this;
  }

  /**
   * Get autoScalingGroupName
   * @return autoScalingGroupName
   */
  @javax.annotation.Nonnull
  public String getAutoScalingGroupName() {
    return autoScalingGroupName;
  }

  public void setAutoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
  }


  public AutoScalingGroup autoScalingGroupARN(String autoScalingGroupARN) {
    this.autoScalingGroupARN = autoScalingGroupARN;
    return this;
  }

  /**
   * Get autoScalingGroupARN
   * @return autoScalingGroupARN
   */
  @javax.annotation.Nullable
  public String getAutoScalingGroupARN() {
    return autoScalingGroupARN;
  }

  public void setAutoScalingGroupARN(String autoScalingGroupARN) {
    this.autoScalingGroupARN = autoScalingGroupARN;
  }


  public AutoScalingGroup launchConfigurationName(String launchConfigurationName) {
    this.launchConfigurationName = launchConfigurationName;
    return this;
  }

  /**
   * Get launchConfigurationName
   * @return launchConfigurationName
   */
  @javax.annotation.Nullable
  public String getLaunchConfigurationName() {
    return launchConfigurationName;
  }

  public void setLaunchConfigurationName(String launchConfigurationName) {
    this.launchConfigurationName = launchConfigurationName;
  }


  public AutoScalingGroup launchTemplate(AutoScalingGroupLaunchTemplate launchTemplate) {
    this.launchTemplate = launchTemplate;
    return this;
  }

  /**
   * Get launchTemplate
   * @return launchTemplate
   */
  @javax.annotation.Nullable
  public AutoScalingGroupLaunchTemplate getLaunchTemplate() {
    return launchTemplate;
  }

  public void setLaunchTemplate(AutoScalingGroupLaunchTemplate launchTemplate) {
    this.launchTemplate = launchTemplate;
  }


  public AutoScalingGroup mixedInstancesPolicy(AutoScalingGroupMixedInstancesPolicy mixedInstancesPolicy) {
    this.mixedInstancesPolicy = mixedInstancesPolicy;
    return this;
  }

  /**
   * Get mixedInstancesPolicy
   * @return mixedInstancesPolicy
   */
  @javax.annotation.Nullable
  public AutoScalingGroupMixedInstancesPolicy getMixedInstancesPolicy() {
    return mixedInstancesPolicy;
  }

  public void setMixedInstancesPolicy(AutoScalingGroupMixedInstancesPolicy mixedInstancesPolicy) {
    this.mixedInstancesPolicy = mixedInstancesPolicy;
  }


  public AutoScalingGroup minSize(Integer minSize) {
    this.minSize = minSize;
    return this;
  }

  /**
   * Get minSize
   * @return minSize
   */
  @javax.annotation.Nonnull
  public Integer getMinSize() {
    return minSize;
  }

  public void setMinSize(Integer minSize) {
    this.minSize = minSize;
  }


  public AutoScalingGroup maxSize(Integer maxSize) {
    this.maxSize = maxSize;
    return this;
  }

  /**
   * Get maxSize
   * @return maxSize
   */
  @javax.annotation.Nonnull
  public Integer getMaxSize() {
    return maxSize;
  }

  public void setMaxSize(Integer maxSize) {
    this.maxSize = maxSize;
  }


  public AutoScalingGroup desiredCapacity(Integer desiredCapacity) {
    this.desiredCapacity = desiredCapacity;
    return this;
  }

  /**
   * Get desiredCapacity
   * @return desiredCapacity
   */
  @javax.annotation.Nonnull
  public Integer getDesiredCapacity() {
    return desiredCapacity;
  }

  public void setDesiredCapacity(Integer desiredCapacity) {
    this.desiredCapacity = desiredCapacity;
  }


  public AutoScalingGroup predictedCapacity(Integer predictedCapacity) {
    this.predictedCapacity = predictedCapacity;
    return this;
  }

  /**
   * Get predictedCapacity
   * @return predictedCapacity
   */
  @javax.annotation.Nullable
  public Integer getPredictedCapacity() {
    return predictedCapacity;
  }

  public void setPredictedCapacity(Integer predictedCapacity) {
    this.predictedCapacity = predictedCapacity;
  }


  public AutoScalingGroup defaultCooldown(Integer defaultCooldown) {
    this.defaultCooldown = defaultCooldown;
    return this;
  }

  /**
   * Get defaultCooldown
   * @return defaultCooldown
   */
  @javax.annotation.Nonnull
  public Integer getDefaultCooldown() {
    return defaultCooldown;
  }

  public void setDefaultCooldown(Integer defaultCooldown) {
    this.defaultCooldown = defaultCooldown;
  }


  public AutoScalingGroup availabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  /**
   * Get availabilityZones
   * @return availabilityZones
   */
  @javax.annotation.Nonnull
  public List getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public AutoScalingGroup loadBalancerNames(List loadBalancerNames) {
    this.loadBalancerNames = loadBalancerNames;
    return this;
  }

  /**
   * Get loadBalancerNames
   * @return loadBalancerNames
   */
  @javax.annotation.Nullable
  public List getLoadBalancerNames() {
    return loadBalancerNames;
  }

  public void setLoadBalancerNames(List loadBalancerNames) {
    this.loadBalancerNames = loadBalancerNames;
  }


  public AutoScalingGroup targetGroupARNs(List targetGroupARNs) {
    this.targetGroupARNs = targetGroupARNs;
    return this;
  }

  /**
   * Get targetGroupARNs
   * @return targetGroupARNs
   */
  @javax.annotation.Nullable
  public List getTargetGroupARNs() {
    return targetGroupARNs;
  }

  public void setTargetGroupARNs(List targetGroupARNs) {
    this.targetGroupARNs = targetGroupARNs;
  }


  public AutoScalingGroup healthCheckType(String healthCheckType) {
    this.healthCheckType = healthCheckType;
    return this;
  }

  /**
   * Get healthCheckType
   * @return healthCheckType
   */
  @javax.annotation.Nonnull
  public String getHealthCheckType() {
    return healthCheckType;
  }

  public void setHealthCheckType(String healthCheckType) {
    this.healthCheckType = healthCheckType;
  }


  public AutoScalingGroup healthCheckGracePeriod(Integer healthCheckGracePeriod) {
    this.healthCheckGracePeriod = healthCheckGracePeriod;
    return this;
  }

  /**
   * Get healthCheckGracePeriod
   * @return healthCheckGracePeriod
   */
  @javax.annotation.Nullable
  public Integer getHealthCheckGracePeriod() {
    return healthCheckGracePeriod;
  }

  public void setHealthCheckGracePeriod(Integer healthCheckGracePeriod) {
    this.healthCheckGracePeriod = healthCheckGracePeriod;
  }


  public AutoScalingGroup instances(List instances) {
    this.instances = instances;
    return this;
  }

  /**
   * Get instances
   * @return instances
   */
  @javax.annotation.Nullable
  public List getInstances() {
    return instances;
  }

  public void setInstances(List instances) {
    this.instances = instances;
  }


  public AutoScalingGroup createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public AutoScalingGroup suspendedProcesses(List suspendedProcesses) {
    this.suspendedProcesses = suspendedProcesses;
    return this;
  }

  /**
   * Get suspendedProcesses
   * @return suspendedProcesses
   */
  @javax.annotation.Nullable
  public List getSuspendedProcesses() {
    return suspendedProcesses;
  }

  public void setSuspendedProcesses(List suspendedProcesses) {
    this.suspendedProcesses = suspendedProcesses;
  }


  public AutoScalingGroup placementGroup(String placementGroup) {
    this.placementGroup = placementGroup;
    return this;
  }

  /**
   * Get placementGroup
   * @return placementGroup
   */
  @javax.annotation.Nullable
  public String getPlacementGroup() {
    return placementGroup;
  }

  public void setPlacementGroup(String placementGroup) {
    this.placementGroup = placementGroup;
  }


  public AutoScalingGroup vpCZoneIdentifier(String vpCZoneIdentifier) {
    this.vpCZoneIdentifier = vpCZoneIdentifier;
    return this;
  }

  /**
   * Get vpCZoneIdentifier
   * @return vpCZoneIdentifier
   */
  @javax.annotation.Nullable
  public String getVpCZoneIdentifier() {
    return vpCZoneIdentifier;
  }

  public void setVpCZoneIdentifier(String vpCZoneIdentifier) {
    this.vpCZoneIdentifier = vpCZoneIdentifier;
  }


  public AutoScalingGroup enabledMetrics(List enabledMetrics) {
    this.enabledMetrics = enabledMetrics;
    return this;
  }

  /**
   * Get enabledMetrics
   * @return enabledMetrics
   */
  @javax.annotation.Nullable
  public List getEnabledMetrics() {
    return enabledMetrics;
  }

  public void setEnabledMetrics(List enabledMetrics) {
    this.enabledMetrics = enabledMetrics;
  }


  public AutoScalingGroup status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public AutoScalingGroup tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public AutoScalingGroup terminationPolicies(List terminationPolicies) {
    this.terminationPolicies = terminationPolicies;
    return this;
  }

  /**
   * Get terminationPolicies
   * @return terminationPolicies
   */
  @javax.annotation.Nullable
  public List getTerminationPolicies() {
    return terminationPolicies;
  }

  public void setTerminationPolicies(List terminationPolicies) {
    this.terminationPolicies = terminationPolicies;
  }


  public AutoScalingGroup newInstancesProtectedFromScaleIn(Boolean newInstancesProtectedFromScaleIn) {
    this.newInstancesProtectedFromScaleIn = newInstancesProtectedFromScaleIn;
    return this;
  }

  /**
   * Get newInstancesProtectedFromScaleIn
   * @return newInstancesProtectedFromScaleIn
   */
  @javax.annotation.Nullable
  public Boolean getNewInstancesProtectedFromScaleIn() {
    return newInstancesProtectedFromScaleIn;
  }

  public void setNewInstancesProtectedFromScaleIn(Boolean newInstancesProtectedFromScaleIn) {
    this.newInstancesProtectedFromScaleIn = newInstancesProtectedFromScaleIn;
  }


  public AutoScalingGroup serviceLinkedRoleARN(String serviceLinkedRoleARN) {
    this.serviceLinkedRoleARN = serviceLinkedRoleARN;
    return this;
  }

  /**
   * Get serviceLinkedRoleARN
   * @return serviceLinkedRoleARN
   */
  @javax.annotation.Nullable
  public String getServiceLinkedRoleARN() {
    return serviceLinkedRoleARN;
  }

  public void setServiceLinkedRoleARN(String serviceLinkedRoleARN) {
    this.serviceLinkedRoleARN = serviceLinkedRoleARN;
  }


  public AutoScalingGroup maxInstanceLifetime(Integer maxInstanceLifetime) {
    this.maxInstanceLifetime = maxInstanceLifetime;
    return this;
  }

  /**
   * Get maxInstanceLifetime
   * @return maxInstanceLifetime
   */
  @javax.annotation.Nullable
  public Integer getMaxInstanceLifetime() {
    return maxInstanceLifetime;
  }

  public void setMaxInstanceLifetime(Integer maxInstanceLifetime) {
    this.maxInstanceLifetime = maxInstanceLifetime;
  }


  public AutoScalingGroup capacityRebalance(Boolean capacityRebalance) {
    this.capacityRebalance = capacityRebalance;
    return this;
  }

  /**
   * Get capacityRebalance
   * @return capacityRebalance
   */
  @javax.annotation.Nullable
  public Boolean getCapacityRebalance() {
    return capacityRebalance;
  }

  public void setCapacityRebalance(Boolean capacityRebalance) {
    this.capacityRebalance = capacityRebalance;
  }


  public AutoScalingGroup warmPoolConfiguration(AutoScalingGroupWarmPoolConfiguration warmPoolConfiguration) {
    this.warmPoolConfiguration = warmPoolConfiguration;
    return this;
  }

  /**
   * Get warmPoolConfiguration
   * @return warmPoolConfiguration
   */
  @javax.annotation.Nullable
  public AutoScalingGroupWarmPoolConfiguration getWarmPoolConfiguration() {
    return warmPoolConfiguration;
  }

  public void setWarmPoolConfiguration(AutoScalingGroupWarmPoolConfiguration warmPoolConfiguration) {
    this.warmPoolConfiguration = warmPoolConfiguration;
  }


  public AutoScalingGroup warmPoolSize(Integer warmPoolSize) {
    this.warmPoolSize = warmPoolSize;
    return this;
  }

  /**
   * Get warmPoolSize
   * @return warmPoolSize
   */
  @javax.annotation.Nullable
  public Integer getWarmPoolSize() {
    return warmPoolSize;
  }

  public void setWarmPoolSize(Integer warmPoolSize) {
    this.warmPoolSize = warmPoolSize;
  }


  public AutoScalingGroup context(String context) {
    this.context = context;
    return this;
  }

  /**
   * Get context
   * @return context
   */
  @javax.annotation.Nullable
  public String getContext() {
    return context;
  }

  public void setContext(String context) {
    this.context = context;
  }


  public AutoScalingGroup desiredCapacityType(String desiredCapacityType) {
    this.desiredCapacityType = desiredCapacityType;
    return this;
  }

  /**
   * Get desiredCapacityType
   * @return desiredCapacityType
   */
  @javax.annotation.Nullable
  public String getDesiredCapacityType() {
    return desiredCapacityType;
  }

  public void setDesiredCapacityType(String desiredCapacityType) {
    this.desiredCapacityType = desiredCapacityType;
  }


  public AutoScalingGroup defaultInstanceWarmup(Integer defaultInstanceWarmup) {
    this.defaultInstanceWarmup = defaultInstanceWarmup;
    return this;
  }

  /**
   * Get defaultInstanceWarmup
   * @return defaultInstanceWarmup
   */
  @javax.annotation.Nullable
  public Integer getDefaultInstanceWarmup() {
    return defaultInstanceWarmup;
  }

  public void setDefaultInstanceWarmup(Integer defaultInstanceWarmup) {
    this.defaultInstanceWarmup = defaultInstanceWarmup;
  }


  public AutoScalingGroup trafficSources(List trafficSources) {
    this.trafficSources = trafficSources;
    return this;
  }

  /**
   * Get trafficSources
   * @return trafficSources
   */
  @javax.annotation.Nullable
  public List getTrafficSources() {
    return trafficSources;
  }

  public void setTrafficSources(List trafficSources) {
    this.trafficSources = trafficSources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoScalingGroup autoScalingGroup = (AutoScalingGroup) o;
    return Objects.equals(this.autoScalingGroupName, autoScalingGroup.autoScalingGroupName) &&
        Objects.equals(this.autoScalingGroupARN, autoScalingGroup.autoScalingGroupARN) &&
        Objects.equals(this.launchConfigurationName, autoScalingGroup.launchConfigurationName) &&
        Objects.equals(this.launchTemplate, autoScalingGroup.launchTemplate) &&
        Objects.equals(this.mixedInstancesPolicy, autoScalingGroup.mixedInstancesPolicy) &&
        Objects.equals(this.minSize, autoScalingGroup.minSize) &&
        Objects.equals(this.maxSize, autoScalingGroup.maxSize) &&
        Objects.equals(this.desiredCapacity, autoScalingGroup.desiredCapacity) &&
        Objects.equals(this.predictedCapacity, autoScalingGroup.predictedCapacity) &&
        Objects.equals(this.defaultCooldown, autoScalingGroup.defaultCooldown) &&
        Objects.equals(this.availabilityZones, autoScalingGroup.availabilityZones) &&
        Objects.equals(this.loadBalancerNames, autoScalingGroup.loadBalancerNames) &&
        Objects.equals(this.targetGroupARNs, autoScalingGroup.targetGroupARNs) &&
        Objects.equals(this.healthCheckType, autoScalingGroup.healthCheckType) &&
        Objects.equals(this.healthCheckGracePeriod, autoScalingGroup.healthCheckGracePeriod) &&
        Objects.equals(this.instances, autoScalingGroup.instances) &&
        Objects.equals(this.createdTime, autoScalingGroup.createdTime) &&
        Objects.equals(this.suspendedProcesses, autoScalingGroup.suspendedProcesses) &&
        Objects.equals(this.placementGroup, autoScalingGroup.placementGroup) &&
        Objects.equals(this.vpCZoneIdentifier, autoScalingGroup.vpCZoneIdentifier) &&
        Objects.equals(this.enabledMetrics, autoScalingGroup.enabledMetrics) &&
        Objects.equals(this.status, autoScalingGroup.status) &&
        Objects.equals(this.tags, autoScalingGroup.tags) &&
        Objects.equals(this.terminationPolicies, autoScalingGroup.terminationPolicies) &&
        Objects.equals(this.newInstancesProtectedFromScaleIn, autoScalingGroup.newInstancesProtectedFromScaleIn) &&
        Objects.equals(this.serviceLinkedRoleARN, autoScalingGroup.serviceLinkedRoleARN) &&
        Objects.equals(this.maxInstanceLifetime, autoScalingGroup.maxInstanceLifetime) &&
        Objects.equals(this.capacityRebalance, autoScalingGroup.capacityRebalance) &&
        Objects.equals(this.warmPoolConfiguration, autoScalingGroup.warmPoolConfiguration) &&
        Objects.equals(this.warmPoolSize, autoScalingGroup.warmPoolSize) &&
        Objects.equals(this.context, autoScalingGroup.context) &&
        Objects.equals(this.desiredCapacityType, autoScalingGroup.desiredCapacityType) &&
        Objects.equals(this.defaultInstanceWarmup, autoScalingGroup.defaultInstanceWarmup) &&
        Objects.equals(this.trafficSources, autoScalingGroup.trafficSources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoScalingGroupName, autoScalingGroupARN, launchConfigurationName, launchTemplate, mixedInstancesPolicy, minSize, maxSize, desiredCapacity, predictedCapacity, defaultCooldown, availabilityZones, loadBalancerNames, targetGroupARNs, healthCheckType, healthCheckGracePeriod, instances, createdTime, suspendedProcesses, placementGroup, vpCZoneIdentifier, enabledMetrics, status, tags, terminationPolicies, newInstancesProtectedFromScaleIn, serviceLinkedRoleARN, maxInstanceLifetime, capacityRebalance, warmPoolConfiguration, warmPoolSize, context, desiredCapacityType, defaultInstanceWarmup, trafficSources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoScalingGroup {\n");
    sb.append("    autoScalingGroupName: ").append(toIndentedString(autoScalingGroupName)).append("\n");
    sb.append("    autoScalingGroupARN: ").append(toIndentedString(autoScalingGroupARN)).append("\n");
    sb.append("    launchConfigurationName: ").append(toIndentedString(launchConfigurationName)).append("\n");
    sb.append("    launchTemplate: ").append(toIndentedString(launchTemplate)).append("\n");
    sb.append("    mixedInstancesPolicy: ").append(toIndentedString(mixedInstancesPolicy)).append("\n");
    sb.append("    minSize: ").append(toIndentedString(minSize)).append("\n");
    sb.append("    maxSize: ").append(toIndentedString(maxSize)).append("\n");
    sb.append("    desiredCapacity: ").append(toIndentedString(desiredCapacity)).append("\n");
    sb.append("    predictedCapacity: ").append(toIndentedString(predictedCapacity)).append("\n");
    sb.append("    defaultCooldown: ").append(toIndentedString(defaultCooldown)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    loadBalancerNames: ").append(toIndentedString(loadBalancerNames)).append("\n");
    sb.append("    targetGroupARNs: ").append(toIndentedString(targetGroupARNs)).append("\n");
    sb.append("    healthCheckType: ").append(toIndentedString(healthCheckType)).append("\n");
    sb.append("    healthCheckGracePeriod: ").append(toIndentedString(healthCheckGracePeriod)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    suspendedProcesses: ").append(toIndentedString(suspendedProcesses)).append("\n");
    sb.append("    placementGroup: ").append(toIndentedString(placementGroup)).append("\n");
    sb.append("    vpCZoneIdentifier: ").append(toIndentedString(vpCZoneIdentifier)).append("\n");
    sb.append("    enabledMetrics: ").append(toIndentedString(enabledMetrics)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    terminationPolicies: ").append(toIndentedString(terminationPolicies)).append("\n");
    sb.append("    newInstancesProtectedFromScaleIn: ").append(toIndentedString(newInstancesProtectedFromScaleIn)).append("\n");
    sb.append("    serviceLinkedRoleARN: ").append(toIndentedString(serviceLinkedRoleARN)).append("\n");
    sb.append("    maxInstanceLifetime: ").append(toIndentedString(maxInstanceLifetime)).append("\n");
    sb.append("    capacityRebalance: ").append(toIndentedString(capacityRebalance)).append("\n");
    sb.append("    warmPoolConfiguration: ").append(toIndentedString(warmPoolConfiguration)).append("\n");
    sb.append("    warmPoolSize: ").append(toIndentedString(warmPoolSize)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    desiredCapacityType: ").append(toIndentedString(desiredCapacityType)).append("\n");
    sb.append("    defaultInstanceWarmup: ").append(toIndentedString(defaultInstanceWarmup)).append("\n");
    sb.append("    trafficSources: ").append(toIndentedString(trafficSources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutoScalingGroupName");
    openapiFields.add("AutoScalingGroupARN");
    openapiFields.add("LaunchConfigurationName");
    openapiFields.add("LaunchTemplate");
    openapiFields.add("MixedInstancesPolicy");
    openapiFields.add("MinSize");
    openapiFields.add("MaxSize");
    openapiFields.add("DesiredCapacity");
    openapiFields.add("PredictedCapacity");
    openapiFields.add("DefaultCooldown");
    openapiFields.add("AvailabilityZones");
    openapiFields.add("LoadBalancerNames");
    openapiFields.add("TargetGroupARNs");
    openapiFields.add("HealthCheckType");
    openapiFields.add("HealthCheckGracePeriod");
    openapiFields.add("Instances");
    openapiFields.add("CreatedTime");
    openapiFields.add("SuspendedProcesses");
    openapiFields.add("PlacementGroup");
    openapiFields.add("VPCZoneIdentifier");
    openapiFields.add("EnabledMetrics");
    openapiFields.add("Status");
    openapiFields.add("Tags");
    openapiFields.add("TerminationPolicies");
    openapiFields.add("NewInstancesProtectedFromScaleIn");
    openapiFields.add("ServiceLinkedRoleARN");
    openapiFields.add("MaxInstanceLifetime");
    openapiFields.add("CapacityRebalance");
    openapiFields.add("WarmPoolConfiguration");
    openapiFields.add("WarmPoolSize");
    openapiFields.add("Context");
    openapiFields.add("DesiredCapacityType");
    openapiFields.add("DefaultInstanceWarmup");
    openapiFields.add("TrafficSources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AutoScalingGroupName");
    openapiRequiredFields.add("MinSize");
    openapiRequiredFields.add("MaxSize");
    openapiRequiredFields.add("DesiredCapacity");
    openapiRequiredFields.add("DefaultCooldown");
    openapiRequiredFields.add("AvailabilityZones");
    openapiRequiredFields.add("HealthCheckType");
    openapiRequiredFields.add("CreatedTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutoScalingGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutoScalingGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoScalingGroup is not found in the empty JSON string", AutoScalingGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutoScalingGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoScalingGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AutoScalingGroup.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `AutoScalingGroupName`
      String.validateJsonElement(jsonObj.get("AutoScalingGroupName"));
      // validate the optional field `AutoScalingGroupARN`
      if (jsonObj.get("AutoScalingGroupARN") != null && !jsonObj.get("AutoScalingGroupARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AutoScalingGroupARN"));
      }
      // validate the optional field `LaunchConfigurationName`
      if (jsonObj.get("LaunchConfigurationName") != null && !jsonObj.get("LaunchConfigurationName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LaunchConfigurationName"));
      }
      // validate the optional field `LaunchTemplate`
      if (jsonObj.get("LaunchTemplate") != null && !jsonObj.get("LaunchTemplate").isJsonNull()) {
        AutoScalingGroupLaunchTemplate.validateJsonElement(jsonObj.get("LaunchTemplate"));
      }
      // validate the optional field `MixedInstancesPolicy`
      if (jsonObj.get("MixedInstancesPolicy") != null && !jsonObj.get("MixedInstancesPolicy").isJsonNull()) {
        AutoScalingGroupMixedInstancesPolicy.validateJsonElement(jsonObj.get("MixedInstancesPolicy"));
      }
      // validate the required field `MinSize`
      Integer.validateJsonElement(jsonObj.get("MinSize"));
      // validate the required field `MaxSize`
      Integer.validateJsonElement(jsonObj.get("MaxSize"));
      // validate the required field `DesiredCapacity`
      Integer.validateJsonElement(jsonObj.get("DesiredCapacity"));
      // validate the optional field `PredictedCapacity`
      if (jsonObj.get("PredictedCapacity") != null && !jsonObj.get("PredictedCapacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PredictedCapacity"));
      }
      // validate the required field `DefaultCooldown`
      Integer.validateJsonElement(jsonObj.get("DefaultCooldown"));
      // validate the required field `AvailabilityZones`
      List.validateJsonElement(jsonObj.get("AvailabilityZones"));
      // validate the optional field `LoadBalancerNames`
      if (jsonObj.get("LoadBalancerNames") != null && !jsonObj.get("LoadBalancerNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LoadBalancerNames"));
      }
      // validate the optional field `TargetGroupARNs`
      if (jsonObj.get("TargetGroupARNs") != null && !jsonObj.get("TargetGroupARNs").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TargetGroupARNs"));
      }
      // validate the required field `HealthCheckType`
      String.validateJsonElement(jsonObj.get("HealthCheckType"));
      // validate the optional field `HealthCheckGracePeriod`
      if (jsonObj.get("HealthCheckGracePeriod") != null && !jsonObj.get("HealthCheckGracePeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("HealthCheckGracePeriod"));
      }
      // validate the optional field `Instances`
      if (jsonObj.get("Instances") != null && !jsonObj.get("Instances").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Instances"));
      }
      // validate the required field `CreatedTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTime"));
      // validate the optional field `SuspendedProcesses`
      if (jsonObj.get("SuspendedProcesses") != null && !jsonObj.get("SuspendedProcesses").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SuspendedProcesses"));
      }
      // validate the optional field `PlacementGroup`
      if (jsonObj.get("PlacementGroup") != null && !jsonObj.get("PlacementGroup").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlacementGroup"));
      }
      // validate the optional field `VPCZoneIdentifier`
      if (jsonObj.get("VPCZoneIdentifier") != null && !jsonObj.get("VPCZoneIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VPCZoneIdentifier"));
      }
      // validate the optional field `EnabledMetrics`
      if (jsonObj.get("EnabledMetrics") != null && !jsonObj.get("EnabledMetrics").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EnabledMetrics"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `TerminationPolicies`
      if (jsonObj.get("TerminationPolicies") != null && !jsonObj.get("TerminationPolicies").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TerminationPolicies"));
      }
      // validate the optional field `NewInstancesProtectedFromScaleIn`
      if (jsonObj.get("NewInstancesProtectedFromScaleIn") != null && !jsonObj.get("NewInstancesProtectedFromScaleIn").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("NewInstancesProtectedFromScaleIn"));
      }
      // validate the optional field `ServiceLinkedRoleARN`
      if (jsonObj.get("ServiceLinkedRoleARN") != null && !jsonObj.get("ServiceLinkedRoleARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceLinkedRoleARN"));
      }
      // validate the optional field `MaxInstanceLifetime`
      if (jsonObj.get("MaxInstanceLifetime") != null && !jsonObj.get("MaxInstanceLifetime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxInstanceLifetime"));
      }
      // validate the optional field `CapacityRebalance`
      if (jsonObj.get("CapacityRebalance") != null && !jsonObj.get("CapacityRebalance").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CapacityRebalance"));
      }
      // validate the optional field `WarmPoolConfiguration`
      if (jsonObj.get("WarmPoolConfiguration") != null && !jsonObj.get("WarmPoolConfiguration").isJsonNull()) {
        AutoScalingGroupWarmPoolConfiguration.validateJsonElement(jsonObj.get("WarmPoolConfiguration"));
      }
      // validate the optional field `WarmPoolSize`
      if (jsonObj.get("WarmPoolSize") != null && !jsonObj.get("WarmPoolSize").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("WarmPoolSize"));
      }
      // validate the optional field `Context`
      if (jsonObj.get("Context") != null && !jsonObj.get("Context").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Context"));
      }
      // validate the optional field `DesiredCapacityType`
      if (jsonObj.get("DesiredCapacityType") != null && !jsonObj.get("DesiredCapacityType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DesiredCapacityType"));
      }
      // validate the optional field `DefaultInstanceWarmup`
      if (jsonObj.get("DefaultInstanceWarmup") != null && !jsonObj.get("DefaultInstanceWarmup").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DefaultInstanceWarmup"));
      }
      // validate the optional field `TrafficSources`
      if (jsonObj.get("TrafficSources") != null && !jsonObj.get("TrafficSources").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TrafficSources"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoScalingGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoScalingGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoScalingGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoScalingGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoScalingGroup>() {
           @Override
           public void write(JsonWriter out, AutoScalingGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoScalingGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutoScalingGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutoScalingGroup
   * @throws IOException if the JSON string is invalid with respect to AutoScalingGroup
   */
  public static AutoScalingGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoScalingGroup.class);
  }

  /**
   * Convert an instance of AutoScalingGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

