/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ScalingActivityStatusCode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes scaling activity, which is a long-running process that represents a change to your Auto Scaling group, such as changing its size or replacing an instance.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Activity {
  public static final String SERIALIZED_NAME_ACTIVITY_ID = "ActivityId";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_ID)
  private String activityId;

  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME = "AutoScalingGroupName";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME)
  private String autoScalingGroupName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CAUSE = "Cause";
  @SerializedName(SERIALIZED_NAME_CAUSE)
  private String cause;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_STATUS_CODE = "StatusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private ScalingActivityStatusCode statusCode;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_PROGRESS = "Progress";
  @SerializedName(SERIALIZED_NAME_PROGRESS)
  private Integer progress;

  public static final String SERIALIZED_NAME_DETAILS = "Details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private String details;

  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUP_STATE = "AutoScalingGroupState";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUP_STATE)
  private String autoScalingGroupState;

  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUP_A_R_N = "AutoScalingGroupARN";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUP_A_R_N)
  private String autoScalingGroupARN;

  public Activity() {
  }

  public Activity activityId(String activityId) {
    this.activityId = activityId;
    return this;
  }

  /**
   * Get activityId
   * @return activityId
   */
  @javax.annotation.Nonnull
  public String getActivityId() {
    return activityId;
  }

  public void setActivityId(String activityId) {
    this.activityId = activityId;
  }


  public Activity autoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
    return this;
  }

  /**
   * Get autoScalingGroupName
   * @return autoScalingGroupName
   */
  @javax.annotation.Nonnull
  public String getAutoScalingGroupName() {
    return autoScalingGroupName;
  }

  public void setAutoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
  }


  public Activity description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Activity cause(String cause) {
    this.cause = cause;
    return this;
  }

  /**
   * Get cause
   * @return cause
   */
  @javax.annotation.Nonnull
  public String getCause() {
    return cause;
  }

  public void setCause(String cause) {
    this.cause = cause;
  }


  public Activity startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public Activity endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public Activity statusCode(ScalingActivityStatusCode statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Get statusCode
   * @return statusCode
   */
  @javax.annotation.Nonnull
  public ScalingActivityStatusCode getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(ScalingActivityStatusCode statusCode) {
    this.statusCode = statusCode;
  }


  public Activity statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public Activity progress(Integer progress) {
    this.progress = progress;
    return this;
  }

  /**
   * Get progress
   * @return progress
   */
  @javax.annotation.Nullable
  public Integer getProgress() {
    return progress;
  }

  public void setProgress(Integer progress) {
    this.progress = progress;
  }


  public Activity details(String details) {
    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   */
  @javax.annotation.Nullable
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }


  public Activity autoScalingGroupState(String autoScalingGroupState) {
    this.autoScalingGroupState = autoScalingGroupState;
    return this;
  }

  /**
   * Get autoScalingGroupState
   * @return autoScalingGroupState
   */
  @javax.annotation.Nullable
  public String getAutoScalingGroupState() {
    return autoScalingGroupState;
  }

  public void setAutoScalingGroupState(String autoScalingGroupState) {
    this.autoScalingGroupState = autoScalingGroupState;
  }


  public Activity autoScalingGroupARN(String autoScalingGroupARN) {
    this.autoScalingGroupARN = autoScalingGroupARN;
    return this;
  }

  /**
   * Get autoScalingGroupARN
   * @return autoScalingGroupARN
   */
  @javax.annotation.Nullable
  public String getAutoScalingGroupARN() {
    return autoScalingGroupARN;
  }

  public void setAutoScalingGroupARN(String autoScalingGroupARN) {
    this.autoScalingGroupARN = autoScalingGroupARN;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Activity activity = (Activity) o;
    return Objects.equals(this.activityId, activity.activityId) &&
        Objects.equals(this.autoScalingGroupName, activity.autoScalingGroupName) &&
        Objects.equals(this.description, activity.description) &&
        Objects.equals(this.cause, activity.cause) &&
        Objects.equals(this.startTime, activity.startTime) &&
        Objects.equals(this.endTime, activity.endTime) &&
        Objects.equals(this.statusCode, activity.statusCode) &&
        Objects.equals(this.statusMessage, activity.statusMessage) &&
        Objects.equals(this.progress, activity.progress) &&
        Objects.equals(this.details, activity.details) &&
        Objects.equals(this.autoScalingGroupState, activity.autoScalingGroupState) &&
        Objects.equals(this.autoScalingGroupARN, activity.autoScalingGroupARN);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityId, autoScalingGroupName, description, cause, startTime, endTime, statusCode, statusMessage, progress, details, autoScalingGroupState, autoScalingGroupARN);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Activity {\n");
    sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
    sb.append("    autoScalingGroupName: ").append(toIndentedString(autoScalingGroupName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    autoScalingGroupState: ").append(toIndentedString(autoScalingGroupState)).append("\n");
    sb.append("    autoScalingGroupARN: ").append(toIndentedString(autoScalingGroupARN)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ActivityId");
    openapiFields.add("AutoScalingGroupName");
    openapiFields.add("Description");
    openapiFields.add("Cause");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("StatusCode");
    openapiFields.add("StatusMessage");
    openapiFields.add("Progress");
    openapiFields.add("Details");
    openapiFields.add("AutoScalingGroupState");
    openapiFields.add("AutoScalingGroupARN");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ActivityId");
    openapiRequiredFields.add("AutoScalingGroupName");
    openapiRequiredFields.add("Cause");
    openapiRequiredFields.add("StartTime");
    openapiRequiredFields.add("StatusCode");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Activity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Activity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Activity is not found in the empty JSON string", Activity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Activity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Activity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Activity.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ActivityId`
      String.validateJsonElement(jsonObj.get("ActivityId"));
      // validate the required field `AutoScalingGroupName`
      String.validateJsonElement(jsonObj.get("AutoScalingGroupName"));
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the required field `Cause`
      String.validateJsonElement(jsonObj.get("Cause"));
      // validate the required field `StartTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the required field `StatusCode`
      ScalingActivityStatusCode.validateJsonElement(jsonObj.get("StatusCode"));
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
      // validate the optional field `Progress`
      if (jsonObj.get("Progress") != null && !jsonObj.get("Progress").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Progress"));
      }
      // validate the optional field `Details`
      if (jsonObj.get("Details") != null && !jsonObj.get("Details").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Details"));
      }
      // validate the optional field `AutoScalingGroupState`
      if (jsonObj.get("AutoScalingGroupState") != null && !jsonObj.get("AutoScalingGroupState").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AutoScalingGroupState"));
      }
      // validate the optional field `AutoScalingGroupARN`
      if (jsonObj.get("AutoScalingGroupARN") != null && !jsonObj.get("AutoScalingGroupARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AutoScalingGroupARN"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Activity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Activity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Activity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Activity.class));

       return (TypeAdapter<T>) new TypeAdapter<Activity>() {
           @Override
           public void write(JsonWriter out, Activity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Activity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Activity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Activity
   * @throws IOException if the JSON string is invalid with respect to Activity
   */
  public static Activity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Activity.class);
  }

  /**
   * Convert an instance of Activity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

