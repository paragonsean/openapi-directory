/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PredictiveScalingMetricSpecificationCustomizedCapacityMetricSpecification;
import org.openapitools.client.model.PredictiveScalingMetricSpecificationCustomizedLoadMetricSpecification;
import org.openapitools.client.model.PredictiveScalingMetricSpecificationCustomizedScalingMetricSpecification;
import org.openapitools.client.model.PredictiveScalingMetricSpecificationPredefinedLoadMetricSpecification;
import org.openapitools.client.model.PredictiveScalingMetricSpecificationPredefinedMetricPairSpecification;
import org.openapitools.client.model.PredictiveScalingMetricSpecificationPredefinedScalingMetricSpecification;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LoadForecastMetricSpecification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LoadForecastMetricSpecification {
  public static final String SERIALIZED_NAME_TARGET_VALUE = "TargetValue";
  @SerializedName(SERIALIZED_NAME_TARGET_VALUE)
  private Double targetValue;

  public static final String SERIALIZED_NAME_PREDEFINED_METRIC_PAIR_SPECIFICATION = "PredefinedMetricPairSpecification";
  @SerializedName(SERIALIZED_NAME_PREDEFINED_METRIC_PAIR_SPECIFICATION)
  private PredictiveScalingMetricSpecificationPredefinedMetricPairSpecification predefinedMetricPairSpecification;

  public static final String SERIALIZED_NAME_PREDEFINED_SCALING_METRIC_SPECIFICATION = "PredefinedScalingMetricSpecification";
  @SerializedName(SERIALIZED_NAME_PREDEFINED_SCALING_METRIC_SPECIFICATION)
  private PredictiveScalingMetricSpecificationPredefinedScalingMetricSpecification predefinedScalingMetricSpecification;

  public static final String SERIALIZED_NAME_PREDEFINED_LOAD_METRIC_SPECIFICATION = "PredefinedLoadMetricSpecification";
  @SerializedName(SERIALIZED_NAME_PREDEFINED_LOAD_METRIC_SPECIFICATION)
  private PredictiveScalingMetricSpecificationPredefinedLoadMetricSpecification predefinedLoadMetricSpecification;

  public static final String SERIALIZED_NAME_CUSTOMIZED_SCALING_METRIC_SPECIFICATION = "CustomizedScalingMetricSpecification";
  @SerializedName(SERIALIZED_NAME_CUSTOMIZED_SCALING_METRIC_SPECIFICATION)
  private PredictiveScalingMetricSpecificationCustomizedScalingMetricSpecification customizedScalingMetricSpecification;

  public static final String SERIALIZED_NAME_CUSTOMIZED_LOAD_METRIC_SPECIFICATION = "CustomizedLoadMetricSpecification";
  @SerializedName(SERIALIZED_NAME_CUSTOMIZED_LOAD_METRIC_SPECIFICATION)
  private PredictiveScalingMetricSpecificationCustomizedLoadMetricSpecification customizedLoadMetricSpecification;

  public static final String SERIALIZED_NAME_CUSTOMIZED_CAPACITY_METRIC_SPECIFICATION = "CustomizedCapacityMetricSpecification";
  @SerializedName(SERIALIZED_NAME_CUSTOMIZED_CAPACITY_METRIC_SPECIFICATION)
  private PredictiveScalingMetricSpecificationCustomizedCapacityMetricSpecification customizedCapacityMetricSpecification;

  public LoadForecastMetricSpecification() {
  }

  public LoadForecastMetricSpecification targetValue(Double targetValue) {
    this.targetValue = targetValue;
    return this;
  }

  /**
   * Get targetValue
   * @return targetValue
   */
  @javax.annotation.Nonnull
  public Double getTargetValue() {
    return targetValue;
  }

  public void setTargetValue(Double targetValue) {
    this.targetValue = targetValue;
  }


  public LoadForecastMetricSpecification predefinedMetricPairSpecification(PredictiveScalingMetricSpecificationPredefinedMetricPairSpecification predefinedMetricPairSpecification) {
    this.predefinedMetricPairSpecification = predefinedMetricPairSpecification;
    return this;
  }

  /**
   * Get predefinedMetricPairSpecification
   * @return predefinedMetricPairSpecification
   */
  @javax.annotation.Nullable
  public PredictiveScalingMetricSpecificationPredefinedMetricPairSpecification getPredefinedMetricPairSpecification() {
    return predefinedMetricPairSpecification;
  }

  public void setPredefinedMetricPairSpecification(PredictiveScalingMetricSpecificationPredefinedMetricPairSpecification predefinedMetricPairSpecification) {
    this.predefinedMetricPairSpecification = predefinedMetricPairSpecification;
  }


  public LoadForecastMetricSpecification predefinedScalingMetricSpecification(PredictiveScalingMetricSpecificationPredefinedScalingMetricSpecification predefinedScalingMetricSpecification) {
    this.predefinedScalingMetricSpecification = predefinedScalingMetricSpecification;
    return this;
  }

  /**
   * Get predefinedScalingMetricSpecification
   * @return predefinedScalingMetricSpecification
   */
  @javax.annotation.Nullable
  public PredictiveScalingMetricSpecificationPredefinedScalingMetricSpecification getPredefinedScalingMetricSpecification() {
    return predefinedScalingMetricSpecification;
  }

  public void setPredefinedScalingMetricSpecification(PredictiveScalingMetricSpecificationPredefinedScalingMetricSpecification predefinedScalingMetricSpecification) {
    this.predefinedScalingMetricSpecification = predefinedScalingMetricSpecification;
  }


  public LoadForecastMetricSpecification predefinedLoadMetricSpecification(PredictiveScalingMetricSpecificationPredefinedLoadMetricSpecification predefinedLoadMetricSpecification) {
    this.predefinedLoadMetricSpecification = predefinedLoadMetricSpecification;
    return this;
  }

  /**
   * Get predefinedLoadMetricSpecification
   * @return predefinedLoadMetricSpecification
   */
  @javax.annotation.Nullable
  public PredictiveScalingMetricSpecificationPredefinedLoadMetricSpecification getPredefinedLoadMetricSpecification() {
    return predefinedLoadMetricSpecification;
  }

  public void setPredefinedLoadMetricSpecification(PredictiveScalingMetricSpecificationPredefinedLoadMetricSpecification predefinedLoadMetricSpecification) {
    this.predefinedLoadMetricSpecification = predefinedLoadMetricSpecification;
  }


  public LoadForecastMetricSpecification customizedScalingMetricSpecification(PredictiveScalingMetricSpecificationCustomizedScalingMetricSpecification customizedScalingMetricSpecification) {
    this.customizedScalingMetricSpecification = customizedScalingMetricSpecification;
    return this;
  }

  /**
   * Get customizedScalingMetricSpecification
   * @return customizedScalingMetricSpecification
   */
  @javax.annotation.Nullable
  public PredictiveScalingMetricSpecificationCustomizedScalingMetricSpecification getCustomizedScalingMetricSpecification() {
    return customizedScalingMetricSpecification;
  }

  public void setCustomizedScalingMetricSpecification(PredictiveScalingMetricSpecificationCustomizedScalingMetricSpecification customizedScalingMetricSpecification) {
    this.customizedScalingMetricSpecification = customizedScalingMetricSpecification;
  }


  public LoadForecastMetricSpecification customizedLoadMetricSpecification(PredictiveScalingMetricSpecificationCustomizedLoadMetricSpecification customizedLoadMetricSpecification) {
    this.customizedLoadMetricSpecification = customizedLoadMetricSpecification;
    return this;
  }

  /**
   * Get customizedLoadMetricSpecification
   * @return customizedLoadMetricSpecification
   */
  @javax.annotation.Nullable
  public PredictiveScalingMetricSpecificationCustomizedLoadMetricSpecification getCustomizedLoadMetricSpecification() {
    return customizedLoadMetricSpecification;
  }

  public void setCustomizedLoadMetricSpecification(PredictiveScalingMetricSpecificationCustomizedLoadMetricSpecification customizedLoadMetricSpecification) {
    this.customizedLoadMetricSpecification = customizedLoadMetricSpecification;
  }


  public LoadForecastMetricSpecification customizedCapacityMetricSpecification(PredictiveScalingMetricSpecificationCustomizedCapacityMetricSpecification customizedCapacityMetricSpecification) {
    this.customizedCapacityMetricSpecification = customizedCapacityMetricSpecification;
    return this;
  }

  /**
   * Get customizedCapacityMetricSpecification
   * @return customizedCapacityMetricSpecification
   */
  @javax.annotation.Nullable
  public PredictiveScalingMetricSpecificationCustomizedCapacityMetricSpecification getCustomizedCapacityMetricSpecification() {
    return customizedCapacityMetricSpecification;
  }

  public void setCustomizedCapacityMetricSpecification(PredictiveScalingMetricSpecificationCustomizedCapacityMetricSpecification customizedCapacityMetricSpecification) {
    this.customizedCapacityMetricSpecification = customizedCapacityMetricSpecification;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadForecastMetricSpecification loadForecastMetricSpecification = (LoadForecastMetricSpecification) o;
    return Objects.equals(this.targetValue, loadForecastMetricSpecification.targetValue) &&
        Objects.equals(this.predefinedMetricPairSpecification, loadForecastMetricSpecification.predefinedMetricPairSpecification) &&
        Objects.equals(this.predefinedScalingMetricSpecification, loadForecastMetricSpecification.predefinedScalingMetricSpecification) &&
        Objects.equals(this.predefinedLoadMetricSpecification, loadForecastMetricSpecification.predefinedLoadMetricSpecification) &&
        Objects.equals(this.customizedScalingMetricSpecification, loadForecastMetricSpecification.customizedScalingMetricSpecification) &&
        Objects.equals(this.customizedLoadMetricSpecification, loadForecastMetricSpecification.customizedLoadMetricSpecification) &&
        Objects.equals(this.customizedCapacityMetricSpecification, loadForecastMetricSpecification.customizedCapacityMetricSpecification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetValue, predefinedMetricPairSpecification, predefinedScalingMetricSpecification, predefinedLoadMetricSpecification, customizedScalingMetricSpecification, customizedLoadMetricSpecification, customizedCapacityMetricSpecification);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadForecastMetricSpecification {\n");
    sb.append("    targetValue: ").append(toIndentedString(targetValue)).append("\n");
    sb.append("    predefinedMetricPairSpecification: ").append(toIndentedString(predefinedMetricPairSpecification)).append("\n");
    sb.append("    predefinedScalingMetricSpecification: ").append(toIndentedString(predefinedScalingMetricSpecification)).append("\n");
    sb.append("    predefinedLoadMetricSpecification: ").append(toIndentedString(predefinedLoadMetricSpecification)).append("\n");
    sb.append("    customizedScalingMetricSpecification: ").append(toIndentedString(customizedScalingMetricSpecification)).append("\n");
    sb.append("    customizedLoadMetricSpecification: ").append(toIndentedString(customizedLoadMetricSpecification)).append("\n");
    sb.append("    customizedCapacityMetricSpecification: ").append(toIndentedString(customizedCapacityMetricSpecification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TargetValue");
    openapiFields.add("PredefinedMetricPairSpecification");
    openapiFields.add("PredefinedScalingMetricSpecification");
    openapiFields.add("PredefinedLoadMetricSpecification");
    openapiFields.add("CustomizedScalingMetricSpecification");
    openapiFields.add("CustomizedLoadMetricSpecification");
    openapiFields.add("CustomizedCapacityMetricSpecification");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TargetValue");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LoadForecastMetricSpecification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LoadForecastMetricSpecification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LoadForecastMetricSpecification is not found in the empty JSON string", LoadForecastMetricSpecification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LoadForecastMetricSpecification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LoadForecastMetricSpecification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : LoadForecastMetricSpecification.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `TargetValue`
      Double.validateJsonElement(jsonObj.get("TargetValue"));
      // validate the optional field `PredefinedMetricPairSpecification`
      if (jsonObj.get("PredefinedMetricPairSpecification") != null && !jsonObj.get("PredefinedMetricPairSpecification").isJsonNull()) {
        PredictiveScalingMetricSpecificationPredefinedMetricPairSpecification.validateJsonElement(jsonObj.get("PredefinedMetricPairSpecification"));
      }
      // validate the optional field `PredefinedScalingMetricSpecification`
      if (jsonObj.get("PredefinedScalingMetricSpecification") != null && !jsonObj.get("PredefinedScalingMetricSpecification").isJsonNull()) {
        PredictiveScalingMetricSpecificationPredefinedScalingMetricSpecification.validateJsonElement(jsonObj.get("PredefinedScalingMetricSpecification"));
      }
      // validate the optional field `PredefinedLoadMetricSpecification`
      if (jsonObj.get("PredefinedLoadMetricSpecification") != null && !jsonObj.get("PredefinedLoadMetricSpecification").isJsonNull()) {
        PredictiveScalingMetricSpecificationPredefinedLoadMetricSpecification.validateJsonElement(jsonObj.get("PredefinedLoadMetricSpecification"));
      }
      // validate the optional field `CustomizedScalingMetricSpecification`
      if (jsonObj.get("CustomizedScalingMetricSpecification") != null && !jsonObj.get("CustomizedScalingMetricSpecification").isJsonNull()) {
        PredictiveScalingMetricSpecificationCustomizedScalingMetricSpecification.validateJsonElement(jsonObj.get("CustomizedScalingMetricSpecification"));
      }
      // validate the optional field `CustomizedLoadMetricSpecification`
      if (jsonObj.get("CustomizedLoadMetricSpecification") != null && !jsonObj.get("CustomizedLoadMetricSpecification").isJsonNull()) {
        PredictiveScalingMetricSpecificationCustomizedLoadMetricSpecification.validateJsonElement(jsonObj.get("CustomizedLoadMetricSpecification"));
      }
      // validate the optional field `CustomizedCapacityMetricSpecification`
      if (jsonObj.get("CustomizedCapacityMetricSpecification") != null && !jsonObj.get("CustomizedCapacityMetricSpecification").isJsonNull()) {
        PredictiveScalingMetricSpecificationCustomizedCapacityMetricSpecification.validateJsonElement(jsonObj.get("CustomizedCapacityMetricSpecification"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoadForecastMetricSpecification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoadForecastMetricSpecification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoadForecastMetricSpecification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoadForecastMetricSpecification.class));

       return (TypeAdapter<T>) new TypeAdapter<LoadForecastMetricSpecification>() {
           @Override
           public void write(JsonWriter out, LoadForecastMetricSpecification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoadForecastMetricSpecification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LoadForecastMetricSpecification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoadForecastMetricSpecification
   * @throws IOException if the JSON string is invalid with respect to LoadForecastMetricSpecification
   */
  public static LoadForecastMetricSpecification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoadForecastMetricSpecification.class);
  }

  /**
   * Convert an instance of LoadForecastMetricSpecification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

