/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PredictiveScalingMaxCapacityBreachBehavior;
import org.openapitools.client.model.PredictiveScalingMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutScalingPolicyTypePredictiveScalingConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutScalingPolicyTypePredictiveScalingConfiguration {
  public static final String SERIALIZED_NAME_METRIC_SPECIFICATIONS = "MetricSpecifications";
  @SerializedName(SERIALIZED_NAME_METRIC_SPECIFICATIONS)
  private List metricSpecifications;

  public static final String SERIALIZED_NAME_MODE = "Mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private PredictiveScalingMode mode;

  public static final String SERIALIZED_NAME_SCHEDULING_BUFFER_TIME = "SchedulingBufferTime";
  @SerializedName(SERIALIZED_NAME_SCHEDULING_BUFFER_TIME)
  private Integer schedulingBufferTime;

  public static final String SERIALIZED_NAME_MAX_CAPACITY_BREACH_BEHAVIOR = "MaxCapacityBreachBehavior";
  @SerializedName(SERIALIZED_NAME_MAX_CAPACITY_BREACH_BEHAVIOR)
  private PredictiveScalingMaxCapacityBreachBehavior maxCapacityBreachBehavior;

  public static final String SERIALIZED_NAME_MAX_CAPACITY_BUFFER = "MaxCapacityBuffer";
  @SerializedName(SERIALIZED_NAME_MAX_CAPACITY_BUFFER)
  private Integer maxCapacityBuffer;

  public PutScalingPolicyTypePredictiveScalingConfiguration() {
  }

  public PutScalingPolicyTypePredictiveScalingConfiguration metricSpecifications(List metricSpecifications) {
    this.metricSpecifications = metricSpecifications;
    return this;
  }

  /**
   * Get metricSpecifications
   * @return metricSpecifications
   */
  @javax.annotation.Nonnull
  public List getMetricSpecifications() {
    return metricSpecifications;
  }

  public void setMetricSpecifications(List metricSpecifications) {
    this.metricSpecifications = metricSpecifications;
  }


  public PutScalingPolicyTypePredictiveScalingConfiguration mode(PredictiveScalingMode mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public PredictiveScalingMode getMode() {
    return mode;
  }

  public void setMode(PredictiveScalingMode mode) {
    this.mode = mode;
  }


  public PutScalingPolicyTypePredictiveScalingConfiguration schedulingBufferTime(Integer schedulingBufferTime) {
    this.schedulingBufferTime = schedulingBufferTime;
    return this;
  }

  /**
   * Get schedulingBufferTime
   * @return schedulingBufferTime
   */
  @javax.annotation.Nullable
  public Integer getSchedulingBufferTime() {
    return schedulingBufferTime;
  }

  public void setSchedulingBufferTime(Integer schedulingBufferTime) {
    this.schedulingBufferTime = schedulingBufferTime;
  }


  public PutScalingPolicyTypePredictiveScalingConfiguration maxCapacityBreachBehavior(PredictiveScalingMaxCapacityBreachBehavior maxCapacityBreachBehavior) {
    this.maxCapacityBreachBehavior = maxCapacityBreachBehavior;
    return this;
  }

  /**
   * Get maxCapacityBreachBehavior
   * @return maxCapacityBreachBehavior
   */
  @javax.annotation.Nullable
  public PredictiveScalingMaxCapacityBreachBehavior getMaxCapacityBreachBehavior() {
    return maxCapacityBreachBehavior;
  }

  public void setMaxCapacityBreachBehavior(PredictiveScalingMaxCapacityBreachBehavior maxCapacityBreachBehavior) {
    this.maxCapacityBreachBehavior = maxCapacityBreachBehavior;
  }


  public PutScalingPolicyTypePredictiveScalingConfiguration maxCapacityBuffer(Integer maxCapacityBuffer) {
    this.maxCapacityBuffer = maxCapacityBuffer;
    return this;
  }

  /**
   * Get maxCapacityBuffer
   * @return maxCapacityBuffer
   */
  @javax.annotation.Nullable
  public Integer getMaxCapacityBuffer() {
    return maxCapacityBuffer;
  }

  public void setMaxCapacityBuffer(Integer maxCapacityBuffer) {
    this.maxCapacityBuffer = maxCapacityBuffer;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutScalingPolicyTypePredictiveScalingConfiguration putScalingPolicyTypePredictiveScalingConfiguration = (PutScalingPolicyTypePredictiveScalingConfiguration) o;
    return Objects.equals(this.metricSpecifications, putScalingPolicyTypePredictiveScalingConfiguration.metricSpecifications) &&
        Objects.equals(this.mode, putScalingPolicyTypePredictiveScalingConfiguration.mode) &&
        Objects.equals(this.schedulingBufferTime, putScalingPolicyTypePredictiveScalingConfiguration.schedulingBufferTime) &&
        Objects.equals(this.maxCapacityBreachBehavior, putScalingPolicyTypePredictiveScalingConfiguration.maxCapacityBreachBehavior) &&
        Objects.equals(this.maxCapacityBuffer, putScalingPolicyTypePredictiveScalingConfiguration.maxCapacityBuffer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metricSpecifications, mode, schedulingBufferTime, maxCapacityBreachBehavior, maxCapacityBuffer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutScalingPolicyTypePredictiveScalingConfiguration {\n");
    sb.append("    metricSpecifications: ").append(toIndentedString(metricSpecifications)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    schedulingBufferTime: ").append(toIndentedString(schedulingBufferTime)).append("\n");
    sb.append("    maxCapacityBreachBehavior: ").append(toIndentedString(maxCapacityBreachBehavior)).append("\n");
    sb.append("    maxCapacityBuffer: ").append(toIndentedString(maxCapacityBuffer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MetricSpecifications");
    openapiFields.add("Mode");
    openapiFields.add("SchedulingBufferTime");
    openapiFields.add("MaxCapacityBreachBehavior");
    openapiFields.add("MaxCapacityBuffer");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MetricSpecifications");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutScalingPolicyTypePredictiveScalingConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutScalingPolicyTypePredictiveScalingConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutScalingPolicyTypePredictiveScalingConfiguration is not found in the empty JSON string", PutScalingPolicyTypePredictiveScalingConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutScalingPolicyTypePredictiveScalingConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutScalingPolicyTypePredictiveScalingConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PutScalingPolicyTypePredictiveScalingConfiguration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `MetricSpecifications`
      List.validateJsonElement(jsonObj.get("MetricSpecifications"));
      // validate the optional field `Mode`
      if (jsonObj.get("Mode") != null && !jsonObj.get("Mode").isJsonNull()) {
        PredictiveScalingMode.validateJsonElement(jsonObj.get("Mode"));
      }
      // validate the optional field `SchedulingBufferTime`
      if (jsonObj.get("SchedulingBufferTime") != null && !jsonObj.get("SchedulingBufferTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SchedulingBufferTime"));
      }
      // validate the optional field `MaxCapacityBreachBehavior`
      if (jsonObj.get("MaxCapacityBreachBehavior") != null && !jsonObj.get("MaxCapacityBreachBehavior").isJsonNull()) {
        PredictiveScalingMaxCapacityBreachBehavior.validateJsonElement(jsonObj.get("MaxCapacityBreachBehavior"));
      }
      // validate the optional field `MaxCapacityBuffer`
      if (jsonObj.get("MaxCapacityBuffer") != null && !jsonObj.get("MaxCapacityBuffer").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxCapacityBuffer"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutScalingPolicyTypePredictiveScalingConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutScalingPolicyTypePredictiveScalingConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutScalingPolicyTypePredictiveScalingConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutScalingPolicyTypePredictiveScalingConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<PutScalingPolicyTypePredictiveScalingConfiguration>() {
           @Override
           public void write(JsonWriter out, PutScalingPolicyTypePredictiveScalingConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutScalingPolicyTypePredictiveScalingConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutScalingPolicyTypePredictiveScalingConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutScalingPolicyTypePredictiveScalingConfiguration
   * @throws IOException if the JSON string is invalid with respect to PutScalingPolicyTypePredictiveScalingConfiguration
   */
  public static PutScalingPolicyTypePredictiveScalingConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutScalingPolicyTypePredictiveScalingConfiguration.class);
  }

  /**
   * Convert an instance of PutScalingPolicyTypePredictiveScalingConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

