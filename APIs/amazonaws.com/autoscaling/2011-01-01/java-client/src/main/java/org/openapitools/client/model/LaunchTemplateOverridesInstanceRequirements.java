/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BareMetal;
import org.openapitools.client.model.BurstablePerformance;
import org.openapitools.client.model.InstanceRequirementsAcceleratorCount;
import org.openapitools.client.model.InstanceRequirementsAcceleratorTotalMemoryMiB;
import org.openapitools.client.model.InstanceRequirementsBaselineEbsBandwidthMbps;
import org.openapitools.client.model.InstanceRequirementsMemoryGiBPerVCpu;
import org.openapitools.client.model.InstanceRequirementsMemoryMiB;
import org.openapitools.client.model.InstanceRequirementsNetworkBandwidthGbps;
import org.openapitools.client.model.InstanceRequirementsNetworkInterfaceCount;
import org.openapitools.client.model.InstanceRequirementsTotalLocalStorageGB;
import org.openapitools.client.model.InstanceRequirementsVCpuCount;
import org.openapitools.client.model.LocalStorage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LaunchTemplateOverridesInstanceRequirements
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LaunchTemplateOverridesInstanceRequirements {
  public static final String SERIALIZED_NAME_VCPU_COUNT = "VCpuCount";
  @SerializedName(SERIALIZED_NAME_VCPU_COUNT)
  private InstanceRequirementsVCpuCount vcpuCount;

  public static final String SERIALIZED_NAME_MEMORY_MI_B = "MemoryMiB";
  @SerializedName(SERIALIZED_NAME_MEMORY_MI_B)
  private InstanceRequirementsMemoryMiB memoryMiB;

  public static final String SERIALIZED_NAME_CPU_MANUFACTURERS = "CpuManufacturers";
  @SerializedName(SERIALIZED_NAME_CPU_MANUFACTURERS)
  private List cpuManufacturers;

  public static final String SERIALIZED_NAME_MEMORY_GI_B_PER_V_CPU = "MemoryGiBPerVCpu";
  @SerializedName(SERIALIZED_NAME_MEMORY_GI_B_PER_V_CPU)
  private InstanceRequirementsMemoryGiBPerVCpu memoryGiBPerVCpu;

  public static final String SERIALIZED_NAME_EXCLUDED_INSTANCE_TYPES = "ExcludedInstanceTypes";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_INSTANCE_TYPES)
  private List excludedInstanceTypes;

  public static final String SERIALIZED_NAME_INSTANCE_GENERATIONS = "InstanceGenerations";
  @SerializedName(SERIALIZED_NAME_INSTANCE_GENERATIONS)
  private List instanceGenerations;

  public static final String SERIALIZED_NAME_SPOT_MAX_PRICE_PERCENTAGE_OVER_LOWEST_PRICE = "SpotMaxPricePercentageOverLowestPrice";
  @SerializedName(SERIALIZED_NAME_SPOT_MAX_PRICE_PERCENTAGE_OVER_LOWEST_PRICE)
  private Integer spotMaxPricePercentageOverLowestPrice;

  public static final String SERIALIZED_NAME_ON_DEMAND_MAX_PRICE_PERCENTAGE_OVER_LOWEST_PRICE = "OnDemandMaxPricePercentageOverLowestPrice";
  @SerializedName(SERIALIZED_NAME_ON_DEMAND_MAX_PRICE_PERCENTAGE_OVER_LOWEST_PRICE)
  private Integer onDemandMaxPricePercentageOverLowestPrice;

  public static final String SERIALIZED_NAME_BARE_METAL = "BareMetal";
  @SerializedName(SERIALIZED_NAME_BARE_METAL)
  private BareMetal bareMetal;

  public static final String SERIALIZED_NAME_BURSTABLE_PERFORMANCE = "BurstablePerformance";
  @SerializedName(SERIALIZED_NAME_BURSTABLE_PERFORMANCE)
  private BurstablePerformance burstablePerformance;

  public static final String SERIALIZED_NAME_REQUIRE_HIBERNATE_SUPPORT = "RequireHibernateSupport";
  @SerializedName(SERIALIZED_NAME_REQUIRE_HIBERNATE_SUPPORT)
  private Boolean requireHibernateSupport;

  public static final String SERIALIZED_NAME_NETWORK_INTERFACE_COUNT = "NetworkInterfaceCount";
  @SerializedName(SERIALIZED_NAME_NETWORK_INTERFACE_COUNT)
  private InstanceRequirementsNetworkInterfaceCount networkInterfaceCount;

  public static final String SERIALIZED_NAME_LOCAL_STORAGE = "LocalStorage";
  @SerializedName(SERIALIZED_NAME_LOCAL_STORAGE)
  private LocalStorage localStorage;

  public static final String SERIALIZED_NAME_LOCAL_STORAGE_TYPES = "LocalStorageTypes";
  @SerializedName(SERIALIZED_NAME_LOCAL_STORAGE_TYPES)
  private List localStorageTypes;

  public static final String SERIALIZED_NAME_TOTAL_LOCAL_STORAGE_G_B = "TotalLocalStorageGB";
  @SerializedName(SERIALIZED_NAME_TOTAL_LOCAL_STORAGE_G_B)
  private InstanceRequirementsTotalLocalStorageGB totalLocalStorageGB;

  public static final String SERIALIZED_NAME_BASELINE_EBS_BANDWIDTH_MBPS = "BaselineEbsBandwidthMbps";
  @SerializedName(SERIALIZED_NAME_BASELINE_EBS_BANDWIDTH_MBPS)
  private InstanceRequirementsBaselineEbsBandwidthMbps baselineEbsBandwidthMbps;

  public static final String SERIALIZED_NAME_ACCELERATOR_TYPES = "AcceleratorTypes";
  @SerializedName(SERIALIZED_NAME_ACCELERATOR_TYPES)
  private List acceleratorTypes;

  public static final String SERIALIZED_NAME_ACCELERATOR_COUNT = "AcceleratorCount";
  @SerializedName(SERIALIZED_NAME_ACCELERATOR_COUNT)
  private InstanceRequirementsAcceleratorCount acceleratorCount;

  public static final String SERIALIZED_NAME_ACCELERATOR_MANUFACTURERS = "AcceleratorManufacturers";
  @SerializedName(SERIALIZED_NAME_ACCELERATOR_MANUFACTURERS)
  private List acceleratorManufacturers;

  public static final String SERIALIZED_NAME_ACCELERATOR_NAMES = "AcceleratorNames";
  @SerializedName(SERIALIZED_NAME_ACCELERATOR_NAMES)
  private List acceleratorNames;

  public static final String SERIALIZED_NAME_ACCELERATOR_TOTAL_MEMORY_MI_B = "AcceleratorTotalMemoryMiB";
  @SerializedName(SERIALIZED_NAME_ACCELERATOR_TOTAL_MEMORY_MI_B)
  private InstanceRequirementsAcceleratorTotalMemoryMiB acceleratorTotalMemoryMiB;

  public static final String SERIALIZED_NAME_NETWORK_BANDWIDTH_GBPS = "NetworkBandwidthGbps";
  @SerializedName(SERIALIZED_NAME_NETWORK_BANDWIDTH_GBPS)
  private InstanceRequirementsNetworkBandwidthGbps networkBandwidthGbps;

  public static final String SERIALIZED_NAME_ALLOWED_INSTANCE_TYPES = "AllowedInstanceTypes";
  @SerializedName(SERIALIZED_NAME_ALLOWED_INSTANCE_TYPES)
  private List allowedInstanceTypes;

  public LaunchTemplateOverridesInstanceRequirements() {
  }

  public LaunchTemplateOverridesInstanceRequirements vcpuCount(InstanceRequirementsVCpuCount vcpuCount) {
    this.vcpuCount = vcpuCount;
    return this;
  }

  /**
   * Get vcpuCount
   * @return vcpuCount
   */
  @javax.annotation.Nonnull
  public InstanceRequirementsVCpuCount getVcpuCount() {
    return vcpuCount;
  }

  public void setVcpuCount(InstanceRequirementsVCpuCount vcpuCount) {
    this.vcpuCount = vcpuCount;
  }


  public LaunchTemplateOverridesInstanceRequirements memoryMiB(InstanceRequirementsMemoryMiB memoryMiB) {
    this.memoryMiB = memoryMiB;
    return this;
  }

  /**
   * Get memoryMiB
   * @return memoryMiB
   */
  @javax.annotation.Nonnull
  public InstanceRequirementsMemoryMiB getMemoryMiB() {
    return memoryMiB;
  }

  public void setMemoryMiB(InstanceRequirementsMemoryMiB memoryMiB) {
    this.memoryMiB = memoryMiB;
  }


  public LaunchTemplateOverridesInstanceRequirements cpuManufacturers(List cpuManufacturers) {
    this.cpuManufacturers = cpuManufacturers;
    return this;
  }

  /**
   * Get cpuManufacturers
   * @return cpuManufacturers
   */
  @javax.annotation.Nullable
  public List getCpuManufacturers() {
    return cpuManufacturers;
  }

  public void setCpuManufacturers(List cpuManufacturers) {
    this.cpuManufacturers = cpuManufacturers;
  }


  public LaunchTemplateOverridesInstanceRequirements memoryGiBPerVCpu(InstanceRequirementsMemoryGiBPerVCpu memoryGiBPerVCpu) {
    this.memoryGiBPerVCpu = memoryGiBPerVCpu;
    return this;
  }

  /**
   * Get memoryGiBPerVCpu
   * @return memoryGiBPerVCpu
   */
  @javax.annotation.Nullable
  public InstanceRequirementsMemoryGiBPerVCpu getMemoryGiBPerVCpu() {
    return memoryGiBPerVCpu;
  }

  public void setMemoryGiBPerVCpu(InstanceRequirementsMemoryGiBPerVCpu memoryGiBPerVCpu) {
    this.memoryGiBPerVCpu = memoryGiBPerVCpu;
  }


  public LaunchTemplateOverridesInstanceRequirements excludedInstanceTypes(List excludedInstanceTypes) {
    this.excludedInstanceTypes = excludedInstanceTypes;
    return this;
  }

  /**
   * Get excludedInstanceTypes
   * @return excludedInstanceTypes
   */
  @javax.annotation.Nullable
  public List getExcludedInstanceTypes() {
    return excludedInstanceTypes;
  }

  public void setExcludedInstanceTypes(List excludedInstanceTypes) {
    this.excludedInstanceTypes = excludedInstanceTypes;
  }


  public LaunchTemplateOverridesInstanceRequirements instanceGenerations(List instanceGenerations) {
    this.instanceGenerations = instanceGenerations;
    return this;
  }

  /**
   * Get instanceGenerations
   * @return instanceGenerations
   */
  @javax.annotation.Nullable
  public List getInstanceGenerations() {
    return instanceGenerations;
  }

  public void setInstanceGenerations(List instanceGenerations) {
    this.instanceGenerations = instanceGenerations;
  }


  public LaunchTemplateOverridesInstanceRequirements spotMaxPricePercentageOverLowestPrice(Integer spotMaxPricePercentageOverLowestPrice) {
    this.spotMaxPricePercentageOverLowestPrice = spotMaxPricePercentageOverLowestPrice;
    return this;
  }

  /**
   * Get spotMaxPricePercentageOverLowestPrice
   * @return spotMaxPricePercentageOverLowestPrice
   */
  @javax.annotation.Nullable
  public Integer getSpotMaxPricePercentageOverLowestPrice() {
    return spotMaxPricePercentageOverLowestPrice;
  }

  public void setSpotMaxPricePercentageOverLowestPrice(Integer spotMaxPricePercentageOverLowestPrice) {
    this.spotMaxPricePercentageOverLowestPrice = spotMaxPricePercentageOverLowestPrice;
  }


  public LaunchTemplateOverridesInstanceRequirements onDemandMaxPricePercentageOverLowestPrice(Integer onDemandMaxPricePercentageOverLowestPrice) {
    this.onDemandMaxPricePercentageOverLowestPrice = onDemandMaxPricePercentageOverLowestPrice;
    return this;
  }

  /**
   * Get onDemandMaxPricePercentageOverLowestPrice
   * @return onDemandMaxPricePercentageOverLowestPrice
   */
  @javax.annotation.Nullable
  public Integer getOnDemandMaxPricePercentageOverLowestPrice() {
    return onDemandMaxPricePercentageOverLowestPrice;
  }

  public void setOnDemandMaxPricePercentageOverLowestPrice(Integer onDemandMaxPricePercentageOverLowestPrice) {
    this.onDemandMaxPricePercentageOverLowestPrice = onDemandMaxPricePercentageOverLowestPrice;
  }


  public LaunchTemplateOverridesInstanceRequirements bareMetal(BareMetal bareMetal) {
    this.bareMetal = bareMetal;
    return this;
  }

  /**
   * Get bareMetal
   * @return bareMetal
   */
  @javax.annotation.Nullable
  public BareMetal getBareMetal() {
    return bareMetal;
  }

  public void setBareMetal(BareMetal bareMetal) {
    this.bareMetal = bareMetal;
  }


  public LaunchTemplateOverridesInstanceRequirements burstablePerformance(BurstablePerformance burstablePerformance) {
    this.burstablePerformance = burstablePerformance;
    return this;
  }

  /**
   * Get burstablePerformance
   * @return burstablePerformance
   */
  @javax.annotation.Nullable
  public BurstablePerformance getBurstablePerformance() {
    return burstablePerformance;
  }

  public void setBurstablePerformance(BurstablePerformance burstablePerformance) {
    this.burstablePerformance = burstablePerformance;
  }


  public LaunchTemplateOverridesInstanceRequirements requireHibernateSupport(Boolean requireHibernateSupport) {
    this.requireHibernateSupport = requireHibernateSupport;
    return this;
  }

  /**
   * Get requireHibernateSupport
   * @return requireHibernateSupport
   */
  @javax.annotation.Nullable
  public Boolean getRequireHibernateSupport() {
    return requireHibernateSupport;
  }

  public void setRequireHibernateSupport(Boolean requireHibernateSupport) {
    this.requireHibernateSupport = requireHibernateSupport;
  }


  public LaunchTemplateOverridesInstanceRequirements networkInterfaceCount(InstanceRequirementsNetworkInterfaceCount networkInterfaceCount) {
    this.networkInterfaceCount = networkInterfaceCount;
    return this;
  }

  /**
   * Get networkInterfaceCount
   * @return networkInterfaceCount
   */
  @javax.annotation.Nullable
  public InstanceRequirementsNetworkInterfaceCount getNetworkInterfaceCount() {
    return networkInterfaceCount;
  }

  public void setNetworkInterfaceCount(InstanceRequirementsNetworkInterfaceCount networkInterfaceCount) {
    this.networkInterfaceCount = networkInterfaceCount;
  }


  public LaunchTemplateOverridesInstanceRequirements localStorage(LocalStorage localStorage) {
    this.localStorage = localStorage;
    return this;
  }

  /**
   * Get localStorage
   * @return localStorage
   */
  @javax.annotation.Nullable
  public LocalStorage getLocalStorage() {
    return localStorage;
  }

  public void setLocalStorage(LocalStorage localStorage) {
    this.localStorage = localStorage;
  }


  public LaunchTemplateOverridesInstanceRequirements localStorageTypes(List localStorageTypes) {
    this.localStorageTypes = localStorageTypes;
    return this;
  }

  /**
   * Get localStorageTypes
   * @return localStorageTypes
   */
  @javax.annotation.Nullable
  public List getLocalStorageTypes() {
    return localStorageTypes;
  }

  public void setLocalStorageTypes(List localStorageTypes) {
    this.localStorageTypes = localStorageTypes;
  }


  public LaunchTemplateOverridesInstanceRequirements totalLocalStorageGB(InstanceRequirementsTotalLocalStorageGB totalLocalStorageGB) {
    this.totalLocalStorageGB = totalLocalStorageGB;
    return this;
  }

  /**
   * Get totalLocalStorageGB
   * @return totalLocalStorageGB
   */
  @javax.annotation.Nullable
  public InstanceRequirementsTotalLocalStorageGB getTotalLocalStorageGB() {
    return totalLocalStorageGB;
  }

  public void setTotalLocalStorageGB(InstanceRequirementsTotalLocalStorageGB totalLocalStorageGB) {
    this.totalLocalStorageGB = totalLocalStorageGB;
  }


  public LaunchTemplateOverridesInstanceRequirements baselineEbsBandwidthMbps(InstanceRequirementsBaselineEbsBandwidthMbps baselineEbsBandwidthMbps) {
    this.baselineEbsBandwidthMbps = baselineEbsBandwidthMbps;
    return this;
  }

  /**
   * Get baselineEbsBandwidthMbps
   * @return baselineEbsBandwidthMbps
   */
  @javax.annotation.Nullable
  public InstanceRequirementsBaselineEbsBandwidthMbps getBaselineEbsBandwidthMbps() {
    return baselineEbsBandwidthMbps;
  }

  public void setBaselineEbsBandwidthMbps(InstanceRequirementsBaselineEbsBandwidthMbps baselineEbsBandwidthMbps) {
    this.baselineEbsBandwidthMbps = baselineEbsBandwidthMbps;
  }


  public LaunchTemplateOverridesInstanceRequirements acceleratorTypes(List acceleratorTypes) {
    this.acceleratorTypes = acceleratorTypes;
    return this;
  }

  /**
   * Get acceleratorTypes
   * @return acceleratorTypes
   */
  @javax.annotation.Nullable
  public List getAcceleratorTypes() {
    return acceleratorTypes;
  }

  public void setAcceleratorTypes(List acceleratorTypes) {
    this.acceleratorTypes = acceleratorTypes;
  }


  public LaunchTemplateOverridesInstanceRequirements acceleratorCount(InstanceRequirementsAcceleratorCount acceleratorCount) {
    this.acceleratorCount = acceleratorCount;
    return this;
  }

  /**
   * Get acceleratorCount
   * @return acceleratorCount
   */
  @javax.annotation.Nullable
  public InstanceRequirementsAcceleratorCount getAcceleratorCount() {
    return acceleratorCount;
  }

  public void setAcceleratorCount(InstanceRequirementsAcceleratorCount acceleratorCount) {
    this.acceleratorCount = acceleratorCount;
  }


  public LaunchTemplateOverridesInstanceRequirements acceleratorManufacturers(List acceleratorManufacturers) {
    this.acceleratorManufacturers = acceleratorManufacturers;
    return this;
  }

  /**
   * Get acceleratorManufacturers
   * @return acceleratorManufacturers
   */
  @javax.annotation.Nullable
  public List getAcceleratorManufacturers() {
    return acceleratorManufacturers;
  }

  public void setAcceleratorManufacturers(List acceleratorManufacturers) {
    this.acceleratorManufacturers = acceleratorManufacturers;
  }


  public LaunchTemplateOverridesInstanceRequirements acceleratorNames(List acceleratorNames) {
    this.acceleratorNames = acceleratorNames;
    return this;
  }

  /**
   * Get acceleratorNames
   * @return acceleratorNames
   */
  @javax.annotation.Nullable
  public List getAcceleratorNames() {
    return acceleratorNames;
  }

  public void setAcceleratorNames(List acceleratorNames) {
    this.acceleratorNames = acceleratorNames;
  }


  public LaunchTemplateOverridesInstanceRequirements acceleratorTotalMemoryMiB(InstanceRequirementsAcceleratorTotalMemoryMiB acceleratorTotalMemoryMiB) {
    this.acceleratorTotalMemoryMiB = acceleratorTotalMemoryMiB;
    return this;
  }

  /**
   * Get acceleratorTotalMemoryMiB
   * @return acceleratorTotalMemoryMiB
   */
  @javax.annotation.Nullable
  public InstanceRequirementsAcceleratorTotalMemoryMiB getAcceleratorTotalMemoryMiB() {
    return acceleratorTotalMemoryMiB;
  }

  public void setAcceleratorTotalMemoryMiB(InstanceRequirementsAcceleratorTotalMemoryMiB acceleratorTotalMemoryMiB) {
    this.acceleratorTotalMemoryMiB = acceleratorTotalMemoryMiB;
  }


  public LaunchTemplateOverridesInstanceRequirements networkBandwidthGbps(InstanceRequirementsNetworkBandwidthGbps networkBandwidthGbps) {
    this.networkBandwidthGbps = networkBandwidthGbps;
    return this;
  }

  /**
   * Get networkBandwidthGbps
   * @return networkBandwidthGbps
   */
  @javax.annotation.Nullable
  public InstanceRequirementsNetworkBandwidthGbps getNetworkBandwidthGbps() {
    return networkBandwidthGbps;
  }

  public void setNetworkBandwidthGbps(InstanceRequirementsNetworkBandwidthGbps networkBandwidthGbps) {
    this.networkBandwidthGbps = networkBandwidthGbps;
  }


  public LaunchTemplateOverridesInstanceRequirements allowedInstanceTypes(List allowedInstanceTypes) {
    this.allowedInstanceTypes = allowedInstanceTypes;
    return this;
  }

  /**
   * Get allowedInstanceTypes
   * @return allowedInstanceTypes
   */
  @javax.annotation.Nullable
  public List getAllowedInstanceTypes() {
    return allowedInstanceTypes;
  }

  public void setAllowedInstanceTypes(List allowedInstanceTypes) {
    this.allowedInstanceTypes = allowedInstanceTypes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LaunchTemplateOverridesInstanceRequirements launchTemplateOverridesInstanceRequirements = (LaunchTemplateOverridesInstanceRequirements) o;
    return Objects.equals(this.vcpuCount, launchTemplateOverridesInstanceRequirements.vcpuCount) &&
        Objects.equals(this.memoryMiB, launchTemplateOverridesInstanceRequirements.memoryMiB) &&
        Objects.equals(this.cpuManufacturers, launchTemplateOverridesInstanceRequirements.cpuManufacturers) &&
        Objects.equals(this.memoryGiBPerVCpu, launchTemplateOverridesInstanceRequirements.memoryGiBPerVCpu) &&
        Objects.equals(this.excludedInstanceTypes, launchTemplateOverridesInstanceRequirements.excludedInstanceTypes) &&
        Objects.equals(this.instanceGenerations, launchTemplateOverridesInstanceRequirements.instanceGenerations) &&
        Objects.equals(this.spotMaxPricePercentageOverLowestPrice, launchTemplateOverridesInstanceRequirements.spotMaxPricePercentageOverLowestPrice) &&
        Objects.equals(this.onDemandMaxPricePercentageOverLowestPrice, launchTemplateOverridesInstanceRequirements.onDemandMaxPricePercentageOverLowestPrice) &&
        Objects.equals(this.bareMetal, launchTemplateOverridesInstanceRequirements.bareMetal) &&
        Objects.equals(this.burstablePerformance, launchTemplateOverridesInstanceRequirements.burstablePerformance) &&
        Objects.equals(this.requireHibernateSupport, launchTemplateOverridesInstanceRequirements.requireHibernateSupport) &&
        Objects.equals(this.networkInterfaceCount, launchTemplateOverridesInstanceRequirements.networkInterfaceCount) &&
        Objects.equals(this.localStorage, launchTemplateOverridesInstanceRequirements.localStorage) &&
        Objects.equals(this.localStorageTypes, launchTemplateOverridesInstanceRequirements.localStorageTypes) &&
        Objects.equals(this.totalLocalStorageGB, launchTemplateOverridesInstanceRequirements.totalLocalStorageGB) &&
        Objects.equals(this.baselineEbsBandwidthMbps, launchTemplateOverridesInstanceRequirements.baselineEbsBandwidthMbps) &&
        Objects.equals(this.acceleratorTypes, launchTemplateOverridesInstanceRequirements.acceleratorTypes) &&
        Objects.equals(this.acceleratorCount, launchTemplateOverridesInstanceRequirements.acceleratorCount) &&
        Objects.equals(this.acceleratorManufacturers, launchTemplateOverridesInstanceRequirements.acceleratorManufacturers) &&
        Objects.equals(this.acceleratorNames, launchTemplateOverridesInstanceRequirements.acceleratorNames) &&
        Objects.equals(this.acceleratorTotalMemoryMiB, launchTemplateOverridesInstanceRequirements.acceleratorTotalMemoryMiB) &&
        Objects.equals(this.networkBandwidthGbps, launchTemplateOverridesInstanceRequirements.networkBandwidthGbps) &&
        Objects.equals(this.allowedInstanceTypes, launchTemplateOverridesInstanceRequirements.allowedInstanceTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vcpuCount, memoryMiB, cpuManufacturers, memoryGiBPerVCpu, excludedInstanceTypes, instanceGenerations, spotMaxPricePercentageOverLowestPrice, onDemandMaxPricePercentageOverLowestPrice, bareMetal, burstablePerformance, requireHibernateSupport, networkInterfaceCount, localStorage, localStorageTypes, totalLocalStorageGB, baselineEbsBandwidthMbps, acceleratorTypes, acceleratorCount, acceleratorManufacturers, acceleratorNames, acceleratorTotalMemoryMiB, networkBandwidthGbps, allowedInstanceTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LaunchTemplateOverridesInstanceRequirements {\n");
    sb.append("    vcpuCount: ").append(toIndentedString(vcpuCount)).append("\n");
    sb.append("    memoryMiB: ").append(toIndentedString(memoryMiB)).append("\n");
    sb.append("    cpuManufacturers: ").append(toIndentedString(cpuManufacturers)).append("\n");
    sb.append("    memoryGiBPerVCpu: ").append(toIndentedString(memoryGiBPerVCpu)).append("\n");
    sb.append("    excludedInstanceTypes: ").append(toIndentedString(excludedInstanceTypes)).append("\n");
    sb.append("    instanceGenerations: ").append(toIndentedString(instanceGenerations)).append("\n");
    sb.append("    spotMaxPricePercentageOverLowestPrice: ").append(toIndentedString(spotMaxPricePercentageOverLowestPrice)).append("\n");
    sb.append("    onDemandMaxPricePercentageOverLowestPrice: ").append(toIndentedString(onDemandMaxPricePercentageOverLowestPrice)).append("\n");
    sb.append("    bareMetal: ").append(toIndentedString(bareMetal)).append("\n");
    sb.append("    burstablePerformance: ").append(toIndentedString(burstablePerformance)).append("\n");
    sb.append("    requireHibernateSupport: ").append(toIndentedString(requireHibernateSupport)).append("\n");
    sb.append("    networkInterfaceCount: ").append(toIndentedString(networkInterfaceCount)).append("\n");
    sb.append("    localStorage: ").append(toIndentedString(localStorage)).append("\n");
    sb.append("    localStorageTypes: ").append(toIndentedString(localStorageTypes)).append("\n");
    sb.append("    totalLocalStorageGB: ").append(toIndentedString(totalLocalStorageGB)).append("\n");
    sb.append("    baselineEbsBandwidthMbps: ").append(toIndentedString(baselineEbsBandwidthMbps)).append("\n");
    sb.append("    acceleratorTypes: ").append(toIndentedString(acceleratorTypes)).append("\n");
    sb.append("    acceleratorCount: ").append(toIndentedString(acceleratorCount)).append("\n");
    sb.append("    acceleratorManufacturers: ").append(toIndentedString(acceleratorManufacturers)).append("\n");
    sb.append("    acceleratorNames: ").append(toIndentedString(acceleratorNames)).append("\n");
    sb.append("    acceleratorTotalMemoryMiB: ").append(toIndentedString(acceleratorTotalMemoryMiB)).append("\n");
    sb.append("    networkBandwidthGbps: ").append(toIndentedString(networkBandwidthGbps)).append("\n");
    sb.append("    allowedInstanceTypes: ").append(toIndentedString(allowedInstanceTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("VCpuCount");
    openapiFields.add("MemoryMiB");
    openapiFields.add("CpuManufacturers");
    openapiFields.add("MemoryGiBPerVCpu");
    openapiFields.add("ExcludedInstanceTypes");
    openapiFields.add("InstanceGenerations");
    openapiFields.add("SpotMaxPricePercentageOverLowestPrice");
    openapiFields.add("OnDemandMaxPricePercentageOverLowestPrice");
    openapiFields.add("BareMetal");
    openapiFields.add("BurstablePerformance");
    openapiFields.add("RequireHibernateSupport");
    openapiFields.add("NetworkInterfaceCount");
    openapiFields.add("LocalStorage");
    openapiFields.add("LocalStorageTypes");
    openapiFields.add("TotalLocalStorageGB");
    openapiFields.add("BaselineEbsBandwidthMbps");
    openapiFields.add("AcceleratorTypes");
    openapiFields.add("AcceleratorCount");
    openapiFields.add("AcceleratorManufacturers");
    openapiFields.add("AcceleratorNames");
    openapiFields.add("AcceleratorTotalMemoryMiB");
    openapiFields.add("NetworkBandwidthGbps");
    openapiFields.add("AllowedInstanceTypes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("VCpuCount");
    openapiRequiredFields.add("MemoryMiB");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LaunchTemplateOverridesInstanceRequirements
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LaunchTemplateOverridesInstanceRequirements.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LaunchTemplateOverridesInstanceRequirements is not found in the empty JSON string", LaunchTemplateOverridesInstanceRequirements.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LaunchTemplateOverridesInstanceRequirements.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LaunchTemplateOverridesInstanceRequirements` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : LaunchTemplateOverridesInstanceRequirements.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `VCpuCount`
      InstanceRequirementsVCpuCount.validateJsonElement(jsonObj.get("VCpuCount"));
      // validate the required field `MemoryMiB`
      InstanceRequirementsMemoryMiB.validateJsonElement(jsonObj.get("MemoryMiB"));
      // validate the optional field `CpuManufacturers`
      if (jsonObj.get("CpuManufacturers") != null && !jsonObj.get("CpuManufacturers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CpuManufacturers"));
      }
      // validate the optional field `MemoryGiBPerVCpu`
      if (jsonObj.get("MemoryGiBPerVCpu") != null && !jsonObj.get("MemoryGiBPerVCpu").isJsonNull()) {
        InstanceRequirementsMemoryGiBPerVCpu.validateJsonElement(jsonObj.get("MemoryGiBPerVCpu"));
      }
      // validate the optional field `ExcludedInstanceTypes`
      if (jsonObj.get("ExcludedInstanceTypes") != null && !jsonObj.get("ExcludedInstanceTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ExcludedInstanceTypes"));
      }
      // validate the optional field `InstanceGenerations`
      if (jsonObj.get("InstanceGenerations") != null && !jsonObj.get("InstanceGenerations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InstanceGenerations"));
      }
      // validate the optional field `SpotMaxPricePercentageOverLowestPrice`
      if (jsonObj.get("SpotMaxPricePercentageOverLowestPrice") != null && !jsonObj.get("SpotMaxPricePercentageOverLowestPrice").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SpotMaxPricePercentageOverLowestPrice"));
      }
      // validate the optional field `OnDemandMaxPricePercentageOverLowestPrice`
      if (jsonObj.get("OnDemandMaxPricePercentageOverLowestPrice") != null && !jsonObj.get("OnDemandMaxPricePercentageOverLowestPrice").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("OnDemandMaxPricePercentageOverLowestPrice"));
      }
      // validate the optional field `BareMetal`
      if (jsonObj.get("BareMetal") != null && !jsonObj.get("BareMetal").isJsonNull()) {
        BareMetal.validateJsonElement(jsonObj.get("BareMetal"));
      }
      // validate the optional field `BurstablePerformance`
      if (jsonObj.get("BurstablePerformance") != null && !jsonObj.get("BurstablePerformance").isJsonNull()) {
        BurstablePerformance.validateJsonElement(jsonObj.get("BurstablePerformance"));
      }
      // validate the optional field `RequireHibernateSupport`
      if (jsonObj.get("RequireHibernateSupport") != null && !jsonObj.get("RequireHibernateSupport").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("RequireHibernateSupport"));
      }
      // validate the optional field `NetworkInterfaceCount`
      if (jsonObj.get("NetworkInterfaceCount") != null && !jsonObj.get("NetworkInterfaceCount").isJsonNull()) {
        InstanceRequirementsNetworkInterfaceCount.validateJsonElement(jsonObj.get("NetworkInterfaceCount"));
      }
      // validate the optional field `LocalStorage`
      if (jsonObj.get("LocalStorage") != null && !jsonObj.get("LocalStorage").isJsonNull()) {
        LocalStorage.validateJsonElement(jsonObj.get("LocalStorage"));
      }
      // validate the optional field `LocalStorageTypes`
      if (jsonObj.get("LocalStorageTypes") != null && !jsonObj.get("LocalStorageTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LocalStorageTypes"));
      }
      // validate the optional field `TotalLocalStorageGB`
      if (jsonObj.get("TotalLocalStorageGB") != null && !jsonObj.get("TotalLocalStorageGB").isJsonNull()) {
        InstanceRequirementsTotalLocalStorageGB.validateJsonElement(jsonObj.get("TotalLocalStorageGB"));
      }
      // validate the optional field `BaselineEbsBandwidthMbps`
      if (jsonObj.get("BaselineEbsBandwidthMbps") != null && !jsonObj.get("BaselineEbsBandwidthMbps").isJsonNull()) {
        InstanceRequirementsBaselineEbsBandwidthMbps.validateJsonElement(jsonObj.get("BaselineEbsBandwidthMbps"));
      }
      // validate the optional field `AcceleratorTypes`
      if (jsonObj.get("AcceleratorTypes") != null && !jsonObj.get("AcceleratorTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AcceleratorTypes"));
      }
      // validate the optional field `AcceleratorCount`
      if (jsonObj.get("AcceleratorCount") != null && !jsonObj.get("AcceleratorCount").isJsonNull()) {
        InstanceRequirementsAcceleratorCount.validateJsonElement(jsonObj.get("AcceleratorCount"));
      }
      // validate the optional field `AcceleratorManufacturers`
      if (jsonObj.get("AcceleratorManufacturers") != null && !jsonObj.get("AcceleratorManufacturers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AcceleratorManufacturers"));
      }
      // validate the optional field `AcceleratorNames`
      if (jsonObj.get("AcceleratorNames") != null && !jsonObj.get("AcceleratorNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AcceleratorNames"));
      }
      // validate the optional field `AcceleratorTotalMemoryMiB`
      if (jsonObj.get("AcceleratorTotalMemoryMiB") != null && !jsonObj.get("AcceleratorTotalMemoryMiB").isJsonNull()) {
        InstanceRequirementsAcceleratorTotalMemoryMiB.validateJsonElement(jsonObj.get("AcceleratorTotalMemoryMiB"));
      }
      // validate the optional field `NetworkBandwidthGbps`
      if (jsonObj.get("NetworkBandwidthGbps") != null && !jsonObj.get("NetworkBandwidthGbps").isJsonNull()) {
        InstanceRequirementsNetworkBandwidthGbps.validateJsonElement(jsonObj.get("NetworkBandwidthGbps"));
      }
      // validate the optional field `AllowedInstanceTypes`
      if (jsonObj.get("AllowedInstanceTypes") != null && !jsonObj.get("AllowedInstanceTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AllowedInstanceTypes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LaunchTemplateOverridesInstanceRequirements.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LaunchTemplateOverridesInstanceRequirements' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LaunchTemplateOverridesInstanceRequirements> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LaunchTemplateOverridesInstanceRequirements.class));

       return (TypeAdapter<T>) new TypeAdapter<LaunchTemplateOverridesInstanceRequirements>() {
           @Override
           public void write(JsonWriter out, LaunchTemplateOverridesInstanceRequirements value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LaunchTemplateOverridesInstanceRequirements read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LaunchTemplateOverridesInstanceRequirements given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LaunchTemplateOverridesInstanceRequirements
   * @throws IOException if the JSON string is invalid with respect to LaunchTemplateOverridesInstanceRequirements
   */
  public static LaunchTemplateOverridesInstanceRequirements fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LaunchTemplateOverridesInstanceRequirements.class);
  }

  /**
   * Convert an instance of LaunchTemplateOverridesInstanceRequirements to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

