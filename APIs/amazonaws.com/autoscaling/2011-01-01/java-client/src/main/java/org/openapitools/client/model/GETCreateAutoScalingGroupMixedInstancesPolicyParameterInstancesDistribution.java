/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution {
  public static final String SERIALIZED_NAME_ON_DEMAND_ALLOCATION_STRATEGY = "OnDemandAllocationStrategy";
  @SerializedName(SERIALIZED_NAME_ON_DEMAND_ALLOCATION_STRATEGY)
  private String onDemandAllocationStrategy;

  public static final String SERIALIZED_NAME_ON_DEMAND_BASE_CAPACITY = "OnDemandBaseCapacity";
  @SerializedName(SERIALIZED_NAME_ON_DEMAND_BASE_CAPACITY)
  private Integer onDemandBaseCapacity;

  public static final String SERIALIZED_NAME_ON_DEMAND_PERCENTAGE_ABOVE_BASE_CAPACITY = "OnDemandPercentageAboveBaseCapacity";
  @SerializedName(SERIALIZED_NAME_ON_DEMAND_PERCENTAGE_ABOVE_BASE_CAPACITY)
  private Integer onDemandPercentageAboveBaseCapacity;

  public static final String SERIALIZED_NAME_SPOT_ALLOCATION_STRATEGY = "SpotAllocationStrategy";
  @SerializedName(SERIALIZED_NAME_SPOT_ALLOCATION_STRATEGY)
  private String spotAllocationStrategy;

  public static final String SERIALIZED_NAME_SPOT_INSTANCE_POOLS = "SpotInstancePools";
  @SerializedName(SERIALIZED_NAME_SPOT_INSTANCE_POOLS)
  private Integer spotInstancePools;

  public static final String SERIALIZED_NAME_SPOT_MAX_PRICE = "SpotMaxPrice";
  @SerializedName(SERIALIZED_NAME_SPOT_MAX_PRICE)
  private String spotMaxPrice;

  public GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution() {
  }

  public GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution onDemandAllocationStrategy(String onDemandAllocationStrategy) {
    this.onDemandAllocationStrategy = onDemandAllocationStrategy;
    return this;
  }

  /**
   * Get onDemandAllocationStrategy
   * @return onDemandAllocationStrategy
   */
  @javax.annotation.Nullable
  public String getOnDemandAllocationStrategy() {
    return onDemandAllocationStrategy;
  }

  public void setOnDemandAllocationStrategy(String onDemandAllocationStrategy) {
    this.onDemandAllocationStrategy = onDemandAllocationStrategy;
  }


  public GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution onDemandBaseCapacity(Integer onDemandBaseCapacity) {
    this.onDemandBaseCapacity = onDemandBaseCapacity;
    return this;
  }

  /**
   * Get onDemandBaseCapacity
   * @return onDemandBaseCapacity
   */
  @javax.annotation.Nullable
  public Integer getOnDemandBaseCapacity() {
    return onDemandBaseCapacity;
  }

  public void setOnDemandBaseCapacity(Integer onDemandBaseCapacity) {
    this.onDemandBaseCapacity = onDemandBaseCapacity;
  }


  public GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution onDemandPercentageAboveBaseCapacity(Integer onDemandPercentageAboveBaseCapacity) {
    this.onDemandPercentageAboveBaseCapacity = onDemandPercentageAboveBaseCapacity;
    return this;
  }

  /**
   * Get onDemandPercentageAboveBaseCapacity
   * @return onDemandPercentageAboveBaseCapacity
   */
  @javax.annotation.Nullable
  public Integer getOnDemandPercentageAboveBaseCapacity() {
    return onDemandPercentageAboveBaseCapacity;
  }

  public void setOnDemandPercentageAboveBaseCapacity(Integer onDemandPercentageAboveBaseCapacity) {
    this.onDemandPercentageAboveBaseCapacity = onDemandPercentageAboveBaseCapacity;
  }


  public GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution spotAllocationStrategy(String spotAllocationStrategy) {
    this.spotAllocationStrategy = spotAllocationStrategy;
    return this;
  }

  /**
   * Get spotAllocationStrategy
   * @return spotAllocationStrategy
   */
  @javax.annotation.Nullable
  public String getSpotAllocationStrategy() {
    return spotAllocationStrategy;
  }

  public void setSpotAllocationStrategy(String spotAllocationStrategy) {
    this.spotAllocationStrategy = spotAllocationStrategy;
  }


  public GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution spotInstancePools(Integer spotInstancePools) {
    this.spotInstancePools = spotInstancePools;
    return this;
  }

  /**
   * Get spotInstancePools
   * @return spotInstancePools
   */
  @javax.annotation.Nullable
  public Integer getSpotInstancePools() {
    return spotInstancePools;
  }

  public void setSpotInstancePools(Integer spotInstancePools) {
    this.spotInstancePools = spotInstancePools;
  }


  public GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution spotMaxPrice(String spotMaxPrice) {
    this.spotMaxPrice = spotMaxPrice;
    return this;
  }

  /**
   * Get spotMaxPrice
   * @return spotMaxPrice
   */
  @javax.annotation.Nullable
  public String getSpotMaxPrice() {
    return spotMaxPrice;
  }

  public void setSpotMaxPrice(String spotMaxPrice) {
    this.spotMaxPrice = spotMaxPrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution geTCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution = (GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution) o;
    return Objects.equals(this.onDemandAllocationStrategy, geTCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.onDemandAllocationStrategy) &&
        Objects.equals(this.onDemandBaseCapacity, geTCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.onDemandBaseCapacity) &&
        Objects.equals(this.onDemandPercentageAboveBaseCapacity, geTCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.onDemandPercentageAboveBaseCapacity) &&
        Objects.equals(this.spotAllocationStrategy, geTCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.spotAllocationStrategy) &&
        Objects.equals(this.spotInstancePools, geTCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.spotInstancePools) &&
        Objects.equals(this.spotMaxPrice, geTCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.spotMaxPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(onDemandAllocationStrategy, onDemandBaseCapacity, onDemandPercentageAboveBaseCapacity, spotAllocationStrategy, spotInstancePools, spotMaxPrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution {\n");
    sb.append("    onDemandAllocationStrategy: ").append(toIndentedString(onDemandAllocationStrategy)).append("\n");
    sb.append("    onDemandBaseCapacity: ").append(toIndentedString(onDemandBaseCapacity)).append("\n");
    sb.append("    onDemandPercentageAboveBaseCapacity: ").append(toIndentedString(onDemandPercentageAboveBaseCapacity)).append("\n");
    sb.append("    spotAllocationStrategy: ").append(toIndentedString(spotAllocationStrategy)).append("\n");
    sb.append("    spotInstancePools: ").append(toIndentedString(spotInstancePools)).append("\n");
    sb.append("    spotMaxPrice: ").append(toIndentedString(spotMaxPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OnDemandAllocationStrategy");
    openapiFields.add("OnDemandBaseCapacity");
    openapiFields.add("OnDemandPercentageAboveBaseCapacity");
    openapiFields.add("SpotAllocationStrategy");
    openapiFields.add("SpotInstancePools");
    openapiFields.add("SpotMaxPrice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution is not found in the empty JSON string", GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `OnDemandAllocationStrategy`
      if (jsonObj.get("OnDemandAllocationStrategy") != null && !jsonObj.get("OnDemandAllocationStrategy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OnDemandAllocationStrategy"));
      }
      // validate the optional field `OnDemandBaseCapacity`
      if (jsonObj.get("OnDemandBaseCapacity") != null && !jsonObj.get("OnDemandBaseCapacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("OnDemandBaseCapacity"));
      }
      // validate the optional field `OnDemandPercentageAboveBaseCapacity`
      if (jsonObj.get("OnDemandPercentageAboveBaseCapacity") != null && !jsonObj.get("OnDemandPercentageAboveBaseCapacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("OnDemandPercentageAboveBaseCapacity"));
      }
      // validate the optional field `SpotAllocationStrategy`
      if (jsonObj.get("SpotAllocationStrategy") != null && !jsonObj.get("SpotAllocationStrategy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SpotAllocationStrategy"));
      }
      // validate the optional field `SpotInstancePools`
      if (jsonObj.get("SpotInstancePools") != null && !jsonObj.get("SpotInstancePools").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SpotInstancePools"));
      }
      // validate the optional field `SpotMaxPrice`
      if (jsonObj.get("SpotMaxPrice") != null && !jsonObj.get("SpotMaxPrice").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SpotMaxPrice"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.class));

       return (TypeAdapter<T>) new TypeAdapter<GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution>() {
           @Override
           public void write(JsonWriter out, GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution
   * @throws IOException if the JSON string is invalid with respect to GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution
   */
  public static GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution.class);
  }

  /**
   * Convert an instance of GETCreateAutoScalingGroupMixedInstancesPolicyParameterInstancesDistribution to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

