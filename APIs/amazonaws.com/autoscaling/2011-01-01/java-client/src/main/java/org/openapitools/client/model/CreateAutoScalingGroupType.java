/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateAutoScalingGroupTypeLaunchTemplate;
import org.openapitools.client.model.CreateAutoScalingGroupTypeMixedInstancesPolicy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateAutoScalingGroupType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAutoScalingGroupType {
  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME = "AutoScalingGroupName";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME)
  private String autoScalingGroupName;

  public static final String SERIALIZED_NAME_LAUNCH_CONFIGURATION_NAME = "LaunchConfigurationName";
  @SerializedName(SERIALIZED_NAME_LAUNCH_CONFIGURATION_NAME)
  private String launchConfigurationName;

  public static final String SERIALIZED_NAME_LAUNCH_TEMPLATE = "LaunchTemplate";
  @SerializedName(SERIALIZED_NAME_LAUNCH_TEMPLATE)
  private CreateAutoScalingGroupTypeLaunchTemplate launchTemplate;

  public static final String SERIALIZED_NAME_MIXED_INSTANCES_POLICY = "MixedInstancesPolicy";
  @SerializedName(SERIALIZED_NAME_MIXED_INSTANCES_POLICY)
  private CreateAutoScalingGroupTypeMixedInstancesPolicy mixedInstancesPolicy;

  public static final String SERIALIZED_NAME_INSTANCE_ID = "InstanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_MIN_SIZE = "MinSize";
  @SerializedName(SERIALIZED_NAME_MIN_SIZE)
  private Integer minSize;

  public static final String SERIALIZED_NAME_MAX_SIZE = "MaxSize";
  @SerializedName(SERIALIZED_NAME_MAX_SIZE)
  private Integer maxSize;

  public static final String SERIALIZED_NAME_DESIRED_CAPACITY = "DesiredCapacity";
  @SerializedName(SERIALIZED_NAME_DESIRED_CAPACITY)
  private Integer desiredCapacity;

  public static final String SERIALIZED_NAME_DEFAULT_COOLDOWN = "DefaultCooldown";
  @SerializedName(SERIALIZED_NAME_DEFAULT_COOLDOWN)
  private Integer defaultCooldown;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONES = "AvailabilityZones";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONES)
  private List availabilityZones;

  public static final String SERIALIZED_NAME_LOAD_BALANCER_NAMES = "LoadBalancerNames";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_NAMES)
  private List loadBalancerNames;

  public static final String SERIALIZED_NAME_TARGET_GROUP_A_R_NS = "TargetGroupARNs";
  @SerializedName(SERIALIZED_NAME_TARGET_GROUP_A_R_NS)
  private List targetGroupARNs;

  public static final String SERIALIZED_NAME_HEALTH_CHECK_TYPE = "HealthCheckType";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK_TYPE)
  private String healthCheckType;

  public static final String SERIALIZED_NAME_HEALTH_CHECK_GRACE_PERIOD = "HealthCheckGracePeriod";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK_GRACE_PERIOD)
  private Integer healthCheckGracePeriod;

  public static final String SERIALIZED_NAME_PLACEMENT_GROUP = "PlacementGroup";
  @SerializedName(SERIALIZED_NAME_PLACEMENT_GROUP)
  private String placementGroup;

  public static final String SERIALIZED_NAME_VP_C_ZONE_IDENTIFIER = "VPCZoneIdentifier";
  @SerializedName(SERIALIZED_NAME_VP_C_ZONE_IDENTIFIER)
  private String vpCZoneIdentifier;

  public static final String SERIALIZED_NAME_TERMINATION_POLICIES = "TerminationPolicies";
  @SerializedName(SERIALIZED_NAME_TERMINATION_POLICIES)
  private List terminationPolicies;

  public static final String SERIALIZED_NAME_NEW_INSTANCES_PROTECTED_FROM_SCALE_IN = "NewInstancesProtectedFromScaleIn";
  @SerializedName(SERIALIZED_NAME_NEW_INSTANCES_PROTECTED_FROM_SCALE_IN)
  private Boolean newInstancesProtectedFromScaleIn;

  public static final String SERIALIZED_NAME_CAPACITY_REBALANCE = "CapacityRebalance";
  @SerializedName(SERIALIZED_NAME_CAPACITY_REBALANCE)
  private Boolean capacityRebalance;

  public static final String SERIALIZED_NAME_LIFECYCLE_HOOK_SPECIFICATION_LIST = "LifecycleHookSpecificationList";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE_HOOK_SPECIFICATION_LIST)
  private List lifecycleHookSpecificationList;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_SERVICE_LINKED_ROLE_A_R_N = "ServiceLinkedRoleARN";
  @SerializedName(SERIALIZED_NAME_SERVICE_LINKED_ROLE_A_R_N)
  private String serviceLinkedRoleARN;

  public static final String SERIALIZED_NAME_MAX_INSTANCE_LIFETIME = "MaxInstanceLifetime";
  @SerializedName(SERIALIZED_NAME_MAX_INSTANCE_LIFETIME)
  private Integer maxInstanceLifetime;

  public static final String SERIALIZED_NAME_CONTEXT = "Context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private String context;

  public static final String SERIALIZED_NAME_DESIRED_CAPACITY_TYPE = "DesiredCapacityType";
  @SerializedName(SERIALIZED_NAME_DESIRED_CAPACITY_TYPE)
  private String desiredCapacityType;

  public static final String SERIALIZED_NAME_DEFAULT_INSTANCE_WARMUP = "DefaultInstanceWarmup";
  @SerializedName(SERIALIZED_NAME_DEFAULT_INSTANCE_WARMUP)
  private Integer defaultInstanceWarmup;

  public static final String SERIALIZED_NAME_TRAFFIC_SOURCES = "TrafficSources";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_SOURCES)
  private List trafficSources;

  public CreateAutoScalingGroupType() {
  }

  public CreateAutoScalingGroupType autoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
    return this;
  }

  /**
   * Get autoScalingGroupName
   * @return autoScalingGroupName
   */
  @javax.annotation.Nonnull
  public String getAutoScalingGroupName() {
    return autoScalingGroupName;
  }

  public void setAutoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
  }


  public CreateAutoScalingGroupType launchConfigurationName(String launchConfigurationName) {
    this.launchConfigurationName = launchConfigurationName;
    return this;
  }

  /**
   * Get launchConfigurationName
   * @return launchConfigurationName
   */
  @javax.annotation.Nullable
  public String getLaunchConfigurationName() {
    return launchConfigurationName;
  }

  public void setLaunchConfigurationName(String launchConfigurationName) {
    this.launchConfigurationName = launchConfigurationName;
  }


  public CreateAutoScalingGroupType launchTemplate(CreateAutoScalingGroupTypeLaunchTemplate launchTemplate) {
    this.launchTemplate = launchTemplate;
    return this;
  }

  /**
   * Get launchTemplate
   * @return launchTemplate
   */
  @javax.annotation.Nullable
  public CreateAutoScalingGroupTypeLaunchTemplate getLaunchTemplate() {
    return launchTemplate;
  }

  public void setLaunchTemplate(CreateAutoScalingGroupTypeLaunchTemplate launchTemplate) {
    this.launchTemplate = launchTemplate;
  }


  public CreateAutoScalingGroupType mixedInstancesPolicy(CreateAutoScalingGroupTypeMixedInstancesPolicy mixedInstancesPolicy) {
    this.mixedInstancesPolicy = mixedInstancesPolicy;
    return this;
  }

  /**
   * Get mixedInstancesPolicy
   * @return mixedInstancesPolicy
   */
  @javax.annotation.Nullable
  public CreateAutoScalingGroupTypeMixedInstancesPolicy getMixedInstancesPolicy() {
    return mixedInstancesPolicy;
  }

  public void setMixedInstancesPolicy(CreateAutoScalingGroupTypeMixedInstancesPolicy mixedInstancesPolicy) {
    this.mixedInstancesPolicy = mixedInstancesPolicy;
  }


  public CreateAutoScalingGroupType instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public CreateAutoScalingGroupType minSize(Integer minSize) {
    this.minSize = minSize;
    return this;
  }

  /**
   * Get minSize
   * @return minSize
   */
  @javax.annotation.Nonnull
  public Integer getMinSize() {
    return minSize;
  }

  public void setMinSize(Integer minSize) {
    this.minSize = minSize;
  }


  public CreateAutoScalingGroupType maxSize(Integer maxSize) {
    this.maxSize = maxSize;
    return this;
  }

  /**
   * Get maxSize
   * @return maxSize
   */
  @javax.annotation.Nonnull
  public Integer getMaxSize() {
    return maxSize;
  }

  public void setMaxSize(Integer maxSize) {
    this.maxSize = maxSize;
  }


  public CreateAutoScalingGroupType desiredCapacity(Integer desiredCapacity) {
    this.desiredCapacity = desiredCapacity;
    return this;
  }

  /**
   * Get desiredCapacity
   * @return desiredCapacity
   */
  @javax.annotation.Nullable
  public Integer getDesiredCapacity() {
    return desiredCapacity;
  }

  public void setDesiredCapacity(Integer desiredCapacity) {
    this.desiredCapacity = desiredCapacity;
  }


  public CreateAutoScalingGroupType defaultCooldown(Integer defaultCooldown) {
    this.defaultCooldown = defaultCooldown;
    return this;
  }

  /**
   * Get defaultCooldown
   * @return defaultCooldown
   */
  @javax.annotation.Nullable
  public Integer getDefaultCooldown() {
    return defaultCooldown;
  }

  public void setDefaultCooldown(Integer defaultCooldown) {
    this.defaultCooldown = defaultCooldown;
  }


  public CreateAutoScalingGroupType availabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  /**
   * Get availabilityZones
   * @return availabilityZones
   */
  @javax.annotation.Nullable
  public List getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public CreateAutoScalingGroupType loadBalancerNames(List loadBalancerNames) {
    this.loadBalancerNames = loadBalancerNames;
    return this;
  }

  /**
   * Get loadBalancerNames
   * @return loadBalancerNames
   */
  @javax.annotation.Nullable
  public List getLoadBalancerNames() {
    return loadBalancerNames;
  }

  public void setLoadBalancerNames(List loadBalancerNames) {
    this.loadBalancerNames = loadBalancerNames;
  }


  public CreateAutoScalingGroupType targetGroupARNs(List targetGroupARNs) {
    this.targetGroupARNs = targetGroupARNs;
    return this;
  }

  /**
   * Get targetGroupARNs
   * @return targetGroupARNs
   */
  @javax.annotation.Nullable
  public List getTargetGroupARNs() {
    return targetGroupARNs;
  }

  public void setTargetGroupARNs(List targetGroupARNs) {
    this.targetGroupARNs = targetGroupARNs;
  }


  public CreateAutoScalingGroupType healthCheckType(String healthCheckType) {
    this.healthCheckType = healthCheckType;
    return this;
  }

  /**
   * Get healthCheckType
   * @return healthCheckType
   */
  @javax.annotation.Nullable
  public String getHealthCheckType() {
    return healthCheckType;
  }

  public void setHealthCheckType(String healthCheckType) {
    this.healthCheckType = healthCheckType;
  }


  public CreateAutoScalingGroupType healthCheckGracePeriod(Integer healthCheckGracePeriod) {
    this.healthCheckGracePeriod = healthCheckGracePeriod;
    return this;
  }

  /**
   * Get healthCheckGracePeriod
   * @return healthCheckGracePeriod
   */
  @javax.annotation.Nullable
  public Integer getHealthCheckGracePeriod() {
    return healthCheckGracePeriod;
  }

  public void setHealthCheckGracePeriod(Integer healthCheckGracePeriod) {
    this.healthCheckGracePeriod = healthCheckGracePeriod;
  }


  public CreateAutoScalingGroupType placementGroup(String placementGroup) {
    this.placementGroup = placementGroup;
    return this;
  }

  /**
   * Get placementGroup
   * @return placementGroup
   */
  @javax.annotation.Nullable
  public String getPlacementGroup() {
    return placementGroup;
  }

  public void setPlacementGroup(String placementGroup) {
    this.placementGroup = placementGroup;
  }


  public CreateAutoScalingGroupType vpCZoneIdentifier(String vpCZoneIdentifier) {
    this.vpCZoneIdentifier = vpCZoneIdentifier;
    return this;
  }

  /**
   * Get vpCZoneIdentifier
   * @return vpCZoneIdentifier
   */
  @javax.annotation.Nullable
  public String getVpCZoneIdentifier() {
    return vpCZoneIdentifier;
  }

  public void setVpCZoneIdentifier(String vpCZoneIdentifier) {
    this.vpCZoneIdentifier = vpCZoneIdentifier;
  }


  public CreateAutoScalingGroupType terminationPolicies(List terminationPolicies) {
    this.terminationPolicies = terminationPolicies;
    return this;
  }

  /**
   * Get terminationPolicies
   * @return terminationPolicies
   */
  @javax.annotation.Nullable
  public List getTerminationPolicies() {
    return terminationPolicies;
  }

  public void setTerminationPolicies(List terminationPolicies) {
    this.terminationPolicies = terminationPolicies;
  }


  public CreateAutoScalingGroupType newInstancesProtectedFromScaleIn(Boolean newInstancesProtectedFromScaleIn) {
    this.newInstancesProtectedFromScaleIn = newInstancesProtectedFromScaleIn;
    return this;
  }

  /**
   * Get newInstancesProtectedFromScaleIn
   * @return newInstancesProtectedFromScaleIn
   */
  @javax.annotation.Nullable
  public Boolean getNewInstancesProtectedFromScaleIn() {
    return newInstancesProtectedFromScaleIn;
  }

  public void setNewInstancesProtectedFromScaleIn(Boolean newInstancesProtectedFromScaleIn) {
    this.newInstancesProtectedFromScaleIn = newInstancesProtectedFromScaleIn;
  }


  public CreateAutoScalingGroupType capacityRebalance(Boolean capacityRebalance) {
    this.capacityRebalance = capacityRebalance;
    return this;
  }

  /**
   * Get capacityRebalance
   * @return capacityRebalance
   */
  @javax.annotation.Nullable
  public Boolean getCapacityRebalance() {
    return capacityRebalance;
  }

  public void setCapacityRebalance(Boolean capacityRebalance) {
    this.capacityRebalance = capacityRebalance;
  }


  public CreateAutoScalingGroupType lifecycleHookSpecificationList(List lifecycleHookSpecificationList) {
    this.lifecycleHookSpecificationList = lifecycleHookSpecificationList;
    return this;
  }

  /**
   * Get lifecycleHookSpecificationList
   * @return lifecycleHookSpecificationList
   */
  @javax.annotation.Nullable
  public List getLifecycleHookSpecificationList() {
    return lifecycleHookSpecificationList;
  }

  public void setLifecycleHookSpecificationList(List lifecycleHookSpecificationList) {
    this.lifecycleHookSpecificationList = lifecycleHookSpecificationList;
  }


  public CreateAutoScalingGroupType tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateAutoScalingGroupType serviceLinkedRoleARN(String serviceLinkedRoleARN) {
    this.serviceLinkedRoleARN = serviceLinkedRoleARN;
    return this;
  }

  /**
   * Get serviceLinkedRoleARN
   * @return serviceLinkedRoleARN
   */
  @javax.annotation.Nullable
  public String getServiceLinkedRoleARN() {
    return serviceLinkedRoleARN;
  }

  public void setServiceLinkedRoleARN(String serviceLinkedRoleARN) {
    this.serviceLinkedRoleARN = serviceLinkedRoleARN;
  }


  public CreateAutoScalingGroupType maxInstanceLifetime(Integer maxInstanceLifetime) {
    this.maxInstanceLifetime = maxInstanceLifetime;
    return this;
  }

  /**
   * Get maxInstanceLifetime
   * @return maxInstanceLifetime
   */
  @javax.annotation.Nullable
  public Integer getMaxInstanceLifetime() {
    return maxInstanceLifetime;
  }

  public void setMaxInstanceLifetime(Integer maxInstanceLifetime) {
    this.maxInstanceLifetime = maxInstanceLifetime;
  }


  public CreateAutoScalingGroupType context(String context) {
    this.context = context;
    return this;
  }

  /**
   * Get context
   * @return context
   */
  @javax.annotation.Nullable
  public String getContext() {
    return context;
  }

  public void setContext(String context) {
    this.context = context;
  }


  public CreateAutoScalingGroupType desiredCapacityType(String desiredCapacityType) {
    this.desiredCapacityType = desiredCapacityType;
    return this;
  }

  /**
   * Get desiredCapacityType
   * @return desiredCapacityType
   */
  @javax.annotation.Nullable
  public String getDesiredCapacityType() {
    return desiredCapacityType;
  }

  public void setDesiredCapacityType(String desiredCapacityType) {
    this.desiredCapacityType = desiredCapacityType;
  }


  public CreateAutoScalingGroupType defaultInstanceWarmup(Integer defaultInstanceWarmup) {
    this.defaultInstanceWarmup = defaultInstanceWarmup;
    return this;
  }

  /**
   * Get defaultInstanceWarmup
   * @return defaultInstanceWarmup
   */
  @javax.annotation.Nullable
  public Integer getDefaultInstanceWarmup() {
    return defaultInstanceWarmup;
  }

  public void setDefaultInstanceWarmup(Integer defaultInstanceWarmup) {
    this.defaultInstanceWarmup = defaultInstanceWarmup;
  }


  public CreateAutoScalingGroupType trafficSources(List trafficSources) {
    this.trafficSources = trafficSources;
    return this;
  }

  /**
   * Get trafficSources
   * @return trafficSources
   */
  @javax.annotation.Nullable
  public List getTrafficSources() {
    return trafficSources;
  }

  public void setTrafficSources(List trafficSources) {
    this.trafficSources = trafficSources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAutoScalingGroupType createAutoScalingGroupType = (CreateAutoScalingGroupType) o;
    return Objects.equals(this.autoScalingGroupName, createAutoScalingGroupType.autoScalingGroupName) &&
        Objects.equals(this.launchConfigurationName, createAutoScalingGroupType.launchConfigurationName) &&
        Objects.equals(this.launchTemplate, createAutoScalingGroupType.launchTemplate) &&
        Objects.equals(this.mixedInstancesPolicy, createAutoScalingGroupType.mixedInstancesPolicy) &&
        Objects.equals(this.instanceId, createAutoScalingGroupType.instanceId) &&
        Objects.equals(this.minSize, createAutoScalingGroupType.minSize) &&
        Objects.equals(this.maxSize, createAutoScalingGroupType.maxSize) &&
        Objects.equals(this.desiredCapacity, createAutoScalingGroupType.desiredCapacity) &&
        Objects.equals(this.defaultCooldown, createAutoScalingGroupType.defaultCooldown) &&
        Objects.equals(this.availabilityZones, createAutoScalingGroupType.availabilityZones) &&
        Objects.equals(this.loadBalancerNames, createAutoScalingGroupType.loadBalancerNames) &&
        Objects.equals(this.targetGroupARNs, createAutoScalingGroupType.targetGroupARNs) &&
        Objects.equals(this.healthCheckType, createAutoScalingGroupType.healthCheckType) &&
        Objects.equals(this.healthCheckGracePeriod, createAutoScalingGroupType.healthCheckGracePeriod) &&
        Objects.equals(this.placementGroup, createAutoScalingGroupType.placementGroup) &&
        Objects.equals(this.vpCZoneIdentifier, createAutoScalingGroupType.vpCZoneIdentifier) &&
        Objects.equals(this.terminationPolicies, createAutoScalingGroupType.terminationPolicies) &&
        Objects.equals(this.newInstancesProtectedFromScaleIn, createAutoScalingGroupType.newInstancesProtectedFromScaleIn) &&
        Objects.equals(this.capacityRebalance, createAutoScalingGroupType.capacityRebalance) &&
        Objects.equals(this.lifecycleHookSpecificationList, createAutoScalingGroupType.lifecycleHookSpecificationList) &&
        Objects.equals(this.tags, createAutoScalingGroupType.tags) &&
        Objects.equals(this.serviceLinkedRoleARN, createAutoScalingGroupType.serviceLinkedRoleARN) &&
        Objects.equals(this.maxInstanceLifetime, createAutoScalingGroupType.maxInstanceLifetime) &&
        Objects.equals(this.context, createAutoScalingGroupType.context) &&
        Objects.equals(this.desiredCapacityType, createAutoScalingGroupType.desiredCapacityType) &&
        Objects.equals(this.defaultInstanceWarmup, createAutoScalingGroupType.defaultInstanceWarmup) &&
        Objects.equals(this.trafficSources, createAutoScalingGroupType.trafficSources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoScalingGroupName, launchConfigurationName, launchTemplate, mixedInstancesPolicy, instanceId, minSize, maxSize, desiredCapacity, defaultCooldown, availabilityZones, loadBalancerNames, targetGroupARNs, healthCheckType, healthCheckGracePeriod, placementGroup, vpCZoneIdentifier, terminationPolicies, newInstancesProtectedFromScaleIn, capacityRebalance, lifecycleHookSpecificationList, tags, serviceLinkedRoleARN, maxInstanceLifetime, context, desiredCapacityType, defaultInstanceWarmup, trafficSources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAutoScalingGroupType {\n");
    sb.append("    autoScalingGroupName: ").append(toIndentedString(autoScalingGroupName)).append("\n");
    sb.append("    launchConfigurationName: ").append(toIndentedString(launchConfigurationName)).append("\n");
    sb.append("    launchTemplate: ").append(toIndentedString(launchTemplate)).append("\n");
    sb.append("    mixedInstancesPolicy: ").append(toIndentedString(mixedInstancesPolicy)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    minSize: ").append(toIndentedString(minSize)).append("\n");
    sb.append("    maxSize: ").append(toIndentedString(maxSize)).append("\n");
    sb.append("    desiredCapacity: ").append(toIndentedString(desiredCapacity)).append("\n");
    sb.append("    defaultCooldown: ").append(toIndentedString(defaultCooldown)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    loadBalancerNames: ").append(toIndentedString(loadBalancerNames)).append("\n");
    sb.append("    targetGroupARNs: ").append(toIndentedString(targetGroupARNs)).append("\n");
    sb.append("    healthCheckType: ").append(toIndentedString(healthCheckType)).append("\n");
    sb.append("    healthCheckGracePeriod: ").append(toIndentedString(healthCheckGracePeriod)).append("\n");
    sb.append("    placementGroup: ").append(toIndentedString(placementGroup)).append("\n");
    sb.append("    vpCZoneIdentifier: ").append(toIndentedString(vpCZoneIdentifier)).append("\n");
    sb.append("    terminationPolicies: ").append(toIndentedString(terminationPolicies)).append("\n");
    sb.append("    newInstancesProtectedFromScaleIn: ").append(toIndentedString(newInstancesProtectedFromScaleIn)).append("\n");
    sb.append("    capacityRebalance: ").append(toIndentedString(capacityRebalance)).append("\n");
    sb.append("    lifecycleHookSpecificationList: ").append(toIndentedString(lifecycleHookSpecificationList)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    serviceLinkedRoleARN: ").append(toIndentedString(serviceLinkedRoleARN)).append("\n");
    sb.append("    maxInstanceLifetime: ").append(toIndentedString(maxInstanceLifetime)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    desiredCapacityType: ").append(toIndentedString(desiredCapacityType)).append("\n");
    sb.append("    defaultInstanceWarmup: ").append(toIndentedString(defaultInstanceWarmup)).append("\n");
    sb.append("    trafficSources: ").append(toIndentedString(trafficSources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutoScalingGroupName");
    openapiFields.add("LaunchConfigurationName");
    openapiFields.add("LaunchTemplate");
    openapiFields.add("MixedInstancesPolicy");
    openapiFields.add("InstanceId");
    openapiFields.add("MinSize");
    openapiFields.add("MaxSize");
    openapiFields.add("DesiredCapacity");
    openapiFields.add("DefaultCooldown");
    openapiFields.add("AvailabilityZones");
    openapiFields.add("LoadBalancerNames");
    openapiFields.add("TargetGroupARNs");
    openapiFields.add("HealthCheckType");
    openapiFields.add("HealthCheckGracePeriod");
    openapiFields.add("PlacementGroup");
    openapiFields.add("VPCZoneIdentifier");
    openapiFields.add("TerminationPolicies");
    openapiFields.add("NewInstancesProtectedFromScaleIn");
    openapiFields.add("CapacityRebalance");
    openapiFields.add("LifecycleHookSpecificationList");
    openapiFields.add("Tags");
    openapiFields.add("ServiceLinkedRoleARN");
    openapiFields.add("MaxInstanceLifetime");
    openapiFields.add("Context");
    openapiFields.add("DesiredCapacityType");
    openapiFields.add("DefaultInstanceWarmup");
    openapiFields.add("TrafficSources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AutoScalingGroupName");
    openapiRequiredFields.add("MinSize");
    openapiRequiredFields.add("MaxSize");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAutoScalingGroupType
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAutoScalingGroupType.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAutoScalingGroupType is not found in the empty JSON string", CreateAutoScalingGroupType.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAutoScalingGroupType.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAutoScalingGroupType` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAutoScalingGroupType.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `AutoScalingGroupName`
      String.validateJsonElement(jsonObj.get("AutoScalingGroupName"));
      // validate the optional field `LaunchConfigurationName`
      if (jsonObj.get("LaunchConfigurationName") != null && !jsonObj.get("LaunchConfigurationName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LaunchConfigurationName"));
      }
      // validate the optional field `LaunchTemplate`
      if (jsonObj.get("LaunchTemplate") != null && !jsonObj.get("LaunchTemplate").isJsonNull()) {
        CreateAutoScalingGroupTypeLaunchTemplate.validateJsonElement(jsonObj.get("LaunchTemplate"));
      }
      // validate the optional field `MixedInstancesPolicy`
      if (jsonObj.get("MixedInstancesPolicy") != null && !jsonObj.get("MixedInstancesPolicy").isJsonNull()) {
        CreateAutoScalingGroupTypeMixedInstancesPolicy.validateJsonElement(jsonObj.get("MixedInstancesPolicy"));
      }
      // validate the optional field `InstanceId`
      if (jsonObj.get("InstanceId") != null && !jsonObj.get("InstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceId"));
      }
      // validate the required field `MinSize`
      Integer.validateJsonElement(jsonObj.get("MinSize"));
      // validate the required field `MaxSize`
      Integer.validateJsonElement(jsonObj.get("MaxSize"));
      // validate the optional field `DesiredCapacity`
      if (jsonObj.get("DesiredCapacity") != null && !jsonObj.get("DesiredCapacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DesiredCapacity"));
      }
      // validate the optional field `DefaultCooldown`
      if (jsonObj.get("DefaultCooldown") != null && !jsonObj.get("DefaultCooldown").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DefaultCooldown"));
      }
      // validate the optional field `AvailabilityZones`
      if (jsonObj.get("AvailabilityZones") != null && !jsonObj.get("AvailabilityZones").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AvailabilityZones"));
      }
      // validate the optional field `LoadBalancerNames`
      if (jsonObj.get("LoadBalancerNames") != null && !jsonObj.get("LoadBalancerNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LoadBalancerNames"));
      }
      // validate the optional field `TargetGroupARNs`
      if (jsonObj.get("TargetGroupARNs") != null && !jsonObj.get("TargetGroupARNs").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TargetGroupARNs"));
      }
      // validate the optional field `HealthCheckType`
      if (jsonObj.get("HealthCheckType") != null && !jsonObj.get("HealthCheckType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HealthCheckType"));
      }
      // validate the optional field `HealthCheckGracePeriod`
      if (jsonObj.get("HealthCheckGracePeriod") != null && !jsonObj.get("HealthCheckGracePeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("HealthCheckGracePeriod"));
      }
      // validate the optional field `PlacementGroup`
      if (jsonObj.get("PlacementGroup") != null && !jsonObj.get("PlacementGroup").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlacementGroup"));
      }
      // validate the optional field `VPCZoneIdentifier`
      if (jsonObj.get("VPCZoneIdentifier") != null && !jsonObj.get("VPCZoneIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VPCZoneIdentifier"));
      }
      // validate the optional field `TerminationPolicies`
      if (jsonObj.get("TerminationPolicies") != null && !jsonObj.get("TerminationPolicies").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TerminationPolicies"));
      }
      // validate the optional field `NewInstancesProtectedFromScaleIn`
      if (jsonObj.get("NewInstancesProtectedFromScaleIn") != null && !jsonObj.get("NewInstancesProtectedFromScaleIn").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("NewInstancesProtectedFromScaleIn"));
      }
      // validate the optional field `CapacityRebalance`
      if (jsonObj.get("CapacityRebalance") != null && !jsonObj.get("CapacityRebalance").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CapacityRebalance"));
      }
      // validate the optional field `LifecycleHookSpecificationList`
      if (jsonObj.get("LifecycleHookSpecificationList") != null && !jsonObj.get("LifecycleHookSpecificationList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LifecycleHookSpecificationList"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `ServiceLinkedRoleARN`
      if (jsonObj.get("ServiceLinkedRoleARN") != null && !jsonObj.get("ServiceLinkedRoleARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceLinkedRoleARN"));
      }
      // validate the optional field `MaxInstanceLifetime`
      if (jsonObj.get("MaxInstanceLifetime") != null && !jsonObj.get("MaxInstanceLifetime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxInstanceLifetime"));
      }
      // validate the optional field `Context`
      if (jsonObj.get("Context") != null && !jsonObj.get("Context").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Context"));
      }
      // validate the optional field `DesiredCapacityType`
      if (jsonObj.get("DesiredCapacityType") != null && !jsonObj.get("DesiredCapacityType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DesiredCapacityType"));
      }
      // validate the optional field `DefaultInstanceWarmup`
      if (jsonObj.get("DefaultInstanceWarmup") != null && !jsonObj.get("DefaultInstanceWarmup").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DefaultInstanceWarmup"));
      }
      // validate the optional field `TrafficSources`
      if (jsonObj.get("TrafficSources") != null && !jsonObj.get("TrafficSources").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TrafficSources"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAutoScalingGroupType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAutoScalingGroupType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAutoScalingGroupType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAutoScalingGroupType.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAutoScalingGroupType>() {
           @Override
           public void write(JsonWriter out, CreateAutoScalingGroupType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAutoScalingGroupType read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAutoScalingGroupType given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAutoScalingGroupType
   * @throws IOException if the JSON string is invalid with respect to CreateAutoScalingGroupType
   */
  public static CreateAutoScalingGroupType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAutoScalingGroupType.class);
  }

  /**
   * Convert an instance of CreateAutoScalingGroupType to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

