/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ScalingPolicyPredictiveScalingConfiguration;
import org.openapitools.client.model.ScalingPolicyTargetTrackingConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes a scaling policy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScalingPolicy {
  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME = "AutoScalingGroupName";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME)
  private String autoScalingGroupName;

  public static final String SERIALIZED_NAME_POLICY_NAME = "PolicyName";
  @SerializedName(SERIALIZED_NAME_POLICY_NAME)
  private String policyName;

  public static final String SERIALIZED_NAME_POLICY_A_R_N = "PolicyARN";
  @SerializedName(SERIALIZED_NAME_POLICY_A_R_N)
  private String policyARN;

  public static final String SERIALIZED_NAME_POLICY_TYPE = "PolicyType";
  @SerializedName(SERIALIZED_NAME_POLICY_TYPE)
  private String policyType;

  public static final String SERIALIZED_NAME_ADJUSTMENT_TYPE = "AdjustmentType";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_TYPE)
  private String adjustmentType;

  public static final String SERIALIZED_NAME_MIN_ADJUSTMENT_STEP = "MinAdjustmentStep";
  @SerializedName(SERIALIZED_NAME_MIN_ADJUSTMENT_STEP)
  private Integer minAdjustmentStep;

  public static final String SERIALIZED_NAME_MIN_ADJUSTMENT_MAGNITUDE = "MinAdjustmentMagnitude";
  @SerializedName(SERIALIZED_NAME_MIN_ADJUSTMENT_MAGNITUDE)
  private Integer minAdjustmentMagnitude;

  public static final String SERIALIZED_NAME_SCALING_ADJUSTMENT = "ScalingAdjustment";
  @SerializedName(SERIALIZED_NAME_SCALING_ADJUSTMENT)
  private Integer scalingAdjustment;

  public static final String SERIALIZED_NAME_COOLDOWN = "Cooldown";
  @SerializedName(SERIALIZED_NAME_COOLDOWN)
  private Integer cooldown;

  public static final String SERIALIZED_NAME_STEP_ADJUSTMENTS = "StepAdjustments";
  @SerializedName(SERIALIZED_NAME_STEP_ADJUSTMENTS)
  private List stepAdjustments;

  public static final String SERIALIZED_NAME_METRIC_AGGREGATION_TYPE = "MetricAggregationType";
  @SerializedName(SERIALIZED_NAME_METRIC_AGGREGATION_TYPE)
  private String metricAggregationType;

  public static final String SERIALIZED_NAME_ESTIMATED_INSTANCE_WARMUP = "EstimatedInstanceWarmup";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_INSTANCE_WARMUP)
  private Integer estimatedInstanceWarmup;

  public static final String SERIALIZED_NAME_ALARMS = "Alarms";
  @SerializedName(SERIALIZED_NAME_ALARMS)
  private List alarms;

  public static final String SERIALIZED_NAME_TARGET_TRACKING_CONFIGURATION = "TargetTrackingConfiguration";
  @SerializedName(SERIALIZED_NAME_TARGET_TRACKING_CONFIGURATION)
  private ScalingPolicyTargetTrackingConfiguration targetTrackingConfiguration;

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_PREDICTIVE_SCALING_CONFIGURATION = "PredictiveScalingConfiguration";
  @SerializedName(SERIALIZED_NAME_PREDICTIVE_SCALING_CONFIGURATION)
  private ScalingPolicyPredictiveScalingConfiguration predictiveScalingConfiguration;

  public ScalingPolicy() {
  }

  public ScalingPolicy autoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
    return this;
  }

  /**
   * Get autoScalingGroupName
   * @return autoScalingGroupName
   */
  @javax.annotation.Nullable
  public String getAutoScalingGroupName() {
    return autoScalingGroupName;
  }

  public void setAutoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
  }


  public ScalingPolicy policyName(String policyName) {
    this.policyName = policyName;
    return this;
  }

  /**
   * Get policyName
   * @return policyName
   */
  @javax.annotation.Nullable
  public String getPolicyName() {
    return policyName;
  }

  public void setPolicyName(String policyName) {
    this.policyName = policyName;
  }


  public ScalingPolicy policyARN(String policyARN) {
    this.policyARN = policyARN;
    return this;
  }

  /**
   * Get policyARN
   * @return policyARN
   */
  @javax.annotation.Nullable
  public String getPolicyARN() {
    return policyARN;
  }

  public void setPolicyARN(String policyARN) {
    this.policyARN = policyARN;
  }


  public ScalingPolicy policyType(String policyType) {
    this.policyType = policyType;
    return this;
  }

  /**
   * Get policyType
   * @return policyType
   */
  @javax.annotation.Nullable
  public String getPolicyType() {
    return policyType;
  }

  public void setPolicyType(String policyType) {
    this.policyType = policyType;
  }


  public ScalingPolicy adjustmentType(String adjustmentType) {
    this.adjustmentType = adjustmentType;
    return this;
  }

  /**
   * Get adjustmentType
   * @return adjustmentType
   */
  @javax.annotation.Nullable
  public String getAdjustmentType() {
    return adjustmentType;
  }

  public void setAdjustmentType(String adjustmentType) {
    this.adjustmentType = adjustmentType;
  }


  public ScalingPolicy minAdjustmentStep(Integer minAdjustmentStep) {
    this.minAdjustmentStep = minAdjustmentStep;
    return this;
  }

  /**
   * Get minAdjustmentStep
   * @return minAdjustmentStep
   */
  @javax.annotation.Nullable
  public Integer getMinAdjustmentStep() {
    return minAdjustmentStep;
  }

  public void setMinAdjustmentStep(Integer minAdjustmentStep) {
    this.minAdjustmentStep = minAdjustmentStep;
  }


  public ScalingPolicy minAdjustmentMagnitude(Integer minAdjustmentMagnitude) {
    this.minAdjustmentMagnitude = minAdjustmentMagnitude;
    return this;
  }

  /**
   * Get minAdjustmentMagnitude
   * @return minAdjustmentMagnitude
   */
  @javax.annotation.Nullable
  public Integer getMinAdjustmentMagnitude() {
    return minAdjustmentMagnitude;
  }

  public void setMinAdjustmentMagnitude(Integer minAdjustmentMagnitude) {
    this.minAdjustmentMagnitude = minAdjustmentMagnitude;
  }


  public ScalingPolicy scalingAdjustment(Integer scalingAdjustment) {
    this.scalingAdjustment = scalingAdjustment;
    return this;
  }

  /**
   * Get scalingAdjustment
   * @return scalingAdjustment
   */
  @javax.annotation.Nullable
  public Integer getScalingAdjustment() {
    return scalingAdjustment;
  }

  public void setScalingAdjustment(Integer scalingAdjustment) {
    this.scalingAdjustment = scalingAdjustment;
  }


  public ScalingPolicy cooldown(Integer cooldown) {
    this.cooldown = cooldown;
    return this;
  }

  /**
   * Get cooldown
   * @return cooldown
   */
  @javax.annotation.Nullable
  public Integer getCooldown() {
    return cooldown;
  }

  public void setCooldown(Integer cooldown) {
    this.cooldown = cooldown;
  }


  public ScalingPolicy stepAdjustments(List stepAdjustments) {
    this.stepAdjustments = stepAdjustments;
    return this;
  }

  /**
   * Get stepAdjustments
   * @return stepAdjustments
   */
  @javax.annotation.Nullable
  public List getStepAdjustments() {
    return stepAdjustments;
  }

  public void setStepAdjustments(List stepAdjustments) {
    this.stepAdjustments = stepAdjustments;
  }


  public ScalingPolicy metricAggregationType(String metricAggregationType) {
    this.metricAggregationType = metricAggregationType;
    return this;
  }

  /**
   * Get metricAggregationType
   * @return metricAggregationType
   */
  @javax.annotation.Nullable
  public String getMetricAggregationType() {
    return metricAggregationType;
  }

  public void setMetricAggregationType(String metricAggregationType) {
    this.metricAggregationType = metricAggregationType;
  }


  public ScalingPolicy estimatedInstanceWarmup(Integer estimatedInstanceWarmup) {
    this.estimatedInstanceWarmup = estimatedInstanceWarmup;
    return this;
  }

  /**
   * Get estimatedInstanceWarmup
   * @return estimatedInstanceWarmup
   */
  @javax.annotation.Nullable
  public Integer getEstimatedInstanceWarmup() {
    return estimatedInstanceWarmup;
  }

  public void setEstimatedInstanceWarmup(Integer estimatedInstanceWarmup) {
    this.estimatedInstanceWarmup = estimatedInstanceWarmup;
  }


  public ScalingPolicy alarms(List alarms) {
    this.alarms = alarms;
    return this;
  }

  /**
   * Get alarms
   * @return alarms
   */
  @javax.annotation.Nullable
  public List getAlarms() {
    return alarms;
  }

  public void setAlarms(List alarms) {
    this.alarms = alarms;
  }


  public ScalingPolicy targetTrackingConfiguration(ScalingPolicyTargetTrackingConfiguration targetTrackingConfiguration) {
    this.targetTrackingConfiguration = targetTrackingConfiguration;
    return this;
  }

  /**
   * Get targetTrackingConfiguration
   * @return targetTrackingConfiguration
   */
  @javax.annotation.Nullable
  public ScalingPolicyTargetTrackingConfiguration getTargetTrackingConfiguration() {
    return targetTrackingConfiguration;
  }

  public void setTargetTrackingConfiguration(ScalingPolicyTargetTrackingConfiguration targetTrackingConfiguration) {
    this.targetTrackingConfiguration = targetTrackingConfiguration;
  }


  public ScalingPolicy enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ScalingPolicy predictiveScalingConfiguration(ScalingPolicyPredictiveScalingConfiguration predictiveScalingConfiguration) {
    this.predictiveScalingConfiguration = predictiveScalingConfiguration;
    return this;
  }

  /**
   * Get predictiveScalingConfiguration
   * @return predictiveScalingConfiguration
   */
  @javax.annotation.Nullable
  public ScalingPolicyPredictiveScalingConfiguration getPredictiveScalingConfiguration() {
    return predictiveScalingConfiguration;
  }

  public void setPredictiveScalingConfiguration(ScalingPolicyPredictiveScalingConfiguration predictiveScalingConfiguration) {
    this.predictiveScalingConfiguration = predictiveScalingConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScalingPolicy scalingPolicy = (ScalingPolicy) o;
    return Objects.equals(this.autoScalingGroupName, scalingPolicy.autoScalingGroupName) &&
        Objects.equals(this.policyName, scalingPolicy.policyName) &&
        Objects.equals(this.policyARN, scalingPolicy.policyARN) &&
        Objects.equals(this.policyType, scalingPolicy.policyType) &&
        Objects.equals(this.adjustmentType, scalingPolicy.adjustmentType) &&
        Objects.equals(this.minAdjustmentStep, scalingPolicy.minAdjustmentStep) &&
        Objects.equals(this.minAdjustmentMagnitude, scalingPolicy.minAdjustmentMagnitude) &&
        Objects.equals(this.scalingAdjustment, scalingPolicy.scalingAdjustment) &&
        Objects.equals(this.cooldown, scalingPolicy.cooldown) &&
        Objects.equals(this.stepAdjustments, scalingPolicy.stepAdjustments) &&
        Objects.equals(this.metricAggregationType, scalingPolicy.metricAggregationType) &&
        Objects.equals(this.estimatedInstanceWarmup, scalingPolicy.estimatedInstanceWarmup) &&
        Objects.equals(this.alarms, scalingPolicy.alarms) &&
        Objects.equals(this.targetTrackingConfiguration, scalingPolicy.targetTrackingConfiguration) &&
        Objects.equals(this.enabled, scalingPolicy.enabled) &&
        Objects.equals(this.predictiveScalingConfiguration, scalingPolicy.predictiveScalingConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoScalingGroupName, policyName, policyARN, policyType, adjustmentType, minAdjustmentStep, minAdjustmentMagnitude, scalingAdjustment, cooldown, stepAdjustments, metricAggregationType, estimatedInstanceWarmup, alarms, targetTrackingConfiguration, enabled, predictiveScalingConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScalingPolicy {\n");
    sb.append("    autoScalingGroupName: ").append(toIndentedString(autoScalingGroupName)).append("\n");
    sb.append("    policyName: ").append(toIndentedString(policyName)).append("\n");
    sb.append("    policyARN: ").append(toIndentedString(policyARN)).append("\n");
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("    adjustmentType: ").append(toIndentedString(adjustmentType)).append("\n");
    sb.append("    minAdjustmentStep: ").append(toIndentedString(minAdjustmentStep)).append("\n");
    sb.append("    minAdjustmentMagnitude: ").append(toIndentedString(minAdjustmentMagnitude)).append("\n");
    sb.append("    scalingAdjustment: ").append(toIndentedString(scalingAdjustment)).append("\n");
    sb.append("    cooldown: ").append(toIndentedString(cooldown)).append("\n");
    sb.append("    stepAdjustments: ").append(toIndentedString(stepAdjustments)).append("\n");
    sb.append("    metricAggregationType: ").append(toIndentedString(metricAggregationType)).append("\n");
    sb.append("    estimatedInstanceWarmup: ").append(toIndentedString(estimatedInstanceWarmup)).append("\n");
    sb.append("    alarms: ").append(toIndentedString(alarms)).append("\n");
    sb.append("    targetTrackingConfiguration: ").append(toIndentedString(targetTrackingConfiguration)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    predictiveScalingConfiguration: ").append(toIndentedString(predictiveScalingConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutoScalingGroupName");
    openapiFields.add("PolicyName");
    openapiFields.add("PolicyARN");
    openapiFields.add("PolicyType");
    openapiFields.add("AdjustmentType");
    openapiFields.add("MinAdjustmentStep");
    openapiFields.add("MinAdjustmentMagnitude");
    openapiFields.add("ScalingAdjustment");
    openapiFields.add("Cooldown");
    openapiFields.add("StepAdjustments");
    openapiFields.add("MetricAggregationType");
    openapiFields.add("EstimatedInstanceWarmup");
    openapiFields.add("Alarms");
    openapiFields.add("TargetTrackingConfiguration");
    openapiFields.add("Enabled");
    openapiFields.add("PredictiveScalingConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScalingPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScalingPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScalingPolicy is not found in the empty JSON string", ScalingPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScalingPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScalingPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AutoScalingGroupName`
      if (jsonObj.get("AutoScalingGroupName") != null && !jsonObj.get("AutoScalingGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AutoScalingGroupName"));
      }
      // validate the optional field `PolicyName`
      if (jsonObj.get("PolicyName") != null && !jsonObj.get("PolicyName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PolicyName"));
      }
      // validate the optional field `PolicyARN`
      if (jsonObj.get("PolicyARN") != null && !jsonObj.get("PolicyARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PolicyARN"));
      }
      // validate the optional field `PolicyType`
      if (jsonObj.get("PolicyType") != null && !jsonObj.get("PolicyType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PolicyType"));
      }
      // validate the optional field `AdjustmentType`
      if (jsonObj.get("AdjustmentType") != null && !jsonObj.get("AdjustmentType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AdjustmentType"));
      }
      // validate the optional field `MinAdjustmentStep`
      if (jsonObj.get("MinAdjustmentStep") != null && !jsonObj.get("MinAdjustmentStep").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinAdjustmentStep"));
      }
      // validate the optional field `MinAdjustmentMagnitude`
      if (jsonObj.get("MinAdjustmentMagnitude") != null && !jsonObj.get("MinAdjustmentMagnitude").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinAdjustmentMagnitude"));
      }
      // validate the optional field `ScalingAdjustment`
      if (jsonObj.get("ScalingAdjustment") != null && !jsonObj.get("ScalingAdjustment").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ScalingAdjustment"));
      }
      // validate the optional field `Cooldown`
      if (jsonObj.get("Cooldown") != null && !jsonObj.get("Cooldown").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Cooldown"));
      }
      // validate the optional field `StepAdjustments`
      if (jsonObj.get("StepAdjustments") != null && !jsonObj.get("StepAdjustments").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StepAdjustments"));
      }
      // validate the optional field `MetricAggregationType`
      if (jsonObj.get("MetricAggregationType") != null && !jsonObj.get("MetricAggregationType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MetricAggregationType"));
      }
      // validate the optional field `EstimatedInstanceWarmup`
      if (jsonObj.get("EstimatedInstanceWarmup") != null && !jsonObj.get("EstimatedInstanceWarmup").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EstimatedInstanceWarmup"));
      }
      // validate the optional field `Alarms`
      if (jsonObj.get("Alarms") != null && !jsonObj.get("Alarms").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Alarms"));
      }
      // validate the optional field `TargetTrackingConfiguration`
      if (jsonObj.get("TargetTrackingConfiguration") != null && !jsonObj.get("TargetTrackingConfiguration").isJsonNull()) {
        ScalingPolicyTargetTrackingConfiguration.validateJsonElement(jsonObj.get("TargetTrackingConfiguration"));
      }
      // validate the optional field `Enabled`
      if (jsonObj.get("Enabled") != null && !jsonObj.get("Enabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Enabled"));
      }
      // validate the optional field `PredictiveScalingConfiguration`
      if (jsonObj.get("PredictiveScalingConfiguration") != null && !jsonObj.get("PredictiveScalingConfiguration").isJsonNull()) {
        ScalingPolicyPredictiveScalingConfiguration.validateJsonElement(jsonObj.get("PredictiveScalingConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScalingPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScalingPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScalingPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScalingPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<ScalingPolicy>() {
           @Override
           public void write(JsonWriter out, ScalingPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScalingPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScalingPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScalingPolicy
   * @throws IOException if the JSON string is invalid with respect to ScalingPolicy
   */
  public static ScalingPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScalingPolicy.class);
  }

  /**
   * Convert an instance of ScalingPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

