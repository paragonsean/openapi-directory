/*
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AutoScalingInstanceDetailsLaunchTemplate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes an EC2 instance associated with an Auto Scaling group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:42.641692-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutoScalingInstanceDetails {
  public static final String SERIALIZED_NAME_INSTANCE_ID = "InstanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private String instanceType;

  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME = "AutoScalingGroupName";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUP_NAME)
  private String autoScalingGroupName;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE = "AvailabilityZone";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE)
  private String availabilityZone;

  public static final String SERIALIZED_NAME_LIFECYCLE_STATE = "LifecycleState";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE_STATE)
  private String lifecycleState;

  public static final String SERIALIZED_NAME_HEALTH_STATUS = "HealthStatus";
  @SerializedName(SERIALIZED_NAME_HEALTH_STATUS)
  private String healthStatus;

  public static final String SERIALIZED_NAME_LAUNCH_CONFIGURATION_NAME = "LaunchConfigurationName";
  @SerializedName(SERIALIZED_NAME_LAUNCH_CONFIGURATION_NAME)
  private String launchConfigurationName;

  public static final String SERIALIZED_NAME_LAUNCH_TEMPLATE = "LaunchTemplate";
  @SerializedName(SERIALIZED_NAME_LAUNCH_TEMPLATE)
  private AutoScalingInstanceDetailsLaunchTemplate launchTemplate;

  public static final String SERIALIZED_NAME_PROTECTED_FROM_SCALE_IN = "ProtectedFromScaleIn";
  @SerializedName(SERIALIZED_NAME_PROTECTED_FROM_SCALE_IN)
  private Boolean protectedFromScaleIn;

  public static final String SERIALIZED_NAME_WEIGHTED_CAPACITY = "WeightedCapacity";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_CAPACITY)
  private String weightedCapacity;

  public AutoScalingInstanceDetails() {
  }

  public AutoScalingInstanceDetails instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nonnull
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public AutoScalingInstanceDetails instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }


  public AutoScalingInstanceDetails autoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
    return this;
  }

  /**
   * Get autoScalingGroupName
   * @return autoScalingGroupName
   */
  @javax.annotation.Nonnull
  public String getAutoScalingGroupName() {
    return autoScalingGroupName;
  }

  public void setAutoScalingGroupName(String autoScalingGroupName) {
    this.autoScalingGroupName = autoScalingGroupName;
  }


  public AutoScalingInstanceDetails availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

  /**
   * Get availabilityZone
   * @return availabilityZone
   */
  @javax.annotation.Nonnull
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public AutoScalingInstanceDetails lifecycleState(String lifecycleState) {
    this.lifecycleState = lifecycleState;
    return this;
  }

  /**
   * Get lifecycleState
   * @return lifecycleState
   */
  @javax.annotation.Nonnull
  public String getLifecycleState() {
    return lifecycleState;
  }

  public void setLifecycleState(String lifecycleState) {
    this.lifecycleState = lifecycleState;
  }


  public AutoScalingInstanceDetails healthStatus(String healthStatus) {
    this.healthStatus = healthStatus;
    return this;
  }

  /**
   * Get healthStatus
   * @return healthStatus
   */
  @javax.annotation.Nonnull
  public String getHealthStatus() {
    return healthStatus;
  }

  public void setHealthStatus(String healthStatus) {
    this.healthStatus = healthStatus;
  }


  public AutoScalingInstanceDetails launchConfigurationName(String launchConfigurationName) {
    this.launchConfigurationName = launchConfigurationName;
    return this;
  }

  /**
   * Get launchConfigurationName
   * @return launchConfigurationName
   */
  @javax.annotation.Nullable
  public String getLaunchConfigurationName() {
    return launchConfigurationName;
  }

  public void setLaunchConfigurationName(String launchConfigurationName) {
    this.launchConfigurationName = launchConfigurationName;
  }


  public AutoScalingInstanceDetails launchTemplate(AutoScalingInstanceDetailsLaunchTemplate launchTemplate) {
    this.launchTemplate = launchTemplate;
    return this;
  }

  /**
   * Get launchTemplate
   * @return launchTemplate
   */
  @javax.annotation.Nullable
  public AutoScalingInstanceDetailsLaunchTemplate getLaunchTemplate() {
    return launchTemplate;
  }

  public void setLaunchTemplate(AutoScalingInstanceDetailsLaunchTemplate launchTemplate) {
    this.launchTemplate = launchTemplate;
  }


  public AutoScalingInstanceDetails protectedFromScaleIn(Boolean protectedFromScaleIn) {
    this.protectedFromScaleIn = protectedFromScaleIn;
    return this;
  }

  /**
   * Get protectedFromScaleIn
   * @return protectedFromScaleIn
   */
  @javax.annotation.Nonnull
  public Boolean getProtectedFromScaleIn() {
    return protectedFromScaleIn;
  }

  public void setProtectedFromScaleIn(Boolean protectedFromScaleIn) {
    this.protectedFromScaleIn = protectedFromScaleIn;
  }


  public AutoScalingInstanceDetails weightedCapacity(String weightedCapacity) {
    this.weightedCapacity = weightedCapacity;
    return this;
  }

  /**
   * Get weightedCapacity
   * @return weightedCapacity
   */
  @javax.annotation.Nullable
  public String getWeightedCapacity() {
    return weightedCapacity;
  }

  public void setWeightedCapacity(String weightedCapacity) {
    this.weightedCapacity = weightedCapacity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoScalingInstanceDetails autoScalingInstanceDetails = (AutoScalingInstanceDetails) o;
    return Objects.equals(this.instanceId, autoScalingInstanceDetails.instanceId) &&
        Objects.equals(this.instanceType, autoScalingInstanceDetails.instanceType) &&
        Objects.equals(this.autoScalingGroupName, autoScalingInstanceDetails.autoScalingGroupName) &&
        Objects.equals(this.availabilityZone, autoScalingInstanceDetails.availabilityZone) &&
        Objects.equals(this.lifecycleState, autoScalingInstanceDetails.lifecycleState) &&
        Objects.equals(this.healthStatus, autoScalingInstanceDetails.healthStatus) &&
        Objects.equals(this.launchConfigurationName, autoScalingInstanceDetails.launchConfigurationName) &&
        Objects.equals(this.launchTemplate, autoScalingInstanceDetails.launchTemplate) &&
        Objects.equals(this.protectedFromScaleIn, autoScalingInstanceDetails.protectedFromScaleIn) &&
        Objects.equals(this.weightedCapacity, autoScalingInstanceDetails.weightedCapacity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, instanceType, autoScalingGroupName, availabilityZone, lifecycleState, healthStatus, launchConfigurationName, launchTemplate, protectedFromScaleIn, weightedCapacity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoScalingInstanceDetails {\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    autoScalingGroupName: ").append(toIndentedString(autoScalingGroupName)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    lifecycleState: ").append(toIndentedString(lifecycleState)).append("\n");
    sb.append("    healthStatus: ").append(toIndentedString(healthStatus)).append("\n");
    sb.append("    launchConfigurationName: ").append(toIndentedString(launchConfigurationName)).append("\n");
    sb.append("    launchTemplate: ").append(toIndentedString(launchTemplate)).append("\n");
    sb.append("    protectedFromScaleIn: ").append(toIndentedString(protectedFromScaleIn)).append("\n");
    sb.append("    weightedCapacity: ").append(toIndentedString(weightedCapacity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("InstanceId");
    openapiFields.add("InstanceType");
    openapiFields.add("AutoScalingGroupName");
    openapiFields.add("AvailabilityZone");
    openapiFields.add("LifecycleState");
    openapiFields.add("HealthStatus");
    openapiFields.add("LaunchConfigurationName");
    openapiFields.add("LaunchTemplate");
    openapiFields.add("ProtectedFromScaleIn");
    openapiFields.add("WeightedCapacity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("InstanceId");
    openapiRequiredFields.add("AutoScalingGroupName");
    openapiRequiredFields.add("AvailabilityZone");
    openapiRequiredFields.add("LifecycleState");
    openapiRequiredFields.add("HealthStatus");
    openapiRequiredFields.add("ProtectedFromScaleIn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutoScalingInstanceDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutoScalingInstanceDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoScalingInstanceDetails is not found in the empty JSON string", AutoScalingInstanceDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutoScalingInstanceDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoScalingInstanceDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AutoScalingInstanceDetails.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `InstanceId`
      String.validateJsonElement(jsonObj.get("InstanceId"));
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the required field `AutoScalingGroupName`
      String.validateJsonElement(jsonObj.get("AutoScalingGroupName"));
      // validate the required field `AvailabilityZone`
      String.validateJsonElement(jsonObj.get("AvailabilityZone"));
      // validate the required field `LifecycleState`
      String.validateJsonElement(jsonObj.get("LifecycleState"));
      // validate the required field `HealthStatus`
      String.validateJsonElement(jsonObj.get("HealthStatus"));
      // validate the optional field `LaunchConfigurationName`
      if (jsonObj.get("LaunchConfigurationName") != null && !jsonObj.get("LaunchConfigurationName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LaunchConfigurationName"));
      }
      // validate the optional field `LaunchTemplate`
      if (jsonObj.get("LaunchTemplate") != null && !jsonObj.get("LaunchTemplate").isJsonNull()) {
        AutoScalingInstanceDetailsLaunchTemplate.validateJsonElement(jsonObj.get("LaunchTemplate"));
      }
      // validate the required field `ProtectedFromScaleIn`
      Boolean.validateJsonElement(jsonObj.get("ProtectedFromScaleIn"));
      // validate the optional field `WeightedCapacity`
      if (jsonObj.get("WeightedCapacity") != null && !jsonObj.get("WeightedCapacity").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WeightedCapacity"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoScalingInstanceDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoScalingInstanceDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoScalingInstanceDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoScalingInstanceDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoScalingInstanceDetails>() {
           @Override
           public void write(JsonWriter out, AutoScalingInstanceDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoScalingInstanceDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutoScalingInstanceDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutoScalingInstanceDetails
   * @throws IOException if the JSON string is invalid with respect to AutoScalingInstanceDetails
   */
  public static AutoScalingInstanceDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoScalingInstanceDetails.class);
  }

  /**
   * Convert an instance of AutoScalingInstanceDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

