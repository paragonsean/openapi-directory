# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.launch_template_overrides_instance_requirements import LaunchTemplateOverridesInstanceRequirements
from openapi_server.models.launch_template_overrides_launch_template_specification import LaunchTemplateOverridesLaunchTemplateSpecification
from openapi_server import util


class LaunchTemplateOverrides(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_type: str=None, weighted_capacity: str=None, launch_template_specification: LaunchTemplateOverridesLaunchTemplateSpecification=None, instance_requirements: LaunchTemplateOverridesInstanceRequirements=None):
        """LaunchTemplateOverrides - a model defined in OpenAPI

        :param instance_type: The instance_type of this LaunchTemplateOverrides.
        :param weighted_capacity: The weighted_capacity of this LaunchTemplateOverrides.
        :param launch_template_specification: The launch_template_specification of this LaunchTemplateOverrides.
        :param instance_requirements: The instance_requirements of this LaunchTemplateOverrides.
        """
        self.openapi_types = {
            'instance_type': str,
            'weighted_capacity': str,
            'launch_template_specification': LaunchTemplateOverridesLaunchTemplateSpecification,
            'instance_requirements': LaunchTemplateOverridesInstanceRequirements
        }

        self.attribute_map = {
            'instance_type': 'InstanceType',
            'weighted_capacity': 'WeightedCapacity',
            'launch_template_specification': 'LaunchTemplateSpecification',
            'instance_requirements': 'InstanceRequirements'
        }

        self._instance_type = instance_type
        self._weighted_capacity = weighted_capacity
        self._launch_template_specification = launch_template_specification
        self._instance_requirements = instance_requirements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LaunchTemplateOverrides':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LaunchTemplateOverrides of this LaunchTemplateOverrides.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_type(self):
        """Gets the instance_type of this LaunchTemplateOverrides.


        :return: The instance_type of this LaunchTemplateOverrides.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this LaunchTemplateOverrides.


        :param instance_type: The instance_type of this LaunchTemplateOverrides.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def weighted_capacity(self):
        """Gets the weighted_capacity of this LaunchTemplateOverrides.


        :return: The weighted_capacity of this LaunchTemplateOverrides.
        :rtype: str
        """
        return self._weighted_capacity

    @weighted_capacity.setter
    def weighted_capacity(self, weighted_capacity):
        """Sets the weighted_capacity of this LaunchTemplateOverrides.


        :param weighted_capacity: The weighted_capacity of this LaunchTemplateOverrides.
        :type weighted_capacity: str
        """

        self._weighted_capacity = weighted_capacity

    @property
    def launch_template_specification(self):
        """Gets the launch_template_specification of this LaunchTemplateOverrides.


        :return: The launch_template_specification of this LaunchTemplateOverrides.
        :rtype: LaunchTemplateOverridesLaunchTemplateSpecification
        """
        return self._launch_template_specification

    @launch_template_specification.setter
    def launch_template_specification(self, launch_template_specification):
        """Sets the launch_template_specification of this LaunchTemplateOverrides.


        :param launch_template_specification: The launch_template_specification of this LaunchTemplateOverrides.
        :type launch_template_specification: LaunchTemplateOverridesLaunchTemplateSpecification
        """

        self._launch_template_specification = launch_template_specification

    @property
    def instance_requirements(self):
        """Gets the instance_requirements of this LaunchTemplateOverrides.


        :return: The instance_requirements of this LaunchTemplateOverrides.
        :rtype: LaunchTemplateOverridesInstanceRequirements
        """
        return self._instance_requirements

    @instance_requirements.setter
    def instance_requirements(self, instance_requirements):
        """Sets the instance_requirements of this LaunchTemplateOverrides.


        :param instance_requirements: The instance_requirements of this LaunchTemplateOverrides.
        :type instance_requirements: LaunchTemplateOverridesInstanceRequirements
        """

        self._instance_requirements = instance_requirements
