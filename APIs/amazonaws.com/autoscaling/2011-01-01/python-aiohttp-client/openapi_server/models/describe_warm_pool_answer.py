# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_warm_pool_answer_warm_pool_configuration import DescribeWarmPoolAnswerWarmPoolConfiguration
from openapi_server import util


class DescribeWarmPoolAnswer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, warm_pool_configuration: DescribeWarmPoolAnswerWarmPoolConfiguration=None, instances: List=None, next_token: str=None):
        """DescribeWarmPoolAnswer - a model defined in OpenAPI

        :param warm_pool_configuration: The warm_pool_configuration of this DescribeWarmPoolAnswer.
        :param instances: The instances of this DescribeWarmPoolAnswer.
        :param next_token: The next_token of this DescribeWarmPoolAnswer.
        """
        self.openapi_types = {
            'warm_pool_configuration': DescribeWarmPoolAnswerWarmPoolConfiguration,
            'instances': List,
            'next_token': str
        }

        self.attribute_map = {
            'warm_pool_configuration': 'WarmPoolConfiguration',
            'instances': 'Instances',
            'next_token': 'NextToken'
        }

        self._warm_pool_configuration = warm_pool_configuration
        self._instances = instances
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWarmPoolAnswer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWarmPoolAnswer of this DescribeWarmPoolAnswer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def warm_pool_configuration(self):
        """Gets the warm_pool_configuration of this DescribeWarmPoolAnswer.


        :return: The warm_pool_configuration of this DescribeWarmPoolAnswer.
        :rtype: DescribeWarmPoolAnswerWarmPoolConfiguration
        """
        return self._warm_pool_configuration

    @warm_pool_configuration.setter
    def warm_pool_configuration(self, warm_pool_configuration):
        """Sets the warm_pool_configuration of this DescribeWarmPoolAnswer.


        :param warm_pool_configuration: The warm_pool_configuration of this DescribeWarmPoolAnswer.
        :type warm_pool_configuration: DescribeWarmPoolAnswerWarmPoolConfiguration
        """

        self._warm_pool_configuration = warm_pool_configuration

    @property
    def instances(self):
        """Gets the instances of this DescribeWarmPoolAnswer.


        :return: The instances of this DescribeWarmPoolAnswer.
        :rtype: List
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this DescribeWarmPoolAnswer.


        :param instances: The instances of this DescribeWarmPoolAnswer.
        :type instances: List
        """

        self._instances = instances

    @property
    def next_token(self):
        """Gets the next_token of this DescribeWarmPoolAnswer.


        :return: The next_token of this DescribeWarmPoolAnswer.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeWarmPoolAnswer.


        :param next_token: The next_token of this DescribeWarmPoolAnswer.
        :type next_token: str
        """

        self._next_token = next_token
