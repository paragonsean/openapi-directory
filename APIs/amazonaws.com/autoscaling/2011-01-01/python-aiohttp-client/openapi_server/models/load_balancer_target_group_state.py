# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LoadBalancerTargetGroupState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, load_balancer_target_group_arn: str=None, state: str=None):
        """LoadBalancerTargetGroupState - a model defined in OpenAPI

        :param load_balancer_target_group_arn: The load_balancer_target_group_arn of this LoadBalancerTargetGroupState.
        :param state: The state of this LoadBalancerTargetGroupState.
        """
        self.openapi_types = {
            'load_balancer_target_group_arn': str,
            'state': str
        }

        self.attribute_map = {
            'load_balancer_target_group_arn': 'LoadBalancerTargetGroupARN',
            'state': 'State'
        }

        self._load_balancer_target_group_arn = load_balancer_target_group_arn
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoadBalancerTargetGroupState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoadBalancerTargetGroupState of this LoadBalancerTargetGroupState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def load_balancer_target_group_arn(self):
        """Gets the load_balancer_target_group_arn of this LoadBalancerTargetGroupState.


        :return: The load_balancer_target_group_arn of this LoadBalancerTargetGroupState.
        :rtype: str
        """
        return self._load_balancer_target_group_arn

    @load_balancer_target_group_arn.setter
    def load_balancer_target_group_arn(self, load_balancer_target_group_arn):
        """Sets the load_balancer_target_group_arn of this LoadBalancerTargetGroupState.


        :param load_balancer_target_group_arn: The load_balancer_target_group_arn of this LoadBalancerTargetGroupState.
        :type load_balancer_target_group_arn: str
        """

        self._load_balancer_target_group_arn = load_balancer_target_group_arn

    @property
    def state(self):
        """Gets the state of this LoadBalancerTargetGroupState.


        :return: The state of this LoadBalancerTargetGroupState.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this LoadBalancerTargetGroupState.


        :param state: The state of this LoadBalancerTargetGroupState.
        :type state: str
        """

        self._state = state
