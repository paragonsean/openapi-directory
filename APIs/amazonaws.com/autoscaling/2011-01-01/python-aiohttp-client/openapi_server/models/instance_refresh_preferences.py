# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_start_instance_refresh_preferences_parameter_alarm_specification import GETStartInstanceRefreshPreferencesParameterAlarmSpecification
from openapi_server.models.scale_in_protected_instances import ScaleInProtectedInstances
from openapi_server.models.standby_instances import StandbyInstances
from openapi_server import util


class InstanceRefreshPreferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_healthy_percentage: int=None, instance_warmup: int=None, checkpoint_percentages: List=None, checkpoint_delay: int=None, skip_matching: bool=None, auto_rollback: bool=None, scale_in_protected_instances: ScaleInProtectedInstances=None, standby_instances: StandbyInstances=None, alarm_specification: GETStartInstanceRefreshPreferencesParameterAlarmSpecification=None):
        """InstanceRefreshPreferences - a model defined in OpenAPI

        :param min_healthy_percentage: The min_healthy_percentage of this InstanceRefreshPreferences.
        :param instance_warmup: The instance_warmup of this InstanceRefreshPreferences.
        :param checkpoint_percentages: The checkpoint_percentages of this InstanceRefreshPreferences.
        :param checkpoint_delay: The checkpoint_delay of this InstanceRefreshPreferences.
        :param skip_matching: The skip_matching of this InstanceRefreshPreferences.
        :param auto_rollback: The auto_rollback of this InstanceRefreshPreferences.
        :param scale_in_protected_instances: The scale_in_protected_instances of this InstanceRefreshPreferences.
        :param standby_instances: The standby_instances of this InstanceRefreshPreferences.
        :param alarm_specification: The alarm_specification of this InstanceRefreshPreferences.
        """
        self.openapi_types = {
            'min_healthy_percentage': int,
            'instance_warmup': int,
            'checkpoint_percentages': List,
            'checkpoint_delay': int,
            'skip_matching': bool,
            'auto_rollback': bool,
            'scale_in_protected_instances': ScaleInProtectedInstances,
            'standby_instances': StandbyInstances,
            'alarm_specification': GETStartInstanceRefreshPreferencesParameterAlarmSpecification
        }

        self.attribute_map = {
            'min_healthy_percentage': 'MinHealthyPercentage',
            'instance_warmup': 'InstanceWarmup',
            'checkpoint_percentages': 'CheckpointPercentages',
            'checkpoint_delay': 'CheckpointDelay',
            'skip_matching': 'SkipMatching',
            'auto_rollback': 'AutoRollback',
            'scale_in_protected_instances': 'ScaleInProtectedInstances',
            'standby_instances': 'StandbyInstances',
            'alarm_specification': 'AlarmSpecification'
        }

        self._min_healthy_percentage = min_healthy_percentage
        self._instance_warmup = instance_warmup
        self._checkpoint_percentages = checkpoint_percentages
        self._checkpoint_delay = checkpoint_delay
        self._skip_matching = skip_matching
        self._auto_rollback = auto_rollback
        self._scale_in_protected_instances = scale_in_protected_instances
        self._standby_instances = standby_instances
        self._alarm_specification = alarm_specification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceRefreshPreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceRefresh_Preferences of this InstanceRefreshPreferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_healthy_percentage(self):
        """Gets the min_healthy_percentage of this InstanceRefreshPreferences.


        :return: The min_healthy_percentage of this InstanceRefreshPreferences.
        :rtype: int
        """
        return self._min_healthy_percentage

    @min_healthy_percentage.setter
    def min_healthy_percentage(self, min_healthy_percentage):
        """Sets the min_healthy_percentage of this InstanceRefreshPreferences.


        :param min_healthy_percentage: The min_healthy_percentage of this InstanceRefreshPreferences.
        :type min_healthy_percentage: int
        """

        self._min_healthy_percentage = min_healthy_percentage

    @property
    def instance_warmup(self):
        """Gets the instance_warmup of this InstanceRefreshPreferences.


        :return: The instance_warmup of this InstanceRefreshPreferences.
        :rtype: int
        """
        return self._instance_warmup

    @instance_warmup.setter
    def instance_warmup(self, instance_warmup):
        """Sets the instance_warmup of this InstanceRefreshPreferences.


        :param instance_warmup: The instance_warmup of this InstanceRefreshPreferences.
        :type instance_warmup: int
        """

        self._instance_warmup = instance_warmup

    @property
    def checkpoint_percentages(self):
        """Gets the checkpoint_percentages of this InstanceRefreshPreferences.


        :return: The checkpoint_percentages of this InstanceRefreshPreferences.
        :rtype: List
        """
        return self._checkpoint_percentages

    @checkpoint_percentages.setter
    def checkpoint_percentages(self, checkpoint_percentages):
        """Sets the checkpoint_percentages of this InstanceRefreshPreferences.


        :param checkpoint_percentages: The checkpoint_percentages of this InstanceRefreshPreferences.
        :type checkpoint_percentages: List
        """

        self._checkpoint_percentages = checkpoint_percentages

    @property
    def checkpoint_delay(self):
        """Gets the checkpoint_delay of this InstanceRefreshPreferences.


        :return: The checkpoint_delay of this InstanceRefreshPreferences.
        :rtype: int
        """
        return self._checkpoint_delay

    @checkpoint_delay.setter
    def checkpoint_delay(self, checkpoint_delay):
        """Sets the checkpoint_delay of this InstanceRefreshPreferences.


        :param checkpoint_delay: The checkpoint_delay of this InstanceRefreshPreferences.
        :type checkpoint_delay: int
        """

        self._checkpoint_delay = checkpoint_delay

    @property
    def skip_matching(self):
        """Gets the skip_matching of this InstanceRefreshPreferences.


        :return: The skip_matching of this InstanceRefreshPreferences.
        :rtype: bool
        """
        return self._skip_matching

    @skip_matching.setter
    def skip_matching(self, skip_matching):
        """Sets the skip_matching of this InstanceRefreshPreferences.


        :param skip_matching: The skip_matching of this InstanceRefreshPreferences.
        :type skip_matching: bool
        """

        self._skip_matching = skip_matching

    @property
    def auto_rollback(self):
        """Gets the auto_rollback of this InstanceRefreshPreferences.


        :return: The auto_rollback of this InstanceRefreshPreferences.
        :rtype: bool
        """
        return self._auto_rollback

    @auto_rollback.setter
    def auto_rollback(self, auto_rollback):
        """Sets the auto_rollback of this InstanceRefreshPreferences.


        :param auto_rollback: The auto_rollback of this InstanceRefreshPreferences.
        :type auto_rollback: bool
        """

        self._auto_rollback = auto_rollback

    @property
    def scale_in_protected_instances(self):
        """Gets the scale_in_protected_instances of this InstanceRefreshPreferences.


        :return: The scale_in_protected_instances of this InstanceRefreshPreferences.
        :rtype: ScaleInProtectedInstances
        """
        return self._scale_in_protected_instances

    @scale_in_protected_instances.setter
    def scale_in_protected_instances(self, scale_in_protected_instances):
        """Sets the scale_in_protected_instances of this InstanceRefreshPreferences.


        :param scale_in_protected_instances: The scale_in_protected_instances of this InstanceRefreshPreferences.
        :type scale_in_protected_instances: ScaleInProtectedInstances
        """

        self._scale_in_protected_instances = scale_in_protected_instances

    @property
    def standby_instances(self):
        """Gets the standby_instances of this InstanceRefreshPreferences.


        :return: The standby_instances of this InstanceRefreshPreferences.
        :rtype: StandbyInstances
        """
        return self._standby_instances

    @standby_instances.setter
    def standby_instances(self, standby_instances):
        """Sets the standby_instances of this InstanceRefreshPreferences.


        :param standby_instances: The standby_instances of this InstanceRefreshPreferences.
        :type standby_instances: StandbyInstances
        """

        self._standby_instances = standby_instances

    @property
    def alarm_specification(self):
        """Gets the alarm_specification of this InstanceRefreshPreferences.


        :return: The alarm_specification of this InstanceRefreshPreferences.
        :rtype: GETStartInstanceRefreshPreferencesParameterAlarmSpecification
        """
        return self._alarm_specification

    @alarm_specification.setter
    def alarm_specification(self, alarm_specification):
        """Sets the alarm_specification of this InstanceRefreshPreferences.


        :param alarm_specification: The alarm_specification of this InstanceRefreshPreferences.
        :type alarm_specification: GETStartInstanceRefreshPreferencesParameterAlarmSpecification
        """

        self._alarm_specification = alarm_specification
