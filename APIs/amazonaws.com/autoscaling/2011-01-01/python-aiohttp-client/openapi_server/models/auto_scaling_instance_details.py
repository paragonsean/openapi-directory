# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_scaling_instance_details_launch_template import AutoScalingInstanceDetailsLaunchTemplate
from openapi_server import util


class AutoScalingInstanceDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_id: str=None, instance_type: str=None, auto_scaling_group_name: str=None, availability_zone: str=None, lifecycle_state: str=None, health_status: str=None, launch_configuration_name: str=None, launch_template: AutoScalingInstanceDetailsLaunchTemplate=None, protected_from_scale_in: bool=None, weighted_capacity: str=None):
        """AutoScalingInstanceDetails - a model defined in OpenAPI

        :param instance_id: The instance_id of this AutoScalingInstanceDetails.
        :param instance_type: The instance_type of this AutoScalingInstanceDetails.
        :param auto_scaling_group_name: The auto_scaling_group_name of this AutoScalingInstanceDetails.
        :param availability_zone: The availability_zone of this AutoScalingInstanceDetails.
        :param lifecycle_state: The lifecycle_state of this AutoScalingInstanceDetails.
        :param health_status: The health_status of this AutoScalingInstanceDetails.
        :param launch_configuration_name: The launch_configuration_name of this AutoScalingInstanceDetails.
        :param launch_template: The launch_template of this AutoScalingInstanceDetails.
        :param protected_from_scale_in: The protected_from_scale_in of this AutoScalingInstanceDetails.
        :param weighted_capacity: The weighted_capacity of this AutoScalingInstanceDetails.
        """
        self.openapi_types = {
            'instance_id': str,
            'instance_type': str,
            'auto_scaling_group_name': str,
            'availability_zone': str,
            'lifecycle_state': str,
            'health_status': str,
            'launch_configuration_name': str,
            'launch_template': AutoScalingInstanceDetailsLaunchTemplate,
            'protected_from_scale_in': bool,
            'weighted_capacity': str
        }

        self.attribute_map = {
            'instance_id': 'InstanceId',
            'instance_type': 'InstanceType',
            'auto_scaling_group_name': 'AutoScalingGroupName',
            'availability_zone': 'AvailabilityZone',
            'lifecycle_state': 'LifecycleState',
            'health_status': 'HealthStatus',
            'launch_configuration_name': 'LaunchConfigurationName',
            'launch_template': 'LaunchTemplate',
            'protected_from_scale_in': 'ProtectedFromScaleIn',
            'weighted_capacity': 'WeightedCapacity'
        }

        self._instance_id = instance_id
        self._instance_type = instance_type
        self._auto_scaling_group_name = auto_scaling_group_name
        self._availability_zone = availability_zone
        self._lifecycle_state = lifecycle_state
        self._health_status = health_status
        self._launch_configuration_name = launch_configuration_name
        self._launch_template = launch_template
        self._protected_from_scale_in = protected_from_scale_in
        self._weighted_capacity = weighted_capacity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoScalingInstanceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoScalingInstanceDetails of this AutoScalingInstanceDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_id(self):
        """Gets the instance_id of this AutoScalingInstanceDetails.


        :return: The instance_id of this AutoScalingInstanceDetails.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this AutoScalingInstanceDetails.


        :param instance_id: The instance_id of this AutoScalingInstanceDetails.
        :type instance_id: str
        """
        if instance_id is None:
            raise ValueError("Invalid value for `instance_id`, must not be `None`")

        self._instance_id = instance_id

    @property
    def instance_type(self):
        """Gets the instance_type of this AutoScalingInstanceDetails.


        :return: The instance_type of this AutoScalingInstanceDetails.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this AutoScalingInstanceDetails.


        :param instance_type: The instance_type of this AutoScalingInstanceDetails.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def auto_scaling_group_name(self):
        """Gets the auto_scaling_group_name of this AutoScalingInstanceDetails.


        :return: The auto_scaling_group_name of this AutoScalingInstanceDetails.
        :rtype: str
        """
        return self._auto_scaling_group_name

    @auto_scaling_group_name.setter
    def auto_scaling_group_name(self, auto_scaling_group_name):
        """Sets the auto_scaling_group_name of this AutoScalingInstanceDetails.


        :param auto_scaling_group_name: The auto_scaling_group_name of this AutoScalingInstanceDetails.
        :type auto_scaling_group_name: str
        """
        if auto_scaling_group_name is None:
            raise ValueError("Invalid value for `auto_scaling_group_name`, must not be `None`")

        self._auto_scaling_group_name = auto_scaling_group_name

    @property
    def availability_zone(self):
        """Gets the availability_zone of this AutoScalingInstanceDetails.


        :return: The availability_zone of this AutoScalingInstanceDetails.
        :rtype: str
        """
        return self._availability_zone

    @availability_zone.setter
    def availability_zone(self, availability_zone):
        """Sets the availability_zone of this AutoScalingInstanceDetails.


        :param availability_zone: The availability_zone of this AutoScalingInstanceDetails.
        :type availability_zone: str
        """
        if availability_zone is None:
            raise ValueError("Invalid value for `availability_zone`, must not be `None`")

        self._availability_zone = availability_zone

    @property
    def lifecycle_state(self):
        """Gets the lifecycle_state of this AutoScalingInstanceDetails.


        :return: The lifecycle_state of this AutoScalingInstanceDetails.
        :rtype: str
        """
        return self._lifecycle_state

    @lifecycle_state.setter
    def lifecycle_state(self, lifecycle_state):
        """Sets the lifecycle_state of this AutoScalingInstanceDetails.


        :param lifecycle_state: The lifecycle_state of this AutoScalingInstanceDetails.
        :type lifecycle_state: str
        """
        if lifecycle_state is None:
            raise ValueError("Invalid value for `lifecycle_state`, must not be `None`")

        self._lifecycle_state = lifecycle_state

    @property
    def health_status(self):
        """Gets the health_status of this AutoScalingInstanceDetails.


        :return: The health_status of this AutoScalingInstanceDetails.
        :rtype: str
        """
        return self._health_status

    @health_status.setter
    def health_status(self, health_status):
        """Sets the health_status of this AutoScalingInstanceDetails.


        :param health_status: The health_status of this AutoScalingInstanceDetails.
        :type health_status: str
        """
        if health_status is None:
            raise ValueError("Invalid value for `health_status`, must not be `None`")

        self._health_status = health_status

    @property
    def launch_configuration_name(self):
        """Gets the launch_configuration_name of this AutoScalingInstanceDetails.


        :return: The launch_configuration_name of this AutoScalingInstanceDetails.
        :rtype: str
        """
        return self._launch_configuration_name

    @launch_configuration_name.setter
    def launch_configuration_name(self, launch_configuration_name):
        """Sets the launch_configuration_name of this AutoScalingInstanceDetails.


        :param launch_configuration_name: The launch_configuration_name of this AutoScalingInstanceDetails.
        :type launch_configuration_name: str
        """

        self._launch_configuration_name = launch_configuration_name

    @property
    def launch_template(self):
        """Gets the launch_template of this AutoScalingInstanceDetails.


        :return: The launch_template of this AutoScalingInstanceDetails.
        :rtype: AutoScalingInstanceDetailsLaunchTemplate
        """
        return self._launch_template

    @launch_template.setter
    def launch_template(self, launch_template):
        """Sets the launch_template of this AutoScalingInstanceDetails.


        :param launch_template: The launch_template of this AutoScalingInstanceDetails.
        :type launch_template: AutoScalingInstanceDetailsLaunchTemplate
        """

        self._launch_template = launch_template

    @property
    def protected_from_scale_in(self):
        """Gets the protected_from_scale_in of this AutoScalingInstanceDetails.


        :return: The protected_from_scale_in of this AutoScalingInstanceDetails.
        :rtype: bool
        """
        return self._protected_from_scale_in

    @protected_from_scale_in.setter
    def protected_from_scale_in(self, protected_from_scale_in):
        """Sets the protected_from_scale_in of this AutoScalingInstanceDetails.


        :param protected_from_scale_in: The protected_from_scale_in of this AutoScalingInstanceDetails.
        :type protected_from_scale_in: bool
        """
        if protected_from_scale_in is None:
            raise ValueError("Invalid value for `protected_from_scale_in`, must not be `None`")

        self._protected_from_scale_in = protected_from_scale_in

    @property
    def weighted_capacity(self):
        """Gets the weighted_capacity of this AutoScalingInstanceDetails.


        :return: The weighted_capacity of this AutoScalingInstanceDetails.
        :rtype: str
        """
        return self._weighted_capacity

    @weighted_capacity.setter
    def weighted_capacity(self, weighted_capacity):
        """Sets the weighted_capacity of this AutoScalingInstanceDetails.


        :param weighted_capacity: The weighted_capacity of this AutoScalingInstanceDetails.
        :type weighted_capacity: str
        """

        self._weighted_capacity = weighted_capacity
