# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutLifecycleHookType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lifecycle_hook_name: str=None, auto_scaling_group_name: str=None, lifecycle_transition: str=None, role_arn: str=None, notification_target_arn: str=None, notification_metadata: str=None, heartbeat_timeout: int=None, default_result: str=None):
        """PutLifecycleHookType - a model defined in OpenAPI

        :param lifecycle_hook_name: The lifecycle_hook_name of this PutLifecycleHookType.
        :param auto_scaling_group_name: The auto_scaling_group_name of this PutLifecycleHookType.
        :param lifecycle_transition: The lifecycle_transition of this PutLifecycleHookType.
        :param role_arn: The role_arn of this PutLifecycleHookType.
        :param notification_target_arn: The notification_target_arn of this PutLifecycleHookType.
        :param notification_metadata: The notification_metadata of this PutLifecycleHookType.
        :param heartbeat_timeout: The heartbeat_timeout of this PutLifecycleHookType.
        :param default_result: The default_result of this PutLifecycleHookType.
        """
        self.openapi_types = {
            'lifecycle_hook_name': str,
            'auto_scaling_group_name': str,
            'lifecycle_transition': str,
            'role_arn': str,
            'notification_target_arn': str,
            'notification_metadata': str,
            'heartbeat_timeout': int,
            'default_result': str
        }

        self.attribute_map = {
            'lifecycle_hook_name': 'LifecycleHookName',
            'auto_scaling_group_name': 'AutoScalingGroupName',
            'lifecycle_transition': 'LifecycleTransition',
            'role_arn': 'RoleARN',
            'notification_target_arn': 'NotificationTargetARN',
            'notification_metadata': 'NotificationMetadata',
            'heartbeat_timeout': 'HeartbeatTimeout',
            'default_result': 'DefaultResult'
        }

        self._lifecycle_hook_name = lifecycle_hook_name
        self._auto_scaling_group_name = auto_scaling_group_name
        self._lifecycle_transition = lifecycle_transition
        self._role_arn = role_arn
        self._notification_target_arn = notification_target_arn
        self._notification_metadata = notification_metadata
        self._heartbeat_timeout = heartbeat_timeout
        self._default_result = default_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutLifecycleHookType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutLifecycleHookType of this PutLifecycleHookType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lifecycle_hook_name(self):
        """Gets the lifecycle_hook_name of this PutLifecycleHookType.


        :return: The lifecycle_hook_name of this PutLifecycleHookType.
        :rtype: str
        """
        return self._lifecycle_hook_name

    @lifecycle_hook_name.setter
    def lifecycle_hook_name(self, lifecycle_hook_name):
        """Sets the lifecycle_hook_name of this PutLifecycleHookType.


        :param lifecycle_hook_name: The lifecycle_hook_name of this PutLifecycleHookType.
        :type lifecycle_hook_name: str
        """
        if lifecycle_hook_name is None:
            raise ValueError("Invalid value for `lifecycle_hook_name`, must not be `None`")

        self._lifecycle_hook_name = lifecycle_hook_name

    @property
    def auto_scaling_group_name(self):
        """Gets the auto_scaling_group_name of this PutLifecycleHookType.


        :return: The auto_scaling_group_name of this PutLifecycleHookType.
        :rtype: str
        """
        return self._auto_scaling_group_name

    @auto_scaling_group_name.setter
    def auto_scaling_group_name(self, auto_scaling_group_name):
        """Sets the auto_scaling_group_name of this PutLifecycleHookType.


        :param auto_scaling_group_name: The auto_scaling_group_name of this PutLifecycleHookType.
        :type auto_scaling_group_name: str
        """
        if auto_scaling_group_name is None:
            raise ValueError("Invalid value for `auto_scaling_group_name`, must not be `None`")

        self._auto_scaling_group_name = auto_scaling_group_name

    @property
    def lifecycle_transition(self):
        """Gets the lifecycle_transition of this PutLifecycleHookType.


        :return: The lifecycle_transition of this PutLifecycleHookType.
        :rtype: str
        """
        return self._lifecycle_transition

    @lifecycle_transition.setter
    def lifecycle_transition(self, lifecycle_transition):
        """Sets the lifecycle_transition of this PutLifecycleHookType.


        :param lifecycle_transition: The lifecycle_transition of this PutLifecycleHookType.
        :type lifecycle_transition: str
        """

        self._lifecycle_transition = lifecycle_transition

    @property
    def role_arn(self):
        """Gets the role_arn of this PutLifecycleHookType.


        :return: The role_arn of this PutLifecycleHookType.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this PutLifecycleHookType.


        :param role_arn: The role_arn of this PutLifecycleHookType.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def notification_target_arn(self):
        """Gets the notification_target_arn of this PutLifecycleHookType.


        :return: The notification_target_arn of this PutLifecycleHookType.
        :rtype: str
        """
        return self._notification_target_arn

    @notification_target_arn.setter
    def notification_target_arn(self, notification_target_arn):
        """Sets the notification_target_arn of this PutLifecycleHookType.


        :param notification_target_arn: The notification_target_arn of this PutLifecycleHookType.
        :type notification_target_arn: str
        """

        self._notification_target_arn = notification_target_arn

    @property
    def notification_metadata(self):
        """Gets the notification_metadata of this PutLifecycleHookType.


        :return: The notification_metadata of this PutLifecycleHookType.
        :rtype: str
        """
        return self._notification_metadata

    @notification_metadata.setter
    def notification_metadata(self, notification_metadata):
        """Sets the notification_metadata of this PutLifecycleHookType.


        :param notification_metadata: The notification_metadata of this PutLifecycleHookType.
        :type notification_metadata: str
        """

        self._notification_metadata = notification_metadata

    @property
    def heartbeat_timeout(self):
        """Gets the heartbeat_timeout of this PutLifecycleHookType.


        :return: The heartbeat_timeout of this PutLifecycleHookType.
        :rtype: int
        """
        return self._heartbeat_timeout

    @heartbeat_timeout.setter
    def heartbeat_timeout(self, heartbeat_timeout):
        """Sets the heartbeat_timeout of this PutLifecycleHookType.


        :param heartbeat_timeout: The heartbeat_timeout of this PutLifecycleHookType.
        :type heartbeat_timeout: int
        """

        self._heartbeat_timeout = heartbeat_timeout

    @property
    def default_result(self):
        """Gets the default_result of this PutLifecycleHookType.


        :return: The default_result of this PutLifecycleHookType.
        :rtype: str
        """
        return self._default_result

    @default_result.setter
    def default_result(self, default_result):
        """Sets the default_result of this PutLifecycleHookType.


        :param default_result: The default_result of this PutLifecycleHookType.
        :type default_result: str
        """

        self._default_result = default_result
