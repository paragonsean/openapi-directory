# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_launch_configuration_type_instance_monitoring import CreateLaunchConfigurationTypeInstanceMonitoring
from openapi_server.models.create_launch_configuration_type_metadata_options import CreateLaunchConfigurationTypeMetadataOptions
from openapi_server import util


class CreateLaunchConfigurationType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, launch_configuration_name: str=None, image_id: str=None, key_name: str=None, security_groups: List=None, classic_link_vpcid: str=None, classic_link_vpc_security_groups: List=None, user_data: str=None, instance_id: str=None, instance_type: str=None, kernel_id: str=None, ramdisk_id: str=None, block_device_mappings: List=None, instance_monitoring: CreateLaunchConfigurationTypeInstanceMonitoring=None, spot_price: str=None, iam_instance_profile: str=None, ebs_optimized: bool=None, associate_public_ip_address: bool=None, placement_tenancy: str=None, metadata_options: CreateLaunchConfigurationTypeMetadataOptions=None):
        """CreateLaunchConfigurationType - a model defined in OpenAPI

        :param launch_configuration_name: The launch_configuration_name of this CreateLaunchConfigurationType.
        :param image_id: The image_id of this CreateLaunchConfigurationType.
        :param key_name: The key_name of this CreateLaunchConfigurationType.
        :param security_groups: The security_groups of this CreateLaunchConfigurationType.
        :param classic_link_vpcid: The classic_link_vpcid of this CreateLaunchConfigurationType.
        :param classic_link_vpc_security_groups: The classic_link_vpc_security_groups of this CreateLaunchConfigurationType.
        :param user_data: The user_data of this CreateLaunchConfigurationType.
        :param instance_id: The instance_id of this CreateLaunchConfigurationType.
        :param instance_type: The instance_type of this CreateLaunchConfigurationType.
        :param kernel_id: The kernel_id of this CreateLaunchConfigurationType.
        :param ramdisk_id: The ramdisk_id of this CreateLaunchConfigurationType.
        :param block_device_mappings: The block_device_mappings of this CreateLaunchConfigurationType.
        :param instance_monitoring: The instance_monitoring of this CreateLaunchConfigurationType.
        :param spot_price: The spot_price of this CreateLaunchConfigurationType.
        :param iam_instance_profile: The iam_instance_profile of this CreateLaunchConfigurationType.
        :param ebs_optimized: The ebs_optimized of this CreateLaunchConfigurationType.
        :param associate_public_ip_address: The associate_public_ip_address of this CreateLaunchConfigurationType.
        :param placement_tenancy: The placement_tenancy of this CreateLaunchConfigurationType.
        :param metadata_options: The metadata_options of this CreateLaunchConfigurationType.
        """
        self.openapi_types = {
            'launch_configuration_name': str,
            'image_id': str,
            'key_name': str,
            'security_groups': List,
            'classic_link_vpcid': str,
            'classic_link_vpc_security_groups': List,
            'user_data': str,
            'instance_id': str,
            'instance_type': str,
            'kernel_id': str,
            'ramdisk_id': str,
            'block_device_mappings': List,
            'instance_monitoring': CreateLaunchConfigurationTypeInstanceMonitoring,
            'spot_price': str,
            'iam_instance_profile': str,
            'ebs_optimized': bool,
            'associate_public_ip_address': bool,
            'placement_tenancy': str,
            'metadata_options': CreateLaunchConfigurationTypeMetadataOptions
        }

        self.attribute_map = {
            'launch_configuration_name': 'LaunchConfigurationName',
            'image_id': 'ImageId',
            'key_name': 'KeyName',
            'security_groups': 'SecurityGroups',
            'classic_link_vpcid': 'ClassicLinkVPCId',
            'classic_link_vpc_security_groups': 'ClassicLinkVPCSecurityGroups',
            'user_data': 'UserData',
            'instance_id': 'InstanceId',
            'instance_type': 'InstanceType',
            'kernel_id': 'KernelId',
            'ramdisk_id': 'RamdiskId',
            'block_device_mappings': 'BlockDeviceMappings',
            'instance_monitoring': 'InstanceMonitoring',
            'spot_price': 'SpotPrice',
            'iam_instance_profile': 'IamInstanceProfile',
            'ebs_optimized': 'EbsOptimized',
            'associate_public_ip_address': 'AssociatePublicIpAddress',
            'placement_tenancy': 'PlacementTenancy',
            'metadata_options': 'MetadataOptions'
        }

        self._launch_configuration_name = launch_configuration_name
        self._image_id = image_id
        self._key_name = key_name
        self._security_groups = security_groups
        self._classic_link_vpcid = classic_link_vpcid
        self._classic_link_vpc_security_groups = classic_link_vpc_security_groups
        self._user_data = user_data
        self._instance_id = instance_id
        self._instance_type = instance_type
        self._kernel_id = kernel_id
        self._ramdisk_id = ramdisk_id
        self._block_device_mappings = block_device_mappings
        self._instance_monitoring = instance_monitoring
        self._spot_price = spot_price
        self._iam_instance_profile = iam_instance_profile
        self._ebs_optimized = ebs_optimized
        self._associate_public_ip_address = associate_public_ip_address
        self._placement_tenancy = placement_tenancy
        self._metadata_options = metadata_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLaunchConfigurationType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLaunchConfigurationType of this CreateLaunchConfigurationType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def launch_configuration_name(self):
        """Gets the launch_configuration_name of this CreateLaunchConfigurationType.


        :return: The launch_configuration_name of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._launch_configuration_name

    @launch_configuration_name.setter
    def launch_configuration_name(self, launch_configuration_name):
        """Sets the launch_configuration_name of this CreateLaunchConfigurationType.


        :param launch_configuration_name: The launch_configuration_name of this CreateLaunchConfigurationType.
        :type launch_configuration_name: str
        """
        if launch_configuration_name is None:
            raise ValueError("Invalid value for `launch_configuration_name`, must not be `None`")

        self._launch_configuration_name = launch_configuration_name

    @property
    def image_id(self):
        """Gets the image_id of this CreateLaunchConfigurationType.


        :return: The image_id of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this CreateLaunchConfigurationType.


        :param image_id: The image_id of this CreateLaunchConfigurationType.
        :type image_id: str
        """

        self._image_id = image_id

    @property
    def key_name(self):
        """Gets the key_name of this CreateLaunchConfigurationType.


        :return: The key_name of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._key_name

    @key_name.setter
    def key_name(self, key_name):
        """Sets the key_name of this CreateLaunchConfigurationType.


        :param key_name: The key_name of this CreateLaunchConfigurationType.
        :type key_name: str
        """

        self._key_name = key_name

    @property
    def security_groups(self):
        """Gets the security_groups of this CreateLaunchConfigurationType.


        :return: The security_groups of this CreateLaunchConfigurationType.
        :rtype: List
        """
        return self._security_groups

    @security_groups.setter
    def security_groups(self, security_groups):
        """Sets the security_groups of this CreateLaunchConfigurationType.


        :param security_groups: The security_groups of this CreateLaunchConfigurationType.
        :type security_groups: List
        """

        self._security_groups = security_groups

    @property
    def classic_link_vpcid(self):
        """Gets the classic_link_vpcid of this CreateLaunchConfigurationType.


        :return: The classic_link_vpcid of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._classic_link_vpcid

    @classic_link_vpcid.setter
    def classic_link_vpcid(self, classic_link_vpcid):
        """Sets the classic_link_vpcid of this CreateLaunchConfigurationType.


        :param classic_link_vpcid: The classic_link_vpcid of this CreateLaunchConfigurationType.
        :type classic_link_vpcid: str
        """

        self._classic_link_vpcid = classic_link_vpcid

    @property
    def classic_link_vpc_security_groups(self):
        """Gets the classic_link_vpc_security_groups of this CreateLaunchConfigurationType.


        :return: The classic_link_vpc_security_groups of this CreateLaunchConfigurationType.
        :rtype: List
        """
        return self._classic_link_vpc_security_groups

    @classic_link_vpc_security_groups.setter
    def classic_link_vpc_security_groups(self, classic_link_vpc_security_groups):
        """Sets the classic_link_vpc_security_groups of this CreateLaunchConfigurationType.


        :param classic_link_vpc_security_groups: The classic_link_vpc_security_groups of this CreateLaunchConfigurationType.
        :type classic_link_vpc_security_groups: List
        """

        self._classic_link_vpc_security_groups = classic_link_vpc_security_groups

    @property
    def user_data(self):
        """Gets the user_data of this CreateLaunchConfigurationType.


        :return: The user_data of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._user_data

    @user_data.setter
    def user_data(self, user_data):
        """Sets the user_data of this CreateLaunchConfigurationType.


        :param user_data: The user_data of this CreateLaunchConfigurationType.
        :type user_data: str
        """

        self._user_data = user_data

    @property
    def instance_id(self):
        """Gets the instance_id of this CreateLaunchConfigurationType.


        :return: The instance_id of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this CreateLaunchConfigurationType.


        :param instance_id: The instance_id of this CreateLaunchConfigurationType.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def instance_type(self):
        """Gets the instance_type of this CreateLaunchConfigurationType.


        :return: The instance_type of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this CreateLaunchConfigurationType.


        :param instance_type: The instance_type of this CreateLaunchConfigurationType.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def kernel_id(self):
        """Gets the kernel_id of this CreateLaunchConfigurationType.


        :return: The kernel_id of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._kernel_id

    @kernel_id.setter
    def kernel_id(self, kernel_id):
        """Sets the kernel_id of this CreateLaunchConfigurationType.


        :param kernel_id: The kernel_id of this CreateLaunchConfigurationType.
        :type kernel_id: str
        """

        self._kernel_id = kernel_id

    @property
    def ramdisk_id(self):
        """Gets the ramdisk_id of this CreateLaunchConfigurationType.


        :return: The ramdisk_id of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._ramdisk_id

    @ramdisk_id.setter
    def ramdisk_id(self, ramdisk_id):
        """Sets the ramdisk_id of this CreateLaunchConfigurationType.


        :param ramdisk_id: The ramdisk_id of this CreateLaunchConfigurationType.
        :type ramdisk_id: str
        """

        self._ramdisk_id = ramdisk_id

    @property
    def block_device_mappings(self):
        """Gets the block_device_mappings of this CreateLaunchConfigurationType.


        :return: The block_device_mappings of this CreateLaunchConfigurationType.
        :rtype: List
        """
        return self._block_device_mappings

    @block_device_mappings.setter
    def block_device_mappings(self, block_device_mappings):
        """Sets the block_device_mappings of this CreateLaunchConfigurationType.


        :param block_device_mappings: The block_device_mappings of this CreateLaunchConfigurationType.
        :type block_device_mappings: List
        """

        self._block_device_mappings = block_device_mappings

    @property
    def instance_monitoring(self):
        """Gets the instance_monitoring of this CreateLaunchConfigurationType.


        :return: The instance_monitoring of this CreateLaunchConfigurationType.
        :rtype: CreateLaunchConfigurationTypeInstanceMonitoring
        """
        return self._instance_monitoring

    @instance_monitoring.setter
    def instance_monitoring(self, instance_monitoring):
        """Sets the instance_monitoring of this CreateLaunchConfigurationType.


        :param instance_monitoring: The instance_monitoring of this CreateLaunchConfigurationType.
        :type instance_monitoring: CreateLaunchConfigurationTypeInstanceMonitoring
        """

        self._instance_monitoring = instance_monitoring

    @property
    def spot_price(self):
        """Gets the spot_price of this CreateLaunchConfigurationType.


        :return: The spot_price of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._spot_price

    @spot_price.setter
    def spot_price(self, spot_price):
        """Sets the spot_price of this CreateLaunchConfigurationType.


        :param spot_price: The spot_price of this CreateLaunchConfigurationType.
        :type spot_price: str
        """

        self._spot_price = spot_price

    @property
    def iam_instance_profile(self):
        """Gets the iam_instance_profile of this CreateLaunchConfigurationType.


        :return: The iam_instance_profile of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._iam_instance_profile

    @iam_instance_profile.setter
    def iam_instance_profile(self, iam_instance_profile):
        """Sets the iam_instance_profile of this CreateLaunchConfigurationType.


        :param iam_instance_profile: The iam_instance_profile of this CreateLaunchConfigurationType.
        :type iam_instance_profile: str
        """

        self._iam_instance_profile = iam_instance_profile

    @property
    def ebs_optimized(self):
        """Gets the ebs_optimized of this CreateLaunchConfigurationType.


        :return: The ebs_optimized of this CreateLaunchConfigurationType.
        :rtype: bool
        """
        return self._ebs_optimized

    @ebs_optimized.setter
    def ebs_optimized(self, ebs_optimized):
        """Sets the ebs_optimized of this CreateLaunchConfigurationType.


        :param ebs_optimized: The ebs_optimized of this CreateLaunchConfigurationType.
        :type ebs_optimized: bool
        """

        self._ebs_optimized = ebs_optimized

    @property
    def associate_public_ip_address(self):
        """Gets the associate_public_ip_address of this CreateLaunchConfigurationType.


        :return: The associate_public_ip_address of this CreateLaunchConfigurationType.
        :rtype: bool
        """
        return self._associate_public_ip_address

    @associate_public_ip_address.setter
    def associate_public_ip_address(self, associate_public_ip_address):
        """Sets the associate_public_ip_address of this CreateLaunchConfigurationType.


        :param associate_public_ip_address: The associate_public_ip_address of this CreateLaunchConfigurationType.
        :type associate_public_ip_address: bool
        """

        self._associate_public_ip_address = associate_public_ip_address

    @property
    def placement_tenancy(self):
        """Gets the placement_tenancy of this CreateLaunchConfigurationType.


        :return: The placement_tenancy of this CreateLaunchConfigurationType.
        :rtype: str
        """
        return self._placement_tenancy

    @placement_tenancy.setter
    def placement_tenancy(self, placement_tenancy):
        """Sets the placement_tenancy of this CreateLaunchConfigurationType.


        :param placement_tenancy: The placement_tenancy of this CreateLaunchConfigurationType.
        :type placement_tenancy: str
        """

        self._placement_tenancy = placement_tenancy

    @property
    def metadata_options(self):
        """Gets the metadata_options of this CreateLaunchConfigurationType.


        :return: The metadata_options of this CreateLaunchConfigurationType.
        :rtype: CreateLaunchConfigurationTypeMetadataOptions
        """
        return self._metadata_options

    @metadata_options.setter
    def metadata_options(self, metadata_options):
        """Sets the metadata_options of this CreateLaunchConfigurationType.


        :param metadata_options: The metadata_options of this CreateLaunchConfigurationType.
        :type metadata_options: CreateLaunchConfigurationTypeMetadataOptions
        """

        self._metadata_options = metadata_options
