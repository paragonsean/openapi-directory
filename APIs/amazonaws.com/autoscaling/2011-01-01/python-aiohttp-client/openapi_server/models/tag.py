# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Tag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_id: str=None, resource_type: str=None, key: str=None, value: str=None, propagate_at_launch: bool=None):
        """Tag - a model defined in OpenAPI

        :param resource_id: The resource_id of this Tag.
        :param resource_type: The resource_type of this Tag.
        :param key: The key of this Tag.
        :param value: The value of this Tag.
        :param propagate_at_launch: The propagate_at_launch of this Tag.
        """
        self.openapi_types = {
            'resource_id': str,
            'resource_type': str,
            'key': str,
            'value': str,
            'propagate_at_launch': bool
        }

        self.attribute_map = {
            'resource_id': 'ResourceId',
            'resource_type': 'ResourceType',
            'key': 'Key',
            'value': 'Value',
            'propagate_at_launch': 'PropagateAtLaunch'
        }

        self._resource_id = resource_id
        self._resource_type = resource_type
        self._key = key
        self._value = value
        self._propagate_at_launch = propagate_at_launch

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Tag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tag of this Tag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_id(self):
        """Gets the resource_id of this Tag.


        :return: The resource_id of this Tag.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this Tag.


        :param resource_id: The resource_id of this Tag.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_type(self):
        """Gets the resource_type of this Tag.


        :return: The resource_type of this Tag.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this Tag.


        :param resource_type: The resource_type of this Tag.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def key(self):
        """Gets the key of this Tag.


        :return: The key of this Tag.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Tag.


        :param key: The key of this Tag.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")

        self._key = key

    @property
    def value(self):
        """Gets the value of this Tag.


        :return: The value of this Tag.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Tag.


        :param value: The value of this Tag.
        :type value: str
        """

        self._value = value

    @property
    def propagate_at_launch(self):
        """Gets the propagate_at_launch of this Tag.


        :return: The propagate_at_launch of this Tag.
        :rtype: bool
        """
        return self._propagate_at_launch

    @propagate_at_launch.setter
    def propagate_at_launch(self, propagate_at_launch):
        """Sets the propagate_at_launch of this Tag.


        :param propagate_at_launch: The propagate_at_launch of this Tag.
        :type propagate_at_launch: bool
        """

        self._propagate_at_launch = propagate_at_launch
