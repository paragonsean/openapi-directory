# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.predictive_scaling_max_capacity_breach_behavior import PredictiveScalingMaxCapacityBreachBehavior
from openapi_server.models.predictive_scaling_mode import PredictiveScalingMode
from openapi_server import util


class PutScalingPolicyTypePredictiveScalingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_specifications: List=None, mode: PredictiveScalingMode=None, scheduling_buffer_time: int=None, max_capacity_breach_behavior: PredictiveScalingMaxCapacityBreachBehavior=None, max_capacity_buffer: int=None):
        """PutScalingPolicyTypePredictiveScalingConfiguration - a model defined in OpenAPI

        :param metric_specifications: The metric_specifications of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :param mode: The mode of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :param scheduling_buffer_time: The scheduling_buffer_time of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :param max_capacity_breach_behavior: The max_capacity_breach_behavior of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :param max_capacity_buffer: The max_capacity_buffer of this PutScalingPolicyTypePredictiveScalingConfiguration.
        """
        self.openapi_types = {
            'metric_specifications': List,
            'mode': PredictiveScalingMode,
            'scheduling_buffer_time': int,
            'max_capacity_breach_behavior': PredictiveScalingMaxCapacityBreachBehavior,
            'max_capacity_buffer': int
        }

        self.attribute_map = {
            'metric_specifications': 'MetricSpecifications',
            'mode': 'Mode',
            'scheduling_buffer_time': 'SchedulingBufferTime',
            'max_capacity_breach_behavior': 'MaxCapacityBreachBehavior',
            'max_capacity_buffer': 'MaxCapacityBuffer'
        }

        self._metric_specifications = metric_specifications
        self._mode = mode
        self._scheduling_buffer_time = scheduling_buffer_time
        self._max_capacity_breach_behavior = max_capacity_breach_behavior
        self._max_capacity_buffer = max_capacity_buffer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutScalingPolicyTypePredictiveScalingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutScalingPolicyType_PredictiveScalingConfiguration of this PutScalingPolicyTypePredictiveScalingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_specifications(self):
        """Gets the metric_specifications of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :return: The metric_specifications of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :rtype: List
        """
        return self._metric_specifications

    @metric_specifications.setter
    def metric_specifications(self, metric_specifications):
        """Sets the metric_specifications of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :param metric_specifications: The metric_specifications of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :type metric_specifications: List
        """
        if metric_specifications is None:
            raise ValueError("Invalid value for `metric_specifications`, must not be `None`")

        self._metric_specifications = metric_specifications

    @property
    def mode(self):
        """Gets the mode of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :return: The mode of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :rtype: PredictiveScalingMode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :param mode: The mode of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :type mode: PredictiveScalingMode
        """

        self._mode = mode

    @property
    def scheduling_buffer_time(self):
        """Gets the scheduling_buffer_time of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :return: The scheduling_buffer_time of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :rtype: int
        """
        return self._scheduling_buffer_time

    @scheduling_buffer_time.setter
    def scheduling_buffer_time(self, scheduling_buffer_time):
        """Sets the scheduling_buffer_time of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :param scheduling_buffer_time: The scheduling_buffer_time of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :type scheduling_buffer_time: int
        """

        self._scheduling_buffer_time = scheduling_buffer_time

    @property
    def max_capacity_breach_behavior(self):
        """Gets the max_capacity_breach_behavior of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :return: The max_capacity_breach_behavior of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :rtype: PredictiveScalingMaxCapacityBreachBehavior
        """
        return self._max_capacity_breach_behavior

    @max_capacity_breach_behavior.setter
    def max_capacity_breach_behavior(self, max_capacity_breach_behavior):
        """Sets the max_capacity_breach_behavior of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :param max_capacity_breach_behavior: The max_capacity_breach_behavior of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :type max_capacity_breach_behavior: PredictiveScalingMaxCapacityBreachBehavior
        """

        self._max_capacity_breach_behavior = max_capacity_breach_behavior

    @property
    def max_capacity_buffer(self):
        """Gets the max_capacity_buffer of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :return: The max_capacity_buffer of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :rtype: int
        """
        return self._max_capacity_buffer

    @max_capacity_buffer.setter
    def max_capacity_buffer(self, max_capacity_buffer):
        """Sets the max_capacity_buffer of this PutScalingPolicyTypePredictiveScalingConfiguration.


        :param max_capacity_buffer: The max_capacity_buffer of this PutScalingPolicyTypePredictiveScalingConfiguration.
        :type max_capacity_buffer: int
        """

        self._max_capacity_buffer = max_capacity_buffer
