# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PolicyARNType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_arn: str=None, alarms: List=None):
        """PolicyARNType - a model defined in OpenAPI

        :param policy_arn: The policy_arn of this PolicyARNType.
        :param alarms: The alarms of this PolicyARNType.
        """
        self.openapi_types = {
            'policy_arn': str,
            'alarms': List
        }

        self.attribute_map = {
            'policy_arn': 'PolicyARN',
            'alarms': 'Alarms'
        }

        self._policy_arn = policy_arn
        self._alarms = alarms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyARNType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyARNType of this PolicyARNType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_arn(self):
        """Gets the policy_arn of this PolicyARNType.


        :return: The policy_arn of this PolicyARNType.
        :rtype: str
        """
        return self._policy_arn

    @policy_arn.setter
    def policy_arn(self, policy_arn):
        """Sets the policy_arn of this PolicyARNType.


        :param policy_arn: The policy_arn of this PolicyARNType.
        :type policy_arn: str
        """

        self._policy_arn = policy_arn

    @property
    def alarms(self):
        """Gets the alarms of this PolicyARNType.


        :return: The alarms of this PolicyARNType.
        :rtype: List
        """
        return self._alarms

    @alarms.setter
    def alarms(self, alarms):
        """Sets the alarms of this PolicyARNType.


        :param alarms: The alarms of this PolicyARNType.
        :type alarms: List
        """

        self._alarms = alarms
