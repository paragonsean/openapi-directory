# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.launch_template_launch_template_specification import LaunchTemplateLaunchTemplateSpecification
from openapi_server import util


class LaunchTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, launch_template_specification: LaunchTemplateLaunchTemplateSpecification=None, overrides: List=None):
        """LaunchTemplate - a model defined in OpenAPI

        :param launch_template_specification: The launch_template_specification of this LaunchTemplate.
        :param overrides: The overrides of this LaunchTemplate.
        """
        self.openapi_types = {
            'launch_template_specification': LaunchTemplateLaunchTemplateSpecification,
            'overrides': List
        }

        self.attribute_map = {
            'launch_template_specification': 'LaunchTemplateSpecification',
            'overrides': 'Overrides'
        }

        self._launch_template_specification = launch_template_specification
        self._overrides = overrides

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LaunchTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LaunchTemplate of this LaunchTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def launch_template_specification(self):
        """Gets the launch_template_specification of this LaunchTemplate.


        :return: The launch_template_specification of this LaunchTemplate.
        :rtype: LaunchTemplateLaunchTemplateSpecification
        """
        return self._launch_template_specification

    @launch_template_specification.setter
    def launch_template_specification(self, launch_template_specification):
        """Sets the launch_template_specification of this LaunchTemplate.


        :param launch_template_specification: The launch_template_specification of this LaunchTemplate.
        :type launch_template_specification: LaunchTemplateLaunchTemplateSpecification
        """

        self._launch_template_specification = launch_template_specification

    @property
    def overrides(self):
        """Gets the overrides of this LaunchTemplate.


        :return: The overrides of this LaunchTemplate.
        :rtype: List
        """
        return self._overrides

    @overrides.setter
    def overrides(self, overrides):
        """Sets the overrides of this LaunchTemplate.


        :param overrides: The overrides of this LaunchTemplate.
        :type overrides: List
        """

        self._overrides = overrides
