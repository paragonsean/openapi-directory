# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SetInstanceHealthQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_id: str=None, health_status: str=None, should_respect_grace_period: bool=None):
        """SetInstanceHealthQuery - a model defined in OpenAPI

        :param instance_id: The instance_id of this SetInstanceHealthQuery.
        :param health_status: The health_status of this SetInstanceHealthQuery.
        :param should_respect_grace_period: The should_respect_grace_period of this SetInstanceHealthQuery.
        """
        self.openapi_types = {
            'instance_id': str,
            'health_status': str,
            'should_respect_grace_period': bool
        }

        self.attribute_map = {
            'instance_id': 'InstanceId',
            'health_status': 'HealthStatus',
            'should_respect_grace_period': 'ShouldRespectGracePeriod'
        }

        self._instance_id = instance_id
        self._health_status = health_status
        self._should_respect_grace_period = should_respect_grace_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetInstanceHealthQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetInstanceHealthQuery of this SetInstanceHealthQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_id(self):
        """Gets the instance_id of this SetInstanceHealthQuery.


        :return: The instance_id of this SetInstanceHealthQuery.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this SetInstanceHealthQuery.


        :param instance_id: The instance_id of this SetInstanceHealthQuery.
        :type instance_id: str
        """
        if instance_id is None:
            raise ValueError("Invalid value for `instance_id`, must not be `None`")

        self._instance_id = instance_id

    @property
    def health_status(self):
        """Gets the health_status of this SetInstanceHealthQuery.


        :return: The health_status of this SetInstanceHealthQuery.
        :rtype: str
        """
        return self._health_status

    @health_status.setter
    def health_status(self, health_status):
        """Sets the health_status of this SetInstanceHealthQuery.


        :param health_status: The health_status of this SetInstanceHealthQuery.
        :type health_status: str
        """
        if health_status is None:
            raise ValueError("Invalid value for `health_status`, must not be `None`")

        self._health_status = health_status

    @property
    def should_respect_grace_period(self):
        """Gets the should_respect_grace_period of this SetInstanceHealthQuery.


        :return: The should_respect_grace_period of this SetInstanceHealthQuery.
        :rtype: bool
        """
        return self._should_respect_grace_period

    @should_respect_grace_period.setter
    def should_respect_grace_period(self, should_respect_grace_period):
        """Sets the should_respect_grace_period of this SetInstanceHealthQuery.


        :param should_respect_grace_period: The should_respect_grace_period of this SetInstanceHealthQuery.
        :type should_respect_grace_period: bool
        """

        self._should_respect_grace_period = should_respect_grace_period
