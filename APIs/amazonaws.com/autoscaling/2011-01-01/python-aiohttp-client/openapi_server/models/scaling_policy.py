# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scaling_policy_predictive_scaling_configuration import ScalingPolicyPredictiveScalingConfiguration
from openapi_server.models.scaling_policy_target_tracking_configuration import ScalingPolicyTargetTrackingConfiguration
from openapi_server import util


class ScalingPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_scaling_group_name: str=None, policy_name: str=None, policy_arn: str=None, policy_type: str=None, adjustment_type: str=None, min_adjustment_step: int=None, min_adjustment_magnitude: int=None, scaling_adjustment: int=None, cooldown: int=None, step_adjustments: List=None, metric_aggregation_type: str=None, estimated_instance_warmup: int=None, alarms: List=None, target_tracking_configuration: ScalingPolicyTargetTrackingConfiguration=None, enabled: bool=None, predictive_scaling_configuration: ScalingPolicyPredictiveScalingConfiguration=None):
        """ScalingPolicy - a model defined in OpenAPI

        :param auto_scaling_group_name: The auto_scaling_group_name of this ScalingPolicy.
        :param policy_name: The policy_name of this ScalingPolicy.
        :param policy_arn: The policy_arn of this ScalingPolicy.
        :param policy_type: The policy_type of this ScalingPolicy.
        :param adjustment_type: The adjustment_type of this ScalingPolicy.
        :param min_adjustment_step: The min_adjustment_step of this ScalingPolicy.
        :param min_adjustment_magnitude: The min_adjustment_magnitude of this ScalingPolicy.
        :param scaling_adjustment: The scaling_adjustment of this ScalingPolicy.
        :param cooldown: The cooldown of this ScalingPolicy.
        :param step_adjustments: The step_adjustments of this ScalingPolicy.
        :param metric_aggregation_type: The metric_aggregation_type of this ScalingPolicy.
        :param estimated_instance_warmup: The estimated_instance_warmup of this ScalingPolicy.
        :param alarms: The alarms of this ScalingPolicy.
        :param target_tracking_configuration: The target_tracking_configuration of this ScalingPolicy.
        :param enabled: The enabled of this ScalingPolicy.
        :param predictive_scaling_configuration: The predictive_scaling_configuration of this ScalingPolicy.
        """
        self.openapi_types = {
            'auto_scaling_group_name': str,
            'policy_name': str,
            'policy_arn': str,
            'policy_type': str,
            'adjustment_type': str,
            'min_adjustment_step': int,
            'min_adjustment_magnitude': int,
            'scaling_adjustment': int,
            'cooldown': int,
            'step_adjustments': List,
            'metric_aggregation_type': str,
            'estimated_instance_warmup': int,
            'alarms': List,
            'target_tracking_configuration': ScalingPolicyTargetTrackingConfiguration,
            'enabled': bool,
            'predictive_scaling_configuration': ScalingPolicyPredictiveScalingConfiguration
        }

        self.attribute_map = {
            'auto_scaling_group_name': 'AutoScalingGroupName',
            'policy_name': 'PolicyName',
            'policy_arn': 'PolicyARN',
            'policy_type': 'PolicyType',
            'adjustment_type': 'AdjustmentType',
            'min_adjustment_step': 'MinAdjustmentStep',
            'min_adjustment_magnitude': 'MinAdjustmentMagnitude',
            'scaling_adjustment': 'ScalingAdjustment',
            'cooldown': 'Cooldown',
            'step_adjustments': 'StepAdjustments',
            'metric_aggregation_type': 'MetricAggregationType',
            'estimated_instance_warmup': 'EstimatedInstanceWarmup',
            'alarms': 'Alarms',
            'target_tracking_configuration': 'TargetTrackingConfiguration',
            'enabled': 'Enabled',
            'predictive_scaling_configuration': 'PredictiveScalingConfiguration'
        }

        self._auto_scaling_group_name = auto_scaling_group_name
        self._policy_name = policy_name
        self._policy_arn = policy_arn
        self._policy_type = policy_type
        self._adjustment_type = adjustment_type
        self._min_adjustment_step = min_adjustment_step
        self._min_adjustment_magnitude = min_adjustment_magnitude
        self._scaling_adjustment = scaling_adjustment
        self._cooldown = cooldown
        self._step_adjustments = step_adjustments
        self._metric_aggregation_type = metric_aggregation_type
        self._estimated_instance_warmup = estimated_instance_warmup
        self._alarms = alarms
        self._target_tracking_configuration = target_tracking_configuration
        self._enabled = enabled
        self._predictive_scaling_configuration = predictive_scaling_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScalingPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScalingPolicy of this ScalingPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_scaling_group_name(self):
        """Gets the auto_scaling_group_name of this ScalingPolicy.


        :return: The auto_scaling_group_name of this ScalingPolicy.
        :rtype: str
        """
        return self._auto_scaling_group_name

    @auto_scaling_group_name.setter
    def auto_scaling_group_name(self, auto_scaling_group_name):
        """Sets the auto_scaling_group_name of this ScalingPolicy.


        :param auto_scaling_group_name: The auto_scaling_group_name of this ScalingPolicy.
        :type auto_scaling_group_name: str
        """

        self._auto_scaling_group_name = auto_scaling_group_name

    @property
    def policy_name(self):
        """Gets the policy_name of this ScalingPolicy.


        :return: The policy_name of this ScalingPolicy.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this ScalingPolicy.


        :param policy_name: The policy_name of this ScalingPolicy.
        :type policy_name: str
        """

        self._policy_name = policy_name

    @property
    def policy_arn(self):
        """Gets the policy_arn of this ScalingPolicy.


        :return: The policy_arn of this ScalingPolicy.
        :rtype: str
        """
        return self._policy_arn

    @policy_arn.setter
    def policy_arn(self, policy_arn):
        """Sets the policy_arn of this ScalingPolicy.


        :param policy_arn: The policy_arn of this ScalingPolicy.
        :type policy_arn: str
        """

        self._policy_arn = policy_arn

    @property
    def policy_type(self):
        """Gets the policy_type of this ScalingPolicy.


        :return: The policy_type of this ScalingPolicy.
        :rtype: str
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this ScalingPolicy.


        :param policy_type: The policy_type of this ScalingPolicy.
        :type policy_type: str
        """

        self._policy_type = policy_type

    @property
    def adjustment_type(self):
        """Gets the adjustment_type of this ScalingPolicy.


        :return: The adjustment_type of this ScalingPolicy.
        :rtype: str
        """
        return self._adjustment_type

    @adjustment_type.setter
    def adjustment_type(self, adjustment_type):
        """Sets the adjustment_type of this ScalingPolicy.


        :param adjustment_type: The adjustment_type of this ScalingPolicy.
        :type adjustment_type: str
        """

        self._adjustment_type = adjustment_type

    @property
    def min_adjustment_step(self):
        """Gets the min_adjustment_step of this ScalingPolicy.


        :return: The min_adjustment_step of this ScalingPolicy.
        :rtype: int
        """
        return self._min_adjustment_step

    @min_adjustment_step.setter
    def min_adjustment_step(self, min_adjustment_step):
        """Sets the min_adjustment_step of this ScalingPolicy.


        :param min_adjustment_step: The min_adjustment_step of this ScalingPolicy.
        :type min_adjustment_step: int
        """

        self._min_adjustment_step = min_adjustment_step

    @property
    def min_adjustment_magnitude(self):
        """Gets the min_adjustment_magnitude of this ScalingPolicy.


        :return: The min_adjustment_magnitude of this ScalingPolicy.
        :rtype: int
        """
        return self._min_adjustment_magnitude

    @min_adjustment_magnitude.setter
    def min_adjustment_magnitude(self, min_adjustment_magnitude):
        """Sets the min_adjustment_magnitude of this ScalingPolicy.


        :param min_adjustment_magnitude: The min_adjustment_magnitude of this ScalingPolicy.
        :type min_adjustment_magnitude: int
        """

        self._min_adjustment_magnitude = min_adjustment_magnitude

    @property
    def scaling_adjustment(self):
        """Gets the scaling_adjustment of this ScalingPolicy.


        :return: The scaling_adjustment of this ScalingPolicy.
        :rtype: int
        """
        return self._scaling_adjustment

    @scaling_adjustment.setter
    def scaling_adjustment(self, scaling_adjustment):
        """Sets the scaling_adjustment of this ScalingPolicy.


        :param scaling_adjustment: The scaling_adjustment of this ScalingPolicy.
        :type scaling_adjustment: int
        """

        self._scaling_adjustment = scaling_adjustment

    @property
    def cooldown(self):
        """Gets the cooldown of this ScalingPolicy.


        :return: The cooldown of this ScalingPolicy.
        :rtype: int
        """
        return self._cooldown

    @cooldown.setter
    def cooldown(self, cooldown):
        """Sets the cooldown of this ScalingPolicy.


        :param cooldown: The cooldown of this ScalingPolicy.
        :type cooldown: int
        """

        self._cooldown = cooldown

    @property
    def step_adjustments(self):
        """Gets the step_adjustments of this ScalingPolicy.


        :return: The step_adjustments of this ScalingPolicy.
        :rtype: List
        """
        return self._step_adjustments

    @step_adjustments.setter
    def step_adjustments(self, step_adjustments):
        """Sets the step_adjustments of this ScalingPolicy.


        :param step_adjustments: The step_adjustments of this ScalingPolicy.
        :type step_adjustments: List
        """

        self._step_adjustments = step_adjustments

    @property
    def metric_aggregation_type(self):
        """Gets the metric_aggregation_type of this ScalingPolicy.


        :return: The metric_aggregation_type of this ScalingPolicy.
        :rtype: str
        """
        return self._metric_aggregation_type

    @metric_aggregation_type.setter
    def metric_aggregation_type(self, metric_aggregation_type):
        """Sets the metric_aggregation_type of this ScalingPolicy.


        :param metric_aggregation_type: The metric_aggregation_type of this ScalingPolicy.
        :type metric_aggregation_type: str
        """

        self._metric_aggregation_type = metric_aggregation_type

    @property
    def estimated_instance_warmup(self):
        """Gets the estimated_instance_warmup of this ScalingPolicy.


        :return: The estimated_instance_warmup of this ScalingPolicy.
        :rtype: int
        """
        return self._estimated_instance_warmup

    @estimated_instance_warmup.setter
    def estimated_instance_warmup(self, estimated_instance_warmup):
        """Sets the estimated_instance_warmup of this ScalingPolicy.


        :param estimated_instance_warmup: The estimated_instance_warmup of this ScalingPolicy.
        :type estimated_instance_warmup: int
        """

        self._estimated_instance_warmup = estimated_instance_warmup

    @property
    def alarms(self):
        """Gets the alarms of this ScalingPolicy.


        :return: The alarms of this ScalingPolicy.
        :rtype: List
        """
        return self._alarms

    @alarms.setter
    def alarms(self, alarms):
        """Sets the alarms of this ScalingPolicy.


        :param alarms: The alarms of this ScalingPolicy.
        :type alarms: List
        """

        self._alarms = alarms

    @property
    def target_tracking_configuration(self):
        """Gets the target_tracking_configuration of this ScalingPolicy.


        :return: The target_tracking_configuration of this ScalingPolicy.
        :rtype: ScalingPolicyTargetTrackingConfiguration
        """
        return self._target_tracking_configuration

    @target_tracking_configuration.setter
    def target_tracking_configuration(self, target_tracking_configuration):
        """Sets the target_tracking_configuration of this ScalingPolicy.


        :param target_tracking_configuration: The target_tracking_configuration of this ScalingPolicy.
        :type target_tracking_configuration: ScalingPolicyTargetTrackingConfiguration
        """

        self._target_tracking_configuration = target_tracking_configuration

    @property
    def enabled(self):
        """Gets the enabled of this ScalingPolicy.


        :return: The enabled of this ScalingPolicy.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this ScalingPolicy.


        :param enabled: The enabled of this ScalingPolicy.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def predictive_scaling_configuration(self):
        """Gets the predictive_scaling_configuration of this ScalingPolicy.


        :return: The predictive_scaling_configuration of this ScalingPolicy.
        :rtype: ScalingPolicyPredictiveScalingConfiguration
        """
        return self._predictive_scaling_configuration

    @predictive_scaling_configuration.setter
    def predictive_scaling_configuration(self, predictive_scaling_configuration):
        """Sets the predictive_scaling_configuration of this ScalingPolicy.


        :param predictive_scaling_configuration: The predictive_scaling_configuration of this ScalingPolicy.
        :type predictive_scaling_configuration: ScalingPolicyPredictiveScalingConfiguration
        """

        self._predictive_scaling_configuration = predictive_scaling_configuration
