# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrafficSourceState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, traffic_source: str=None, state: str=None, identifier: str=None, type: str=None):
        """TrafficSourceState - a model defined in OpenAPI

        :param traffic_source: The traffic_source of this TrafficSourceState.
        :param state: The state of this TrafficSourceState.
        :param identifier: The identifier of this TrafficSourceState.
        :param type: The type of this TrafficSourceState.
        """
        self.openapi_types = {
            'traffic_source': str,
            'state': str,
            'identifier': str,
            'type': str
        }

        self.attribute_map = {
            'traffic_source': 'TrafficSource',
            'state': 'State',
            'identifier': 'Identifier',
            'type': 'Type'
        }

        self._traffic_source = traffic_source
        self._state = state
        self._identifier = identifier
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrafficSourceState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrafficSourceState of this TrafficSourceState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def traffic_source(self):
        """Gets the traffic_source of this TrafficSourceState.


        :return: The traffic_source of this TrafficSourceState.
        :rtype: str
        """
        return self._traffic_source

    @traffic_source.setter
    def traffic_source(self, traffic_source):
        """Sets the traffic_source of this TrafficSourceState.


        :param traffic_source: The traffic_source of this TrafficSourceState.
        :type traffic_source: str
        """

        self._traffic_source = traffic_source

    @property
    def state(self):
        """Gets the state of this TrafficSourceState.


        :return: The state of this TrafficSourceState.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this TrafficSourceState.


        :param state: The state of this TrafficSourceState.
        :type state: str
        """

        self._state = state

    @property
    def identifier(self):
        """Gets the identifier of this TrafficSourceState.


        :return: The identifier of this TrafficSourceState.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this TrafficSourceState.


        :param identifier: The identifier of this TrafficSourceState.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def type(self):
        """Gets the type of this TrafficSourceState.


        :return: The type of this TrafficSourceState.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TrafficSourceState.


        :param type: The type of this TrafficSourceState.
        :type type: str
        """

        self._type = type
