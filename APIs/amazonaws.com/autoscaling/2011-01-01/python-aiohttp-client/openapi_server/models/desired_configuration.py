# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_start_instance_refresh_desired_configuration_parameter_launch_template import GETStartInstanceRefreshDesiredConfigurationParameterLaunchTemplate
from openapi_server.models.get_start_instance_refresh_desired_configuration_parameter_mixed_instances_policy import GETStartInstanceRefreshDesiredConfigurationParameterMixedInstancesPolicy
from openapi_server import util


class DesiredConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, launch_template: GETStartInstanceRefreshDesiredConfigurationParameterLaunchTemplate=None, mixed_instances_policy: GETStartInstanceRefreshDesiredConfigurationParameterMixedInstancesPolicy=None):
        """DesiredConfiguration - a model defined in OpenAPI

        :param launch_template: The launch_template of this DesiredConfiguration.
        :param mixed_instances_policy: The mixed_instances_policy of this DesiredConfiguration.
        """
        self.openapi_types = {
            'launch_template': GETStartInstanceRefreshDesiredConfigurationParameterLaunchTemplate,
            'mixed_instances_policy': GETStartInstanceRefreshDesiredConfigurationParameterMixedInstancesPolicy
        }

        self.attribute_map = {
            'launch_template': 'LaunchTemplate',
            'mixed_instances_policy': 'MixedInstancesPolicy'
        }

        self._launch_template = launch_template
        self._mixed_instances_policy = mixed_instances_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DesiredConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DesiredConfiguration of this DesiredConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def launch_template(self):
        """Gets the launch_template of this DesiredConfiguration.


        :return: The launch_template of this DesiredConfiguration.
        :rtype: GETStartInstanceRefreshDesiredConfigurationParameterLaunchTemplate
        """
        return self._launch_template

    @launch_template.setter
    def launch_template(self, launch_template):
        """Sets the launch_template of this DesiredConfiguration.


        :param launch_template: The launch_template of this DesiredConfiguration.
        :type launch_template: GETStartInstanceRefreshDesiredConfigurationParameterLaunchTemplate
        """

        self._launch_template = launch_template

    @property
    def mixed_instances_policy(self):
        """Gets the mixed_instances_policy of this DesiredConfiguration.


        :return: The mixed_instances_policy of this DesiredConfiguration.
        :rtype: GETStartInstanceRefreshDesiredConfigurationParameterMixedInstancesPolicy
        """
        return self._mixed_instances_policy

    @mixed_instances_policy.setter
    def mixed_instances_policy(self, mixed_instances_policy):
        """Sets the mixed_instances_policy of this DesiredConfiguration.


        :param mixed_instances_policy: The mixed_instances_policy of this DesiredConfiguration.
        :type mixed_instances_policy: GETStartInstanceRefreshDesiredConfigurationParameterMixedInstancesPolicy
        """

        self._mixed_instances_policy = mixed_instances_policy
