/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILaunchTemplateOverrides.h
 *
 * &lt;p&gt;Use this structure to let Amazon EC2 Auto Scaling do the following when the Auto Scaling group has a mixed instances policy:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Override the instance type that is specified in the launch template.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use multiple instance types.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Specify the instance types that you want, or define your instance requirements instead and let Amazon EC2 Auto Scaling provision the available instance types that meet your requirements. This can provide Amazon EC2 Auto Scaling with a larger selection of instance types to choose from when fulfilling Spot and On-Demand capacities. You can view which instance types are matched before you apply the instance requirements to your Auto Scaling group.&lt;/p&gt; &lt;p&gt;After you define your instance requirements, you don&#39;t have to keep updating these settings to get new EC2 instance types automatically. Amazon EC2 Auto Scaling uses the instance requirements of the Auto Scaling group to determine whether a new EC2 instance type can be used.&lt;/p&gt;
 */

#ifndef OAILaunchTemplateOverrides_H
#define OAILaunchTemplateOverrides_H

#include <QJsonObject>

#include "OAILaunchTemplateOverrides_InstanceRequirements.h"
#include "OAILaunchTemplateOverrides_LaunchTemplateSpecification.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILaunchTemplateOverrides_LaunchTemplateSpecification;
class OAILaunchTemplateOverrides_InstanceRequirements;

class OAILaunchTemplateOverrides : public OAIObject {
public:
    OAILaunchTemplateOverrides();
    OAILaunchTemplateOverrides(QString json);
    ~OAILaunchTemplateOverrides() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getWeightedCapacity() const;
    void setWeightedCapacity(const QString &weighted_capacity);
    bool is_weighted_capacity_Set() const;
    bool is_weighted_capacity_Valid() const;

    OAILaunchTemplateOverrides_LaunchTemplateSpecification getLaunchTemplateSpecification() const;
    void setLaunchTemplateSpecification(const OAILaunchTemplateOverrides_LaunchTemplateSpecification &launch_template_specification);
    bool is_launch_template_specification_Set() const;
    bool is_launch_template_specification_Valid() const;

    OAILaunchTemplateOverrides_InstanceRequirements getInstanceRequirements() const;
    void setInstanceRequirements(const OAILaunchTemplateOverrides_InstanceRequirements &instance_requirements);
    bool is_instance_requirements_Set() const;
    bool is_instance_requirements_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_weighted_capacity;
    bool m_weighted_capacity_isSet;
    bool m_weighted_capacity_isValid;

    OAILaunchTemplateOverrides_LaunchTemplateSpecification m_launch_template_specification;
    bool m_launch_template_specification_isSet;
    bool m_launch_template_specification_isValid;

    OAILaunchTemplateOverrides_InstanceRequirements m_instance_requirements;
    bool m_instance_requirements_isSet;
    bool m_instance_requirements_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILaunchTemplateOverrides)

#endif // OAILaunchTemplateOverrides_H
