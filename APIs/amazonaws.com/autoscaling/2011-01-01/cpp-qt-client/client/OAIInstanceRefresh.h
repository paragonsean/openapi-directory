/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceRefresh.h
 *
 * Describes an instance refresh for an Auto Scaling group. 
 */

#ifndef OAIInstanceRefresh_H
#define OAIInstanceRefresh_H

#include <QJsonObject>

#include "OAIInstanceRefreshStatus.h"
#include "OAIInstanceRefresh_DesiredConfiguration.h"
#include "OAIInstanceRefresh_Preferences.h"
#include "OAIInstanceRefresh_ProgressDetails.h"
#include "OAIInstanceRefresh_RollbackDetails.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstanceRefresh_ProgressDetails;
class OAIInstanceRefresh_Preferences;
class OAIInstanceRefresh_DesiredConfiguration;
class OAIInstanceRefresh_RollbackDetails;

class OAIInstanceRefresh : public OAIObject {
public:
    OAIInstanceRefresh();
    OAIInstanceRefresh(QString json);
    ~OAIInstanceRefresh() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInstanceRefreshId() const;
    void setInstanceRefreshId(const QString &instance_refresh_id);
    bool is_instance_refresh_id_Set() const;
    bool is_instance_refresh_id_Valid() const;

    QString getAutoScalingGroupName() const;
    void setAutoScalingGroupName(const QString &auto_scaling_group_name);
    bool is_auto_scaling_group_name_Set() const;
    bool is_auto_scaling_group_name_Valid() const;

    OAIInstanceRefreshStatus getStatus() const;
    void setStatus(const OAIInstanceRefreshStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusReason() const;
    void setStatusReason(const QString &status_reason);
    bool is_status_reason_Set() const;
    bool is_status_reason_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    qint32 getPercentageComplete() const;
    void setPercentageComplete(const qint32 &percentage_complete);
    bool is_percentage_complete_Set() const;
    bool is_percentage_complete_Valid() const;

    qint32 getInstancesToUpdate() const;
    void setInstancesToUpdate(const qint32 &instances_to_update);
    bool is_instances_to_update_Set() const;
    bool is_instances_to_update_Valid() const;

    OAIInstanceRefresh_ProgressDetails getProgressDetails() const;
    void setProgressDetails(const OAIInstanceRefresh_ProgressDetails &progress_details);
    bool is_progress_details_Set() const;
    bool is_progress_details_Valid() const;

    OAIInstanceRefresh_Preferences getPreferences() const;
    void setPreferences(const OAIInstanceRefresh_Preferences &preferences);
    bool is_preferences_Set() const;
    bool is_preferences_Valid() const;

    OAIInstanceRefresh_DesiredConfiguration getDesiredConfiguration() const;
    void setDesiredConfiguration(const OAIInstanceRefresh_DesiredConfiguration &desired_configuration);
    bool is_desired_configuration_Set() const;
    bool is_desired_configuration_Valid() const;

    OAIInstanceRefresh_RollbackDetails getRollbackDetails() const;
    void setRollbackDetails(const OAIInstanceRefresh_RollbackDetails &rollback_details);
    bool is_rollback_details_Set() const;
    bool is_rollback_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_instance_refresh_id;
    bool m_instance_refresh_id_isSet;
    bool m_instance_refresh_id_isValid;

    QString m_auto_scaling_group_name;
    bool m_auto_scaling_group_name_isSet;
    bool m_auto_scaling_group_name_isValid;

    OAIInstanceRefreshStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_reason;
    bool m_status_reason_isSet;
    bool m_status_reason_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    qint32 m_percentage_complete;
    bool m_percentage_complete_isSet;
    bool m_percentage_complete_isValid;

    qint32 m_instances_to_update;
    bool m_instances_to_update_isSet;
    bool m_instances_to_update_isValid;

    OAIInstanceRefresh_ProgressDetails m_progress_details;
    bool m_progress_details_isSet;
    bool m_progress_details_isValid;

    OAIInstanceRefresh_Preferences m_preferences;
    bool m_preferences_isSet;
    bool m_preferences_isValid;

    OAIInstanceRefresh_DesiredConfiguration m_desired_configuration;
    bool m_desired_configuration_isSet;
    bool m_desired_configuration_isValid;

    OAIInstanceRefresh_RollbackDetails m_rollback_details;
    bool m_rollback_details_isSet;
    bool m_rollback_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceRefresh)

#endif // OAIInstanceRefresh_H
