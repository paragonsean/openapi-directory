/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAccountLimitsAnswer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAccountLimitsAnswer::OAIDescribeAccountLimitsAnswer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAccountLimitsAnswer::OAIDescribeAccountLimitsAnswer() {
    this->initializeModel();
}

OAIDescribeAccountLimitsAnswer::~OAIDescribeAccountLimitsAnswer() {}

void OAIDescribeAccountLimitsAnswer::initializeModel() {

    m_max_number_of_auto_scaling_groups_isSet = false;
    m_max_number_of_auto_scaling_groups_isValid = false;

    m_max_number_of_launch_configurations_isSet = false;
    m_max_number_of_launch_configurations_isValid = false;

    m_number_of_auto_scaling_groups_isSet = false;
    m_number_of_auto_scaling_groups_isValid = false;

    m_number_of_launch_configurations_isSet = false;
    m_number_of_launch_configurations_isValid = false;
}

void OAIDescribeAccountLimitsAnswer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAccountLimitsAnswer::fromJsonObject(QJsonObject json) {

    m_max_number_of_auto_scaling_groups_isValid = ::OpenAPI::fromJsonValue(m_max_number_of_auto_scaling_groups, json[QString("MaxNumberOfAutoScalingGroups")]);
    m_max_number_of_auto_scaling_groups_isSet = !json[QString("MaxNumberOfAutoScalingGroups")].isNull() && m_max_number_of_auto_scaling_groups_isValid;

    m_max_number_of_launch_configurations_isValid = ::OpenAPI::fromJsonValue(m_max_number_of_launch_configurations, json[QString("MaxNumberOfLaunchConfigurations")]);
    m_max_number_of_launch_configurations_isSet = !json[QString("MaxNumberOfLaunchConfigurations")].isNull() && m_max_number_of_launch_configurations_isValid;

    m_number_of_auto_scaling_groups_isValid = ::OpenAPI::fromJsonValue(m_number_of_auto_scaling_groups, json[QString("NumberOfAutoScalingGroups")]);
    m_number_of_auto_scaling_groups_isSet = !json[QString("NumberOfAutoScalingGroups")].isNull() && m_number_of_auto_scaling_groups_isValid;

    m_number_of_launch_configurations_isValid = ::OpenAPI::fromJsonValue(m_number_of_launch_configurations, json[QString("NumberOfLaunchConfigurations")]);
    m_number_of_launch_configurations_isSet = !json[QString("NumberOfLaunchConfigurations")].isNull() && m_number_of_launch_configurations_isValid;
}

QString OAIDescribeAccountLimitsAnswer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAccountLimitsAnswer::asJsonObject() const {
    QJsonObject obj;
    if (m_max_number_of_auto_scaling_groups_isSet) {
        obj.insert(QString("MaxNumberOfAutoScalingGroups"), ::OpenAPI::toJsonValue(m_max_number_of_auto_scaling_groups));
    }
    if (m_max_number_of_launch_configurations_isSet) {
        obj.insert(QString("MaxNumberOfLaunchConfigurations"), ::OpenAPI::toJsonValue(m_max_number_of_launch_configurations));
    }
    if (m_number_of_auto_scaling_groups_isSet) {
        obj.insert(QString("NumberOfAutoScalingGroups"), ::OpenAPI::toJsonValue(m_number_of_auto_scaling_groups));
    }
    if (m_number_of_launch_configurations_isSet) {
        obj.insert(QString("NumberOfLaunchConfigurations"), ::OpenAPI::toJsonValue(m_number_of_launch_configurations));
    }
    return obj;
}

qint32 OAIDescribeAccountLimitsAnswer::getMaxNumberOfAutoScalingGroups() const {
    return m_max_number_of_auto_scaling_groups;
}
void OAIDescribeAccountLimitsAnswer::setMaxNumberOfAutoScalingGroups(const qint32 &max_number_of_auto_scaling_groups) {
    m_max_number_of_auto_scaling_groups = max_number_of_auto_scaling_groups;
    m_max_number_of_auto_scaling_groups_isSet = true;
}

bool OAIDescribeAccountLimitsAnswer::is_max_number_of_auto_scaling_groups_Set() const{
    return m_max_number_of_auto_scaling_groups_isSet;
}

bool OAIDescribeAccountLimitsAnswer::is_max_number_of_auto_scaling_groups_Valid() const{
    return m_max_number_of_auto_scaling_groups_isValid;
}

qint32 OAIDescribeAccountLimitsAnswer::getMaxNumberOfLaunchConfigurations() const {
    return m_max_number_of_launch_configurations;
}
void OAIDescribeAccountLimitsAnswer::setMaxNumberOfLaunchConfigurations(const qint32 &max_number_of_launch_configurations) {
    m_max_number_of_launch_configurations = max_number_of_launch_configurations;
    m_max_number_of_launch_configurations_isSet = true;
}

bool OAIDescribeAccountLimitsAnswer::is_max_number_of_launch_configurations_Set() const{
    return m_max_number_of_launch_configurations_isSet;
}

bool OAIDescribeAccountLimitsAnswer::is_max_number_of_launch_configurations_Valid() const{
    return m_max_number_of_launch_configurations_isValid;
}

qint32 OAIDescribeAccountLimitsAnswer::getNumberOfAutoScalingGroups() const {
    return m_number_of_auto_scaling_groups;
}
void OAIDescribeAccountLimitsAnswer::setNumberOfAutoScalingGroups(const qint32 &number_of_auto_scaling_groups) {
    m_number_of_auto_scaling_groups = number_of_auto_scaling_groups;
    m_number_of_auto_scaling_groups_isSet = true;
}

bool OAIDescribeAccountLimitsAnswer::is_number_of_auto_scaling_groups_Set() const{
    return m_number_of_auto_scaling_groups_isSet;
}

bool OAIDescribeAccountLimitsAnswer::is_number_of_auto_scaling_groups_Valid() const{
    return m_number_of_auto_scaling_groups_isValid;
}

qint32 OAIDescribeAccountLimitsAnswer::getNumberOfLaunchConfigurations() const {
    return m_number_of_launch_configurations;
}
void OAIDescribeAccountLimitsAnswer::setNumberOfLaunchConfigurations(const qint32 &number_of_launch_configurations) {
    m_number_of_launch_configurations = number_of_launch_configurations;
    m_number_of_launch_configurations_isSet = true;
}

bool OAIDescribeAccountLimitsAnswer::is_number_of_launch_configurations_Set() const{
    return m_number_of_launch_configurations_isSet;
}

bool OAIDescribeAccountLimitsAnswer::is_number_of_launch_configurations_Valid() const{
    return m_number_of_launch_configurations_isValid;
}

bool OAIDescribeAccountLimitsAnswer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_number_of_auto_scaling_groups_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_number_of_launch_configurations_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_auto_scaling_groups_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_launch_configurations_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAccountLimitsAnswer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
