/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoadForecast_MetricSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoadForecast_MetricSpecification::OAILoadForecast_MetricSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoadForecast_MetricSpecification::OAILoadForecast_MetricSpecification() {
    this->initializeModel();
}

OAILoadForecast_MetricSpecification::~OAILoadForecast_MetricSpecification() {}

void OAILoadForecast_MetricSpecification::initializeModel() {

    m_target_value_isSet = false;
    m_target_value_isValid = false;

    m_predefined_metric_pair_specification_isSet = false;
    m_predefined_metric_pair_specification_isValid = false;

    m_predefined_scaling_metric_specification_isSet = false;
    m_predefined_scaling_metric_specification_isValid = false;

    m_predefined_load_metric_specification_isSet = false;
    m_predefined_load_metric_specification_isValid = false;

    m_customized_scaling_metric_specification_isSet = false;
    m_customized_scaling_metric_specification_isValid = false;

    m_customized_load_metric_specification_isSet = false;
    m_customized_load_metric_specification_isValid = false;

    m_customized_capacity_metric_specification_isSet = false;
    m_customized_capacity_metric_specification_isValid = false;
}

void OAILoadForecast_MetricSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoadForecast_MetricSpecification::fromJsonObject(QJsonObject json) {

    m_target_value_isValid = ::OpenAPI::fromJsonValue(m_target_value, json[QString("TargetValue")]);
    m_target_value_isSet = !json[QString("TargetValue")].isNull() && m_target_value_isValid;

    m_predefined_metric_pair_specification_isValid = ::OpenAPI::fromJsonValue(m_predefined_metric_pair_specification, json[QString("PredefinedMetricPairSpecification")]);
    m_predefined_metric_pair_specification_isSet = !json[QString("PredefinedMetricPairSpecification")].isNull() && m_predefined_metric_pair_specification_isValid;

    m_predefined_scaling_metric_specification_isValid = ::OpenAPI::fromJsonValue(m_predefined_scaling_metric_specification, json[QString("PredefinedScalingMetricSpecification")]);
    m_predefined_scaling_metric_specification_isSet = !json[QString("PredefinedScalingMetricSpecification")].isNull() && m_predefined_scaling_metric_specification_isValid;

    m_predefined_load_metric_specification_isValid = ::OpenAPI::fromJsonValue(m_predefined_load_metric_specification, json[QString("PredefinedLoadMetricSpecification")]);
    m_predefined_load_metric_specification_isSet = !json[QString("PredefinedLoadMetricSpecification")].isNull() && m_predefined_load_metric_specification_isValid;

    m_customized_scaling_metric_specification_isValid = ::OpenAPI::fromJsonValue(m_customized_scaling_metric_specification, json[QString("CustomizedScalingMetricSpecification")]);
    m_customized_scaling_metric_specification_isSet = !json[QString("CustomizedScalingMetricSpecification")].isNull() && m_customized_scaling_metric_specification_isValid;

    m_customized_load_metric_specification_isValid = ::OpenAPI::fromJsonValue(m_customized_load_metric_specification, json[QString("CustomizedLoadMetricSpecification")]);
    m_customized_load_metric_specification_isSet = !json[QString("CustomizedLoadMetricSpecification")].isNull() && m_customized_load_metric_specification_isValid;

    m_customized_capacity_metric_specification_isValid = ::OpenAPI::fromJsonValue(m_customized_capacity_metric_specification, json[QString("CustomizedCapacityMetricSpecification")]);
    m_customized_capacity_metric_specification_isSet = !json[QString("CustomizedCapacityMetricSpecification")].isNull() && m_customized_capacity_metric_specification_isValid;
}

QString OAILoadForecast_MetricSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoadForecast_MetricSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_target_value_isSet) {
        obj.insert(QString("TargetValue"), ::OpenAPI::toJsonValue(m_target_value));
    }
    if (m_predefined_metric_pair_specification.isSet()) {
        obj.insert(QString("PredefinedMetricPairSpecification"), ::OpenAPI::toJsonValue(m_predefined_metric_pair_specification));
    }
    if (m_predefined_scaling_metric_specification.isSet()) {
        obj.insert(QString("PredefinedScalingMetricSpecification"), ::OpenAPI::toJsonValue(m_predefined_scaling_metric_specification));
    }
    if (m_predefined_load_metric_specification.isSet()) {
        obj.insert(QString("PredefinedLoadMetricSpecification"), ::OpenAPI::toJsonValue(m_predefined_load_metric_specification));
    }
    if (m_customized_scaling_metric_specification.isSet()) {
        obj.insert(QString("CustomizedScalingMetricSpecification"), ::OpenAPI::toJsonValue(m_customized_scaling_metric_specification));
    }
    if (m_customized_load_metric_specification.isSet()) {
        obj.insert(QString("CustomizedLoadMetricSpecification"), ::OpenAPI::toJsonValue(m_customized_load_metric_specification));
    }
    if (m_customized_capacity_metric_specification.isSet()) {
        obj.insert(QString("CustomizedCapacityMetricSpecification"), ::OpenAPI::toJsonValue(m_customized_capacity_metric_specification));
    }
    return obj;
}

double OAILoadForecast_MetricSpecification::getTargetValue() const {
    return m_target_value;
}
void OAILoadForecast_MetricSpecification::setTargetValue(const double &target_value) {
    m_target_value = target_value;
    m_target_value_isSet = true;
}

bool OAILoadForecast_MetricSpecification::is_target_value_Set() const{
    return m_target_value_isSet;
}

bool OAILoadForecast_MetricSpecification::is_target_value_Valid() const{
    return m_target_value_isValid;
}

OAIPredictiveScalingMetricSpecification_PredefinedMetricPairSpecification OAILoadForecast_MetricSpecification::getPredefinedMetricPairSpecification() const {
    return m_predefined_metric_pair_specification;
}
void OAILoadForecast_MetricSpecification::setPredefinedMetricPairSpecification(const OAIPredictiveScalingMetricSpecification_PredefinedMetricPairSpecification &predefined_metric_pair_specification) {
    m_predefined_metric_pair_specification = predefined_metric_pair_specification;
    m_predefined_metric_pair_specification_isSet = true;
}

bool OAILoadForecast_MetricSpecification::is_predefined_metric_pair_specification_Set() const{
    return m_predefined_metric_pair_specification_isSet;
}

bool OAILoadForecast_MetricSpecification::is_predefined_metric_pair_specification_Valid() const{
    return m_predefined_metric_pair_specification_isValid;
}

OAIPredictiveScalingMetricSpecification_PredefinedScalingMetricSpecification OAILoadForecast_MetricSpecification::getPredefinedScalingMetricSpecification() const {
    return m_predefined_scaling_metric_specification;
}
void OAILoadForecast_MetricSpecification::setPredefinedScalingMetricSpecification(const OAIPredictiveScalingMetricSpecification_PredefinedScalingMetricSpecification &predefined_scaling_metric_specification) {
    m_predefined_scaling_metric_specification = predefined_scaling_metric_specification;
    m_predefined_scaling_metric_specification_isSet = true;
}

bool OAILoadForecast_MetricSpecification::is_predefined_scaling_metric_specification_Set() const{
    return m_predefined_scaling_metric_specification_isSet;
}

bool OAILoadForecast_MetricSpecification::is_predefined_scaling_metric_specification_Valid() const{
    return m_predefined_scaling_metric_specification_isValid;
}

OAIPredictiveScalingMetricSpecification_PredefinedLoadMetricSpecification OAILoadForecast_MetricSpecification::getPredefinedLoadMetricSpecification() const {
    return m_predefined_load_metric_specification;
}
void OAILoadForecast_MetricSpecification::setPredefinedLoadMetricSpecification(const OAIPredictiveScalingMetricSpecification_PredefinedLoadMetricSpecification &predefined_load_metric_specification) {
    m_predefined_load_metric_specification = predefined_load_metric_specification;
    m_predefined_load_metric_specification_isSet = true;
}

bool OAILoadForecast_MetricSpecification::is_predefined_load_metric_specification_Set() const{
    return m_predefined_load_metric_specification_isSet;
}

bool OAILoadForecast_MetricSpecification::is_predefined_load_metric_specification_Valid() const{
    return m_predefined_load_metric_specification_isValid;
}

OAIPredictiveScalingMetricSpecification_CustomizedScalingMetricSpecification OAILoadForecast_MetricSpecification::getCustomizedScalingMetricSpecification() const {
    return m_customized_scaling_metric_specification;
}
void OAILoadForecast_MetricSpecification::setCustomizedScalingMetricSpecification(const OAIPredictiveScalingMetricSpecification_CustomizedScalingMetricSpecification &customized_scaling_metric_specification) {
    m_customized_scaling_metric_specification = customized_scaling_metric_specification;
    m_customized_scaling_metric_specification_isSet = true;
}

bool OAILoadForecast_MetricSpecification::is_customized_scaling_metric_specification_Set() const{
    return m_customized_scaling_metric_specification_isSet;
}

bool OAILoadForecast_MetricSpecification::is_customized_scaling_metric_specification_Valid() const{
    return m_customized_scaling_metric_specification_isValid;
}

OAIPredictiveScalingMetricSpecification_CustomizedLoadMetricSpecification OAILoadForecast_MetricSpecification::getCustomizedLoadMetricSpecification() const {
    return m_customized_load_metric_specification;
}
void OAILoadForecast_MetricSpecification::setCustomizedLoadMetricSpecification(const OAIPredictiveScalingMetricSpecification_CustomizedLoadMetricSpecification &customized_load_metric_specification) {
    m_customized_load_metric_specification = customized_load_metric_specification;
    m_customized_load_metric_specification_isSet = true;
}

bool OAILoadForecast_MetricSpecification::is_customized_load_metric_specification_Set() const{
    return m_customized_load_metric_specification_isSet;
}

bool OAILoadForecast_MetricSpecification::is_customized_load_metric_specification_Valid() const{
    return m_customized_load_metric_specification_isValid;
}

OAIPredictiveScalingMetricSpecification_CustomizedCapacityMetricSpecification OAILoadForecast_MetricSpecification::getCustomizedCapacityMetricSpecification() const {
    return m_customized_capacity_metric_specification;
}
void OAILoadForecast_MetricSpecification::setCustomizedCapacityMetricSpecification(const OAIPredictiveScalingMetricSpecification_CustomizedCapacityMetricSpecification &customized_capacity_metric_specification) {
    m_customized_capacity_metric_specification = customized_capacity_metric_specification;
    m_customized_capacity_metric_specification_isSet = true;
}

bool OAILoadForecast_MetricSpecification::is_customized_capacity_metric_specification_Set() const{
    return m_customized_capacity_metric_specification_isSet;
}

bool OAILoadForecast_MetricSpecification::is_customized_capacity_metric_specification_Valid() const{
    return m_customized_capacity_metric_specification_isValid;
}

bool OAILoadForecast_MetricSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predefined_metric_pair_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_predefined_scaling_metric_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_predefined_load_metric_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_customized_scaling_metric_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_customized_load_metric_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_customized_capacity_metric_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoadForecast_MetricSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_value_isValid && true;
}

} // namespace OpenAPI
