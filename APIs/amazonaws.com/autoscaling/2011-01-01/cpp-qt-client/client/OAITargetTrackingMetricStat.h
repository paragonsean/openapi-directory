/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITargetTrackingMetricStat.h
 *
 * &lt;p&gt;This structure defines the CloudWatch metric to return, along with the statistic and unit.&lt;/p&gt; &lt;p&gt;For more information about the CloudWatch terminology below, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\&quot;&gt;Amazon CloudWatch concepts&lt;/a&gt; in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAITargetTrackingMetricStat_H
#define OAITargetTrackingMetricStat_H

#include <QJsonObject>

#include "OAITargetTrackingMetricStat_Metric.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITargetTrackingMetricStat_Metric;

class OAITargetTrackingMetricStat : public OAIObject {
public:
    OAITargetTrackingMetricStat();
    OAITargetTrackingMetricStat(QString json);
    ~OAITargetTrackingMetricStat() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITargetTrackingMetricStat_Metric getMetric() const;
    void setMetric(const OAITargetTrackingMetricStat_Metric &metric);
    bool is_metric_Set() const;
    bool is_metric_Valid() const;

    QString getStat() const;
    void setStat(const QString &stat);
    bool is_stat_Set() const;
    bool is_stat_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITargetTrackingMetricStat_Metric m_metric;
    bool m_metric_isSet;
    bool m_metric_isValid;

    QString m_stat;
    bool m_stat_isSet;
    bool m_stat_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITargetTrackingMetricStat)

#endif // OAITargetTrackingMetricStat_H
