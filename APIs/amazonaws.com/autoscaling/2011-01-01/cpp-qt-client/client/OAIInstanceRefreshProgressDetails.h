/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceRefreshProgressDetails.h
 *
 * Reports progress on replacing instances in an Auto Scaling group that has a warm pool. This includes separate details for instances in the warm pool and instances in the Auto Scaling group (the live pool).
 */

#ifndef OAIInstanceRefreshProgressDetails_H
#define OAIInstanceRefreshProgressDetails_H

#include <QJsonObject>

#include "OAIInstanceRefreshProgressDetails_LivePoolProgress.h"
#include "OAIInstanceRefreshProgressDetails_WarmPoolProgress.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstanceRefreshProgressDetails_LivePoolProgress;
class OAIInstanceRefreshProgressDetails_WarmPoolProgress;

class OAIInstanceRefreshProgressDetails : public OAIObject {
public:
    OAIInstanceRefreshProgressDetails();
    OAIInstanceRefreshProgressDetails(QString json);
    ~OAIInstanceRefreshProgressDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInstanceRefreshProgressDetails_LivePoolProgress getLivePoolProgress() const;
    void setLivePoolProgress(const OAIInstanceRefreshProgressDetails_LivePoolProgress &live_pool_progress);
    bool is_live_pool_progress_Set() const;
    bool is_live_pool_progress_Valid() const;

    OAIInstanceRefreshProgressDetails_WarmPoolProgress getWarmPoolProgress() const;
    void setWarmPoolProgress(const OAIInstanceRefreshProgressDetails_WarmPoolProgress &warm_pool_progress);
    bool is_warm_pool_progress_Set() const;
    bool is_warm_pool_progress_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInstanceRefreshProgressDetails_LivePoolProgress m_live_pool_progress;
    bool m_live_pool_progress_isSet;
    bool m_live_pool_progress_isValid;

    OAIInstanceRefreshProgressDetails_WarmPoolProgress m_warm_pool_progress;
    bool m_warm_pool_progress_isSet;
    bool m_warm_pool_progress_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceRefreshProgressDetails)

#endif // OAIInstanceRefreshProgressDetails_H
