/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPredictiveScalingMetricSpecification.h
 *
 * &lt;p&gt;This structure specifies the metrics and target utilization settings for a predictive scaling policy. &lt;/p&gt; &lt;p&gt;You must specify either a metric pair, or a load metric and a scaling metric individually. Specifying a metric pair instead of individual metrics provides a simpler way to configure metrics for a scaling policy. You choose the metric pair, and the policy automatically knows the correct sum and average statistics to use for the load metric and the scaling metric.&lt;/p&gt; &lt;p&gt;Example&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You create a predictive scaling policy and specify &lt;code&gt;ALBRequestCount&lt;/code&gt; as the value for the metric pair and &lt;code&gt;1000.0&lt;/code&gt; as the target value. For this type of metric, you must provide the metric dimension for the corresponding target group, so you also provide a resource label for the Application Load Balancer target group that is attached to your Auto Scaling group.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The number of requests the target group receives per minute provides the load metric, and the request count averaged between the members of the target group provides the scaling metric. In CloudWatch, this refers to the &lt;code&gt;RequestCount&lt;/code&gt; and &lt;code&gt;RequestCountPerTarget&lt;/code&gt; metrics, respectively.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For optimal use of predictive scaling, you adhere to the best practice of using a dynamic scaling policy to automatically scale between the minimum capacity and maximum capacity in response to real-time changes in resource utilization.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon EC2 Auto Scaling consumes data points for the load metric over the last 14 days and creates an hourly load forecast for predictive scaling. (A minimum of 24 hours of data is required.)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;After creating the load forecast, Amazon EC2 Auto Scaling determines when to reduce or increase the capacity of your Auto Scaling group in each hour of the forecast period so that the average number of requests received by each instance is as close to 1000 requests per minute as possible at all times.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For information about using custom metrics with predictive scaling, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/autoscaling/ec2/userguide/predictive-scaling-customized-metric-specification.html\&quot;&gt;Advanced predictive scaling policy configurations using custom metrics&lt;/a&gt; in the &lt;i&gt;Amazon EC2 Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIPredictiveScalingMetricSpecification_H
#define OAIPredictiveScalingMetricSpecification_H

#include <QJsonObject>

#include "OAIPredictiveScalingMetricSpecification_CustomizedCapacityMetricSpecification.h"
#include "OAIPredictiveScalingMetricSpecification_CustomizedLoadMetricSpecification.h"
#include "OAIPredictiveScalingMetricSpecification_CustomizedScalingMetricSpecification.h"
#include "OAIPredictiveScalingMetricSpecification_PredefinedLoadMetricSpecification.h"
#include "OAIPredictiveScalingMetricSpecification_PredefinedMetricPairSpecification.h"
#include "OAIPredictiveScalingMetricSpecification_PredefinedScalingMetricSpecification.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPredictiveScalingMetricSpecification_PredefinedMetricPairSpecification;
class OAIPredictiveScalingMetricSpecification_PredefinedScalingMetricSpecification;
class OAIPredictiveScalingMetricSpecification_PredefinedLoadMetricSpecification;
class OAIPredictiveScalingMetricSpecification_CustomizedScalingMetricSpecification;
class OAIPredictiveScalingMetricSpecification_CustomizedLoadMetricSpecification;
class OAIPredictiveScalingMetricSpecification_CustomizedCapacityMetricSpecification;

class OAIPredictiveScalingMetricSpecification : public OAIObject {
public:
    OAIPredictiveScalingMetricSpecification();
    OAIPredictiveScalingMetricSpecification(QString json);
    ~OAIPredictiveScalingMetricSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getTargetValue() const;
    void setTargetValue(const double &target_value);
    bool is_target_value_Set() const;
    bool is_target_value_Valid() const;

    OAIPredictiveScalingMetricSpecification_PredefinedMetricPairSpecification getPredefinedMetricPairSpecification() const;
    void setPredefinedMetricPairSpecification(const OAIPredictiveScalingMetricSpecification_PredefinedMetricPairSpecification &predefined_metric_pair_specification);
    bool is_predefined_metric_pair_specification_Set() const;
    bool is_predefined_metric_pair_specification_Valid() const;

    OAIPredictiveScalingMetricSpecification_PredefinedScalingMetricSpecification getPredefinedScalingMetricSpecification() const;
    void setPredefinedScalingMetricSpecification(const OAIPredictiveScalingMetricSpecification_PredefinedScalingMetricSpecification &predefined_scaling_metric_specification);
    bool is_predefined_scaling_metric_specification_Set() const;
    bool is_predefined_scaling_metric_specification_Valid() const;

    OAIPredictiveScalingMetricSpecification_PredefinedLoadMetricSpecification getPredefinedLoadMetricSpecification() const;
    void setPredefinedLoadMetricSpecification(const OAIPredictiveScalingMetricSpecification_PredefinedLoadMetricSpecification &predefined_load_metric_specification);
    bool is_predefined_load_metric_specification_Set() const;
    bool is_predefined_load_metric_specification_Valid() const;

    OAIPredictiveScalingMetricSpecification_CustomizedScalingMetricSpecification getCustomizedScalingMetricSpecification() const;
    void setCustomizedScalingMetricSpecification(const OAIPredictiveScalingMetricSpecification_CustomizedScalingMetricSpecification &customized_scaling_metric_specification);
    bool is_customized_scaling_metric_specification_Set() const;
    bool is_customized_scaling_metric_specification_Valid() const;

    OAIPredictiveScalingMetricSpecification_CustomizedLoadMetricSpecification getCustomizedLoadMetricSpecification() const;
    void setCustomizedLoadMetricSpecification(const OAIPredictiveScalingMetricSpecification_CustomizedLoadMetricSpecification &customized_load_metric_specification);
    bool is_customized_load_metric_specification_Set() const;
    bool is_customized_load_metric_specification_Valid() const;

    OAIPredictiveScalingMetricSpecification_CustomizedCapacityMetricSpecification getCustomizedCapacityMetricSpecification() const;
    void setCustomizedCapacityMetricSpecification(const OAIPredictiveScalingMetricSpecification_CustomizedCapacityMetricSpecification &customized_capacity_metric_specification);
    bool is_customized_capacity_metric_specification_Set() const;
    bool is_customized_capacity_metric_specification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_target_value;
    bool m_target_value_isSet;
    bool m_target_value_isValid;

    OAIPredictiveScalingMetricSpecification_PredefinedMetricPairSpecification m_predefined_metric_pair_specification;
    bool m_predefined_metric_pair_specification_isSet;
    bool m_predefined_metric_pair_specification_isValid;

    OAIPredictiveScalingMetricSpecification_PredefinedScalingMetricSpecification m_predefined_scaling_metric_specification;
    bool m_predefined_scaling_metric_specification_isSet;
    bool m_predefined_scaling_metric_specification_isValid;

    OAIPredictiveScalingMetricSpecification_PredefinedLoadMetricSpecification m_predefined_load_metric_specification;
    bool m_predefined_load_metric_specification_isSet;
    bool m_predefined_load_metric_specification_isValid;

    OAIPredictiveScalingMetricSpecification_CustomizedScalingMetricSpecification m_customized_scaling_metric_specification;
    bool m_customized_scaling_metric_specification_isSet;
    bool m_customized_scaling_metric_specification_isValid;

    OAIPredictiveScalingMetricSpecification_CustomizedLoadMetricSpecification m_customized_load_metric_specification;
    bool m_customized_load_metric_specification_isSet;
    bool m_customized_load_metric_specification_isValid;

    OAIPredictiveScalingMetricSpecification_CustomizedCapacityMetricSpecification m_customized_capacity_metric_specification;
    bool m_customized_capacity_metric_specification_isSet;
    bool m_customized_capacity_metric_specification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPredictiveScalingMetricSpecification)

#endif // OAIPredictiveScalingMetricSpecification_H
