/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeWarmPoolAnswer_WarmPoolConfiguration.h
 *
 * 
 */

#ifndef OAIDescribeWarmPoolAnswer_WarmPoolConfiguration_H
#define OAIDescribeWarmPoolAnswer_WarmPoolConfiguration_H

#include <QJsonObject>

#include "OAIWarmPoolConfiguration_InstanceReusePolicy.h"
#include "OAIWarmPoolState.h"
#include "OAIWarmPoolStatus.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWarmPoolConfiguration_InstanceReusePolicy;

class OAIDescribeWarmPoolAnswer_WarmPoolConfiguration : public OAIObject {
public:
    OAIDescribeWarmPoolAnswer_WarmPoolConfiguration();
    OAIDescribeWarmPoolAnswer_WarmPoolConfiguration(QString json);
    ~OAIDescribeWarmPoolAnswer_WarmPoolConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxGroupPreparedCapacity() const;
    void setMaxGroupPreparedCapacity(const qint32 &max_group_prepared_capacity);
    bool is_max_group_prepared_capacity_Set() const;
    bool is_max_group_prepared_capacity_Valid() const;

    qint32 getMinSize() const;
    void setMinSize(const qint32 &min_size);
    bool is_min_size_Set() const;
    bool is_min_size_Valid() const;

    OAIWarmPoolState getPoolState() const;
    void setPoolState(const OAIWarmPoolState &pool_state);
    bool is_pool_state_Set() const;
    bool is_pool_state_Valid() const;

    OAIWarmPoolStatus getStatus() const;
    void setStatus(const OAIWarmPoolStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIWarmPoolConfiguration_InstanceReusePolicy getInstanceReusePolicy() const;
    void setInstanceReusePolicy(const OAIWarmPoolConfiguration_InstanceReusePolicy &instance_reuse_policy);
    bool is_instance_reuse_policy_Set() const;
    bool is_instance_reuse_policy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_group_prepared_capacity;
    bool m_max_group_prepared_capacity_isSet;
    bool m_max_group_prepared_capacity_isValid;

    qint32 m_min_size;
    bool m_min_size_isSet;
    bool m_min_size_isValid;

    OAIWarmPoolState m_pool_state;
    bool m_pool_state_isSet;
    bool m_pool_state_isValid;

    OAIWarmPoolStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIWarmPoolConfiguration_InstanceReusePolicy m_instance_reuse_policy;
    bool m_instance_reuse_policy_isSet;
    bool m_instance_reuse_policy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeWarmPoolAnswer_WarmPoolConfiguration)

#endif // OAIDescribeWarmPoolAnswer_WarmPoolConfiguration_H
