/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter.h
 *
 * &lt;p&gt;Describes the desired configuration for an instance refresh. &lt;/p&gt; &lt;p&gt;If you specify a desired configuration, you must specify either a &lt;code&gt;LaunchTemplate&lt;/code&gt; or a &lt;code&gt;MixedInstancesPolicy&lt;/code&gt;. &lt;/p&gt;
 */

#ifndef OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_H
#define OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_H

#include <QJsonObject>

#include "OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_LaunchTemplate.h"
#include "OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_MixedInstancesPolicy.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_LaunchTemplate;
class OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_MixedInstancesPolicy;

class OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter : public OAIObject {
public:
    OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter();
    OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter(QString json);
    ~OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_LaunchTemplate getLaunchTemplate() const;
    void setLaunchTemplate(const OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_LaunchTemplate &launch_template);
    bool is_launch_template_Set() const;
    bool is_launch_template_Valid() const;

    OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_MixedInstancesPolicy getMixedInstancesPolicy() const;
    void setMixedInstancesPolicy(const OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_MixedInstancesPolicy &mixed_instances_policy);
    bool is_mixed_instances_policy_Set() const;
    bool is_mixed_instances_policy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_LaunchTemplate m_launch_template;
    bool m_launch_template_isSet;
    bool m_launch_template_isValid;

    OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_MixedInstancesPolicy m_mixed_instances_policy;
    bool m_mixed_instances_policy_isSet;
    bool m_mixed_instances_policy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter)

#endif // OAIGET_StartInstanceRefresh_DesiredConfiguration_parameter_H
