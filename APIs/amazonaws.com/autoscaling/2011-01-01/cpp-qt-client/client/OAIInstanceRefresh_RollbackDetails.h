/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceRefresh_RollbackDetails.h
 *
 * 
 */

#ifndef OAIInstanceRefresh_RollbackDetails_H
#define OAIInstanceRefresh_RollbackDetails_H

#include <QJsonObject>

#include "OAIRollbackDetails_ProgressDetailsOnRollback.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRollbackDetails_ProgressDetailsOnRollback;

class OAIInstanceRefresh_RollbackDetails : public OAIObject {
public:
    OAIInstanceRefresh_RollbackDetails();
    OAIInstanceRefresh_RollbackDetails(QString json);
    ~OAIInstanceRefresh_RollbackDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRollbackReason() const;
    void setRollbackReason(const QString &rollback_reason);
    bool is_rollback_reason_Set() const;
    bool is_rollback_reason_Valid() const;

    QDateTime getRollbackStartTime() const;
    void setRollbackStartTime(const QDateTime &rollback_start_time);
    bool is_rollback_start_time_Set() const;
    bool is_rollback_start_time_Valid() const;

    qint32 getPercentageCompleteOnRollback() const;
    void setPercentageCompleteOnRollback(const qint32 &percentage_complete_on_rollback);
    bool is_percentage_complete_on_rollback_Set() const;
    bool is_percentage_complete_on_rollback_Valid() const;

    qint32 getInstancesToUpdateOnRollback() const;
    void setInstancesToUpdateOnRollback(const qint32 &instances_to_update_on_rollback);
    bool is_instances_to_update_on_rollback_Set() const;
    bool is_instances_to_update_on_rollback_Valid() const;

    OAIRollbackDetails_ProgressDetailsOnRollback getProgressDetailsOnRollback() const;
    void setProgressDetailsOnRollback(const OAIRollbackDetails_ProgressDetailsOnRollback &progress_details_on_rollback);
    bool is_progress_details_on_rollback_Set() const;
    bool is_progress_details_on_rollback_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_rollback_reason;
    bool m_rollback_reason_isSet;
    bool m_rollback_reason_isValid;

    QDateTime m_rollback_start_time;
    bool m_rollback_start_time_isSet;
    bool m_rollback_start_time_isValid;

    qint32 m_percentage_complete_on_rollback;
    bool m_percentage_complete_on_rollback_isSet;
    bool m_percentage_complete_on_rollback_isValid;

    qint32 m_instances_to_update_on_rollback;
    bool m_instances_to_update_on_rollback_isSet;
    bool m_instances_to_update_on_rollback_isValid;

    OAIRollbackDetails_ProgressDetailsOnRollback m_progress_details_on_rollback;
    bool m_progress_details_on_rollback_isSet;
    bool m_progress_details_on_rollback_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceRefresh_RollbackDetails)

#endif // OAIInstanceRefresh_RollbackDetails_H
