/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPredictiveScalingForecastAnswer.h
 *
 * 
 */

#ifndef OAIGetPredictiveScalingForecastAnswer_H
#define OAIGetPredictiveScalingForecastAnswer_H

#include <QJsonObject>

#include "OAIGetPredictiveScalingForecastAnswer_CapacityForecast.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetPredictiveScalingForecastAnswer_CapacityForecast;

class OAIGetPredictiveScalingForecastAnswer : public OAIObject {
public:
    OAIGetPredictiveScalingForecastAnswer();
    OAIGetPredictiveScalingForecastAnswer(QString json);
    ~OAIGetPredictiveScalingForecastAnswer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getLoadForecast() const;
    void setLoadForecast(const QList &load_forecast);
    bool is_load_forecast_Set() const;
    bool is_load_forecast_Valid() const;

    OAIGetPredictiveScalingForecastAnswer_CapacityForecast getCapacityForecast() const;
    void setCapacityForecast(const OAIGetPredictiveScalingForecastAnswer_CapacityForecast &capacity_forecast);
    bool is_capacity_forecast_Set() const;
    bool is_capacity_forecast_Valid() const;

    QDateTime getUpdateTime() const;
    void setUpdateTime(const QDateTime &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_load_forecast;
    bool m_load_forecast_isSet;
    bool m_load_forecast_isValid;

    OAIGetPredictiveScalingForecastAnswer_CapacityForecast m_capacity_forecast;
    bool m_capacity_forecast_isSet;
    bool m_capacity_forecast_isValid;

    QDateTime m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPredictiveScalingForecastAnswer)

#endif // OAIGetPredictiveScalingForecastAnswer_H
