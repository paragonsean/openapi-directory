/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeWarmPoolAnswer.h
 *
 * 
 */

#ifndef OAIDescribeWarmPoolAnswer_H
#define OAIDescribeWarmPoolAnswer_H

#include <QJsonObject>

#include "OAIDescribeWarmPoolAnswer_WarmPoolConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeWarmPoolAnswer_WarmPoolConfiguration;

class OAIDescribeWarmPoolAnswer : public OAIObject {
public:
    OAIDescribeWarmPoolAnswer();
    OAIDescribeWarmPoolAnswer(QString json);
    ~OAIDescribeWarmPoolAnswer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDescribeWarmPoolAnswer_WarmPoolConfiguration getWarmPoolConfiguration() const;
    void setWarmPoolConfiguration(const OAIDescribeWarmPoolAnswer_WarmPoolConfiguration &warm_pool_configuration);
    bool is_warm_pool_configuration_Set() const;
    bool is_warm_pool_configuration_Valid() const;

    QList getInstances() const;
    void setInstances(const QList &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDescribeWarmPoolAnswer_WarmPoolConfiguration m_warm_pool_configuration;
    bool m_warm_pool_configuration_isSet;
    bool m_warm_pool_configuration_isValid;

    QList m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeWarmPoolAnswer)

#endif // OAIDescribeWarmPoolAnswer_H
