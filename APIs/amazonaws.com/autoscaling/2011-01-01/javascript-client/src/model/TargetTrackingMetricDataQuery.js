/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TargetTrackingMetricDataQueryMetricStat from './TargetTrackingMetricDataQueryMetricStat';

/**
 * The TargetTrackingMetricDataQuery model module.
 * @module model/TargetTrackingMetricDataQuery
 * @version 2011-01-01
 */
class TargetTrackingMetricDataQuery {
    /**
     * Constructs a new <code>TargetTrackingMetricDataQuery</code>.
     * The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
     * @alias module:model/TargetTrackingMetricDataQuery
     * @param id {String} 
     */
    constructor(id) { 
        
        TargetTrackingMetricDataQuery.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['Id'] = id;
    }

    /**
     * Constructs a <code>TargetTrackingMetricDataQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TargetTrackingMetricDataQuery} obj Optional instance to populate.
     * @return {module:model/TargetTrackingMetricDataQuery} The populated <code>TargetTrackingMetricDataQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TargetTrackingMetricDataQuery();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Expression')) {
                obj['Expression'] = ApiClient.convertToType(data['Expression'], 'String');
            }
            if (data.hasOwnProperty('MetricStat')) {
                obj['MetricStat'] = TargetTrackingMetricDataQueryMetricStat.constructFromObject(data['MetricStat']);
            }
            if (data.hasOwnProperty('Label')) {
                obj['Label'] = ApiClient.convertToType(data['Label'], 'String');
            }
            if (data.hasOwnProperty('ReturnData')) {
                obj['ReturnData'] = ApiClient.convertToType(data['ReturnData'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TargetTrackingMetricDataQuery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TargetTrackingMetricDataQuery</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TargetTrackingMetricDataQuery.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Expression`
        if (data['Expression']) { // data not null
          String.validateJSON(data['Expression']);
        }
        // validate the optional field `MetricStat`
        if (data['MetricStat']) { // data not null
          TargetTrackingMetricDataQueryMetricStat.validateJSON(data['MetricStat']);
        }
        // validate the optional field `Label`
        if (data['Label']) { // data not null
          String.validateJSON(data['Label']);
        }
        // validate the optional field `ReturnData`
        if (data['ReturnData']) { // data not null
          Boolean.validateJSON(data['ReturnData']);
        }

        return true;
    }


}

TargetTrackingMetricDataQuery.RequiredProperties = ["Id"];

/**
 * @member {String} Id
 */
TargetTrackingMetricDataQuery.prototype['Id'] = undefined;

/**
 * @member {String} Expression
 */
TargetTrackingMetricDataQuery.prototype['Expression'] = undefined;

/**
 * @member {module:model/TargetTrackingMetricDataQueryMetricStat} MetricStat
 */
TargetTrackingMetricDataQuery.prototype['MetricStat'] = undefined;

/**
 * @member {String} Label
 */
TargetTrackingMetricDataQuery.prototype['Label'] = undefined;

/**
 * @member {Boolean} ReturnData
 */
TargetTrackingMetricDataQuery.prototype['ReturnData'] = undefined;






export default TargetTrackingMetricDataQuery;

