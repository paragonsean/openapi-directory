/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnabledMetric model module.
 * @module model/EnabledMetric
 * @version 2011-01-01
 */
class EnabledMetric {
    /**
     * Constructs a new <code>EnabledMetric</code>.
     * Describes an enabled Auto Scaling group metric.
     * @alias module:model/EnabledMetric
     */
    constructor() { 
        
        EnabledMetric.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnabledMetric</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnabledMetric} obj Optional instance to populate.
     * @return {module:model/EnabledMetric} The populated <code>EnabledMetric</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnabledMetric();

            if (data.hasOwnProperty('Metric')) {
                obj['Metric'] = ApiClient.convertToType(data['Metric'], 'String');
            }
            if (data.hasOwnProperty('Granularity')) {
                obj['Granularity'] = ApiClient.convertToType(data['Granularity'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnabledMetric</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnabledMetric</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Metric`
        if (data['Metric']) { // data not null
          String.validateJSON(data['Metric']);
        }
        // validate the optional field `Granularity`
        if (data['Granularity']) { // data not null
          String.validateJSON(data['Granularity']);
        }

        return true;
    }


}



/**
 * @member {String} Metric
 */
EnabledMetric.prototype['Metric'] = undefined;

/**
 * @member {String} Granularity
 */
EnabledMetric.prototype['Granularity'] = undefined;






export default EnabledMetric;

