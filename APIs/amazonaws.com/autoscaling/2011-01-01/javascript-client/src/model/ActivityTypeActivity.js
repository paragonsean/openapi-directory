/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Activity from './Activity';
import ScalingActivityStatusCode from './ScalingActivityStatusCode';

/**
 * The ActivityTypeActivity model module.
 * @module model/ActivityTypeActivity
 * @version 2011-01-01
 */
class ActivityTypeActivity {
    /**
     * Constructs a new <code>ActivityTypeActivity</code>.
     * @alias module:model/ActivityTypeActivity
     * @implements module:model/Activity
     * @param activityId {String} 
     * @param autoScalingGroupName {String} 
     * @param cause {String} 
     * @param startTime {Date} 
     * @param statusCode {module:model/ScalingActivityStatusCode} 
     */
    constructor(activityId, autoScalingGroupName, cause, startTime, statusCode) { 
        Activity.initialize(this, activityId, autoScalingGroupName, cause, startTime, statusCode);
        ActivityTypeActivity.initialize(this, activityId, autoScalingGroupName, cause, startTime, statusCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, activityId, autoScalingGroupName, cause, startTime, statusCode) { 
        obj['ActivityId'] = activityId;
        obj['AutoScalingGroupName'] = autoScalingGroupName;
        obj['Cause'] = cause;
        obj['StartTime'] = startTime;
        obj['StatusCode'] = statusCode;
    }

    /**
     * Constructs a <code>ActivityTypeActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityTypeActivity} obj Optional instance to populate.
     * @return {module:model/ActivityTypeActivity} The populated <code>ActivityTypeActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityTypeActivity();
            Activity.constructFromObject(data, obj);

            if (data.hasOwnProperty('ActivityId')) {
                obj['ActivityId'] = ApiClient.convertToType(data['ActivityId'], 'String');
            }
            if (data.hasOwnProperty('AutoScalingGroupName')) {
                obj['AutoScalingGroupName'] = ApiClient.convertToType(data['AutoScalingGroupName'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Cause')) {
                obj['Cause'] = ApiClient.convertToType(data['Cause'], 'String');
            }
            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('EndTime')) {
                obj['EndTime'] = ApiClient.convertToType(data['EndTime'], 'Date');
            }
            if (data.hasOwnProperty('StatusCode')) {
                obj['StatusCode'] = ApiClient.convertToType(data['StatusCode'], ScalingActivityStatusCode);
            }
            if (data.hasOwnProperty('StatusMessage')) {
                obj['StatusMessage'] = ApiClient.convertToType(data['StatusMessage'], 'String');
            }
            if (data.hasOwnProperty('Progress')) {
                obj['Progress'] = ApiClient.convertToType(data['Progress'], 'Number');
            }
            if (data.hasOwnProperty('Details')) {
                obj['Details'] = ApiClient.convertToType(data['Details'], 'String');
            }
            if (data.hasOwnProperty('AutoScalingGroupState')) {
                obj['AutoScalingGroupState'] = ApiClient.convertToType(data['AutoScalingGroupState'], 'String');
            }
            if (data.hasOwnProperty('AutoScalingGroupARN')) {
                obj['AutoScalingGroupARN'] = ApiClient.convertToType(data['AutoScalingGroupARN'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityTypeActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityTypeActivity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActivityTypeActivity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ActivityId`
        if (data['ActivityId']) { // data not null
          String.validateJSON(data['ActivityId']);
        }
        // validate the optional field `AutoScalingGroupName`
        if (data['AutoScalingGroupName']) { // data not null
          String.validateJSON(data['AutoScalingGroupName']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `Cause`
        if (data['Cause']) { // data not null
          String.validateJSON(data['Cause']);
        }
        // validate the optional field `StartTime`
        if (data['StartTime']) { // data not null
          Date.validateJSON(data['StartTime']);
        }
        // validate the optional field `EndTime`
        if (data['EndTime']) { // data not null
          Date.validateJSON(data['EndTime']);
        }
        // validate the optional field `StatusCode`
        if (data['StatusCode']) { // data not null
          ScalingActivityStatusCode.validateJSON(data['StatusCode']);
        }
        // validate the optional field `StatusMessage`
        if (data['StatusMessage']) { // data not null
          String.validateJSON(data['StatusMessage']);
        }
        // validate the optional field `Progress`
        if (data['Progress']) { // data not null
          Number.validateJSON(data['Progress']);
        }
        // validate the optional field `Details`
        if (data['Details']) { // data not null
          String.validateJSON(data['Details']);
        }
        // validate the optional field `AutoScalingGroupState`
        if (data['AutoScalingGroupState']) { // data not null
          String.validateJSON(data['AutoScalingGroupState']);
        }
        // validate the optional field `AutoScalingGroupARN`
        if (data['AutoScalingGroupARN']) { // data not null
          String.validateJSON(data['AutoScalingGroupARN']);
        }

        return true;
    }


}

ActivityTypeActivity.RequiredProperties = ["ActivityId", "AutoScalingGroupName", "Cause", "StartTime", "StatusCode"];

/**
 * @member {String} ActivityId
 */
ActivityTypeActivity.prototype['ActivityId'] = undefined;

/**
 * @member {String} AutoScalingGroupName
 */
ActivityTypeActivity.prototype['AutoScalingGroupName'] = undefined;

/**
 * @member {String} Description
 */
ActivityTypeActivity.prototype['Description'] = undefined;

/**
 * @member {String} Cause
 */
ActivityTypeActivity.prototype['Cause'] = undefined;

/**
 * @member {Date} StartTime
 */
ActivityTypeActivity.prototype['StartTime'] = undefined;

/**
 * @member {Date} EndTime
 */
ActivityTypeActivity.prototype['EndTime'] = undefined;

/**
 * @member {module:model/ScalingActivityStatusCode} StatusCode
 */
ActivityTypeActivity.prototype['StatusCode'] = undefined;

/**
 * @member {String} StatusMessage
 */
ActivityTypeActivity.prototype['StatusMessage'] = undefined;

/**
 * @member {Number} Progress
 */
ActivityTypeActivity.prototype['Progress'] = undefined;

/**
 * @member {String} Details
 */
ActivityTypeActivity.prototype['Details'] = undefined;

/**
 * @member {String} AutoScalingGroupState
 */
ActivityTypeActivity.prototype['AutoScalingGroupState'] = undefined;

/**
 * @member {String} AutoScalingGroupARN
 */
ActivityTypeActivity.prototype['AutoScalingGroupARN'] = undefined;


// Implement Activity interface:
/**
 * @member {String} ActivityId
 */
Activity.prototype['ActivityId'] = undefined;
/**
 * @member {String} AutoScalingGroupName
 */
Activity.prototype['AutoScalingGroupName'] = undefined;
/**
 * @member {String} Description
 */
Activity.prototype['Description'] = undefined;
/**
 * @member {String} Cause
 */
Activity.prototype['Cause'] = undefined;
/**
 * @member {Date} StartTime
 */
Activity.prototype['StartTime'] = undefined;
/**
 * @member {Date} EndTime
 */
Activity.prototype['EndTime'] = undefined;
/**
 * @member {module:model/ScalingActivityStatusCode} StatusCode
 */
Activity.prototype['StatusCode'] = undefined;
/**
 * @member {String} StatusMessage
 */
Activity.prototype['StatusMessage'] = undefined;
/**
 * @member {Number} Progress
 */
Activity.prototype['Progress'] = undefined;
/**
 * @member {String} Details
 */
Activity.prototype['Details'] = undefined;
/**
 * @member {String} AutoScalingGroupState
 */
Activity.prototype['AutoScalingGroupState'] = undefined;
/**
 * @member {String} AutoScalingGroupARN
 */
Activity.prototype['AutoScalingGroupARN'] = undefined;




export default ActivityTypeActivity;

