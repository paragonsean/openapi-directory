/**
 * Auto Scaling
 * <fullname>Amazon EC2 Auto Scaling</fullname> <p>Amazon EC2 Auto Scaling is designed to automatically launch and terminate EC2 instances based on user-defined scaling policies, scheduled actions, and health checks.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/\">Amazon EC2 Auto Scaling User Guide</a> and the <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/APIReference/Welcome.html\">Amazon EC2 Auto Scaling API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2011-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LaunchTemplateOverridesInstanceRequirements from './LaunchTemplateOverridesInstanceRequirements';
import LaunchTemplateOverridesLaunchTemplateSpecification from './LaunchTemplateOverridesLaunchTemplateSpecification';

/**
 * The LaunchTemplateOverrides model module.
 * @module model/LaunchTemplateOverrides
 * @version 2011-01-01
 */
class LaunchTemplateOverrides {
    /**
     * Constructs a new <code>LaunchTemplateOverrides</code>.
     * &lt;p&gt;Use this structure to let Amazon EC2 Auto Scaling do the following when the Auto Scaling group has a mixed instances policy:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Override the instance type that is specified in the launch template.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use multiple instance types.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Specify the instance types that you want, or define your instance requirements instead and let Amazon EC2 Auto Scaling provision the available instance types that meet your requirements. This can provide Amazon EC2 Auto Scaling with a larger selection of instance types to choose from when fulfilling Spot and On-Demand capacities. You can view which instance types are matched before you apply the instance requirements to your Auto Scaling group.&lt;/p&gt; &lt;p&gt;After you define your instance requirements, you don&#39;t have to keep updating these settings to get new EC2 instance types automatically. Amazon EC2 Auto Scaling uses the instance requirements of the Auto Scaling group to determine whether a new EC2 instance type can be used.&lt;/p&gt;
     * @alias module:model/LaunchTemplateOverrides
     */
    constructor() { 
        
        LaunchTemplateOverrides.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LaunchTemplateOverrides</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LaunchTemplateOverrides} obj Optional instance to populate.
     * @return {module:model/LaunchTemplateOverrides} The populated <code>LaunchTemplateOverrides</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LaunchTemplateOverrides();

            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], 'String');
            }
            if (data.hasOwnProperty('WeightedCapacity')) {
                obj['WeightedCapacity'] = ApiClient.convertToType(data['WeightedCapacity'], 'String');
            }
            if (data.hasOwnProperty('LaunchTemplateSpecification')) {
                obj['LaunchTemplateSpecification'] = LaunchTemplateOverridesLaunchTemplateSpecification.constructFromObject(data['LaunchTemplateSpecification']);
            }
            if (data.hasOwnProperty('InstanceRequirements')) {
                obj['InstanceRequirements'] = LaunchTemplateOverridesInstanceRequirements.constructFromObject(data['InstanceRequirements']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LaunchTemplateOverrides</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LaunchTemplateOverrides</code>.
     */
    static validateJSON(data) {
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          String.validateJSON(data['InstanceType']);
        }
        // validate the optional field `WeightedCapacity`
        if (data['WeightedCapacity']) { // data not null
          String.validateJSON(data['WeightedCapacity']);
        }
        // validate the optional field `LaunchTemplateSpecification`
        if (data['LaunchTemplateSpecification']) { // data not null
          LaunchTemplateOverridesLaunchTemplateSpecification.validateJSON(data['LaunchTemplateSpecification']);
        }
        // validate the optional field `InstanceRequirements`
        if (data['InstanceRequirements']) { // data not null
          LaunchTemplateOverridesInstanceRequirements.validateJSON(data['InstanceRequirements']);
        }

        return true;
    }


}



/**
 * @member {String} InstanceType
 */
LaunchTemplateOverrides.prototype['InstanceType'] = undefined;

/**
 * @member {String} WeightedCapacity
 */
LaunchTemplateOverrides.prototype['WeightedCapacity'] = undefined;

/**
 * @member {module:model/LaunchTemplateOverridesLaunchTemplateSpecification} LaunchTemplateSpecification
 */
LaunchTemplateOverrides.prototype['LaunchTemplateSpecification'] = undefined;

/**
 * @member {module:model/LaunchTemplateOverridesInstanceRequirements} InstanceRequirements
 */
LaunchTemplateOverrides.prototype['InstanceRequirements'] = undefined;






export default LaunchTemplateOverrides;

